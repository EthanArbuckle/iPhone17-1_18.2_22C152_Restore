uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroyTm()
{
  long long v8 = *(_OWORD *)(v0 + 32);
  uint64_t v1 = type metadata accessor for CanvasLayoutReader();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + *(int *)(v1 + 68);
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, void))(*(void *)(v8 - 8) + 8))(v5 + *(int *)(v6 + 68), v8);
  sub_24EE56B70();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + *(int *)(v1 + 72));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  long long v11 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = (int *)type metadata accessor for LargeBrickView();
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*((void *)v3 - 1) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v3 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4, v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v4 + v3[17], v2);
  (*(void (**)(uint64_t))(*(void *)(v11 - 8) + 8))(v4 + v3[18]);
  uint64_t v5 = v4 + v3[19];
  if (*(void *)(v5 + 24))
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v4 + v3[20];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + v3[21];
  if (*(void *)(v8 + 24))
  {
    sub_24EC8AAA0(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v3[22];
  if (*(void *)(v9 + 24))
  {
    sub_24EC8AAA0(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = type metadata accessor for HeightReader();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2 + *(int *)(v1 + 64));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for VerticalGridView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  long long v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[67]]);
  v14 = &v5[v4[68]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  v16 = &v5[v4[69]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v18 = &v5[v4[70]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  v20 = &v5[v4[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v22 = &v5[v4[72]];
  swift_release();
  v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  v25 = &v5[v4[73]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  v27 = &v5[v4[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  v29 = &v5[v4[75]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  v33 = &v5[v4[76]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  v34 = &v5[v4[77]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  v37 = &v5[v4[78]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = (int *)type metadata accessor for CarouselView();
  uint64_t v30 = *(unsigned __int8 *)(*((void *)v3 - 1) + 80);
  uint64_t v4 = v0 + ((v30 + 208) & ~v30);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + v3[54];
  uint64_t v6 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v1);
  }
  uint64_t v7 = v4 + v3[55];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v7 + *(int *)(v8 + 68), v2);
  uint64_t v9 = v4 + v3[58];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v4 + v3[59];
  uint64_t v12 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v4 + v3[60];
  uint64_t v14 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v4 + v3[61];
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v4 + v3[62];
  swift_getTupleTypeMetadata3();
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v4 + v3[63];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v21 = *(void *)(v20 - 8);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  uint64_t v23 = v4 + v3[64];
  if (!v22(v23, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  }
  uint64_t v24 = v4 + v3[65];
  uint64_t v25 = sub_24EE55A60();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  sub_24ED32A64(*(void *)(v4 + v3[66]), *(void *)(v4 + v3[66] + 8), *(unsigned char *)(v4 + v3[66] + 16));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v27 = v4 + v3[70];
  uint64_t v28 = sub_24EE55940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = type metadata accessor for DescriptionView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24EE55D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 60);
  uint64_t v7 = sub_24EE55960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for CanvasLayout();
  swift_getTupleTypeMetadata3();
  uint64_t v3 = sub_24EE559E0();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v6 + *(int *)(v2 + 68), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v15 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)type metadata accessor for StandardHorizontalStackView();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v2[14], v1);
  uint64_t v6 = v4 + v2[15];
  if (*(void *)(v6 + 24))
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v4 + v2[16];
  if (*(void *)(v7 + 24))
  {
    sub_24EC8AAA0(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v4 + v2[17];
  if (*(void *)(v8 + 24))
  {
    sub_24EC8AAA0(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v2[18];
  if (*(void *)(v9 + 24))
  {
    sub_24EC8AAA0(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v4 + v2[19];
  uint64_t v11 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, void))(v11 + 48))(v10, 1, v15)) {
    (*(void (**)(uint64_t, void))(v11 + 8))(v10, v15);
  }
  uint64_t v12 = v4 + v2[20];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for DynamicBrickView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  uint64_t v4 = v3 + v2[9];
  if (*(void *)(v4 + 24))
  {
    sub_24EC8AAA0(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v3 + v2[12];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v2[13];
  if (*(void *)(v7 + 24))
  {
    sub_24EC8AAA0(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for OrthogonalView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    uint64_t v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[67]]);
  uint64_t v14 = &v5[v4[68]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[69]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[70]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v22 = &v5[v4[72]];
  swift_release();
  uint64_t v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = &v5[v4[73]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v5[v4[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  v29 = &v5[v4[75]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  v33 = &v5[v4[76]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  v34 = &v5[v4[77]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  v37 = &v5[v4[78]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  long long v3 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = *(void *)(type metadata accessor for MagicPocketViewModifier() - 8);
  (*(void (**)(unint64_t))(*(void *)(v3 - 8) + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for WideBrickView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  uint64_t v4 = v3 + v2[9];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v3 + v2[10];
  if (*(void *)(v6 + 24))
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v3 + v2[11];
  if (*(void *)(v7 + 24))
  {
    sub_24EC8AAA0(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  long long v13 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = (int *)type metadata accessor for ActionCardView();
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*((void *)v3 - 1) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v3 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v4 + v3[17], v2);
  uint64_t v5 = v4 + v3[18];
  if (*(void *)(v5 + 24))
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v4 + v3[19];
  if (*(void *)(v6 + 24))
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v4 + v3[20];
  if (*(void *)(v7 + 24))
  {
    sub_24EC8AAA0(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v3[22], v1);
  uint64_t v8 = v4 + v3[23];
  uint64_t v9 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, void))(v9 + 48))(v8, 1, v13)) {
    (*(void (**)(uint64_t, void))(v9 + 8))(v8, v13);
  }
  uint64_t v10 = v4 + v3[24];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for HorizontalGridView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    uint64_t v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[68]]);
  uint64_t v14 = &v5[v4[69]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[70]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[71]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[72]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v22 = &v5[v4[73]];
  swift_release();
  uint64_t v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = &v5[v4[74]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v5[v4[75]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  v29 = &v5[v4[76]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  v33 = &v5[v4[77]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  v34 = &v5[v4[78]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  v37 = &v5[v4[79]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for ListView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    uint64_t v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[67]]);
  uint64_t v14 = &v5[v4[68]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[69]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[70]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v22 = &v5[v4[72]];
  swift_release();
  uint64_t v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = &v5[v4[73]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v5[v4[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  v29 = &v5[v4[75]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  v33 = &v5[v4[76]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  v34 = &v5[v4[77]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  v37 = &v5[v4[78]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v1 = (int *)(type metadata accessor for CanvasContainerView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 304) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[79];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata3();
  uint64_t v4 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[80];
  uint64_t v6 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v2 + v1[81];
  uint64_t v8 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v2 + v1[82];
  uint64_t v10 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v2 + v1[83];
  swift_release();
  uint64_t v12 = v11 + *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v13 = sub_24EE55A00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v2 + v1[84];
  sub_24EE559B0();
  uint64_t v15 = type metadata accessor for CanvasLayout();
  swift_getTupleTypeMetadata3();
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
  uint64_t v17 = v2 + v1[85];
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v2 + v1[86];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v19 + *(int *)(v15 + 68), v28);
  uint64_t v20 = v2 + v1[87];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966D58);
  v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  v22(v20, v21);
  v22(v2 + v1[88], v21);
  uint64_t v23 = v2 + v1[89];
  uint64_t v24 = sub_24EE55A60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  swift_release();
  uint64_t v25 = v2 + v1[91];
  uint64_t v26 = sub_24EE55940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  return swift_deallocObject();
}

uint64_t initializeBufferWithCopyOfBuffer for ContentMargins(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ContentMargins(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ContentMargins(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicBrickViewLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DynamicBrickViewLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_24EC8801C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_24EE56C90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE1E8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE290);
  MEMORY[0x270FA5388](v40);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE2C8);
  MEMORY[0x270FA5388](v43);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (uint64_t)&v40 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE350);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v42)
  {
    sub_24EE56C80();
    int v18 = sub_24EE56330();
    v42 = a1;
    int v19 = v18;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
    *(_DWORD *)&v8[*(int *)(v6 + 36)] = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    LOBYTE(v19) = sub_24EE564F0();
    sub_24EE55AD0();
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    sub_24EC884D4((uint64_t)v8, (uint64_t)v10, &qword_26B1DE1E8);
    uint64_t v28 = &v10[*(int *)(v40 + 36)];
    *uint64_t v28 = v19;
    *((void *)v28 + 1) = v21;
    *((void *)v28 + 2) = v23;
    *((void *)v28 + 3) = v25;
    *((void *)v28 + 4) = v27;
    v28[40] = 0;
    sub_24EC88758((uint64_t)v8, &qword_26B1DE1E8);
    LOBYTE(v19) = sub_24EE56510();
    sub_24EE55AD0();
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    sub_24EC884D4((uint64_t)v10, (uint64_t)v12, &qword_26B1DE290);
    v37 = &v12[*(int *)(v43 + 36)];
    char *v37 = v19;
    *((void *)v37 + 1) = v30;
    *((void *)v37 + 2) = v32;
    *((void *)v37 + 3) = v34;
    *((void *)v37 + 4) = v36;
    v37[40] = 0;
    sub_24EC88758((uint64_t)v10, &qword_26B1DE290);
    uint64_t v38 = v41;
    sub_24EC8846C((uint64_t)v12, v41);
    sub_24EC884D4(v38, (uint64_t)v17, &qword_26B1DE2C8);
    swift_storeEnumTagMultiPayload();
    sub_24EC885A8(&qword_26B1DE2C0, &qword_26B1DE2C8, (void (*)(void))sub_24EC88580);
    sub_24EE56230();
    return sub_24EC88758(v38, &qword_26B1DE2C8);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_24EC885A8(&qword_26B1DE2C0, &qword_26B1DE2C8, (void (*)(void))sub_24EC88580);
    return sub_24EE56230();
  }
}

uint64_t sub_24EC8846C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EC884D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24EC88580()
{
  return sub_24EC885A8(&qword_26B1DE288, &qword_26B1DE290, (void (*)(void))sub_24EC88628);
}

uint64_t sub_24EC885A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EC88628()
{
  unint64_t result = qword_26B1DE1E0;
  if (!qword_26B1DE1E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1E8);
    sub_24EC886A4();
    sub_24EC886FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE1E0);
  }
  return result;
}

unint64_t sub_24EC886A4()
{
  unint64_t result = qword_26B1DE490;
  if (!qword_26B1DE490)
  {
    sub_24EE56C90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE490);
  }
  return result;
}

unint64_t sub_24EC886FC()
{
  unint64_t result = qword_26B1DE3C0;
  if (!qword_26B1DE3C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE3C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE3C0);
  }
  return result;
}

uint64_t sub_24EC88758(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_24EC887DC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

double MonogramVerticalStackViewLayout.artworkAspectRatio.getter()
{
  return *(double *)v0;
}

double MonogramVerticalStackViewLayout.artworkToTitleSpacing.getter()
{
  return *(double *)(v0 + 16);
}

FitnessCanvasUI::MonogramVerticalStackViewLayout __swiftcall MonogramVerticalStackViewLayout.init(artworkAspectRatio:artworkToTitleSpacing:)(CGSize artworkAspectRatio, Swift::Double artworkToTitleSpacing)
{
  *uint64_t v2 = artworkAspectRatio.width;
  v2[1] = artworkAspectRatio.height;
  v2[2] = artworkToTitleSpacing;
  result.artworkAspectRatio.height = artworkAspectRatio.height;
  result.artworkAspectRatio.width = artworkAspectRatio.width;
  result.artworkToTitleSpacing = artworkToTitleSpacing;
  return result;
}

BOOL sub_24EC88848(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EC88860()
{
  return sub_24EE578B0();
}

uint64_t sub_24EC888A8()
{
  return sub_24EE57880();
}

uint64_t sub_24EC888D4()
{
  return sub_24EE578B0();
}

unint64_t sub_24EC88918()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_24EC88958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC8BBE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EC88980()
{
  return 0;
}

void sub_24EC8898C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24EC88998(uint64_t a1)
{
  unint64_t v2 = sub_24EC88C54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EC889D4(uint64_t a1)
{
  unint64_t v2 = sub_24EC88C54();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_24EC88A10()
{
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_269964918 = (__int128)result;
  qword_269964928 = 0x4014000000000000;
  return result;
}

double static MonogramVerticalStackViewLayout.default.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_2699648D0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_269964928;
  *(_OWORD *)a1 = xmmword_269964918;
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t MonogramVerticalStackViewLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964930);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EC88C54();
  sub_24EE578D0();
  v11[0] = v8;
  v11[1] = v9;
  char v12 = 0;
  type metadata accessor for CGSize(0);
  sub_24EC8BCD4(&qword_26B1DE588, type metadata accessor for CGSize);
  sub_24EE577B0();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_24EE57790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EC88C54()
{
  unint64_t result = qword_269964938;
  if (!qword_269964938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964938);
  }
  return result;
}

uint64_t MonogramVerticalStackViewLayout.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964940);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EC88C54();
  sub_24EE578C0();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    v14[15] = 0;
    sub_24EC8BCD4(&qword_269964948, type metadata accessor for CGSize);
    sub_24EE57710();
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    LOBYTE(v15) = 1;
    sub_24EE576F0();
    uint64_t v12 = v11;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EC88EAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MonogramVerticalStackViewLayout.init(from:)(a1, a2);
}

uint64_t sub_24EC88EC4(void *a1)
{
  return MonogramVerticalStackViewLayout.encode(to:)(a1);
}

uint64_t MonogramVerticalStackViewLayout.hash(into:)()
{
  return sub_24EE578A0();
}

BOOL static MonogramVerticalStackViewLayout.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t MonogramVerticalStackViewLayout.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24EC88FE0()
{
  return sub_24EE578A0();
}

uint64_t sub_24EC8901C()
{
  return sub_24EE578B0();
}

BOOL sub_24EC89080(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_24EC890B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = *(void *)(a1 + 16);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(void *)(a9 + 16) = v19;
  uint64_t v20 = (int *)type metadata accessor for MonogramVerticalStackView();
  uint64_t v21 = (void *)(a9 + v20[10]);
  *uint64_t v21 = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  uint64_t v22 = (void *)(a9 + v20[11]);
  void *v22 = a7;
  v22[1] = a8;
  v22[2] = a10;
  v22[3] = a11;
  uint64_t v23 = a9 + v20[12];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a12, v24);
  uint64_t v25 = a9 + v20[9];
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32);
  return v26(v25, a2, a13);
}

uint64_t sub_24EC891F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v66 = a2;
  uint64_t v5 = sub_24EE55E40();
  uint64_t v49 = v5;
  uint64_t v65 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v64 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EE55F00();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v61 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 - 8);
  uint64_t v60 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = *(void *)(a1 + 16);
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE060);
  uint64_t v76 = sub_24EE55DD0();
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964980);
  uint64_t v79 = v78;
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE388);
  uint64_t v13 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v75 = MEMORY[0x263F18860];
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_24EC8C218(&qword_26B1DE380, &qword_26B1DE388);
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  uint64_t v56 = v13;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v16 = sub_24EE56BA0();
  uint64_t v58 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  v54 = (char *)&v45 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964988);
  uint64_t v50 = v16;
  uint64_t v18 = sub_24EE55DD0();
  uint64_t v57 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v51 = (char *)&v45 - v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v45 = v20;
  uint64_t v21 = sub_24EC8C218(&qword_269964990, &qword_269964988);
  uint64_t v70 = v20;
  uint64_t v71 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v48 = v22;
  uint64_t v47 = sub_24EC8BCD4(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v76 = v18;
  uint64_t v77 = v5;
  uint64_t v78 = v22;
  uint64_t v79 = v47;
  uint64_t v52 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v53 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  v46 = (char *)&v45 - v27;
  uint64_t v28 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v3, a1);
  unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = a1;
  uint64_t v32 = *(void *)(a1 + 24);
  uint64_t v33 = v59;
  *(void *)(v30 + 16) = v59;
  *(void *)(v30 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v30 + v29, v28, v31);
  uint64_t v67 = v33;
  uint64_t v68 = v32;
  uint64_t v69 = v3;
  uint64_t v34 = v54;
  sub_24EE56B90();
  uint64_t v35 = v61;
  sub_24EE55EF0();
  uint64_t v36 = v51;
  uint64_t v37 = v50;
  sub_24EE56840();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v63);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v37);
  uint64_t v38 = v64;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v39 = v49;
  uint64_t v40 = v48;
  uint64_t v41 = v47;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v18);
  uint64_t v76 = v18;
  uint64_t v77 = v39;
  uint64_t v78 = v40;
  uint64_t v79 = v41;
  swift_getOpaqueTypeConformance2();
  v42 = v46;
  sub_24EC90894(v26);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v53 + 8);
  v43(v26, OpaqueTypeMetadata2);
  sub_24EC90894(v42);
  return ((uint64_t (*)(char *, uint64_t))v43)(v42, OpaqueTypeMetadata2);
}

uint64_t sub_24EC89A30()
{
  return sub_24EE55A40();
}

uint64_t sub_24EC89A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE060);
  uint64_t v35 = sub_24EE55DD0();
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964980);
  uint64_t v38 = v37;
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v5 = sub_24EE56C30();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE388);
  uint64_t v11 = sub_24EE55DD0();
  uint64_t v24 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  sub_24EE56130();
  uint64_t v28 = a2;
  uint64_t v29 = v26;
  uint64_t v30 = v25;
  sub_24EE56C20();
  sub_24EE56D80();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56970();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  uint64_t v33 = WitnessTable;
  uint64_t v34 = MEMORY[0x263F18860];
  uint64_t v18 = swift_getWitnessTable();
  sub_24EC8BF38();
  sub_24EE56790();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  uint64_t v19 = sub_24EC8C218(&qword_26B1DE380, &qword_26B1DE388);
  uint64_t v31 = v18;
  uint64_t v32 = v19;
  swift_getWitnessTable();
  sub_24EC90894(v14);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v24 + 8);
  v20(v14, v11);
  sub_24EC90894(v16);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v11);
}

uint64_t sub_24EC89EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v5 = sub_24EE55DD0();
  uint64_t v74 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v41 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE060);
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v41 - v12;
  uint64_t v68 = type metadata accessor for MonogramVerticalStackView();
  sub_24EE56710();
  v106[6] = a2;
  v106[7] = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EC8BF8C();
  sub_24EE56A50();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v7, v5);
  uint64_t v15 = sub_24EC8C218(&qword_26B1DE058, &qword_26B1DE060);
  v106[4] = WitnessTable;
  v106[5] = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v70 = v13;
  uint64_t v62 = v16;
  sub_24EC90894(v11);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v69 + 8);
  uint64_t v71 = v11;
  uint64_t v74 = v8;
  uint64_t v63 = v17;
  uint64_t v64 = v69 + 8;
  v17(v11, v8);
  sub_24EE56DA0();
  uint64_t v18 = v68;
  sub_24EE55BF0();
  int v54 = v107;
  uint64_t v53 = v108;
  int v52 = v109;
  uint64_t v50 = v111;
  uint64_t v51 = v110;
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(v18 + 40));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v22 = v19[2];
  uint64_t v61 = v19[3];
  uint64_t v57 = v21;
  uint64_t v55 = v106[8];
  uint64_t v56 = v22;
  if (v61)
  {
    uint64_t v23 = v22 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v73 = 2;
    uint64_t v24 = 256;
    uint64_t v25 = v20;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t KeyPath = 0;
    uint64_t v73 = 0;
  }
  uint64_t v26 = (uint64_t *)(a1 + *(int *)(v18 + 44));
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  uint64_t v29 = v26[2];
  uint64_t v60 = v26[3];
  uint64_t v58 = v20;
  uint64_t v49 = v29;
  uint64_t v43 = v28;
  uint64_t v44 = v27;
  if (v60)
  {
    uint64_t v66 = v29 & 1;
    uint64_t v30 = swift_getKeyPath();
    uint64_t v67 = 2;
    uint64_t v68 = v30;
    uint64_t v59 = 256;
    uint64_t v31 = v27;
    uint64_t v32 = v28;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v59 = 0;
    uint64_t v68 = 0;
  }
  uint64_t v33 = v71;
  (*(void (**)(void))(v69 + 16))();
  uint64_t v98 = 0;
  char v99 = 1;
  uint64_t v100 = v55;
  char v101 = v54;
  uint64_t v102 = v53;
  char v103 = v52;
  uint64_t v104 = v51;
  uint64_t v105 = v50;
  v106[0] = v33;
  v106[1] = &v98;
  uint64_t v90 = v25;
  uint64_t v91 = v21;
  uint64_t v45 = v23;
  uint64_t v46 = v25;
  uint64_t v47 = v31;
  uint64_t v48 = v21;
  uint64_t v34 = v61;
  uint64_t v92 = v23;
  uint64_t v93 = v61;
  v41[1] = v24;
  uint64_t v42 = v32;
  uint64_t v94 = v24;
  uint64_t v95 = KeyPath;
  uint64_t v96 = v73;
  char v97 = 0;
  uint64_t v82 = v31;
  uint64_t v83 = v32;
  uint64_t v35 = v60;
  uint64_t v84 = v66;
  uint64_t v85 = v60;
  uint64_t v86 = v59;
  uint64_t v87 = v68;
  uint64_t v88 = v67;
  char v89 = 0;
  v106[2] = &v90;
  v106[3] = &v82;
  sub_24EC8BFE0(v58, v57, v56, v61);
  sub_24EC8BFE0(v44, v43, v49, v35);
  sub_24EC8C024(v25, v21, v23, v34);
  uint64_t v36 = v31;
  uint64_t v37 = v42;
  LOBYTE(v33) = v66;
  sub_24EC8C024(v36, v42, v66, v35);
  v79[0] = v74;
  v79[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE1B8);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964980);
  uint64_t v81 = v80;
  uint64_t v75 = v62;
  uint64_t v76 = sub_24EC8C1A8((unint64_t *)&qword_26B1DE1B0, &qword_26B1DE1B8);
  unint64_t v77 = sub_24EC8C074();
  unint64_t v78 = v77;
  sub_24EDCC8A0((uint64_t)v106, 4uLL, (uint64_t)v79);
  sub_24EC8C25C(v46, v48, v45, v34);
  sub_24EC8C25C(v47, v37, (char)v33, v35);
  uint64_t v38 = v74;
  uint64_t v39 = v63;
  v63(v70, v74);
  sub_24EC8C25C(v82, v83, v84, v85);
  sub_24EC8C25C(v90, v91, v92, v93);
  return v39(v71, v38);
}

uint64_t sub_24EC8A4E8()
{
  return sub_24EE567E0();
}

uint64_t sub_24EC8A508()
{
  return sub_24EE578A0();
}

unint64_t sub_24EC8A558()
{
  unint64_t result = qword_269964950;
  if (!qword_269964950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964950);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MonogramVerticalStackViewLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MonogramVerticalStackViewLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MonogramVerticalStackViewLayout()
{
  return &type metadata for MonogramVerticalStackViewLayout;
}

uint64_t sub_24EC8A608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

void sub_24EC8A610()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24EC8B890();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_24EC8A6F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  if ((v11 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v10 + 80) | v7) & 0x100000) != 0
    || ((v11
       + ((((v8 + ((v7 + 24) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 32) & ~v11)
     + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14
                   + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = v9;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v16 = (char *)a2 + v7;
    unint64_t v17 = ((unint64_t)a1 + v7 + 24) & ~(unint64_t)v7;
    unint64_t v18 = (unint64_t)(v16 + 24) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v17, v18, v5);
    unint64_t v19 = (v8 + v17) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (v8 + v18) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v20 + 24) < 0xFFFFFFFFuLL)
    {
      long long v24 = *(_OWORD *)(v20 + 16);
      *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v24;
    }
    else
    {
      uint64_t v21 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      char v23 = *(unsigned char *)(v20 + 16);
      sub_24EC8A97C(*(void *)v20, v22, v23);
      *(void *)unint64_t v19 = v21;
      *(void *)(v19 + 8) = v22;
      *(unsigned char *)(v19 + 16) = v23;
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v25 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v26 + 24) < 0xFFFFFFFFuLL)
    {
      long long v30 = *(_OWORD *)(v26 + 16);
      *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 16) = v30;
    }
    else
    {
      uint64_t v27 = *(void *)v26;
      uint64_t v28 = *(void *)(v26 + 8);
      char v29 = *(unsigned char *)(v26 + 16);
      sub_24EC8A97C(*(void *)v26, v28, v29);
      *(void *)unint64_t v25 = v27;
      *(void *)(v25 + 8) = v28;
      *(unsigned char *)(v25 + 16) = v29;
      *(void *)(v25 + 24) = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v25 + v11 + 32) & ~v11, (v26 + v11 + 32) & ~v11, v15);
  }
  return a1;
}

uint64_t sub_24EC8A97C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24EC8A98C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  unint64_t v5 = (*(void *)(v3 + 56) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v5 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v6 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 8);
  uint64_t v10 = v7;
  unint64_t v11 = (v6 + *(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return v9(v11, v10);
}

uint64_t sub_24EC8AAA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EC8AAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 24 + a1) & ~v6;
  uint64_t v8 = (v6 + 24 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v11 + 24) < 0xFFFFFFFFuLL)
  {
    long long v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v15;
  }
  else
  {
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    char v14 = *(unsigned char *)(v11 + 16);
    sub_24EC8A97C(*(void *)v11, v13, v14);
    *(void *)unint64_t v10 = v12;
    *(void *)(v10 + 8) = v13;
    *(unsigned char *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = *(void *)(v11 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v16 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v17 + 24) < 0xFFFFFFFFuLL)
  {
    long long v21 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v21;
  }
  else
  {
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_24EC8A97C(*(void *)v17, v19, v20);
    *(void *)unint64_t v16 = v18;
    *(void *)(v16 + 8) = v19;
    *(unsigned char *)(v16 + 16) = v20;
    *(void *)(v16 + 24) = *(void *)(v17 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))((v16 + *(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (v17 + *(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

void *sub_24EC8AC4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 24) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 24) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(void *)(v11 + 24);
  if (*(void *)(v10 + 24) < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      uint64_t v19 = *(void *)v11;
      uint64_t v20 = *(void *)(v11 + 8);
      char v21 = *(unsigned char *)(v11 + 16);
      sub_24EC8A97C(*(void *)v11, v20, v21);
      *(void *)unint64_t v10 = v19;
      *(void *)(v10 + 8) = v20;
      *(unsigned char *)(v10 + 16) = v21;
      *(void *)(v10 + 24) = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v12 >= 0xFFFFFFFF)
    {
      uint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      char v15 = *(unsigned char *)(v11 + 16);
      sub_24EC8A97C(*(void *)v11, v14, v15);
      uint64_t v16 = *(void *)v10;
      uint64_t v17 = *(void *)(v10 + 8);
      char v18 = *(unsigned char *)(v10 + 16);
      *(void *)unint64_t v10 = v13;
      *(void *)(v10 + 8) = v14;
      *(unsigned char *)(v10 + 16) = v15;
      sub_24EC8AAA0(v16, v17, v18);
      *(void *)(v10 + 24) = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_24EC8AAA0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    swift_bridgeObjectRelease();
  }
  long long v22 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v22;
LABEL_8:
  unint64_t v23 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = *(void *)(v24 + 24);
  if (*(void *)(v23 + 24) < 0xFFFFFFFFuLL)
  {
    if (v25 >= 0xFFFFFFFF)
    {
      uint64_t v32 = *(void *)v24;
      uint64_t v33 = *(void *)(v24 + 8);
      char v34 = *(unsigned char *)(v24 + 16);
      sub_24EC8A97C(*(void *)v24, v33, v34);
      *(void *)unint64_t v23 = v32;
      *(void *)(v23 + 8) = v33;
      *(unsigned char *)(v23 + 16) = v34;
      *(void *)(v23 + 24) = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
LABEL_14:
    long long v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
    goto LABEL_15;
  }
  if (v25 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)v24;
  uint64_t v27 = *(void *)(v24 + 8);
  char v28 = *(unsigned char *)(v24 + 16);
  sub_24EC8A97C(*(void *)v24, v27, v28);
  uint64_t v29 = *(void *)v23;
  uint64_t v30 = *(void *)(v23 + 8);
  char v31 = *(unsigned char *)(v23 + 16);
  *(void *)unint64_t v23 = v26;
  *(void *)(v23 + 8) = v27;
  *(unsigned char *)(v23 + 16) = v28;
  sub_24EC8AAA0(v29, v30, v31);
  *(void *)(v23 + 24) = *(void *)(v24 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v37 + 24))((v23 + *(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), (v24 + *(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), v36);
  return a1;
}

uint64_t sub_24EC8AEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 24 + a1) & ~v6;
  uint64_t v8 = (v6 + 24 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  long long v12 = v11[1];
  _OWORD *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (_OWORD *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (_OWORD *)(((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))(((unint64_t)v13 + *(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), ((unint64_t)v14 + *(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_24EC8AFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 24 + a1) & ~v6;
  uint64_t v8 = (v6 + 24 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 24) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v10 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v11 + 24) >= 0xFFFFFFFFuLL)
    {
      char v12 = *(unsigned char *)(v11 + 16);
      uint64_t v13 = *(void *)v10;
      uint64_t v14 = *(void *)(v10 + 8);
      char v15 = *(unsigned char *)(v10 + 16);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
      *(unsigned char *)(v10 + 16) = v12;
      sub_24EC8AAA0(v13, v14, v15);
      *(void *)(v10 + 24) = *(void *)(v11 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24EC8AAA0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    swift_bridgeObjectRelease();
  }
  long long v16 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v16;
LABEL_6:
  unint64_t v17 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v17 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_10:
    long long v23 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v23;
    goto LABEL_11;
  }
  if (*(void *)(v18 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v19 = *(unsigned char *)(v18 + 16);
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *(void *)(v17 + 8);
  char v22 = *(unsigned char *)(v17 + 16);
  *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = v19;
  sub_24EC8AAA0(v20, v21, v22);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))((v17 + *(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (v18 + *(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), v24);
  return a1;
}

uint64_t sub_24EC8B1D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(v6 + 64) + 7;
  uint64_t v15 = v11 + 32;
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v16 = ((v15 + ((((v14 + ((v10 + 24) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v20 = ((a2 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v20))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 < 2)
    {
LABEL_28:
      uint64_t v24 = ((unint64_t)a1 + v10 + 24) & ~v10;
      if (v7 == v13)
      {
        uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        return v25(v24, v7, v5);
      }
      else
      {
        unint64_t v26 = (v14 + v24) & 0xFFFFFFFFFFFFFFF8;
        if (v12 > 0x7FFFFFFE)
        {
          char v28 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v28((v15 + ((v26 + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
        }
        else
        {
          unint64_t v27 = *(void *)(v26 + 24);
          if (v27 >= 0xFFFFFFFF) {
            LODWORD(v27) = -1;
          }
          if ((v27 + 1) >= 2) {
            return v27;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_28;
  }
LABEL_18:
  int v21 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v21 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v22 = v16;
    }
    else {
      int v22 = 4;
    }
    switch(v22)
    {
      case 2:
        int v23 = *a1;
        break;
      case 3:
        int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v23 = *(_DWORD *)a1;
        break;
      default:
        int v23 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v23 = 0;
  }
  return v13 + (v23 | v21) + 1;
}

double sub_24EC8B4C8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v30 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  if (v9 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v15 = v9;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(v8 + 64) + 7;
  uint64_t v18 = v14 + 32;
  size_t v19 = ((v14 + 32 + ((((v17 + ((v13 + 24) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
      + *(void *)(*(void *)(v10 - 8) + 64);
  if (a3 <= v16)
  {
    int v20 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v16 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v24))
    {
      int v20 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v20 = 2;
    }
    else
    {
      int v20 = v24 > 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v21 = ~v16 + a2;
    if (v19 < 4)
    {
      int v22 = (v21 >> (8 * v19)) + 1;
      if (v19)
      {
        int v25 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
      int v22 = 1;
    }
    switch(v20)
    {
      case 1:
        a1[v19] = v22;
        return result;
      case 2:
        *(_WORD *)&a1[v19] = v22;
        return result;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v19] = v22;
        return result;
      default:
        return result;
    }
  }
  uint64_t v23 = ~v14;
  switch(v20)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x24EC8B850);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        uint64_t v26 = (unint64_t)&a1[v13 + 24] & ~v13;
        if (v9 == v16)
        {
          unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
          v27(v26, a2, v9, v7);
        }
        else
        {
          unint64_t v28 = (v17 + v26) & 0xFFFFFFFFFFFFFFF8;
          if (v15 > 0x7FFFFFFE)
          {
            uint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
            v29((v18 + ((v28 + 39) & 0xFFFFFFFFFFFFFFF8)) & v23, a2);
          }
          else if (a2 > 0x7FFFFFFE)
          {
            double result = 0.0;
            *(_OWORD *)unint64_t v28 = 0u;
            *(_OWORD *)(v28 + 16) = 0u;
            *(_DWORD *)unint64_t v28 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v28 + 24) = a2;
          }
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for MonogramVerticalStackView()
{
  return __swift_instantiateGenericMetadata();
}

void sub_24EC8B890()
{
  if (!qword_269964960)
  {
    unint64_t v0 = sub_24EE55A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269964960);
    }
  }
}

uint64_t getEnumTagSinglePayload for MonogramVerticalStackViewLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MonogramVerticalStackViewLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC8BA4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24EC8BA74(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24EC8BA80(unsigned char *result, char a2)
{
  *double result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MonogramVerticalStackViewLayout.CodingKeys()
{
  return &type metadata for MonogramVerticalStackViewLayout.CodingKeys;
}

unint64_t sub_24EC8BAA0()
{
  unint64_t result = qword_269964968;
  if (!qword_269964968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964968);
  }
  return result;
}

uint64_t sub_24EC8BAF4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24EC8BB3C()
{
  unint64_t result = qword_269964970;
  if (!qword_269964970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964970);
  }
  return result;
}

unint64_t sub_24EC8BB94()
{
  unint64_t result = qword_269964978;
  if (!qword_269964978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964978);
  }
  return result;
}

uint64_t sub_24EC8BBE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C0D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C0F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EC8BCD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EC8BD1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = (int *)type metadata accessor for MonogramVerticalStackView();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[9], v1);
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 24))
  {
    sub_24EC8AAA0(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v3 + v2[11];
  if (*(void *)(v5 + 24))
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v2[12];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_24EC8BE9C()
{
  type metadata accessor for MonogramVerticalStackView();
  return sub_24EC89A30();
}

uint64_t sub_24EC8BF20@<X0>(uint64_t a1@<X8>)
{
  return sub_24EC89A70(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24EC8BF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EC89EC8(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

unint64_t sub_24EC8BF38()
{
  unint64_t result = qword_26B1DE498;
  if (!qword_26B1DE498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE498);
  }
  return result;
}

unint64_t sub_24EC8BF8C()
{
  unint64_t result = qword_269964998;
  if (!qword_269964998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964998);
  }
  return result;
}

uint64_t sub_24EC8BFE0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8A97C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EC8C024(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8A97C(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_24EC8C074()
{
  unint64_t result = qword_2699649A0;
  if (!qword_2699649A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964980);
    sub_24EC8C0E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699649A0);
  }
  return result;
}

unint64_t sub_24EC8C0E8()
{
  unint64_t result = qword_2699649A8;
  if (!qword_2699649A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699649B0);
    sub_24EC8C1A8(&qword_26B1DE100, &qword_26B1DE108);
    sub_24EC8C218(&qword_26B1DE3F0, &qword_26B1DE3F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699649A8);
  }
  return result;
}

uint64_t sub_24EC8C1A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EC8C218(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EC8C25C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8AAA0(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EC8C2B4()
{
  return swift_getOpaqueTypeConformance2();
}

void static ScrollTargetBehavior<>.snapToStage.getter(void *a1@<X8>)
{
  *a1 = 0x4088280000000000;
}

void StageSnappingScrollTargetBehavior.updateTarget(_:context:)()
{
  uint64_t v1 = sub_24EE55BA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v5 = *v0;
  sub_24EE56420();
  sub_24EE55B90();
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  v31.origin.x = v7;
  v31.origin.y = v9;
  v31.size.width = v11;
  v31.size.height = v13;
  double MinY = CGRectGetMinY(v31);
  sub_24EE55B90();
  if (MinY != CGRectGetMinY(v32))
  {
    sub_24EE56420();
    sub_24EE55B90();
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    v14(v4, v1);
    v33.origin.x = v17;
    v33.origin.y = v19;
    v33.size.width = v21;
    v33.size.height = v23;
    if (CGRectGetMinY(v33) == 0.0)
    {
      unsigned int v24 = (void (*)(unsigned char *, void))sub_24EE55B80();
      *(double *)(v25 + 8) = v5;
      v24(v30, 0);
    }
    else
    {
      sub_24EE55B90();
      if (CGRectGetMinY(v34) > 0.0)
      {
        sub_24EE55B90();
        double v26 = CGRectGetMinY(v35);
        if (v26 > v5) {
          double v27 = v26;
        }
        else {
          double v27 = v5;
        }
        unint64_t v28 = (void (*)(unsigned char *, void))sub_24EE55B80();
        *(double *)(v29 + 8) = v27;
        v28(v30, 0);
      }
    }
  }
}

ValueMetadata *type metadata accessor for StageSnappingScrollTargetBehavior()
{
  return &type metadata for StageSnappingScrollTargetBehavior;
}

uint64_t LazyCanvasItemContent.transformed<A, B, C>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_24EC8EF70(v6, (uint64_t)v252);
  sub_24EC8EF70((uint64_t)v252, (uint64_t)v253);
  uint64_t v12 = sub_24EC8EFCC((uint64_t)v253);
  uint64_t v249 = a1;
  uint64_t v250 = a3;
  switch((int)v12)
  {
    case 1:
      uint64_t v242 = a5;
      uint64_t v38 = (_OWORD *)nullsub_1(v253);
      MEMORY[0x270FA5388](v38);
      uint64_t v234 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      sub_24EE57430();
      sub_24EE57430();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v226 = TupleTypeMetadata[16];
      uint64_t v40 = a6 + TupleTypeMetadata[20];
      uint64_t v216 = a6 + TupleTypeMetadata[24];
      uint64_t v41 = TupleTypeMetadata[28];
      uint64_t v42 = TupleTypeMetadata[32];
      uint64_t v43 = TupleTypeMetadata[36];
      uint64_t v44 = TupleTypeMetadata[40];
      long long v45 = v38[5];
      long long v47 = v38[2];
      long long v46 = v38[3];
      *(_OWORD *)(a6 + 64) = v38[4];
      *(_OWORD *)(a6 + 80) = v45;
      *(_OWORD *)(a6 + 32) = v47;
      *(_OWORD *)(a6 + 48) = v46;
      long long v48 = v38[9];
      long long v50 = v38[6];
      long long v49 = v38[7];
      *(_OWORD *)(a6 + 128) = v38[8];
      *(_OWORD *)(a6 + 144) = v48;
      *(_OWORD *)(a6 + 96) = v50;
      *(_OWORD *)(a6 + 112) = v49;
      long long v51 = v38[13];
      long long v53 = v38[10];
      long long v52 = v38[11];
      *(_OWORD *)(a6 + 192) = v38[12];
      *(_OWORD *)(a6 + 208) = v51;
      *(_OWORD *)(a6 + 160) = v53;
      *(_OWORD *)(a6 + 176) = v52;
      long long v54 = v38[1];
      *(_OWORD *)a6 = *v38;
      *(_OWORD *)(a6 + 16) = v54;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v55 = a6 + v41;
      uint64_t v215 = a6 + v42;
      uint64_t v56 = sub_24EE55880();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_26B1DB958);
      uint64_t v58 = *(void *)(v56 - 8);
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
      v59(v40, v57, v56);
      uint64_t v60 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56);
      v60(v40, 0, 1, v56);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v61 = __swift_project_value_buffer(v56, (uint64_t)qword_26B1DB998);
      v59(v216, v61, v56);
      v60(v216, 0, 1, v56);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v62 = __swift_project_value_buffer(v56, (uint64_t)qword_26B1DB978);
      v59(v55, v62, v56);
      v60(v55, 0, 1, v56);
      uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56);
      v63(v215, 1, 1, v249);
      v63(a6 + v43, 1, 1, v249);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v250 - 8) + 56))(a6 + v44, 1, 1, v250);
      (*(void (**)(uint64_t, uint64_t))(v242 + 32))(v234, v242);
      *(unsigned char *)(a6 + v226) = 1;
      type metadata accessor for CanvasItemContent();
      break;
    case 2:
      uint64_t v64 = nullsub_1(v253);
      long long v221 = *(_OWORD *)(v64 + 16);
      long long v227 = *(_OWORD *)v64;
      long long v218 = *(_OWORD *)(v64 + 32);
      uint64_t v65 = *(void *)(v64 + 48);
      uint64_t v66 = *(void *)(v64 + 56);
      MEMORY[0x270FA5388](v64);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      sub_24EE57430();
      uint64_t v67 = (int *)swift_getTupleTypeMetadata();
      uint64_t v68 = a6 + v67[12];
      uint64_t v69 = a6 + v67[16];
      uint64_t v70 = a6 + v67[20];
      *(_OWORD *)a6 = v227;
      *(_OWORD *)(a6 + 16) = v221;
      *(_OWORD *)(a6 + 32) = v218;
      *(void *)(a6 + 48) = v65;
      *(void *)(a6 + 56) = v66;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_24EE55880();
      uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_26B1DB958);
      uint64_t v73 = *(void *)(v71 - 8);
      uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
      v74(v68, v72, v71);
      uint64_t v75 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56);
      v75(v68, 0, 1, v71);
      if (qword_2699648D8 != -1) {
        swift_once();
      }
      uint64_t v76 = __swift_project_value_buffer(v71, (uint64_t)qword_2699649B8);
      v74(v69, v76, v71);
      v75(v69, 0, 1, v71);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v70, 1, 1, v249);
      type metadata accessor for CanvasItemContent();
      break;
    case 3:
      unint64_t v77 = (uint64_t *)nullsub_1(v253);
      uint64_t v78 = *v77;
      uint64_t v79 = v77[1];
      MEMORY[0x270FA5388](v77);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v80 = (int *)swift_getTupleTypeMetadata();
      uint64_t v81 = a6 + v80[12];
      uint64_t v228 = v80[16];
      uint64_t v82 = (void *)(a6 + v80[20]);
      uint64_t v83 = a6 + v80[24];
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_24EE55880();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_26B1DB978);
      uint64_t v86 = *(void *)(v84 - 8);
      uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
      v87(v81, v85, v84);
      uint64_t v88 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56);
      v88(v81, 0, 1, v84);
      *(unsigned char *)(a6 + v228) = 3;
      *uint64_t v82 = v78;
      v82[1] = v79;
      if (qword_26B1DB970 != -1) {
        goto LABEL_74;
      }
      goto LABEL_24;
    case 4:
      uint64_t v243 = a5;
      uint64_t v90 = nullsub_1(v253);
      long long v229 = *(_OWORD *)v90;
      uint64_t v91 = *(void *)(v90 + 16);
      MEMORY[0x270FA5388](v90);
      uint64_t v235 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v92 = swift_getTupleTypeMetadata();
      uint64_t v93 = a6 + *(int *)(v92 + 64);
      uint64_t v94 = a6 + *(int *)(v92 + 80);
      *(_OWORD *)a6 = v229;
      *(void *)(a6 + 16) = v91;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_24EE55880();
      uint64_t v96 = __swift_project_value_buffer(v95, (uint64_t)qword_26B1DB958);
      uint64_t v97 = *(void *)(v95 - 8);
      uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
      v98(v93, v96, v95);
      char v99 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56);
      v99(v93, 0, 1, v95);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v100 = __swift_project_value_buffer(v95, (uint64_t)qword_26B1DB998);
      v98(v94, v100, v95);
      v99(v94, 0, 1, v95);
      (*(void (**)(uint64_t, uint64_t))(v243 + 32))(v235, v243);
      type metadata accessor for CanvasItemContent();
      break;
    case 5:
      char v101 = (uint64_t *)nullsub_1(v253);
      uint64_t v102 = *v101;
      uint64_t v103 = v101[1];
      MEMORY[0x270FA5388](v101);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v104 = (int *)swift_getTupleTypeMetadata();
      uint64_t v105 = a6 + v104[12];
      uint64_t v230 = v104[16];
      v106 = (void *)(a6 + v104[20]);
      uint64_t v83 = a6 + v104[24];
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_24EE55880();
      uint64_t v107 = __swift_project_value_buffer(v84, (uint64_t)qword_26B1DB978);
      uint64_t v108 = *(void *)(v84 - 8);
      uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16);
      v87(v105, v107, v84);
      uint64_t v88 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56);
      v88(v105, 0, 1, v84);
      *(unsigned char *)(a6 + v230) = 3;
      void *v106 = v102;
      v106[1] = v103;
      if (qword_26B1DB970 != -1) {
LABEL_74:
      }
        swift_once();
LABEL_24:
      uint64_t v89 = __swift_project_value_buffer(v84, (uint64_t)qword_26B1DB958);
      v87(v83, v89, v84);
      v88(v83, 0, 1, v84);
      type metadata accessor for CanvasItemContent();
      break;
    case 6:
      uint64_t v109 = nullsub_1(v253);
      uint64_t v110 = *(void *)(v109 + 16);
      uint64_t v111 = *(void *)(v109 + 24);
      long long v231 = *(_OWORD *)(v109 + 32);
      long long v236 = *(_OWORD *)v109;
      uint64_t v112 = *(void *)(v109 + 48);
      long long v219 = *(_OWORD *)(v109 + 72);
      long long v222 = *(_OWORD *)(v109 + 56);
      uint64_t v113 = *(void *)(v109 + 88);
      uint64_t v114 = *(void *)(v109 + 96);
      MEMORY[0x270FA5388](v109);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      v115 = (int *)swift_getTupleTypeMetadata();
      uint64_t v116 = a6 + v115[16];
      uint64_t v117 = a6 + v115[20];
      uint64_t v118 = a6 + v115[24];
      *(_OWORD *)a6 = v236;
      *(void *)(a6 + 16) = v110;
      *(void *)(a6 + 24) = v111;
      *(_OWORD *)(a6 + 32) = v231;
      *(void *)(a6 + 48) = v112;
      *(_OWORD *)(a6 + 56) = v222;
      *(_OWORD *)(a6 + 72) = v219;
      *(void *)(a6 + 88) = v113;
      *(void *)(a6 + 96) = v114;
      uint64_t v119 = a2;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v120 = sub_24EE55880();
      uint64_t v121 = __swift_project_value_buffer(v120, (uint64_t)qword_26B1DB958);
      uint64_t v122 = *(void *)(v120 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v116, v121, v120);
      v123 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
      v123(v116, 0, 1, v120);
      v123(v117, 1, 1, v120);
      v123(v118, 1, 1, v120);
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(v119, a5);
      type metadata accessor for CanvasItemContent();
      break;
    case 7:
      uint64_t v244 = a5;
      v124 = (_OWORD *)nullsub_1(v253);
      MEMORY[0x270FA5388](v124);
      uint64_t v237 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      sub_24EE57430();
      v125 = (int *)swift_getTupleTypeMetadata();
      uint64_t v126 = a6 + v125[16];
      uint64_t v220 = a6 + v125[20];
      uint64_t v127 = v125[24];
      uint64_t v128 = v125[28];
      uint64_t v129 = v125[32];
      long long v130 = v124[5];
      long long v132 = v124[2];
      long long v131 = v124[3];
      *(_OWORD *)(a6 + 64) = v124[4];
      *(_OWORD *)(a6 + 80) = v130;
      *(_OWORD *)(a6 + 32) = v132;
      *(_OWORD *)(a6 + 48) = v131;
      long long v133 = v124[9];
      long long v135 = v124[6];
      long long v134 = v124[7];
      *(_OWORD *)(a6 + 128) = v124[8];
      *(_OWORD *)(a6 + 144) = v133;
      *(_OWORD *)(a6 + 96) = v135;
      *(_OWORD *)(a6 + 112) = v134;
      long long v136 = v124[1];
      *(_OWORD *)a6 = *v124;
      *(_OWORD *)(a6 + 16) = v136;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v137 = a6 + v127;
      uint64_t v223 = a6 + v128;
      uint64_t v138 = a6 + v129;
      uint64_t v139 = sub_24EE55880();
      uint64_t v140 = __swift_project_value_buffer(v139, (uint64_t)qword_26B1DB958);
      uint64_t v141 = *(void *)(v139 - 8);
      v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 16);
      v142(v126, v140, v139);
      v143 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56);
      v143(v126, 0, 1, v139);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v144 = __swift_project_value_buffer(v139, (uint64_t)qword_26B1DB998);
      v142(v220, v144, v139);
      v143(v220, 0, 1, v139);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v145 = __swift_project_value_buffer(v139, (uint64_t)qword_26B1DB978);
      v142(v137, v145, v139);
      v143(v137, 0, 1, v139);
      v143(v223, 1, 1, v139);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v138, 1, 1, v249);
      (*(void (**)(uint64_t, uint64_t))(v244 + 32))(v237, v244);
      type metadata accessor for CanvasItemContent();
      break;
    case 8:
      uint64_t v245 = a5;
      uint64_t v146 = nullsub_1(v253);
      char v147 = *(unsigned char *)v146;
      uint64_t v148 = *(void *)(v146 + 8);
      uint64_t v149 = *(void *)(v146 + 16);
      uint64_t v150 = *(void *)(v146 + 24);
      char v151 = *(unsigned char *)(v146 + 32);
      uint64_t v152 = *(void *)(v146 + 40);
      uint64_t v153 = *(void *)(v146 + 48);
      MEMORY[0x270FA5388](v146);
      uint64_t v238 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      v154 = (int *)swift_getTupleTypeMetadata();
      uint64_t v155 = a6 + v154[16];
      uint64_t v156 = a6 + v154[20];
      uint64_t v157 = v154[24];
      *(unsigned char *)a6 = v147;
      *(void *)(a6 + 8) = v148;
      *(void *)(a6 + 16) = v149;
      *(void *)(a6 + 24) = v150;
      *(unsigned char *)(a6 + 32) = v151;
      *(void *)(a6 + 40) = v152;
      *(void *)(a6 + 48) = v153;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v224 = a6 + v157;
      uint64_t v158 = sub_24EE55880();
      uint64_t v159 = __swift_project_value_buffer(v158, (uint64_t)qword_26B1DB958);
      uint64_t v160 = *(void *)(v158 - 8);
      v161 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16);
      v161(v155, v159, v158);
      v162 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v160 + 56);
      v162(v155, 0, 1, v158);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v163 = __swift_project_value_buffer(v158, (uint64_t)qword_26B1DB998);
      v161(v156, v163, v158);
      v162(v156, 0, 1, v158);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v164 = __swift_project_value_buffer(v158, (uint64_t)qword_26B1DB978);
      v161(v224, v164, v158);
      v162(v224, 0, 1, v158);
      (*(void (**)(uint64_t, uint64_t))(v245 + 32))(v238, v245);
      type metadata accessor for CanvasItemContent();
      break;
    case 9:
      uint64_t v165 = nullsub_1(v253);
      uint64_t v166 = *(void *)(v165 + 16);
      char v167 = *(unsigned char *)(v165 + 24);
      long long v239 = *(_OWORD *)(v165 + 32);
      long long v246 = *(_OWORD *)v165;
      uint64_t v168 = *(void *)(v165 + 48);
      uint64_t v169 = *(void *)(v165 + 56);
      MEMORY[0x270FA5388](v165);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v170 = swift_getTupleTypeMetadata();
      uint64_t v171 = a6 + *(int *)(v170 + 64);
      uint64_t v172 = *(int *)(v170 + 80);
      *(_OWORD *)a6 = v246;
      *(void *)(a6 + 16) = v166;
      *(unsigned char *)(a6 + 24) = v167;
      *(_OWORD *)(a6 + 32) = v239;
      *(void *)(a6 + 48) = v168;
      *(void *)(a6 + 56) = v169;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v173 = sub_24EE55880();
      uint64_t v174 = __swift_project_value_buffer(v173, (uint64_t)qword_26B1DB958);
      uint64_t v175 = *(void *)(v173 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v171, v174, v173);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56))(v171, 0, 1, v173);
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
      *(unsigned char *)(a6 + v172) = 1;
      type metadata accessor for CanvasItemContent();
      break;
    case 10:
      uint64_t v247 = a5;
      v176 = (long long *)nullsub_1(v253);
      MEMORY[0x270FA5388](v176);
      uint64_t v240 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      v177 = (int *)swift_getTupleTypeMetadata();
      uint64_t v178 = a6 + v177[16];
      uint64_t v179 = a6 + v177[20];
      uint64_t v180 = v177[24];
      long long v181 = v176[7];
      long long v183 = v176[4];
      long long v182 = v176[5];
      *(_OWORD *)(a6 + 96) = v176[6];
      *(_OWORD *)(a6 + 112) = v181;
      *(_OWORD *)(a6 + 64) = v183;
      *(_OWORD *)(a6 + 80) = v182;
      long long v184 = *v176;
      long long v185 = v176[1];
      long long v186 = v176[3];
      *(_OWORD *)(a6 + 32) = v176[2];
      *(_OWORD *)(a6 + 48) = v186;
      *(_OWORD *)a6 = v184;
      *(_OWORD *)(a6 + 16) = v185;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v232 = a6 + v180;
      uint64_t v187 = sub_24EE55880();
      uint64_t v188 = __swift_project_value_buffer(v187, (uint64_t)qword_26B1DB958);
      uint64_t v189 = *(void *)(v187 - 8);
      v190 = *(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 16);
      v190(v178, v188, v187);
      v191 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56);
      v191(v178, 0, 1, v187);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v192 = __swift_project_value_buffer(v187, (uint64_t)qword_26B1DB998);
      v190(v179, v192, v187);
      v191(v179, 0, 1, v187);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v193 = __swift_project_value_buffer(v187, (uint64_t)qword_26B1DB978);
      v190(v232, v193, v187);
      v191(v232, 0, 1, v187);
      (*(void (**)(uint64_t, uint64_t))(v247 + 32))(v240, v247);
      type metadata accessor for CanvasItemContent();
      break;
    case 11:
      MEMORY[0x270FA5388](v12);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      v194 = (int *)swift_getTupleTypeMetadata();
      uint64_t v195 = a6 + v194[12];
      uint64_t v196 = a6 + v194[16];
      uint64_t v197 = v194[20];
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v248 = a6 + v197;
      uint64_t v198 = sub_24EE55880();
      uint64_t v199 = __swift_project_value_buffer(v198, (uint64_t)qword_26B1DB978);
      uint64_t v200 = *(void *)(v198 - 8);
      v201 = *(void (**)(uint64_t, uint64_t, uint64_t))(v200 + 16);
      v201(v195, v199, v198);
      v202 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v200 + 56);
      v202(v195, 0, 1, v198);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v203 = __swift_project_value_buffer(v198, (uint64_t)qword_26B1DB998);
      v201(v196, v203, v198);
      v202(v196, 0, 1, v198);
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v204 = __swift_project_value_buffer(v198, (uint64_t)qword_26B1DB958);
      v201(v248, v204, v198);
      v202(v248, 0, 1, v198);
      type metadata accessor for CanvasItemContent();
      break;
    case 12:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v206 = a6 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v207 = a6 + *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v208 = sub_24EE55880();
      uint64_t v209 = __swift_project_value_buffer(v208, (uint64_t)qword_26B1DB998);
      uint64_t v210 = *(void *)(v208 - 8);
      v211 = *(void (**)(uint64_t, uint64_t, uint64_t))(v210 + 16);
      v211(v206, v209, v208);
      v212 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v210 + 56);
      v212(v206, 0, 1, v208);
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v213 = __swift_project_value_buffer(v208, (uint64_t)qword_26B1DB958);
      v211(v207, v213, v208);
      v212(v207, 0, 1, v208);
      type metadata accessor for CanvasItemContent();
      break;
    default:
      uint64_t v241 = a5;
      uint64_t v13 = nullsub_1(v253);
      MEMORY[0x270FA5388](v13);
      uint64_t v233 = a2;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      sub_24EE57430();
      uint64_t v14 = (int *)swift_getTupleTypeMetadata();
      uint64_t v225 = v14[16];
      uint64_t v15 = a6 + v14[20];
      uint64_t v217 = a6 + v14[24];
      uint64_t v16 = v14[28];
      uint64_t v17 = v14[36];
      long long v18 = *(_OWORD *)(v13 + 112);
      long long v20 = *(_OWORD *)(v13 + 64);
      long long v19 = *(_OWORD *)(v13 + 80);
      *(_OWORD *)(a6 + 96) = *(_OWORD *)(v13 + 96);
      *(_OWORD *)(a6 + 112) = v18;
      *(_OWORD *)(a6 + 64) = v20;
      *(_OWORD *)(a6 + 80) = v19;
      long long v21 = *(_OWORD *)(v13 + 176);
      long long v23 = *(_OWORD *)(v13 + 128);
      long long v22 = *(_OWORD *)(v13 + 144);
      *(_OWORD *)(a6 + 160) = *(_OWORD *)(v13 + 160);
      *(_OWORD *)(a6 + 176) = v21;
      *(_OWORD *)(a6 + 128) = v23;
      *(_OWORD *)(a6 + 144) = v22;
      long long v25 = *(_OWORD *)(v13 + 208);
      long long v24 = *(_OWORD *)(v13 + 224);
      long long v26 = *(_OWORD *)(v13 + 192);
      *(void *)(a6 + 240) = *(void *)(v13 + 240);
      *(_OWORD *)(a6 + 208) = v25;
      *(_OWORD *)(a6 + 224) = v24;
      *(_OWORD *)(a6 + 192) = v26;
      long long v27 = *(_OWORD *)v13;
      long long v28 = *(_OWORD *)(v13 + 16);
      long long v29 = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(a6 + 32) = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(a6 + 48) = v29;
      *(_OWORD *)a6 = v27;
      *(_OWORD *)(a6 + 16) = v28;
      if (qword_26B1DB970 != -1) {
        swift_once();
      }
      uint64_t v30 = a6 + v16;
      uint64_t v31 = sub_24EE55880();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_26B1DB958);
      uint64_t v33 = *(void *)(v31 - 8);
      CGRect v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
      v34(v15, v32, v31);
      CGRect v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56);
      v35(v15, 0, 1, v31);
      if (qword_26B1DB9B0 != -1) {
        swift_once();
      }
      uint64_t v36 = __swift_project_value_buffer(v31, (uint64_t)qword_26B1DB998);
      v34(v217, v36, v31);
      v35(v217, 0, 1, v31);
      if (qword_26B1DB990 != -1) {
        swift_once();
      }
      uint64_t v37 = __swift_project_value_buffer(v31, (uint64_t)qword_26B1DB978);
      v34(v30, v37, v31);
      v35(v30, 0, 1, v31);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(a6 + v17, 1, 1, v249);
      (*(void (**)(uint64_t, uint64_t))(v241 + 32))(v233, v241);
      *(unsigned char *)(a6 + v225) = 1;
      (*(void (**)(uint64_t, uint64_t))(a4 + 32))(v249, a4);
      type metadata accessor for CanvasItemContent();
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EC8EF70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24EC8EFCC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 248) <= 0xAu) {
    return *(unsigned __int8 *)(a1 + 248);
  }
  else {
    return (*(_DWORD *)a1 + 11);
  }
}

uint64_t CanvasItemContent.transformed()@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  double v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v26 = type metadata accessor for FullWidthItemDescriptor();
      goto LABEL_19;
    case 2:
      long long v27 = *((_OWORD *)v5 + 11);
      long long v127 = *((_OWORD *)v5 + 10);
      long long v128 = v27;
      long long v28 = *((_OWORD *)v5 + 13);
      long long v129 = *((_OWORD *)v5 + 12);
      long long v130 = v28;
      long long v29 = *((_OWORD *)v5 + 7);
      long long v123 = *((_OWORD *)v5 + 6);
      long long v124 = v29;
      long long v30 = *((_OWORD *)v5 + 9);
      long long v125 = *((_OWORD *)v5 + 8);
      long long v126 = v30;
      long long v31 = *((_OWORD *)v5 + 3);
      long long v119 = *((_OWORD *)v5 + 2);
      long long v120 = v31;
      long long v32 = *((_OWORD *)v5 + 5);
      long long v121 = *((_OWORD *)v5 + 4);
      long long v122 = v32;
      long long v33 = *((_OWORD *)v5 + 1);
      long long v117 = *(_OWORD *)v5;
      long long v118 = v33;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      uint64_t v34 = a1[3];
      uint64_t v149 = &type metadata for FullWidthStageViewLayout;
      uint64_t v150 = v34;
      char v151 = &type metadata for FullWidthStageViewStyle;
      uint64_t v152 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v153 = (uint64_t)v152;
      v154 = v152;
      uint64_t v155 = sub_24EE57430();
      uint64_t v156 = v155;
      uint64_t v157 = sub_24EE57430();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      *(void *)&long long v116 = &v5[TupleTypeMetadata[12]];
      *(void *)&long long v115 = &v5[TupleTypeMetadata[20]];
      uint64_t v36 = (uint64_t)&v5[TupleTypeMetadata[24]];
      uint64_t v37 = (uint64_t)&v5[TupleTypeMetadata[28]];
      uint64_t v38 = &v5[TupleTypeMetadata[32]];
      uint64_t v39 = &v5[TupleTypeMetadata[36]];
      uint64_t v40 = &v5[TupleTypeMetadata[40]];
      long long v143 = v127;
      long long v144 = v128;
      long long v145 = v129;
      long long v146 = v130;
      long long v139 = v123;
      long long v140 = v124;
      long long v141 = v125;
      long long v142 = v126;
      long long v135 = v119;
      long long v136 = v120;
      long long v137 = v121;
      long long v138 = v122;
      long long v133 = v117;
      long long v134 = v118;
      sub_24EC90838((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v41 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
      uint64_t v42 = sub_24EE57430();
      uint64_t v43 = *(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8);
      v43(v39, v42);
      v43(v38, v42);
      sub_24EC90738(v37);
      sub_24EC90738(v36);
      sub_24EC90738(v115);
      return (*(uint64_t (**)(void, uint64_t))(*(void *)(v34 - 8) + 8))(v116, v34);
    case 3:
      long long v44 = *(_OWORD *)v5;
      long long v115 = *((_OWORD *)v5 + 1);
      long long v116 = v44;
      long long v114 = *((_OWORD *)v5 + 2);
      uint64_t v45 = *((void *)v5 + 6);
      uint64_t v46 = *((void *)v5 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout title description actionButton ");
      uint64_t v149 = &type metadata for InfoActionCardViewLayout;
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v151 = (ValueMetadata *)v150;
      uint64_t v152 = (ValueMetadata *)sub_24EE57430();
      long long v47 = (int *)swift_getTupleTypeMetadata();
      uint64_t v48 = (uint64_t)&v5[v47[12]];
      uint64_t v49 = (uint64_t)&v5[v47[16]];
      long long v50 = &v5[v47[20]];
      long long v133 = v116;
      long long v134 = v115;
      long long v135 = v114;
      *(void *)&long long v136 = v45;
      *((void *)&v136 + 1) = v46;
      sub_24EC9082C((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v51 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
      sub_24EC90738(v49);
      return sub_24EC90738(v48);
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "artwork footnote subtitle title ");
      long long v52 = (ValueMetadata *)a1[3];
      uint64_t v149 = v52;
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v151 = (ValueMetadata *)v150;
      uint64_t v152 = (ValueMetadata *)v150;
      long long v53 = (int *)swift_getTupleTypeMetadata();
      uint64_t v54 = (uint64_t)&v5[v53[12]];
      uint64_t v55 = (uint64_t)&v5[v53[16]];
      uint64_t v56 = (uint64_t)&v5[v53[20]];
      sub_24EC907F8((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      sub_24EC90738(v56);
      goto LABEL_22;
    case 5:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "artwork caption displayStyle layout title ");
      long long v52 = (ValueMetadata *)a1[3];
      uint64_t v149 = v52;
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v151 = &type metadata for DynamicBrickDisplayStyle;
      uint64_t v152 = &type metadata for DynamicBrickViewLayout;
      uint64_t v153 = v150;
      uint64_t v57 = (int *)swift_getTupleTypeMetadata();
      uint64_t v54 = (uint64_t)&v5[v57[12]];
      uint64_t v55 = (uint64_t)&v5[v57[24]];
      long long v133 = *(_OWORD *)&v5[v57[20]];
      sub_24EC907EC((uint64_t)&v133);
      goto LABEL_21;
    case 6:
      long long v116 = *(_OWORD *)v5;
      uint64_t v58 = *((void *)v5 + 2);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout artwork title subtitle ");
      uint64_t v59 = a1[3];
      uint64_t v149 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v150 = v59;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = v151;
      uint64_t v60 = (int *)swift_getTupleTypeMetadata();
      uint64_t v61 = &v5[v60[12]];
      uint64_t v62 = &v5[v60[16]];
      uint64_t v63 = &v5[v60[20]];
      long long v133 = v116;
      *(void *)&long long v134 = v58;
      sub_24EC907E0((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v64 = (uint64_t)v63;
      goto LABEL_16;
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "artwork caption displayStyle layout title ");
      long long v52 = (ValueMetadata *)a1[3];
      uint64_t v149 = v52;
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v151 = &type metadata for DynamicBrickDisplayStyle;
      uint64_t v152 = &type metadata for DynamicBrickViewLayout;
      uint64_t v153 = v150;
      uint64_t v65 = (int *)swift_getTupleTypeMetadata();
      uint64_t v54 = (uint64_t)&v5[v65[12]];
      uint64_t v55 = (uint64_t)&v5[v65[24]];
      long long v133 = *(_OWORD *)&v5[v65[20]];
      sub_24EC907D4((uint64_t)&v133);
      goto LABEL_21;
    case 8:
      long long v66 = *(_OWORD *)v5;
      uint64_t v67 = *((void *)v5 + 2);
      uint64_t v68 = *((void *)v5 + 3);
      long long v115 = *((_OWORD *)v5 + 2);
      long long v116 = v66;
      uint64_t v69 = *((void *)v5 + 6);
      uint64_t v70 = *((void *)v5 + 7);
      uint64_t v71 = *((void *)v5 + 8);
      uint64_t v72 = *((void *)v5 + 9);
      uint64_t v73 = *((void *)v5 + 10);
      uint64_t v74 = *((void *)v5 + 11);
      uint64_t v75 = *((void *)v5 + 12);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout artwork title subtitle caption ");
      uint64_t v59 = a1[3];
      uint64_t v149 = &type metadata for StandardCardViewLayout;
      uint64_t v150 = v59;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = v151;
      uint64_t v153 = (uint64_t)v151;
      uint64_t v76 = (int *)swift_getTupleTypeMetadata();
      uint64_t v61 = &v5[v76[12]];
      uint64_t v62 = &v5[v76[16]];
      unint64_t v77 = &v5[v76[20]];
      uint64_t v78 = (uint64_t)&v5[v76[24]];
      long long v133 = v116;
      *(void *)&long long v134 = v67;
      *((void *)&v134 + 1) = v68;
      long long v135 = v115;
      *(void *)&long long v136 = v69;
      *((void *)&v136 + 1) = v70;
      *(void *)&long long v137 = v71;
      *((void *)&v137 + 1) = v72;
      *(void *)&long long v138 = v73;
      *((void *)&v138 + 1) = v74;
      *(void *)&long long v139 = v75;
      sub_24EC907C8((uint64_t)&v133);
      goto LABEL_15;
    case 9:
      long long v79 = *((_OWORD *)v5 + 7);
      long long v123 = *((_OWORD *)v5 + 6);
      long long v124 = v79;
      long long v80 = *((_OWORD *)v5 + 9);
      long long v125 = *((_OWORD *)v5 + 8);
      long long v126 = v80;
      long long v81 = *((_OWORD *)v5 + 3);
      long long v119 = *((_OWORD *)v5 + 2);
      long long v120 = v81;
      long long v82 = *((_OWORD *)v5 + 5);
      long long v121 = *((_OWORD *)v5 + 4);
      long long v122 = v82;
      long long v83 = *((_OWORD *)v5 + 1);
      long long v117 = *(_OWORD *)v5;
      long long v118 = v83;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
      uint64_t v84 = a1[3];
      uint64_t v149 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v150 = v84;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = v151;
      uint64_t v153 = (uint64_t)v151;
      v154 = v151;
      uint64_t v155 = sub_24EE57430();
      uint64_t v85 = (int *)swift_getTupleTypeMetadata();
      uint64_t v86 = &v5[v85[12]];
      uint64_t v87 = (uint64_t)&v5[v85[16]];
      uint64_t v88 = (uint64_t)&v5[v85[20]];
      uint64_t v89 = (uint64_t)&v5[v85[24]];
      uint64_t v90 = (uint64_t)&v5[v85[28]];
      uint64_t v91 = &v5[v85[32]];
      long long v139 = v123;
      long long v140 = v124;
      long long v141 = v125;
      long long v142 = v126;
      long long v135 = v119;
      long long v136 = v120;
      long long v137 = v121;
      long long v138 = v122;
      long long v133 = v117;
      long long v134 = v118;
      sub_24EC907BC((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v92 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8))(v91, v92);
      sub_24EC90738(v90);
      sub_24EC90738(v89);
      sub_24EC90738(v88);
      sub_24EC90738(v87);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v84 - 8) + 8))(v86, v84);
    case 10:
      char v93 = *v5;
      uint64_t v94 = *((void *)v5 + 1);
      uint64_t v95 = *((void *)v5 + 2);
      uint64_t v96 = *((void *)v5 + 3);
      char v97 = v5[32];
      uint64_t v98 = *((void *)v5 + 5);
      *(void *)&long long v116 = *((void *)v5 + 6);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout artwork title subtitle caption ");
      uint64_t v59 = a1[3];
      uint64_t v149 = &type metadata for StandardVerticalStackViewLayout;
      uint64_t v150 = v59;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = v151;
      uint64_t v153 = (uint64_t)v151;
      char v99 = (int *)swift_getTupleTypeMetadata();
      uint64_t v61 = &v5[v99[12]];
      uint64_t v62 = &v5[v99[16]];
      unint64_t v77 = &v5[v99[20]];
      uint64_t v78 = (uint64_t)&v5[v99[24]];
      LOBYTE(v133) = v93;
      *((void *)&v133 + 1) = v94;
      *(void *)&long long v134 = v95;
      *((void *)&v134 + 1) = v96;
      LOBYTE(v135) = v97;
      *((void *)&v135 + 1) = v98;
      *(void *)&long long v136 = v116;
      sub_24EC907B0((uint64_t)&v133);
      goto LABEL_15;
    case 11:
      long long v100 = *(_OWORD *)v5;
      uint64_t v101 = *((void *)v5 + 2);
      char v102 = v5[24];
      long long v115 = *((_OWORD *)v5 + 2);
      long long v116 = v100;
      uint64_t v103 = *((void *)v5 + 6);
      uint64_t v104 = *((void *)v5 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout artwork title overlay ");
      uint64_t v59 = a1[3];
      uint64_t v149 = &type metadata for TallCardViewLayout;
      uint64_t v150 = v59;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = &type metadata for Overlay;
      uint64_t v105 = swift_getTupleTypeMetadata();
      uint64_t v61 = &v5[*(int *)(v105 + 48)];
      v106 = &v5[*(int *)(v105 + 64)];
      long long v133 = v116;
      *(void *)&long long v134 = v101;
      BYTE8(v134) = v102;
      long long v135 = v115;
      *(void *)&long long v136 = v103;
      *((void *)&v136 + 1) = v104;
      sub_24EC907A4((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v107 = (uint64_t)v106;
      goto LABEL_17;
    case 12:
      long long v108 = *((_OWORD *)v5 + 5);
      long long v121 = *((_OWORD *)v5 + 4);
      long long v122 = v108;
      long long v109 = *((_OWORD *)v5 + 7);
      long long v123 = *((_OWORD *)v5 + 6);
      long long v124 = v109;
      long long v110 = *((_OWORD *)v5 + 1);
      long long v117 = *(_OWORD *)v5;
      long long v118 = v110;
      long long v111 = *((_OWORD *)v5 + 3);
      long long v119 = *((_OWORD *)v5 + 2);
      long long v120 = v111;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 48, "layout artwork title subtitle caption ");
      uint64_t v59 = a1[3];
      uint64_t v149 = &type metadata for VerticalStackCardLayout;
      uint64_t v150 = v59;
      char v151 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v152 = v151;
      uint64_t v153 = (uint64_t)v151;
      uint64_t v112 = (int *)swift_getTupleTypeMetadata();
      uint64_t v61 = &v5[v112[12]];
      uint64_t v62 = &v5[v112[16]];
      unint64_t v77 = &v5[v112[20]];
      uint64_t v78 = (uint64_t)&v5[v112[24]];
      long long v137 = v121;
      long long v138 = v122;
      long long v139 = v123;
      long long v140 = v124;
      long long v133 = v117;
      long long v134 = v118;
      long long v135 = v119;
      long long v136 = v120;
      sub_24EC90798((uint64_t)&v133);
LABEL_15:
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      sub_24EC90738(v78);
      uint64_t v64 = (uint64_t)v77;
LABEL_16:
      sub_24EC90738(v64);
      uint64_t v107 = (uint64_t)v62;
LABEL_17:
      sub_24EC90738(v107);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v61, v59);
      break;
    case 13:
      uint64_t v26 = a1[4];
LABEL_19:
      (*(void (**)(char *))(*(void *)(v26 - 8) + 8))(v5);
      sub_24EC90844((uint64_t)&v149);
      uint64_t result = sub_24EC906D0((uint64_t)&v149, a2);
      break;
    case 14:
      long long v52 = (ValueMetadata *)a1[3];
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v54 = (uint64_t)&v5[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v55 = (uint64_t)&v5[*(int *)(TupleTypeMetadata3 + 64)];
      sub_24EC9067C((uint64_t)&v133);
LABEL_21:
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
LABEL_22:
      sub_24EC90738(v55);
      sub_24EC90738(v54);
      uint64_t result = (*((uint64_t (**)(char *, ValueMetadata *))v52[-1].Description + 1))(v5, v52);
      break;
    default:
      uint64_t v132 = *((void *)v5 + 30);
      long long v8 = *((_OWORD *)v5 + 13);
      long long v129 = *((_OWORD *)v5 + 12);
      long long v130 = v8;
      long long v131 = *((_OWORD *)v5 + 14);
      long long v9 = *((_OWORD *)v5 + 9);
      long long v125 = *((_OWORD *)v5 + 8);
      long long v126 = v9;
      long long v10 = *((_OWORD *)v5 + 11);
      long long v127 = *((_OWORD *)v5 + 10);
      long long v128 = v10;
      long long v11 = *((_OWORD *)v5 + 5);
      long long v121 = *((_OWORD *)v5 + 4);
      long long v122 = v11;
      long long v12 = *((_OWORD *)v5 + 7);
      long long v123 = *((_OWORD *)v5 + 6);
      long long v124 = v12;
      long long v13 = *((_OWORD *)v5 + 1);
      long long v117 = *(_OWORD *)v5;
      long long v118 = v13;
      long long v14 = *((_OWORD *)v5 + 3);
      long long v119 = *((_OWORD *)v5 + 2);
      long long v120 = v14;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v114 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      uint64_t v15 = a1[3];
      uint64_t v149 = &type metadata for ActionCardViewLayout;
      uint64_t v150 = v15;
      char v151 = &type metadata for ActionCardViewStyle;
      uint64_t v152 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v153 = (uint64_t)v152;
      uint64_t v16 = a1[2];
      v154 = v152;
      uint64_t v155 = v16;
      uint64_t v156 = sub_24EE57430();
      uint64_t v17 = (int *)swift_getTupleTypeMetadata();
      long long v18 = &v5[v17[12]];
      uint64_t v19 = (uint64_t)&v5[v17[20]];
      uint64_t v20 = (uint64_t)&v5[v17[24]];
      uint64_t v21 = (uint64_t)&v5[v17[28]];
      long long v22 = &v5[v17[32]];
      long long v23 = &v5[v17[36]];
      long long v145 = v129;
      long long v146 = v130;
      long long v147 = v131;
      uint64_t v148 = v132;
      long long v141 = v125;
      long long v142 = v126;
      long long v143 = v127;
      long long v144 = v128;
      long long v137 = v121;
      long long v138 = v122;
      long long v139 = v123;
      long long v140 = v124;
      long long v133 = v117;
      long long v134 = v118;
      long long v135 = v119;
      long long v136 = v120;
      sub_24EC90878((uint64_t)&v133);
      sub_24EC8EF70((uint64_t)&v133, (uint64_t)&v149);
      nullsub_1(&v149);
      sub_24EC906D0((uint64_t)&v149, a2);
      uint64_t v24 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v22, v16);
      sub_24EC90738(v21);
      sub_24EC90738(v20);
      sub_24EC90738(v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v18, v15);
      break;
  }
  return result;
}

uint64_t sub_24EC90598(uint64_t a1)
{
  return sub_24EC9061C(a1, qword_26B1DB978);
}

uint64_t sub_24EC905B8(uint64_t a1)
{
  return sub_24EC9061C(a1, qword_2699649B8);
}

uint64_t sub_24EC905E0(uint64_t a1)
{
  return sub_24EC9061C(a1, qword_26B1DB998);
}

uint64_t sub_24EC90600(uint64_t a1)
{
  return sub_24EC9061C(a1, qword_26B1DB958);
}

uint64_t sub_24EC9061C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24EE55880();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_24EE557E0();
}

double sub_24EC9067C(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(unsigned char *)(a1 + 248) = 11;
  return result;
}

uint64_t sub_24EC906D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699649D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EC90738(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EC90798(uint64_t result)
{
  *(unsigned char *)(result + 248) = 10;
  return result;
}

uint64_t sub_24EC907A4(uint64_t result)
{
  *(unsigned char *)(result + 248) = 9;
  return result;
}

uint64_t sub_24EC907B0(uint64_t result)
{
  *(unsigned char *)(result + 248) = 8;
  return result;
}

uint64_t sub_24EC907BC(uint64_t result)
{
  *(unsigned char *)(result + 248) = 7;
  return result;
}

uint64_t sub_24EC907C8(uint64_t result)
{
  *(unsigned char *)(result + 248) = 6;
  return result;
}

uint64_t sub_24EC907D4(uint64_t result)
{
  *(unsigned char *)(result + 248) = 5;
  return result;
}

uint64_t sub_24EC907E0(uint64_t result)
{
  *(unsigned char *)(result + 248) = 4;
  return result;
}

uint64_t sub_24EC907EC(uint64_t result)
{
  *(unsigned char *)(result + 248) = 3;
  return result;
}

double sub_24EC907F8(uint64_t a1)
{
  *(void *)(a1 + 240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 248) = 11;
  return result;
}

uint64_t sub_24EC9082C(uint64_t result)
{
  *(unsigned char *)(result + 248) = 2;
  return result;
}

uint64_t sub_24EC90838(uint64_t result)
{
  *(unsigned char *)(result + 248) = 1;
  return result;
}

double sub_24EC90844(uint64_t a1)
{
  *(void *)(a1 + 240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 248) = -1;
  return result;
}

uint64_t sub_24EC90878(uint64_t result)
{
  *(unsigned char *)(result + 248) = 0;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLayoutProvider()
{
  return &type metadata for DynamicLayoutProvider;
}

uint64_t _s15FitnessCanvasUI19ViewModifierBuilderO24buildLimitedAvailabilityyxx05SwiftC00dE0RzlFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_24EC908D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE56220();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_24EE56230();
}

uint64_t sub_24EC909C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24EE56220();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_24EE56230();
}

uint64_t ConditionalViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v71 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_24EE562F0();
  uint64_t v5 = a2[3];
  uint64_t v6 = sub_24EE55DD0();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v54 - v10;
  uint64_t v65 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2[2];
  uint64_t v74 = v4;
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v58 = (char *)&v54 - v18;
  uint64_t v19 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a2[4];
  uint64_t v22 = a2[5];
  uint64_t v24 = v12;
  uint64_t v89 = v12;
  uint64_t v90 = v5;
  uint64_t v66 = v5;
  uint64_t v72 = v23;
  uint64_t v73 = v22;
  uint64_t v91 = v23;
  uint64_t v92 = v22;
  uint64_t v25 = type metadata accessor for ConditionalViewModifier.Storage();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  long long v28 = (char *)&v54 - v27;
  uint64_t v29 = v6;
  uint64_t v70 = sub_24EE56240();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v54 - v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v64, v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v31 = v63;
    uint64_t v32 = v66;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v63, v28, v66);
    uint64_t v33 = v74;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v35 = (uint64_t)v60;
    MEMORY[0x25334D0C0](v31, v33, v32, WitnessTable);
    uint64_t v87 = WitnessTable;
    uint64_t v88 = v73;
    uint64_t v67 = swift_getWitnessTable();
    uint64_t v36 = v62;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
    uint64_t v38 = v61;
    v37(v61, v35, v29);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v39(v35, v29);
    v37((char *)v35, (uint64_t)v38, v29);
    uint64_t v85 = WitnessTable;
    uint64_t v86 = v72;
    swift_getWitnessTable();
    uint64_t v40 = v68;
    sub_24EC909C8(v35, v13, v29);
    v39(v35, v29);
    v39((uint64_t)v38, v29);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
  }
  else
  {
    uint64_t v57 = v19;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v56 = v21;
    uint64_t v55 = v24;
    v41(v21, v28, v24);
    uint64_t v42 = v74;
    uint64_t v43 = swift_getWitnessTable();
    MEMORY[0x25334D0C0](v21, v42, v24, v43);
    uint64_t v77 = v43;
    uint64_t v78 = v72;
    uint64_t v67 = swift_getWitnessTable();
    uint64_t v44 = v59;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    uint64_t v46 = v58;
    v45(v58, v16, v13);
    long long v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v47(v16, v13);
    v45(v16, v46, v13);
    uint64_t v75 = v43;
    uint64_t v76 = v73;
    swift_getWitnessTable();
    uint64_t v40 = v68;
    sub_24EC908D0((uint64_t)v16, v13);
    v47(v16, v13);
    v47(v46, v13);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v55);
  }
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v83 = v48;
  uint64_t v84 = v72;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v81 = v48;
  uint64_t v82 = v73;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v79 = v49;
  uint64_t v80 = v50;
  uint64_t v51 = v70;
  swift_getWitnessTable();
  uint64_t v52 = v69;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v71, v40, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v40, v51);
}

uint64_t type metadata accessor for ConditionalViewModifier.Storage()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EC91328()
{
  return sub_24EE55BD0();
}

uint64_t static ViewModifierBuilder.buildPartialBlock<A, B>(accumulated:next:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x25334C2A0](a2, a3, a4, a5);
}

uint64_t static ViewModifierBuilder.buildEither<A, B>(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v12 = type metadata accessor for ConditionalViewModifier.Storage();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v17 - v13, a1, a2);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v15 = type metadata accessor for ConditionalViewModifier.Storage();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a6, v14, v15);
}

uint64_t static ViewModifierBuilder.buildEither<A, B>(second:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v12 = type metadata accessor for ConditionalViewModifier.Storage();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v17 - v13, a1, a3);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v15 = type metadata accessor for ConditionalViewModifier.Storage();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a6, v14, v15);
}

uint64_t sub_24EC915F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EC91634()
{
  uint64_t result = type metadata accessor for ConditionalViewModifier.Storage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ConditionalViewModifier()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for ViewModifierBuilder()
{
  return &type metadata for ViewModifierBuilder;
}

uint64_t sub_24EC91714()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC91858()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC918B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24EC91980(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24EC91B54(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_24EC91C90(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_24EC91E04(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24EC92044(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_24EC921B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24EC923F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_24EC9253C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24EC92714);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24EC9273C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_24EC92804(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t sub_24EC9292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v12[0] = a3;
  v12[1] = a4;
  v12[2] = a6;
  v12[3] = a7;
  uint64_t v8 = type metadata accessor for CanvasLayout();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v12 - v10, a1, v8);
  sub_24EE56B30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

uint64_t sub_24EC92A30()
{
  return sub_24EE56B40();
}

uint64_t CanvasLayoutReader.init(layoutProvider:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  MEMORY[0x270FA5388](a1);
  unsigned int v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v35 = v18;
  *((void *)&v35 + 1) = v19;
  *(void *)&long long v36 = v20;
  *((void *)&v36 + 1) = a10;
  uint64_t v21 = type metadata accessor for CanvasLayout();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v31 - v22;
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  swift_storeEnumTagMultiPayload();
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v24 = sub_24EC92C7C();
  (*(void (**)(uint64_t, uint64_t))(a10 + 32))(a6, a10);
  CanvasLayout.init(carouselPageControlSpacing:contentMargins:dynamicTypeSize:intersectionSpacing:sectionDensityFactor:sizeClass:)(&v35, 2, v24, (uint64_t)v17, a6, (uint64_t)v23, 0.0, 20.0);
  *(void *)&long long v35 = a4;
  *((void *)&v35 + 1) = a5;
  *(void *)&long long v36 = a6;
  *((void *)&v36 + 1) = a7;
  uint64_t v37 = a8;
  uint64_t v38 = a10;
  uint64_t v25 = type metadata accessor for CanvasLayoutReader();
  sub_24EC9292C((uint64_t)v23, v26, a5, a6, v27, a8, a10);
  uint64_t result = sub_24EC945C8(v32, (uint64_t)a9 + *(int *)(v25 + 72));
  uint64_t v29 = (uint64_t *)((char *)a9 + *(int *)(v25 + 76));
  uint64_t v30 = v34;
  void *v29 = v33;
  v29[1] = v30;
  return result;
}

uint64_t sub_24EC92C7C()
{
  swift_getTupleTypeMetadata2();
  sub_24EE57170();
  return sub_24EE56F40();
}

uint64_t CanvasLayoutReader.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v80 = *(a1 - 1);
  uint64_t v81 = *(void *)(v80 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v89 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EE55D70();
  uint64_t v69 = v5;
  uint64_t v83 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v75 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  uint64_t v90 = a1[3];
  uint64_t v91 = v7;
  unint64_t v8 = a1[7];
  uint64_t v92 = a1[6];
  unint64_t v86 = v8;
  uint64_t v9 = a1;
  uint64_t v104 = v90;
  uint64_t v105 = v7;
  uint64_t v106 = v92;
  unint64_t v107 = v8;
  uint64_t v65 = type metadata accessor for CanvasLayout();
  uint64_t v10 = *(void *)(v65 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v65);
  int v13 = (char *)&v61 - v12;
  uint64_t v14 = a1[2];
  uint64_t v70 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699649D8);
  uint64_t v17 = sub_24EE55DD0();
  uint64_t v77 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v87 = (char *)&v61 - v18;
  uint64_t v19 = a1[5];
  uint64_t v20 = sub_24EC8C218(&qword_2699649E0, &qword_2699649D8);
  uint64_t v102 = v19;
  uint64_t v103 = v20;
  uint64_t v82 = MEMORY[0x263F18E48];
  uint64_t v66 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v68 = WitnessTable;
  unint64_t v67 = sub_24EC945E0();
  uint64_t v104 = v17;
  uint64_t v105 = v5;
  uint64_t v106 = WitnessTable;
  unint64_t v107 = v67;
  uint64_t v74 = MEMORY[0x263F1B260];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v88 = (char *)&v61 - v22;
  uint64_t v76 = sub_24EE55DD0();
  uint64_t v79 = *(void *)(v76 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v76);
  uint64_t v71 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v73 = (char *)&v61 - v25;
  uint64_t v85 = v9;
  uint64_t v26 = *(void (**)(char *))(v2 + *((int *)v9 + 19));
  uint64_t v27 = v2;
  sub_24EC92A30();
  v26(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v65);
  uint64_t v28 = v14;
  uint64_t v93 = v14;
  uint64_t v94 = v90;
  uint64_t v95 = v91;
  uint64_t v96 = v19;
  uint64_t v29 = v19;
  unint64_t v30 = v86;
  uint64_t v97 = v92;
  unint64_t v98 = v86;
  uint64_t v99 = v2;
  sub_24EE56DA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699649F0);
  sub_24EC8C218(&qword_2699649F8, &qword_2699649F0);
  uint64_t v63 = v29;
  sub_24EE566D0();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v62 = v28;
  v31(v16, v28);
  uint64_t v32 = v75;
  uint64_t v64 = v2;
  sub_24EE187B4(v75);
  uint64_t v33 = v80;
  uint64_t v70 = *(void *)(v80 + 16);
  uint64_t v34 = v89;
  long long v35 = v85;
  ((void (*)(char *, uint64_t, void *))v70)(v89, v27, v85);
  uint64_t v36 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v37 = v33;
  v81 += (v36 + 64) & ~v36;
  uint64_t v38 = (v36 + 64) & ~v36;
  uint64_t v65 = v38;
  uint64_t v61 = v36 | 7;
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v90;
  v39[2] = v28;
  v39[3] = v40;
  v39[4] = v91;
  v39[5] = v29;
  v39[6] = v92;
  v39[7] = v30;
  uint64_t v80 = *(void *)(v37 + 32);
  ((void (*)(char *, char *, void *))v80)((char *)v39 + v38, v34, v35);
  uint64_t v41 = v66;
  uint64_t v42 = v69;
  uint64_t v43 = v68;
  unint64_t v44 = v67;
  uint64_t v45 = v87;
  sub_24EE56A20();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v32, v42);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v41);
  uint64_t v46 = v89;
  long long v47 = v85;
  ((void (*)(char *, uint64_t, void *))v70)(v89, v64, v85);
  uint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v90;
  v48[2] = v62;
  v48[3] = v49;
  uint64_t v50 = v63;
  v48[4] = v91;
  v48[5] = v50;
  uint64_t v51 = (char *)v48 + v65;
  unint64_t v52 = v86;
  v48[6] = v92;
  v48[7] = v52;
  ((void (*)(char *, char *, void *))v80)(v51, v46, v47);
  uint64_t v104 = v41;
  uint64_t v105 = v42;
  uint64_t v106 = v43;
  unint64_t v107 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v71;
  uint64_t v55 = OpaqueTypeMetadata2;
  uint64_t v56 = v88;
  sub_24EE56A10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v55);
  uint64_t v100 = OpaqueTypeConformance2;
  uint64_t v101 = MEMORY[0x263F1A240];
  uint64_t v57 = v76;
  swift_getWitnessTable();
  uint64_t v58 = v73;
  sub_24EC90894(v54);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v79 + 8);
  v59(v54, v57);
  sub_24EC90894(v58);
  return ((uint64_t (*)(char *, uint64_t))v59)(v58, v57);
}

uint64_t sub_24EC93658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (**a8)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v13 = type metadata accessor for CanvasLayoutReader();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a2;
  *((void *)v18 + 3) = a3;
  *((void *)v18 + 4) = a4;
  *((void *)v18 + 5) = a5;
  uint64_t v19 = v24;
  *((void *)v18 + 6) = v23;
  *((void *)v18 + 7) = v19;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  uint64_t v21 = v25;
  char *v25 = sub_24EC96608;
  v21[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v18;
  return result;
}

uint64_t sub_24EC937CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)()@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v51 = a8;
  uint64_t v52 = a7;
  uint64_t v46 = a6;
  uint64_t v47 = a1;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v48 = a3;
  uint64_t v53 = a2;
  uint64_t v44 = a9;
  uint64_t v41 = sub_24EE55C30();
  uint64_t v15 = *(void *)(v41 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v57 = (char *)a5;
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v60 = a8;
  uint64_t v17 = type metadata accessor for CanvasLayoutReader();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v39 - v20;
  uint64_t v22 = sub_24EE56AB0();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v42 = v22;
  uint64_t v43 = v23;
  v23(v21, v53, v17);
  uint64_t v24 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v45, v47, v41);
  uint64_t v25 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v40 = ((v25 + 64) & ~v25) + v19;
  uint64_t v26 = (v25 + 64) & ~v25;
  v39[1] = v25 | 7;
  unint64_t v27 = (v40 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  uint64_t v29 = v49;
  *((void *)v28 + 2) = v48;
  *((void *)v28 + 3) = v29;
  uint64_t v30 = v46;
  *((void *)v28 + 4) = v50;
  *((void *)v28 + 5) = v30;
  uint64_t v31 = v51;
  *((void *)v28 + 6) = v52;
  *((void *)v28 + 7) = v31;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v32(&v28[v26], v21, v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v28[v27], v45, v24);
  uint64_t v55 = v42;
  uint64_t v56 = sub_24EC96940;
  uint64_t v57 = v28;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  sub_24EE55C00();
  uint64_t v54 = v33;
  v43(v21, v53, v17);
  uint64_t v34 = (char *)swift_allocObject();
  long long v35 = v49;
  *((void *)v34 + 2) = v48;
  *((void *)v34 + 3) = v35;
  uint64_t v36 = v46;
  *((void *)v34 + 4) = v50;
  *((void *)v34 + 5) = v36;
  uint64_t v37 = v51;
  *((void *)v34 + 6) = v52;
  *((void *)v34 + 7) = v37;
  v32(&v34[v26], v21, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964A00);
  sub_24EC96B2C();
  sub_24EC96BA0();
  sub_24EE56A20();
  swift_release();
  swift_release();
  sub_24EC96BF4((uint64_t)v56);
  return sub_24EC96BF4(v58);
}

uint64_t sub_24EC93B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  long long v35 = a6;
  uint64_t v36 = a2;
  uint64_t v38 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  uint64_t v41 = v18;
  uint64_t v42 = v19;
  uint64_t v37 = type metadata accessor for CanvasLayout();
  uint64_t v20 = *(void *)(v37 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v37);
  uint64_t v23 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v34 - v24;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = v35;
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v26 = type metadata accessor for CanvasLayoutReader();
  uint64_t v27 = *(int *)(v26 + 72);
  v34[1] = a1;
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v30 = *(void *)(a1 + v27 + 24);
  uint64_t v29 = *(void *)(a1 + v27 + 32);
  long long v35 = __swift_project_boxed_opaque_existential_1(v28, v30);
  sub_24EC92A30();
  sub_24EE55C00();
  (*(void (**)(uint64_t, uint64_t))(a8 + 48))(a5, a8);
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v29 + 40))(v23, v15, v30, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, a5);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v32 = v37;
  v31(v23, v37);
  sub_24EC96508((uint64_t)v25, v26);
  return ((uint64_t (*)(char *, uint64_t))v31)(v25, v32);
}

uint64_t sub_24EC93DC0(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v35 = a4;
  uint64_t v36 = a7;
  uint64_t v38 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  uint64_t v41 = v18;
  uint64_t v42 = (void *)a9;
  uint64_t v37 = type metadata accessor for CanvasLayout();
  uint64_t v19 = *(void *)(v37 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v37);
  uint64_t v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v34 - v23;
  double v25 = *a2;
  uint64_t v39 = v35;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v42 = v36;
  uint64_t v43 = a8;
  uint64_t v44 = a9;
  uint64_t v26 = type metadata accessor for CanvasLayoutReader();
  uint64_t v27 = *(int *)(v26 + 72);
  v34[1] = a3;
  uint64_t v28 = (void *)(a3 + v27);
  uint64_t v30 = *(void *)(a3 + v27 + 24);
  uint64_t v29 = *(void *)(a3 + v27 + 32);
  uint64_t v36 = __swift_project_boxed_opaque_existential_1(v28, v30);
  sub_24EC92A30();
  (*(void (**)(uint64_t, uint64_t, double))(a9 + 48))(a6, a9, v25);
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v29 + 40))(v22, v15, v30, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, a6);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v32 = v37;
  v31(v22, v37);
  sub_24EC96508((uint64_t)v24, v26);
  return ((uint64_t (*)(char *, uint64_t))v31)(v24, v32);
}

uint64_t sub_24EC9403C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = a7;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = sub_24EE55D70();
  uint64_t v13 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = a8;
  uint64_t v39 = a9;
  uint64_t v32 = type metadata accessor for CanvasLayout();
  uint64_t v16 = *(void *)(v32 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v32);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = v31;
  uint64_t v40 = a8;
  uint64_t v41 = a9;
  uint64_t v22 = type metadata accessor for CanvasLayoutReader();
  uint64_t v23 = (void *)(v35 + *(int *)(v22 + 72));
  uint64_t v24 = v23[3];
  uint64_t v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_24EC92A30();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v34, v33);
  uint64_t v26 = sub_24EDBC1CC((uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 48))(v19, v26, v24, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v28 = v32;
  v27(v19, v32);
  sub_24EC96508((uint64_t)v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v28);
}

uint64_t sub_24EC9428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a5;
  uint64_t v13 = sub_24EE55D70();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v32 = type metadata accessor for CanvasLayout();
  uint64_t v16 = *(void *)(v32 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v32);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v31 - v20;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = v31;
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v22 = type metadata accessor for CanvasLayoutReader();
  uint64_t v23 = (void *)(a1 + *(int *)(v22 + 72));
  uint64_t v24 = v23[3];
  uint64_t v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_24EC92A30();
  sub_24EE187B4((uint64_t)v15);
  uint64_t v26 = sub_24EDBC1CC((uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 48))(v19, v26, v24, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v28 = v19;
  uint64_t v29 = v32;
  v27(v28, v32);
  sub_24EC96508((uint64_t)v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v29);
}

uint64_t sub_24EC9449C()
{
  return sub_24EE55F40();
}

uint64_t sub_24EC944C0()
{
  return sub_24EE55F40();
}

uint64_t sub_24EC944E4(uint64_t a1)
{
  uint64_t v2 = sub_24EE55D70();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24EE55F50();
}

uint64_t type metadata accessor for CanvasLayoutReader()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EC945C8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_24EC945E0()
{
  unint64_t result = qword_2699649E8;
  if (!qword_2699649E8)
  {
    sub_24EE55D70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699649E8);
  }
  return result;
}

uint64_t sub_24EC94638@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_24EC93658(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_24EC94650(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = *(void *)(type metadata accessor for CanvasLayoutReader() - 8);
  return sub_24EC9403C(a1, a2, (uint64_t)v2 + ((*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v5, v6, v7, v8, v9, v10);
}

uint64_t sub_24EC9471C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = *(void *)(type metadata accessor for CanvasLayoutReader() - 8);
  uint64_t v8 = (uint64_t)v0 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_24EC9428C(v8, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_24EC947D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EC94824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

void sub_24EC9482C()
{
  sub_24EC96368();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CanvasLayout();
    sub_24EE56B70();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_24EC94928(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 32) - 8);
  int v11 = *(_DWORD *)(v8 + 80);
  uint64_t v12 = v11;
  uint64_t v13 = v9 + (v11 | 7) + 1;
  uint64_t v14 = ((v12 + 64) & ~v12) + *(void *)(v8 + 64);
  unint64_t v15 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v16 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  int v17 = (*(_DWORD *)(v7 + 80) | v11) & 0x100000;
  if (v16 > 7 || v17 != 0 || (((v13 & ~(v12 | 7)) + v15 + 47) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v20 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
  }
  else
  {
    unsigned int v21 = a2[v9];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v23 = v9;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v9 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v9 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v9 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v9 < 4) {
LABEL_23:
          }
            unsigned int v21 = (v24 | (v22 << (8 * v9))) + 2;
          else {
LABEL_25:
          }
            unsigned int v21 = v24 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v48 = *(void *)(a3 + 32);
    uint64_t v25 = ~(v12 | 7);
    uint64_t v26 = ~v12;
    if (v21 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v27 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v27 = 0;
    }
    *((unsigned char *)a1 + v9) = v27;
    unint64_t v28 = ((unint64_t)a1 + v13) & v25;
    unint64_t v29 = (unint64_t)&a2[v13] & v25;
    *(void *)unint64_t v28 = *(void *)v29;
    unint64_t v30 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v32 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v32;
    *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
    uint64_t v33 = (void *)((v28 + 55) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = (void *)((v29 + 55) & 0xFFFFFFFFFFFFFFF8);
    void *v33 = *v34;
    uint64_t v35 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v35 = *v36;
    uint64_t v37 = ((unint64_t)v35 + v12 + 8) & v26;
    uint64_t v38 = ((unint64_t)v36 + v12 + 8) & v26;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v39(v37, v38, v48);
    *(void *)(((v28 | 7) + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v29 | 7) + v14) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v40 = (char *)(v15 + v28);
    uint64_t v41 = (char *)(v15 + v29);
    uint64_t v42 = *(void *)(v15 + v29 + 24);
    *((void *)v40 + 3) = v42;
    *((void *)v40 + 4) = *(void *)(v15 + v29 + 32);
    uint64_t v43 = **(void (***)(char *, char *, uint64_t))(v42 - 8);
    swift_retain();
    v43(v40, v41, v42);
    uint64_t v44 = (void *)((unint64_t)(v41 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v45 = v44[1];
    uint64_t v46 = (void *)((unint64_t)(v40 + 47) & 0xFFFFFFFFFFFFFFF8);
    void *v46 = *v44;
    v46[1] = v45;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24EC94CC0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55D70();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v5 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
        if (v5 < 4)
        {
LABEL_14:
          unsigned int v6 = (v9 | (v7 << (8 * v5))) + 2;
          break;
        }
LABEL_18:
        if (v9 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v6 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  else {
LABEL_19:
  }
    swift_release();
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (unint64_t)&a1[v5 + 1 + (v12 | 7)] & ~(v12 | 7);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v12 + ((((v13 + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v12, v10);
  uint64_t v14 = *(void *)(v11 + 64) + ((v12 + 64) & ~v12) + 7;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v13 + (v14 & 0xFFFFFFFFFFFFFFF8) + 8);
  return swift_release();
}

void *sub_24EC94EF0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = *(void *)(a3 + 32);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v7 + (v15 | 7) + 1;
  int v17 = (void *)(((unint64_t)a1 + v16) & ~(v15 | 7));
  uint64_t v18 = (void *)((unint64_t)&a2[v16] & ~(v15 | 7));
  *int v17 = *v18;
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  unsigned int v22 = (void *)(((unint64_t)v17 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((unint64_t)v18 + 55) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  int v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v24 = *v25;
  uint64_t v26 = ((unint64_t)v24 + v15 + 8) & ~v15;
  uint64_t v27 = ((unint64_t)v25 + v15 + 8) & ~v15;
  uint64_t v28 = v14 + 16;
  unint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v13);
  uint64_t v30 = *(void *)(v28 + 48) + ((v15 + 64) & ~v15) + 7;
  *(void *)(((unint64_t)v17 + v30) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18 + v30) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
  long long v32 = (char *)v17 + v31;
  uint64_t v33 = (char *)v18 + v31;
  uint64_t v34 = *(void *)((char *)v18 + v31 + 24);
  *((void *)v32 + 3) = v34;
  *((void *)v32 + 4) = *(void *)((char *)v18 + v31 + 32);
  uint64_t v35 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
  swift_retain();
  v35(v32, v33, v34);
  uint64_t v36 = (void *)((unint64_t)(v33 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = v36[1];
  uint64_t v38 = (void *)((unint64_t)(v32 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v38 = *v36;
  v38[1] = v37;
  swift_retain();
  return a1;
}

unsigned __int8 *sub_24EC95204(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  uint64_t v18 = *(void *)(a3 + 32);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = v17 + (v20 | 7) + 1;
  unsigned int v22 = (void *)((unint64_t)&a2[v21] & ~(v20 | 7));
  uint64_t v23 = (void *)((unint64_t)&a1[v21] & ~(v20 | 7));
  void *v23 = *v22;
  unint64_t v24 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
  uint64_t v26 = (void *)(((unint64_t)v23 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v22 + 55) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 24))(((unint64_t)v28 + v20 + 8) & ~v20, ((unint64_t)v29 + v20 + 8) & ~v20, v18);
  uint64_t v30 = *(void *)(v19 + 64) + ((v20 + 64) & ~v20) + 7;
  *(void *)(((unint64_t)v23 + v30) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v22 + v30) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
  long long v32 = (char *)v23 + v31;
  uint64_t v33 = (char *)v22 + v31;
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v23 + v31), (void *)((char *)v22 + v31));
  uint64_t v34 = (void *)((unint64_t)(v32 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (void *)((unint64_t)(v33 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *sub_24EC9583C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v7 + (v14 | 7) + 1;
  int v16 = (void *)(((unint64_t)a1 + v15) & ~(v14 | 7));
  unint64_t v17 = (void *)((unint64_t)&a2[v15] & ~(v14 | 7));
  void *v16 = *v17;
  unint64_t v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
  uint64_t v21 = (void *)(((unint64_t)v16 + 55) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v22 = (void *)(((unint64_t)v17 + 55) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  uint64_t v25 = v13 + 32;
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))(((unint64_t)v23 + v14 + 8) & ~v14, ((unint64_t)v24 + v14 + 8) & ~v14);
  uint64_t v26 = *(void *)(v25 + 32) + ((v14 + 64) & ~v14) + 7;
  *(void *)(((unint64_t)v16 + v26) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + v26) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v28 = (char *)v16 + v27;
  unint64_t v29 = (char *)v17 + v27;
  long long v31 = *(_OWORD *)v29;
  long long v30 = *((_OWORD *)v29 + 1);
  *((void *)v28 + 4) = *((void *)v29 + 4);
  *(_OWORD *)uint64_t v28 = v31;
  *((_OWORD *)v28 + 1) = v30;
  *(_OWORD *)((unint64_t)(v28 + 47) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)(v29 + 47) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_24EC95ADC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  uint64_t v19 = *(void *)(a3 + 32);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + (v21 | 7) + 1;
  uint64_t v23 = (void *)((unint64_t)&a1[v22] & ~(v21 | 7));
  unint64_t v24 = (void *)((unint64_t)&a2[v22] & ~(v21 | 7));
  void *v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  unint64_t v27 = (void *)(((unint64_t)v23 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v24 + 55) & 0xFFFFFFFFFFFFFFF8);
  void *v27 = *v28;
  unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v29 = *v30;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 40))(((unint64_t)v29 + v21 + 8) & ~v21, ((unint64_t)v30 + v21 + 8) & ~v21, v19);
  uint64_t v31 = *(void *)(v20 + 64) + ((v21 + 64) & ~v21) + 7;
  *(void *)(((unint64_t)v23 + v31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + v31) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v32 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v33 = (char *)v23 + v32;
  uint64_t v34 = (char *)v24 + v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23 + v32);
  long long v35 = *(_OWORD *)v34;
  long long v36 = *((_OWORD *)v34 + 1);
  *((void *)v33 + 4) = *((void *)v34 + 4);
  *(_OWORD *)uint64_t v33 = v35;
  *((_OWORD *)v33 + 1) = v36;
  *(_OWORD *)((unint64_t)(v33 + 47) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)(v34 + 47) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24EC95ECC(int *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = v10 | 7;
  uint64_t v13 = v7 + (v10 | 7) + 1;
  if (v11 < a2)
  {
    unint64_t v14 = (((v13 & ~v12) + ((*(void *)(v8 + 64) + ((v10 + 64) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v11 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24EC960D0);
      case 4:
        int v19 = *(int *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_25:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  uint64_t v23 = (unint64_t *)(((((((unint64_t)a1 + v13) & ~v12) + 15) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 0x80000000) != 0)
  {
    unint64_t v25 = *(uint64_t (**)(unint64_t))(v8 + 48);
    return v25(((unint64_t)v23 + v10 + 8) & ~v10);
  }
  else
  {
    unint64_t v24 = *v23;
    if (v24 >= 0xFFFFFFFF) {
      LODWORD(v24) = -1;
    }
    return (v24 + 1);
  }
}

void sub_24EC960E4(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 32) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = v9 + (v12 | 7) + 1;
  size_t v15 = (((v14 & ~(v12 | 7)) + ((*(void *)(v10 + 64) + ((v12 + 64) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v13 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v13;
    if (a2 <= v13)
    {
LABEL_20:
      switch(v18)
      {
        case 1:
          *((unsigned char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)((char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)((char *)a1 + v15) = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            int v22 = (void *)(((((((unint64_t)a1 + v14) & ~(v12 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8);
            if ((v11 & 0x80000000) != 0)
            {
              unint64_t v24 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
              v24(((unint64_t)v22 + v12 + 8) & ~v12, a2);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v23 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v23 = (a2 - 1);
              }
              void *v22 = v23;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if ((((v14 & ~(v12 | 7))
         + ((*(_DWORD *)(v10 + 64) + ((v12 + 64) & ~v12) + 7) & 0xFFFFFFF8)
         + 55) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v16 = a3 - v13 + 1;
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v13;
    if (a2 <= v13) {
      goto LABEL_20;
    }
  }
  if ((((v14 & ~(v12 | 7))
       + ((*(_DWORD *)(v10 + 64) + ((v12 + 64) & ~v12) + 7) & 0xFFFFFFF8)
       + 55) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v20 = v19;
  else {
    int v20 = 1;
  }
  if ((((v14 & ~(v12 | 7))
       + ((*(_DWORD *)(v10 + 64) + ((v12 + 64) & ~v12) + 7) & 0xFFFFFFF8)
       + 55) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v21 = ~v13 + a2;
    bzero(a1, v15);
    *a1 = v21;
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v15) = v20;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v15) = v20;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x24EC96340);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = v20;
      break;
    default:
      return;
  }
}

void sub_24EC96368()
{
  if (!qword_26B1DE038)
  {
    sub_24EE55D70();
    unint64_t v0 = sub_24EE55B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1DE038);
    }
  }
}

uint64_t sub_24EC963C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC96508(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  v8[0] = *(_OWORD *)(a2 + 24);
  v8[1] = v3;
  uint64_t v4 = type metadata accessor for CanvasLayout();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v8 - v5, a1, v4);
  sub_24EE56B70();
  return sub_24EE56B50();
}

uint64_t sub_24EC96608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = (uint64_t (*)())v2[3];
  uint64_t v7 = (void *)v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = *(void *)(type metadata accessor for CanvasLayoutReader() - 8);
  uint64_t v12 = (uint64_t)v2 + ((*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return sub_24EC937CC(a1, v12, v5, v6, v7, v8, v9, v10, a2);
}

uint64_t sub_24EC966DC()
{
  long long v11 = *(_OWORD *)(v0 + 32);
  uint64_t v1 = type metadata accessor for CanvasLayoutReader();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v12 = sub_24EE55C30();
  uint64_t v4 = *(void *)(v12 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v6 + *(int *)(v1 + 68);
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 8))(v8 + *(int *)(v9 + 68), v11);
  sub_24EE56B70();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v6 + *(int *)(v1 + 72));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v3 + v5) & ~v5), v12);
  return swift_deallocObject();
}

uint64_t sub_24EC96940()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = *(void *)(type metadata accessor for CanvasLayoutReader() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_24EE55C30() - 8);
  uint64_t v11 = (uint64_t)v0 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return sub_24EC93B50((uint64_t)v0 + v8, v11, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_24EC96A64(uint64_t a1, double *a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  unint64_t v8 = (void *)v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = *(void *)(type metadata accessor for CanvasLayoutReader() - 8);
  return sub_24EC93DC0(a1, a2, (uint64_t)v2 + ((*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v5, v6, v7, v8, v9, v10);
}

unint64_t sub_24EC96B2C()
{
  unint64_t result = qword_269964A08;
  if (!qword_269964A08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964A08);
  }
  return result;
}

unint64_t sub_24EC96BA0()
{
  unint64_t result = qword_26B1DBA20;
  if (!qword_26B1DBA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DBA20);
  }
  return result;
}

uint64_t sub_24EC96BF4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t DynamicSizeClass.init(width:)@<X0>(char *a1@<X8>, double a2@<D0>)
{
  if (a2 <= 374.0)
  {
    char v4 = 0;
    goto LABEL_16;
  }
  if (a2 >= 374.0 && a2 <= 460.0)
  {
    char v4 = 1;
LABEL_16:
    *a1 = v4;
    return result;
  }
  if (a2 >= 461.0 && a2 <= 726.0)
  {
    char v4 = 2;
    goto LABEL_16;
  }
  if (a2 >= 727.0 && a2 <= 981.0)
  {
    char v4 = 3;
    goto LABEL_16;
  }
  if (a2 >= 982.0 && a2 <= 1194.0)
  {
    char v4 = 4;
    goto LABEL_16;
  }
  if (a2 >= 1195.0)
  {
    char v4 = 5;
    goto LABEL_16;
  }
  uint64_t result = sub_24EE57630();
  __break(1u);
  return result;
}

uint64_t sub_24EC96D54@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int v21 = a1;
  uint64_t v9 = sub_24EE57430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void *)(a4 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  int v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a2, v9, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a4);
    v21(v17);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, a4);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a5, v18, 1, a3);
}

uint64_t LazyCanvasSectionViewDescriptor.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyCanvasSectionViewDescriptor.header.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 164);
  type metadata accessor for CanvasSectionHeader();
  uint64_t v5 = sub_24EE57430();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t LazyCanvasSectionViewDescriptor.footer.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 168));
  return result;
}

uint64_t LazyCanvasSectionViewDescriptor.items.getter(uint64_t a1)
{
  sub_24EC996D0(a1);
  return swift_bridgeObjectRetain();
}

uint64_t LazyCanvasSectionViewDescriptor.metrics.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 176);
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t LazyCanvasSectionViewDescriptor.init(identifier:densityFactor:header:footer:items:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  char v9 = *a4;
  *a7 = a1;
  a7[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for LazyCanvasSectionViewDescriptor();
  uint64_t v11 = (char *)a7 + v10[41];
  type metadata accessor for CanvasSectionHeader();
  uint64_t v12 = sub_24EE57430();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  *((unsigned char *)a7 + v10[42]) = v9;
  *(void *)((char *)a7 + v10[43]) = a5;
  uint64_t v13 = (char *)a7 + v10[44];
  uint64_t v14 = sub_24EE57430();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a6, v14);
}

BOOL sub_24EC97258(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EC97268()
{
  return sub_24EE57880();
}

uint64_t sub_24EC97290(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24EC974A4()
{
  return sub_24EE578B0();
}

uint64_t sub_24EC974EC(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726564616568;
      break;
    case 2:
      uint64_t result = 0x7265746F6F66;
      break;
    case 3:
      uint64_t result = 0x736D657469;
      break;
    case 4:
      uint64_t result = 0x7363697274656DLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24EC97594(char *a1, char *a2)
{
  return sub_24EC97258(*a1, *a2);
}

uint64_t sub_24EC975F0()
{
  return sub_24EC974A4();
}

uint64_t sub_24EC9764C()
{
  return sub_24EC97268();
}

uint64_t sub_24EC9769C()
{
  return sub_24EE578B0();
}

uint64_t sub_24EC9770C()
{
  return sub_24EC974EC(*v0);
}

uint64_t sub_24EC97768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EC97290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EC977C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EC996F4();
  *a1 = result;
  return result;
}

uint64_t sub_24EC97824(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EC97878(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t LazyCanvasSectionViewDescriptor.id.getter()
{
  uint64_t v0 = sub_24EC996FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_24EC97904@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_24EC996FC();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t LazyCanvasSectionViewDescriptor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 144);
  uint64_t v20 = *(void *)(a2 + 152);
  uint64_t v47 = v4;
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  uint64_t v44 = v5;
  uint64_t v43 = v6;
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  uint64_t v41 = v7;
  uint64_t v40 = v8;
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  v31[2] = v9;
  uint64_t v45 = v10;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v39 = v11;
  uint64_t v46 = v12;
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  uint64_t v38 = v13;
  uint64_t v37 = v14;
  uint64_t v62 = v14;
  uint64_t v63 = v15;
  uint64_t v36 = v15;
  uint64_t v35 = v16;
  uint64_t v64 = v16;
  uint64_t v65 = v17;
  uint64_t v34 = v17;
  uint64_t v33 = v18;
  uint64_t v66 = v18;
  uint64_t v67 = v19;
  v31[1] = v19;
  uint64_t v42 = v21;
  uint64_t v68 = v21;
  uint64_t v69 = v20;
  uint64_t v32 = v20;
  type metadata accessor for LazyCanvasSectionViewDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v22 = sub_24EE577C0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)v31 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v26 = v48;
  sub_24EE578D0();
  LOBYTE(v52) = 0;
  uint64_t v27 = v49;
  sub_24EE57770();
  if (v27) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v49 = v23;
  LOBYTE(v70) = 1;
  uint64_t v52 = v47;
  uint64_t v53 = v45;
  uint64_t v54 = v46;
  uint64_t v55 = v42;
  type metadata accessor for CanvasSectionHeader();
  swift_getWitnessTable();
  sub_24EE57760();
  LOBYTE(v52) = *(unsigned char *)(v26 + *(int *)(a2 + 168));
  LOBYTE(v70) = 2;
  sub_24EC9971C();
  sub_24EE577B0();
  uint64_t v70 = *(void *)(v26 + *(int *)(a2 + 172));
  char v51 = 3;
  uint64_t v52 = v47;
  uint64_t v53 = v30;
  uint64_t v54 = v29;
  uint64_t v55 = v41;
  uint64_t v56 = v40;
  uint64_t v57 = v39;
  uint64_t v58 = v46;
  uint64_t v59 = v38;
  uint64_t v60 = v37;
  uint64_t v61 = v36;
  uint64_t v62 = v35;
  uint64_t v63 = v34;
  uint64_t v64 = v33;
  uint64_t v65 = v32;
  type metadata accessor for LazyCanvasItemDescriptor();
  sub_24EE571B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE577B0();
  LOBYTE(v52) = 4;
  sub_24EE57760();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v25, v22);
}

uint64_t LazyCanvasSectionViewDescriptor.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20)
{
  uint64_t v70 = a6;
  uint64_t v74 = a5;
  uint64_t v72 = a4;
  uint64_t v63 = a3;
  uint64_t v71 = (void *)a1;
  uint64_t v49 = a9;
  uint64_t v75 = a17;
  uint64_t v76 = a20;
  uint64_t v69 = a16;
  uint64_t v73 = a15;
  uint64_t v68 = a14;
  uint64_t v67 = a13;
  uint64_t v66 = a12;
  uint64_t v64 = a10;
  uint64_t v62 = a18;
  uint64_t v61 = a7;
  uint64_t v48 = sub_24EE57430();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v47 - v24;
  uint64_t v78 = a2;
  uint64_t v79 = a8;
  uint64_t v58 = a8;
  uint64_t v80 = a11;
  uint64_t v81 = a19;
  uint64_t v65 = a11;
  uint64_t v59 = a19;
  uint64_t v55 = type metadata accessor for CanvasSectionHeader();
  uint64_t v56 = sub_24EE57430();
  uint64_t v52 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v54 = (char *)&v47 - v25;
  uint64_t v78 = a2;
  uint64_t v79 = a3;
  uint64_t v80 = v72;
  uint64_t v81 = v74;
  uint64_t v26 = v70;
  uint64_t v82 = v70;
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v85 = a10;
  uint64_t v27 = v66;
  uint64_t v86 = a11;
  uint64_t v87 = v66;
  uint64_t v28 = v67;
  uint64_t v88 = v67;
  uint64_t v89 = a14;
  uint64_t v29 = v69;
  uint64_t v90 = v73;
  uint64_t v91 = v69;
  uint64_t v30 = v62;
  uint64_t v92 = v75;
  uint64_t v93 = v62;
  uint64_t v94 = a19;
  uint64_t v95 = v76;
  type metadata accessor for LazyCanvasSectionViewDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v57 = sub_24EE57730();
  uint64_t v53 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v32 = (char *)&v47 - v31;
  uint64_t v51 = a2;
  uint64_t v78 = a2;
  uint64_t v79 = v63;
  uint64_t v33 = v71;
  uint64_t v80 = v72;
  uint64_t v81 = v74;
  uint64_t v82 = v26;
  uint64_t v83 = v61;
  uint64_t v84 = v58;
  uint64_t v85 = v64;
  uint64_t v86 = v65;
  uint64_t v87 = v27;
  uint64_t v88 = v28;
  uint64_t v89 = v68;
  uint64_t v90 = v73;
  uint64_t v91 = v29;
  uint64_t v92 = v75;
  uint64_t v93 = v30;
  uint64_t v94 = v59;
  uint64_t v95 = v76;
  uint64_t v34 = type metadata accessor for LazyCanvasSectionViewDescriptor();
  uint64_t v58 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (uint64_t *)((char *)&v47 - v35);
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  uint64_t v59 = v32;
  uint64_t v37 = v60;
  sub_24EE578C0();
  if (v37) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  uint64_t v38 = v54;
  uint64_t v39 = v53;
  uint64_t v40 = v36;
  uint64_t v41 = v56;
  LOBYTE(v78) = 0;
  *uint64_t v40 = sub_24EE576D0();
  v40[1] = v42;
  LOBYTE(v78) = 1;
  swift_getWitnessTable();
  sub_24EE576C0();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v40 + *(int *)(v34 + 164), v38, v41);
  LOBYTE(v96) = 2;
  sub_24EC99770();
  uint64_t v60 = 0;
  sub_24EE57710();
  uint64_t v55 = v34;
  *((unsigned char *)v40 + *(int *)(v34 + 168)) = v78;
  uint64_t v78 = v51;
  uint64_t v79 = v63;
  uint64_t v80 = v72;
  uint64_t v81 = v74;
  uint64_t v82 = v70;
  uint64_t v83 = v64;
  uint64_t v84 = v65;
  uint64_t v85 = v66;
  uint64_t v86 = v67;
  uint64_t v87 = v68;
  uint64_t v88 = v73;
  uint64_t v89 = v69;
  uint64_t v90 = v75;
  uint64_t v91 = v76;
  type metadata accessor for LazyCanvasItemDescriptor();
  sub_24EE571B0();
  LOBYTE(v78) = 3;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE57710();
  *(uint64_t *)((char *)v40 + *(int *)(v55 + 172)) = v96;
  LOBYTE(v78) = 4;
  uint64_t v43 = v50;
  sub_24EE576C0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v57);
  uint64_t v44 = v55;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)v40 + *(int *)(v55 + 176), v43, v48);
  uint64_t v45 = v58;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v58 + 16))(v49, v40, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v45 + 8))(v40, v44);
}

uint64_t sub_24EC98774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return LazyCanvasSectionViewDescriptor.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(char **)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 64), a3, *(void *)(a2 + 72), *(void *)(a2 + 80), *(void *)(a2 + 88), *(void *)(a2 + 96), *(void *)(a2 + 104), *(void *)(a2 + 112), *(void *)(a2 + 120), *(void *)(a2 + 128), *(void *)(a2 + 136), *(char **)(a2 + 144),
           *(void *)(a2 + 152));
}

uint64_t sub_24EC987D0(void *a1, uint64_t a2)
{
  return LazyCanvasSectionViewDescriptor.encode(to:)(a1, a2);
}

uint64_t LazyCanvasSectionViewDescriptor.hash(into:)()
{
  return sub_24EE57440();
}

BOOL static LazyCanvasSectionViewDescriptor.== infix(_:_:)(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v125 = a7;
  uint64_t v124 = a6;
  uint64_t v123 = a5;
  long long v122 = a4;
  uint64_t v112 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v107 = (char *)v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v110 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v28 = (char *)v95 - v27;
  uint64_t v111 = *(void *)(v25 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  long long v109 = (char *)v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v113 = (char *)v95 - v32;
  MEMORY[0x270FA5388](v31);
  long long v114 = (char *)v95 - v33;
  uint64_t v130 = a3;
  uint64_t v135 = a3;
  long long v136 = a9;
  long long v126 = a9;
  long long v131 = (char *)a11;
  uint64_t v137 = a11;
  uint64_t v138 = a19;
  uint64_t v127 = a19;
  uint64_t v34 = type metadata accessor for CanvasSectionHeader();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  long long v117 = (char *)v95 - v36;
  uint64_t v121 = v37;
  uint64_t v38 = sub_24EE57430();
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v119 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  long long v134 = (char *)v95 - v41;
  uint64_t v42 = *(void *)(v38 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  long long v118 = (char *)v95 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v132 = (char *)v95 - v46;
  MEMORY[0x270FA5388](v45);
  long long v133 = (char *)v95 - v47;
  uint64_t v48 = *(void *)a1;
  uint64_t v49 = *((void *)a1 + 1);
  long long v128 = a1;
  uint64_t v50 = *(void *)a2;
  uint64_t v51 = *((void *)a2 + 1);
  long long v129 = a2;
  if (v48 == v50 && v49 == v51 || (v52 = sub_24EE577E0(), BOOL result = 0, (v52 & 1) != 0))
  {
    uint64_t v96 = v28;
    uint64_t v97 = v25;
    uint64_t v135 = v130;
    long long v136 = v122;
    uint64_t v137 = v123;
    uint64_t v138 = v124;
    uint64_t v139 = v125;
    uint64_t v140 = a8;
    uint64_t v98 = a8;
    long long v141 = v126;
    uint64_t v142 = a10;
    uint64_t v99 = a10;
    uint64_t v143 = (uint64_t)v131;
    uint64_t v144 = a12;
    uint64_t v100 = a12;
    uint64_t v101 = a13;
    uint64_t v145 = a13;
    uint64_t v146 = a14;
    uint64_t v102 = a14;
    uint64_t v103 = a15;
    uint64_t v147 = a15;
    uint64_t v148 = a16;
    uint64_t v104 = a16;
    uint64_t v105 = a17;
    uint64_t v149 = a17;
    uint64_t v150 = a18;
    v95[1] = a18;
    uint64_t v151 = v127;
    uint64_t v152 = a20;
    uint64_t v106 = a20;
    uint64_t v54 = type metadata accessor for LazyCanvasSectionViewDescriptor();
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v56 = v133;
    v55(v133, &v128[*(int *)(v54 + 164)], v38);
    uint64_t v108 = v54;
    uint64_t v57 = v132;
    v55(v132, &v129[*(int *)(v54 + 164)], v38);
    uint64_t v116 = v39;
    uint64_t v58 = *(int *)(v39 + 48);
    uint64_t v59 = v134;
    uint64_t v60 = &v134[v58];
    v55(v134, v56, v38);
    long long v120 = v60;
    v55(v60, v57, v38);
    uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    uint64_t v62 = v59;
    uint64_t v63 = v121;
    if (v61(v62, 1, v121) == 1)
    {
      uint64_t v64 = *(void (**)(char *, uint64_t))(v42 + 8);
      v64(v57, v38);
      v64(v56, v38);
      if (v61(v120, 1, v63) == 1)
      {
        v64(v134, v38);
LABEL_12:
        uint64_t v73 = v108;
        uint64_t v74 = v128;
        uint64_t v75 = v129;
        if (v128[*(int *)(v108 + 168)] == v129[*(int *)(v108 + 168)])
        {
          uint64_t v135 = v130;
          long long v136 = v122;
          uint64_t v137 = v123;
          uint64_t v138 = v124;
          uint64_t v139 = v125;
          uint64_t v140 = v99;
          long long v141 = v131;
          uint64_t v142 = v100;
          uint64_t v143 = v101;
          uint64_t v144 = v102;
          uint64_t v145 = v103;
          uint64_t v146 = v104;
          uint64_t v147 = v105;
          uint64_t v148 = v106;
          type metadata accessor for LazyCanvasItemDescriptor();
          swift_getWitnessTable();
          if (sub_24EE571D0())
          {
            uint64_t v76 = v111;
            uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
            uint64_t v78 = v114;
            uint64_t v79 = v97;
            v77(v114, &v74[*(int *)(v73 + 176)], v97);
            uint64_t v80 = v113;
            v77(v113, &v75[*(int *)(v73 + 176)], v79);
            uint64_t v81 = v96;
            uint64_t v82 = &v96[*(int *)(TupleTypeMetadata2 + 48)];
            v77(v96, v78, v79);
            long long v134 = v82;
            v77(v82, v80, v79);
            uint64_t v83 = v112;
            uint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
            if (v84(v81, 1, v98) == 1)
            {
              uint64_t v85 = *(void (**)(char *, uint64_t))(v76 + 8);
              v85(v80, v79);
              v85(v78, v79);
              uint64_t v86 = v81;
              if (v84(v134, 1, v98) == 1)
              {
                v85(v81, v79);
                return 1;
              }
            }
            else
            {
              uint64_t v87 = v109;
              v77(v109, v81, v79);
              uint64_t v88 = v134;
              uint64_t v89 = v98;
              uint64_t v86 = v81;
              if (v84(v134, 1, v98) != 1)
              {
                uint64_t v91 = v107;
                (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v107, v88, v89);
                char v92 = sub_24EE57040();
                uint64_t v93 = *(void (**)(char *, uint64_t))(v83 + 8);
                v93(v91, v89);
                uint64_t v94 = *(void (**)(char *, uint64_t))(v76 + 8);
                v94(v113, v79);
                v94(v114, v79);
                v93(v87, v89);
                v94(v86, v79);
                return (v92 & 1) != 0;
              }
              uint64_t v90 = *(void (**)(char *, uint64_t))(v76 + 8);
              v90(v113, v79);
              v90(v114, v79);
              (*(void (**)(char *, uint64_t))(v83 + 8))(v87, v89);
            }
            (*(void (**)(char *, uint64_t))(v110 + 8))(v86, TupleTypeMetadata2);
          }
        }
        return 0;
      }
    }
    else
    {
      uint64_t v65 = (uint64_t)v118;
      uint64_t v66 = v134;
      v55(v118, v134, v38);
      uint64_t v67 = v120;
      if (v61(v120, 1, v63) != 1)
      {
        uint64_t v69 = (uint64_t)v117;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v117, v67, v63);
        BOOL v70 = static CanvasSectionHeader.== infix(_:_:)(v65, v69, v130, v126, (uint64_t)v131, v127);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v71(v69, v63);
        uint64_t v72 = *(void (**)(char *, uint64_t))(v42 + 8);
        v72(v132, v38);
        v72(v133, v38);
        v71(v65, v63);
        v72(v66, v38);
        if (!v70) {
          return 0;
        }
        goto LABEL_12;
      }
      uint64_t v68 = *(void (**)(char *, uint64_t))(v42 + 8);
      v68(v132, v38);
      v68(v133, v38);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v65, v63);
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v134, v116);
    return 0;
  }
  return result;
}

uint64_t LazyCanvasSectionViewDescriptor.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24EC99610()
{
  return sub_24EE578B0();
}

BOOL sub_24EC99654(char *a1, char *a2, uint64_t a3)
{
  return static LazyCanvasSectionViewDescriptor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), *(void *)(a3 + 48), *(void *)(a3 + 56), *(char **)(a3 + 64), *(void *)(a3 + 72), *(void *)(a3 + 80), *(void *)(a3 + 88), *(void *)(a3 + 96), *(void *)(a3 + 104), *(void *)(a3 + 112), *(void *)(a3 + 120), *(void *)(a3 + 128), *(void *)(a3 + 136), *(void *)(a3 + 144),
           *(void *)(a3 + 152));
}

uint64_t sub_24EC996A8(uint64_t a1)
{
  sub_24EC996D0(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EC996D0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 172));
}

uint64_t type metadata accessor for LazyCanvasSectionViewDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EC996F4()
{
  return 5;
}

uint64_t sub_24EC996FC()
{
  return *(void *)v0;
}

uint64_t type metadata accessor for LazyCanvasSectionViewDescriptor.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24EC9971C()
{
  unint64_t result = qword_26B1DC5F0[0];
  if (!qword_26B1DC5F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DC5F0);
  }
  return result;
}

unint64_t sub_24EC99770()
{
  unint64_t result = qword_269964A10[0];
  if (!qword_269964A10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269964A10);
  }
  return result;
}

uint64_t sub_24EC997C4()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_24EC997D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC997EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 168);
}

uint64_t sub_24EC997F4()
{
  type metadata accessor for CanvasSectionHeader();
  uint64_t result = sub_24EE57430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EE57430();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24EC9990C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v72 = sub_24EE55880();
  uint64_t v6 = *(void *)(v72 - 8);
  uint64_t v7 = a3[8];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(_DWORD *)(v8 + 80);
  int v11 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80);
  uint64_t v12 = a3[2];
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(unsigned int *)(v13 + 84);
  uint64_t v16 = v14;
  int v17 = v11 | v14;
  unint64_t v18 = (v11 | v14);
  uint64_t v19 = *(unsigned int *)(v6 + 84);
  uint64_t v20 = *(unsigned int *)(v8 + 84);
  if (v20) {
    unsigned int v21 = v20 - 1;
  }
  else {
    unsigned int v21 = 0;
  }
  if (v21 <= v19) {
    unsigned int v22 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v22 = v21;
  }
  unsigned int v23 = v15 - 1;
  if (!v15) {
    unsigned int v23 = 0;
  }
  if (v23 <= v22) {
    unsigned int v24 = v22;
  }
  else {
    unsigned int v24 = v23;
  }
  size_t v25 = *(void *)(v8 + 64);
  if (!v20) {
    ++v25;
  }
  uint64_t v71 = *(void *)(*(void *)(v72 - 8) + 64) + v10;
  size_t __n = v25;
  size_t v70 = v25 + v16;
  size_t v26 = (v25 + v16 + (v71 & ~v10)) & ~v16;
  if (v15) {
    size_t v27 = *(void *)(v13 + 64);
  }
  else {
    size_t v27 = *(void *)(v13 + 64) + 1;
  }
  if (v24) {
    uint64_t v28 = v26 + v27;
  }
  else {
    uint64_t v28 = v26 + v27 + 1;
  }
  uint64_t v73 = a3[7];
  uint64_t v29 = *(void *)(v73 - 8);
  uint64_t v30 = v29;
  uint64_t v31 = *(_DWORD *)(v29 + 80);
  if (*(_DWORD *)(v29 + 84)) {
    uint64_t v32 = *(void *)(*(void *)(v73 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v73 - 8) + 64) + 1;
  }
  BOOL v33 = (v31 | v18) <= 7 && ((*(_DWORD *)(v29 + 80) | v17) & 0x100000) == 0;
  if (!v33 || ((v31 + ((v28 + ((v18 + 16) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v31) + v32 > 0x18)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    uint64_t v36 = v35 + (((v31 | v18) & 0xF8 ^ 0x1F8) & ((v31 | v18) + 16));
    swift_retain();
    return (uint64_t *)v36;
  }
  size_t v59 = v32;
  uint64_t v61 = v7;
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  uint64_t v64 = ~v10;
  size_t v65 = v26 + v27;
  uint64_t v60 = ~v16;
  size_t v66 = v28;
  uint64_t v37 = a2[1];
  *a1 = *a2;
  a1[1] = v37;
  uint64_t v67 = a1;
  uint64_t v38 = (unsigned char *)(((unint64_t)a1 + v18 + 16) & ~v18);
  uint64_t v39 = (unsigned __int16 *)(((unint64_t)a2 + v18 + 16) & ~v18);
  unsigned int v69 = v24;
  swift_bridgeObjectRetain();
  if (v69)
  {
    if (v19 == v69)
    {
      uint64_t v40 = v30;
      if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(v39, v19, v72)) {
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v44 = ((unint64_t)v39 + v71) & v64;
      BOOL v33 = v21 == v69;
      uint64_t v40 = v30;
      if (v33) {
        unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v44, v20, v61);
      }
      else {
        unsigned int v45 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v62 + 48))((v70 + v44) & v60, v15, v63);
      }
      if (v45 < 2)
      {
LABEL_49:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 16))(v38, v39, v72);
        uint64_t v46 = (void *)((unint64_t)&v38[v71] & v64);
        uint64_t v47 = (const void *)(((unint64_t)v39 + v71) & v64);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v47, 1, v61))
        {
          memcpy(v46, v47, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v46, v47, v61);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0, 1, v61);
        }
        uint64_t v48 = (void *)(((unint64_t)v46 + v70) & v60);
        uint64_t v49 = (const void *)(((unint64_t)v47 + v70) & v60);
        uint64_t v50 = v73;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48))(v49, 1, v63))
        {
          memcpy(v48, v49, v27);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v48, v49, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v48, 0, 1, v63);
        }
        uint64_t v51 = ~v31;
        size_t v52 = v66;
        if (!v69) {
          v38[v65] = 0;
        }
        goto LABEL_63;
      }
    }
  }
  else
  {
    uint64_t v40 = v30;
    if (!*((unsigned char *)v39 + v65)) {
      goto LABEL_49;
    }
    int v41 = (*((unsigned __int8 *)v39 + v65) - 1) << (8 * v65);
    if (v65 > 3) {
      int v41 = 0;
    }
    if (v65)
    {
      int v42 = v65 <= 3 ? v65 : 4;
      switch(v42)
      {
        case 2:
          int v43 = *v39;
          break;
        case 3:
          int v43 = *v39 | (*((unsigned __int8 *)v39 + 2) << 16);
          break;
        case 4:
          int v43 = *(_DWORD *)v39;
          break;
        default:
          int v43 = *(unsigned __int8 *)v39;
          break;
      }
    }
    else
    {
      int v43 = 0;
    }
    if ((v43 | v41) == 0xFFFFFFFF) {
      goto LABEL_49;
    }
  }
  size_t v52 = v66;
  memcpy(v38, v39, v66);
  uint64_t v50 = v73;
  uint64_t v51 = ~v31;
LABEL_63:
  v38[v52] = *((unsigned char *)v39 + v52);
  unint64_t v53 = (unint64_t)&v38[v52] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v39 + v52) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  uint64_t v55 = (void *)((v53 + v31 + 16) & v51);
  uint64_t v56 = (const void *)((v54 + v31 + 16) & v51);
  uint64_t v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v57(v56, 1, v50))
  {
    memcpy(v55, v56, v59);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v55, v56, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v55, 0, 1, v50);
  }
  return v67;
}

uint64_t sub_24EC99F48(uint64_t a1, void *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_24EE55880();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = a2[8];
  uint64_t v6 = *(void *)(v39 - 8);
  uint64_t v40 = a2[2];
  uint64_t v7 = *(void *)(v40 - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80);
  uint64_t v10 = *(_DWORD *)(v7 + 80);
  int v11 = (unsigned __int16 *)((a1
                            + (*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80))
                            + 16) & ~(unint64_t)(*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80)));
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v12) {
    unsigned int v15 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v16 = v8 - 1;
  if (!v8) {
    unsigned int v16 = 0;
  }
  if (v16 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(void *)(*(void *)(v39 - 8) + 64);
  if (!v13) {
    ++v18;
  }
  uint64_t v19 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v20 = v18 + v10;
  uint64_t v21 = (v18 + v10 + (v19 & ~v9)) & ~v10;
  uint64_t v22 = *(void *)(*(void *)(v40 - 8) + 64);
  if (!v8) {
    ++v22;
  }
  uint64_t v23 = v22 + v21;
  uint64_t v37 = ~v9;
  uint64_t v38 = ~v10;
  if (v17)
  {
    if (v12 == v17)
    {
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(v11, v12, v4)) {
        goto LABEL_42;
      }
    }
    else
    {
      unint64_t v27 = ((unint64_t)v11 + v19) & ~v9;
      if (v14 == v17) {
        unsigned int v28 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v27, v13, v39);
      }
      else {
        unsigned int v28 = (*(uint64_t (**)(unint64_t))(v7 + 48))((v20 + v27) & ~v10);
      }
      if (v28 >= 2) {
        goto LABEL_42;
      }
    }
    goto LABEL_38;
  }
  if (!*((unsigned char *)v11 + v23)) {
    goto LABEL_38;
  }
  int v24 = (*((unsigned __int8 *)v11 + v23) - 1) << (8 * v23);
  if (v23 > 3) {
    int v24 = 0;
  }
  if (v23)
  {
    int v25 = v23 <= 3 ? v22 + v21 : 4;
    switch(v25)
    {
      case 2:
        int v26 = *v11;
        break;
      case 3:
        int v26 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)v11;
        break;
      default:
        int v26 = *(unsigned __int8 *)v11;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  if ((v26 | v24) == 0xFFFFFFFF)
  {
LABEL_38:
    (*(void (**)(unsigned __int16 *, uint64_t))(v5 + 8))(v11, v4);
    unint64_t v29 = ((unint64_t)v11 + v19) & v37;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v29, 1, v39)) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v29, v39);
    }
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v20 + v29) & v38, 1, v40)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((v20 + v29) & v38, v40);
    }
  }
LABEL_42:
  if (v17) {
    uint64_t v30 = v11;
  }
  else {
    uint64_t v30 = (unsigned __int16 *)((char *)v11 + 1);
  }
  unint64_t v31 = ((unint64_t)v30 + v23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v32 = a2[7];
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (v31 + *(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v41 = v33;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v32);
  if (!result)
  {
    uint64_t v36 = *(uint64_t (**)(unint64_t, uint64_t))(v41 + 8);
    return v36(v34, v32);
  }
  return result;
}

void *sub_24EC9A39C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v61 = sub_24EE55880();
  uint64_t v62 = a3;
  uint64_t v7 = *(void *)(v61 - 8);
  uint64_t v63 = *(void *)(a3 + 64);
  uint64_t v8 = *(void *)(v63 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v59 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v59 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v58 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v10 + 80));
  size_t v65 = a1;
  uint64_t v64 = ((unint64_t)a1 + v13 + 16) & ~v13;
  unsigned int v14 = (unsigned __int16 *)(((unint64_t)a2 + v13 + 16) & ~v13);
  uint64_t v15 = *(unsigned int *)(v7 + 84);
  uint64_t v57 = v8;
  uint64_t v16 = *(unsigned int *)(v8 + 84);
  if (v16) {
    unsigned int v17 = v16 - 1;
  }
  else {
    unsigned int v17 = 0;
  }
  if (v17 <= v15) {
    unsigned int v18 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v18 = v17;
  }
  unsigned int v19 = v11 - 1;
  if (!v11) {
    unsigned int v19 = 0;
  }
  if (v19 <= v18) {
    unsigned int v20 = v18;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v16) {
    uint64_t v21 = *(void *)(*(void *)(v63 - 8) + 64);
  }
  else {
    uint64_t v21 = *(void *)(*(void *)(v63 - 8) + 64) + 1;
  }
  uint64_t v22 = *(void *)(*(void *)(v61 - 8) + 64);
  uint64_t v60 = ~v9;
  uint64_t v23 = v22 + v9;
  uint64_t v56 = ~v12;
  size_t __n = v21;
  uint64_t v55 = v21 + v12;
  uint64_t v24 = (v21 + v12 + ((v22 + v9) & ~v9)) & ~v12;
  size_t v25 = *(void *)(*(void *)(v59 - 8) + 64);
  if (!v11) {
    ++v25;
  }
  size_t v54 = v25;
  size_t v26 = v24 + v25;
  swift_bridgeObjectRetain();
  if (!v20)
  {
    uint64_t v28 = v63;
    unint64_t v29 = (char *)v64;
    if (!*((unsigned char *)v14 + v26)) {
      goto LABEL_34;
    }
    int v30 = (*((unsigned __int8 *)v14 + v26) - 1) << (8 * v26);
    if (v26 > 3) {
      int v30 = 0;
    }
    if (v26)
    {
      int v31 = v26 <= 3 ? v26 : 4;
      switch(v31)
      {
        case 2:
          int v32 = *v14;
          break;
        case 3:
          int v32 = *v14 | (*((unsigned __int8 *)v14 + 2) << 16);
          break;
        case 4:
          int v32 = *(_DWORD *)v14;
          break;
        default:
          int v32 = *(unsigned __int8 *)v14;
          break;
      }
    }
    else
    {
      int v32 = 0;
    }
    if ((v32 | v30) == 0xFFFFFFFF) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (v15 != v20)
  {
    unint64_t v33 = ((unint64_t)v14 + v23) & v60;
    if (v17 == v20)
    {
      uint64_t v28 = v63;
      unint64_t v29 = (char *)v64;
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v57 + 48))(v33, v16, v63) < 2) {
        goto LABEL_34;
      }
    }
    else
    {
      unsigned int v34 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v58 + 48))((v55 + v33) & v56, v11, v59);
      uint64_t v28 = v63;
      unint64_t v29 = (char *)v64;
      if (v34 < 2) {
        goto LABEL_34;
      }
    }
LABEL_47:
    if (v20) {
      size_t v41 = v26;
    }
    else {
      size_t v41 = v26 + 1;
    }
    memcpy(v29, v14, v41);
    uint64_t v40 = v62;
    goto LABEL_51;
  }
  int v27 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(v14, v15, v61);
  uint64_t v28 = v63;
  unint64_t v29 = (char *)v64;
  if (v27) {
    goto LABEL_47;
  }
LABEL_34:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v7 + 16))(v29, v14, v61);
  uint64_t v35 = (void *)((unint64_t)&v29[v23] & v60);
  uint64_t v36 = v14;
  uint64_t v37 = (const void *)(((unint64_t)v14 + v23) & v60);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v37, 1, v28))
  {
    memcpy(v35, v37, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v35, v37, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v35, 0, 1, v28);
  }
  uint64_t v38 = (void *)(((unint64_t)v35 + v55) & v56);
  uint64_t v39 = (const void *)(((unint64_t)v37 + v55) & v56);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v39, 1, v59))
  {
    memcpy(v38, v39, v54);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v38, v39, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v38, 0, 1, v59);
  }
  unsigned int v14 = v36;
  uint64_t v40 = v62;
  if (!v20) {
    v29[v26] = 0;
  }
LABEL_51:
  if (v20) {
    size_t v42 = v26;
  }
  else {
    size_t v42 = v26 + 1;
  }
  unint64_t v43 = (unint64_t)&v29[v42];
  unint64_t v44 = (unint64_t)v14 + v42;
  *(unsigned char *)unint64_t v43 = *(unsigned char *)v44;
  v43 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v43 + 8) = *(void *)((v44 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v45 = *(void *)(v40 + 56);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v48 = (void *)((v47 + 16 + v43) & ~v47);
  uint64_t v49 = (const void *)((v47 + 16 + (v44 & 0xFFFFFFFFFFFFFFF8)) & ~v47);
  uint64_t v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
  swift_bridgeObjectRetain();
  if (v50(v49, 1, v45))
  {
    if (*(_DWORD *)(v46 + 84)) {
      size_t v51 = *(void *)(v46 + 64);
    }
    else {
      size_t v51 = *(void *)(v46 + 64) + 1;
    }
    memcpy(v48, v49, v51);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v48, v49, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v45);
  }
  return v65;
}

void *sub_24EC9A954(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v112 = a1;
  uint64_t v113 = a3;
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(unsigned int *)(v13 + 84);
  uint64_t v16 = *(_DWORD *)(v13 + 80);
  uint64_t v17 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v13 + 80));
  unsigned int v18 = (unsigned __int16 *)(((unint64_t)a1 + v17 + 16) & ~v17);
  unsigned int v19 = (unsigned __int16 *)(((unint64_t)a2 + v17 + 16) & ~v17);
  uint64_t v20 = *(unsigned int *)(v7 + 84);
  uint64_t v21 = *(unsigned int *)(v9 + 84);
  if (v21) {
    unsigned int v22 = v21 - 1;
  }
  else {
    unsigned int v22 = 0;
  }
  if (v22 <= v20) {
    unsigned int v23 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v23 = v22;
  }
  unsigned int v24 = v15 - 1;
  if (!v15) {
    unsigned int v24 = 0;
  }
  if (v24 <= v23) {
    unsigned int v25 = v23;
  }
  else {
    unsigned int v25 = v24;
  }
  size_t v26 = *(void *)(v9 + 64);
  if (v21) {
    size_t v27 = v26;
  }
  else {
    size_t v27 = v26 + 1;
  }
  uint64_t v28 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  size_t v29 = (v27 + v16 + (v28 & ~v11)) & ~v16;
  if (v15) {
    uint64_t v30 = *(void *)(v13 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v13 + 64) + 1;
  }
  size_t v31 = v29 + v30;
  uint64_t v108 = v10;
  uint64_t v109 = v8;
  size_t v104 = v30;
  size_t v105 = v27 + v16;
  uint64_t v106 = ~v16;
  size_t __n = v27;
  uint64_t v107 = ~v11;
  if (!v25)
  {
    char v44 = 8 * v31;
    unint64_t v43 = v112;
    uint64_t v42 = v113;
    size_t v41 = v18;
    if (*((unsigned char *)v18 + v31))
    {
      int v45 = (*((unsigned __int8 *)v18 + v31) - 1) << v44;
      if (v31 > 3) {
        int v45 = 0;
      }
      if (v31)
      {
        int v46 = v31 <= 3 ? v31 : 4;
        switch(v46)
        {
          case 2:
            int v47 = *v18;
            break;
          case 3:
            int v47 = *v18 | (*((unsigned __int8 *)v18 + 2) << 16);
            break;
          case 4:
            int v47 = *(_DWORD *)v18;
            break;
          default:
            int v47 = *(unsigned __int8 *)v18;
            break;
        }
      }
      else
      {
        int v47 = 0;
      }
      if ((v47 | v45) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v19 + v31)) {
          goto LABEL_107;
        }
        int v55 = (*((unsigned __int8 *)v19 + v31) - 1) << v44;
        if (v31 > 3) {
          int v55 = 0;
        }
        if (v31)
        {
          int v56 = v31 <= 3 ? v31 : 4;
          switch(v56)
          {
            case 2:
              int v57 = *v19;
              break;
            case 3:
              int v57 = *v19 | (*((unsigned __int8 *)v19 + 2) << 16);
              break;
            case 4:
              int v57 = *(_DWORD *)v19;
              break;
            default:
              int v57 = *(unsigned __int8 *)v19;
              break;
          }
        }
        else
        {
          int v57 = 0;
        }
        if ((v57 | v55) == 0xFFFFFFFF) {
          goto LABEL_107;
        }
        goto LABEL_103;
      }
    }
    if (!*((unsigned char *)v19 + v31)) {
      goto LABEL_84;
    }
    int v58 = (*((unsigned __int8 *)v19 + v31) - 1) << v44;
    if (v31 > 3) {
      int v58 = 0;
    }
    if (v31)
    {
      if (v31 <= 3) {
        int v59 = v31;
      }
      else {
        int v59 = 4;
      }
      switch(v59)
      {
        case 2:
          int v60 = *v19;
          break;
        case 3:
          int v60 = *v19 | (*((unsigned __int8 *)v19 + 2) << 16);
          break;
        case 4:
          int v60 = *(_DWORD *)v19;
          break;
        default:
          int v60 = *(unsigned __int8 *)v19;
          break;
      }
    }
    else
    {
      int v60 = 0;
    }
    int v40 = (v60 | v58) + 1;
    goto LABEL_75;
  }
  uint64_t v110 = v19;
  int v32 = v18;
  if (v20 == v25)
  {
    unint64_t v33 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v98 = *(void *)(v12 - 8);
    uint64_t v102 = v12;
    size_t v34 = v29 + v30;
    unsigned int v35 = v25;
    uint64_t v36 = v18;
    uint64_t v37 = v6;
    uint64_t v38 = *(void *)(v6 - 8);
    int v39 = v33(v18, v20, v6);
    unsigned int v19 = v110;
    int v40 = v33(v110, v20, v37);
    uint64_t v7 = v38;
    uint64_t v6 = v37;
    size_t v41 = v36;
    unsigned int v25 = v35;
    size_t v31 = v34;
    uint64_t v12 = v102;
    uint64_t v14 = v98;
    unint64_t v43 = v112;
    uint64_t v42 = v113;
    if (v39)
    {
      if (!v40) {
        goto LABEL_107;
      }
      goto LABEL_103;
    }
LABEL_75:
    if (v40) {
      goto LABEL_76;
    }
LABEL_84:
    unsigned int v100 = v25;
    (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v7 + 24))(v41, v19, v6);
    uint64_t v64 = (void *)((unint64_t)&v41[v28] & v107);
    uint64_t v111 = v19;
    size_t v65 = (void *)(((unint64_t)v19 + v28) & v107);
    size_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v108 + 48);
    int v67 = v66(v64, 1, v109);
    int v68 = v66(v65, 1, v109);
    if (v67)
    {
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v108 + 16))(v64, v65, v109);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v109);
        goto LABEL_90;
      }
    }
    else
    {
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v108 + 24))(v64, v65, v109);
LABEL_90:
        unsigned int v69 = (void *)(((unint64_t)v64 + v105) & v106);
        size_t v70 = (void *)(((unint64_t)v65 + v105) & v106);
        uint64_t v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
        int v72 = v71(v69, 1, v12);
        int v73 = v71(v70, 1, v12);
        if (v72)
        {
          if (!v73)
          {
            (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v69, v70, v12);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v69, 0, 1, v12);
LABEL_96:
            unsigned int v19 = v111;
            unsigned int v25 = v100;
            uint64_t v42 = v113;
            goto LABEL_115;
          }
        }
        else
        {
          if (!v73)
          {
            (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v69, v70, v12);
            goto LABEL_96;
          }
          (*(void (**)(void *, uint64_t))(v14 + 8))(v69, v12);
        }
        memcpy(v69, v70, v104);
        goto LABEL_96;
      }
      (*(void (**)(void *, uint64_t))(v108 + 8))(v64, v109);
    }
    memcpy(v64, v65, __n);
    goto LABEL_90;
  }
  uint64_t v99 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  unint64_t v49 = ((unint64_t)v18 + v28) & ~v11;
  if (v22 == v25) {
    unsigned int v50 = (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 48))(v49, v21);
  }
  else {
    unsigned int v50 = (*(uint64_t (**)(size_t, uint64_t))(v13 + 48))((v27 + v16 + v49) & ~v16, v15);
  }
  if (v50 >= 2)
  {
    unint64_t v53 = ((unint64_t)v110 + v28) & v107;
    if (v22 == v25) {
      unsigned int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(v53, v21, v109);
    }
    else {
      unsigned int v54 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v14 + 48))((v105 + v53) & v106, v15, v12);
    }
    unint64_t v43 = v112;
    uint64_t v42 = v113;
    size_t v41 = v32;
    unsigned int v19 = v110;
    uint64_t v6 = v48;
    uint64_t v7 = v99;
    if (v54 < 2)
    {
LABEL_107:
      unsigned int v101 = v25;
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v7 + 16))(v41, v19, v6);
      uint64_t v75 = (void *)((unint64_t)&v41[v28] & v107);
      uint64_t v76 = (const void *)(((unint64_t)v19 + v28) & v107);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v76, 1, v109))
      {
        memcpy(v75, v76, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v75, v76, v109);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v75, 0, 1, v109);
      }
      uint64_t v77 = (void *)(((unint64_t)v75 + v105) & v106);
      uint64_t v78 = (const void *)(((unint64_t)v76 + v105) & v106);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v78, 1, v12))
      {
        memcpy(v77, v78, v104);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v77, v78, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v77, 0, 1, v12);
      }
      unsigned int v25 = v101;
      unint64_t v43 = v112;
      uint64_t v42 = v113;
      if (!v101) {
        v41[v31] = 0;
      }
      goto LABEL_115;
    }
LABEL_103:
    if (v25) {
      size_t v74 = v31;
    }
    else {
      size_t v74 = v31 + 1;
    }
    memcpy(v41, v19, v74);
    goto LABEL_115;
  }
  unint64_t v51 = ((unint64_t)v110 + v28) & v107;
  if (v22 == v25) {
    unsigned int v52 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(v51, v21, v109);
  }
  else {
    unsigned int v52 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v14 + 48))((v105 + v51) & v106, v15, v12);
  }
  unint64_t v43 = v112;
  uint64_t v42 = v113;
  size_t v41 = v32;
  unsigned int v19 = v110;
  uint64_t v6 = v48;
  uint64_t v7 = v99;
  if (v52 < 2) {
    goto LABEL_84;
  }
LABEL_76:
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v41, v6);
  unint64_t v61 = (unint64_t)&v41[v28] & v107;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(v61, 1, v109)) {
    (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v61, v109);
  }
  unint64_t v62 = (v105 + v61) & v106;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v62, 1, v12)) {
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v62, v12);
  }
  if (v25) {
    size_t v63 = v31;
  }
  else {
    size_t v63 = v31 + 1;
  }
  memcpy(v41, v19, v63);
  unint64_t v43 = v112;
LABEL_115:
  if (v25) {
    size_t v79 = v31;
  }
  else {
    size_t v79 = v31 + 1;
  }
  unint64_t v80 = (unint64_t)&v41[v79];
  unint64_t v81 = (unint64_t)v19 + v79;
  *(unsigned char *)unint64_t v80 = *(unsigned char *)v81;
  unint64_t v82 = v80 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v83 = v81 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v80 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v81 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v84 = *(void *)(v42 + 56);
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(unsigned __int8 *)(v85 + 80);
  uint64_t v87 = (void *)((v86 + 16 + v82) & ~v86);
  uint64_t v88 = (void *)((v86 + 16 + v83) & ~v86);
  uint64_t v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  int v90 = v89(v87, 1, v84);
  int v91 = v89(v88, 1, v84);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(void *, void *, uint64_t))(v85 + 16))(v87, v88, v84);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v84);
      return v43;
    }
    int v92 = *(_DWORD *)(v85 + 84);
    size_t v93 = *(void *)(v85 + 64);
  }
  else
  {
    if (!v91)
    {
      (*(void (**)(void *, void *, uint64_t))(v85 + 24))(v87, v88, v84);
      return v43;
    }
    uint64_t v95 = *(void (**)(void *, uint64_t))(v85 + 8);
    uint64_t v94 = v85 + 8;
    v95(v87, v84);
    int v92 = *(_DWORD *)(v94 + 76);
    size_t v93 = *(void *)(v94 + 56);
  }
  if (v92) {
    size_t v96 = v93;
  }
  else {
    size_t v96 = v93 + 1;
  }
  memcpy(v87, v88, v96);
  return v43;
}

_OWORD *sub_24EC9B4A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 64);
  size_t v9 = *(void *)(v8 - 8);
  size_t v10 = v9;
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v69 = *(void *)(a3 + 16);
  uint64_t v70 = a3;
  uint64_t v12 = *(void *)(v69 - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  uint64_t v15 = *(_DWORD *)(v12 + 80);
  uint64_t v16 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v12 + 80));
  uint64_t v71 = a1;
  __dst = (char *)(((unint64_t)a1 + v16 + 16) & ~v16);
  uint64_t v17 = (unsigned __int16 *)(((unint64_t)a2 + v16 + 16) & ~v16);
  uint64_t v18 = *(unsigned int *)(v7 + 84);
  uint64_t v19 = *(unsigned int *)(v9 + 84);
  unsigned int v20 = v19 - 1;
  if (!v19) {
    unsigned int v20 = 0;
  }
  if (v20 <= v18) {
    unsigned int v21 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v21 = v20;
  }
  unsigned int v22 = v14 - 1;
  if (!v14) {
    unsigned int v22 = 0;
  }
  if (v22 <= v21) {
    unsigned int v23 = v21;
  }
  else {
    unsigned int v23 = v22;
  }
  size_t v24 = *(void *)(v9 + 64);
  if (v19) {
    size_t v25 = v24;
  }
  else {
    size_t v25 = v24 + 1;
  }
  uint64_t v26 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  size_t v27 = v25 + v15;
  if (v14) {
    uint64_t v28 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v28 = *(void *)(v12 + 64) + 1;
  }
  size_t v29 = ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28;
  uint64_t v67 = ~v11;
  uint64_t v68 = ~v15;
  size_t __n = v25;
  if (!v23)
  {
    if (!*((unsigned char *)v17 + v29)) {
      goto LABEL_34;
    }
    int v40 = (*((unsigned __int8 *)v17 + v29) - 1) << (8 * v29);
    if (v29 > 3) {
      int v40 = 0;
    }
    if (v29)
    {
      int v41 = v29 <= 3 ? ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28 : 4;
      switch(v41)
      {
        case 2:
          int v42 = *v17;
          break;
        case 3:
          int v42 = *v17 | (*((unsigned __int8 *)v17 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)v17;
          break;
        default:
          int v42 = *(unsigned __int8 *)v17;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    if ((v42 | v40) == 0xFFFFFFFF) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (v18 == v23)
  {
    uint64_t v30 = v17;
    size_t v63 = v10;
    unsigned int v31 = v23;
    uint64_t v32 = v28;
    unint64_t v33 = v17;
    uint64_t v34 = *(void *)(v69 - 8);
    size_t v35 = v29;
    size_t v36 = v25 + v15;
    uint64_t v37 = v8;
    uint64_t v38 = v6;
    int v39 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(v30, v18, v6);
    uint64_t v6 = v38;
    uint64_t v8 = v37;
    size_t v27 = v36;
    size_t v29 = v35;
    uint64_t v13 = v34;
    uint64_t v17 = v33;
    uint64_t v28 = v32;
    unsigned int v23 = v31;
    size_t v10 = v63;
    if (!v39) {
      goto LABEL_34;
    }
LABEL_47:
    if (v23) {
      size_t v52 = v29;
    }
    else {
      size_t v52 = v29 + 1;
    }
    unsigned int v50 = __dst;
    memcpy(__dst, v17, v52);
    uint64_t v51 = v70;
    goto LABEL_51;
  }
  size_t v64 = v6;
  unint64_t v43 = ((unint64_t)v17 + v26) & ~v11;
  if (v20 == v23) {
    unsigned int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v43, v19, v8);
  }
  else {
    unsigned int v44 = (*(uint64_t (**)(size_t))(v12 + 48))((v27 + v43) & ~v15);
  }
  uint64_t v6 = v64;
  if (v44 >= 2) {
    goto LABEL_47;
  }
LABEL_34:
  size_t v65 = v28;
  uint64_t v45 = v8;
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v7 + 32))(__dst, v17, v6);
  int v46 = (void *)((unint64_t)&__dst[v26] & v67);
  int v47 = (const void *)(((unint64_t)v17 + v26) & v67);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v47, 1, v45))
  {
    memcpy(v46, v47, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v46, v47, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v45);
  }
  uint64_t v48 = (void *)(((unint64_t)v46 + v27) & v68);
  unint64_t v49 = (const void *)(((unint64_t)v47 + v27) & v68);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v49, 1, v69))
  {
    memcpy(v48, v49, v65);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v48, v49, v69);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v69);
  }
  unsigned int v50 = __dst;
  uint64_t v51 = v70;
  if (!v23) {
    __dst[v29] = 0;
  }
LABEL_51:
  if (v23) {
    size_t v53 = v29;
  }
  else {
    size_t v53 = v29 + 1;
  }
  unint64_t v54 = (unint64_t)&v50[v53];
  unint64_t v55 = (unint64_t)v17 + v53;
  *(unsigned char *)unint64_t v54 = *(unsigned char *)v55;
  v54 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v54 + 8) = *(void *)((v55 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v56 = *(void *)(v51 + 56);
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(unsigned __int8 *)(v57 + 80);
  int v59 = (void *)((v58 + 16 + v54) & ~v58);
  int v60 = (const void *)((v58 + 16 + (v55 & 0xFFFFFFFFFFFFFFF8)) & ~v58);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v60, 1, v56))
  {
    if (*(_DWORD *)(v57 + 84)) {
      size_t v61 = *(void *)(v57 + 64);
    }
    else {
      size_t v61 = *(void *)(v57 + 64) + 1;
    }
    memcpy(v59, v60, v61);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 32))(v59, v60, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v56);
  }
  return v71;
}

void *sub_24EC9BA60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24EE55880();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(a3 + 64);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v113 = a1;
  uint64_t v114 = a3;
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned int *)(v14 + 84);
  uint64_t v17 = *(_DWORD *)(v14 + 80);
  uint64_t v18 = (*(unsigned char *)(v10 + 80) | *(unsigned char *)(v8 + 80) | *(_DWORD *)(v14 + 80));
  uint64_t v19 = (unsigned __int16 *)(((unint64_t)a1 + v18 + 16) & ~v18);
  unsigned int v20 = (unsigned __int16 *)(((unint64_t)a2 + v18 + 16) & ~v18);
  uint64_t v21 = *(unsigned int *)(v8 + 84);
  uint64_t v22 = *(unsigned int *)(v10 + 84);
  if (v22) {
    unsigned int v23 = v22 - 1;
  }
  else {
    unsigned int v23 = 0;
  }
  if (v23 <= v21) {
    unsigned int v24 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v24 = v23;
  }
  unsigned int v25 = v16 - 1;
  if (!v16) {
    unsigned int v25 = 0;
  }
  if (v25 <= v24) {
    unsigned int v26 = v24;
  }
  else {
    unsigned int v26 = v25;
  }
  size_t v27 = *(void *)(v10 + 64);
  if (v22) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  uint64_t v29 = *(void *)(*(void *)(v7 - 8) + 64) + v12;
  size_t v30 = (v28 + v17 + (v29 & ~v12)) & ~v17;
  if (v16) {
    uint64_t v31 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v14 + 64) + 1;
  }
  size_t v32 = v30 + v31;
  uint64_t v109 = v11;
  uint64_t v110 = v9;
  size_t v105 = v31;
  size_t v106 = v28 + v17;
  uint64_t v107 = ~v17;
  size_t __n = v28;
  uint64_t v108 = ~v12;
  if (!v26)
  {
    char v45 = 8 * v32;
    unsigned int v44 = v113;
    uint64_t v43 = v114;
    int v42 = v19;
    if (*((unsigned char *)v19 + v32))
    {
      int v46 = (*((unsigned __int8 *)v19 + v32) - 1) << v45;
      if (v32 > 3) {
        int v46 = 0;
      }
      if (v32)
      {
        int v47 = v32 <= 3 ? v32 : 4;
        switch(v47)
        {
          case 2:
            int v48 = *v19;
            break;
          case 3:
            int v48 = *v19 | (*((unsigned __int8 *)v19 + 2) << 16);
            break;
          case 4:
            int v48 = *(_DWORD *)v19;
            break;
          default:
            int v48 = *(unsigned __int8 *)v19;
            break;
        }
      }
      else
      {
        int v48 = 0;
      }
      if ((v48 | v46) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v20 + v32)) {
          goto LABEL_107;
        }
        int v56 = (*((unsigned __int8 *)v20 + v32) - 1) << v45;
        if (v32 > 3) {
          int v56 = 0;
        }
        if (v32)
        {
          int v57 = v32 <= 3 ? v32 : 4;
          switch(v57)
          {
            case 2:
              int v58 = *v20;
              break;
            case 3:
              int v58 = *v20 | (*((unsigned __int8 *)v20 + 2) << 16);
              break;
            case 4:
              int v58 = *(_DWORD *)v20;
              break;
            default:
              int v58 = *(unsigned __int8 *)v20;
              break;
          }
        }
        else
        {
          int v58 = 0;
        }
        if ((v58 | v56) == 0xFFFFFFFF) {
          goto LABEL_107;
        }
        goto LABEL_103;
      }
    }
    if (!*((unsigned char *)v20 + v32)) {
      goto LABEL_84;
    }
    int v59 = (*((unsigned __int8 *)v20 + v32) - 1) << v45;
    if (v32 > 3) {
      int v59 = 0;
    }
    if (v32)
    {
      if (v32 <= 3) {
        int v60 = v32;
      }
      else {
        int v60 = 4;
      }
      switch(v60)
      {
        case 2:
          int v61 = *v20;
          break;
        case 3:
          int v61 = *v20 | (*((unsigned __int8 *)v20 + 2) << 16);
          break;
        case 4:
          int v61 = *(_DWORD *)v20;
          break;
        default:
          int v61 = *(unsigned __int8 *)v20;
          break;
      }
    }
    else
    {
      int v61 = 0;
    }
    int v41 = (v61 | v59) + 1;
    goto LABEL_75;
  }
  uint64_t v111 = v20;
  unint64_t v33 = v19;
  if (v21 == v26)
  {
    uint64_t v34 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v99 = *(void *)(v13 - 8);
    uint64_t v103 = v13;
    size_t v35 = v30 + v31;
    unsigned int v36 = v26;
    uint64_t v37 = v19;
    uint64_t v38 = v7;
    uint64_t v39 = *(void *)(v7 - 8);
    int v40 = v34(v19, v21, v7);
    unsigned int v20 = v111;
    int v41 = v34(v111, v21, v38);
    uint64_t v8 = v39;
    uint64_t v7 = v38;
    int v42 = v37;
    unsigned int v26 = v36;
    size_t v32 = v35;
    uint64_t v13 = v103;
    uint64_t v15 = v99;
    unsigned int v44 = v113;
    uint64_t v43 = v114;
    if (v40)
    {
      if (!v41) {
        goto LABEL_107;
      }
      goto LABEL_103;
    }
LABEL_75:
    if (v41) {
      goto LABEL_76;
    }
LABEL_84:
    unsigned int v101 = v26;
    (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v8 + 40))(v42, v20, v7);
    size_t v65 = (void *)((unint64_t)&v42[v29] & v108);
    uint64_t v112 = v20;
    size_t v66 = (void *)(((unint64_t)v20 + v29) & v108);
    uint64_t v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v109 + 48);
    int v68 = v67(v65, 1, v110);
    int v69 = v67(v66, 1, v110);
    if (v68)
    {
      if (!v69)
      {
        (*(void (**)(void *, void *, uint64_t))(v109 + 32))(v65, v66, v110);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v65, 0, 1, v110);
        goto LABEL_90;
      }
    }
    else
    {
      if (!v69)
      {
        (*(void (**)(void *, void *, uint64_t))(v109 + 40))(v65, v66, v110);
LABEL_90:
        uint64_t v70 = (void *)(((unint64_t)v65 + v106) & v107);
        uint64_t v71 = (void *)(((unint64_t)v66 + v106) & v107);
        int v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
        int v73 = v72(v70, 1, v13);
        int v74 = v72(v71, 1, v13);
        if (v73)
        {
          if (!v74)
          {
            (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v70, v71, v13);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v70, 0, 1, v13);
LABEL_96:
            unsigned int v20 = v112;
            unsigned int v26 = v101;
            uint64_t v43 = v114;
            goto LABEL_115;
          }
        }
        else
        {
          if (!v74)
          {
            (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v70, v71, v13);
            goto LABEL_96;
          }
          (*(void (**)(void *, uint64_t))(v15 + 8))(v70, v13);
        }
        memcpy(v70, v71, v105);
        goto LABEL_96;
      }
      (*(void (**)(void *, uint64_t))(v109 + 8))(v65, v110);
    }
    memcpy(v65, v66, __n);
    goto LABEL_90;
  }
  uint64_t v100 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  unint64_t v50 = ((unint64_t)v19 + v29) & ~v12;
  if (v23 == v26) {
    unsigned int v51 = (*(uint64_t (**)(unint64_t, uint64_t))(v11 + 48))(v50, v22);
  }
  else {
    unsigned int v51 = (*(uint64_t (**)(size_t, uint64_t))(v14 + 48))((v28 + v17 + v50) & ~v17, v16);
  }
  if (v51 >= 2)
  {
    unint64_t v54 = ((unint64_t)v111 + v29) & v108;
    if (v23 == v26) {
      unsigned int v55 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v109 + 48))(v54, v22, v110);
    }
    else {
      unsigned int v55 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v15 + 48))((v106 + v54) & v107, v16, v13);
    }
    unsigned int v44 = v113;
    uint64_t v43 = v114;
    int v42 = v33;
    unsigned int v20 = v111;
    uint64_t v7 = v49;
    uint64_t v8 = v100;
    if (v55 < 2)
    {
LABEL_107:
      unsigned int v102 = v26;
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v8 + 32))(v42, v20, v7);
      uint64_t v76 = (void *)((unint64_t)&v42[v29] & v108);
      uint64_t v77 = (const void *)(((unint64_t)v20 + v29) & v108);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v77, 1, v110))
      {
        memcpy(v76, v77, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v109 + 32))(v76, v77, v110);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v76, 0, 1, v110);
      }
      uint64_t v78 = (void *)(((unint64_t)v76 + v106) & v107);
      size_t v79 = (const void *)(((unint64_t)v77 + v106) & v107);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v79, 1, v13))
      {
        memcpy(v78, v79, v105);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v78, v79, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v78, 0, 1, v13);
      }
      unsigned int v26 = v102;
      unsigned int v44 = v113;
      uint64_t v43 = v114;
      if (!v102) {
        v42[v32] = 0;
      }
      goto LABEL_115;
    }
LABEL_103:
    if (v26) {
      size_t v75 = v32;
    }
    else {
      size_t v75 = v32 + 1;
    }
    memcpy(v42, v20, v75);
    goto LABEL_115;
  }
  unint64_t v52 = ((unint64_t)v111 + v29) & v108;
  if (v23 == v26) {
    unsigned int v53 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v109 + 48))(v52, v22, v110);
  }
  else {
    unsigned int v53 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v15 + 48))((v106 + v52) & v107, v16, v13);
  }
  unsigned int v44 = v113;
  uint64_t v43 = v114;
  int v42 = v33;
  unsigned int v20 = v111;
  uint64_t v7 = v49;
  uint64_t v8 = v100;
  if (v53 < 2) {
    goto LABEL_84;
  }
LABEL_76:
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v42, v7);
  unint64_t v62 = (unint64_t)&v42[v29] & v108;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v109 + 48))(v62, 1, v110)) {
    (*(void (**)(unint64_t, uint64_t))(v109 + 8))(v62, v110);
  }
  unint64_t v63 = (v106 + v62) & v107;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v63, 1, v13)) {
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v63, v13);
  }
  if (v26) {
    size_t v64 = v32;
  }
  else {
    size_t v64 = v32 + 1;
  }
  memcpy(v42, v20, v64);
  unsigned int v44 = v113;
LABEL_115:
  if (v26) {
    size_t v80 = v32;
  }
  else {
    size_t v80 = v32 + 1;
  }
  unint64_t v81 = (unint64_t)&v42[v80];
  unint64_t v82 = (unint64_t)v20 + v80;
  *(unsigned char *)unint64_t v81 = *(unsigned char *)v82;
  unint64_t v83 = v81 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v84 = v82 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v81 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v82 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v85 = *(void *)(v43 + 56);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v88 = (void *)((v87 + 16 + v83) & ~v87);
  uint64_t v89 = (void *)((v87 + 16 + v84) & ~v87);
  int v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
  int v91 = v90(v88, 1, v85);
  int v92 = v90(v89, 1, v85);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 32))(v88, v89, v85);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v88, 0, 1, v85);
      return v44;
    }
    int v93 = *(_DWORD *)(v86 + 84);
    size_t v94 = *(void *)(v86 + 64);
  }
  else
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 40))(v88, v89, v85);
      return v44;
    }
    size_t v96 = *(void (**)(void *, uint64_t))(v86 + 8);
    uint64_t v95 = v86 + 8;
    v96(v88, v85);
    int v93 = *(_DWORD *)(v95 + 76);
    size_t v94 = *(void *)(v95 + 56);
  }
  if (v93) {
    size_t v97 = v94;
  }
  else {
    size_t v97 = v94 + 1;
  }
  memcpy(v88, v89, v97);
  return v44;
}

uint64_t sub_24EC9C594(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(sub_24EE55880() - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v52 = a3[8];
  uint64_t v8 = *(void *)(v52 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v51 = a3[2];
  uint64_t v13 = *(void *)(v51 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v12) {
    unsigned int v16 = v12;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void *)(v17 - 8);
  if (v16) {
    unsigned int v19 = v16 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  uint64_t v20 = *(void *)(a3[7] - 8);
  uint64_t v21 = *(unsigned int *)(v18 + 84);
  unsigned int v22 = v21 - 1;
  if (!v21) {
    unsigned int v22 = 0;
  }
  if (v19 <= v22) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = v19;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v10) {
    uint64_t v25 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v8 + 64) + 1;
  }
  if (v14) {
    uint64_t v26 = v16 == 0;
  }
  else {
    uint64_t v26 = (v16 == 0) + 1;
  }
  int v27 = *(_DWORD *)(v5 + 80);
  uint64_t v28 = *(void *)(v5 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  if (v21) {
    uint64_t v30 = *(void *)(v18 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v18 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v31 = (*(_DWORD *)(v9 + 80) | v27 | *(_DWORD *)(v13 + 80));
  uint64_t v32 = v28 + *(_DWORD *)(v9 + 80);
  uint64_t v33 = v25 + *(_DWORD *)(v13 + 80);
  unint64_t v34 = v26
      + *(void *)(*(void *)(v51 - 8) + 64)
      + ((v33 + (v32 & ~(unint64_t)*(_DWORD *)(v9 + 80))) & ~(unint64_t)*(_DWORD *)(v13 + 80));
  uint64_t v35 = v29 + 16;
  int v36 = a2 - v24;
  if (a2 <= v24) {
    goto LABEL_52;
  }
  unint64_t v37 = (v35 + ((v34 + ((v31 + 16) & ~v31)) & 0xFFFFFFFFFFFFFFF8)) & ~v29;
  unint64_t v38 = v30 + v37;
  char v39 = 8 * (v30 + v37);
  if (v38 <= 3)
  {
    unsigned int v41 = ((v36 + ~(-1 << v39)) >> v39) + 1;
    if (HIWORD(v41))
    {
      int v40 = *(_DWORD *)((char *)a1 + v38);
      if (!v40) {
        goto LABEL_52;
      }
      goto LABEL_42;
    }
    if (v41 > 0xFF)
    {
      int v40 = *(unsigned __int16 *)((char *)a1 + v38);
      if (!*(unsigned __int16 *)((char *)a1 + v38)) {
        goto LABEL_52;
      }
      goto LABEL_42;
    }
    if (v41 < 2)
    {
LABEL_52:
      if ((v23 & 0x80000000) == 0)
      {
        unint64_t v45 = *((void *)a1 + 1);
        if (v45 >= 0xFFFFFFFF) {
          LODWORD(v45) = -1;
        }
        return (v45 + 1);
      }
      uint64_t v47 = ((unint64_t)a1 + v31 + 16) & ~v31;
      if (v19 == v24)
      {
        if (v16 >= 2)
        {
          if (v7 == v16)
          {
            unsigned int v48 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v47);
          }
          else
          {
            unint64_t v49 = (v32 + v47) & ~(unint64_t)*(_DWORD *)(v9 + 80);
            if (v11 == v16) {
              unsigned int v50 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v49, v10, v52);
            }
            else {
              unsigned int v50 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))((v33 + v49) & ~(unint64_t)*(_DWORD *)(v13 + 80), v14, v51);
            }
            if (v50 >= 2) {
              unsigned int v48 = v50 - 1;
            }
            else {
              unsigned int v48 = 0;
            }
          }
          goto LABEL_73;
        }
      }
      else if (v21 >= 2)
      {
        unsigned int v48 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))((v35 + ((v34 + v47) & 0xFFFFFFFFFFFFFFF8)) & ~v29, v21, v17);
LABEL_73:
        if (v48 >= 2) {
          return v48 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v40 = *((unsigned __int8 *)a1 + v38);
  if (!*((unsigned char *)a1 + v38)) {
    goto LABEL_52;
  }
LABEL_42:
  int v42 = (v40 - 1) << v39;
  if (v38 > 3) {
    int v42 = 0;
  }
  if (v38)
  {
    if (v38 <= 3) {
      int v43 = v38;
    }
    else {
      int v43 = 4;
    }
    switch(v43)
    {
      case 2:
        int v44 = *a1;
        break;
      case 3:
        int v44 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v44 = *(_DWORD *)a1;
        break;
      default:
        int v44 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v44 = 0;
  }
  return v24 + (v44 | v42) + 1;
}

void sub_24EC9C9E0(_WORD *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v7 = sub_24EE55880();
  int v8 = 0;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = v9;
  uint64_t v68 = a4[8];
  uint64_t v69 = v7;
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  uint64_t v12 = *(void *)(v68 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  if (v13) {
    unsigned int v14 = v13 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  uint64_t v67 = a4[2];
  uint64_t v15 = *(void *)(v67 - 8);
  if (v14 <= v11) {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v16 = v14;
  }
  uint64_t v17 = *(void *)(v67 - 8);
  uint64_t v18 = *(unsigned int *)(v15 + 84);
  if (v18) {
    unsigned int v19 = v18 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  if (v19 <= v16) {
    unsigned int v20 = v16;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v20) {
    unsigned int v21 = v20 - 1;
  }
  else {
    unsigned int v21 = 0;
  }
  uint64_t v70 = a4[7];
  uint64_t v22 = *(void *)(v70 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  size_t v24 = *(void *)(v15 + 64);
  uint64_t v25 = *(void *)(v9 + 64);
  int v26 = *(_DWORD *)(v9 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v28 = *(void *)(v22 + 64);
  unsigned int v29 = v23 - 1;
  if (!v23) {
    unsigned int v29 = 0;
  }
  if (v21 <= v29) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = v21;
  }
  if (v30 <= 0x7FFFFFFF) {
    unsigned int v31 = 0x7FFFFFFF;
  }
  else {
    unsigned int v31 = v30;
  }
  if (v13) {
    uint64_t v32 = *(void *)(*(void *)(v68 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v68 - 8) + 64) + 1;
  }
  if (v18) {
    size_t v33 = v24;
  }
  else {
    size_t v33 = v24 + 1;
  }
  uint64_t v34 = *(_DWORD *)(v12 + 80);
  uint64_t v35 = v25 + v34;
  uint64_t v36 = v32 + *(_DWORD *)(v17 + 80);
  size_t v37 = ((v36 + ((v25 + v34) & ~v34)) & ~(unint64_t)*(_DWORD *)(v17 + 80)) + v33;
  char v38 = *(_DWORD *)(v12 + 80) | v26;
  if (v20) {
    unint64_t v39 = ((v36 + (v35 & ~(unint64_t)*(_DWORD *)(v12 + 80))) & ~(unint64_t)*(_DWORD *)(v17 + 80))
  }
        + v33;
  else {
    unint64_t v39 = v37 + 1;
  }
  uint64_t v40 = (v38 | *(_DWORD *)(v17 + 80));
  uint64_t v41 = v27 + 16;
  if (!v23) {
    ++v28;
  }
  size_t v42 = v28 + ((v27 + 16 + ((v39 + ((v40 + 16) & ~v40)) & 0xFFFFFFFFFFFFFFF8)) & ~v27);
  BOOL v43 = a3 >= v31;
  unsigned int v44 = a3 - v31;
  if (v44 == 0 || !v43)
  {
LABEL_44:
    if (v31 < a2) {
      goto LABEL_45;
    }
    goto LABEL_52;
  }
  if (v42 <= 3)
  {
    unsigned int v45 = ((v44 + ~(-1 << (8 * v42))) >> (8 * v42)) + 1;
    if (HIWORD(v45))
    {
      int v8 = 4;
      if (v31 < a2)
      {
LABEL_45:
        unsigned int v46 = ~v31 + a2;
        if (v42 < 4)
        {
          int v47 = (v46 >> (8 * v42)) + 1;
          if (v42)
          {
            int v48 = v46 & ~(-1 << (8 * v42));
            bzero(a1, v42);
            if (v42 == 3)
            {
              *a1 = v48;
              *((unsigned char *)a1 + 2) = BYTE2(v48);
            }
            else if (v42 == 2)
            {
              *a1 = v48;
            }
            else
            {
              *(unsigned char *)a1 = v48;
            }
          }
        }
        else
        {
          bzero(a1, v42);
          *(_DWORD *)a1 = v46;
          int v47 = 1;
        }
        switch(v8)
        {
          case 1:
            *((unsigned char *)a1 + v42) = v47;
            return;
          case 2:
            *(_WORD *)((char *)a1 + v42) = v47;
            return;
          case 3:
            goto LABEL_114;
          case 4:
            *(_DWORD *)((char *)a1 + v42) = v47;
            return;
          default:
            return;
        }
      }
      goto LABEL_52;
    }
    if (v45 >= 0x100) {
      int v8 = 2;
    }
    else {
      int v8 = v45 > 1;
    }
    goto LABEL_44;
  }
  int v8 = 1;
  if (v31 < a2) {
    goto LABEL_45;
  }
LABEL_52:
  uint64_t v49 = ~v40;
  unint64_t v66 = ~(unint64_t)*(_DWORD *)(v17 + 80);
  uint64_t v50 = ~v27;
  switch(v8)
  {
    case 1:
      *((unsigned char *)a1 + v42) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_57;
    case 2:
      *(_WORD *)((char *)a1 + v42) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_57;
    case 3:
LABEL_114:
      __break(1u);
      JUMPOUT(0x24EC9D09CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v42) = 0;
      goto LABEL_56;
    default:
LABEL_56:
      if (!a2) {
        return;
      }
LABEL_57:
      if ((v30 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
        return;
      }
      uint64_t v51 = (unsigned char *)(((unint64_t)a1 + v40 + 16) & v49);
      if (v21 != v31)
      {
        if (v23 < 2) {
          return;
        }
        unint64_t v55 = (v41 + ((unint64_t)&v51[v39] & 0xFFFFFFFFFFFFFFF8)) & v50;
        uint64_t v56 = a2 + 1;
        int v57 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
        uint64_t v58 = v23;
        uint64_t v59 = v70;
        goto LABEL_110;
      }
      if (v20 < 2) {
        return;
      }
      if (a2 + 1 > v20)
      {
        if (v37 <= 3) {
          int v52 = ~(-1 << (8 * v37));
        }
        else {
          int v52 = -1;
        }
        if (v37)
        {
          int v53 = v52 & (a2 - v20);
          if (v37 <= 3) {
            int v54 = v37;
          }
          else {
            int v54 = 4;
          }
          bzero(v51, v37);
          switch(v54)
          {
            case 2:
              *(_WORD *)uint64_t v51 = v53;
              break;
            case 3:
              *(_WORD *)uint64_t v51 = v53;
              v51[2] = BYTE2(v53);
              break;
            case 4:
              *(_DWORD *)uint64_t v51 = v53;
              break;
            default:
              unsigned char *v51 = v53;
              break;
          }
        }
        return;
      }
      if (a2 == -1) {
        return;
      }
      if (v11 == v20)
      {
        int v57 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        unint64_t v55 = ((unint64_t)a1 + v40 + 16) & v49;
        uint64_t v56 = a2 + 1;
        uint64_t v58 = v11;
        uint64_t v59 = v69;
LABEL_110:
        v57(v55, v56, v58, v59);
        return;
      }
      unint64_t v60 = (unint64_t)&v51[v35] & ~v34;
      if (v14 == v20)
      {
        int v61 = *(void (**)(unint64_t, void))(v12 + 56);
        v61(v60, a2 + 2);
      }
      else
      {
        unint64_t v62 = (v36 + v60) & v66;
        if (a2 + 1 <= v19)
        {
          uint64_t v56 = a2 + 2;
          int v57 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
          unint64_t v55 = (v36 + v60) & v66;
          uint64_t v58 = v18;
          uint64_t v59 = v67;
          goto LABEL_110;
        }
        if (v33 <= 3) {
          int v63 = ~(-1 << (8 * v33));
        }
        else {
          int v63 = -1;
        }
        if (v33)
        {
          int v64 = v63 & (a2 - v19);
          if (v33 <= 3) {
            int v65 = v33;
          }
          else {
            int v65 = 4;
          }
          bzero((void *)((v36 + v60) & v66), v33);
          switch(v65)
          {
            case 2:
              *(_WORD *)unint64_t v62 = v64;
              break;
            case 3:
              *(_WORD *)unint64_t v62 = v64;
              *(unsigned char *)(v62 + 2) = BYTE2(v64);
              break;
            case 4:
              *(_DWORD *)unint64_t v62 = v64;
              break;
            default:
              *(unsigned char *)unint64_t v62 = v64;
              break;
          }
        }
      }
      return;
  }
}

uint64_t sub_24EC9D0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 144);
}

uint64_t getEnumTagSinglePayload for StandardVerticalStackViewLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24EC9D17C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EC9D248);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EC9D270(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_24EC9D278()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC9D294()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC9D2B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EC9D2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v226 = a8;
  uint64_t v227 = a5;
  uint64_t v228 = a7;
  uint64_t v229 = a6;
  uint64_t v224 = a4;
  uint64_t v225 = a2;
  long long v239 = a3;
  uint64_t v223 = a1;
  uint64_t v243 = a9;
  uint64_t v303 = a23;
  uint64_t v304 = a22;
  uint64_t v251 = a21;
  uint64_t v250 = a20;
  uint64_t v236 = a19;
  uint64_t v249 = a18;
  unint64_t v302 = a16;
  uint64_t v301 = a15;
  uint64_t v248 = a14;
  unint64_t v247 = a13;
  uint64_t v246 = a11;
  uint64_t v244 = a10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v234 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v235 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v233 = (char *)v219 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v238 = a17;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v427 = v25;
  unint64_t v428 = v26;
  uint64_t v429 = v27;
  uint64_t v430 = AssociatedConformanceWitness;
  uint64_t v431 = v29;
  uint64_t v432 = v30;
  uint64_t v31 = v236;
  uint64_t v32 = (void *)type metadata accessor for CanvasItemContent();
  uint64_t v231 = *(v32 - 1);
  uint64_t v232 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v230 = (char *)v219 - v33;
  uint64_t v427 = a12;
  unint64_t v428 = v302;
  uint64_t v429 = v302;
  uint64_t v430 = v31;
  uint64_t v431 = v303;
  uint64_t v432 = v303;
  uint64_t v34 = type metadata accessor for ActionCardView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v300 = v34;
  uint64_t v427 = v34;
  unint64_t v428 = WitnessTable;
  unint64_t v299 = WitnessTable;
  swift_getOpaqueTypeMetadata2();
  v252 = (char *)sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v36 = sub_24EE55DD0();
  uint64_t v37 = sub_24ECB06F4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v441 = v31;
  uint64_t v442 = v37;
  uint64_t v242 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v439 = v38;
  uint64_t v440 = MEMORY[0x263F198F8];
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v298 = v36;
  uint64_t v427 = v36;
  unint64_t v428 = v39;
  unint64_t v297 = v39;
  swift_getOpaqueTypeMetadata2();
  uint64_t v40 = sub_24EE55DD0();
  uint64_t v437 = v38;
  uint64_t v438 = MEMORY[0x263F18860];
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v293 = v40;
  uint64_t v427 = v40;
  unint64_t v428 = v41;
  unint64_t v289 = v41;
  swift_getOpaqueTypeMetadata2();
  uint64_t v288 = sub_24EE56240();
  uint64_t v290 = sub_24EE56B10();
  uint64_t v42 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v291 = v42;
  uint64_t v43 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v294 = v43;
  uint64_t v295 = sub_24EE56240();
  uint64_t v44 = sub_24EE56240();
  unint64_t v45 = v302;
  uint64_t v427 = a12;
  unint64_t v428 = v302;
  uint64_t v429 = v302;
  uint64_t v430 = v301;
  uint64_t v431 = v246;
  uint64_t v432 = v31;
  uint64_t v46 = v303;
  uint64_t v433 = v303;
  uint64_t v434 = v303;
  uint64_t v435 = v304;
  uint64_t v436 = v249;
  uint64_t v47 = type metadata accessor for FullWidthStageView();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v292 = v47;
  uint64_t v427 = v47;
  unint64_t v428 = v48;
  unint64_t v287 = v48;
  swift_getOpaqueTypeMetadata2();
  uint64_t v49 = type metadata accessor for InfoActionCardView();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v286 = v49;
  uint64_t v427 = v49;
  unint64_t v428 = v50;
  unint64_t v285 = v50;
  swift_getOpaqueTypeMetadata2();
  uint64_t v51 = sub_24EE56240();
  uint64_t v296 = v44;
  uint64_t v283 = v51;
  uint64_t v52 = sub_24EE56240();
  uint64_t v427 = a12;
  unint64_t v428 = v247;
  uint64_t v429 = v248;
  uint64_t v430 = v31;
  uint64_t v431 = v250;
  uint64_t v432 = v251;
  uint64_t v53 = type metadata accessor for LargeBrickView();
  uint64_t v281 = swift_getWitnessTable();
  uint64_t v282 = v53;
  uint64_t v427 = v53;
  unint64_t v428 = v281;
  swift_getOpaqueTypeMetadata2();
  uint64_t v54 = type metadata accessor for DynamicBrickView();
  uint64_t v279 = swift_getWitnessTable();
  uint64_t v280 = v54;
  uint64_t v427 = v54;
  unint64_t v428 = v279;
  swift_getOpaqueTypeMetadata2();
  uint64_t v55 = sub_24EE56240();
  uint64_t v56 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v277 = v56;
  uint64_t v427 = v56;
  unint64_t v428 = v57;
  unint64_t v275 = v57;
  swift_getOpaqueTypeMetadata2();
  uint64_t v58 = sub_24EE56240();
  uint64_t v278 = v55;
  uint64_t v273 = v58;
  uint64_t v59 = sub_24EE56240();
  uint64_t v284 = v52;
  uint64_t v274 = v59;
  uint64_t v60 = sub_24EE56240();
  uint64_t v61 = type metadata accessor for StandardCardView();
  uint64_t v271 = swift_getWitnessTable();
  uint64_t v272 = v61;
  uint64_t v427 = v61;
  unint64_t v428 = v271;
  swift_getOpaqueTypeMetadata2();
  uint64_t v427 = a12;
  unint64_t v428 = v45;
  uint64_t v429 = v31;
  uint64_t v430 = v46;
  uint64_t v62 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v269 = swift_getWitnessTable();
  uint64_t v270 = v62;
  uint64_t v427 = v62;
  unint64_t v428 = v269;
  swift_getOpaqueTypeMetadata2();
  uint64_t v63 = sub_24EE56240();
  uint64_t v64 = type metadata accessor for StandardVerticalStackView();
  uint64_t v266 = swift_getWitnessTable();
  uint64_t v267 = v64;
  uint64_t v427 = v64;
  unint64_t v428 = v266;
  swift_getOpaqueTypeMetadata2();
  uint64_t v65 = type metadata accessor for TallCardView();
  uint64_t v264 = swift_getWitnessTable();
  uint64_t v265 = v65;
  uint64_t v427 = v65;
  unint64_t v428 = v264;
  swift_getOpaqueTypeMetadata2();
  uint64_t v66 = sub_24EE56240();
  uint64_t v268 = v63;
  uint64_t v262 = v66;
  uint64_t v67 = sub_24EE56240();
  uint64_t v68 = type metadata accessor for VerticalStackCard();
  uint64_t v260 = swift_getWitnessTable();
  uint64_t v261 = v68;
  uint64_t v427 = v68;
  unint64_t v428 = v260;
  swift_getOpaqueTypeMetadata2();
  uint64_t v69 = sub_24EE56240();
  uint64_t v70 = type metadata accessor for WideBrickView();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v258 = v70;
  uint64_t v427 = v70;
  unint64_t v428 = v71;
  unint64_t v255 = v71;
  swift_getOpaqueTypeMetadata2();
  uint64_t v259 = v69;
  uint64_t v72 = sub_24EE56240();
  uint64_t v263 = v67;
  uint64_t v253 = v72;
  uint64_t v73 = sub_24EE56240();
  uint64_t v276 = v60;
  uint64_t v254 = v73;
  uint64_t v256 = sub_24EE56240();
  uint64_t v74 = sub_24EE56B10();
  uint64_t v220 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = (char *)v219 - v75;
  uint64_t v257 = v77;
  uint64_t v78 = sub_24EE55DD0();
  uint64_t v222 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  size_t v80 = (char *)v219 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v81);
  long long v221 = (char *)v219 - v82;
  uint64_t v237 = v83;
  uint64_t v84 = sub_24EE56240();
  uint64_t v240 = *(void *)(v84 - 8);
  uint64_t v241 = v84;
  __n128 v85 = MEMORY[0x270FA5388](v84);
  v252 = (char *)v219 - v86;
  uint64_t v87 = *v239;
  uint64_t v88 = v239[1];
  uint64_t v89 = v239[2];
  uint64_t v90 = v239[3];
  uint64_t v91 = v245;
  uint64_t v92 = v244;
  uint64_t v93 = v238;
  uint64_t v94 = (*(uint64_t (**)(__n128))(v238 + 184))(v85);
  LOBYTE(v69) = sub_24ED418EC(3u, v94);
  uint64_t v95 = swift_bridgeObjectRelease();
  if (v69)
  {
    uint64_t v427 = v300;
    unint64_t v428 = v299;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v298;
    unint64_t v428 = v297;
    uint64_t v97 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v293;
    unint64_t v428 = v289;
    uint64_t v98 = swift_getOpaqueTypeConformance2();
    uint64_t v343 = v97;
    uint64_t v344 = v98;
    uint64_t v342 = swift_getWitnessTable();
    uint64_t v340 = swift_getWitnessTable();
    uint64_t v341 = MEMORY[0x263F18C10];
    uint64_t v99 = swift_getWitnessTable();
    uint64_t v100 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
    uint64_t v338 = v99;
    uint64_t v339 = v100;
    uint64_t v101 = swift_getWitnessTable();
    uint64_t v102 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
    uint64_t v336 = v101;
    uint64_t v337 = v102;
    uint64_t v103 = swift_getWitnessTable();
    uint64_t v334 = OpaqueTypeConformance2;
    uint64_t v335 = v103;
    uint64_t v104 = swift_getWitnessTable();
    uint64_t v427 = v292;
    unint64_t v428 = v287;
    uint64_t v105 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v286;
    unint64_t v428 = v285;
    uint64_t v106 = swift_getOpaqueTypeConformance2();
    uint64_t v332 = v105;
    uint64_t v333 = v106;
    uint64_t v107 = swift_getWitnessTable();
    uint64_t v330 = v104;
    uint64_t v331 = v107;
    uint64_t v108 = swift_getWitnessTable();
    uint64_t v427 = v282;
    unint64_t v428 = v281;
    uint64_t v109 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v280;
    unint64_t v428 = v279;
    uint64_t v110 = swift_getOpaqueTypeConformance2();
    uint64_t v328 = v109;
    uint64_t v329 = v110;
    uint64_t v111 = swift_getWitnessTable();
    uint64_t v427 = v277;
    unint64_t v428 = v275;
    uint64_t v326 = swift_getOpaqueTypeConformance2();
    uint64_t v327 = v110;
    uint64_t v112 = swift_getWitnessTable();
    uint64_t v324 = v111;
    uint64_t v325 = v112;
    uint64_t v113 = swift_getWitnessTable();
    uint64_t v322 = v108;
    uint64_t v323 = v113;
    uint64_t v114 = swift_getWitnessTable();
    uint64_t v427 = v272;
    unint64_t v428 = v271;
    uint64_t v115 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v270;
    unint64_t v428 = v269;
    uint64_t v116 = swift_getOpaqueTypeConformance2();
    uint64_t v320 = v115;
    uint64_t v321 = v116;
    uint64_t v117 = swift_getWitnessTable();
    uint64_t v427 = v267;
    unint64_t v428 = v266;
    uint64_t v118 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v265;
    unint64_t v428 = v264;
    uint64_t v119 = swift_getOpaqueTypeConformance2();
    uint64_t v318 = v118;
    uint64_t v319 = v119;
    uint64_t v120 = swift_getWitnessTable();
    uint64_t v316 = v117;
    uint64_t v317 = v120;
    uint64_t v121 = swift_getWitnessTable();
    uint64_t v427 = v261;
    unint64_t v428 = v260;
    uint64_t v314 = swift_getOpaqueTypeConformance2();
    uint64_t v315 = v304;
    uint64_t v122 = swift_getWitnessTable();
    uint64_t v427 = v258;
    unint64_t v428 = v255;
    uint64_t v123 = swift_getOpaqueTypeConformance2();
    uint64_t v312 = v122;
    uint64_t v313 = v123;
    uint64_t v124 = swift_getWitnessTable();
    uint64_t v310 = v121;
    uint64_t v311 = v124;
    uint64_t v125 = swift_getWitnessTable();
    uint64_t v308 = v114;
    uint64_t v309 = v125;
    uint64_t v307 = swift_getWitnessTable();
    uint64_t v305 = swift_getWitnessTable();
    uint64_t v126 = v242;
    uint64_t v306 = v242;
    uint64_t v127 = swift_getWitnessTable();
    sub_24EC908D0(v127, MEMORY[0x263F1BA08]);
  }
  else
  {
    long long v239 = v219;
    MEMORY[0x270FA5388](v95);
    v219[1] = &v219[-28];
    uint64_t v128 = v246;
    v219[-26] = v92;
    v219[-25] = v128;
    unint64_t v129 = v247;
    v219[-24] = a12;
    v219[-23] = v129;
    uint64_t v130 = v301;
    v219[-22] = v248;
    v219[-21] = v130;
    v219[-20] = v302;
    v219[-19] = v93;
    uint64_t v131 = v93;
    v219[-18] = v249;
    v219[-17] = v31;
    uint64_t v132 = v251;
    v219[-16] = v250;
    v219[-15] = v132;
    uint64_t v133 = v304;
    uint64_t v134 = v303;
    v219[-14] = v304;
    v219[-13] = v134;
    uint64_t v135 = v224;
    v219[-12] = v91;
    v219[-11] = v135;
    uint64_t v136 = v223;
    v219[-10] = v226;
    v219[-9] = v136;
    v219[-8] = v225;
    v219[-7] = v87;
    v219[-6] = v88;
    v219[-5] = v89;
    v219[-4] = v90;
    uint64_t v137 = v227;
    v219[-3] = v228;
    v219[-2] = v137;
    v219[-1] = v229;
    uint64_t v427 = v300;
    unint64_t v428 = v299;
    uint64_t v138 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v298;
    unint64_t v428 = v297;
    uint64_t v139 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v293;
    unint64_t v428 = v289;
    uint64_t v140 = swift_getOpaqueTypeConformance2();
    uint64_t v425 = v139;
    uint64_t v426 = v140;
    uint64_t v424 = swift_getWitnessTable();
    unint64_t v302 = MEMORY[0x263F1B488];
    uint64_t v422 = swift_getWitnessTable();
    uint64_t v423 = MEMORY[0x263F18C10];
    uint64_t v303 = MEMORY[0x263F18E48];
    uint64_t v141 = swift_getWitnessTable();
    uint64_t v142 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
    uint64_t v420 = v141;
    uint64_t v421 = v142;
    uint64_t v143 = swift_getWitnessTable();
    uint64_t v144 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
    uint64_t v418 = v143;
    uint64_t v419 = v144;
    uint64_t v145 = swift_getWitnessTable();
    uint64_t v416 = v138;
    uint64_t v417 = v145;
    uint64_t v146 = swift_getWitnessTable();
    uint64_t v427 = v292;
    unint64_t v428 = v287;
    uint64_t v147 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v286;
    unint64_t v428 = v285;
    uint64_t v148 = swift_getOpaqueTypeConformance2();
    uint64_t v414 = v147;
    uint64_t v415 = v148;
    uint64_t v149 = swift_getWitnessTable();
    uint64_t v412 = v146;
    uint64_t v413 = v149;
    uint64_t v150 = swift_getWitnessTable();
    uint64_t v427 = v282;
    unint64_t v428 = v281;
    uint64_t v151 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v280;
    unint64_t v428 = v279;
    uint64_t v152 = swift_getOpaqueTypeConformance2();
    uint64_t v410 = v151;
    uint64_t v411 = v152;
    uint64_t v153 = swift_getWitnessTable();
    uint64_t v427 = v277;
    unint64_t v428 = v275;
    uint64_t v408 = swift_getOpaqueTypeConformance2();
    uint64_t v409 = v152;
    uint64_t v154 = swift_getWitnessTable();
    uint64_t v406 = v153;
    uint64_t v407 = v154;
    uint64_t v155 = swift_getWitnessTable();
    uint64_t v404 = v150;
    uint64_t v405 = v155;
    uint64_t v156 = swift_getWitnessTable();
    uint64_t v427 = v272;
    unint64_t v428 = v271;
    uint64_t v157 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v270;
    unint64_t v428 = v269;
    uint64_t v158 = swift_getOpaqueTypeConformance2();
    uint64_t v402 = v157;
    uint64_t v403 = v158;
    uint64_t v159 = swift_getWitnessTable();
    uint64_t v427 = v267;
    unint64_t v428 = v266;
    uint64_t v160 = swift_getOpaqueTypeConformance2();
    uint64_t v427 = v265;
    unint64_t v428 = v264;
    uint64_t v161 = swift_getOpaqueTypeConformance2();
    uint64_t v400 = v160;
    uint64_t v401 = v161;
    uint64_t v162 = swift_getWitnessTable();
    uint64_t v398 = v159;
    uint64_t v399 = v162;
    uint64_t v163 = swift_getWitnessTable();
    uint64_t v427 = v261;
    unint64_t v428 = v260;
    uint64_t v396 = swift_getOpaqueTypeConformance2();
    uint64_t v397 = v133;
    uint64_t v164 = swift_getWitnessTable();
    uint64_t v427 = v258;
    unint64_t v428 = v255;
    uint64_t v165 = swift_getOpaqueTypeConformance2();
    uint64_t v394 = v164;
    uint64_t v395 = v165;
    uint64_t v166 = swift_getWitnessTable();
    uint64_t v392 = v163;
    uint64_t v393 = v166;
    uint64_t v167 = swift_getWitnessTable();
    uint64_t v390 = v156;
    uint64_t v391 = v167;
    uint64_t v301 = swift_getWitnessTable();
    v219[0] = v76;
    sub_24EE56B00();
    uint64_t v427 = 0;
    unint64_t v428 = 0xE000000000000000;
    sub_24EE570B0();
    uint64_t v168 = v131;
    uint64_t v169 = *(void (**)(uint64_t))(v131 + 160);
    uint64_t v170 = v230;
    uint64_t v171 = v244;
    uint64_t v172 = (uint64_t)v80;
    uint64_t v173 = v168;
    v169(v244);
    uint64_t v174 = v232;
    sub_24ED11128(v232);
    (*(void (**)(char *, void *))(v231 + 8))(v170, v174);
    sub_24EE570B0();
    swift_bridgeObjectRelease();
    sub_24EE570B0();
    uint64_t v175 = v233;
    (*(void (**)(uint64_t, uint64_t))(v173 + 152))(v171, v173);
    uint64_t v176 = v235;
    sub_24EE577D0();
    (*(void (**)(char *, uint64_t))(v234 + 8))(v175, v176);
    uint64_t v389 = v301;
    uint64_t v177 = v257;
    uint64_t v178 = swift_getWitnessTable();
    uint64_t v179 = v219[0];
    sub_24EE56940();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v179, v177);
    uint64_t v387 = v178;
    uint64_t v180 = v242;
    uint64_t v388 = v242;
    uint64_t v181 = v237;
    swift_getWitnessTable();
    long long v182 = v221;
    sub_24EC90894(v172);
    long long v183 = *(void (**)(uint64_t, uint64_t))(v222 + 8);
    v183(v172, v181);
    sub_24EC90894(v182);
    sub_24EC909C8(v172, MEMORY[0x263F1BA08], v181);
    uint64_t v184 = v172;
    uint64_t v126 = v180;
    v183(v184, v181);
    v183((uint64_t)v182, v181);
  }
  uint64_t v427 = v300;
  unint64_t v428 = v299;
  uint64_t v185 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v298;
  unint64_t v428 = v297;
  uint64_t v186 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v293;
  unint64_t v428 = v289;
  uint64_t v187 = swift_getOpaqueTypeConformance2();
  uint64_t v385 = v186;
  uint64_t v386 = v187;
  uint64_t v384 = swift_getWitnessTable();
  uint64_t v382 = swift_getWitnessTable();
  uint64_t v383 = MEMORY[0x263F18C10];
  uint64_t v188 = swift_getWitnessTable();
  uint64_t v189 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v380 = v188;
  uint64_t v381 = v189;
  uint64_t v190 = swift_getWitnessTable();
  uint64_t v191 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v378 = v190;
  uint64_t v379 = v191;
  uint64_t v192 = swift_getWitnessTable();
  uint64_t v376 = v185;
  uint64_t v377 = v192;
  uint64_t v193 = swift_getWitnessTable();
  uint64_t v427 = v292;
  unint64_t v428 = v287;
  uint64_t v194 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v286;
  unint64_t v428 = v285;
  uint64_t v195 = swift_getOpaqueTypeConformance2();
  uint64_t v374 = v194;
  uint64_t v375 = v195;
  uint64_t v196 = swift_getWitnessTable();
  uint64_t v372 = v193;
  uint64_t v373 = v196;
  uint64_t v197 = swift_getWitnessTable();
  uint64_t v427 = v282;
  unint64_t v428 = v281;
  uint64_t v198 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v280;
  unint64_t v428 = v279;
  uint64_t v199 = swift_getOpaqueTypeConformance2();
  uint64_t v370 = v198;
  uint64_t v371 = v199;
  uint64_t v200 = swift_getWitnessTable();
  uint64_t v427 = v277;
  unint64_t v428 = v275;
  uint64_t v368 = swift_getOpaqueTypeConformance2();
  uint64_t v369 = v199;
  uint64_t v201 = swift_getWitnessTable();
  uint64_t v366 = v200;
  uint64_t v367 = v201;
  uint64_t v202 = swift_getWitnessTable();
  uint64_t v364 = v197;
  uint64_t v365 = v202;
  uint64_t v203 = swift_getWitnessTable();
  uint64_t v427 = v272;
  unint64_t v428 = v271;
  uint64_t v204 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v270;
  unint64_t v428 = v269;
  uint64_t v205 = swift_getOpaqueTypeConformance2();
  uint64_t v362 = v204;
  uint64_t v363 = v205;
  uint64_t v206 = swift_getWitnessTable();
  uint64_t v427 = v267;
  unint64_t v428 = v266;
  uint64_t v207 = swift_getOpaqueTypeConformance2();
  uint64_t v427 = v265;
  unint64_t v428 = v264;
  uint64_t v208 = swift_getOpaqueTypeConformance2();
  uint64_t v360 = v207;
  uint64_t v361 = v208;
  uint64_t v209 = swift_getWitnessTable();
  uint64_t v358 = v206;
  uint64_t v359 = v209;
  uint64_t v210 = swift_getWitnessTable();
  uint64_t v427 = v261;
  unint64_t v428 = v260;
  uint64_t v356 = swift_getOpaqueTypeConformance2();
  uint64_t v357 = v304;
  uint64_t v211 = swift_getWitnessTable();
  uint64_t v427 = v258;
  unint64_t v428 = v255;
  uint64_t v212 = swift_getOpaqueTypeConformance2();
  uint64_t v354 = v211;
  uint64_t v355 = v212;
  uint64_t v213 = swift_getWitnessTable();
  uint64_t v352 = v210;
  uint64_t v353 = v213;
  uint64_t v214 = swift_getWitnessTable();
  uint64_t v350 = v203;
  uint64_t v351 = v214;
  uint64_t v349 = swift_getWitnessTable();
  uint64_t v347 = swift_getWitnessTable();
  uint64_t v348 = v126;
  uint64_t v215 = swift_getWitnessTable();
  uint64_t v345 = MEMORY[0x263F1BA00];
  uint64_t v346 = v215;
  uint64_t v216 = v241;
  swift_getWitnessTable();
  uint64_t v217 = v252;
  sub_24EC90894(v252);
  return (*(uint64_t (**)(char *, uint64_t))(v240 + 8))(v217, v216);
}

uint64_t sub_24EC9EF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, uint64_t a20,uint64_t a21)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v1812 = v21;
  uint64_t v1811 = v22;
  uint64_t v1905 = v23;
  uint64_t v1826 = v24;
  uint64_t v1986 = v25;
  uint64_t v1971 = v26;
  uint64_t v1988 = v27;
  uint64_t v2015 = v28;
  uint64_t v1996 = v29;
  uint64_t v1989 = 0;
  *(void *)&long long v2054 = a21;
  uint64_t v2059 = a20;
  long long v2007 = a19;
  uint64_t v2003 = a17;
  v2055 = (void (*)(char *, uint64_t))a16;
  *(void *)&long long v2060 = a15;
  uint64_t v2005 = a13;
  uint64_t v2006 = a12;
  uint64_t v2002 = a10;
  uint64_t v2047 = a9;
  uint64_t v30 = type metadata accessor for WideBrickView();
  uint64_t v1823 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v1821 = (uint64_t)&v1715 - v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v2042 = v30;
  *(void *)&long long v2111 = v30;
  uint64_t v2041 = WitnessTable;
  *((void *)&v2111 + 1) = WitnessTable;
  uint64_t v33 = MEMORY[0x263F1B280];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v1957 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  v1824 = (char *)&v1715 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  v1818 = (char *)&v1715 - v37;
  MEMORY[0x270FA5388](v38);
  v1904 = (char *)&v1715 - v39;
  *(void *)&long long v2009 = a14;
  uint64_t v1951 = *(void *)(a14 - 8);
  MEMORY[0x270FA5388](v40);
  v1804 = (char *)&v1715 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  v1897 = (char *)&v1715 - v43;
  *(void *)&long long v2053 = swift_getAssociatedTypeWitness();
  uint64_t v1895 = *(void *)(v2053 - 8);
  MEMORY[0x270FA5388](v2053);
  v1894 = (char *)&v1715 - v44;
  uint64_t v45 = type metadata accessor for VerticalStackCard();
  uint64_t v46 = swift_getWitnessTable();
  *(void *)&long long v2111 = v45;
  uint64_t v2040 = v46;
  *((void *)&v2111 + 1) = v46;
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = sub_24EE56240();
  uint64_t v1900 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  v1899 = (char *)&v1715 - v49;
  uint64_t v2008 = v50;
  uint64_t v1966 = OpaqueTypeMetadata2;
  uint64_t v51 = sub_24EE56240();
  uint64_t v1965 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  v1963 = (char *)&v1715 - v52;
  uint64_t v2038 = swift_checkMetadataState();
  uint64_t v1820 = *(void *)(v2038 - 8);
  MEMORY[0x270FA5388](v2038);
  v1817 = (char *)&v1715 - v53;
  uint64_t v1959 = v47;
  uint64_t v1958 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v54);
  v1822 = (char *)&v1715 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  v1819 = (char *)&v1715 - v57;
  MEMORY[0x270FA5388](v58);
  v1906 = (char *)&v1715 - v59;
  uint64_t v60 = type metadata accessor for TallCardView();
  uint64_t v1805 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  v1803 = (uint64_t *)((char *)&v1715 - v61);
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v2037 = v60;
  *(void *)&long long v2111 = v60;
  uint64_t v2036 = v62;
  *((void *)&v2111 + 1) = v62;
  uint64_t v63 = swift_getOpaqueTypeMetadata2();
  uint64_t v1950 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  v1806 = (char *)&v1715 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  v1802 = (char *)&v1715 - v66;
  MEMORY[0x270FA5388](v67);
  v1896 = (char *)&v1715 - v68;
  uint64_t v69 = type metadata accessor for StandardVerticalStackView();
  uint64_t v70 = swift_getWitnessTable();
  *(void *)&long long v2111 = v69;
  *((void *)&v2034 + 1) = v70;
  *((void *)&v2111 + 1) = v70;
  uint64_t v71 = swift_getOpaqueTypeMetadata2();
  uint64_t v1961 = v63;
  uint64_t v72 = sub_24EE56240();
  uint64_t v1903 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  v1901 = (char *)&v1715 - v73;
  *(void *)&long long v2034 = swift_checkMetadataState();
  uint64_t v1809 = *(void *)(v2034 - 8);
  MEMORY[0x270FA5388](v2034);
  v1807 = (uint64_t *)((char *)&v1715 - v74);
  uint64_t v1960 = v71;
  uint64_t v1955 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v75);
  v1810 = (char *)&v1715 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v77);
  v1808 = (char *)&v1715 - v78;
  MEMORY[0x270FA5388](v79);
  v1898 = (char *)&v1715 - v80;
  *(void *)&long long v2111 = a11;
  *((void *)&v2111 + 1) = v2060;
  *(void *)&long long v2112 = a18;
  *((void *)&v2112 + 1) = a21;
  uint64_t v81 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v1815 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  v1814 = (uint64_t *)((char *)&v1715 - v82);
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v2033 = v81;
  *(void *)&long long v2111 = v81;
  uint64_t v2032 = v83;
  *((void *)&v2111 + 1) = v83;
  uint64_t v84 = swift_getOpaqueTypeMetadata2();
  uint64_t v1956 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  v1816 = (char *)&v1715 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v86);
  v1813 = (char *)&v1715 - v87;
  MEMORY[0x270FA5388](v88);
  v1902 = (char *)&v1715 - v89;
  uint64_t v90 = type metadata accessor for StandardCardView();
  uint64_t v91 = swift_getWitnessTable();
  *(void *)&long long v2111 = v90;
  *((void *)&v2029 + 1) = v91;
  *((void *)&v2111 + 1) = v91;
  uint64_t v92 = swift_getOpaqueTypeMetadata2();
  uint64_t v1964 = v84;
  uint64_t v93 = sub_24EE56240();
  uint64_t v1908 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  v1907 = (char *)&v1715 - v94;
  uint64_t v2030 = v95;
  uint64_t v2035 = v72;
  uint64_t v96 = sub_24EE56240();
  uint64_t v1973 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  v1972 = (char *)&v1715 - v97;
  uint64_t v2031 = v98;
  uint64_t v2039 = v51;
  uint64_t v2016 = sub_24EE56240();
  uint64_t v1979 = *(void *)(v2016 - 8);
  MEMORY[0x270FA5388](v2016);
  uint64_t v1978 = (uint64_t)&v1715 - v99;
  *(void *)&long long v2029 = swift_checkMetadataState();
  uint64_t v1800 = *(void *)(v2029 - 8);
  MEMORY[0x270FA5388](v2029);
  v1798 = (uint64_t *)((char *)&v1715 - v100);
  uint64_t v1962 = v92;
  uint64_t v1948 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v101);
  v1801 = (char *)&v1715 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v103);
  v1799 = (char *)&v1715 - v104;
  MEMORY[0x270FA5388](v105);
  v1891 = (char *)&v1715 - v106;
  uint64_t v107 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v108 = swift_getWitnessTable();
  *(void *)&long long v2111 = v107;
  uint64_t v2028 = v108;
  *((void *)&v2111 + 1) = v108;
  uint64_t v109 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = type metadata accessor for DynamicBrickView();
  uint64_t v111 = swift_getWitnessTable();
  *(void *)&long long v2111 = v110;
  uint64_t v2026 = v111;
  *((void *)&v2111 + 1) = v111;
  uint64_t v112 = swift_getOpaqueTypeMetadata2();
  uint64_t v113 = sub_24EE56240();
  uint64_t v1890 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v1889 = (char *)&v1715 - v114;
  uint64_t v2025 = swift_checkMetadataState();
  uint64_t v1796 = *(void *)(v2025 - 8);
  MEMORY[0x270FA5388](v2025);
  uint64_t v1794 = (uint64_t)&v1715 - v115;
  uint64_t v1954 = v109;
  uint64_t v1946 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v116);
  v1797 = (char *)&v1715 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v118);
  v1795 = (char *)&v1715 - v119;
  MEMORY[0x270FA5388](v120);
  v1886 = (char *)&v1715 - v121;
  uint64_t v2024 = swift_checkMetadataState();
  uint64_t v1881 = *(void *)(v2024 - 8);
  MEMORY[0x270FA5388](v2024);
  uint64_t v1791 = (uint64_t)&v1715 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v123);
  uint64_t v1790 = (uint64_t)&v1715 - v124;
  uint64_t v1976 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v125);
  v1793 = (char *)&v1715 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v127);
  v1882 = (char *)&v1715 - v128;
  MEMORY[0x270FA5388](v129);
  v1885 = (char *)&v1715 - v130;
  MEMORY[0x270FA5388](v131);
  v1789 = (char *)&v1715 - v132;
  MEMORY[0x270FA5388](v133);
  v1880 = (char *)&v1715 - v134;
  *(void *)&long long v2111 = a11;
  *((void *)&v2111 + 1) = v2006;
  *(void *)&long long v2112 = v2005;
  *((void *)&v2112 + 1) = a18;
  long long v2113 = v2007;
  uint64_t v135 = type metadata accessor for LargeBrickView();
  uint64_t v136 = swift_getWitnessTable();
  *(void *)&long long v2111 = v135;
  *((void *)&v2022 + 1) = v136;
  *((void *)&v2111 + 1) = v136;
  uint64_t v137 = swift_getOpaqueTypeMetadata2();
  uint64_t v1977 = v112;
  uint64_t v138 = sub_24EE56240();
  uint64_t v1888 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  v1887 = (char *)&v1715 - v139;
  uint64_t v2023 = v140;
  uint64_t v2027 = v113;
  uint64_t v2058 = sub_24EE56240();
  uint64_t v1970 = *(void *)(v2058 - 8);
  MEMORY[0x270FA5388](v2058);
  uint64_t v1968 = (uint64_t)&v1715 - v141;
  MEMORY[0x270FA5388](v142);
  uint64_t v1875 = (uint64_t)&v1715 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v144);
  uint64_t v1874 = (uint64_t)&v1715 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v2022 = swift_checkMetadataState();
  uint64_t v1788 = *(void *)(v2022 - 8);
  MEMORY[0x270FA5388](v2022);
  uint64_t v1786 = (uint64_t)&v1715 - v146;
  uint64_t v1952 = v137;
  uint64_t v1945 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v147);
  v1792 = (char *)&v1715 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v149);
  v1787 = (char *)&v1715 - v150;
  MEMORY[0x270FA5388](v151);
  v1879 = (char *)&v1715 - v152;
  uint64_t v153 = v2060;
  uint64_t v154 = v2054;
  uint64_t v155 = type metadata accessor for InfoActionCardView();
  uint64_t v1777 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v1776 = (uint64_t)&v1715 - v156;
  uint64_t v157 = swift_getWitnessTable();
  uint64_t v2021 = v155;
  *(void *)&long long v2111 = v155;
  uint64_t v2020 = v157;
  *((void *)&v2111 + 1) = v157;
  uint64_t v2056 = v33;
  uint64_t v158 = swift_getOpaqueTypeMetadata2();
  uint64_t v1941 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  v1778 = (char *)&v1715 - ((v159 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v160);
  v1775 = (char *)&v1715 - v161;
  MEMORY[0x270FA5388](v162);
  v1876 = (char *)&v1715 - v163;
  *(void *)&long long v2111 = a11;
  *((void *)&v2111 + 1) = v153;
  *(void *)&long long v2112 = v153;
  *((void *)&v2112 + 1) = v2009;
  uint64_t v164 = v2002;
  *(void *)&long long v2113 = v2002;
  *((void *)&v2113 + 1) = a18;
  *(void *)&v2114[0] = v154;
  *((void *)&v2114[0] + 1) = v154;
  *(void *)&v2114[1] = v2059;
  *((void *)&v2114[1] + 1) = v2003;
  uint64_t v165 = type metadata accessor for FullWidthStageView();
  uint64_t v166 = swift_getWitnessTable();
  *(void *)&long long v2111 = v165;
  *((void *)&v2019 + 1) = v166;
  *((void *)&v2111 + 1) = v166;
  uint64_t v167 = swift_getOpaqueTypeMetadata2();
  uint64_t v1953 = v158;
  uint64_t v2057 = sub_24EE56240();
  uint64_t v1893 = *(void *)(v2057 - 8);
  MEMORY[0x270FA5388](v2057);
  v1892 = (char *)&v1715 - v168;
  uint64_t v1780 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v169);
  v1781 = (char *)&v1715 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_24EE57430();
  MEMORY[0x270FA5388](v171 - 8);
  uint64_t v1779 = (uint64_t)&v1715 - v172;
  *(void *)&long long v2019 = swift_checkMetadataState();
  uint64_t v1784 = *(void *)(v2019 - 8);
  MEMORY[0x270FA5388](v2019);
  uint64_t v1782 = (uint64_t)&v1715 - v173;
  uint64_t v1949 = v167;
  uint64_t v1944 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v174);
  v1785 = (char *)&v1715 - ((v175 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v176);
  v1783 = (char *)&v1715 - v177;
  MEMORY[0x270FA5388](v178);
  v1878 = (char *)&v1715 - v179;
  uint64_t v1943 = sub_24EE57430();
  uint64_t v1877 = *(void *)(v1943 - 8);
  MEMORY[0x270FA5388](v1943);
  uint64_t v1942 = (uint64_t)&v1715 - v180;
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE488);
  MEMORY[0x270FA5388](v181);
  v1722 = (uint64_t *)((char *)&v1715 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v1730 = sub_24EE55960();
  uint64_t v1721 = *(void *)(v1730 - 8);
  MEMORY[0x270FA5388](v1730);
  v1728 = (char *)&v1715 - ((v183 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE470);
  uint64_t v1720 = *(void *)(v184 - 8);
  MEMORY[0x270FA5388](v184);
  v1727 = (char *)&v1715 - ((v185 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2011 = sub_24EE55880();
  v2004 = *(uint64_t **)(v2011 - 8);
  MEMORY[0x270FA5388](v2011);
  v1726 = (char *)&v1715 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v187 = sub_24EE55DD0();
  uint64_t v188 = sub_24ECB06F4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v2681 = a18;
  uint64_t v2682 = v188;
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v2679 = v189;
  uint64_t v2680 = MEMORY[0x263F198F8];
  uint64_t v190 = swift_getWitnessTable();
  uint64_t v2045 = v187;
  *(void *)&long long v2111 = v187;
  uint64_t v2051 = v190;
  *((void *)&v2111 + 1) = v190;
  swift_getOpaqueTypeMetadata2();
  uint64_t v191 = sub_24EE55DD0();
  uint64_t v2677 = v189;
  uint64_t v2678 = MEMORY[0x263F18860];
  uint64_t v192 = swift_getWitnessTable();
  uint64_t v2048 = v191;
  *(void *)&long long v2111 = v191;
  uint64_t v2046 = v192;
  *((void *)&v2111 + 1) = v192;
  swift_getOpaqueTypeMetadata2();
  uint64_t v2049 = sub_24EE56240();
  uint64_t v193 = sub_24EE56B10();
  uint64_t v194 = sub_24EE55DD0();
  uint64_t v1732 = v184;
  uint64_t v195 = sub_24EE56240();
  uint64_t v1731 = *(void *)(v195 - 8);
  MEMORY[0x270FA5388](v195);
  v1729 = (char *)&v1715 - v196;
  uint64_t v2050 = v193;
  uint64_t v1717 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v197);
  v1716 = (char *)&v1715 - v198;
  uint64_t v2043 = v194;
  uint64_t v1719 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v199);
  v1718 = (char *)&v1715 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v201);
  v1725 = (char *)&v1715 - v202;
  uint64_t v2044 = v203;
  uint64_t v1825 = v181;
  uint64_t v204 = sub_24EE56240();
  uint64_t v1940 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204);
  v1774 = (char *)&v1715 - ((v205 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v206);
  v1909 = (char *)&v1715 - v207;
  uint64_t v208 = v2047;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = (char *)swift_getAssociatedConformanceWitness();
  uint64_t v1873 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v1872 = *(void *)(v1873 - 8);
  MEMORY[0x270FA5388](v1873);
  v1767 = (char *)&v1715 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v211);
  v1871 = (char *)&v1715 - v212;
  *(void *)&long long v2111 = a11;
  uint64_t v213 = v2060;
  *((void *)&v2111 + 1) = v2060;
  *(void *)&long long v2112 = v2060;
  uint64_t v2013 = a18;
  *((void *)&v2112 + 1) = a18;
  *(void *)&long long v2113 = v2054;
  *((void *)&v2113 + 1) = v2054;
  uint64_t v214 = type metadata accessor for ActionCardView();
  uint64_t v215 = swift_getWitnessTable();
  *(void *)&long long v2111 = v214;
  *((void *)&v2017 + 1) = v215;
  *((void *)&v2111 + 1) = v215;
  uint64_t v216 = swift_getOpaqueTypeMetadata2();
  uint64_t v1998 = v204;
  uint64_t v217 = sub_24EE56240();
  uint64_t v1884 = *(void *)(v217 - 8);
  MEMORY[0x270FA5388](v217);
  v1883 = (char *)&v1715 - v218;
  uint64_t v2010 = v219;
  uint64_t v220 = sub_24EE56240();
  uint64_t v1969 = *(void *)(v220 - 8);
  MEMORY[0x270FA5388](v220);
  uint64_t v1967 = (uint64_t)&v1715 - v221;
  uint64_t v2018 = v222;
  uint64_t v2056 = sub_24EE56240();
  uint64_t v1980 = *(void *)(v2056 - 8);
  MEMORY[0x270FA5388](v2056);
  uint64_t v1983 = (uint64_t)&v1715 - v223;
  uint64_t v1992 = sub_24EE55E80();
  uint64_t v1993 = *(void *)(v1992 - 8);
  MEMORY[0x270FA5388](v1992);
  uint64_t v1991 = (uint64_t)&v1715 - ((v224 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1984 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v1985 = *(void *)(v1984 - 8);
  MEMORY[0x270FA5388](v1984);
  uint64_t v1856 = (uint64_t)&v1715 - ((v225 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v226);
  uint64_t v1855 = (uint64_t)&v1715 - v227;
  uint64_t v1715 = v228;
  MEMORY[0x270FA5388](v229);
  v1981 = (char *)&v1715 - v230;
  uint64_t v231 = sub_24EE57430();
  MEMORY[0x270FA5388](v231 - 8);
  uint64_t v1772 = (uint64_t)&v1715 - ((v232 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v233);
  uint64_t v1974 = (uint64_t)&v1715 - v234;
  uint64_t v1768 = *(void *)(v213 - 8);
  MEMORY[0x270FA5388](v235);
  uint64_t v1863 = (uint64_t)&v1715 - ((v236 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2000 = sub_24EE55850();
  uint64_t v2001 = *(void *)(v2000 - 8);
  MEMORY[0x270FA5388](v2000);
  uint64_t v1999 = (uint64_t)&v1715 - ((v237 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v2017 = swift_checkMetadataState();
  uint64_t v1771 = *(void *)(v2017 - 8);
  MEMORY[0x270FA5388](v2017);
  uint64_t v1769 = (uint64_t)&v1715 - v238;
  uint64_t v1947 = v216;
  uint64_t v1939 = *(void *)(v216 - 8);
  MEMORY[0x270FA5388](v239);
  v1773 = (char *)&v1715 - ((v240 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v241);
  v1770 = (char *)&v1715 - v242;
  MEMORY[0x270FA5388](v243);
  v1870 = (char *)&v1715 - v244;
  uint64_t v2052 = a11;
  uint64_t v1987 = *(void *)(a11 - 8);
  MEMORY[0x270FA5388](v245);
  uint64_t v1842 = (uint64_t)&v1715 - ((v246 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v247);
  uint64_t v1852 = (uint64_t)&v1715 - v248;
  MEMORY[0x270FA5388](v249);
  v1867 = (char *)&v1715 - v250;
  MEMORY[0x270FA5388](v251);
  v1765 = (char *)&v1715 - v252;
  MEMORY[0x270FA5388](v253);
  v1862 = (char *)&v1715 - v254;
  MEMORY[0x270FA5388](v255);
  uint64_t v1850 = (uint64_t)&v1715 - v256;
  MEMORY[0x270FA5388](v257);
  v1866 = (char *)&v1715 - v258;
  MEMORY[0x270FA5388](v259);
  uint64_t v1860 = (uint64_t)&v1715 - v260;
  MEMORY[0x270FA5388](v261);
  v1869 = (char *)&v1715 - v262;
  MEMORY[0x270FA5388](v263);
  uint64_t v1849 = (uint64_t)&v1715 - v264;
  MEMORY[0x270FA5388](v265);
  v1865 = (char *)&v1715 - v266;
  MEMORY[0x270FA5388](v267);
  uint64_t v1840 = (uint64_t)&v1715 - v268;
  MEMORY[0x270FA5388](v269);
  uint64_t v1837 = (uint64_t)&v1715 - v270;
  MEMORY[0x270FA5388](v271);
  uint64_t v1839 = (uint64_t)&v1715 - v272;
  MEMORY[0x270FA5388](v273);
  uint64_t v1846 = (uint64_t)&v1715 - v274;
  MEMORY[0x270FA5388](v275);
  uint64_t v1858 = (uint64_t)&v1715 - v276;
  MEMORY[0x270FA5388](v277);
  uint64_t v1857 = (uint64_t)&v1715 - v278;
  MEMORY[0x270FA5388](v279);
  v1868 = (char *)&v1715 - v280;
  uint64_t v281 = (uint64_t)v2055;
  uint64_t v282 = v208;
  uint64_t v283 = swift_getAssociatedTypeWitness();
  *((void *)&v1990 + 1) = sub_24EE57430();
  uint64_t v1982 = *(void *)(*((void *)&v1990 + 1) - 8);
  MEMORY[0x270FA5388](*((void *)&v1990 + 1));
  uint64_t v1938 = (uint64_t)&v1715 - ((v284 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v285);
  uint64_t v1928 = (uint64_t)&v1715 - v286;
  MEMORY[0x270FA5388](v287);
  v1937 = (char *)&v1715 - v288;
  MEMORY[0x270FA5388](v289);
  v1936 = (char *)&v1715 - v290;
  MEMORY[0x270FA5388](v291);
  v1766 = (char *)&v1715 - v292;
  MEMORY[0x270FA5388](v293);
  uint64_t v1934 = (uint64_t)&v1715 - v294;
  uint64_t v1935 = *(void *)(v283 - 8);
  MEMORY[0x270FA5388](v295);
  v1933 = (char *)&v1715 - v296;
  *(void *)&long long v1990 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  MEMORY[0x270FA5388](v1990);
  uint64_t v1762 = (uint64_t)&v1715 - ((v297 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v298);
  uint64_t v1759 = (uint64_t)&v1715 - v299;
  MEMORY[0x270FA5388](v300);
  uint64_t v1924 = (uint64_t)&v1715 - v301;
  MEMORY[0x270FA5388](v302);
  uint64_t v1854 = (uint64_t)&v1715 - v303;
  MEMORY[0x270FA5388](v304);
  uint64_t v1764 = (uint64_t)&v1715 - v305;
  MEMORY[0x270FA5388](v306);
  uint64_t v1742 = (uint64_t)&v1715 - v307;
  MEMORY[0x270FA5388](v308);
  uint64_t v1760 = (uint64_t)&v1715 - v309;
  MEMORY[0x270FA5388](v310);
  uint64_t v1929 = (uint64_t)&v1715 - v311;
  MEMORY[0x270FA5388](v312);
  uint64_t v1927 = (uint64_t)&v1715 - v313;
  MEMORY[0x270FA5388](v314);
  uint64_t v1861 = (uint64_t)&v1715 - v315;
  MEMORY[0x270FA5388](v316);
  uint64_t v1758 = (uint64_t)&v1715 - v317;
  MEMORY[0x270FA5388](v318);
  uint64_t v1848 = (uint64_t)&v1715 - v319;
  MEMORY[0x270FA5388](v320);
  uint64_t v1763 = (uint64_t)&v1715 - v321;
  MEMORY[0x270FA5388](v322);
  uint64_t v1741 = (uint64_t)&v1715 - v323;
  MEMORY[0x270FA5388](v324);
  uint64_t v1757 = (uint64_t)&v1715 - v325;
  MEMORY[0x270FA5388](v326);
  uint64_t v1926 = (uint64_t)&v1715 - v327;
  MEMORY[0x270FA5388](v328);
  uint64_t v1925 = (uint64_t)&v1715 - v329;
  MEMORY[0x270FA5388](v330);
  uint64_t v1859 = (uint64_t)&v1715 - v331;
  MEMORY[0x270FA5388](v332);
  v1744 = (char *)&v1715 - v333;
  MEMORY[0x270FA5388](v334);
  uint64_t v1743 = (uint64_t)&v1715 - v335;
  MEMORY[0x270FA5388](v336);
  uint64_t v1740 = (uint64_t)&v1715 - v337;
  MEMORY[0x270FA5388](v338);
  uint64_t v1756 = (uint64_t)&v1715 - v339;
  MEMORY[0x270FA5388](v340);
  uint64_t v1932 = (uint64_t)&v1715 - v341;
  MEMORY[0x270FA5388](v342);
  uint64_t v1931 = (uint64_t)&v1715 - v343;
  MEMORY[0x270FA5388](v344);
  uint64_t v1930 = (uint64_t)&v1715 - v345;
  MEMORY[0x270FA5388](v346);
  uint64_t v1864 = (uint64_t)&v1715 - v347;
  MEMORY[0x270FA5388](v348);
  uint64_t v1761 = (uint64_t)&v1715 - v349;
  MEMORY[0x270FA5388](v350);
  uint64_t v1739 = (uint64_t)&v1715 - v351;
  MEMORY[0x270FA5388](v352);
  uint64_t v1752 = (uint64_t)&v1715 - v353;
  MEMORY[0x270FA5388](v354);
  uint64_t v1923 = (uint64_t)&v1715 - v355;
  MEMORY[0x270FA5388](v356);
  uint64_t v1922 = (uint64_t)&v1715 - v357;
  MEMORY[0x270FA5388](v358);
  uint64_t v1853 = (uint64_t)&v1715 - v359;
  MEMORY[0x270FA5388](v360);
  uint64_t v1754 = (uint64_t)&v1715 - v361;
  MEMORY[0x270FA5388](v362);
  uint64_t v1750 = (uint64_t)&v1715 - v363;
  MEMORY[0x270FA5388](v364);
  uint64_t v1913 = (uint64_t)&v1715 - v365;
  MEMORY[0x270FA5388](v366);
  uint64_t v1844 = (uint64_t)&v1715 - v367;
  MEMORY[0x270FA5388](v368);
  uint64_t v1753 = (uint64_t)&v1715 - v369;
  MEMORY[0x270FA5388](v370);
  uint64_t v1749 = (uint64_t)&v1715 - v371;
  MEMORY[0x270FA5388](v372);
  uint64_t v1912 = (uint64_t)&v1715 - v373;
  MEMORY[0x270FA5388](v374);
  uint64_t v1841 = (uint64_t)&v1715 - v375;
  MEMORY[0x270FA5388](v376);
  uint64_t v1751 = (uint64_t)&v1715 - v377;
  MEMORY[0x270FA5388](v378);
  uint64_t v1747 = (uint64_t)&v1715 - v379;
  MEMORY[0x270FA5388](v380);
  uint64_t v1911 = (uint64_t)&v1715 - v381;
  MEMORY[0x270FA5388](v382);
  uint64_t v1838 = (uint64_t)&v1715 - v383;
  MEMORY[0x270FA5388](v384);
  uint64_t v1755 = (uint64_t)&v1715 - v385;
  MEMORY[0x270FA5388](v386);
  uint64_t v1736 = (uint64_t)&v1715 - v387;
  MEMORY[0x270FA5388](v388);
  uint64_t v1748 = (uint64_t)&v1715 - v389;
  MEMORY[0x270FA5388](v390);
  uint64_t v1916 = (uint64_t)&v1715 - v391;
  MEMORY[0x270FA5388](v392);
  uint64_t v1915 = (uint64_t)&v1715 - v393;
  MEMORY[0x270FA5388](v394);
  uint64_t v1845 = (uint64_t)&v1715 - v395;
  MEMORY[0x270FA5388](v396);
  uint64_t v1733 = (uint64_t)&v1715 - v397;
  MEMORY[0x270FA5388](v398);
  uint64_t v400 = (char *)&v1715 - v399;
  MEMORY[0x270FA5388](v401);
  uint64_t v1910 = (uint64_t)&v1715 - v402;
  MEMORY[0x270FA5388](v403);
  uint64_t v1836 = (uint64_t)&v1715 - v404;
  MEMORY[0x270FA5388](v405);
  uint64_t v1738 = (uint64_t)&v1715 - v406;
  MEMORY[0x270FA5388](v407);
  uint64_t v1735 = (uint64_t)&v1715 - v408;
  MEMORY[0x270FA5388](v409);
  uint64_t v1746 = (uint64_t)&v1715 - v410;
  MEMORY[0x270FA5388](v411);
  uint64_t v1921 = (uint64_t)&v1715 - v412;
  MEMORY[0x270FA5388](v413);
  uint64_t v1920 = (uint64_t)&v1715 - v414;
  MEMORY[0x270FA5388](v415);
  uint64_t v1851 = (uint64_t)&v1715 - v416;
  MEMORY[0x270FA5388](v417);
  uint64_t v1724 = (uint64_t)&v1715 - v418;
  MEMORY[0x270FA5388](v419);
  uint64_t v1723 = (uint64_t)&v1715 - v420;
  MEMORY[0x270FA5388](v421);
  uint64_t v1737 = (uint64_t)&v1715 - v422;
  MEMORY[0x270FA5388](v423);
  uint64_t v1734 = (uint64_t)&v1715 - v424;
  MEMORY[0x270FA5388](v425);
  uint64_t v1745 = (uint64_t)&v1715 - v426;
  MEMORY[0x270FA5388](v427);
  uint64_t v1919 = (uint64_t)&v1715 - v428;
  MEMORY[0x270FA5388](v429);
  uint64_t v1918 = (uint64_t)&v1715 - v430;
  MEMORY[0x270FA5388](v431);
  uint64_t v1917 = (uint64_t)&v1715 - v432;
  *(void *)&long long v2012 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v433);
  v1828 = (char *)&v1715 - ((v434 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v435);
  v1835 = (char *)&v1715 - v436;
  MEMORY[0x270FA5388](v437);
  v1827 = (char *)&v1715 - v438;
  MEMORY[0x270FA5388](v439);
  v1834 = (char *)&v1715 - v440;
  MEMORY[0x270FA5388](v441);
  v1847 = (char *)&v1715 - v442;
  MEMORY[0x270FA5388](v443);
  v1833 = (char *)&v1715 - v444;
  MEMORY[0x270FA5388](v445);
  v1831 = (char *)&v1715 - v446;
  MEMORY[0x270FA5388](v447);
  v1830 = (char *)&v1715 - v448;
  MEMORY[0x270FA5388](v449);
  v1829 = (char *)&v1715 - v450;
  MEMORY[0x270FA5388](v451);
  v1832 = (char *)&v1715 - v452;
  MEMORY[0x270FA5388](v453);
  v1914 = (char *)&v1715 - v454;
  MEMORY[0x270FA5388](v455);
  v457 = (char *)&v1715 - v456;
  MEMORY[0x270FA5388](v458);
  v1843 = (char *)&v1715 - v459;
  uint64_t v460 = swift_getAssociatedConformanceWitness();
  uint64_t v461 = v2053;
  uint64_t v462 = swift_getAssociatedConformanceWitness();
  uint64_t v1975 = v283;
  *(void *)&long long v2111 = v283;
  *(void *)&long long v2014 = AssociatedTypeWitness;
  *((void *)&v2111 + 1) = AssociatedTypeWitness;
  *(void *)&long long v2112 = v461;
  *((void *)&v2112 + 1) = v460;
  *(void *)&long long v2113 = AssociatedConformanceWitness;
  *((void *)&v2113 + 1) = v462;
  uint64_t v463 = type metadata accessor for CanvasItemContent();
  MEMORY[0x270FA5388](v463);
  v465 = (unsigned __int8 *)&v1715 - v464;
  uint64_t v1995 = sub_24EE56240();
  uint64_t v1994 = *(void *)(v1995 - 8);
  __n128 v466 = MEMORY[0x270FA5388](v1995);
  uint64_t AssociatedConformanceWitness = (char *)&v1715 - v467;
  (*(void (**)(uint64_t, uint64_t, __n128))(v281 + 160))(v282, v281, v466);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v493 = v1872;
      v494 = v1871;
      uint64_t v495 = v1873;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v1872 + 32))(v1871, v465, v1873);
      v496 = *(void (**)(char *, char *, uint64_t))(v493 + 16);
      v497 = v1767;
      v496(v1767, v494, v495);
      int v498 = swift_getEnumCaseMultiPayload();
      uint64_t v499 = v2045;
      if (!v498)
      {
        uint64_t v1638 = (*(uint64_t (**)(char *, char *, void))(v2012 + 32))(v457, v497, v2014);
        MEMORY[0x270FA5388](v1638);
        v1714[15] = BYTE7(v2009);
        *(void *)&v1714[16] = v2060;
        *(void *)&v1714[24] = v2055;
        *(void *)&v1714[32] = v2003;
        *(void *)&v1714[40] = v2013;
        *(_OWORD *)&v1714[48] = v2007;
        *(void *)&v1714[64] = v2059;
        *(void *)&v1714[72] = v2054;
        *(void *)&v1714[80] = v1826;
        *(void *)&v1714[88] = v1988;
        *(void *)&v1714[96] = v457;
        *(void *)&long long v2111 = v499;
        *((void *)&v2111 + 1) = v2051;
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        *(void *)&long long v2111 = v2048;
        *((void *)&v2111 + 1) = v2046;
        uint64_t v1640 = swift_getOpaqueTypeConformance2();
        uint64_t v2130 = OpaqueTypeConformance2;
        uint64_t v2131 = v1640;
        *(void *)&long long v2060 = MEMORY[0x263F19B40];
        uint64_t v1641 = swift_getWitnessTable();
        v1642 = v1716;
        sub_24EE56B00();
        sub_24EE564D0();
        uint64_t v2129 = v1641;
        uint64_t v1643 = v2050;
        uint64_t v1644 = swift_getWitnessTable();
        uint64_t v1645 = (uint64_t)v1718;
        sub_24EE569E0();
        (*(void (**)(char *, uint64_t))(v1717 + 8))(v1642, v1643);
        uint64_t v2127 = v1644;
        uint64_t v2128 = MEMORY[0x263F18C10];
        uint64_t v1646 = v2043;
        uint64_t v1647 = swift_getWitnessTable();
        v1648 = v1725;
        sub_24EC90894(v1645);
        v1649 = *(void (**)(uint64_t, uint64_t))(v1719 + 8);
        v1649(v1645, v1646);
        v2055 = (void (*)(char *, uint64_t))v1649;
        sub_24EC90894(v1648);
        uint64_t v1650 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
        uint64_t v1651 = (uint64_t)v1729;
        sub_24EC908D0(v1645, v1646);
        v1649(v1645, v1646);
        uint64_t v2125 = v1647;
        uint64_t v2126 = v1650;
        uint64_t v1652 = v2045;
        uint64_t v1653 = v2044;
        swift_getWitnessTable();
        sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
        v520 = v1909;
        sub_24EC908D0(v1651, v1653);
        (*(void (**)(uint64_t, uint64_t))(v1731 + 8))(v1651, v1653);
        v2055(v1725, v1646);
        uint64_t v499 = v1652;
        uint64_t v509 = v2048;
        uint64_t v510 = v2046;
        (*(void (**)(char *, void))(v2012 + 8))(v457, v2014);
        goto LABEL_121;
      }
      if (v498 == 1)
      {
        v500 = v1726;
        ((void (*)(void))v2004[4])();
        uint64_t v501 = v1985;
        v502 = v1981;
        uint64_t v503 = v1984;
        (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
        unint64_t v504 = (*(unsigned __int8 *)(v501 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v501 + 80);
        uint64_t v505 = swift_allocObject();
        uint64_t v506 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v501 + 32))(v505 + v504, v502, v503);
        MEMORY[0x270FA5388](v506);
        *(void *)&v1714[96] = v500;
        v507 = v1727;
        sub_24EE56B90();
        *(void *)&long long v2111 = v499;
        *((void *)&v2111 + 1) = v2051;
        uint64_t v508 = swift_getOpaqueTypeConformance2();
        uint64_t v509 = v2048;
        *(void *)&long long v2111 = v2048;
        uint64_t v510 = v2046;
        *((void *)&v2111 + 1) = v2046;
        uint64_t v511 = swift_getOpaqueTypeConformance2();
        uint64_t v2137 = v508;
        uint64_t v2138 = v511;
        uint64_t v2136 = swift_getWitnessTable();
        uint64_t v2134 = swift_getWitnessTable();
        uint64_t v2135 = MEMORY[0x263F18C10];
        uint64_t v512 = v2043;
        uint64_t v513 = swift_getWitnessTable();
        uint64_t v514 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
        uint64_t v515 = v499;
        uint64_t v516 = (uint64_t)v1729;
        uint64_t v517 = (uint64_t)v507;
        uint64_t v518 = v1732;
        sub_24EC909C8(v517, v512, v1732);
        uint64_t v2132 = v513;
        uint64_t v2133 = v514;
        uint64_t v519 = v2044;
        swift_getWitnessTable();
        sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
        v520 = v1909;
        sub_24EC908D0(v516, v519);
        uint64_t v521 = v516;
        uint64_t v499 = v515;
        (*(void (**)(uint64_t, uint64_t))(v1731 + 8))(v521, v519);
        (*(void (**)(char *, uint64_t))(v1720 + 8))(v1727, v518);
        ((void (*)(char *, uint64_t))v2004[1])(v1726, v2011);
LABEL_121:
        v1654 = v520;
        uint64_t v1655 = v2051;
        goto LABEL_123;
      }
      uint64_t v1656 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B18);
      uint64_t v1657 = (uint64_t)&v497[*(int *)(v1656 + 48)];
      v1658 = &v497[*(int *)(v1656 + 64)];
      uint64_t v1659 = (uint64_t)v497;
      uint64_t v1660 = v1723;
      sub_24ECB04CC(v1659, v1723);
      uint64_t v1661 = v1657;
      uint64_t v1662 = v1724;
      sub_24ECB04CC(v1661, v1724);
      uint64_t v1663 = v1721;
      uint64_t v1664 = (uint64_t)v1728;
      (*(void (**)(char *, char *, uint64_t))(v1721 + 32))(v1728, v1658, v1730);
      uint64_t v1665 = sub_24EE56140();
      uint64_t v1666 = (uint64_t)v1722;
      uint64_t *v1722 = v1665;
      *(void *)(v1666 + 8) = 0;
      *(unsigned char *)(v1666 + 16) = 1;
      v1667 = (uint64_t *)(v1666 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964B20) + 44));
      *(void *)&v1714[104] = v2054;
      *(void *)&v1714[96] = v2059;
      *(_OWORD *)&v1714[80] = v2007;
      *(void *)&v1714[72] = v2013;
      sub_24ECAF75C(v1662, v1660, v1826, v1664, v2002, v1667, v2005, v2009, v2060, (uint64_t)v2055, v2003);
      *(void *)&long long v2111 = v499;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1668 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      uint64_t v1669 = v2046;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1670 = swift_getOpaqueTypeConformance2();
      uint64_t v2179 = v1668;
      uint64_t v2180 = v1670;
      uint64_t v2178 = swift_getWitnessTable();
      uint64_t v2176 = swift_getWitnessTable();
      uint64_t v2177 = MEMORY[0x263F18C10];
      uint64_t v1671 = swift_getWitnessTable();
      uint64_t v1672 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2174 = v1671;
      uint64_t v2175 = v1672;
      uint64_t v1673 = v2044;
      swift_getWitnessTable();
      sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      v1654 = v1909;
      sub_24EC909C8(v1666, v1673, v1825);
      sub_24EC88758(v1666, &qword_26B1DE488);
      (*(void (**)(char *, uint64_t))(v1663 + 8))(v1728, v1730);
      uint64_t v1655 = v2051;
      uint64_t v510 = v1669;
      sub_24EC88758(v1724, &qword_26B1DB9F0);
      uint64_t v509 = v2048;
      sub_24EC88758(v1723, &qword_26B1DB9F0);
LABEL_123:
      *(void *)&long long v2111 = v499;
      *((void *)&v2111 + 1) = v1655;
      uint64_t v1674 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v509;
      *((void *)&v2111 + 1) = v510;
      uint64_t v1675 = swift_getOpaqueTypeConformance2();
      uint64_t v2172 = v1674;
      uint64_t v2173 = v1675;
      uint64_t v2171 = swift_getWitnessTable();
      uint64_t v2169 = swift_getWitnessTable();
      uint64_t v2170 = MEMORY[0x263F18C10];
      uint64_t v1676 = swift_getWitnessTable();
      uint64_t v1677 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2167 = v1676;
      uint64_t v2168 = v1677;
      uint64_t v1678 = swift_getWitnessTable();
      uint64_t v1679 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2165 = v1678;
      uint64_t v2166 = v1679;
      uint64_t v1680 = v1998;
      uint64_t v1681 = swift_getWitnessTable();
      uint64_t v1682 = (uint64_t)v1774;
      sub_24EC90894(v1654);
      long long v2111 = v2017;
      uint64_t v1683 = swift_getOpaqueTypeConformance2();
      uint64_t v1684 = (uint64_t)v1883;
      sub_24EC909C8(v1682, v1947, v1680);
      v1685 = *(void (**)(uint64_t, uint64_t))(v1940 + 8);
      v1940 += 8;
      *(void *)&long long v2060 = v1685;
      v1685(v1682, v1680);
      uint64_t v2163 = v1683;
      uint64_t v2164 = v1681;
      uint64_t v1686 = v2010;
      uint64_t v1687 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1688 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1689 = swift_getOpaqueTypeConformance2();
      uint64_t v2161 = v1688;
      uint64_t v2162 = v1689;
      uint64_t v1690 = swift_getWitnessTable();
      uint64_t v1691 = v1967;
      sub_24EC908D0(v1684, v1686);
      (*(void (**)(uint64_t, uint64_t))(v1884 + 8))(v1684, v1686);
      uint64_t v2159 = v1687;
      uint64_t v2160 = v1690;
      uint64_t v1692 = v2018;
      uint64_t v1693 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v1694 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1695 = swift_getOpaqueTypeConformance2();
      uint64_t v2157 = v1694;
      uint64_t v2158 = v1695;
      uint64_t v1696 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2155 = swift_getOpaqueTypeConformance2();
      uint64_t v2156 = v1695;
      uint64_t v1697 = swift_getWitnessTable();
      uint64_t v2153 = v1696;
      uint64_t v2154 = v1697;
      uint64_t v1698 = swift_getWitnessTable();
      uint64_t v1699 = v1983;
      sub_24EC908D0(v1691, v1692);
      (*(void (**)(uint64_t, uint64_t))(v1969 + 8))(v1691, v1692);
      uint64_t v2151 = v1693;
      uint64_t v2152 = v1698;
      uint64_t v1700 = v2056;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1701 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1702 = swift_getOpaqueTypeConformance2();
      uint64_t v2149 = v1701;
      uint64_t v2150 = v1702;
      uint64_t v1703 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1704 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1705 = swift_getOpaqueTypeConformance2();
      uint64_t v2147 = v1704;
      uint64_t v2148 = v1705;
      uint64_t v1706 = swift_getWitnessTable();
      uint64_t v2145 = v1703;
      uint64_t v2146 = v1706;
      uint64_t v1707 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2143 = swift_getOpaqueTypeConformance2();
      uint64_t v2144 = v2059;
      uint64_t v1708 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1709 = swift_getOpaqueTypeConformance2();
      uint64_t v2141 = v1708;
      uint64_t v2142 = v1709;
      uint64_t v1710 = swift_getWitnessTable();
      uint64_t v2139 = v1707;
      uint64_t v2140 = v1710;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC908D0(v1699, v1700);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1699, v1700);
      ((void (*)(char *, uint64_t))v2060)(v1909, v1680);
      (*(void (**)(char *, uint64_t))(v1872 + 8))(v1871, v1873);
LABEL_119:
      long long v2111 = v2017;
      uint64_t v1606 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1607 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1608 = swift_getOpaqueTypeConformance2();
      uint64_t v2640 = v1607;
      uint64_t v2641 = v1608;
      uint64_t v2639 = swift_getWitnessTable();
      uint64_t v2637 = swift_getWitnessTable();
      uint64_t v2638 = MEMORY[0x263F18C10];
      uint64_t v1609 = swift_getWitnessTable();
      uint64_t v1610 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2635 = v1609;
      uint64_t v2636 = v1610;
      uint64_t v1611 = swift_getWitnessTable();
      uint64_t v1612 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2633 = v1611;
      uint64_t v2634 = v1612;
      uint64_t v1613 = swift_getWitnessTable();
      uint64_t v2631 = v1606;
      uint64_t v2632 = v1613;
      uint64_t v1614 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1615 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1616 = swift_getOpaqueTypeConformance2();
      uint64_t v2629 = v1615;
      uint64_t v2630 = v1616;
      uint64_t v1617 = swift_getWitnessTable();
      uint64_t v2627 = v1614;
      uint64_t v2628 = v1617;
      uint64_t v1618 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v1619 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1620 = swift_getOpaqueTypeConformance2();
      uint64_t v2625 = v1619;
      uint64_t v2626 = v1620;
      uint64_t v1621 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2623 = swift_getOpaqueTypeConformance2();
      uint64_t v2624 = v1620;
      uint64_t v1622 = swift_getWitnessTable();
      uint64_t v2621 = v1621;
      uint64_t v2622 = v1622;
      uint64_t v1623 = swift_getWitnessTable();
      uint64_t v2619 = v1618;
      uint64_t v2620 = v1623;
      uint64_t v1624 = swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1625 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1626 = swift_getOpaqueTypeConformance2();
      uint64_t v2617 = v1625;
      uint64_t v2618 = v1626;
      uint64_t v1627 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1628 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1629 = swift_getOpaqueTypeConformance2();
      uint64_t v2615 = v1628;
      uint64_t v2616 = v1629;
      uint64_t v1630 = swift_getWitnessTable();
      uint64_t v2613 = v1627;
      uint64_t v2614 = v1630;
      uint64_t v1631 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2611 = swift_getOpaqueTypeConformance2();
      uint64_t v2612 = v2059;
      uint64_t v1632 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1633 = swift_getOpaqueTypeConformance2();
      uint64_t v2609 = v1632;
      uint64_t v2610 = v1633;
      uint64_t v1634 = swift_getWitnessTable();
      uint64_t v2607 = v1631;
      uint64_t v2608 = v1634;
      uint64_t v1635 = swift_getWitnessTable();
      uint64_t v2605 = v1624;
      uint64_t v2606 = v1635;
      uint64_t v1636 = v1995;
      swift_getWitnessTable();
      sub_24EC90894(v768);
      return (*(uint64_t (**)(char *, uint64_t))(v1994 + 8))(v768, v1636);
    case 2:
      long long v522 = *((_OWORD *)v465 + 11);
      long long v2119 = *((_OWORD *)v465 + 10);
      long long v2120 = v522;
      long long v523 = *((_OWORD *)v465 + 13);
      long long v2121 = *((_OWORD *)v465 + 12);
      long long v2122 = v523;
      long long v524 = *((_OWORD *)v465 + 7);
      long long v2115 = *((_OWORD *)v465 + 6);
      long long v2116 = v524;
      long long v525 = *((_OWORD *)v465 + 9);
      long long v2117 = *((_OWORD *)v465 + 8);
      long long v2118 = v525;
      long long v526 = *((_OWORD *)v465 + 3);
      long long v2113 = *((_OWORD *)v465 + 2);
      v2114[0] = v526;
      long long v527 = *((_OWORD *)v465 + 5);
      v2114[1] = *((_OWORD *)v465 + 4);
      v2114[2] = v527;
      long long v528 = *((_OWORD *)v465 + 1);
      long long v2111 = *(_OWORD *)v465;
      long long v2112 = v528;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[15], "style title subtitle caption primaryActionButton secondaryActionButton customView ");
      *(void *)&long long v2096 = &type metadata for FullWidthStageViewLayout;
      uint64_t v529 = v2014;
      *((void *)&v2096 + 1) = v2014;
      *(void *)&long long v2097 = &type metadata for FullWidthStageViewStyle;
      *((void *)&v2097 + 1) = v1990;
      unsigned long long v531 = v1990;
      uint64_t v530 = v531 >> 64;
      *(void *)v2098 = v531;
      *(_OWORD *)&v2098[8] = v1990;
      *(void *)&v2098[24] = *((void *)&v1990 + 1);
      *(void *)&long long v2099 = v1943;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v533 = &v465[TupleTypeMetadata[12]];
      LODWORD(v1990) = v465[TupleTypeMetadata[16]];
      uint64_t v534 = (uint64_t)&v465[TupleTypeMetadata[20]];
      uint64_t v535 = (uint64_t)&v465[TupleTypeMetadata[24]];
      uint64_t v536 = (uint64_t)&v465[TupleTypeMetadata[28]];
      v537 = &v465[TupleTypeMetadata[32]];
      v538 = &v465[TupleTypeMetadata[36]];
      v539 = &v465[TupleTypeMetadata[40]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1914, v533, v529);
      uint64_t v540 = v1851;
      sub_24ECB04CC(v534, v1851);
      sub_24ECB04CC(v535, v1920);
      sub_24ECB04CC(v536, v1921);
      v541 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v1982 + 32);
      v541(v1936, v537, v530);
      v541(v1937, v538, v530);
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v1877 + 32))(v1942, v539, v1943);
      long long v2105 = v2119;
      long long v2106 = v2120;
      long long v2107 = v2121;
      long long v2108 = v2122;
      long long v2101 = v2115;
      long long v2102 = v2116;
      long long v2103 = v2117;
      long long v2104 = v2118;
      *(_OWORD *)v2098 = v2113;
      *(_OWORD *)&v2098[16] = v2114[0];
      long long v2099 = v2114[1];
      long long v2100 = v2114[2];
      long long v2096 = v2111;
      long long v2097 = v2112;
      char v2216 = v1990;
      uint64_t v542 = v540;
      uint64_t v543 = v1746;
      sub_24EC884D4(v542, v1746, &qword_26B1DB9F0);
      v544 = v2004;
      v545 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v546 = v2011;
      if (v545(v543, 1, v2011) == 1)
      {
        sub_24EC88758(v543, &qword_26B1DB9F0);
        *(void *)&long long v1990 = 0;
        uint64_t v1987 = 0;
        uint64_t v1986 = 0;
        uint64_t v1985 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v786 = v1999;
        uint64_t v787 = sub_24EE55860();
        MEMORY[0x270FA5388](v787);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v543;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v546 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v786, v2000);
        uint64_t v1987 = *((void *)&v2532 + 1);
        *(void *)&long long v1990 = v2532;
        uint64_t v1986 = v2533;
        uint64_t v1985 = v2534;
        ((void (*)(uint64_t, uint64_t))v544[1])(v543, v546);
      }
      uint64_t v788 = v1735;
      sub_24EC884D4(v1920, v1735, &qword_26B1DB9F0);
      if (v545(v788, 1, v546) == 1)
      {
        sub_24EC88758(v788, &qword_26B1DB9F0);
        uint64_t v1989 = 0;
        uint64_t v1984 = 0;
        v1981 = 0;
        uint64_t v1979 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v905 = v1999;
        uint64_t v906 = sub_24EE55860();
        MEMORY[0x270FA5388](v906);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v788;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v546 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v905, v2000);
        uint64_t v1984 = *((void *)&v2532 + 1);
        uint64_t v1989 = v2532;
        v1981 = (char *)v2533;
        uint64_t v1979 = v2534;
        ((void (*)(uint64_t, uint64_t))v544[1])(v788, v546);
      }
      uint64_t v907 = v1738;
      sub_24EC884D4(v1921, v1738, &qword_26B1DB9F0);
      if (v545(v907, 1, v546) == 1)
      {
        sub_24EC88758(v907, &qword_26B1DB9F0);
        uint64_t v2011 = 0;
        uint64_t v2001 = 0;
        uint64_t v2000 = 0;
        uint64_t v1999 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1267 = v1999;
        uint64_t v1268 = sub_24EE55860();
        MEMORY[0x270FA5388](v1268);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v907;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1267, v2000);
        uint64_t v2001 = *((void *)&v2532 + 1);
        uint64_t v2011 = v2532;
        uint64_t v2000 = v2533;
        uint64_t v1999 = v2534;
        ((void (*)(uint64_t, uint64_t))v544[1])(v907, v546);
      }
      uint64_t v1269 = v2013;
      sub_24EE559E0();
      v1270 = (void (*)(char *))sub_24EE559D0();
      v1270(v1914);
      swift_release();
      uint64_t v1271 = v2060;
      uint64_t v1272 = v2054;
      sub_24EE559E0();
      v1273 = (void (*)(char *))sub_24EE559D0();
      uint64_t v1274 = v1974;
      v1273(v1936);
      swift_release();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1768 + 56))(v1274, 0, 1, v1271);
      uint64_t v1275 = sub_24EE559D0();
      uint64_t v1277 = v1276;
      MEMORY[0x270FA5388](v1275);
      uint64_t v1278 = v2002;
      uint64_t v1279 = v2009;
      v1714[39] = HIBYTE(v1271);
      *(void *)&v1714[40] = v2055;
      uint64_t v1280 = v2003;
      *(void *)&v1714[48] = v2003;
      *(void *)&v1714[56] = v1269;
      *(_OWORD *)&v1714[64] = v2007;
      uint64_t v1281 = v2059;
      *(void *)&v1714[80] = v2059;
      *(void *)&v1714[88] = v1272;
      *(void *)&v1714[96] = v1282;
      *(void *)&v1714[104] = v1277;
      uint64_t v1283 = v1772;
      sub_24EC96D54((void (*)(char *))sub_24ECB0550, (uint64_t)v1937, v1271, v1975, v1772);
      swift_release();
      uint64_t v1284 = v2053;
      sub_24EE559E0();
      v1285 = (void (*)(char *))sub_24EE559D0();
      uint64_t v1286 = v1779;
      sub_24EC96D54(v1285, v1942, v1279, v1284, v1779);
      swift_release();
      uint64_t v1287 = (uint64_t)v1781;
      (*(void (**)(char *, uint64_t, uint64_t))(v1780 + 16))(v1781, v1826, v1278);
      *(void *)&v1714[88] = v1281;
      *(void *)&v1714[96] = v1280;
      *(void *)&v1714[72] = v2054;
      *(void *)&v1714[80] = v2054;
      *(void *)&v1714[64] = v2013;
      *(void *)&v1714[48] = v1279;
      *(void *)&v1714[32] = v1271;
      *(void *)&v1714[24] = v2052;
      *((void *)&v1712 + 1) = v2001;
      *(void *)&long long v1712 = v2011;
      *((void *)&v1711 + 1) = v1979;
      *(void *)&long long v1711 = v1981;
      uint64_t v1288 = v1782;
      sub_24EE0F958(&v2096, &v2216, v1990, v1987, v1986, v1985, v1989, v1984, v1782, v1711, v1712, v2000, v1999, v1858, v1974, v1283, v1286, v1287, *(long long *)&v1714[24],
        v1271,
        *(uint64_t *)&v1714[48],
        v1278);
      uint64_t v1289 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1290 = v1991;
      sub_24EDB5A5C(v1289, v1991);
      swift_bridgeObjectRelease();
      v1291 = v1783;
      long long v1292 = v2019;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1290, v1992);
      (*(void (**)(uint64_t, void))(v1784 + 8))(v1288, v1292);
      long long v2096 = v1292;
      uint64_t v1293 = swift_getOpaqueTypeConformance2();
      v1294 = v1878;
      uint64_t v1295 = v1949;
      sub_24EC90894(v1291);
      uint64_t v1296 = v1944 + 8;
      v1297 = *(void (**)(char *, uint64_t))(v1944 + 8);
      v1297(v1291, v1295);
      *(void *)&long long v2060 = v1297;
      uint64_t v1944 = v1296;
      uint64_t v1298 = (uint64_t)v1785;
      v1299 = v1294;
      uint64_t v1300 = v1295;
      sub_24EC90894(v1299);
      *(void *)&long long v2096 = v2021;
      *((void *)&v2096 + 1) = v2020;
      uint64_t v1301 = swift_getOpaqueTypeConformance2();
      uint64_t v1302 = (uint64_t)v1892;
      sub_24EC908D0(v1298, v1300);
      v1297((char *)v1298, v1300);
      long long v2096 = v2017;
      uint64_t v1303 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2045;
      *((void *)&v2096 + 1) = v2051;
      uint64_t v1304 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2048;
      *((void *)&v2096 + 1) = v2046;
      uint64_t v1305 = swift_getOpaqueTypeConformance2();
      uint64_t v2214 = v1304;
      uint64_t v2215 = v1305;
      uint64_t v2213 = swift_getWitnessTable();
      uint64_t v2211 = swift_getWitnessTable();
      uint64_t v2212 = MEMORY[0x263F18C10];
      uint64_t v1306 = swift_getWitnessTable();
      uint64_t v1307 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2209 = v1306;
      uint64_t v2210 = v1307;
      uint64_t v1308 = swift_getWitnessTable();
      uint64_t v1309 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2207 = v1308;
      uint64_t v2208 = v1309;
      uint64_t v1310 = swift_getWitnessTable();
      uint64_t v2205 = v1303;
      uint64_t v2206 = v1310;
      uint64_t v1311 = v2010;
      uint64_t v1312 = swift_getWitnessTable();
      uint64_t v2203 = v1293;
      uint64_t v2204 = v1301;
      uint64_t v1313 = v2057;
      uint64_t v1314 = swift_getWitnessTable();
      uint64_t v1315 = v1967;
      sub_24EC909C8(v1302, v1311, v1313);
      (*(void (**)(uint64_t, uint64_t))(v1893 + 8))(v1302, v1313);
      uint64_t v2201 = v1312;
      uint64_t v2202 = v1314;
      uint64_t v1316 = v2018;
      uint64_t v1317 = swift_getWitnessTable();
      long long v2096 = v2022;
      uint64_t v1318 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2024;
      *((void *)&v2096 + 1) = v2026;
      uint64_t v1319 = swift_getOpaqueTypeConformance2();
      uint64_t v2199 = v1318;
      uint64_t v2200 = v1319;
      uint64_t v1320 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2025;
      *((void *)&v2096 + 1) = v2028;
      uint64_t v2197 = swift_getOpaqueTypeConformance2();
      uint64_t v2198 = v1319;
      uint64_t v1321 = swift_getWitnessTable();
      uint64_t v2195 = v1320;
      uint64_t v2196 = v1321;
      uint64_t v1322 = swift_getWitnessTable();
      sub_24EC908D0(v1315, v1316);
      (*(void (**)(uint64_t, uint64_t))(v1969 + 8))(v1315, v1316);
      uint64_t v2193 = v1317;
      uint64_t v2194 = v1322;
      uint64_t v1323 = v2056;
      swift_getWitnessTable();
      long long v2096 = v2029;
      uint64_t v1324 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2033;
      *((void *)&v2096 + 1) = v2032;
      uint64_t v1325 = swift_getOpaqueTypeConformance2();
      uint64_t v2191 = v1324;
      uint64_t v2192 = v1325;
      uint64_t v1326 = swift_getWitnessTable();
      long long v2096 = v2034;
      uint64_t v1327 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2037;
      *((void *)&v2096 + 1) = v2036;
      uint64_t v1328 = swift_getOpaqueTypeConformance2();
      uint64_t v2189 = v1327;
      uint64_t v2190 = v1328;
      uint64_t v1329 = swift_getWitnessTable();
      uint64_t v2187 = v1326;
      uint64_t v2188 = v1329;
      uint64_t v1330 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2038;
      *((void *)&v2096 + 1) = v2040;
      uint64_t v2185 = swift_getOpaqueTypeConformance2();
      uint64_t v2186 = v2059;
      uint64_t v1331 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2042;
      *((void *)&v2096 + 1) = v2041;
      uint64_t v1332 = swift_getOpaqueTypeConformance2();
      uint64_t v2183 = v1331;
      uint64_t v2184 = v1332;
      uint64_t v1333 = swift_getWitnessTable();
      uint64_t v2181 = v1330;
      uint64_t v2182 = v1333;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      uint64_t v1334 = v1983;
      sub_24EC908D0(v1983, v1323);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1334, v1323);
      ((void (*)(char *, uint64_t))v2060)(v1878, v1949);
      (*(void (**)(uint64_t, uint64_t))(v1877 + 8))(v1942, v1943);
      v1335 = *(void (**)(uint64_t, void))(v1982 + 8);
      uint64_t v1336 = *((void *)&v1990 + 1);
      v1335((uint64_t)v1937, *((void *)&v1990 + 1));
      v1335((uint64_t)v1936, v1336);
      sub_24EC88758(v1921, &qword_26B1DB9F0);
      sub_24EC88758(v1920, &qword_26B1DB9F0);
      sub_24EC88758(v1851, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1914;
      goto LABEL_118;
    case 3:
      long long v2053 = *(_OWORD *)v465;
      long long v2014 = *((_OWORD *)v465 + 1);
      long long v2012 = *((_OWORD *)v465 + 2);
      uint64_t v547 = *((void *)v465 + 6);
      uint64_t v548 = *((void *)v465 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout title description actionButton ");
      *(void *)&long long v2111 = &type metadata for InfoActionCardViewLayout;
      *((void *)&v2111 + 1) = v1990;
      long long v2112 = v1990;
      uint64_t v549 = *((void *)&v1990 + 1);
      v550 = (int *)swift_getTupleTypeMetadata();
      uint64_t v551 = (uint64_t)&v465[v550[16]];
      v552 = &v465[v550[20]];
      uint64_t v553 = v1836;
      sub_24ECB04CC((uint64_t)&v465[v550[12]], v1836);
      sub_24ECB04CC(v551, v1910);
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v1982 + 32))(v1928, v552, v549);
      long long v2111 = v2053;
      long long v2112 = v2014;
      long long v2113 = v2012;
      *(void *)&v2114[0] = v547;
      *((void *)&v2114[0] + 1) = v548;
      sub_24EC884D4(v553, (uint64_t)v400, &qword_26B1DB9F0);
      v554 = v2004;
      v555 = (unsigned int (*)(char *, uint64_t, uint64_t))v2004[6];
      uint64_t v556 = v2011;
      if (v555(v400, 1, v2011) == 1)
      {
        sub_24EC88758((uint64_t)v400, &qword_26B1DB9F0);
        *(void *)&long long v2053 = 0;
        *(void *)&long long v2014 = 0;
        *(void *)&long long v2012 = 0;
        *(void *)&long long v1990 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v789 = v1999;
        uint64_t v790 = sub_24EE55860();
        MEMORY[0x270FA5388](v790);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v400;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v556 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v789, v2000);
        *(void *)&long long v2014 = *((void *)&v2096 + 1);
        *(void *)&long long v2053 = v2096;
        *(void *)&long long v2012 = v2097;
        *(void *)&long long v1990 = *((void *)&v2097 + 1);
        ((void (*)(char *, uint64_t))v554[1])(v400, v556);
      }
      uint64_t v791 = v1733;
      sub_24EC884D4(v1910, v1733, &qword_26B1DB9F0);
      if (v555((char *)v791, 1, v556) == 1)
      {
        sub_24EC88758(v791, &qword_26B1DB9F0);
        uint64_t v792 = 0;
        uint64_t v2011 = 0;
        uint64_t v2001 = 0;
        uint64_t v793 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v908 = v1999;
        uint64_t v909 = sub_24EE55860();
        MEMORY[0x270FA5388](v909);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v791;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v908, v2000);
        uint64_t v2011 = *((void *)&v2096 + 1);
        uint64_t v792 = v2096;
        uint64_t v2001 = v2097;
        uint64_t v793 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v554[1])(v791, v556);
      }
      uint64_t v910 = v2060;
      uint64_t v911 = v2054;
      sub_24EE559E0();
      uint64_t v912 = sub_24EE559D0();
      MEMORY[0x270FA5388](v912);
      uint64_t v913 = v2047;
      v1714[15] = HIBYTE(v2006);
      *(void *)&v1714[16] = v2005;
      *(void *)&v1714[24] = v2009;
      uint64_t v914 = (uint64_t)v2055;
      *(void *)&v1714[32] = v910;
      *(void *)&v1714[40] = v2055;
      *(void *)&v1714[48] = v2003;
      *(void *)&v1714[56] = v2013;
      *(_OWORD *)&v1714[64] = v2007;
      uint64_t v915 = v1974;
      sub_24EC96D54((void (*)(char *))sub_24ECB0550, v1928, v910, v1975, v1974);
      swift_release();
      *(void *)&v1714[96] = v910;
      *(void *)&v1714[104] = v911;
      *(void *)&v1714[80] = v793;
      uint64_t v916 = v1776;
      sub_24EE246E4(&v2111, v2053, v2014, v2012, v1990, v792, v2011, v2001, v1776, *(uint64_t *)&v1714[80], v915);
      uint64_t v917 = (*(uint64_t (**)(uint64_t, uint64_t))(v914 + 184))(v913, v914);
      uint64_t v918 = v1991;
      sub_24EDB5A5C(v917, v1991);
      swift_bridgeObjectRelease();
      v919 = v1775;
      uint64_t v920 = v2021;
      uint64_t v921 = v2020;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v918, v1992);
      (*(void (**)(uint64_t, uint64_t))(v1777 + 8))(v916, v920);
      *(void *)&long long v2111 = v920;
      *((void *)&v2111 + 1) = v921;
      uint64_t v922 = swift_getOpaqueTypeConformance2();
      v923 = v1876;
      uint64_t v924 = v1953;
      sub_24EC90894(v919);
      uint64_t v925 = v1941 + 8;
      v926 = *(void (**)(char *, uint64_t))(v1941 + 8);
      v926(v919, v924);
      *(void *)&long long v2060 = v926;
      uint64_t v1941 = v925;
      uint64_t v927 = (uint64_t)v1778;
      v928 = v923;
      uint64_t v929 = v924;
      sub_24EC90894(v928);
      long long v2111 = v2019;
      uint64_t v930 = swift_getOpaqueTypeConformance2();
      uint64_t v931 = (uint64_t)v1892;
      sub_24EC909C8(v927, v1949, v929);
      v926((char *)v927, v929);
      long long v2111 = v2017;
      uint64_t v932 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v933 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v934 = swift_getOpaqueTypeConformance2();
      uint64_t v2250 = v933;
      uint64_t v2251 = v934;
      uint64_t v2249 = swift_getWitnessTable();
      uint64_t v2247 = swift_getWitnessTable();
      uint64_t v2248 = MEMORY[0x263F18C10];
      uint64_t v935 = swift_getWitnessTable();
      uint64_t v936 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2245 = v935;
      uint64_t v2246 = v936;
      uint64_t v937 = swift_getWitnessTable();
      uint64_t v938 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2243 = v937;
      uint64_t v2244 = v938;
      uint64_t v939 = swift_getWitnessTable();
      uint64_t v2241 = v932;
      uint64_t v2242 = v939;
      uint64_t v940 = v2010;
      uint64_t v941 = swift_getWitnessTable();
      uint64_t v2239 = v930;
      uint64_t v2240 = v922;
      uint64_t v942 = v2057;
      uint64_t v943 = swift_getWitnessTable();
      uint64_t v944 = v1967;
      sub_24EC909C8(v931, v940, v942);
      (*(void (**)(uint64_t, uint64_t))(v1893 + 8))(v931, v942);
      uint64_t v2237 = v941;
      uint64_t v2238 = v943;
      uint64_t v945 = v2018;
      uint64_t v946 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v947 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v948 = swift_getOpaqueTypeConformance2();
      uint64_t v2235 = v947;
      uint64_t v2236 = v948;
      uint64_t v949 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2233 = swift_getOpaqueTypeConformance2();
      uint64_t v2234 = v948;
      uint64_t v950 = swift_getWitnessTable();
      uint64_t v2231 = v949;
      uint64_t v2232 = v950;
      uint64_t v951 = swift_getWitnessTable();
      sub_24EC908D0(v944, v945);
      (*(void (**)(uint64_t, uint64_t))(v1969 + 8))(v944, v945);
      uint64_t v2229 = v946;
      uint64_t v2230 = v951;
      uint64_t v952 = v2056;
      swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v953 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v954 = swift_getOpaqueTypeConformance2();
      uint64_t v2227 = v953;
      uint64_t v2228 = v954;
      uint64_t v955 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v956 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v957 = swift_getOpaqueTypeConformance2();
      uint64_t v2225 = v956;
      uint64_t v2226 = v957;
      uint64_t v958 = swift_getWitnessTable();
      uint64_t v2223 = v955;
      uint64_t v2224 = v958;
      uint64_t v959 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2221 = swift_getOpaqueTypeConformance2();
      uint64_t v2222 = v2059;
      uint64_t v960 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v961 = swift_getOpaqueTypeConformance2();
      uint64_t v2219 = v960;
      uint64_t v2220 = v961;
      uint64_t v962 = swift_getWitnessTable();
      uint64_t v2217 = v959;
      uint64_t v2218 = v962;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      uint64_t v963 = v1983;
      sub_24EC908D0(v1983, v952);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v963, v952);
      ((void (*)(char *, uint64_t))v2060)(v1876, v1953);
      (*(void (**)(uint64_t, void))(v1982 + 8))(v1928, *((void *)&v1990 + 1));
      sub_24EC88758(v1910, &qword_26B1DB9F0);
      sub_24EC88758(v1836, &qword_26B1DB9F0);
      goto LABEL_119;
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "artwork footnote subtitle title ");
      uint64_t v557 = v2014;
      *(void *)&long long v2111 = v2014;
      *((void *)&v2111 + 1) = v1990;
      *(void *)&long long v2112 = v1990;
      *((void *)&v2112 + 1) = v1990;
      v558 = (int *)swift_getTupleTypeMetadata();
      uint64_t v559 = (uint64_t)&v465[v558[12]];
      uint64_t v560 = (uint64_t)&v465[v558[16]];
      uint64_t v561 = (uint64_t)&v465[v558[20]];
      v562 = v1832;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1832, v465, v557);
      uint64_t v563 = v1845;
      sub_24ECB04CC(v559, v1845);
      sub_24ECB04CC(v560, v1915);
      sub_24ECB04CC(v561, v1916);
      sub_24EE559E0();
      v564 = (void (*)(char *))sub_24EE559D0();
      v564(v562);
      swift_release();
      sub_24EE559E0();
      v565 = (void (*)(char *))sub_24EE559D0();
      v565(v562);
      swift_release();
      sub_24EE559E0();
      v566 = (void (*)(char *))sub_24EE559D0();
      v566(v562);
      swift_release();
      uint64_t v567 = v1748;
      sub_24EC884D4(v563, v1748, &qword_26B1DB9F0);
      v568 = v2004;
      v569 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v570 = v2011;
      if (v569(v567, 1, v2011) == 1)
      {
        sub_24EC88758(v567, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        *(void *)&long long v2054 = 0;
        *(void *)&long long v2053 = 0;
        *(void *)&long long v2009 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v794 = v1999;
        uint64_t v795 = sub_24EE55860();
        MEMORY[0x270FA5388](v795);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v567;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v570 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v794, v2000);
        *(void *)&long long v2054 = *((void *)&v2111 + 1);
        *(void *)&long long v2060 = v2111;
        *(void *)&long long v2053 = v2112;
        *(void *)&long long v2009 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v568[1])(v567, v570);
      }
      uint64_t v796 = v1736;
      sub_24EC884D4(v1915, v1736, &qword_26B1DB9F0);
      if (v569(v796, 1, v570) == 1)
      {
        sub_24EC88758(v796, &qword_26B1DB9F0);
        uint64_t v2003 = 0;
        uint64_t v797 = 0;
        uint64_t v798 = 0;
        uint64_t v799 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v964 = v1999;
        uint64_t v965 = sub_24EE55860();
        MEMORY[0x270FA5388](v965);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v796;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v570 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v964, v2000);
        uint64_t v797 = *((void *)&v2111 + 1);
        uint64_t v2003 = v2111;
        uint64_t v798 = v2112;
        uint64_t v799 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v796, v570);
      }
      uint64_t v966 = v1755;
      sub_24EC884D4(v1916, v1755, &qword_26B1DB9F0);
      if (v569(v966, 1, v570) == 1)
      {
        sub_24EC88758(v966, &qword_26B1DB9F0);
        uint64_t v967 = 0;
        uint64_t v968 = 0;
        uint64_t v969 = 0;
        uint64_t v970 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1337 = v1999;
        uint64_t v1338 = v570;
        uint64_t v1339 = sub_24EE55860();
        MEMORY[0x270FA5388](v1339);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v966;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1337, v2000);
        uint64_t v968 = *((void *)&v2111 + 1);
        uint64_t v967 = v2111;
        uint64_t v969 = v2112;
        uint64_t v970 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v966, v1338);
      }
      v1340 = v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(_OWORD *)&v1714[96] = v2007;
      *(void *)&v1714[88] = v2013;
      *(void *)&v1714[56] = v1340;
      *(void *)&v1714[24] = v967;
      *(void *)&v1714[32] = v968;
      *(void *)&v1714[8] = v798;
      *(void *)v1714 = v797;
      uint64_t v1341 = v1786;
      sub_24ECB38AC(v1846, v1874, v1875, v2060, v2054, v2053, v2009, v2003, v1786, *(long long *)v1714, v799, *(long long *)&v1714[24], v969, v970, *(uint64_t *)&v1714[56], v2052, v2006, v2005);
      uint64_t v1342 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1343 = v1991;
      sub_24EDB5A5C(v1342, v1991);
      swift_bridgeObjectRelease();
      v1344 = v1787;
      long long v1345 = v2022;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1343, v1992);
      (*(void (**)(uint64_t, void))(v1788 + 8))(v1341, v1345);
      long long v2111 = v1345;
      uint64_t v1346 = swift_getOpaqueTypeConformance2();
      v1347 = v1879;
      uint64_t v1348 = v1952;
      sub_24EC90894(v1344);
      uint64_t v1349 = v1945 + 8;
      v1350 = *(void (**)(char *, uint64_t))(v1945 + 8);
      v1350(v1344, v1348);
      *(void *)&long long v2060 = v1350;
      uint64_t v1945 = v1349;
      uint64_t v1351 = (uint64_t)v1792;
      sub_24EC90894(v1347);
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1352 = swift_getOpaqueTypeConformance2();
      uint64_t v1353 = (uint64_t)v1887;
      sub_24EC908D0(v1351, v1348);
      v1350((char *)v1351, v1348);
      uint64_t v2285 = v1346;
      uint64_t v2286 = v1352;
      uint64_t v1354 = v2023;
      uint64_t v1355 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2283 = swift_getOpaqueTypeConformance2();
      uint64_t v2284 = v1352;
      uint64_t v1356 = swift_getWitnessTable();
      uint64_t v1357 = v1968;
      sub_24EC908D0(v1353, v1354);
      (*(void (**)(uint64_t, uint64_t))(v1888 + 8))(v1353, v1354);
      long long v2111 = v2017;
      uint64_t v1358 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1359 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1360 = swift_getOpaqueTypeConformance2();
      uint64_t v2281 = v1359;
      uint64_t v2282 = v1360;
      uint64_t v2280 = swift_getWitnessTable();
      uint64_t v2278 = swift_getWitnessTable();
      uint64_t v2279 = MEMORY[0x263F18C10];
      uint64_t v1361 = swift_getWitnessTable();
      uint64_t v1362 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2276 = v1361;
      uint64_t v2277 = v1362;
      uint64_t v1363 = swift_getWitnessTable();
      uint64_t v1364 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2274 = v1363;
      uint64_t v2275 = v1364;
      uint64_t v1365 = swift_getWitnessTable();
      uint64_t v2272 = v1358;
      uint64_t v2273 = v1365;
      uint64_t v1366 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1367 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1368 = swift_getOpaqueTypeConformance2();
      uint64_t v2270 = v1367;
      uint64_t v2271 = v1368;
      uint64_t v1369 = swift_getWitnessTable();
      uint64_t v2268 = v1366;
      uint64_t v2269 = v1369;
      uint64_t v1370 = v2018;
      uint64_t v1371 = swift_getWitnessTable();
      uint64_t v2266 = v1355;
      uint64_t v2267 = v1356;
      uint64_t v1372 = v2058;
      uint64_t v1373 = swift_getWitnessTable();
      uint64_t v1374 = v1983;
      sub_24EC909C8(v1357, v1370, v1372);
      (*(void (**)(uint64_t, uint64_t))(v1970 + 8))(v1357, v1372);
      uint64_t v2264 = v1371;
      uint64_t v2265 = v1373;
      uint64_t v1375 = v2056;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1376 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1377 = swift_getOpaqueTypeConformance2();
      uint64_t v2262 = v1376;
      uint64_t v2263 = v1377;
      uint64_t v1378 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1379 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1380 = swift_getOpaqueTypeConformance2();
      uint64_t v2260 = v1379;
      uint64_t v2261 = v1380;
      uint64_t v1381 = swift_getWitnessTable();
      uint64_t v2258 = v1378;
      uint64_t v2259 = v1381;
      uint64_t v1382 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2256 = swift_getOpaqueTypeConformance2();
      uint64_t v2257 = v2059;
      uint64_t v1383 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1384 = swift_getOpaqueTypeConformance2();
      uint64_t v2254 = v1383;
      uint64_t v2255 = v1384;
      uint64_t v1385 = swift_getWitnessTable();
      uint64_t v2252 = v1382;
      uint64_t v2253 = v1385;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC908D0(v1374, v1375);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1374, v1375);
      ((void (*)(char *, uint64_t))v2060)(v1879, v1952);
      sub_24EC88758(v1916, &qword_26B1DB9F0);
      sub_24EC88758(v1915, &qword_26B1DB9F0);
      sub_24EC88758(v1845, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1832;
      goto LABEL_118;
    case 5:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "artwork caption displayStyle layout title ");
      uint64_t v571 = v2014;
      *(void *)&long long v2111 = v2014;
      *((void *)&v2111 + 1) = v1990;
      *(void *)&long long v2112 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v2112 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v2113 = v1990;
      v572 = (int *)swift_getTupleTypeMetadata();
      uint64_t v573 = (uint64_t)&v465[v572[12]];
      unsigned __int8 v574 = v465[v572[16]];
      v575 = &v465[v572[20]];
      uint64_t v576 = *(void *)v575;
      uint64_t v577 = *((void *)v575 + 1);
      uint64_t v578 = (uint64_t)&v465[v572[24]];
      v579 = v1829;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1829, v465, v571);
      uint64_t v580 = v1838;
      sub_24ECB04CC(v573, v1838);
      sub_24ECB04CC(v578, v1911);
      sub_24EE559E0();
      v581 = (void (*)(char *))sub_24EE559D0();
      v581(v579);
      swift_release();
      uint64_t v582 = v1747;
      sub_24EC884D4(v580, v1747, &qword_26B1DB9F0);
      v583 = v2004;
      v584 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v585 = v2011;
      if (v584(v582, 1, v2011) == 1)
      {
        sub_24EC88758(v582, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        uint64_t v586 = 0;
        uint64_t v587 = 0;
        uint64_t v588 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v800 = v1999;
        uint64_t v801 = sub_24EE55860();
        MEMORY[0x270FA5388](v801);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v582;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v585 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v800, v2000);
        *(void *)&long long v2060 = v2111;
        uint64_t v587 = v2112;
        uint64_t v588 = *((void *)&v2112 + 1);
        uint64_t v586 = *((void *)&v2111 + 1);
        ((void (*)(uint64_t, uint64_t))v583[1])(v582, v585);
      }
      LOBYTE(v2532) = v574;
      *(void *)&long long v2096 = v576;
      *((void *)&v2096 + 1) = v577;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1985 + 16))(v1855, v1986, v1984);
      uint64_t v802 = v1751;
      sub_24EC884D4(v1911, v1751, &qword_26B1DB9F0);
      if (v584(v802, 1, v585) == 1)
      {
        sub_24EC88758(v802, &qword_26B1DB9F0);
        uint64_t v803 = 0;
        uint64_t v804 = 0;
        uint64_t v805 = 0;
        unint64_t v806 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v971 = v1999;
        uint64_t v972 = v802;
        uint64_t v973 = v585;
        uint64_t v974 = sub_24EE55860();
        MEMORY[0x270FA5388](v974);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v972;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v971, v2000);
        uint64_t v804 = *((void *)&v2111 + 1);
        uint64_t v803 = v2111;
        uint64_t v805 = v2112;
        unint64_t v806 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v972, v973);
      }
      *(void *)&v1714[104] = v2013;
      *(void *)&v1714[72] = v804;
      *(void *)&v1714[80] = v805;
      *(void *)&v1714[64] = v803;
      uint64_t v975 = v1790;
      __n128 v976 = sub_24ED7658C(v1839, v2060, v586, v587, v588, (char *)&v2532, (uint64_t *)&v2096, v1855, v1790, *(__n128 *)&v1714[64], *(unint64_t *)&v1714[80], v806, v2052);
      uint64_t v977 = (*((uint64_t (**)(uint64_t, __n128))v2055 + 23))(v2047, v976);
      uint64_t v978 = v1991;
      sub_24EDB5A5C(v977, v1991);
      swift_bridgeObjectRelease();
      v979 = v1789;
      uint64_t v980 = v2024;
      uint64_t v981 = v2026;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v978, v1992);
      (*(void (**)(uint64_t, uint64_t))(v1881 + 8))(v975, v980);
      *(void *)&long long v2111 = v980;
      *((void *)&v2111 + 1) = v981;
      uint64_t v982 = swift_getOpaqueTypeConformance2();
      v983 = v1880;
      uint64_t v984 = v1977;
      sub_24EC90894(v979);
      uint64_t v985 = v1976 + 8;
      v986 = *(void (**)(char *, uint64_t))(v1976 + 8);
      v986(v979, v984);
      *(void *)&long long v2060 = v986;
      uint64_t v1976 = v985;
      uint64_t v987 = (uint64_t)v1885;
      sub_24EC90894(v983);
      long long v2111 = v2022;
      uint64_t v988 = swift_getOpaqueTypeConformance2();
      uint64_t v989 = (uint64_t)v1887;
      sub_24EC909C8(v987, v1952, v984);
      v986((char *)v987, v984);
      uint64_t v2320 = v988;
      uint64_t v2321 = v982;
      uint64_t v990 = v2023;
      uint64_t v991 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2318 = swift_getOpaqueTypeConformance2();
      uint64_t v2319 = v982;
      uint64_t v992 = swift_getWitnessTable();
      uint64_t v993 = v1968;
      sub_24EC908D0(v989, v990);
      (*(void (**)(uint64_t, uint64_t))(v1888 + 8))(v989, v990);
      long long v2111 = v2017;
      uint64_t v994 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v995 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v996 = swift_getOpaqueTypeConformance2();
      uint64_t v2316 = v995;
      uint64_t v2317 = v996;
      uint64_t v2315 = swift_getWitnessTable();
      uint64_t v2313 = swift_getWitnessTable();
      uint64_t v2314 = MEMORY[0x263F18C10];
      uint64_t v997 = swift_getWitnessTable();
      uint64_t v998 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2311 = v997;
      uint64_t v2312 = v998;
      uint64_t v999 = swift_getWitnessTable();
      uint64_t v1000 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2309 = v999;
      uint64_t v2310 = v1000;
      uint64_t v1001 = swift_getWitnessTable();
      uint64_t v2307 = v994;
      uint64_t v2308 = v1001;
      uint64_t v1002 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1003 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1004 = swift_getOpaqueTypeConformance2();
      uint64_t v2305 = v1003;
      uint64_t v2306 = v1004;
      uint64_t v1005 = swift_getWitnessTable();
      uint64_t v2303 = v1002;
      uint64_t v2304 = v1005;
      uint64_t v1006 = v2018;
      uint64_t v1007 = swift_getWitnessTable();
      uint64_t v2301 = v991;
      uint64_t v2302 = v992;
      uint64_t v1008 = v2058;
      uint64_t v1009 = swift_getWitnessTable();
      uint64_t v1010 = v1983;
      sub_24EC909C8(v993, v1006, v1008);
      (*(void (**)(uint64_t, uint64_t))(v1970 + 8))(v993, v1008);
      uint64_t v2299 = v1007;
      uint64_t v2300 = v1009;
      uint64_t v1011 = v2056;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1012 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1013 = swift_getOpaqueTypeConformance2();
      uint64_t v2297 = v1012;
      uint64_t v2298 = v1013;
      uint64_t v1014 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1015 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1016 = swift_getOpaqueTypeConformance2();
      uint64_t v2295 = v1015;
      uint64_t v2296 = v1016;
      uint64_t v1017 = swift_getWitnessTable();
      uint64_t v2293 = v1014;
      uint64_t v2294 = v1017;
      uint64_t v1018 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2291 = swift_getOpaqueTypeConformance2();
      uint64_t v2292 = v2059;
      uint64_t v1019 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1020 = swift_getOpaqueTypeConformance2();
      uint64_t v2289 = v1019;
      uint64_t v2290 = v1020;
      uint64_t v1021 = swift_getWitnessTable();
      uint64_t v2287 = v1018;
      uint64_t v2288 = v1021;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC908D0(v1010, v1011);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1010, v1011);
      ((void (*)(char *, uint64_t))v2060)(v1880, v1977);
      sub_24EC88758(v1911, &qword_26B1DB9F0);
      sub_24EC88758(v1838, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1829;
      goto LABEL_118;
    case 6:
      long long v2060 = *(_OWORD *)v465;
      uint64_t v589 = *((void *)v465 + 2);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout artwork title subtitle ");
      *(void *)&long long v2111 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v590 = v2014;
      *((void *)&v2111 + 1) = v2014;
      *(void *)&long long v2112 = v1990;
      *((void *)&v2112 + 1) = v1990;
      v591 = (int *)swift_getTupleTypeMetadata();
      uint64_t v592 = (uint64_t)&v465[v591[16]];
      uint64_t v593 = (uint64_t)&v465[v591[20]];
      v594 = v1830;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1830, &v465[v591[12]], v590);
      uint64_t v595 = v1841;
      sub_24ECB04CC(v592, v1841);
      sub_24ECB04CC(v593, v1912);
      long long v2096 = v2060;
      *(void *)&long long v2097 = v589;
      sub_24EE559E0();
      v596 = (void (*)(char *))sub_24EE559D0();
      v596(v594);
      swift_release();
      uint64_t v597 = v1749;
      sub_24EC884D4(v595, v1749, &qword_26B1DB9F0);
      v598 = v2004;
      v599 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v600 = v2011;
      if (v599(v597, 1, v2011) == 1)
      {
        sub_24EC88758(v597, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        *(void *)&long long v2054 = 0;
        uint64_t v601 = 0;
        uint64_t v602 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v807 = v1999;
        uint64_t v808 = sub_24EE55860();
        MEMORY[0x270FA5388](v808);
        *(void *)&v1714[96] = v809;
        *(void *)&v1714[104] = v597;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v600 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v807, v2000);
        *(void *)&long long v2054 = *((void *)&v2111 + 1);
        *(void *)&long long v2060 = v2111;
        uint64_t v601 = v2112;
        uint64_t v602 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v598[1])(v597, v600);
      }
      uint64_t v810 = v1753;
      sub_24EC884D4(v1912, v1753, &qword_26B1DB9F0);
      if (v599(v810, 1, v600) == 1)
      {
        sub_24EC88758(v810, &qword_26B1DB9F0);
        uint64_t v811 = 0;
        uint64_t v812 = 0;
        uint64_t v813 = 0;
        uint64_t v814 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1022 = v1999;
        uint64_t v1023 = v600;
        uint64_t v1024 = sub_24EE55860();
        MEMORY[0x270FA5388](v1024);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v810;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1022, v2000);
        uint64_t v812 = *((void *)&v2111 + 1);
        uint64_t v811 = v2111;
        uint64_t v813 = v2112;
        uint64_t v814 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v810, v1023);
      }
      uint64_t v1025 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v2013;
      *(void *)&v1714[64] = v813;
      uint64_t v1026 = v1794;
      sub_24EC890B0((uint64_t)&v2096, v1837, v2060, v2054, v601, v602, v811, v812, v1794, *(uint64_t *)&v1714[64], v814, v1025, v2052);
      uint64_t v1027 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1028 = v1991;
      sub_24EDB5A5C(v1027, v1991);
      swift_bridgeObjectRelease();
      v1029 = v1795;
      uint64_t v1030 = v2025;
      uint64_t v1031 = v2028;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1028, v1992);
      (*(void (**)(uint64_t, uint64_t))(v1796 + 8))(v1026, v1030);
      *(void *)&long long v2111 = v1030;
      *((void *)&v2111 + 1) = v1031;
      uint64_t v1032 = swift_getOpaqueTypeConformance2();
      v1033 = v1886;
      uint64_t v1034 = v1954;
      sub_24EC90894(v1029);
      uint64_t v1035 = v1946 + 8;
      v1036 = *(void (**)(char *, uint64_t))(v1946 + 8);
      v1036(v1029, v1034);
      v1037 = (void (*)(uint64_t, uint64_t))v1036;
      *(void *)&long long v2060 = v1036;
      uint64_t v1946 = v1035;
      uint64_t v1038 = (uint64_t)v1797;
      sub_24EC90894(v1033);
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1039 = swift_getOpaqueTypeConformance2();
      uint64_t v1040 = (uint64_t)v1889;
      sub_24EC908D0(v1038, v1034);
      v1037(v1038, v1034);
      long long v2111 = v2022;
      uint64_t v2355 = swift_getOpaqueTypeConformance2();
      uint64_t v2356 = v1039;
      uint64_t v1041 = v2023;
      uint64_t v1042 = swift_getWitnessTable();
      uint64_t v2353 = v1032;
      uint64_t v2354 = v1039;
      uint64_t v1043 = v2027;
      uint64_t v1044 = swift_getWitnessTable();
      uint64_t v1045 = v1968;
      sub_24EC909C8(v1040, v1041, v1043);
      (*(void (**)(uint64_t, uint64_t))(v1890 + 8))(v1040, v1043);
      long long v2111 = v2017;
      uint64_t v1046 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1047 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1048 = swift_getOpaqueTypeConformance2();
      uint64_t v2351 = v1047;
      uint64_t v2352 = v1048;
      uint64_t v2350 = swift_getWitnessTable();
      uint64_t v2348 = swift_getWitnessTable();
      uint64_t v2349 = MEMORY[0x263F18C10];
      uint64_t v1049 = swift_getWitnessTable();
      uint64_t v1050 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2346 = v1049;
      uint64_t v2347 = v1050;
      uint64_t v1051 = swift_getWitnessTable();
      uint64_t v1052 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2344 = v1051;
      uint64_t v2345 = v1052;
      uint64_t v1053 = swift_getWitnessTable();
      uint64_t v2342 = v1046;
      uint64_t v2343 = v1053;
      uint64_t v1054 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1055 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1056 = swift_getOpaqueTypeConformance2();
      uint64_t v2340 = v1055;
      uint64_t v2341 = v1056;
      uint64_t v1057 = swift_getWitnessTable();
      uint64_t v2338 = v1054;
      uint64_t v2339 = v1057;
      uint64_t v1058 = v2018;
      uint64_t v1059 = swift_getWitnessTable();
      uint64_t v2336 = v1042;
      uint64_t v2337 = v1044;
      uint64_t v1060 = v2058;
      uint64_t v1061 = swift_getWitnessTable();
      uint64_t v1062 = v1983;
      sub_24EC909C8(v1045, v1058, v1060);
      (*(void (**)(uint64_t, uint64_t))(v1970 + 8))(v1045, v1060);
      uint64_t v2334 = v1059;
      uint64_t v2335 = v1061;
      uint64_t v1063 = v2056;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1064 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1065 = swift_getOpaqueTypeConformance2();
      uint64_t v2332 = v1064;
      uint64_t v2333 = v1065;
      uint64_t v1066 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1067 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1068 = swift_getOpaqueTypeConformance2();
      uint64_t v2330 = v1067;
      uint64_t v2331 = v1068;
      uint64_t v1069 = swift_getWitnessTable();
      uint64_t v2328 = v1066;
      uint64_t v2329 = v1069;
      uint64_t v1070 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2326 = swift_getOpaqueTypeConformance2();
      uint64_t v2327 = v2059;
      uint64_t v1071 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1072 = swift_getOpaqueTypeConformance2();
      uint64_t v2324 = v1071;
      uint64_t v2325 = v1072;
      uint64_t v1073 = swift_getWitnessTable();
      uint64_t v2322 = v1070;
      uint64_t v2323 = v1073;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC908D0(v1062, v1063);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1062, v1063);
      ((void (*)(char *, uint64_t))v2060)(v1886, v1954);
      sub_24EC88758(v1912, &qword_26B1DB9F0);
      sub_24EC88758(v1841, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1830;
      goto LABEL_118;
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "artwork caption displayStyle layout title ");
      uint64_t v603 = v2014;
      *(void *)&long long v2111 = v2014;
      *((void *)&v2111 + 1) = v1990;
      *(void *)&long long v2112 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v2112 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v2113 = v1990;
      v604 = (int *)swift_getTupleTypeMetadata();
      uint64_t v605 = (uint64_t)&v465[v604[12]];
      unsigned __int8 v606 = v465[v604[16]];
      v607 = &v465[v604[20]];
      uint64_t v608 = *(void *)v607;
      uint64_t v609 = *((void *)v607 + 1);
      uint64_t v610 = (uint64_t)&v465[v604[24]];
      v611 = v1831;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1831, v465, v603);
      uint64_t v612 = v1844;
      sub_24ECB04CC(v605, v1844);
      sub_24ECB04CC(v610, v1913);
      sub_24EE559E0();
      v613 = (void (*)(char *))sub_24EE559D0();
      v613(v611);
      swift_release();
      uint64_t v614 = v1750;
      sub_24EC884D4(v612, v1750, &qword_26B1DB9F0);
      v615 = v2004;
      v616 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v617 = v2011;
      if (v616(v614, 1, v2011) == 1)
      {
        sub_24EC88758(v614, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        uint64_t v618 = 0;
        uint64_t v619 = 0;
        uint64_t v620 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v815 = v1999;
        uint64_t v816 = sub_24EE55860();
        MEMORY[0x270FA5388](v816);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v614;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v617 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v815, v2000);
        *(void *)&long long v2060 = v2111;
        uint64_t v619 = v2112;
        uint64_t v620 = *((void *)&v2112 + 1);
        uint64_t v618 = *((void *)&v2111 + 1);
        ((void (*)(uint64_t, uint64_t))v615[1])(v614, v617);
      }
      LOBYTE(v2532) = v606;
      *(void *)&long long v2096 = v608;
      *((void *)&v2096 + 1) = v609;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1985 + 16))(v1856, v1986, v1984);
      uint64_t v817 = v1754;
      sub_24EC884D4(v1913, v1754, &qword_26B1DB9F0);
      if (v616(v817, 1, v617) == 1)
      {
        sub_24EC88758(v817, &qword_26B1DB9F0);
        uint64_t v818 = 0;
        uint64_t v819 = 0;
        uint64_t v820 = 0;
        unint64_t v821 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1074 = v1999;
        uint64_t v1075 = v817;
        uint64_t v1076 = v617;
        uint64_t v1077 = sub_24EE55860();
        MEMORY[0x270FA5388](v1077);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v1075;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1074, v2000);
        uint64_t v819 = *((void *)&v2111 + 1);
        uint64_t v818 = v2111;
        uint64_t v820 = v2112;
        unint64_t v821 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v1075, v1076);
      }
      *(void *)&v1714[104] = v2013;
      *(void *)&v1714[72] = v819;
      *(void *)&v1714[80] = v820;
      *(void *)&v1714[64] = v818;
      uint64_t v1078 = v1791;
      __n128 v1079 = sub_24ED7658C(v1840, v2060, v618, v619, v620, (char *)&v2532, (uint64_t *)&v2096, v1856, v1791, *(__n128 *)&v1714[64], *(unint64_t *)&v1714[80], v821, v2052);
      uint64_t v1080 = (*((uint64_t (**)(uint64_t, __n128))v2055 + 23))(v2047, v1079);
      uint64_t v1081 = v1991;
      sub_24EDB5A5C(v1080, v1991);
      swift_bridgeObjectRelease();
      v1082 = v1793;
      uint64_t v1083 = v2024;
      uint64_t v1084 = v2026;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1081, v1992);
      (*(void (**)(uint64_t, uint64_t))(v1881 + 8))(v1078, v1083);
      *(void *)&long long v2111 = v1083;
      *((void *)&v2111 + 1) = v1084;
      uint64_t v1085 = swift_getOpaqueTypeConformance2();
      v1086 = v1882;
      uint64_t v1087 = v1977;
      sub_24EC90894(v1082);
      uint64_t v1089 = v1976 + 8;
      v1088 = *(void (**)(char *, uint64_t))(v1976 + 8);
      v1088(v1082, v1087);
      v1090 = (void (*)(uint64_t, uint64_t))v1088;
      *(void *)&long long v2060 = v1088;
      uint64_t v1976 = v1089;
      uint64_t v1091 = (uint64_t)v1885;
      sub_24EC90894(v1086);
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v1092 = swift_getOpaqueTypeConformance2();
      uint64_t v1093 = (uint64_t)v1889;
      sub_24EC909C8(v1091, v1954, v1087);
      v1090(v1091, v1087);
      long long v2111 = v2022;
      uint64_t v2390 = swift_getOpaqueTypeConformance2();
      uint64_t v2391 = v1085;
      uint64_t v1094 = v2023;
      uint64_t v1095 = swift_getWitnessTable();
      uint64_t v2388 = v1092;
      uint64_t v2389 = v1085;
      uint64_t v1096 = v2027;
      uint64_t v1097 = swift_getWitnessTable();
      uint64_t v1098 = v1968;
      sub_24EC909C8(v1093, v1094, v1096);
      (*(void (**)(uint64_t, uint64_t))(v1890 + 8))(v1093, v1096);
      long long v2111 = v2017;
      uint64_t v1099 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1100 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1101 = swift_getOpaqueTypeConformance2();
      uint64_t v2386 = v1100;
      uint64_t v2387 = v1101;
      uint64_t v2385 = swift_getWitnessTable();
      uint64_t v2383 = swift_getWitnessTable();
      uint64_t v2384 = MEMORY[0x263F18C10];
      uint64_t v1102 = swift_getWitnessTable();
      uint64_t v1103 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2381 = v1102;
      uint64_t v2382 = v1103;
      uint64_t v1104 = swift_getWitnessTable();
      uint64_t v1105 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2379 = v1104;
      uint64_t v2380 = v1105;
      uint64_t v1106 = swift_getWitnessTable();
      uint64_t v2377 = v1099;
      uint64_t v2378 = v1106;
      uint64_t v1107 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1108 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1109 = swift_getOpaqueTypeConformance2();
      uint64_t v2375 = v1108;
      uint64_t v2376 = v1109;
      uint64_t v1110 = swift_getWitnessTable();
      uint64_t v2373 = v1107;
      uint64_t v2374 = v1110;
      uint64_t v1111 = v2018;
      uint64_t v1112 = swift_getWitnessTable();
      uint64_t v2371 = v1095;
      uint64_t v2372 = v1097;
      uint64_t v1113 = v2058;
      uint64_t v1114 = swift_getWitnessTable();
      uint64_t v1115 = v1983;
      sub_24EC909C8(v1098, v1111, v1113);
      (*(void (**)(uint64_t, uint64_t))(v1970 + 8))(v1098, v1113);
      uint64_t v2369 = v1112;
      uint64_t v2370 = v1114;
      uint64_t v1116 = v2056;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      long long v2111 = v2029;
      uint64_t v1117 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1118 = swift_getOpaqueTypeConformance2();
      uint64_t v2367 = v1117;
      uint64_t v2368 = v1118;
      uint64_t v1119 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1120 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1121 = swift_getOpaqueTypeConformance2();
      uint64_t v2365 = v1120;
      uint64_t v2366 = v1121;
      uint64_t v1122 = swift_getWitnessTable();
      uint64_t v2363 = v1119;
      uint64_t v2364 = v1122;
      uint64_t v1123 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2361 = swift_getOpaqueTypeConformance2();
      uint64_t v2362 = v2059;
      uint64_t v1124 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1125 = swift_getOpaqueTypeConformance2();
      uint64_t v2359 = v1124;
      uint64_t v2360 = v1125;
      uint64_t v1126 = swift_getWitnessTable();
      uint64_t v2357 = v1123;
      uint64_t v2358 = v1126;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC908D0(v1115, v1116);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1115, v1116);
      ((void (*)(char *, uint64_t))v2060)(v1882, v1977);
      sub_24EC88758(v1913, &qword_26B1DB9F0);
      sub_24EC88758(v1844, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1831;
      goto LABEL_118;
    case 8:
      long long v2060 = *(_OWORD *)v465;
      uint64_t v621 = *((void *)v465 + 2);
      uint64_t v622 = *((void *)v465 + 3);
      long long v2054 = *((_OWORD *)v465 + 2);
      uint64_t v623 = *((void *)v465 + 6);
      long long v2053 = *(_OWORD *)(v465 + 56);
      long long v2009 = *(_OWORD *)(v465 + 72);
      uint64_t v624 = *((void *)v465 + 11);
      uint64_t v625 = *((void *)v465 + 12);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout artwork title subtitle caption ");
      *(void *)&long long v2111 = &type metadata for StandardCardViewLayout;
      uint64_t v626 = v2014;
      *((void *)&v2111 + 1) = v2014;
      *(void *)&long long v2112 = v1990;
      *((void *)&v2112 + 1) = v1990;
      *(void *)&long long v2113 = v1990;
      v627 = (int *)swift_getTupleTypeMetadata();
      uint64_t v628 = (uint64_t)&v465[v627[16]];
      uint64_t v629 = (uint64_t)&v465[v627[20]];
      uint64_t v630 = (uint64_t)&v465[v627[24]];
      v631 = v1833;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1833, &v465[v627[12]], v626);
      uint64_t v632 = v1853;
      sub_24ECB04CC(v628, v1853);
      sub_24ECB04CC(v629, v1922);
      sub_24ECB04CC(v630, v1923);
      uint64_t v633 = v2052;
      sub_24EE559E0();
      v634 = (void (*)(char *))sub_24EE559D0();
      v635 = v1865;
      v634(v631);
      swift_release();
      long long v2111 = v2060;
      *(void *)&long long v2112 = v621;
      *((void *)&v2112 + 1) = v622;
      long long v2113 = v2054;
      *(void *)&v2114[0] = v623;
      *(_OWORD *)((char *)v2114 + 8) = v2053;
      *(_OWORD *)((char *)&v2114[1] + 8) = v2009;
      *((void *)&v2114[2] + 1) = v624;
      *(void *)&long long v2115 = v625;
      (*(void (**)(uint64_t, char *, uint64_t))(v1987 + 16))(v1849, v635, v633);
      uint64_t v636 = v1752;
      sub_24EC884D4(v632, v1752, &qword_26B1DB9F0);
      v637 = v2004;
      v638 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v639 = v2011;
      if (v638(v636, 1, v2011) == 1)
      {
        sub_24EC88758(v636, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        *(void *)&long long v2054 = 0;
        *(void *)&long long v2053 = 0;
        *(void *)&long long v2009 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v822 = v1999;
        uint64_t v823 = sub_24EE55860();
        MEMORY[0x270FA5388](v823);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v636;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v639 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v822, v2000);
        *(void *)&long long v2054 = *((void *)&v2096 + 1);
        *(void *)&long long v2060 = v2096;
        *(void *)&long long v2053 = v2097;
        *(void *)&long long v2009 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v637[1])(v636, v639);
      }
      uint64_t v824 = v1739;
      sub_24EC884D4(v1922, v1739, &qword_26B1DB9F0);
      if (v638(v824, 1, v639) == 1)
      {
        sub_24EC88758(v824, &qword_26B1DB9F0);
        *((void *)&v2007 + 1) = 0;
        uint64_t v825 = 0;
        uint64_t v826 = 0;
        uint64_t v827 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1127 = v1999;
        uint64_t v1128 = sub_24EE55860();
        MEMORY[0x270FA5388](v1128);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v824;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v639 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1127, v2000);
        uint64_t v825 = *((void *)&v2096 + 1);
        *((void *)&v2007 + 1) = v2096;
        uint64_t v826 = v2097;
        uint64_t v827 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v824, v639);
      }
      uint64_t v1129 = v1761;
      sub_24EC884D4(v1923, v1761, &qword_26B1DB9F0);
      if (v638(v1129, 1, v639) == 1)
      {
        sub_24EC88758(v1129, &qword_26B1DB9F0);
        uint64_t v1130 = 0;
        uint64_t v1131 = 0;
        uint64_t v1132 = 0;
        uint64_t v1133 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1386 = v1999;
        uint64_t v1387 = v639;
        uint64_t v1388 = sub_24EE55860();
        MEMORY[0x270FA5388](v1388);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v1129;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1386, v2000);
        uint64_t v1131 = *((void *)&v2096 + 1);
        uint64_t v1130 = v2096;
        uint64_t v1132 = v2097;
        uint64_t v1133 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v1129, v1387);
      }
      v1389 = v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v2013;
      *(void *)&v1714[80] = v1389;
      *(void *)&v1714[48] = v1130;
      *(void *)&v1714[56] = v1131;
      v1390 = v1798;
      sub_24EE1E068(&v2111, v1849, v2060, v2054, v2053, v2009, *((uint64_t *)&v2007 + 1), v825, v1798, v826, v827, *(long long *)&v1714[48], v1132, v1133, *(uint64_t *)&v1714[80], v2052);
      uint64_t v1391 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1392 = v1991;
      sub_24EDB5A5C(v1391, v1991);
      swift_bridgeObjectRelease();
      v1393 = v1799;
      long long v1394 = v2029;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1392, v1992);
      (*(void (**)(uint64_t *, void))(v1800 + 8))(v1390, v1394);
      long long v2111 = v1394;
      uint64_t v1395 = swift_getOpaqueTypeConformance2();
      v1396 = v1891;
      uint64_t v1397 = v1962;
      sub_24EC90894(v1393);
      uint64_t v1398 = v1948 + 8;
      v1399 = *(void (**)(char *, uint64_t))(v1948 + 8);
      v1399(v1393, v1397);
      v1400 = (void (*)(uint64_t, uint64_t))v1399;
      *(void *)&long long v2060 = v1399;
      uint64_t v1948 = v1398;
      uint64_t v1401 = (uint64_t)v1801;
      v1402 = v1396;
      uint64_t v1403 = v1397;
      sub_24EC90894(v1402);
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1404 = swift_getOpaqueTypeConformance2();
      uint64_t v1405 = (uint64_t)v1907;
      sub_24EC908D0(v1401, v1403);
      v1400(v1401, v1403);
      uint64_t v2425 = v1395;
      uint64_t v2426 = v1404;
      uint64_t v1406 = v2030;
      uint64_t v1407 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1408 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1409 = swift_getOpaqueTypeConformance2();
      uint64_t v2423 = v1408;
      uint64_t v2424 = v1409;
      uint64_t v1410 = swift_getWitnessTable();
      uint64_t v1411 = (uint64_t)v1972;
      sub_24EC908D0(v1405, v1406);
      (*(void (**)(uint64_t, uint64_t))(v1908 + 8))(v1405, v1406);
      uint64_t v2421 = v1407;
      uint64_t v2422 = v1410;
      uint64_t v1412 = v2031;
      uint64_t v1413 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2419 = swift_getOpaqueTypeConformance2();
      uint64_t v2420 = v2059;
      uint64_t v1414 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1415 = swift_getOpaqueTypeConformance2();
      uint64_t v2417 = v1414;
      uint64_t v2418 = v1415;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v1416 = v1978;
      sub_24EC908D0(v1411, v1412);
      (*(void (**)(uint64_t, uint64_t))(v1973 + 8))(v1411, v1412);
      long long v2111 = v2017;
      uint64_t v1417 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1418 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1419 = swift_getOpaqueTypeConformance2();
      uint64_t v2415 = v1418;
      uint64_t v2416 = v1419;
      uint64_t v2414 = swift_getWitnessTable();
      uint64_t v2412 = swift_getWitnessTable();
      uint64_t v2413 = MEMORY[0x263F18C10];
      uint64_t v1420 = swift_getWitnessTable();
      uint64_t v1421 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2410 = v1420;
      uint64_t v2411 = v1421;
      uint64_t v1422 = swift_getWitnessTable();
      uint64_t v1423 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2408 = v1422;
      uint64_t v2409 = v1423;
      uint64_t v1424 = swift_getWitnessTable();
      uint64_t v2406 = v1417;
      uint64_t v2407 = v1424;
      uint64_t v1425 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1426 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1427 = swift_getOpaqueTypeConformance2();
      uint64_t v2404 = v1426;
      uint64_t v2405 = v1427;
      uint64_t v1428 = swift_getWitnessTable();
      uint64_t v2402 = v1425;
      uint64_t v2403 = v1428;
      uint64_t v1429 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v1430 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1431 = swift_getOpaqueTypeConformance2();
      uint64_t v2400 = v1430;
      uint64_t v2401 = v1431;
      uint64_t v1432 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2398 = swift_getOpaqueTypeConformance2();
      uint64_t v2399 = v1431;
      uint64_t v1433 = swift_getWitnessTable();
      uint64_t v2396 = v1432;
      uint64_t v2397 = v1433;
      uint64_t v1434 = swift_getWitnessTable();
      uint64_t v2394 = v1429;
      uint64_t v2395 = v1434;
      uint64_t v1435 = v2056;
      swift_getWitnessTable();
      uint64_t v2392 = v1413;
      uint64_t v2393 = (uint64_t)v2055;
      uint64_t v1436 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v1416, v1435, v1436);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v1416, v1436);
      ((void (*)(char *, uint64_t))v2060)(v1891, v1962);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1865, v2052);
      sub_24EC88758(v1923, &qword_26B1DB9F0);
      sub_24EC88758(v1922, &qword_26B1DB9F0);
      sub_24EC88758(v1853, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1833;
      goto LABEL_118;
    case 9:
      long long v640 = *((_OWORD *)v465 + 7);
      long long v2115 = *((_OWORD *)v465 + 6);
      long long v2116 = v640;
      long long v641 = *((_OWORD *)v465 + 9);
      long long v2117 = *((_OWORD *)v465 + 8);
      long long v2118 = v641;
      long long v642 = *((_OWORD *)v465 + 3);
      long long v2113 = *((_OWORD *)v465 + 2);
      v2114[0] = v642;
      long long v643 = *((_OWORD *)v465 + 5);
      v2114[1] = *((_OWORD *)v465 + 4);
      v2114[2] = v643;
      long long v644 = *((_OWORD *)v465 + 1);
      long long v2111 = *(_OWORD *)v465;
      long long v2112 = v644;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[32], "layout artwork title subtitle caption groupTitle accessoryView ");
      *(void *)&long long v2096 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v645 = v2014;
      *((void *)&v2096 + 1) = v2014;
      *(void *)&long long v2097 = v1990;
      *((void *)&v2097 + 1) = v1990;
      unsigned long long v647 = v1990;
      uint64_t v646 = v647 >> 64;
      *(void *)v2098 = v647;
      *(_OWORD *)&v2098[8] = v1990;
      v648 = (int *)swift_getTupleTypeMetadata();
      uint64_t v649 = (uint64_t)&v465[v648[16]];
      uint64_t v650 = (uint64_t)&v465[v648[20]];
      uint64_t v651 = (uint64_t)&v465[v648[24]];
      uint64_t v652 = (uint64_t)&v465[v648[28]];
      v653 = &v465[v648[32]];
      v654 = v1847;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1847, &v465[v648[12]], v645);
      uint64_t v655 = v1864;
      sub_24ECB04CC(v649, v1864);
      sub_24ECB04CC(v650, v1930);
      sub_24ECB04CC(v651, v1931);
      sub_24ECB04CC(v652, v1932);
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v1982 + 32))(v1938, v653, v646);
      uint64_t v656 = v2052;
      sub_24EE559E0();
      v657 = (void (*)(char *))sub_24EE559D0();
      v658 = v1869;
      v657(v654);
      swift_release();
      long long v2101 = v2115;
      long long v2102 = v2116;
      long long v2103 = v2117;
      long long v2104 = v2118;
      *(_OWORD *)v2098 = v2113;
      *(_OWORD *)&v2098[16] = v2114[0];
      long long v2099 = v2114[1];
      long long v2100 = v2114[2];
      long long v2096 = v2111;
      long long v2097 = v2112;
      (*(void (**)(uint64_t, char *, uint64_t))(v1987 + 16))(v1860, v658, v656);
      uint64_t v659 = v1756;
      sub_24EC884D4(v655, v1756, &qword_26B1DB9F0);
      v660 = v2004;
      v661 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v662 = v2011;
      if (v661(v659, 1, v2011) == 1)
      {
        sub_24EC88758(v659, &qword_26B1DB9F0);
        *(void *)&long long v2053 = 0;
        *(void *)&long long v1990 = 0;
        uint64_t v1988 = 0;
        uint64_t v1983 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v828 = v1999;
        uint64_t v829 = sub_24EE55860();
        MEMORY[0x270FA5388](v829);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v659;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v662 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v828, v2000);
        *(void *)&long long v1990 = *((void *)&v2532 + 1);
        *(void *)&long long v2053 = v2532;
        uint64_t v1988 = v2533;
        uint64_t v1983 = v2534;
        ((void (*)(uint64_t, uint64_t))v660[1])(v659, v662);
      }
      uint64_t v830 = (uint64_t)v1744;
      uint64_t v831 = v1740;
      sub_24EC884D4(v1930, v1740, &qword_26B1DB9F0);
      if (v661(v831, 1, v662) == 1)
      {
        sub_24EC88758(v831, &qword_26B1DB9F0);
        uint64_t v1989 = 0;
        uint64_t v1980 = 0;
        uint64_t v1977 = 0;
        uint64_t v1976 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1134 = v1999;
        uint64_t v1135 = sub_24EE55860();
        MEMORY[0x270FA5388](v1135);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v831;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v662 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1134, v2000);
        uint64_t v1980 = *((void *)&v2532 + 1);
        uint64_t v1989 = v2532;
        uint64_t v1977 = v2533;
        uint64_t v1976 = v2534;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v831, v662);
      }
      uint64_t v1136 = v1743;
      sub_24EC884D4(v1931, v1743, &qword_26B1DB9F0);
      if (v661(v1136, 1, v662) == 1)
      {
        sub_24EC88758(v1136, &qword_26B1DB9F0);
        uint64_t v1970 = 0;
        uint64_t v1969 = 0;
        uint64_t v1968 = 0;
        uint64_t v1967 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1437 = v1999;
        uint64_t v1438 = sub_24EE55860();
        MEMORY[0x270FA5388](v1438);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v1136;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v662 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1437, v2000);
        uint64_t v1969 = *((void *)&v2532 + 1);
        uint64_t v1970 = v2532;
        uint64_t v1968 = v2533;
        uint64_t v1967 = v2534;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v1136, v662);
      }
      sub_24EC884D4(v1932, v830, &qword_26B1DB9F0);
      if (v661(v830, 1, v662) == 1)
      {
        sub_24EC88758(v830, &qword_26B1DB9F0);
        uint64_t v2011 = 0;
        uint64_t v2001 = 0;
        uint64_t v2000 = 0;
        uint64_t v1999 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1542 = v1999;
        uint64_t v1543 = sub_24EE55860();
        MEMORY[0x270FA5388](v1543);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v830;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1542, v2000);
        uint64_t v2001 = *((void *)&v2532 + 1);
        uint64_t v2011 = v2532;
        uint64_t v2000 = v2533;
        uint64_t v1999 = v2534;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v830, v662);
      }
      uint64_t v1544 = v2060;
      uint64_t v1545 = v2054;
      sub_24EE559E0();
      uint64_t v1546 = sub_24EE559D0();
      uint64_t v1548 = v1547;
      v2004 = &v1715;
      MEMORY[0x270FA5388](v1546);
      uint64_t v1549 = v2047;
      uint64_t v1550 = v2052;
      uint64_t v1551 = (uint64_t)v2055;
      v1714[39] = HIBYTE(v1544);
      *(void *)&v1714[40] = v2055;
      uint64_t v1552 = v2013;
      *(void *)&v1714[48] = v2003;
      *(void *)&v1714[56] = v2013;
      *(_OWORD *)&v1714[64] = v2007;
      uint64_t v1553 = v2059;
      *(void *)&v1714[80] = v2059;
      *(void *)&v1714[88] = v1545;
      *(void *)&v1714[96] = v1554;
      *(void *)&v1714[104] = v1548;
      uint64_t v1555 = v1974;
      sub_24EC96D54((void (*)(char *))sub_24ECB0550, v1938, v1544, v1975, v1974);
      swift_release();
      uint64_t v1556 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v1552;
      *(void *)&v1714[104] = v1545;
      *(void *)&v1714[88] = v1544;
      *(void *)&v1714[64] = v1555;
      *(void *)&v1714[40] = v2001;
      *(void *)&v1714[32] = v2011;
      *(void *)&v1714[8] = v1969;
      *(void *)v1714 = v1970;
      v1557 = v1814;
      sub_24ED607D8(&v2096, v1860, v2053, v1990, v1988, v1983, v1989, v1980, v1814, v1977, v1976, *(long long *)v1714, v1968, v1967, *(long long *)&v1714[32], v2000, v1999, *(uint64_t *)&v1714[64], v1556,
        v1550);
      uint64_t v1558 = (*(uint64_t (**)(uint64_t, uint64_t))(v1551 + 184))(v1549, v1551);
      uint64_t v1559 = v1991;
      sub_24EDB5A5C(v1558, v1991);
      swift_bridgeObjectRelease();
      v1560 = v1813;
      uint64_t v1561 = v2033;
      uint64_t v1562 = v2032;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1559, v1992);
      (*(void (**)(uint64_t *, uint64_t))(v1815 + 8))(v1557, v1561);
      *(void *)&long long v2096 = v1561;
      *((void *)&v2096 + 1) = v1562;
      uint64_t v1563 = swift_getOpaqueTypeConformance2();
      v1564 = v1902;
      uint64_t v1565 = v1964;
      sub_24EC90894(v1560);
      uint64_t v1566 = v1956 + 8;
      v1567 = *(void (**)(char *, uint64_t))(v1956 + 8);
      v1567(v1560, v1565);
      v1568 = (void (*)(uint64_t, uint64_t))v1567;
      *(void *)&long long v2060 = v1567;
      uint64_t v1956 = v1566;
      uint64_t v1569 = (uint64_t)v1816;
      v1570 = v1564;
      uint64_t v1571 = v1565;
      sub_24EC90894(v1570);
      long long v2096 = v2029;
      uint64_t v1572 = swift_getOpaqueTypeConformance2();
      uint64_t v1573 = (uint64_t)v1907;
      sub_24EC909C8(v1569, v1962, v1571);
      v1568(v1569, v1571);
      uint64_t v2460 = v1572;
      uint64_t v2461 = v1563;
      uint64_t v1574 = v2030;
      uint64_t v1575 = swift_getWitnessTable();
      long long v2096 = v2034;
      uint64_t v1576 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2037;
      *((void *)&v2096 + 1) = v2036;
      uint64_t v1577 = swift_getOpaqueTypeConformance2();
      uint64_t v2458 = v1576;
      uint64_t v2459 = v1577;
      uint64_t v1578 = swift_getWitnessTable();
      uint64_t v1579 = (uint64_t)v1972;
      sub_24EC908D0(v1573, v1574);
      (*(void (**)(uint64_t, uint64_t))(v1908 + 8))(v1573, v1574);
      uint64_t v2456 = v1575;
      uint64_t v2457 = v1578;
      uint64_t v1580 = v2031;
      uint64_t v1581 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2038;
      *((void *)&v2096 + 1) = v2040;
      uint64_t v2454 = swift_getOpaqueTypeConformance2();
      uint64_t v2455 = v1553;
      uint64_t v1582 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2042;
      *((void *)&v2096 + 1) = v2041;
      uint64_t v1583 = swift_getOpaqueTypeConformance2();
      uint64_t v2452 = v1582;
      uint64_t v2453 = v1583;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v1584 = v1978;
      uint64_t v1585 = v1581;
      sub_24EC908D0(v1579, v1580);
      (*(void (**)(uint64_t, uint64_t))(v1973 + 8))(v1579, v1580);
      long long v2096 = v2017;
      uint64_t v1586 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2045;
      *((void *)&v2096 + 1) = v2051;
      uint64_t v1587 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2048;
      *((void *)&v2096 + 1) = v2046;
      uint64_t v1588 = swift_getOpaqueTypeConformance2();
      uint64_t v2450 = v1587;
      uint64_t v2451 = v1588;
      uint64_t v2449 = swift_getWitnessTable();
      uint64_t v2447 = swift_getWitnessTable();
      uint64_t v2448 = MEMORY[0x263F18C10];
      uint64_t v1589 = swift_getWitnessTable();
      uint64_t v1590 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2445 = v1589;
      uint64_t v2446 = v1590;
      uint64_t v1591 = swift_getWitnessTable();
      uint64_t v1592 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2443 = v1591;
      uint64_t v2444 = v1592;
      uint64_t v1593 = swift_getWitnessTable();
      uint64_t v2441 = v1586;
      uint64_t v2442 = v1593;
      uint64_t v1594 = swift_getWitnessTable();
      long long v2096 = v2019;
      uint64_t v1595 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2021;
      *((void *)&v2096 + 1) = v2020;
      uint64_t v1596 = swift_getOpaqueTypeConformance2();
      uint64_t v2439 = v1595;
      uint64_t v2440 = v1596;
      uint64_t v1597 = swift_getWitnessTable();
      uint64_t v2437 = v1594;
      uint64_t v2438 = v1597;
      uint64_t v1598 = swift_getWitnessTable();
      long long v2096 = v2022;
      uint64_t v1599 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2024;
      *((void *)&v2096 + 1) = v2026;
      uint64_t v1600 = swift_getOpaqueTypeConformance2();
      uint64_t v2435 = v1599;
      uint64_t v2436 = v1600;
      uint64_t v1601 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2025;
      *((void *)&v2096 + 1) = v2028;
      uint64_t v2433 = swift_getOpaqueTypeConformance2();
      uint64_t v2434 = v1600;
      uint64_t v1602 = swift_getWitnessTable();
      uint64_t v2431 = v1601;
      uint64_t v2432 = v1602;
      uint64_t v1603 = swift_getWitnessTable();
      uint64_t v2429 = v1598;
      uint64_t v2430 = v1603;
      uint64_t v1604 = v2056;
      swift_getWitnessTable();
      uint64_t v2427 = v1585;
      uint64_t v2428 = (uint64_t)v2055;
      uint64_t v1605 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v1584, v1604, v1605);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v1584, v1605);
      ((void (*)(char *, uint64_t))v2060)(v1902, v1964);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1869, v2052);
      (*(void (**)(uint64_t, void))(v1982 + 8))(v1938, *((void *)&v1990 + 1));
      sub_24EC88758(v1932, &qword_26B1DB9F0);
      sub_24EC88758(v1931, &qword_26B1DB9F0);
      sub_24EC88758(v1930, &qword_26B1DB9F0);
      sub_24EC88758(v1864, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1847;
      goto LABEL_118;
    case 10:
      LODWORD(v2060) = *v465;
      uint64_t v663 = *((void *)v465 + 1);
      uint64_t v664 = *((void *)v465 + 2);
      uint64_t v665 = *((void *)v465 + 3);
      unsigned __int8 v666 = v465[32];
      uint64_t v667 = *((void *)v465 + 5);
      uint64_t v668 = *((void *)v465 + 6);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout artwork title subtitle caption ");
      *(void *)&long long v2111 = &type metadata for StandardVerticalStackViewLayout;
      uint64_t v669 = v2014;
      *((void *)&v2111 + 1) = v2014;
      *(void *)&long long v2112 = v1990;
      *((void *)&v2112 + 1) = v1990;
      *(void *)&long long v2113 = v1990;
      v670 = (int *)swift_getTupleTypeMetadata();
      uint64_t v671 = (uint64_t)&v465[v670[16]];
      uint64_t v672 = (uint64_t)&v465[v670[20]];
      uint64_t v673 = (uint64_t)&v465[v670[24]];
      v674 = v1834;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1834, &v465[v670[12]], v669);
      uint64_t v675 = v1859;
      sub_24ECB04CC(v671, v1859);
      sub_24ECB04CC(v672, v1925);
      sub_24ECB04CC(v673, v1926);
      uint64_t v676 = v2052;
      sub_24EE559E0();
      v677 = (void (*)(char *))sub_24EE559D0();
      v678 = v1866;
      v677(v674);
      swift_release();
      LOBYTE(v2111) = v2060;
      *((void *)&v2111 + 1) = v663;
      *(void *)&long long v2112 = v664;
      *((void *)&v2112 + 1) = v665;
      LOBYTE(v2113) = v666;
      *((void *)&v2113 + 1) = v667;
      *(void *)&v2114[0] = v668;
      (*(void (**)(uint64_t, char *, uint64_t))(v1987 + 16))(v1850, v678, v676);
      uint64_t v679 = v1757;
      sub_24EC884D4(v675, v1757, &qword_26B1DB9F0);
      v680 = v2004;
      v681 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v682 = v2011;
      if (v681(v679, 1, v2011) == 1)
      {
        sub_24EC88758(v679, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        *(void *)&long long v2054 = 0;
        *(void *)&long long v2053 = 0;
        *(void *)&long long v2009 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v832 = v1999;
        uint64_t v833 = sub_24EE55860();
        MEMORY[0x270FA5388](v833);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v679;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v682 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v832, v2000);
        *(void *)&long long v2054 = *((void *)&v2096 + 1);
        *(void *)&long long v2060 = v2096;
        *(void *)&long long v2053 = v2097;
        *(void *)&long long v2009 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v680[1])(v679, v682);
      }
      uint64_t v834 = v1741;
      sub_24EC884D4(v1925, v1741, &qword_26B1DB9F0);
      if (v681(v834, 1, v682) == 1)
      {
        sub_24EC88758(v834, &qword_26B1DB9F0);
        *((void *)&v2007 + 1) = 0;
        uint64_t v835 = 0;
        uint64_t v836 = 0;
        uint64_t v837 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1137 = v1999;
        uint64_t v1138 = sub_24EE55860();
        MEMORY[0x270FA5388](v1138);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v834;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v682 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1137, v2000);
        uint64_t v835 = *((void *)&v2096 + 1);
        *((void *)&v2007 + 1) = v2096;
        uint64_t v836 = v2097;
        uint64_t v837 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v834, v682);
      }
      uint64_t v1139 = v1763;
      sub_24EC884D4(v1926, v1763, &qword_26B1DB9F0);
      if (v681(v1139, 1, v682) == 1)
      {
        sub_24EC88758(v1139, &qword_26B1DB9F0);
        uint64_t v1140 = 0;
        uint64_t v1141 = 0;
        uint64_t v1142 = 0;
        uint64_t v1143 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1439 = v1999;
        uint64_t v1440 = v682;
        uint64_t v1441 = sub_24EE55860();
        MEMORY[0x270FA5388](v1441);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v1139;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1439, v2000);
        uint64_t v1141 = *((void *)&v2096 + 1);
        uint64_t v1140 = v2096;
        uint64_t v1142 = v2097;
        uint64_t v1143 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v2004[1])(v1139, v1440);
      }
      v1442 = v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v2013;
      *(void *)&v1714[80] = v1442;
      *(void *)&v1714[48] = v1140;
      *(void *)&v1714[56] = v1141;
      v1443 = v1807;
      sub_24EE0A0F8((char *)&v2111, v1850, v2060, v2054, v2053, v2009, *((uint64_t *)&v2007 + 1), v835, v1807, v836, v837, *(long long *)&v1714[48], v1142, v1143, *(uint64_t *)&v1714[80], v2052);
      uint64_t v1444 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1445 = v1991;
      sub_24EDB5A5C(v1444, v1991);
      swift_bridgeObjectRelease();
      v1446 = v1808;
      long long v1447 = v2034;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1445, v1992);
      (*(void (**)(uint64_t *, void))(v1809 + 8))(v1443, v1447);
      long long v2111 = v1447;
      uint64_t v1448 = swift_getOpaqueTypeConformance2();
      v1449 = v1898;
      uint64_t v1450 = v1960;
      sub_24EC90894(v1446);
      uint64_t v1451 = v1955 + 8;
      v1452 = *(void (**)(char *, uint64_t))(v1955 + 8);
      v1452(v1446, v1450);
      *(void *)&long long v2060 = v1452;
      uint64_t v1955 = v1451;
      uint64_t v1453 = (uint64_t)v1810;
      v1454 = v1449;
      uint64_t v1455 = v1450;
      sub_24EC90894(v1454);
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1456 = swift_getOpaqueTypeConformance2();
      uint64_t v1457 = (uint64_t)v1901;
      sub_24EC908D0(v1453, v1455);
      v1452((char *)v1453, v1455);
      long long v2111 = v2029;
      uint64_t v1458 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1459 = swift_getOpaqueTypeConformance2();
      uint64_t v2495 = v1458;
      uint64_t v2496 = v1459;
      uint64_t v1460 = v2030;
      uint64_t v1461 = swift_getWitnessTable();
      uint64_t v2493 = v1448;
      uint64_t v2494 = v1456;
      uint64_t v1462 = v2035;
      uint64_t v1463 = swift_getWitnessTable();
      uint64_t v1464 = (uint64_t)v1972;
      sub_24EC909C8(v1457, v1460, v1462);
      (*(void (**)(uint64_t, uint64_t))(v1903 + 8))(v1457, v1462);
      uint64_t v2491 = v1461;
      uint64_t v2492 = v1463;
      uint64_t v1465 = v2031;
      uint64_t v1466 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2489 = swift_getOpaqueTypeConformance2();
      uint64_t v2490 = v2059;
      uint64_t v1467 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v1468 = swift_getOpaqueTypeConformance2();
      uint64_t v2487 = v1467;
      uint64_t v2488 = v1468;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v1469 = v1978;
      sub_24EC908D0(v1464, v1465);
      (*(void (**)(uint64_t, uint64_t))(v1973 + 8))(v1464, v1465);
      long long v2111 = v2017;
      uint64_t v1470 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1471 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1472 = swift_getOpaqueTypeConformance2();
      uint64_t v2485 = v1471;
      uint64_t v2486 = v1472;
      uint64_t v2484 = swift_getWitnessTable();
      uint64_t v2482 = swift_getWitnessTable();
      uint64_t v2483 = MEMORY[0x263F18C10];
      uint64_t v1473 = swift_getWitnessTable();
      uint64_t v1474 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2480 = v1473;
      uint64_t v2481 = v1474;
      uint64_t v1475 = swift_getWitnessTable();
      uint64_t v1476 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2478 = v1475;
      uint64_t v2479 = v1476;
      uint64_t v1477 = swift_getWitnessTable();
      uint64_t v2476 = v1470;
      uint64_t v2477 = v1477;
      uint64_t v1478 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1479 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1480 = swift_getOpaqueTypeConformance2();
      uint64_t v2474 = v1479;
      uint64_t v2475 = v1480;
      uint64_t v1481 = swift_getWitnessTable();
      uint64_t v2472 = v1478;
      uint64_t v2473 = v1481;
      uint64_t v1482 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v1483 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1484 = swift_getOpaqueTypeConformance2();
      uint64_t v2470 = v1483;
      uint64_t v2471 = v1484;
      uint64_t v1485 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2468 = swift_getOpaqueTypeConformance2();
      uint64_t v2469 = v1484;
      uint64_t v1486 = swift_getWitnessTable();
      uint64_t v2466 = v1485;
      uint64_t v2467 = v1486;
      uint64_t v1487 = swift_getWitnessTable();
      uint64_t v2464 = v1482;
      uint64_t v2465 = v1487;
      uint64_t v1488 = v2056;
      swift_getWitnessTable();
      uint64_t v2462 = v1466;
      uint64_t v2463 = (uint64_t)v2055;
      uint64_t v1489 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v1469, v1488, v1489);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v1469, v1489);
      ((void (*)(char *, uint64_t))v2060)(v1898, v1960);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1866, v2052);
      sub_24EC88758(v1926, &qword_26B1DB9F0);
      sub_24EC88758(v1925, &qword_26B1DB9F0);
      sub_24EC88758(v1859, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1834;
      goto LABEL_118;
    case 11:
      long long v2060 = *(_OWORD *)v465;
      uint64_t v683 = *((void *)v465 + 2);
      unsigned __int8 v684 = v465[24];
      long long v2054 = *((_OWORD *)v465 + 2);
      uint64_t v685 = *((void *)v465 + 6);
      uint64_t v686 = *((void *)v465 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout artwork title overlay ");
      *(void *)&long long v2111 = &type metadata for TallCardViewLayout;
      uint64_t v687 = v2014;
      *((void *)&v2111 + 1) = v2014;
      *(void *)&long long v2112 = v1990;
      *((void *)&v2112 + 1) = &type metadata for Overlay;
      v688 = (int *)swift_getTupleTypeMetadata();
      uint64_t v689 = (uint64_t)&v465[v688[16]];
      unsigned __int8 v690 = v465[v688[20]];
      v691 = v1827;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1827, &v465[v688[12]], v687);
      uint64_t v692 = v1848;
      sub_24ECB04CC(v689, v1848);
      uint64_t v693 = v2052;
      sub_24EE559E0();
      v694 = (void (*)(char *))sub_24EE559D0();
      v695 = v1862;
      v694(v691);
      swift_release();
      long long v2111 = v2060;
      *(void *)&long long v2112 = v683;
      BYTE8(v2112) = v684;
      long long v2113 = v2054;
      *(void *)&v2114[0] = v685;
      *((void *)&v2114[0] + 1) = v686;
      uint64_t v696 = (uint64_t)v1765;
      (*(void (**)(char *, char *, uint64_t))(v1987 + 16))(v1765, v695, v693);
      uint64_t v697 = v1758;
      sub_24EC884D4(v692, v1758, &qword_26B1DB9F0);
      v698 = v2004;
      uint64_t v699 = v2011;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6])(v697, 1, v2011) == 1)
      {
        sub_24EC88758(v697, &qword_26B1DB9F0);
        uint64_t v700 = 0;
        uint64_t v701 = 0;
        uint64_t v702 = 0;
        uint64_t v703 = 0;
      }
      else
      {
        long long v2096 = xmmword_24EE58860;
        LOBYTE(v2097) = 0;
        *((void *)&v2097 + 1) = MEMORY[0x263F8EE78];
        uint64_t v838 = v1999;
        uint64_t v839 = sub_24EE55860();
        MEMORY[0x270FA5388](v839);
        *(void *)&v1714[96] = &v2096;
        *(void *)&v1714[104] = v697;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v838, v2000);
        uint64_t v701 = *((void *)&v2096 + 1);
        uint64_t v700 = v2096;
        uint64_t v702 = v2097;
        uint64_t v703 = *((void *)&v2097 + 1);
        ((void (*)(uint64_t, uint64_t))v698[1])(v697, v699);
      }
      uint64_t v840 = v2037;
      LOBYTE(v2096) = v690;
      uint64_t v841 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[104] = v2013;
      v842 = v1803;
      sub_24ED0A354(&v2111, v696, v700, v701, v702, v703, (char *)&v2096, v841, v1803, v2052);
      uint64_t v843 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v844 = v1991;
      sub_24EDB5A5C(v843, v1991);
      swift_bridgeObjectRelease();
      v845 = v1802;
      uint64_t v846 = v2036;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v844, v1992);
      (*(void (**)(uint64_t *, uint64_t))(v1805 + 8))(v842, v840);
      *(void *)&long long v2111 = v840;
      *((void *)&v2111 + 1) = v846;
      uint64_t v847 = swift_getOpaqueTypeConformance2();
      v848 = v1896;
      uint64_t v849 = v1961;
      sub_24EC90894(v845);
      uint64_t v850 = v1950 + 8;
      v851 = *(void (**)(char *, uint64_t))(v1950 + 8);
      v851(v845, v849);
      *(void *)&long long v2060 = v851;
      uint64_t v1950 = v850;
      uint64_t v852 = (uint64_t)v1806;
      sub_24EC90894(v848);
      long long v2111 = v2034;
      uint64_t v853 = swift_getOpaqueTypeConformance2();
      uint64_t v854 = (uint64_t)v1901;
      sub_24EC909C8(v852, v1960, v849);
      v851((char *)v852, v849);
      long long v2111 = v2029;
      uint64_t v855 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v856 = swift_getOpaqueTypeConformance2();
      uint64_t v2530 = v855;
      uint64_t v2531 = v856;
      uint64_t v857 = v2030;
      uint64_t v858 = swift_getWitnessTable();
      uint64_t v2528 = v853;
      uint64_t v2529 = v847;
      uint64_t v859 = v2035;
      uint64_t v860 = swift_getWitnessTable();
      uint64_t v861 = (uint64_t)v1972;
      sub_24EC909C8(v854, v857, v859);
      (*(void (**)(uint64_t, uint64_t))(v1903 + 8))(v854, v859);
      uint64_t v2526 = v858;
      uint64_t v2527 = v860;
      uint64_t v862 = v2031;
      uint64_t v863 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2524 = swift_getOpaqueTypeConformance2();
      uint64_t v2525 = v2059;
      uint64_t v864 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v865 = swift_getOpaqueTypeConformance2();
      uint64_t v2522 = v864;
      uint64_t v2523 = v865;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v866 = v1978;
      sub_24EC908D0(v861, v862);
      (*(void (**)(uint64_t, uint64_t))(v1973 + 8))(v861, v862);
      long long v2111 = v2017;
      uint64_t v867 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v868 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v869 = swift_getOpaqueTypeConformance2();
      uint64_t v2520 = v868;
      uint64_t v2521 = v869;
      uint64_t v2519 = swift_getWitnessTable();
      uint64_t v2517 = swift_getWitnessTable();
      uint64_t v2518 = MEMORY[0x263F18C10];
      uint64_t v870 = swift_getWitnessTable();
      uint64_t v871 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2515 = v870;
      uint64_t v2516 = v871;
      uint64_t v872 = swift_getWitnessTable();
      uint64_t v873 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2513 = v872;
      uint64_t v2514 = v873;
      uint64_t v874 = swift_getWitnessTable();
      uint64_t v2511 = v867;
      uint64_t v2512 = v874;
      uint64_t v875 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v876 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v877 = swift_getOpaqueTypeConformance2();
      uint64_t v2509 = v876;
      uint64_t v2510 = v877;
      uint64_t v878 = swift_getWitnessTable();
      uint64_t v2507 = v875;
      uint64_t v2508 = v878;
      uint64_t v879 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v880 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v881 = swift_getOpaqueTypeConformance2();
      uint64_t v2505 = v880;
      uint64_t v2506 = v881;
      uint64_t v882 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2503 = swift_getOpaqueTypeConformance2();
      uint64_t v2504 = v881;
      uint64_t v883 = swift_getWitnessTable();
      uint64_t v2501 = v882;
      uint64_t v2502 = v883;
      uint64_t v884 = swift_getWitnessTable();
      uint64_t v2499 = v879;
      uint64_t v2500 = v884;
      uint64_t v885 = v2056;
      swift_getWitnessTable();
      uint64_t v2497 = v863;
      uint64_t v2498 = (uint64_t)v2055;
      uint64_t v886 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v866, v885, v886);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v866, v886);
      ((void (*)(char *, uint64_t))v2060)(v1896, v1961);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1862, v2052);
      sub_24EC88758(v1848, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1827;
      goto LABEL_118;
    case 12:
      long long v704 = *((_OWORD *)v465 + 5);
      v2114[1] = *((_OWORD *)v465 + 4);
      v2114[2] = v704;
      long long v705 = *((_OWORD *)v465 + 7);
      long long v2115 = *((_OWORD *)v465 + 6);
      long long v2116 = v705;
      long long v706 = *((_OWORD *)v465 + 1);
      long long v2111 = *(_OWORD *)v465;
      long long v2112 = v706;
      long long v707 = *((_OWORD *)v465 + 3);
      long long v2113 = *((_OWORD *)v465 + 2);
      v2114[0] = v707;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[64], "layout artwork title subtitle caption ");
      *(void *)&long long v2096 = &type metadata for VerticalStackCardLayout;
      uint64_t v708 = v2014;
      *((void *)&v2096 + 1) = v2014;
      *(void *)&long long v2097 = v1990;
      *((void *)&v2097 + 1) = v1990;
      *(void *)v2098 = v1990;
      v709 = (int *)swift_getTupleTypeMetadata();
      v710 = &v465[v709[12]];
      uint64_t v711 = (uint64_t)&v465[v709[16]];
      uint64_t v712 = (uint64_t)&v465[v709[20]];
      uint64_t v713 = (uint64_t)&v465[v709[24]];
      v714 = v1835;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1835, v710, v708);
      uint64_t v715 = v1861;
      sub_24ECB04CC(v711, v1861);
      sub_24ECB04CC(v712, v1927);
      sub_24ECB04CC(v713, v1929);
      uint64_t v716 = v2052;
      sub_24EE559E0();
      v717 = (void (*)(char *))sub_24EE559D0();
      v718 = v1867;
      v717(v714);
      swift_release();
      long long v2099 = v2114[1];
      long long v2100 = v2114[2];
      long long v2101 = v2115;
      long long v2102 = v2116;
      long long v2096 = v2111;
      long long v2097 = v2112;
      *(_OWORD *)v2098 = v2113;
      *(_OWORD *)&v2098[16] = v2114[0];
      (*(void (**)(uint64_t, char *, uint64_t))(v1987 + 16))(v1852, v718, v716);
      uint64_t v719 = v1760;
      sub_24EC884D4(v715, v1760, &qword_26B1DB9F0);
      v720 = v2004;
      v721 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v722 = v2011;
      if (v721(v719, 1, v2011) == 1)
      {
        sub_24EC88758(v719, &qword_26B1DB9F0);
        *(void *)&long long v2060 = 0;
        *(void *)&long long v2054 = 0;
        *(void *)&long long v2053 = 0;
        *((void *)&v2007 + 1) = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v889 = v1999;
        uint64_t v890 = sub_24EE55860();
        MEMORY[0x270FA5388](v890);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v719;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v722 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v889, v2000);
        *(void *)&long long v2054 = *((void *)&v2532 + 1);
        *(void *)&long long v2060 = v2532;
        *(void *)&long long v2053 = v2533;
        *((void *)&v2007 + 1) = v2534;
        ((void (*)(uint64_t, uint64_t))v720[1])(v719, v722);
      }
      uint64_t v891 = v1742;
      sub_24EC884D4(v1927, v1742, &qword_26B1DB9F0);
      if (v721(v891, 1, v722) == 1)
      {
        sub_24EC88758(v891, &qword_26B1DB9F0);
        *(void *)&long long v2007 = 0;
        uint64_t v892 = 0;
        uint64_t v893 = 0;
        uint64_t v894 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1144 = v1999;
        uint64_t v1145 = sub_24EE55860();
        MEMORY[0x270FA5388](v1145);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v891;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v722 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1144, v2000);
        uint64_t v892 = *((void *)&v2532 + 1);
        *(void *)&long long v2007 = v2532;
        uint64_t v893 = v2533;
        uint64_t v894 = v2534;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v891, v722);
      }
      uint64_t v1146 = v1764;
      sub_24EC884D4(v1929, v1764, &qword_26B1DB9F0);
      if (v721(v1146, 1, v722) == 1)
      {
        sub_24EC88758(v1146, &qword_26B1DB9F0);
        uint64_t v1147 = 0;
        uint64_t v1148 = 0;
        uint64_t v1149 = 0;
        uint64_t v1150 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1490 = v1999;
        uint64_t v1491 = v722;
        uint64_t v1492 = sub_24EE55860();
        MEMORY[0x270FA5388](v1492);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v1146;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1490, v2000);
        uint64_t v1148 = *((void *)&v2532 + 1);
        uint64_t v1147 = v2532;
        uint64_t v1149 = v2533;
        uint64_t v1150 = v2534;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v1146, v1491);
      }
      uint64_t v1493 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v2013;
      *(void *)&v1714[48] = v1147;
      *(void *)&v1714[56] = v1148;
      *(void *)&v1714[40] = v894;
      v1494 = v1817;
      sub_24ED5A858(&v2096, v1852, v2060, v2054, v2053, *((uint64_t *)&v2007 + 1), v2007, v892, v1817, v893, *(uint64_t *)&v1714[40], *(long long *)&v1714[48], v1149, v1150, v1493, v2052);
      uint64_t v1495 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1496 = v1991;
      sub_24EDB5A5C(v1495, v1991);
      swift_bridgeObjectRelease();
      v1497 = v1819;
      uint64_t v1498 = v2038;
      uint64_t v1499 = v2040;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1496, v1992);
      (*(void (**)(char *, uint64_t))(v1820 + 8))(v1494, v1498);
      *(void *)&long long v2096 = v1498;
      *((void *)&v2096 + 1) = v1499;
      uint64_t v1500 = swift_getOpaqueTypeConformance2();
      v1501 = v1906;
      uint64_t v1502 = v1959;
      sub_24EC90894(v1497);
      uint64_t v1503 = v1958 + 8;
      v1504 = *(void (**)(char *, uint64_t))(v1958 + 8);
      v1504(v1497, v1502);
      *(void *)&long long v2060 = v1504;
      uint64_t v1958 = v1503;
      uint64_t v1505 = (uint64_t)v1822;
      sub_24EC90894(v1501);
      uint64_t v1506 = (uint64_t)v1899;
      uint64_t v1507 = v2059;
      sub_24EC908D0(v1505, v1502);
      v1504((char *)v1505, v1502);
      uint64_t v2568 = v1500;
      uint64_t v2569 = v1507;
      uint64_t v1508 = v2008;
      uint64_t v1509 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2042;
      *((void *)&v2096 + 1) = v2041;
      uint64_t v1510 = swift_getOpaqueTypeConformance2();
      uint64_t v1511 = (uint64_t)v1963;
      sub_24EC908D0(v1506, v1508);
      (*(void (**)(uint64_t, uint64_t))(v1900 + 8))(v1506, v1508);
      long long v2096 = v2029;
      uint64_t v1512 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2033;
      *((void *)&v2096 + 1) = v2032;
      uint64_t v1513 = swift_getOpaqueTypeConformance2();
      uint64_t v2566 = v1512;
      uint64_t v2567 = v1513;
      uint64_t v1514 = swift_getWitnessTable();
      long long v2096 = v2034;
      uint64_t v1515 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2037;
      *((void *)&v2096 + 1) = v2036;
      uint64_t v1516 = swift_getOpaqueTypeConformance2();
      uint64_t v2564 = v1515;
      uint64_t v2565 = v1516;
      uint64_t v1517 = swift_getWitnessTable();
      uint64_t v2562 = v1514;
      uint64_t v2563 = v1517;
      uint64_t v1518 = v2031;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v2560 = v1509;
      uint64_t v2561 = v1510;
      uint64_t v1519 = v2039;
      uint64_t v1520 = swift_getWitnessTable();
      uint64_t v1521 = v1978;
      sub_24EC909C8(v1511, v1518, v1519);
      (*(void (**)(uint64_t, uint64_t))(v1965 + 8))(v1511, v1519);
      long long v2096 = v2017;
      uint64_t v1522 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2045;
      *((void *)&v2096 + 1) = v2051;
      uint64_t v1523 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2048;
      *((void *)&v2096 + 1) = v2046;
      uint64_t v1524 = swift_getOpaqueTypeConformance2();
      uint64_t v2558 = v1523;
      uint64_t v2559 = v1524;
      uint64_t v2557 = swift_getWitnessTable();
      uint64_t v2555 = swift_getWitnessTable();
      uint64_t v2556 = MEMORY[0x263F18C10];
      uint64_t v1525 = swift_getWitnessTable();
      uint64_t v1526 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2553 = v1525;
      uint64_t v2554 = v1526;
      uint64_t v1527 = swift_getWitnessTable();
      uint64_t v1528 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2551 = v1527;
      uint64_t v2552 = v1528;
      uint64_t v1529 = swift_getWitnessTable();
      uint64_t v2549 = v1522;
      uint64_t v2550 = v1529;
      uint64_t v1530 = swift_getWitnessTable();
      long long v2096 = v2019;
      uint64_t v1531 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2021;
      *((void *)&v2096 + 1) = v2020;
      uint64_t v1532 = swift_getOpaqueTypeConformance2();
      uint64_t v2547 = v1531;
      uint64_t v2548 = v1532;
      uint64_t v1533 = swift_getWitnessTable();
      uint64_t v2545 = v1530;
      uint64_t v2546 = v1533;
      uint64_t v1534 = swift_getWitnessTable();
      long long v2096 = v2022;
      uint64_t v1535 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2024;
      *((void *)&v2096 + 1) = v2026;
      uint64_t v1536 = swift_getOpaqueTypeConformance2();
      uint64_t v2543 = v1535;
      uint64_t v2544 = v1536;
      uint64_t v1537 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2025;
      *((void *)&v2096 + 1) = v2028;
      uint64_t v2541 = swift_getOpaqueTypeConformance2();
      uint64_t v2542 = v1536;
      uint64_t v1538 = swift_getWitnessTable();
      uint64_t v2539 = v1537;
      uint64_t v2540 = v1538;
      uint64_t v1539 = swift_getWitnessTable();
      uint64_t v2537 = v1534;
      uint64_t v2538 = v1539;
      uint64_t v1540 = v2056;
      swift_getWitnessTable();
      uint64_t v2535 = (uint64_t)v2055;
      uint64_t v2536 = v1520;
      uint64_t v1541 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v1521, v1540, v1541);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v1521, v1541);
      ((void (*)(char *, uint64_t))v2060)(v1906, v1959);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1867, v2052);
      sub_24EC88758(v1929, &qword_26B1DB9F0);
      sub_24EC88758(v1927, &qword_26B1DB9F0);
      sub_24EC88758(v1861, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1835;
      goto LABEL_118;
    case 13:
      v723 = v1894;
      (*(void (**)(char *, unsigned __int8 *, void))(v1895 + 32))(v1894, v465, v2053);
      uint64_t v724 = v2009;
      uint64_t v725 = v2059;
      sub_24EE559E0();
      v726 = (void (*)(char *))sub_24EE559D0();
      uint64_t v727 = (uint64_t)v1804;
      v726(v723);
      swift_release();
      v728 = v1897;
      sub_24EC90894(v727);
      uint64_t v729 = v1951 + 8;
      v730 = *(void (**)(uint64_t, uint64_t))(v1951 + 8);
      v730(v727, v724);
      v731 = v730;
      *(void *)&long long v2060 = v730;
      uint64_t v1951 = v729;
      sub_24EC90894(v728);
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v732 = swift_getOpaqueTypeConformance2();
      uint64_t v733 = (uint64_t)v1899;
      sub_24EC909C8(v727, v1959, v724);
      v731(v727, v724);
      uint64_t v2603 = v732;
      uint64_t v2604 = v725;
      uint64_t v734 = v2008;
      uint64_t v735 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2042;
      *((void *)&v2111 + 1) = v2041;
      uint64_t v736 = swift_getOpaqueTypeConformance2();
      uint64_t v737 = (uint64_t)v1963;
      sub_24EC908D0(v733, v734);
      (*(void (**)(uint64_t, uint64_t))(v1900 + 8))(v733, v734);
      long long v2111 = v2029;
      uint64_t v738 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v739 = swift_getOpaqueTypeConformance2();
      uint64_t v2601 = v738;
      uint64_t v2602 = v739;
      uint64_t v740 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v741 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v742 = swift_getOpaqueTypeConformance2();
      uint64_t v2599 = v741;
      uint64_t v2600 = v742;
      uint64_t v743 = swift_getWitnessTable();
      uint64_t v2597 = v740;
      uint64_t v2598 = v743;
      uint64_t v744 = v2031;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v2595 = v735;
      uint64_t v2596 = v736;
      uint64_t v745 = v2039;
      uint64_t v746 = swift_getWitnessTable();
      uint64_t v747 = v1978;
      sub_24EC909C8(v737, v744, v745);
      (*(void (**)(uint64_t, uint64_t))(v1965 + 8))(v737, v745);
      long long v2111 = v2017;
      uint64_t v748 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v749 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v750 = swift_getOpaqueTypeConformance2();
      uint64_t v2593 = v749;
      uint64_t v2594 = v750;
      uint64_t v2592 = swift_getWitnessTable();
      uint64_t v2590 = swift_getWitnessTable();
      uint64_t v2591 = MEMORY[0x263F18C10];
      uint64_t v751 = swift_getWitnessTable();
      uint64_t v752 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2588 = v751;
      uint64_t v2589 = v752;
      uint64_t v753 = swift_getWitnessTable();
      uint64_t v754 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2586 = v753;
      uint64_t v2587 = v754;
      uint64_t v755 = swift_getWitnessTable();
      uint64_t v2584 = v748;
      uint64_t v2585 = v755;
      uint64_t v756 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v757 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v758 = swift_getOpaqueTypeConformance2();
      uint64_t v2582 = v757;
      uint64_t v2583 = v758;
      uint64_t v759 = swift_getWitnessTable();
      uint64_t v2580 = v756;
      uint64_t v2581 = v759;
      uint64_t v760 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v761 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v762 = swift_getOpaqueTypeConformance2();
      uint64_t v2578 = v761;
      uint64_t v2579 = v762;
      uint64_t v763 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2576 = swift_getOpaqueTypeConformance2();
      uint64_t v2577 = v762;
      uint64_t v764 = swift_getWitnessTable();
      uint64_t v2574 = v763;
      uint64_t v2575 = v764;
      uint64_t v765 = swift_getWitnessTable();
      uint64_t v2572 = v760;
      uint64_t v2573 = v765;
      uint64_t v766 = v2056;
      swift_getWitnessTable();
      uint64_t v2570 = (uint64_t)v2055;
      uint64_t v2571 = v746;
      uint64_t v767 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v747, v766, v767);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v747, v767);
      ((void (*)(char *, void))v2060)(v1897, v2009);
      (*(void (**)(char *, void))(v1895 + 8))(v1894, v2053);
      goto LABEL_119;
    case 14:
      uint64_t v769 = v2014;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v771 = (uint64_t)&v465[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v772 = (uint64_t)&v465[*(int *)(TupleTypeMetadata3 + 64)];
      v773 = v1828;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1828, v465, v769);
      uint64_t v774 = v1854;
      sub_24ECB04CC(v771, v1854);
      sub_24ECB04CC(v772, v1924);
      sub_24EE559E0();
      v775 = (void (*)(char *))sub_24EE559D0();
      v775(v773);
      swift_release();
      uint64_t v776 = v1759;
      sub_24EC884D4(v774, v1759, &qword_26B1DB9F0);
      v777 = v2004;
      v778 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v779 = v2011;
      if (v778(v776, 1, v2011) == 1)
      {
        sub_24EC88758(v776, &qword_26B1DB9F0);
        uint64_t v780 = 0;
        *(void *)&long long v2060 = 0;
        uint64_t v781 = 0;
        uint64_t v782 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v895 = v1999;
        uint64_t v896 = sub_24EE55860();
        MEMORY[0x270FA5388](v896);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v776;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v779 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v895, v2000);
        *(void *)&long long v2060 = *((void *)&v2111 + 1);
        uint64_t v780 = v2111;
        uint64_t v781 = v2112;
        uint64_t v782 = *((void *)&v2112 + 1);
        ((void (*)(uint64_t, uint64_t))v777[1])(v776, v779);
      }
      uint64_t v897 = v1762;
      sub_24EC884D4(v1924, v1762, &qword_26B1DB9F0);
      if (v778(v897, 1, v779) == 1)
      {
        sub_24EC88758(v897, &qword_26B1DB9F0);
        uint64_t v898 = 0;
        uint64_t v899 = 0;
        uint64_t v900 = 0;
        uint64_t v901 = 0;
      }
      else
      {
        long long v2111 = xmmword_24EE58860;
        LOBYTE(v2112) = 0;
        *((void *)&v2112 + 1) = MEMORY[0x263F8EE78];
        uint64_t v1151 = v1999;
        uint64_t v1152 = v780;
        uint64_t v1153 = v779;
        uint64_t v1154 = sub_24EE55860();
        MEMORY[0x270FA5388](v1154);
        *(void *)&v1714[96] = &v2111;
        *(void *)&v1714[104] = v897;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0534, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1151, v2000);
        uint64_t v899 = *((void *)&v2111 + 1);
        uint64_t v898 = v2111;
        uint64_t v900 = v2112;
        uint64_t v901 = *((void *)&v2112 + 1);
        uint64_t v1155 = v1153;
        uint64_t v780 = v1152;
        ((void (*)(uint64_t, uint64_t))v2004[1])(v897, v1155);
      }
      uint64_t v1156 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[104] = v2013;
      *(void *)&v1714[80] = v901;
      uint64_t v1157 = v1821;
      sub_24EDBEEC8(v1842, v780, v2060, v781, v782, v898, v899, v900, v1821, *(uint64_t *)&v1714[80], v1156, v2052);
      uint64_t v1158 = (*((uint64_t (**)(uint64_t))v2055 + 23))(v2047);
      uint64_t v1159 = v1991;
      sub_24EDB5A5C(v1158, v1991);
      swift_bridgeObjectRelease();
      v1160 = v1818;
      uint64_t v1161 = v2042;
      uint64_t v1162 = v2041;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1159, v1992);
      (*(void (**)(uint64_t, uint64_t))(v1823 + 8))(v1157, v1161);
      *(void *)&long long v2111 = v1161;
      *((void *)&v2111 + 1) = v1162;
      uint64_t v1163 = swift_getOpaqueTypeConformance2();
      v1164 = v1904;
      uint64_t v1165 = v1966;
      sub_24EC90894(v1160);
      uint64_t v1166 = v1957 + 8;
      v1167 = *(void (**)(char *, uint64_t))(v1957 + 8);
      v1167(v1160, v1165);
      v1168 = (void (*)(uint64_t, uint64_t))v1167;
      *(void *)&long long v2060 = v1167;
      uint64_t v1957 = v1166;
      uint64_t v1169 = (uint64_t)v1824;
      sub_24EC90894(v1164);
      *(void *)&long long v2111 = v2038;
      *((void *)&v2111 + 1) = v2040;
      uint64_t v2675 = swift_getOpaqueTypeConformance2();
      uint64_t v2676 = v2059;
      uint64_t v1170 = v2008;
      uint64_t v1171 = swift_getWitnessTable();
      uint64_t v1172 = (uint64_t)v1963;
      uint64_t v1173 = v1170;
      uint64_t v1174 = v1171;
      sub_24EC909C8(v1169, v1173, v1165);
      v1168(v1169, v1165);
      long long v2111 = v2029;
      uint64_t v1175 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2033;
      *((void *)&v2111 + 1) = v2032;
      uint64_t v1176 = swift_getOpaqueTypeConformance2();
      uint64_t v2673 = v1175;
      uint64_t v2674 = v1176;
      uint64_t v1177 = swift_getWitnessTable();
      long long v2111 = v2034;
      uint64_t v1178 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2037;
      *((void *)&v2111 + 1) = v2036;
      uint64_t v1179 = swift_getOpaqueTypeConformance2();
      uint64_t v2671 = v1178;
      uint64_t v2672 = v1179;
      uint64_t v1180 = swift_getWitnessTable();
      uint64_t v2669 = v1177;
      uint64_t v2670 = v1180;
      uint64_t v1181 = v2031;
      uint64_t v1182 = swift_getWitnessTable();
      uint64_t v2667 = v1174;
      uint64_t v2668 = v1163;
      uint64_t v1183 = v2039;
      v2055 = (void (*)(char *, uint64_t))swift_getWitnessTable();
      uint64_t v1184 = v1978;
      sub_24EC909C8(v1172, v1181, v1183);
      (*(void (**)(uint64_t, uint64_t))(v1965 + 8))(v1172, v1183);
      long long v2111 = v2017;
      uint64_t v1185 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2045;
      *((void *)&v2111 + 1) = v2051;
      uint64_t v1186 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2048;
      *((void *)&v2111 + 1) = v2046;
      uint64_t v1187 = swift_getOpaqueTypeConformance2();
      uint64_t v2665 = v1186;
      uint64_t v2666 = v1187;
      uint64_t v2664 = swift_getWitnessTable();
      uint64_t v2662 = swift_getWitnessTable();
      uint64_t v2663 = MEMORY[0x263F18C10];
      uint64_t v1188 = swift_getWitnessTable();
      uint64_t v1189 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2660 = v1188;
      uint64_t v2661 = v1189;
      uint64_t v1190 = swift_getWitnessTable();
      uint64_t v1191 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2658 = v1190;
      uint64_t v2659 = v1191;
      uint64_t v1192 = swift_getWitnessTable();
      uint64_t v2656 = v1185;
      uint64_t v2657 = v1192;
      uint64_t v1193 = swift_getWitnessTable();
      long long v2111 = v2019;
      uint64_t v1194 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2021;
      *((void *)&v2111 + 1) = v2020;
      uint64_t v1195 = swift_getOpaqueTypeConformance2();
      uint64_t v2654 = v1194;
      uint64_t v2655 = v1195;
      uint64_t v1196 = swift_getWitnessTable();
      uint64_t v2652 = v1193;
      uint64_t v2653 = v1196;
      uint64_t v1197 = swift_getWitnessTable();
      long long v2111 = v2022;
      uint64_t v1198 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2111 = v2024;
      *((void *)&v2111 + 1) = v2026;
      uint64_t v1199 = swift_getOpaqueTypeConformance2();
      uint64_t v2650 = v1198;
      uint64_t v2651 = v1199;
      uint64_t v1200 = swift_getWitnessTable();
      *(void *)&long long v2111 = v2025;
      *((void *)&v2111 + 1) = v2028;
      uint64_t v2648 = swift_getOpaqueTypeConformance2();
      uint64_t v2649 = v1199;
      uint64_t v1201 = swift_getWitnessTable();
      uint64_t v2646 = v1200;
      uint64_t v2647 = v1201;
      uint64_t v1202 = swift_getWitnessTable();
      uint64_t v2644 = v1197;
      uint64_t v2645 = v1202;
      uint64_t v1203 = v2056;
      swift_getWitnessTable();
      uint64_t v2642 = v1182;
      uint64_t v2643 = (uint64_t)v2055;
      uint64_t v1204 = v2016;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      sub_24EC909C8(v1184, v1203, v1204);
      (*(void (**)(uint64_t, uint64_t))(v1979 + 8))(v1184, v1204);
      ((void (*)(char *, uint64_t))v2060)(v1904, v1966);
      sub_24EC88758(v1924, &qword_26B1DB9F0);
      sub_24EC88758(v1854, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1828;
      goto LABEL_118;
    default:
      uint64_t v2124 = *((void *)v465 + 30);
      long long v469 = *((_OWORD *)v465 + 13);
      long long v2121 = *((_OWORD *)v465 + 12);
      long long v2122 = v469;
      long long v2123 = *((_OWORD *)v465 + 14);
      long long v470 = *((_OWORD *)v465 + 9);
      long long v2117 = *((_OWORD *)v465 + 8);
      long long v2118 = v470;
      long long v471 = *((_OWORD *)v465 + 11);
      long long v2119 = *((_OWORD *)v465 + 10);
      long long v2120 = v471;
      long long v472 = *((_OWORD *)v465 + 5);
      v2114[1] = *((_OWORD *)v465 + 4);
      v2114[2] = v472;
      long long v473 = *((_OWORD *)v465 + 7);
      long long v2115 = *((_OWORD *)v465 + 6);
      long long v2116 = v473;
      long long v474 = *((_OWORD *)v465 + 1);
      long long v2111 = *(_OWORD *)v465;
      long long v2112 = v474;
      long long v475 = *((_OWORD *)v465 + 3);
      long long v2113 = *((_OWORD *)v465 + 2);
      v2114[0] = v475;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy(&v1714[16], "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      *(void *)&long long v2096 = &type metadata for ActionCardViewLayout;
      uint64_t v476 = v2014;
      *((void *)&v2096 + 1) = v2014;
      *(void *)&long long v2097 = &type metadata for ActionCardViewStyle;
      *((void *)&v2097 + 1) = v1990;
      *(void *)v2098 = v1990;
      *(void *)&v2098[8] = v1990;
      uint64_t v477 = v1975;
      *(void *)&v2098[16] = v1975;
      *(void *)&v2098[24] = *((void *)&v1990 + 1);
      v478 = (int *)swift_getTupleTypeMetadata();
      v479 = &v465[v478[12]];
      LODWORD(v2053) = v465[v478[16]];
      uint64_t v480 = (uint64_t)&v465[v478[20]];
      uint64_t v481 = (uint64_t)&v465[v478[24]];
      uint64_t v482 = (uint64_t)&v465[v478[28]];
      v483 = &v465[v478[32]];
      v484 = &v465[v478[36]];
      v485 = v1843;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2012 + 32))(v1843, v479, v476);
      sub_24ECB04CC(v480, v1917);
      sub_24ECB04CC(v481, v1918);
      sub_24ECB04CC(v482, v1919);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v1935 + 32))(v1933, v483, v477);
      (*(void (**)(uint64_t, unsigned __int8 *, void))(v1982 + 32))(v1934, v484, *((void *)&v1990 + 1));
      uint64_t v486 = v2052;
      sub_24EE559E0();
      v487 = (void (*)(char *))sub_24EE559D0();
      v488 = v1868;
      v487(v485);
      swift_release();
      long long v2107 = v2121;
      long long v2108 = v2122;
      long long v2109 = v2123;
      uint64_t v2110 = v2124;
      long long v2103 = v2117;
      long long v2104 = v2118;
      long long v2105 = v2119;
      long long v2106 = v2120;
      long long v2099 = v2114[1];
      long long v2100 = v2114[2];
      long long v2101 = v2115;
      long long v2102 = v2116;
      long long v2096 = v2111;
      long long v2097 = v2112;
      *(_OWORD *)v2098 = v2113;
      *(_OWORD *)&v2098[16] = v2114[0];
      char v2216 = v2053;
      (*(void (**)(uint64_t, char *, uint64_t))(v1987 + 16))(v1857, v488, v486);
      uint64_t v489 = v1745;
      sub_24EC884D4(v1917, v1745, &qword_26B1DB9F0);
      v490 = v2004;
      v491 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2004[6];
      uint64_t v492 = v2011;
      if (v491(v489, 1, v2011) == 1)
      {
        sub_24EC88758(v489, &qword_26B1DB9F0);
        *(void *)&long long v1990 = 0;
        uint64_t v1988 = 0;
        uint64_t v1979 = 0;
        uint64_t v1978 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v783 = v1999;
        uint64_t v784 = sub_24EE55860();
        MEMORY[0x270FA5388](v784);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v489;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v492 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v783, v2000);
        uint64_t v1988 = *((void *)&v2532 + 1);
        *(void *)&long long v1990 = v2532;
        uint64_t v1979 = v2533;
        uint64_t v1978 = v2534;
        ((void (*)(uint64_t, uint64_t))v490[1])(v489, v492);
      }
      uint64_t v785 = v1734;
      sub_24EC884D4(v1918, v1734, &qword_26B1DB9F0);
      if (v491(v785, 1, v492) == 1)
      {
        sub_24EC88758(v785, &qword_26B1DB9F0);
        uint64_t v1989 = 0;
        uint64_t v1977 = 0;
        uint64_t v1976 = 0;
        uint64_t v1973 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v902 = v1999;
        uint64_t v903 = sub_24EE55860();
        MEMORY[0x270FA5388](v903);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v785;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        uint64_t v492 = v2011;
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v902, v2000);
        uint64_t v1977 = *((void *)&v2532 + 1);
        uint64_t v1989 = v2532;
        uint64_t v1976 = v2533;
        uint64_t v1973 = v2534;
        ((void (*)(uint64_t, uint64_t))v490[1])(v785, v492);
      }
      uint64_t v904 = v1737;
      sub_24EC884D4(v1919, v1737, &qword_26B1DB9F0);
      if (v491(v904, 1, v492) == 1)
      {
        sub_24EC88758(v904, &qword_26B1DB9F0);
        uint64_t v2011 = 0;
        uint64_t v2001 = 0;
        uint64_t v2000 = 0;
        uint64_t v1999 = 0;
      }
      else
      {
        long long v2532 = xmmword_24EE58860;
        unsigned __int8 v2533 = 0;
        uint64_t v2534 = MEMORY[0x263F8EE78];
        uint64_t v1205 = v1999;
        uint64_t v1206 = sub_24EE55860();
        MEMORY[0x270FA5388](v1206);
        *(void *)&v1714[96] = &v2532;
        *(void *)&v1714[104] = v904;
        sub_24EE3A32C((void (*)(char *))sub_24ECB0880, (uint64_t)&v1714[80]);
        (*(void (**)(uint64_t, uint64_t))(v2001 + 8))(v1205, v2000);
        uint64_t v2001 = *((void *)&v2532 + 1);
        uint64_t v2011 = v2532;
        uint64_t v2000 = v2533;
        uint64_t v1999 = v2534;
        ((void (*)(uint64_t, uint64_t))v490[1])(v904, v492);
      }
      uint64_t v1207 = *((void *)&v1990 + 1);
      uint64_t v1208 = v2060;
      sub_24EE559E0();
      v1209 = (void (*)(char *))sub_24EE559D0();
      uint64_t v1210 = v1935;
      v1211 = v1766;
      uint64_t v1212 = v1975;
      (*(void (**)(char *, char *, uint64_t))(v1935 + 16))(v1766, v1933, v1975);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1210 + 56))(v1211, 0, 1, v1212);
      v1209(v1211);
      swift_release();
      v1213 = *(void (**)(char *, uint64_t))(v1982 + 8);
      v1982 += 8;
      *(void *)&long long v2053 = v1213;
      v1213(v1211, v1207);
      uint64_t v1214 = sub_24EE559D0();
      uint64_t v1216 = v1215;
      MEMORY[0x270FA5388](v1214);
      uint64_t v1217 = v2052;
      uint64_t v1218 = (uint64_t)v2055;
      v1714[39] = HIBYTE(v1208);
      *(void *)&v1714[40] = v2055;
      uint64_t v1219 = v2013;
      *(void *)&v1714[48] = v2003;
      *(void *)&v1714[56] = v2013;
      *(_OWORD *)&v1714[64] = v2007;
      uint64_t v1220 = v2054;
      *(void *)&v1714[80] = v2059;
      *(void *)&v1714[88] = v2054;
      *(void *)&v1714[96] = v1221;
      *(void *)&v1714[104] = v1216;
      uint64_t v1222 = v1974;
      sub_24EC96D54((void (*)(char *))sub_24ECB0550, v1934, v1208, v1212, v1974);
      swift_release();
      uint64_t v1223 = (uint64_t)v1981;
      (*(void (**)(char *, uint64_t, uint64_t))(v1985 + 16))(v1981, v1986, v1984);
      *(void *)&v1714[96] = v1220;
      *(void *)&v1714[104] = v1220;
      *(void *)&v1714[80] = v1208;
      *(void *)&v1714[88] = v1219;
      *(void *)&v1714[72] = v1208;
      *(void *)&v1714[16] = v2001;
      *(void *)&v1714[8] = v2011;
      *((void *)&v1713 + 1) = v1976;
      *(void *)&long long v1713 = v1977;
      uint64_t v1224 = v1769;
      sub_24EDCCA64((uint64_t)&v2096, &v2216, v1857, v1990, v1988, v1979, v1978, v1989, v1769, v1713, v1973, *(long long *)&v1714[8], v2000, v1999, v1863, v1222, v1223, v1217, *(uint64_t *)&v1714[72]);
      uint64_t v1225 = (*(uint64_t (**)(uint64_t, uint64_t))(v1218 + 184))(v2047, v1218);
      uint64_t v1226 = v1991;
      sub_24EDB5A5C(v1225, v1991);
      swift_bridgeObjectRelease();
      v1227 = v1770;
      long long v1228 = v2017;
      sub_24EE56A40();
      (*(void (**)(uint64_t, uint64_t))(v1993 + 8))(v1226, v1992);
      (*(void (**)(uint64_t, void))(v1771 + 8))(v1224, v1228);
      long long v2096 = v1228;
      uint64_t v1229 = swift_getOpaqueTypeConformance2();
      v1230 = v1870;
      uint64_t v1231 = v1947;
      sub_24EC90894(v1227);
      uint64_t v1232 = v1939 + 8;
      *(void *)&long long v2060 = *(void *)(v1939 + 8);
      ((void (*)(char *, uint64_t))v2060)(v1227, v1231);
      uint64_t v1939 = v1232;
      uint64_t v1233 = (uint64_t)v1773;
      sub_24EC90894(v1230);
      *(void *)&long long v2096 = v2045;
      *((void *)&v2096 + 1) = v2051;
      uint64_t v1234 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2048;
      *((void *)&v2096 + 1) = v2046;
      uint64_t v1235 = swift_getOpaqueTypeConformance2();
      uint64_t v2094 = v1234;
      uint64_t v2095 = v1235;
      uint64_t v2093 = swift_getWitnessTable();
      uint64_t v2091 = swift_getWitnessTable();
      uint64_t v2092 = MEMORY[0x263F18C10];
      uint64_t v1236 = swift_getWitnessTable();
      uint64_t v1237 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
      uint64_t v2089 = v1236;
      uint64_t v2090 = v1237;
      uint64_t v1238 = swift_getWitnessTable();
      uint64_t v1239 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
      uint64_t v2087 = v1238;
      uint64_t v2088 = v1239;
      uint64_t v1240 = swift_getWitnessTable();
      uint64_t v1241 = (uint64_t)v1883;
      sub_24EC908D0(v1233, v1231);
      ((void (*)(uint64_t, uint64_t))v2060)(v1233, v1231);
      uint64_t v2085 = v1229;
      uint64_t v2086 = v1240;
      uint64_t v1242 = v2010;
      uint64_t v1243 = swift_getWitnessTable();
      long long v2096 = v2019;
      uint64_t v1244 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2021;
      *((void *)&v2096 + 1) = v2020;
      uint64_t v1245 = swift_getOpaqueTypeConformance2();
      uint64_t v2083 = v1244;
      uint64_t v2084 = v1245;
      uint64_t v1246 = swift_getWitnessTable();
      uint64_t v1247 = v1967;
      sub_24EC908D0(v1241, v1242);
      (*(void (**)(uint64_t, uint64_t))(v1884 + 8))(v1241, v1242);
      uint64_t v2081 = v1243;
      uint64_t v2082 = v1246;
      uint64_t v1248 = v2018;
      uint64_t v1249 = swift_getWitnessTable();
      long long v2096 = v2022;
      uint64_t v1250 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2024;
      *((void *)&v2096 + 1) = v2026;
      uint64_t v1251 = swift_getOpaqueTypeConformance2();
      uint64_t v2079 = v1250;
      uint64_t v2080 = v1251;
      uint64_t v1252 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2025;
      *((void *)&v2096 + 1) = v2028;
      uint64_t v2077 = swift_getOpaqueTypeConformance2();
      uint64_t v2078 = v1251;
      uint64_t v1253 = swift_getWitnessTable();
      uint64_t v2075 = v1252;
      uint64_t v2076 = v1253;
      uint64_t v1254 = swift_getWitnessTable();
      sub_24EC908D0(v1247, v1248);
      (*(void (**)(uint64_t, uint64_t))(v1969 + 8))(v1247, v1248);
      uint64_t v2073 = v1249;
      uint64_t v2074 = v1254;
      uint64_t v1255 = v2056;
      swift_getWitnessTable();
      long long v2096 = v2029;
      uint64_t v1256 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2033;
      *((void *)&v2096 + 1) = v2032;
      uint64_t v1257 = swift_getOpaqueTypeConformance2();
      uint64_t v2071 = v1256;
      uint64_t v2072 = v1257;
      uint64_t v1258 = swift_getWitnessTable();
      long long v2096 = v2034;
      uint64_t v1259 = swift_getOpaqueTypeConformance2();
      *(void *)&long long v2096 = v2037;
      *((void *)&v2096 + 1) = v2036;
      uint64_t v1260 = swift_getOpaqueTypeConformance2();
      uint64_t v2069 = v1259;
      uint64_t v2070 = v1260;
      uint64_t v1261 = swift_getWitnessTable();
      uint64_t v2067 = v1258;
      uint64_t v2068 = v1261;
      uint64_t v1262 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2038;
      *((void *)&v2096 + 1) = v2040;
      uint64_t v2065 = swift_getOpaqueTypeConformance2();
      uint64_t v2066 = v2059;
      uint64_t v1263 = swift_getWitnessTable();
      *(void *)&long long v2096 = v2042;
      *((void *)&v2096 + 1) = v2041;
      uint64_t v1264 = swift_getOpaqueTypeConformance2();
      uint64_t v2063 = v1263;
      uint64_t v2064 = v1264;
      uint64_t v1265 = swift_getWitnessTable();
      uint64_t v2061 = v1262;
      uint64_t v2062 = v1265;
      swift_getWitnessTable();
      v768 = AssociatedConformanceWitness;
      uint64_t v1266 = v1983;
      sub_24EC908D0(v1983, v1255);
      (*(void (**)(uint64_t, uint64_t))(v1980 + 8))(v1266, v1255);
      ((void (*)(char *, uint64_t))v2060)(v1870, v1947);
      (*(void (**)(char *, uint64_t))(v1987 + 8))(v1868, v2052);
      ((void (*)(uint64_t, void))v2053)(v1934, *((void *)&v1990 + 1));
      (*(void (**)(char *, uint64_t))(v1935 + 8))(v1933, v1975);
      sub_24EC88758(v1919, &qword_26B1DB9F0);
      sub_24EC88758(v1918, &qword_26B1DB9F0);
      sub_24EC88758(v1917, &qword_26B1DB9F0);
      v887 = *(void (**)(char *, void))(v2012 + 8);
      v888 = v1843;
LABEL_118:
      v887(v888, v2014);
      goto LABEL_119;
  }
}

uint64_t sub_24ECAEAB0()
{
  return sub_24EC9EF54(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(_OWORD *)(v0 + 96),
           *(void *)(v0 + 112),
           *(void *)(v0 + 120));
}

uint64_t sub_24ECAEB0C(uint64_t a1, void (*a2)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, a1, AssociatedTypeWitness);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, AssociatedTypeWitness);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24ECAEC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v73 = a5;
  uint64_t v75 = a4;
  uint64_t v78 = a3;
  uint64_t v76 = a2;
  uint64_t v72 = a1;
  uint64_t v86 = a7;
  uint64_t v74 = a10;
  uint64_t v71 = a11;
  uint64_t v69 = a12;
  sub_24EE56430();
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v14 = sub_24EE55DD0();
  uint64_t v68 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (char *)&v60 - v15;
  uint64_t v16 = sub_24ECB06F4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v97 = a12;
  uint64_t v98 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v95 = WitnessTable;
  uint64_t v96 = MEMORY[0x263F18860];
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v85 = v14;
  uint64_t v93 = v14;
  uint64_t v94 = v18;
  uint64_t v88 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v67 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v65 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v64 = (char *)&v60 - v22;
  uint64_t v23 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v60 - v28;
  uint64_t v30 = sub_24EE55DD0();
  uint64_t v62 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v61 = (char *)&v60 - v31;
  uint64_t v77 = WitnessTable;
  uint64_t v91 = WitnessTable;
  uint64_t v92 = MEMORY[0x263F198F8];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v87 = v30;
  uint64_t v93 = v30;
  uint64_t v94 = v32;
  uint64_t v82 = v32;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v60 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v60 - v37;
  uint64_t v79 = v39;
  uint64_t v84 = OpaqueTypeMetadata2;
  uint64_t v83 = sub_24EE56240();
  uint64_t v81 = *(void *)(v83 - 8);
  __n128 v40 = MEMORY[0x270FA5388](v83);
  uint64_t v80 = (char *)&v60 - v41;
  LOBYTE(OpaqueTypeMetadata2) = (*(uint64_t (**)(uint64_t, __n128))(v71 + 40))(v73, v40);
  swift_getAssociatedTypeWitness();
  sub_24EE559E0();
  uint64_t v42 = (void (*)(uint64_t))sub_24EE559D0();
  v42(v78);
  swift_release();
  sub_24EE56890();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, a6);
  if (OpaqueTypeMetadata2)
  {
    uint64_t v43 = v61;
    sub_24EE56710();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v29, v13);
    sub_24EE56490();
    sub_24EE56DA0();
    uint64_t v44 = v87;
    uint64_t v45 = v82;
    sub_24EE56900();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v44);
    uint64_t v93 = v44;
    uint64_t v94 = v45;
    swift_getOpaqueTypeConformance2();
    uint64_t v46 = v79;
    sub_24EC90894(v35);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v63 + 8);
    v47(v35, v46);
    sub_24EC90894(v38);
    uint64_t v48 = v85;
    uint64_t v93 = v85;
    uint64_t v94 = v88;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v80;
    sub_24EC908D0((uint64_t)v35, v46);
    v47(v35, v46);
    v47(v38, v46);
  }
  else
  {
    sub_24EE56DA0();
    uint64_t v50 = v66;
    sub_24EE56970();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v29, v13);
    sub_24EE56490();
    sub_24EE56DA0();
    uint64_t v51 = (uint64_t)v65;
    uint64_t v48 = v85;
    uint64_t v52 = v88;
    sub_24EE56900();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v48);
    uint64_t v93 = v48;
    uint64_t v94 = v52;
    swift_getOpaqueTypeConformance2();
    uint64_t v53 = v64;
    uint64_t v54 = v84;
    sub_24EC90894(v51);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v55(v51, v54);
    sub_24EC90894(v53);
    uint64_t v45 = v82;
    uint64_t v93 = v87;
    uint64_t v94 = v82;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v80;
    sub_24EC909C8(v51, v79, v54);
    v55(v51, v54);
    v55((uint64_t)v53, v54);
  }
  uint64_t v93 = v87;
  uint64_t v94 = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = v48;
  uint64_t v94 = v88;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = OpaqueTypeConformance2;
  uint64_t v90 = v57;
  uint64_t v58 = v83;
  swift_getWitnessTable();
  sub_24EC90894(v49);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v49, v58);
}

uint64_t sub_24ECAF684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE55880();
  __n128 v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  uint64_t result = sub_24EE56660();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v10 & 1;
  *(void *)(a2 + 24) = v11;
  return result;
}

uint64_t sub_24ECAF75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v98 = a5;
  uint64_t v112 = a4;
  v97[1] = a3;
  uint64_t v104 = a2;
  uint64_t v115 = a6;
  uint64_t v110 = sub_24EE55960();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v111 = (char *)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B28);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v114 = (uint64_t)v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v113 = (uint64_t)v97 - v16;
  uint64_t v100 = sub_24EE565B0();
  v97[0] = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24EE55880();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v108 = (char *)v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v118 = (char *)v97 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v116 = (char *)v97 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v101 = (uint64_t)v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v97 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)v97 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B30);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24EE557D0();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v106 = (char *)v97 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)v97 - v40;
  sub_24EC884D4(a1, (uint64_t)v32, &qword_26B1DB9F0);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v43 = v42(v32, 1, v18);
  uint64_t v119 = v19;
  uint64_t v120 = v18;
  if (v43 == 1)
  {
    sub_24EC88758((uint64_t)v32, &qword_26B1DB9F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1, v36);
LABEL_4:
    uint64_t v45 = v116;
    sub_24EE55870();
    sub_24EE557C0();
    uint64_t v47 = v119;
    uint64_t v46 = v120;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v119 + 8);
    v44(v45, v120);
    sub_24EC88758((uint64_t)v35, &qword_269964B30);
    goto LABEL_6;
  }
  sub_24EE557C0();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v19 + 8);
  v44(v32, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v35, v36);
  uint64_t v47 = v119;
  uint64_t v46 = v120;
LABEL_6:
  uint64_t v105 = sub_24ECB06F4(&qword_269964B38, MEMORY[0x263F066D8]);
  uint64_t v103 = sub_24EE570D0();
  uint64_t v102 = v48;
  uint64_t v49 = v104;
  sub_24EC884D4(v104, (uint64_t)v29, &qword_26B1DB9F0);
  if (v42(v29, 1, v46) == 1)
  {
    sub_24EE557E0();
    sub_24EC88758((uint64_t)v29, &qword_26B1DB9F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v118, v29, v46);
  }
  uint64_t v50 = v49;
  uint64_t v51 = v101;
  sub_24EC884D4(v50, v101, &qword_26B1DB9F0);
  int v52 = v42((char *)v51, 1, v46);
  uint64_t v107 = v36;
  uint64_t v117 = v44;
  if (v52 == 1)
  {
    sub_24EC88758(v51, &qword_26B1DB9F0);
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    LODWORD(v116) = 255;
  }
  else
  {
    uint64_t v57 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v108, v51, v46);
    char v58 = (*(uint64_t (**)(uint64_t, uint64_t))(a11 + 40))(v98, a11);
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v116, v57, v46);
    uint64_t v59 = sub_24EE56660();
    uint64_t v61 = v60;
    char v63 = v62;
    uint64_t v64 = (void (**)(char *, void, uint64_t))(v97[0] + 104);
    uint64_t v65 = (void (**)(char *, uint64_t))(v97[0] + 8);
    if (v58)
    {
      sub_24EE56580();
      sub_24EE56570();
      swift_release();
      uint64_t v66 = v99;
      uint64_t v67 = v100;
      (*v64)(v99, *MEMORY[0x263F1A680], v100);
      sub_24EE565C0();
      swift_release();
      (*v65)(v66, v67);
      uint64_t v68 = sub_24EE56650();
      uint64_t v70 = v69;
      char v72 = v71;
      uint64_t v74 = v73;
      swift_release();
      sub_24EC8AAA0(v59, v61, v63 & 1);
      swift_bridgeObjectRelease();
      uint64_t v121 = v68;
      uint64_t v122 = v70;
      uint64_t v123 = v72 & 1;
      uint64_t v124 = v74;
      char v125 = 0;
    }
    else
    {
      sub_24EE56550();
      sub_24EE56570();
      swift_release();
      uint64_t v75 = v99;
      uint64_t v76 = v100;
      (*v64)(v99, *MEMORY[0x263F1A680], v100);
      sub_24EE565C0();
      swift_release();
      (*v65)(v75, v76);
      char v77 = v63 & 1;
      uint64_t v78 = sub_24EE56650();
      uint64_t v80 = v79;
      char v82 = v81;
      uint64_t v84 = v83;
      swift_release();
      sub_24EC8AAA0(v59, v61, v77);
      swift_bridgeObjectRelease();
      uint64_t v121 = v78;
      uint64_t v122 = v80;
      uint64_t v123 = v82 & 1;
      uint64_t v124 = v84;
      char v125 = 1;
    }
    sub_24EE56230();
    uint64_t v53 = v126;
    uint64_t v54 = v127;
    uint64_t v55 = v128;
    uint64_t v56 = v129;
    LODWORD(v116) = v130;
    v117(v108, v120);
  }
  uint64_t v85 = swift_allocObject();
  uint64_t v86 = v102;
  *(void *)(v85 + 16) = v103;
  *(void *)(v85 + 24) = v86;
  uint64_t v87 = v118;
  sub_24EE557C0();
  uint64_t v88 = sub_24EE570D0();
  uint64_t v90 = v89;
  uint64_t v91 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v111, v112, v110);
  uint64_t v92 = v113;
  sub_24ECB02E4((uint64_t)sub_24ECB0774, v85, 3, 0, v88, v90, v91, (uint64_t)nullsub_1, v113, 0, (uint64_t)nullsub_1, 0);
  uint64_t v93 = v114;
  sub_24EC884D4(v92, v114, &qword_269964B28);
  uint64_t v94 = v115;
  uint64_t *v115 = v53;
  v94[1] = v54;
  v94[2] = v55;
  v94[3] = v56;
  LOBYTE(v91) = (_BYTE)v116;
  *((unsigned char *)v94 + 32) = (_BYTE)v116;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B40);
  sub_24EC884D4(v93, (uint64_t)v94 + *(int *)(v95 + 48), &qword_269964B28);
  sub_24ECB077C(v53, v54, v55, v56, v91);
  sub_24EC88758(v92, &qword_269964B28);
  v117(v87, v120);
  sub_24EC88758(v93, &qword_269964B28);
  return sub_24ECB07D0(v53, v54, v55, v56, v91);
}

uint64_t sub_24ECB0290()
{
  return sub_24EE56670();
}

uint64_t sub_24ECB02E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269964B28);
  uint64_t v20 = (uint64_t *)(a9 + v19[9]);
  uint64_t *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a9 + v19[10];
  type metadata accessor for CGSize(0);
  sub_24EE56B30();
  *(_OWORD *)uint64_t v21 = v33;
  *(void *)(v21 + 16) = v34;
  uint64_t v22 = a9 + v19[11];
  sub_24EE56B30();
  *(_OWORD *)uint64_t v22 = v33;
  *(void *)(v22 + 16) = v34;
  uint64_t v23 = a9 + v19[12];
  sub_24EE56B30();
  *(unsigned char *)uint64_t v23 = v33;
  *(void *)(v23 + 8) = *((void *)&v33 + 1);
  *(void *)a9 = a3;
  *(unsigned char *)(a9 + 8) = a4 & 1;
  uint64_t v24 = (void *)(a9 + v19[13]);
  *uint64_t v24 = a1;
  v24[1] = a2;
  uint64_t v25 = (void *)(a9 + v19[14]);
  void *v25 = a5;
  v25[1] = a6;
  uint64_t v26 = a9 + v19[15];
  uint64_t v27 = sub_24EE55960();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a7, v27);
  uint64_t v29 = (void *)(a9 + v19[16]);
  void *v29 = a8;
  v29[1] = a10;
  uint64_t v30 = (void *)(a9 + v19[17]);
  *uint64_t v30 = a11;
  v30[1] = a12;
  return result;
}

uint64_t sub_24ECB04CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ECB0534(uint64_t a1)
{
  return sub_24EE3A940(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24ECB0554()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24ECB05E8()
{
  return sub_24EE55A40();
}

uint64_t sub_24ECB064C@<X0>(uint64_t a1@<X8>)
{
  return sub_24ECAF684(*(void *)(v1 + 16), a1);
}

uint64_t sub_24ECB0654@<X0>(uint64_t a1@<X8>)
{
  return sub_24ECAEC90(v1[16], v1[17], v1[18], v1[2], v1[3], v1[4], a1, v1[7], v1[8], v1[9], v1[10], v1[11]);
}

uint64_t sub_24ECB06A4(uint64_t a1)
{
  return sub_24ECAEB0C(a1, *(void (**)(char *))(v1 + 128));
}

uint64_t sub_24ECB06F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ECB073C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24ECB0774()
{
  return sub_24ECB0290();
}

uint64_t sub_24ECB077C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_24ECB0794(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24ECB0794(uint64_t a1, uint64_t a2, char a3)
{
  sub_24EC8A97C(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24ECB07D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_24ECB07E8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24ECB07E8(uint64_t a1, uint64_t a2, char a3)
{
  sub_24EC8AAA0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24ECB082C()
{
  unint64_t result = qword_269964B50;
  if (!qword_269964B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964B50);
  }
  return result;
}

uint64_t sub_24ECB0880(uint64_t a1)
{
  return sub_24ECB0534(a1);
}

uint64_t dispatch thunk of static CanvasActionButtonDescriptorProtocol.placeholder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

BOOL sub_24ECB08AC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24ECB08BC()
{
  return sub_24EE57880();
}

uint64_t sub_24ECB08E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F436E6D756C6F63 && a2 == 0xEB00000000746E75;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x46797469736E6564 && a2 == 0xED0000726F746361)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ECB0A14(char a1)
{
  if (a1) {
    return 0x46797469736E6564;
  }
  else {
    return 0x6F436E6D756C6F63;
  }
}

uint64_t sub_24ECB0A60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ECB0B4C()
{
  return sub_24EE578B0();
}

uint64_t sub_24ECB0B94(char a1)
{
  if (a1) {
    return 0x676E6963617073;
  }
  else {
    return 0x746E756F63;
  }
}

uint64_t sub_24ECB0BC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_24ECB0C38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24ECB08AC(*a1, *a2);
}

uint64_t sub_24ECB0C4C()
{
  return sub_24ECB0B4C();
}

uint64_t sub_24ECB0C70()
{
  return sub_24ECB08BC();
}

uint64_t sub_24ECB0C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24ECB0DC4(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24ECB08BC);
}

uint64_t sub_24ECB0C98()
{
  return sub_24ECB0A14(*v0);
}

uint64_t sub_24ECB0CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECB08E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ECB0CD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ECB370C();
  *a1 = result;
  return result;
}

uint64_t sub_24ECB0D04(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECB0D58(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECB0DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24ECB0DC4(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24ECB3714);
}

uint64_t sub_24ECB0DC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_24EE57870();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_24EE578B0();
}

uint64_t sub_24ECB0E1C()
{
  return sub_24ECB0B94(*v0);
}

uint64_t sub_24ECB0E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECB0A60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ECB0E5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECB0EB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECB0F04()
{
  return 1;
}

uint64_t sub_24ECB0F0C()
{
  return sub_24EE578B0();
}

uint64_t sub_24ECB0F50()
{
  return sub_24EE57880();
}

uint64_t sub_24ECB0F78()
{
  return sub_24EE578B0();
}

uint64_t sub_24ECB0FB8()
{
  return 12383;
}

uint64_t sub_24ECB0FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECB0BC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24ECB0FF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ECB0F04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24ECB1028(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECB107C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CanvasVerticalGridLayout.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v40 = type metadata accessor for CanvasVerticalGridLayout.DensityFactorCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = sub_24EE577C0();
  uint64_t v34 = *(void *)(v43 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v43);
  uint64_t v39 = (char *)v33 - v7;
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CanvasVerticalGridLayout.ColumnCountCodingKeys();
  v33[1] = swift_getWitnessTable();
  v33[2] = v9;
  uint64_t v36 = sub_24EE577C0();
  v33[0] = *(void *)(v36 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v36);
  uint64_t v35 = (char *)v33 - v11;
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v4;
  uint64_t v42 = v5;
  type metadata accessor for CanvasVerticalGridLayout.CodingKeys();
  swift_getWitnessTable();
  uint64_t v15 = sub_24EE577C0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v33 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EE578D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v48, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v41;
    uint64_t v20 = v38;
    uint64_t v21 = v14;
    uint64_t v22 = v44;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v21, v44);
    char v53 = 1;
    uint64_t v23 = v39;
    uint64_t v24 = v45;
    sub_24EE57740();
    uint64_t v25 = v43;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v25);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v24);
  }
  else
  {
    uint64_t v27 = v33[0];
    uint64_t v28 = *((void *)v14 + 1);
    char v52 = 0;
    uint64_t v29 = v35;
    uint64_t v30 = v45;
    sub_24EE57740();
    char v51 = 0;
    uint64_t v31 = v36;
    uint64_t v32 = v47;
    sub_24EE577A0();
    if (!v32)
    {
      uint64_t v50 = v28;
      char v49 = 1;
      sub_24ECB1664();
      sub_24EE577B0();
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v30);
  }
}

uint64_t type metadata accessor for CanvasVerticalGridLayout.DensityFactorCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CanvasVerticalGridLayout.ColumnCountCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CanvasVerticalGridLayout.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24ECB1664()
{
  unint64_t result = qword_26B1DBA18;
  if (!qword_26B1DBA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DBA18);
  }
  return result;
}

uint64_t CanvasVerticalGridLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  char v52 = a4;
  uint64_t v7 = type metadata accessor for CanvasVerticalGridLayout.DensityFactorCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = v7;
  uint64_t v56 = sub_24EE57730();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v65 = (char *)&v47 - v8;
  uint64_t v9 = type metadata accessor for CanvasVerticalGridLayout.ColumnCountCodingKeys();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = v9;
  uint64_t v54 = sub_24EE57730();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  char v62 = (char *)&v47 - v10;
  type metadata accessor for CanvasVerticalGridLayout.CodingKeys();
  swift_getWitnessTable();
  uint64_t v66 = sub_24EE57730();
  uint64_t v63 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v67 = a2;
  uint64_t v57 = a3;
  uint64_t v13 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (uint64_t *)((char *)&v47 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = a1[3];
  uint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  uint64_t v64 = v12;
  uint64_t v23 = v69;
  sub_24EE578C0();
  if (!v23)
  {
    uint64_t v50 = v16;
    uint64_t v48 = v19;
    uint64_t v24 = v65;
    char v49 = v21;
    uint64_t v69 = v13;
    uint64_t v25 = v66;
    uint64_t v26 = v64;
    *(void *)&long long v70 = sub_24EE57720();
    sub_24EE571B0();
    swift_getWitnessTable();
    *(void *)&long long v72 = sub_24EE57480();
    *((void *)&v72 + 1) = v27;
    *(void *)&long long v73 = v28;
    *((void *)&v73 + 1) = v29;
    sub_24EE57470();
    swift_getWitnessTable();
    sub_24EE573A0();
    char v30 = v70;
    if (v70 == 2 || (long long v47 = v72, v70 = v72, v71 = v73, (sub_24EE573C0() & 1) == 0))
    {
      uint64_t v33 = sub_24EE57560();
      swift_allocError();
      uint64_t v35 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
      *uint64_t v35 = v69;
      sub_24EE576A0();
      sub_24EE57550();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v25);
    }
    else
    {
      if (v30)
      {
        LOBYTE(v70) = 1;
        uint64_t v37 = v24;
        sub_24EE57690();
        uint64_t v38 = v50;
        uint64_t v39 = v56;
        sub_24EE57710();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v39);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v25);
        uint64_t v44 = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        uint64_t v46 = v49;
        v45(v49, v38, v44);
      }
      else
      {
        LOBYTE(v70) = 0;
        uint64_t v31 = v62;
        sub_24EE57690();
        LOBYTE(v70) = 0;
        uint64_t v32 = v54;
        uint64_t v40 = sub_24EE57700();
        char v74 = 1;
        sub_24ECB1F14();
        sub_24EE57710();
        uint64_t v41 = v63;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v32);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v25);
        uint64_t v42 = v70;
        uint64_t v43 = v48;
        *uint64_t v48 = v40;
        v43[1] = v42;
        uint64_t v44 = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        uint64_t v46 = v49;
        v45(v49, (char *)v43, v44);
      }
      v45(v52, v46, v44);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

uint64_t type metadata accessor for CanvasVerticalGridLayout()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24ECB1F14()
{
  unint64_t result = qword_269964B60[0];
  if (!qword_269964B60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269964B60);
  }
  return result;
}

uint64_t sub_24ECB1F68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return CanvasVerticalGridLayout.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24ECB1F88(void *a1, uint64_t a2)
{
  return CanvasVerticalGridLayout.encode(to:)(a1, a2);
}

uint64_t CanvasVerticalGridLayout.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, v11, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_24EE57880();
    sub_24EE57000();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    sub_24EE57880();
    sub_24EE57880();
    return sub_24EE578A0();
  }
}

uint64_t static CanvasVerticalGridLayout.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v27 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  v26[0] = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = v5;
  uint64_t v6 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)((char *)v26 - v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = (double *)((char *)v26 + *(int *)(v15 + 48) - v16);
  uint64_t v28 = v7;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19((char *)v26 - v16, v29, v6);
  v19((char *)v18, v30, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19(v10, (uint64_t)v17, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = v27;
      uint64_t v21 = (char *)v26[0];
      (*(void (**)(void, double *, uint64_t))(v27 + 32))(v26[0], v18, a3);
      char v22 = sub_24EE57040();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v20 + 8);
      v23(v21, a3);
      v23(v10, a3);
LABEL_10:
      uint64_t v14 = v28;
      TupleTypeMetadata2 = v6;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, a3);
  }
  else
  {
    v19((char *)v12, (uint64_t)v17, v6);
    double v24 = v12[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v22 = *(void *)v12 == *(void *)v18 && v24 == v18[1];
      goto LABEL_10;
    }
  }
  char v22 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, TupleTypeMetadata2);
  return v22 & 1;
}

uint64_t CanvasVerticalGridLayout.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  CanvasVerticalGridLayout.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ECB2530(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  CanvasVerticalGridLayout.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ECB2574()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB2590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CanvasVerticalGridLayout.== infix(_:_:)(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_24ECB259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24ECB25A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_24ECB263C(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(_OWORD *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_24ECB27B4(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

_OWORD *sub_24ECB28B0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_24ECB29E8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

_OWORD *sub_24ECB2BF4(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_24ECB2D2C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_24ECB2F38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_24ECB306C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24ECB3234);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24ECB325C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_24ECB3314(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_24ECB33EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *sub_24ECB33FC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECB34C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkClipShape.RoundedRectangleCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_24ECB3544(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ECB35E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECB3608()
{
  return 0;
}

uint64_t sub_24ECB3610()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB362C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB3648()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB3664()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB3680()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB369C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB36B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB36D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB36F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECB370C()
{
  return 2;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CanvasLazyFetcherError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CanvasLazyFetcherError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

uint64_t sub_24ECB37A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24ECB37C4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 24) = 1;
  }
  else
  {
    *(unsigned char *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasLazyFetcherError()
{
  return &type metadata for CanvasLazyFetcherError;
}

uint64_t sub_24ECB37F8()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return self;
}

id sub_24ECB382C()
{
  type metadata accessor for LocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_269977F80 = (uint64_t)result;
  return result;
}

uint64_t dispatch thunk of CanvasLayoutProviding.transform(currentLayout:updatingSizeClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CanvasLayoutProviding.transform(currentLayout:updatingDynamicTypeSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_24ECB38AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32))(a9, a1, a16);
  uint64_t v23 = (int *)type metadata accessor for LargeBrickView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a17 - 8) + 32))(a9 + v23[17], a2, a17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a18 - 8) + 32))(a9 + v23[18], a3, a18);
  double v24 = (void *)(a9 + v23[19]);
  *double v24 = a4;
  v24[1] = a5;
  v24[2] = a6;
  v24[3] = a7;
  uint64_t v25 = a9 + v23[21];
  *(void *)uint64_t v25 = a8;
  *(_OWORD *)(v25 + 8) = a10;
  *(void *)(v25 + 24) = a11;
  uint64_t v26 = a9 + v23[22];
  *(_OWORD *)uint64_t v26 = a12;
  *(void *)(v26 + 16) = a13;
  *(void *)(v26 + 24) = a14;
  uint64_t v27 = a9 + v23[20];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a15, v28);
}

uint64_t LargeBrickView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_24EE55E40();
  uint64_t v43 = v3;
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(a1 - 1);
  uint64_t v54 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  unsigned int v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[2];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CE8);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF0);
  uint64_t v72 = MEMORY[0x263F1B6B0];
  uint64_t v53 = a1[3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v73 = sub_24EE56BC0();
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  uint64_t v52 = a1[4];
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v10 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = MEMORY[0x263F198F8];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v66 = v11;
  uint64_t v67 = v12;
  uint64_t v50 = v10;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v13 = sub_24EE56BA0();
  uint64_t v44 = v13;
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v45 = (char *)&v39 - v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v42 = v15;
  uint64_t v41 = sub_24ECB9334(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v70 = v13;
  uint64_t v71 = v3;
  uint64_t v72 = v15;
  uint64_t v73 = v41;
  uint64_t v46 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v39 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v40 = (char *)&v39 - v18;
  uint64_t v19 = v6;
  (*(void (**)(char *, uint64_t, void *))(v6 + 16))(v8, v58, a1);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v53;
  *((void *)v21 + 2) = v9;
  *((void *)v21 + 3) = v22;
  uint64_t v23 = a1;
  uint64_t v24 = a1[5];
  uint64_t v25 = v23[6];
  uint64_t v26 = v23[7];
  uint64_t v27 = v52;
  *((void *)v21 + 4) = v52;
  *((void *)v21 + 5) = v24;
  *((void *)v21 + 6) = v25;
  *((void *)v21 + 7) = v26;
  (*(void (**)(char *, char *))(v19 + 32))(&v21[v20], v8);
  uint64_t v59 = v9;
  uint64_t v60 = v22;
  uint64_t v61 = v27;
  uint64_t v62 = v24;
  uint64_t v63 = v25;
  uint64_t v64 = v26;
  uint64_t v65 = v58;
  uint64_t v28 = v45;
  sub_24EE56B90();
  uint64_t v29 = v55;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v30 = v39;
  uint64_t v31 = v44;
  uint64_t v32 = v43;
  uint64_t v33 = v42;
  uint64_t v34 = v41;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v32);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v31);
  uint64_t v70 = v31;
  uint64_t v71 = v32;
  uint64_t v72 = v33;
  uint64_t v73 = v34;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v40;
  uint64_t v36 = OpaqueTypeMetadata2;
  sub_24EC90894(v30);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v48 + 8);
  v37(v30, v36);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v35, v36);
}

uint64_t sub_24ECB42C8()
{
  return sub_24EE55A40();
}

uint64_t type metadata accessor for LargeBrickView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ECB433C()
{
  type metadata accessor for LargeBrickView();
  return sub_24ECB42C8();
}

uint64_t sub_24ECB43F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v39 = a7;
  uint64_t v38 = a6;
  uint64_t v37 = a5;
  uint64_t v36 = a1;
  uint64_t v40 = a8;
  uint64_t v35 = sub_24EE55E90();
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v59 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CE8);
  *((void *)&v59 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF0);
  *(void *)&long long v60 = MEMORY[0x263F1B6B0];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  *((void *)&v60 + 1) = sub_24EE56BC0();
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  uint64_t v33 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v12 = sub_24EE55DD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = v37;
  uint64_t v45 = v38;
  uint64_t v46 = v39;
  uint64_t v47 = v36;
  sub_24EE56DA0();
  sub_24EE56C40();
  long long v57 = v52;
  long long v58 = v53;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56700();
  swift_release();
  long long v52 = v59;
  long long v53 = v60;
  uint64_t v54 = v61;
  char v55 = v62;
  char v56 = v63;
  unint64_t v20 = v34;
  uint64_t v21 = &v34[*(int *)(v35 + 20)];
  uint64_t v22 = *MEMORY[0x263F19860];
  uint64_t v23 = sub_24EE560D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #4.0 }
  _OWORD *v20 = _Q0;
  uint64_t v50 = WitnessTable;
  uint64_t v51 = MEMORY[0x263F198F8];
  uint64_t v29 = swift_getWitnessTable();
  sub_24ECB9334(&qword_26B1DE300, MEMORY[0x263F19048]);
  sub_24EE56A50();
  sub_24ECB9178((uint64_t)v20);
  swift_release();
  uint64_t v30 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v48 = v29;
  uint64_t v49 = v30;
  swift_getWitnessTable();
  sub_24EC90894(v16);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  v31(v16, v12);
  sub_24EC90894(v18);
  return ((uint64_t (*)(char *, uint64_t))v31)(v18, v12);
}

uint64_t sub_24ECB4A40()
{
  return sub_24ECB9308((uint64_t (*)(void, void, void, void, void, void, void))sub_24ECB43F8);
}

uint64_t sub_24ECB4A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v23 = a8;
  uint64_t v24 = a2;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v13 = type metadata accessor for LargeBrickView();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v24;
  *((void *)v18 + 3) = a3;
  *((void *)v18 + 4) = v22;
  *((void *)v18 + 5) = a5;
  *((void *)v18 + 6) = a6;
  *((void *)v18 + 7) = a7;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CE8);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF0);
  uint64_t v29 = MEMORY[0x263F1B6B0];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v30 = sub_24EE56BC0();
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v25 = sub_24EE55CF0();
  uint64_t v26 = v19;
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EC90894(&v25);
  swift_release();
  uint64_t v25 = v27;
  uint64_t v26 = v28;
  sub_24EC90894(&v25);
  return swift_release();
}

uint64_t sub_24ECB4E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v48 = a8;
  uint64_t v47 = a7;
  uint64_t v50 = a6;
  uint64_t v44 = a5;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v49 = a9;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CE8);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF0);
  uint64_t v64 = MEMORY[0x263F1B6B0];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v65 = sub_24EE56BC0();
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata3();
  uint64_t v41 = sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v11 = sub_24EE56BC0();
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_24EE55DD0();
  uint64_t v43 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v40 = (char *)&v37 - v19;
  uint64_t v20 = a3;
  uint64_t v38 = a3;
  uint64_t v21 = *(void *)(a3 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v18);
  uint64_t v39 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v37 - v24;
  uint64_t v37 = (char *)&v37 - v24;
  uint64_t v26 = v50;
  sub_24EC90894(a2);
  uint64_t v51 = v20;
  uint64_t v52 = v45;
  uint64_t v53 = v44;
  uint64_t v54 = v26;
  uint64_t v55 = v47;
  uint64_t v56 = v48;
  uint64_t v57 = a2;
  uint64_t v58 = v46;
  sub_24EE560C0();
  sub_24EE56BB0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE569C0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v11);
  v61[2] = WitnessTable;
  v61[3] = MEMORY[0x263F18C10];
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v40;
  sub_24EC90894(v17);
  uint64_t v30 = v43;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v43 + 8);
  v31(v17, v14);
  uint64_t v32 = v39;
  uint64_t v33 = v25;
  uint64_t v34 = v38;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v39, v33, v38);
  uint64_t v62 = (uint64_t)v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v17, v29, v14);
  uint64_t v63 = (uint64_t)v17;
  v61[0] = v34;
  v61[1] = v14;
  uint64_t v59 = v50;
  uint64_t v60 = v28;
  sub_24EDCC8A0((uint64_t)&v62, 2uLL, (uint64_t)v61);
  v31(v29, v14);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v21 + 8);
  v35(v37, v34);
  v31(v17, v14);
  return ((uint64_t (*)(char *, uint64_t))v35)(v32, v34);
}

uint64_t sub_24ECB5420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v56 = a8;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v59 = a1;
  uint64_t v55 = a3;
  uint64_t v45 = a2;
  uint64_t v52 = a9;
  uint64_t v11 = (char *)MEMORY[0x263F1B6B0];
  uint64_t v43 = a5;
  swift_getTupleTypeMetadata2();
  uint64_t v50 = sub_24EE56E20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v48 = sub_24EE56C30();
  uint64_t v51 = *(void *)(v48 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v48);
  uint64_t v46 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v47 = (char *)&v38 - v14;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CE8);
  uint64_t v83 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF0);
  uint64_t v84 = v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  uint64_t v42 = a4;
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v85 = sub_24EE56BC0();
  swift_getTupleTypeMetadata();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v15 = sub_24EE56C30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = sub_24EE55DD0();
  uint64_t v54 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v53 = (char *)&v38 - v23;
  sub_24EE56140();
  uint64_t v67 = v55;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v70 = v57;
  uint64_t v71 = v58;
  uint64_t v72 = v56;
  uint64_t v73 = v59;
  sub_24EE56C20();
  sub_24EE55C00();
  sub_24EE56DA0();
  uint64_t v40 = MEMORY[0x263F1B6E0];
  uint64_t v24 = swift_getWitnessTable();
  sub_24EE56970();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v80 = v24;
  uint64_t v81 = MEMORY[0x263F18860];
  uint64_t v25 = v19;
  uint64_t v39 = v19;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v26 = v53;
  uint64_t v27 = v22;
  sub_24EC90894(v22);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v45 = v54 + 8;
  v44(v22, v25);
  uint64_t v60 = v55;
  uint64_t v61 = v42;
  uint64_t v62 = v43;
  uint64_t v63 = v57;
  uint64_t v64 = v58;
  uint64_t v65 = v56;
  uint64_t v66 = v59;
  sub_24EE56130();
  uint64_t v28 = v46;
  sub_24EE56C20();
  uint64_t v29 = v48;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = v47;
  sub_24EC90894(v28);
  uint64_t v32 = v51;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
  v33(v28, v29);
  uint64_t v34 = v26;
  uint64_t v35 = v39;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v27, v34, v39);
  uint64_t v78 = 0;
  char v79 = 0;
  uint64_t v82 = (uint64_t)v27;
  uint64_t v83 = &v78;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v28, v31, v29);
  uint64_t v84 = v28;
  v77[0] = v35;
  v77[1] = MEMORY[0x263F1B6B0];
  v77[2] = v29;
  uint64_t v74 = v41;
  uint64_t v75 = MEMORY[0x263F1B698];
  uint64_t v76 = v30;
  sub_24EDCC8A0((uint64_t)&v82, 3uLL, (uint64_t)v77);
  v33(v31, v29);
  uint64_t v36 = (uint64_t (*)(char *, uint64_t))v44;
  v44(v53, v35);
  v33(v28, v29);
  return v36(v27, v35);
}

uint64_t sub_24ECB5A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v44 = a7;
  uint64_t v43 = a6;
  uint64_t v51 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964CF8);
  swift_getTupleTypeMetadata3();
  uint64_t v48 = (void (*)(char *, uint64_t))sub_24EE56E20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = sub_24EE56BC0();
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v47);
  uint64_t v41 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v42 = (char *)&v40 - v15;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964CF0);
  uint64_t v16 = MEMORY[0x270FA5388](v50);
  uint64_t v53 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964CE8);
  uint64_t v20 = MEMORY[0x270FA5388](v45);
  uint64_t v52 = (uint64_t)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v40 - v22;
  *(void *)uint64_t v23 = sub_24EE560C0();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D00);
  uint64_t v25 = a4;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a5;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  sub_24ECB5F9C(a1, a2, a3, v26, v28, v43, v44, &v23[*(int *)(v24 + 44)]);
  *(void *)uint64_t v19 = sub_24EE560C0();
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D08);
  sub_24ECB65E0(a1, a2, a3, v25, v27, v29, v30, &v19[*(int *)(v31 + 44)]);
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v56 = v25;
  uint64_t v57 = v27;
  uint64_t v58 = v29;
  uint64_t v59 = v30;
  uint64_t v60 = a1;
  sub_24EE560C0();
  uint64_t v32 = v41;
  sub_24EE56BB0();
  uint64_t v33 = v47;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = v42;
  sub_24EC90894(v32);
  uint64_t v35 = v49;
  uint64_t v48 = *(void (**)(char *, uint64_t))(v49 + 8);
  v48(v32, v33);
  uint64_t v36 = v52;
  sub_24EC884D4((uint64_t)v23, v52, &qword_269964CE8);
  v68[0] = v36;
  uint64_t v37 = v53;
  sub_24EC884D4((uint64_t)v19, v53, &qword_269964CF0);
  uint64_t v66 = 0x4024000000000000;
  char v67 = 0;
  v68[1] = v37;
  v68[2] = &v66;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v34, v33);
  v68[3] = v32;
  v65[0] = v45;
  v65[1] = v50;
  v65[2] = MEMORY[0x263F1B6B0];
  v65[3] = v33;
  uint64_t v61 = sub_24EC8C218(&qword_269964D10, &qword_269964CE8);
  uint64_t v62 = sub_24EC8C218(&qword_269964D18, &qword_269964CF0);
  uint64_t v63 = MEMORY[0x263F1B698];
  uint64_t v64 = WitnessTable;
  sub_24EDCC8A0((uint64_t)v68, 4uLL, (uint64_t)v65);
  uint64_t v38 = v48;
  v48(v34, v33);
  sub_24EC88758((uint64_t)v19, &qword_269964CF0);
  sub_24EC88758((uint64_t)v23, &qword_269964CE8);
  v38(v32, v33);
  sub_24EC88758(v53, &qword_269964CF0);
  return sub_24EC88758(v52, &qword_269964CE8);
}

uint64_t sub_24ECB5F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t KeyPath = a2;
  uint64_t v65 = a3;
  uint64_t v58 = a8;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D20);
  MEMORY[0x270FA5388](v57);
  uint64_t v68 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D80) - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (uint64_t *)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_24EE56600();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D88) - 8;
  MEMORY[0x270FA5388](v63);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964DD0);
  MEMORY[0x270FA5388](v62);
  char v67 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964DD8);
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v54 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v53 = (char *)&v52 - v26;
  uint64_t v69 = KeyPath;
  uint64_t v70 = v65;
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v73 = a6;
  uint64_t v74 = a7;
  uint64_t v27 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LargeBrickView() + 88));
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  uint64_t v31 = v27[2];
  uint64_t v30 = v27[3];
  sub_24EC8BFE0(*v27, v29, v31, v30);
  LODWORD(v65) = sub_24EE56320();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = swift_getKeyPath();
  uint64_t v32 = *MEMORY[0x263F1A7A0];
  uint64_t v60 = v16;
  uint64_t v61 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v32, v16);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = *(int *)(v14 + 36);
  uint64_t v35 = v66;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)v66 + v34, v19, v16);
  *uint64_t v35 = v33;
  uint64_t v36 = v62;
  sub_24EC884D4((uint64_t)v35, (uint64_t)&v21[*(int *)(v63 + 44)], &qword_269964D80);
  *(void *)uint64_t v21 = v28;
  *((void *)v21 + 1) = v29;
  *((void *)v21 + 2) = v31;
  *((void *)v21 + 3) = v30;
  *((_DWORD *)v21 + 8) = v65;
  *((void *)v21 + 5) = KeyPath;
  *((void *)v21 + 6) = 4;
  v21[56] = 0;
  *((void *)v21 + 8) = v59;
  v21[72] = 0;
  sub_24EC8BFE0(v28, v29, v31, v30);
  swift_retain();
  swift_retain();
  sub_24EC88758((uint64_t)v35, &qword_269964D80);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v60);
  uint64_t v37 = v28;
  char v38 = v31;
  uint64_t v40 = (uint64_t)v67;
  uint64_t v39 = (uint64_t)v68;
  sub_24ECB9668(v37, v29, v38, v30);
  swift_release();
  swift_release();
  sub_24EC884D4((uint64_t)v21, v40, &qword_269964D88);
  *(void *)(v40 + *(int *)(v36 + 36)) = 0x4000000000000000;
  sub_24EC88758((uint64_t)v21, &qword_269964D88);
  uint64_t v41 = *MEMORY[0x263F18D10];
  uint64_t v42 = sub_24EE55D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v39, v41, v42);
  sub_24ECB9334((unint64_t *)&qword_2699649E8, MEMORY[0x263F18D80]);
  uint64_t result = sub_24EE57040();
  if (result)
  {
    sub_24ECB9894();
    sub_24EC8C218(&qword_269964D78, &qword_269964D20);
    uint64_t v44 = v54;
    sub_24EE56800();
    sub_24EC88758(v39, &qword_269964D20);
    sub_24EC88758(v40, &qword_269964DD0);
    uint64_t v46 = v55;
    uint64_t v45 = v56;
    uint64_t v47 = v53;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v53, v44, v56);
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v48(v44, v47, v45);
    uint64_t v49 = v58;
    v48(v58, v44, v45);
    uint64_t v50 = &v49[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964DE8) + 48)];
    *(void *)uint64_t v50 = 0;
    v50[8] = 0;
    uint64_t v51 = *(void (**)(char *, uint64_t))(v46 + 8);
    v51(v47, v45);
    return ((uint64_t (*)(char *, uint64_t))v51)(v44, v45);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24ECB65E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t KeyPath = a2;
  uint64_t v57 = a3;
  uint64_t v53 = a8;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D20);
  MEMORY[0x270FA5388](v52);
  uint64_t v59 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D80) - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v58 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_24EE56600();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D88);
  MEMORY[0x270FA5388](v60);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D90);
  uint64_t v50 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v49 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v48 = (char *)&v48 - v25;
  uint64_t v61 = KeyPath;
  uint64_t v62 = v57;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  uint64_t v65 = a6;
  uint64_t v66 = a7;
  uint64_t v26 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LargeBrickView() + 84));
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v29 = v26[2];
  uint64_t v30 = v26[3];
  sub_24EC8BFE0(*v26, v27, v29, v30);
  LODWORD(v57) = sub_24EE56320();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v54 = swift_getKeyPath();
  uint64_t v31 = *MEMORY[0x263F1A7A0];
  uint64_t v55 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v31, v16);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = *(int *)(v14 + 36);
  uint64_t v34 = v58;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)v58 + v33, v19, v16);
  uint64_t *v34 = v32;
  sub_24EC884D4((uint64_t)v34, (uint64_t)&v21[*(int *)(v60 + 36)], &qword_269964D80);
  *(void *)uint64_t v21 = v28;
  *((void *)v21 + 1) = v27;
  *((void *)v21 + 2) = v29;
  *((void *)v21 + 3) = v30;
  *((_DWORD *)v21 + 8) = v57;
  *((void *)v21 + 5) = KeyPath;
  *((void *)v21 + 6) = 3;
  v21[56] = 0;
  *((void *)v21 + 8) = v54;
  v21[72] = 0;
  sub_24EC8BFE0(v28, v27, v29, v30);
  swift_retain();
  swift_retain();
  sub_24EC88758((uint64_t)v34, &qword_269964D80);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v16);
  char v35 = v29;
  uint64_t v36 = (uint64_t)v59;
  sub_24ECB9668(v28, v27, v35, v30);
  swift_release();
  swift_release();
  uint64_t v37 = *MEMORY[0x263F18D10];
  uint64_t v38 = sub_24EE55D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  sub_24ECB9334((unint64_t *)&qword_2699649E8, MEMORY[0x263F18D80]);
  uint64_t result = sub_24EE57040();
  if (result)
  {
    sub_24ECB96B4();
    sub_24EC8C218(&qword_269964D78, &qword_269964D20);
    uint64_t v40 = v49;
    sub_24EE56800();
    sub_24EC88758(v36, &qword_269964D20);
    sub_24EC88758((uint64_t)v21, &qword_269964D88);
    uint64_t v42 = v50;
    uint64_t v41 = v51;
    uint64_t v43 = v48;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v48, v40, v51);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v44(v40, v43, v41);
    uint64_t v45 = v53;
    v44(v53, v40, v41);
    uint64_t v46 = &v45[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964DC8) + 48)];
    *(void *)uint64_t v46 = 0;
    v46[8] = 0;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
    v47(v43, v41);
    return ((uint64_t (*)(char *, uint64_t))v47)(v40, v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24ECB6B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v61 = a8;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D20);
  MEMORY[0x270FA5388](v56);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964CF8);
  uint64_t v57 = *(void *)(v60 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v60);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v54 = (char *)&v49 - v21;
  uint64_t v58 = *(void *)(a3 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v55 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  unint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v73 = a6;
  uint64_t v74 = a7;
  uint64_t v26 = type metadata accessor for LargeBrickView();
  uint64_t v27 = a1 + *(int *)(v26 + 68);
  uint64_t v53 = v25;
  uint64_t v28 = a3;
  uint64_t v59 = a6;
  sub_24EC90894(v27);
  uint64_t v29 = (uint64_t *)(a1 + *(int *)(v26 + 76));
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v32 = v29[2];
  uint64_t v33 = v29[3];
  sub_24EC8BFE0(*v29, v31, v32, v33);
  LODWORD(a2) = sub_24EE56320();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v69 = v30;
  uint64_t v70 = v31;
  unint64_t v71 = v32;
  uint64_t v72 = v33;
  LODWORD(v73) = a2;
  uint64_t v74 = 0x3FF0000000000000;
  uint64_t v75 = KeyPath;
  uint64_t v76 = 1;
  char v77 = 0;
  uint64_t v78 = v35;
  char v79 = 0;
  uint64_t v36 = *MEMORY[0x263F18D10];
  uint64_t v37 = sub_24EE55D70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v16, v36, v37);
  sub_24ECB9334((unint64_t *)&qword_2699649E8, MEMORY[0x263F18D80]);
  uint64_t result = sub_24EE57040();
  if (result)
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D28);
    unint64_t v51 = sub_24ECB937C();
    uint64_t v52 = sub_24EC8C218(&qword_269964D78, &qword_269964D20);
    uint64_t v39 = v19;
    uint64_t v40 = v56;
    sub_24EE56800();
    sub_24EC88758((uint64_t)v16, &qword_269964D20);
    sub_24ECB9668(v69, v70, v71, v72);
    swift_release();
    swift_release();
    uint64_t v41 = v57;
    uint64_t v42 = v54;
    uint64_t v43 = v60;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v39, v60);
    uint64_t v44 = v58;
    uint64_t v45 = v55;
    uint64_t v46 = v53;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v53, v28);
    v68[0] = v45;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v42, v43);
    uint64_t v66 = 0;
    char v67 = 0;
    v68[1] = v39;
    v68[2] = &v66;
    v65[0] = v28;
    v65[1] = v43;
    v65[2] = MEMORY[0x263F1B6B0];
    uint64_t v62 = v59;
    uint64_t v69 = v50;
    uint64_t v70 = v40;
    unint64_t v71 = v51;
    uint64_t v72 = v52;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v64 = MEMORY[0x263F1B698];
    sub_24EDCC8A0((uint64_t)v68, 3uLL, (uint64_t)v65);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
    v47(v42, v43);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
    v48(v46, v28);
    v47(v39, v43);
    return ((uint64_t (*)(char *, uint64_t))v48)(v45, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24ECB7134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - v14;
  uint64_t v29 = v16;
  uint64_t v30 = v17;
  uint64_t v31 = v18;
  uint64_t v32 = v19;
  uint64_t v33 = v20;
  uint64_t v34 = v21;
  uint64_t v22 = type metadata accessor for LargeBrickView();
  sub_24EC90894(a1 + *(int *)(v22 + 72));
  uint64_t v27 = 0;
  char v28 = 0;
  uint64_t v29 = &v27;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, a4);
  uint64_t v30 = v13;
  v26[0] = MEMORY[0x263F1B6B0];
  v26[1] = a4;
  v25[0] = MEMORY[0x263F1B698];
  v25[1] = a7;
  sub_24EDCC8A0((uint64_t)&v29, 2uLL, (uint64_t)v26);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v15, a4);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, a4);
}

uint64_t sub_24ECB72CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ECB731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 80);
}

void sub_24ECB7324()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_24EC8B890();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_24ECB747C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v49 = a3[2];
  uint64_t v3 = *(void *)(v49 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v51 = a3[3];
  uint64_t v5 = *(void *)(v51 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v47 = v4 + v6;
  uint64_t v50 = a3[4];
  uint64_t v8 = *(void *)(v50 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v5 + 64) + v9;
  uint64_t v48 = *(void *)(v8 + 64) + 7;
  unint64_t v11 = (v48 + ((v10 + ((v4 + v7) & ~v7)) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unsigned int v15 = v6 | *(_DWORD *)(v3 + 80) & 0xF8 | v9 | v14;
  if (v15 > 7
    || ((v9 | v6 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v3 + 80)) & 0x100000) != 0
    || ((((*(void *)(*(void *)(v12 - 8) + 64) + 7 + ((v14 + v11 + 32) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
     + 32 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v20 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v12 - 8) + 64) + 7;
    uint64_t v45 = *(void *)(v12 - 8);
    uint64_t v46 = v12;
    unint64_t v19 = ~(unint64_t)v9;
    uint64_t v43 = ~v14;
    uint64_t v20 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v49);
    unint64_t v21 = ((unint64_t)a1 + v47) & ~(unint64_t)v6;
    unint64_t v22 = ((unint64_t)a2 + v47) & ~v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v21, v22, v51);
    unint64_t v23 = (v22 + v10) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v21 + v10) & v19, v23, v50);
    unint64_t v24 = (v48 + ((v21 + v10) & v19)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v48 + v23) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v25 + 24) < 0xFFFFFFFFuLL)
    {
      long long v29 = *(_OWORD *)(v25 + 16);
      *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
      *(_OWORD *)(v24 + 16) = v29;
    }
    else
    {
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *(void *)(v25 + 8);
      char v28 = *(unsigned char *)(v25 + 16);
      sub_24EC8A97C(*(void *)v25, v27, v28);
      *(void *)unint64_t v24 = v26;
      *(void *)(v24 + 8) = v27;
      *(unsigned char *)(v24 + 16) = v28;
      *(void *)(v24 + 24) = *(void *)(v25 + 24);
      swift_bridgeObjectRetain();
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))((v24 + v14 + 32) & v43, (v25 + v14 + 32) & v43, v46);
    unint64_t v30 = (v44 + ((v24 + v14 + 32) & v43)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v44 + ((v25 + v14 + 32) & v43)) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v31 + 24) < 0xFFFFFFFFuLL)
    {
      long long v35 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v35;
    }
    else
    {
      uint64_t v32 = *(void *)v31;
      uint64_t v33 = *(void *)(v31 + 8);
      char v34 = *(unsigned char *)(v31 + 16);
      sub_24EC8A97C(*(void *)v31, v33, v34);
      *(void *)unint64_t v30 = v32;
      *(void *)(v30 + 8) = v33;
      *(unsigned char *)(v30 + 16) = v34;
      *(void *)(v30 + 24) = *(void *)(v31 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v36 = (v30 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v31 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v37 + 24) < 0xFFFFFFFFuLL)
    {
      long long v41 = *(_OWORD *)(v37 + 16);
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
      *(_OWORD *)(v36 + 16) = v41;
    }
    else
    {
      uint64_t v38 = *(void *)v37;
      uint64_t v39 = *(void *)(v37 + 8);
      char v40 = *(unsigned char *)(v37 + 16);
      sub_24EC8A97C(*(void *)v37, v39, v40);
      *(void *)unint64_t v36 = v38;
      *(void *)(v36 + 8) = v39;
      *(unsigned char *)(v36 + 16) = v40;
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      swift_bridgeObjectRetain();
    }
  }
  return v20;
}

uint64_t sub_24ECB7888(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  unint64_t v13 = (*(void *)(v11 + 56) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v13 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v13, *(void *)(v13 + 8), *(unsigned char *)(v13 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15 + 8;
  unint64_t v17 = (v13 + *(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v15 + 8))(v17, v14);
  unint64_t v19 = (*(void *)(v16 + 56) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v19 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v20 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v20 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v20, *(void *)(v20 + 8), *(unsigned char *)(v20 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ECB7A64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48) + 7;
  unint64_t v21 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v20 + v19) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v22 + 24) < 0xFFFFFFFFuLL)
  {
    long long v26 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v26;
  }
  else
  {
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 8);
    char v25 = *(unsigned char *)(v22 + 16);
    sub_24EC8A97C(*(void *)v22, v24, v25);
    *(void *)unint64_t v21 = v23;
    *(void *)(v21 + 8) = v24;
    *(unsigned char *)(v21 + 16) = v25;
    *(void *)(v21 + 24) = *(void *)(v22 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = (v21 + v30 + 32) & ~v30;
  uint64_t v32 = (v22 + v30 + 32) & ~v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v31, v32, v27);
  uint64_t v33 = *(void *)(v29 + 48) + 7;
  unint64_t v34 = (v33 + v31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v33 + v32) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v35 + 24) < 0xFFFFFFFFuLL)
  {
    long long v39 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v39;
  }
  else
  {
    uint64_t v36 = *(void *)v35;
    uint64_t v37 = *(void *)(v35 + 8);
    char v38 = *(unsigned char *)(v35 + 16);
    sub_24EC8A97C(*(void *)v35, v37, v38);
    *(void *)unint64_t v34 = v36;
    *(void *)(v34 + 8) = v37;
    *(unsigned char *)(v34 + 16) = v38;
    *(void *)(v34 + 24) = *(void *)(v35 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v40 = (v34 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v35 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v41 + 24) < 0xFFFFFFFFuLL)
  {
    long long v45 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v45;
  }
  else
  {
    uint64_t v42 = *(void *)v41;
    uint64_t v43 = *(void *)(v41 + 8);
    char v44 = *(unsigned char *)(v41 + 16);
    sub_24EC8A97C(*(void *)v41, v43, v44);
    *(void *)unint64_t v40 = v42;
    *(void *)(v40 + 8) = v43;
    *(unsigned char *)(v40 + 16) = v44;
    *(void *)(v40 + 24) = *(void *)(v41 + 24);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24ECB7CE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40) + 7;
  unint64_t v21 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v20 + v19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = *(void *)(v22 + 24);
  if (*(void *)(v21 + 24) < 0xFFFFFFFFuLL)
  {
    if (v23 >= 0xFFFFFFFF)
    {
      uint64_t v30 = *(void *)v22;
      uint64_t v31 = *(void *)(v22 + 8);
      char v32 = *(unsigned char *)(v22 + 16);
      sub_24EC8A97C(*(void *)v22, v31, v32);
      *(void *)unint64_t v21 = v30;
      *(void *)(v21 + 8) = v31;
      *(unsigned char *)(v21 + 16) = v32;
      *(void *)(v21 + 24) = *(void *)(v22 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v23 >= 0xFFFFFFFF)
    {
      uint64_t v24 = *(void *)v22;
      uint64_t v25 = *(void *)(v22 + 8);
      char v26 = *(unsigned char *)(v22 + 16);
      sub_24EC8A97C(*(void *)v22, v25, v26);
      uint64_t v27 = *(void *)v21;
      uint64_t v28 = *(void *)(v21 + 8);
      char v29 = *(unsigned char *)(v21 + 16);
      *(void *)unint64_t v21 = v24;
      *(void *)(v21 + 8) = v25;
      *(unsigned char *)(v21 + 16) = v26;
      sub_24EC8AAA0(v27, v28, v29);
      *(void *)(v21 + 24) = *(void *)(v22 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_24EC8AAA0(*(void *)v21, *(void *)(v21 + 8), *(unsigned char *)(v21 + 16));
    swift_bridgeObjectRelease();
  }
  long long v33 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v33;
LABEL_8:
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v35 + 24;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v21 + v37 + 32) & ~v37;
  uint64_t v39 = (v22 + v37 + 32) & ~v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24))(v38, v39, v34);
  uint64_t v40 = *(void *)(v36 + 40) + 7;
  unint64_t v41 = (v40 + v38) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v40 + v39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = *(void *)(v42 + 24);
  if (*(void *)(v41 + 24) < 0xFFFFFFFFuLL)
  {
    if (v43 >= 0xFFFFFFFF)
    {
      uint64_t v50 = *(void *)v42;
      uint64_t v51 = *(void *)(v42 + 8);
      char v52 = *(unsigned char *)(v42 + 16);
      sub_24EC8A97C(*(void *)v42, v51, v52);
      *(void *)unint64_t v41 = v50;
      *(void *)(v41 + 8) = v51;
      *(unsigned char *)(v41 + 16) = v52;
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
  }
  else
  {
    if (v43 >= 0xFFFFFFFF)
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *(void *)(v42 + 8);
      char v46 = *(unsigned char *)(v42 + 16);
      sub_24EC8A97C(*(void *)v42, v45, v46);
      uint64_t v47 = *(void *)v41;
      uint64_t v48 = *(void *)(v41 + 8);
      char v49 = *(unsigned char *)(v41 + 16);
      *(void *)unint64_t v41 = v44;
      *(void *)(v41 + 8) = v45;
      *(unsigned char *)(v41 + 16) = v46;
      sub_24EC8AAA0(v47, v48, v49);
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_24EC8AAA0(*(void *)v41, *(void *)(v41 + 8), *(unsigned char *)(v41 + 16));
    swift_bridgeObjectRelease();
  }
  long long v53 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v53;
LABEL_15:
  unint64_t v54 = (v41 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v42 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = *(void *)(v55 + 24);
  if (*(void *)(v54 + 24) < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      uint64_t v63 = *(void *)v55;
      uint64_t v64 = *(void *)(v55 + 8);
      char v65 = *(unsigned char *)(v55 + 16);
      sub_24EC8A97C(*(void *)v55, v64, v65);
      *(void *)unint64_t v54 = v63;
      *(void *)(v54 + 8) = v64;
      *(unsigned char *)(v54 + 16) = v65;
      *(void *)(v54 + 24) = *(void *)(v55 + 24);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_21:
    long long v66 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)unint64_t v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v66;
    return a1;
  }
  if (v56 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v54, *(void *)(v54 + 8), *(unsigned char *)(v54 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v57 = *(void *)v55;
  uint64_t v58 = *(void *)(v55 + 8);
  char v59 = *(unsigned char *)(v55 + 16);
  sub_24EC8A97C(*(void *)v55, v58, v59);
  uint64_t v60 = *(void *)v54;
  uint64_t v61 = *(void *)(v54 + 8);
  char v62 = *(unsigned char *)(v54 + 16);
  *(void *)unint64_t v54 = v57;
  *(void *)(v54 + 8) = v58;
  *(unsigned char *)(v54 + 16) = v59;
  sub_24EC8AAA0(v60, v61, v62);
  *(void *)(v54 + 24) = *(void *)(v55 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24ECB80C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32) + 7;
  unint64_t v21 = (_OWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (_OWORD *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  long long v23 = v22[1];
  *unint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25 + 32;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = ((unint64_t)v21 + v27 + 32) & ~v27;
  uint64_t v29 = ((unint64_t)v22 + v27 + 32) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v28, v29, v24);
  uint64_t v30 = *(void *)(v26 + 32) + 7;
  uint64_t v31 = (_OWORD *)((v30 + v28) & 0xFFFFFFFFFFFFFFF8);
  char v32 = (_OWORD *)((v30 + v29) & 0xFFFFFFFFFFFFFFF8);
  long long v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (_OWORD *)(((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (_OWORD *)(((unint64_t)v32 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v36 = v35[1];
  _OWORD *v34 = *v35;
  v34[1] = v36;
  return a1;
}

uint64_t sub_24ECB8280(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24) + 7;
  unint64_t v21 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v20 + v19) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v21 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL)
    {
      char v23 = *(unsigned char *)(v22 + 16);
      uint64_t v24 = *(void *)v21;
      uint64_t v25 = *(void *)(v21 + 8);
      char v26 = *(unsigned char *)(v21 + 16);
      *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
      *(unsigned char *)(v21 + 16) = v23;
      sub_24EC8AAA0(v24, v25, v26);
      *(void *)(v21 + 24) = *(void *)(v22 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24EC8AAA0(*(void *)v21, *(void *)(v21 + 8), *(unsigned char *)(v21 + 16));
    swift_bridgeObjectRelease();
  }
  long long v27 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v27;
LABEL_6:
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v29 + 40;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (v21 + v31 + 32) & ~v31;
  uint64_t v33 = (v22 + v31 + 32) & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))(v32, v33, v28);
  uint64_t v34 = *(void *)(v30 + 24) + 7;
  unint64_t v35 = (v34 + v32) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v34 + v33) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v35 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v36 + 24) >= 0xFFFFFFFFuLL)
    {
      char v37 = *(unsigned char *)(v36 + 16);
      uint64_t v38 = *(void *)v35;
      uint64_t v39 = *(void *)(v35 + 8);
      char v40 = *(unsigned char *)(v35 + 16);
      *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
      *(unsigned char *)(v35 + 16) = v37;
      sub_24EC8AAA0(v38, v39, v40);
      *(void *)(v35 + 24) = *(void *)(v36 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_24EC8AAA0(*(void *)v35, *(void *)(v35 + 8), *(unsigned char *)(v35 + 16));
    swift_bridgeObjectRelease();
  }
  long long v41 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v41;
LABEL_11:
  unint64_t v42 = (v35 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (v36 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v42 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_15:
    long long v48 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v48;
    return a1;
  }
  if (*(void *)(v43 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v42, *(void *)(v42 + 8), *(unsigned char *)(v42 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v44 = *(unsigned char *)(v43 + 16);
  uint64_t v45 = *(void *)v42;
  uint64_t v46 = *(void *)(v42 + 8);
  char v47 = *(unsigned char *)(v42 + 16);
  *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
  *(unsigned char *)(v42 + 16) = v44;
  sub_24EC8AAA0(v45, v46, v47);
  *(void *)(v42 + 24) = *(void *)(v43 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24ECB8568(_DWORD *a1, unsigned int a2, void *a3)
{
  uint64_t v39 = a3[2];
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v38 = a3[3];
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v36 = a3[4];
  uint64_t v9 = *(void *)(v36 - 8);
  unsigned int v37 = *(_DWORD *)(v9 + 84);
  if (v37 <= v8) {
    unsigned int v10 = v8;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v16 = v10;
  }
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(v4 + 64) + v12;
  uint64_t v19 = *(void *)(v9 + 64) + 7;
  uint64_t v20 = v15 + 32;
  unint64_t v21 = a1;
  if (v17 < a2)
  {
    unint64_t v22 = ((((*(void *)(v11 + 64)
            + ((v20 + ((v19 + ((v13 + v14 + (v18 & ~v12)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
            + 7) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 32;
    if ((v22 & 0xFFFFFFF8) != 0) {
      unsigned int v23 = 2;
    }
    else {
      unsigned int v23 = a2 - v17 + 1;
    }
    if (v23 >= 0x10000) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v23 < 0x100) {
      unsigned int v24 = 1;
    }
    if (v23 >= 2) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    switch(v25)
    {
      case 1:
        int v26 = *((unsigned __int8 *)a1 + v22);
        if (!*((unsigned char *)a1 + v22)) {
          break;
        }
        goto LABEL_31;
      case 2:
        int v26 = *(unsigned __int16 *)((char *)a1 + v22);
        if (*(_WORD *)((char *)a1 + v22)) {
          goto LABEL_31;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ECB8934);
      case 4:
        int v26 = *(_DWORD *)((char *)a1 + v22);
        if (!v26) {
          break;
        }
LABEL_31:
        int v28 = v26 - 1;
        if ((v22 & 0xFFFFFFF8) != 0)
        {
          int v28 = 0;
          int v29 = *a1;
        }
        else
        {
          int v29 = 0;
        }
        return v17 + (v29 | v28) + 1;
      default:
        break;
    }
  }
  if (v5 == v17)
  {
    uint64_t v30 = v39;
    uint64_t v31 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v32 = v5;
LABEL_40:
    return v31(v21, v32, v30);
  }
  unint64_t v21 = (_DWORD *)(((unint64_t)a1 + v18) & ~v12);
  if (v7 == v17)
  {
    uint64_t v31 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v32 = v7;
    uint64_t v30 = v38;
    goto LABEL_40;
  }
  unint64_t v21 = (_DWORD *)(((unint64_t)v21 + v13 + v14) & ~v14);
  if (v37 == v17)
  {
    uint64_t v31 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v32 = v37;
    uint64_t v30 = v36;
    goto LABEL_40;
  }
  unint64_t v33 = ((unint64_t)v21 + v19) & 0xFFFFFFFFFFFFFFF8;
  if (v16 > 0x7FFFFFFE)
  {
    unint64_t v35 = *(uint64_t (**)(unint64_t))(v11 + 48);
    return v35((v20 + v33) & ~v15);
  }
  else
  {
    unint64_t v34 = *(void *)(v33 + 24);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    if ((v34 + 1) >= 2) {
      return v34;
    }
    else {
      return 0;
    }
  }
}

void sub_24ECB8948(unsigned int *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[2] - 8);
  uint64_t v36 = v5;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a4[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(void *)(a4[4] - 8);
  uint64_t v39 = v10;
  unsigned int v35 = *(_DWORD *)(v10 + 84);
  if (v35 <= v9) {
    unsigned int v11 = v9;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  if (v11 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v19 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v19 = v11;
  }
  if (v19 <= 0x7FFFFFFE) {
    unsigned int v20 = 2147483646;
  }
  else {
    unsigned int v20 = v19;
  }
  uint64_t v21 = v13 + v14;
  uint64_t v22 = v18 + 32;
  size_t v23 = ((((*(void *)(v12 + 64)
          + ((v18 + 32 + ((v17 + 7 + ((v15 + v16 + ((v13 + v14) & ~v14)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v18)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  if (v20 >= a3)
  {
    int v26 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v12 + 64)
           + ((v18
             + 32
             + ((v17
               + 7
               + ((v15 + v16 + ((v13 + v14) & ~v14)) & ~v16)) & 0xFFFFFFF8)) & ~v18)
           + 7) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) == 0xFFFFFFE0)
      unsigned int v24 = a3 - v20 + 1;
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v26 = v25;
    }
    else {
      int v26 = 0;
    }
  }
  if (a2 > v20)
  {
    if (((((*(_DWORD *)(v12 + 64)
           + ((v18
             + 32
             + ((v17
               + 7
               + ((v15 + v16 + ((v13 + v14) & ~v14)) & ~v16)) & 0xFFFFFFF8)) & ~v18)
           + 7) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) == 0xFFFFFFE0)
      int v27 = a2 - v20;
    else {
      int v27 = 1;
    }
    if (((((*(_DWORD *)(v12 + 64)
           + ((v18
             + 32
             + ((v17
               + 7
               + ((v15 + v16 + ((v13 + v14) & ~v14)) & ~v16)) & 0xFFFFFFF8)) & ~v18)
           + 7) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) != 0xFFFFFFE0)
    {
      unsigned int v28 = ~v20 + a2;
      bzero(a1, v23);
      *a1 = v28;
    }
    switch(v26)
    {
      case 1:
        *((unsigned char *)a1 + v23) = v27;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v23) = v27;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(unsigned int *)((char *)a1 + v23) = v27;
        return;
      default:
        return;
    }
  }
  uint64_t v29 = ~v14;
  uint64_t v30 = ~v18;
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)((char *)a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x24ECB8D98);
    case 4:
      *(unsigned int *)((char *)a1 + v23) = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (!a2) {
        return;
      }
LABEL_41:
      if (v6 == v20)
      {
        uint64_t v31 = *(void (**)(_DWORD *))(v36 + 56);
        uint64_t v32 = a1;
        goto LABEL_43;
      }
      uint64_t v32 = (_DWORD *)(((unint64_t)a1 + v21) & v29);
      if (v8 == v20)
      {
        uint64_t v31 = *(void (**)(_DWORD *))(v7 + 56);
        goto LABEL_45;
      }
      uint64_t v32 = (_DWORD *)(((unint64_t)v32 + v15 + v16) & ~v16);
      if (v35 == v20)
      {
        uint64_t v31 = *(void (**)(_DWORD *))(v39 + 56);
LABEL_43:
LABEL_45:
        v31(v32);
        return;
      }
      unint64_t v33 = ((unint64_t)v32 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (v19 > 0x7FFFFFFE)
      {
        unint64_t v34 = *(void (**)(unint64_t))(v12 + 56);
        v34((v22 + v33) & v30);
      }
      else if (a2 > 0x7FFFFFFE)
      {
        *(_OWORD *)unint64_t v33 = 0u;
        *(_OWORD *)(v33 + 16) = 0u;
        *(_DWORD *)unint64_t v33 = a2 - 0x7FFFFFFF;
      }
      else
      {
        *(void *)(v33 + 24) = a2;
      }
      return;
  }
}

uint64_t sub_24ECB8DC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ECB9164@<X0>(uint64_t a1@<X8>)
{
  return sub_24ECB4A58(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_24ECB9178(uint64_t a1)
{
  uint64_t v2 = sub_24EE55E90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24ECB91D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = *(void *)(type metadata accessor for LargeBrickView() - 8);
  uint64_t v12 = (uint64_t)v2 + ((*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return sub_24ECB4E1C(a1, v12, v5, v6, v7, v8, v9, v10, a2);
}

uint64_t sub_24ECB92AC@<X0>(uint64_t a1@<X8>)
{
  return sub_24ECB5420(v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_24ECB92C0()
{
  return sub_24ECB9308((uint64_t (*)(void, void, void, void, void, void, void))sub_24ECB5A44);
}

uint64_t sub_24ECB92D8()
{
  return sub_24ECB9308(sub_24ECB7134);
}

uint64_t sub_24ECB92F0()
{
  return sub_24ECB9308((uint64_t (*)(void, void, void, void, void, void, void))sub_24ECB6B9C);
}

uint64_t sub_24ECB9308(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_24ECB9334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ECB937C()
{
  unint64_t result = qword_269964D30;
  if (!qword_269964D30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964D28);
    sub_24ECB941C();
    sub_24EC8C218(&qword_26B1DE3D0, &qword_26B1DE3D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964D30);
  }
  return result;
}

unint64_t sub_24ECB941C()
{
  unint64_t result = qword_269964D38;
  if (!qword_269964D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964D40);
    sub_24ECB94BC();
    sub_24EC8C218(&qword_26B1DE3F0, &qword_26B1DE3F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964D38);
  }
  return result;
}

unint64_t sub_24ECB94BC()
{
  unint64_t result = qword_269964D48;
  if (!qword_269964D48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964D50);
    sub_24ECB955C();
    sub_24EC8C218(&qword_269964D68, &qword_269964D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964D48);
  }
  return result;
}

unint64_t sub_24ECB955C()
{
  unint64_t result = qword_269964D58;
  if (!qword_269964D58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964D60);
    sub_24ECB95FC();
    sub_24EC8C218((unint64_t *)&qword_26B1DE3C0, &qword_26B1DE3C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964D58);
  }
  return result;
}

unint64_t sub_24ECB95FC()
{
  unint64_t result = qword_26B1DE428;
  if (!qword_26B1DE428)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE428);
  }
  return result;
}

uint64_t sub_24ECB9668(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8AAA0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24ECB96B4()
{
  unint64_t result = qword_269964D98;
  if (!qword_269964D98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964D88);
    sub_24ECB9754();
    sub_24EC8C218(&qword_269964DC0, &qword_269964D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964D98);
  }
  return result;
}

unint64_t sub_24ECB9754()
{
  unint64_t result = qword_269964DA0;
  if (!qword_269964DA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964DA8);
    sub_24ECB97F4();
    sub_24EC8C218(&qword_26B1DE3D0, &qword_26B1DE3D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964DA0);
  }
  return result;
}

unint64_t sub_24ECB97F4()
{
  unint64_t result = qword_269964DB0;
  if (!qword_269964DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964DB8);
    sub_24ECB955C();
    sub_24EC8C218(&qword_26B1DE3F0, &qword_26B1DE3F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964DB0);
  }
  return result;
}

unint64_t sub_24ECB9894()
{
  unint64_t result = qword_269964DE0;
  if (!qword_269964DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269964DD0);
    sub_24ECB96B4();
    sub_24EC8C218(&qword_269964D68, &qword_269964D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964DE0);
  }
  return result;
}

unint64_t sub_24ECB9934(char a1)
{
  unint64_t result = 0x61436E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746469576C6C7566;
      break;
    case 2:
      unint64_t result = 0x697463416F666E69;
      break;
    case 3:
      unint64_t result = 0x697242656772616CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x647261646E617473;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x647261436C6C6174;
      break;
    case 12:
      unint64_t result = 0x6369724265646977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECB9AF4()
{
  return 0x74756F79616CLL;
}

void sub_24ECB9B0C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24ECB9B18(uint64_t a1)
{
  unint64_t v2 = sub_24ECBBA34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9B54(uint64_t a1)
{
  unint64_t v2 = sub_24ECBBA34();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_24ECB9B90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_24ECB9BA4()
{
  return sub_24ECB9934(*v0);
}

uint64_t sub_24ECB9BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECBF2E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ECB9BD4(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_24ECB9BE0(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB2FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9C1C(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB2FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9C58(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB98C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9C94(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB98C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9CD0(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB8E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9D0C(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB8E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9D48()
{
  return 0;
}

uint64_t sub_24ECB9D54(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB890();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9D90(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB890();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9DCC(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB83C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9E08(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB83C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9E44(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB794();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9E80(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB794();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9EBC(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB6EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9EF8(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB6EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9F34(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB644();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9F70(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB644();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECB9FAC(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB59C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECB9FE8(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB59C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECBA024(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB4F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECBA060(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB4F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECBA09C(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB44C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECBA0D8(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB44C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECBA114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EE577E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24ECBA1A4(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB3A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECBA1E0(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB3A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECBA21C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24ECBA24C(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB350();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECBA288(uint64_t a1)
{
  unint64_t v2 = sub_24ECBB350();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LazyCanvasItemContent.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964DF0);
  uint64_t v161 = *(void *)(v4 - 8);
  *(void *)&long long v162 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v158 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964DF8);
  *(void *)&long long v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  *(void *)&long long v163 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E00);
  uint64_t v159 = *(void *)(v7 - 8);
  uint64_t v160 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v157 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E08);
  uint64_t v155 = *(void *)(v9 - 8);
  uint64_t v156 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v154 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E10);
  uint64_t v152 = *(void *)(v11 - 8);
  uint64_t v153 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v151 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E18);
  uint64_t v149 = *(void *)(v13 - 8);
  uint64_t v150 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v148 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E20);
  uint64_t v146 = *(void *)(v15 - 8);
  uint64_t v147 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v145 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E28);
  uint64_t v143 = *(void *)(v17 - 8);
  uint64_t v144 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v142 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E30);
  uint64_t v140 = *(void *)(v19 - 8);
  uint64_t v141 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v139 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E38);
  uint64_t v133 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v22 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E40);
  uint64_t v137 = *(void *)(v23 - 8);
  uint64_t v138 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v132 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E48);
  uint64_t v134 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  int v26 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E50);
  uint64_t v131 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964E58);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v167 = v30;
  uint64_t v168 = v31;
  MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v130 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EC8EF70(v2, (uint64_t)v183);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ECBB2FC();
  uint64_t v166 = v33;
  sub_24EE578D0();
  sub_24EC8EF70((uint64_t)v183, (uint64_t)v184);
  switch(sub_24EC8EFCC((uint64_t)v184))
  {
    case 1u:
      char v49 = (long long *)nullsub_1(v184);
      LOBYTE(v169) = 1;
      sub_24ECBB98C();
      uint64_t v51 = v166;
      uint64_t v50 = v167;
      sub_24EE57740();
      long long v52 = v49[1];
      long long v169 = *v49;
      long long v170 = v52;
      long long v53 = v49[2];
      long long v54 = v49[3];
      long long v55 = v49[5];
      v172[1] = v49[4];
      v172[2] = v55;
      long long v171 = v53;
      v172[0] = v54;
      long long v56 = v49[6];
      long long v57 = v49[7];
      long long v58 = v49[9];
      long long v175 = v49[8];
      long long v176 = v58;
      long long v173 = v56;
      long long v174 = v57;
      long long v59 = v49[10];
      long long v60 = v49[11];
      long long v61 = v49[13];
      long long v179 = v49[12];
      long long v180 = v61;
      long long v177 = v59;
      long long v178 = v60;
      sub_24ECBB9E0();
      uint64_t v62 = v136;
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v26, v62);
      return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v51, v50);
    case 2u:
      uint64_t v63 = nullsub_1(v184);
      long long v64 = *(_OWORD *)v63;
      long long v164 = *(_OWORD *)(v63 + 16);
      long long v165 = v64;
      long long v163 = *(_OWORD *)(v63 + 32);
      uint64_t v65 = *(void *)(v63 + 48);
      uint64_t v66 = *(void *)(v63 + 56);
      LOBYTE(v169) = 2;
      sub_24ECBB8E4();
      char v67 = v132;
      uint64_t v69 = v166;
      uint64_t v68 = v167;
      sub_24EE57740();
      long long v169 = v165;
      long long v170 = v164;
      long long v171 = v163;
      *(void *)&v172[0] = v65;
      *((void *)&v172[0] + 1) = v66;
      sub_24ECBB938();
      uint64_t v70 = v138;
      sub_24EE577B0();
      uint64_t v71 = v137;
      goto LABEL_8;
    case 3u:
      uint64_t v72 = (uint64_t *)nullsub_1(v184);
      uint64_t v73 = *v72;
      uint64_t v74 = v72[1];
      LOBYTE(v169) = 4;
      sub_24ECBB83C();
      char v67 = v139;
      uint64_t v69 = v166;
      uint64_t v68 = v167;
      sub_24EE57740();
      *(void *)&long long v169 = v73;
      *((void *)&v169 + 1) = v74;
      sub_24ECBB740();
      uint64_t v70 = v141;
      sub_24EE577B0();
      uint64_t v71 = v140;
      goto LABEL_8;
    case 4u:
      uint64_t v75 = nullsub_1(v184);
      long long v165 = *(_OWORD *)v75;
      uint64_t v76 = *(void *)(v75 + 16);
      LOBYTE(v169) = 5;
      sub_24ECBB794();
      char v67 = v142;
      uint64_t v69 = v166;
      uint64_t v68 = v167;
      sub_24EE57740();
      long long v169 = v165;
      *(void *)&long long v170 = v76;
      sub_24ECBB7E8();
      uint64_t v70 = v144;
      sub_24EE577B0();
      uint64_t v71 = v143;
      goto LABEL_8;
    case 5u:
      char v77 = (uint64_t *)nullsub_1(v184);
      uint64_t v78 = *v77;
      uint64_t v79 = v77[1];
      LOBYTE(v169) = 6;
      sub_24ECBB6EC();
      char v67 = v145;
      uint64_t v69 = v166;
      uint64_t v68 = v167;
      sub_24EE57740();
      *(void *)&long long v169 = v78;
      *((void *)&v169 + 1) = v79;
      sub_24ECBB740();
      uint64_t v70 = v147;
      sub_24EE577B0();
      uint64_t v71 = v146;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v70);
      return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v69, v68);
    case 6u:
      uint64_t v81 = nullsub_1(v184);
      long long v82 = *(_OWORD *)v81;
      uint64_t v83 = *(void *)(v81 + 16);
      uint64_t v84 = *(void *)(v81 + 24);
      long long v164 = *(_OWORD *)(v81 + 32);
      long long v165 = v82;
      uint64_t v85 = *(void *)(v81 + 48);
      long long v86 = *(_OWORD *)(v81 + 56);
      long long v162 = *(_OWORD *)(v81 + 72);
      long long v163 = v86;
      uint64_t v87 = *(void *)(v81 + 88);
      uint64_t v88 = *(void *)(v81 + 96);
      LOBYTE(v169) = 7;
      sub_24ECBB644();
      uint64_t v89 = v148;
      uint64_t v36 = v166;
      uint64_t v35 = v167;
      sub_24EE57740();
      long long v169 = v165;
      *(void *)&long long v170 = v83;
      *((void *)&v170 + 1) = v84;
      long long v171 = v164;
      *(void *)&v172[0] = v85;
      *(_OWORD *)((char *)v172 + 8) = v163;
      *(_OWORD *)((char *)&v172[1] + 8) = v162;
      *((void *)&v172[2] + 1) = v87;
      *(void *)&long long v173 = v88;
      sub_24ECBB698();
      uint64_t v90 = v150;
      sub_24EE577B0();
      uint64_t v91 = v149;
      goto LABEL_15;
    case 7u:
      uint64_t v92 = (long long *)nullsub_1(v184);
      LOBYTE(v169) = 8;
      sub_24ECBB59C();
      uint64_t v89 = v151;
      uint64_t v36 = v166;
      uint64_t v35 = v167;
      sub_24EE57740();
      long long v93 = v92[1];
      long long v169 = *v92;
      long long v170 = v93;
      long long v94 = v92[2];
      long long v95 = v92[3];
      long long v96 = v92[5];
      v172[1] = v92[4];
      v172[2] = v96;
      long long v171 = v94;
      v172[0] = v95;
      long long v97 = v92[6];
      long long v98 = v92[7];
      long long v99 = v92[9];
      long long v175 = v92[8];
      long long v176 = v99;
      long long v173 = v97;
      long long v174 = v98;
      sub_24ECBB5F0();
      uint64_t v90 = v153;
      sub_24EE577B0();
      uint64_t v91 = v152;
      goto LABEL_15;
    case 8u:
      uint64_t v100 = nullsub_1(v184);
      char v101 = *(unsigned char *)v100;
      uint64_t v102 = *(void *)(v100 + 8);
      uint64_t v103 = *(void *)(v100 + 16);
      uint64_t v104 = *(void *)(v100 + 24);
      char v105 = *(unsigned char *)(v100 + 32);
      uint64_t v106 = *(void *)(v100 + 40);
      uint64_t v107 = *(void *)(v100 + 48);
      LOBYTE(v169) = 9;
      sub_24ECBB4F4();
      uint64_t v108 = v154;
      uint64_t v110 = v166;
      uint64_t v109 = v167;
      sub_24EE57740();
      LOBYTE(v169) = v101;
      *((void *)&v169 + 1) = v102;
      *(void *)&long long v170 = v103;
      *((void *)&v170 + 1) = v104;
      LOBYTE(v171) = v105;
      *((void *)&v171 + 1) = v106;
      *(void *)&v172[0] = v107;
      sub_24ECBB548();
      uint64_t v111 = v156;
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v108, v111);
      return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v110, v109);
    case 9u:
      uint64_t v112 = nullsub_1(v184);
      long long v113 = *(_OWORD *)v112;
      uint64_t v114 = *(void *)(v112 + 16);
      char v115 = *(unsigned char *)(v112 + 24);
      long long v164 = *(_OWORD *)(v112 + 32);
      long long v165 = v113;
      uint64_t v116 = *(void *)(v112 + 48);
      uint64_t v117 = *(void *)(v112 + 56);
      LOBYTE(v169) = 10;
      sub_24ECBB44C();
      uint64_t v118 = v157;
      uint64_t v51 = v166;
      uint64_t v50 = v167;
      sub_24EE57740();
      long long v169 = v165;
      *(void *)&long long v170 = v114;
      BYTE8(v170) = v115;
      long long v171 = v164;
      *(void *)&v172[0] = v116;
      *((void *)&v172[0] + 1) = v117;
      sub_24ECBB4A0();
      uint64_t v119 = v160;
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v118, v119);
      return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v51, v50);
    case 0xAu:
      uint64_t v120 = (long long *)nullsub_1(v184);
      LOBYTE(v169) = 11;
      sub_24ECBB3A4();
      uint64_t v89 = (char *)v163;
      uint64_t v36 = v166;
      uint64_t v35 = v167;
      sub_24EE57740();
      long long v121 = *v120;
      long long v122 = v120[1];
      long long v123 = v120[3];
      long long v171 = v120[2];
      v172[0] = v123;
      long long v169 = v121;
      long long v170 = v122;
      long long v124 = v120[4];
      long long v125 = v120[5];
      long long v126 = v120[7];
      long long v173 = v120[6];
      long long v174 = v126;
      v172[1] = v124;
      v172[2] = v125;
      sub_24ECBB3F8();
      uint64_t v90 = v165;
      sub_24EE577B0();
      uint64_t v91 = v164;
LABEL_15:
      (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v90);
      goto LABEL_16;
    case 0xBu:
      LOBYTE(v169) = 3;
      sub_24ECBB890();
      uint64_t v127 = v166;
      uint64_t v128 = v167;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v22, v135);
      goto LABEL_20;
    case 0xCu:
      LOBYTE(v169) = 12;
      sub_24ECBB350();
      uint64_t v129 = v158;
      uint64_t v127 = v166;
      uint64_t v128 = v167;
      sub_24EE57740();
      (*(void (**)(char *, void))(v161 + 8))(v129, v162);
LABEL_20:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v127, v128);
      break;
    default:
      uint64_t v34 = nullsub_1(v184);
      LOBYTE(v169) = 0;
      sub_24ECBBA34();
      uint64_t v36 = v166;
      uint64_t v35 = v167;
      sub_24EE57740();
      long long v37 = *(_OWORD *)v34;
      long long v38 = *(_OWORD *)(v34 + 16);
      long long v39 = *(_OWORD *)(v34 + 48);
      long long v171 = *(_OWORD *)(v34 + 32);
      v172[0] = v39;
      long long v169 = v37;
      long long v170 = v38;
      long long v40 = *(_OWORD *)(v34 + 64);
      long long v41 = *(_OWORD *)(v34 + 80);
      long long v42 = *(_OWORD *)(v34 + 112);
      long long v173 = *(_OWORD *)(v34 + 96);
      long long v174 = v42;
      v172[1] = v40;
      v172[2] = v41;
      long long v43 = *(_OWORD *)(v34 + 128);
      long long v44 = *(_OWORD *)(v34 + 144);
      long long v45 = *(_OWORD *)(v34 + 176);
      long long v177 = *(_OWORD *)(v34 + 160);
      long long v178 = v45;
      long long v175 = v43;
      long long v176 = v44;
      long long v46 = *(_OWORD *)(v34 + 192);
      long long v47 = *(_OWORD *)(v34 + 208);
      long long v48 = *(_OWORD *)(v34 + 224);
      uint64_t v182 = *(void *)(v34 + 240);
      long long v180 = v47;
      long long v181 = v48;
      long long v179 = v46;
      sub_24ECBBA88();
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v29, v27);
LABEL_16:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v36, v35);
      break;
  }
  return result;
}

unint64_t sub_24ECBB2FC()
{
  unint64_t result = qword_269964E60;
  if (!qword_269964E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E60);
  }
  return result;
}

unint64_t sub_24ECBB350()
{
  unint64_t result = qword_269964E68;
  if (!qword_269964E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E68);
  }
  return result;
}

unint64_t sub_24ECBB3A4()
{
  unint64_t result = qword_269964E70;
  if (!qword_269964E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E70);
  }
  return result;
}

unint64_t sub_24ECBB3F8()
{
  unint64_t result = qword_269964E78;
  if (!qword_269964E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E78);
  }
  return result;
}

unint64_t sub_24ECBB44C()
{
  unint64_t result = qword_269964E80;
  if (!qword_269964E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E80);
  }
  return result;
}

unint64_t sub_24ECBB4A0()
{
  unint64_t result = qword_26B1DD958;
  if (!qword_26B1DD958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD958);
  }
  return result;
}

unint64_t sub_24ECBB4F4()
{
  unint64_t result = qword_269964E88;
  if (!qword_269964E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E88);
  }
  return result;
}

unint64_t sub_24ECBB548()
{
  unint64_t result = qword_26B1DDF10;
  if (!qword_26B1DDF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DDF10);
  }
  return result;
}

unint64_t sub_24ECBB59C()
{
  unint64_t result = qword_269964E90;
  if (!qword_269964E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E90);
  }
  return result;
}

unint64_t sub_24ECBB5F0()
{
  unint64_t result = qword_269964E98;
  if (!qword_269964E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964E98);
  }
  return result;
}

unint64_t sub_24ECBB644()
{
  unint64_t result = qword_269964EA0;
  if (!qword_269964EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EA0);
  }
  return result;
}

unint64_t sub_24ECBB698()
{
  unint64_t result = qword_269964EA8;
  if (!qword_269964EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EA8);
  }
  return result;
}

unint64_t sub_24ECBB6EC()
{
  unint64_t result = qword_269964EB0;
  if (!qword_269964EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EB0);
  }
  return result;
}

unint64_t sub_24ECBB740()
{
  unint64_t result = qword_269964EB8;
  if (!qword_269964EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EB8);
  }
  return result;
}

unint64_t sub_24ECBB794()
{
  unint64_t result = qword_269964EC0;
  if (!qword_269964EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EC0);
  }
  return result;
}

unint64_t sub_24ECBB7E8()
{
  unint64_t result = qword_269964EC8;
  if (!qword_269964EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EC8);
  }
  return result;
}

unint64_t sub_24ECBB83C()
{
  unint64_t result = qword_269964ED0;
  if (!qword_269964ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964ED0);
  }
  return result;
}

unint64_t sub_24ECBB890()
{
  unint64_t result = qword_269964ED8;
  if (!qword_269964ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964ED8);
  }
  return result;
}

unint64_t sub_24ECBB8E4()
{
  unint64_t result = qword_269964EE0;
  if (!qword_269964EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EE0);
  }
  return result;
}

unint64_t sub_24ECBB938()
{
  unint64_t result = qword_269964EE8;
  if (!qword_269964EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EE8);
  }
  return result;
}

unint64_t sub_24ECBB98C()
{
  unint64_t result = qword_269964EF0;
  if (!qword_269964EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EF0);
  }
  return result;
}

unint64_t sub_24ECBB9E0()
{
  unint64_t result = qword_269964EF8;
  if (!qword_269964EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964EF8);
  }
  return result;
}

unint64_t sub_24ECBBA34()
{
  unint64_t result = qword_269964F00;
  if (!qword_269964F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F00);
  }
  return result;
}

unint64_t sub_24ECBBA88()
{
  unint64_t result = qword_26B1DDCE0;
  if (!qword_26B1DDCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DDCE0);
  }
  return result;
}

uint64_t LazyCanvasItemContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v126 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F08);
  uint64_t v115 = *(void *)(v3 - 8);
  uint64_t v116 = v3;
  MEMORY[0x270FA5388](v3);
  long long v125 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F10);
  uint64_t v114 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v130 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F18);
  uint64_t v112 = *(void *)(v6 - 8);
  uint64_t v113 = v6;
  MEMORY[0x270FA5388](v6);
  long long v124 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F20);
  uint64_t v110 = *(void *)(v8 - 8);
  uint64_t v111 = v8;
  MEMORY[0x270FA5388](v8);
  long long v123 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F28);
  uint64_t v108 = *(void *)(v10 - 8);
  uint64_t v109 = v10;
  MEMORY[0x270FA5388](v10);
  long long v122 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F30);
  uint64_t v106 = *(void *)(v12 - 8);
  uint64_t v107 = v12;
  MEMORY[0x270FA5388](v12);
  long long v121 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F38);
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v105 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v129 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F40);
  uint64_t v102 = *(void *)(v16 - 8);
  uint64_t v103 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v128 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F48);
  uint64_t v100 = *(void *)(v18 - 8);
  uint64_t v101 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v120 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F50);
  uint64_t v97 = *(void *)(v20 - 8);
  uint64_t v98 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v118 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F58);
  uint64_t v96 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v119 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F60);
  uint64_t v94 = *(void *)(v23 - 8);
  uint64_t v95 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F68);
  uint64_t v93 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964F70);
  uint64_t v127 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1[3];
  uint64_t v131 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_24ECBB2FC();
  uint64_t v33 = v157;
  sub_24EE578C0();
  if (v33)
  {
LABEL_27:
    uint64_t v40 = (uint64_t)v131;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  uint64_t v90 = v26;
  uint64_t v91 = v28;
  uint64_t v92 = v25;
  uint64_t v34 = v128;
  uint64_t v35 = v129;
  uint64_t v36 = v130;
  uint64_t v157 = 0;
  uint64_t v37 = sub_24EE57720();
  if (*(void *)(v37 + 16) != 1)
  {
    uint64_t v41 = sub_24EE57560();
    swift_allocError();
    long long v43 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    *long long v43 = &type metadata for LazyCanvasItemContent;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v43, *MEMORY[0x263F8DCB0], v41);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v29);
    goto LABEL_27;
  }
  switch(*(unsigned char *)(v37 + 32))
  {
    case 1:
      LOBYTE(v144[0]) = 1;
      sub_24ECBB98C();
      long long v44 = v92;
      uint64_t v45 = v157;
      sub_24EE57690();
      if (v45) {
        goto LABEL_26;
      }
      sub_24ECBD354();
      uint64_t v82 = v95;
      sub_24EE57710();
      uint64_t v83 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v44, v82);
      swift_bridgeObjectRelease();
      (*v83)(v31, v29);
      long long v150 = v138;
      long long v151 = v139;
      long long v152 = v140;
      long long v153 = v141;
      v146[3] = v134[3];
      long long v147 = v135;
      long long v148 = v136;
      long long v149 = v137;
      long long v145 = v133;
      v146[0] = v134[0];
      v146[1] = v134[1];
      v146[2] = v134[2];
      v144[0] = v132[0];
      v144[1] = v132[1];
      sub_24EC90838((uint64_t)v144);
      goto LABEL_39;
    case 2:
      LOBYTE(v144[0]) = 2;
      sub_24ECBB8E4();
      long long v46 = v119;
      uint64_t v47 = v157;
      sub_24EE57690();
      if (v47) {
        goto LABEL_26;
      }
      sub_24ECBD300();
      uint64_t v48 = v99;
      sub_24EE57710();
      char v49 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v46, v48);
      swift_bridgeObjectRelease();
      (*v49)(v31, v29);
      v144[0] = v132[0];
      v144[1] = v132[1];
      long long v145 = v133;
      v146[0] = v134[0];
      sub_24EC9082C((uint64_t)v144);
      goto LABEL_39;
    case 3:
      LOBYTE(v132[0]) = 3;
      sub_24ECBB890();
      uint64_t v50 = v118;
      uint64_t v51 = v157;
      sub_24EE57690();
      uint64_t v157 = v51;
      if (v51) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v98);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v29);
      sub_24EC907F8((uint64_t)v144);
      goto LABEL_39;
    case 4:
      LOBYTE(v144[0]) = 4;
      sub_24ECBB83C();
      long long v52 = v120;
      uint64_t v53 = v157;
      sub_24EE57690();
      if (v53) {
        goto LABEL_26;
      }
      sub_24ECBD258();
      uint64_t v54 = v101;
      sub_24EE57710();
      long long v55 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v52, v54);
      swift_bridgeObjectRelease();
      (*v55)(v31, v29);
      v144[0] = v132[0];
      sub_24EC907EC((uint64_t)v144);
      goto LABEL_39;
    case 5:
      LOBYTE(v144[0]) = 5;
      sub_24ECBB794();
      long long v56 = v34;
      uint64_t v57 = v157;
      sub_24EE57690();
      if (v57) {
        goto LABEL_26;
      }
      sub_24ECBD2AC();
      uint64_t v58 = v103;
      sub_24EE57710();
      long long v59 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v56, v58);
      swift_bridgeObjectRelease();
      (*v59)(v31, v29);
      v144[0] = v132[0];
      *(void *)&v144[1] = *(void *)&v132[1];
      sub_24EC907E0((uint64_t)v144);
      goto LABEL_39;
    case 6:
      LOBYTE(v144[0]) = 6;
      sub_24ECBB6EC();
      uint64_t v60 = v157;
      sub_24EE57690();
      if (v60) {
        goto LABEL_26;
      }
      sub_24ECBD258();
      uint64_t v61 = v105;
      sub_24EE57710();
      uint64_t v62 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v35, v61);
      swift_bridgeObjectRelease();
      (*v62)(v31, v29);
      v144[0] = v132[0];
      sub_24EC907D4((uint64_t)v144);
      goto LABEL_39;
    case 7:
      LOBYTE(v144[0]) = 7;
      sub_24ECBB644();
      uint64_t v63 = v121;
      uint64_t v64 = v29;
      uint64_t v65 = v157;
      sub_24EE57690();
      if (v65) {
        goto LABEL_24;
      }
      sub_24ECBD204();
      uint64_t v66 = v107;
      sub_24EE57710();
      char v67 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v63, v66);
      swift_bridgeObjectRelease();
      (*v67)(v31, v29);
      v144[0] = v132[0];
      v144[1] = v132[1];
      long long v145 = v133;
      *(void *)&v146[0] = *(void *)&v134[0];
      *(_OWORD *)((char *)v146 + 8) = *(_OWORD *)((char *)v134 + 8);
      *(_OWORD *)((char *)&v146[1] + 8) = *(_OWORD *)((char *)&v134[1] + 8);
      *(_OWORD *)((char *)&v146[2] + 8) = *(_OWORD *)((char *)&v134[2] + 8);
      sub_24EC907C8((uint64_t)v144);
      goto LABEL_39;
    case 8:
      LOBYTE(v144[0]) = 8;
      sub_24ECBB59C();
      uint64_t v68 = v122;
      uint64_t v69 = v157;
      sub_24EE57690();
      if (v69) {
        goto LABEL_26;
      }
      sub_24ECBD1B0();
      uint64_t v70 = v109;
      sub_24EE57710();
      uint64_t v71 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v68, v70);
      swift_bridgeObjectRelease();
      (*v71)(v31, v29);
      v146[3] = v134[3];
      long long v147 = v135;
      long long v148 = v136;
      long long v149 = v137;
      long long v145 = v133;
      v146[0] = v134[0];
      v146[1] = v134[1];
      v146[2] = v134[2];
      v144[0] = v132[0];
      v144[1] = v132[1];
      sub_24EC907BC((uint64_t)v144);
      goto LABEL_39;
    case 9:
      LOBYTE(v144[0]) = 9;
      sub_24ECBB4F4();
      uint64_t v72 = v123;
      uint64_t v64 = v29;
      uint64_t v73 = v157;
      sub_24EE57690();
      if (v73)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v64);
        goto LABEL_27;
      }
      sub_24ECBD15C();
      uint64_t v84 = v111;
      sub_24EE57710();
      uint64_t v85 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v72, v84);
      swift_bridgeObjectRelease();
      (*v85)(v31, v29);
      LOBYTE(v144[0]) = v132[0];
      *(_OWORD *)((char *)v144 + 8) = *(_OWORD *)((char *)v132 + 8);
      *((void *)&v144[1] + 1) = *((void *)&v132[1] + 1);
      LOBYTE(v145) = v133;
      *((void *)&v145 + 1) = *((void *)&v133 + 1);
      *(void *)&v146[0] = *(void *)&v134[0];
      sub_24EC907B0((uint64_t)v144);
      goto LABEL_39;
    case 0xA:
      LOBYTE(v144[0]) = 10;
      sub_24ECBB44C();
      uint64_t v74 = v124;
      uint64_t v75 = v157;
      sub_24EE57690();
      if (v75)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v29);
        goto LABEL_27;
      }
      sub_24ECBD108();
      uint64_t v86 = v113;
      sub_24EE57710();
      uint64_t v87 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v74, v86);
      swift_bridgeObjectRelease();
      (*v87)(v31, v29);
      v144[0] = v132[0];
      *(void *)&v144[1] = *(void *)&v132[1];
      BYTE8(v144[1]) = BYTE8(v132[1]);
      long long v145 = v133;
      v146[0] = v134[0];
      sub_24EC907A4((uint64_t)v144);
      goto LABEL_39;
    case 0xB:
      LOBYTE(v144[0]) = 11;
      sub_24ECBB3A4();
      uint64_t v77 = v157;
      sub_24EE57690();
      if (v77) {
        goto LABEL_5;
      }
      sub_24ECBD0B4();
      uint64_t v88 = v117;
      sub_24EE57710();
      uint64_t v89 = (void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v88);
      swift_bridgeObjectRelease();
      (*v89)(v31, v29);
      v146[1] = v134[1];
      v146[2] = v134[2];
      v146[3] = v134[3];
      long long v147 = v135;
      v144[0] = v132[0];
      v144[1] = v132[1];
      long long v145 = v133;
      v146[0] = v134[0];
      sub_24EC90798((uint64_t)v144);
      goto LABEL_39;
    case 0xC:
      LOBYTE(v132[0]) = 12;
      sub_24ECBB350();
      uint64_t v78 = v125;
      uint64_t v79 = v157;
      sub_24EE57690();
      uint64_t v157 = v79;
      if (v79) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v115 + 8))(v78, v116);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v29);
      sub_24EC9067C((uint64_t)v144);
      goto LABEL_39;
    default:
      LOBYTE(v144[0]) = 0;
      sub_24ECBBA34();
      long long v38 = v91;
      uint64_t v39 = v157;
      sub_24EE57690();
      if (v39)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v31, v29);
        uint64_t v40 = (uint64_t)v131;
        return __swift_destroy_boxed_opaque_existential_1(v40);
      }
      sub_24ECBD3A8();
      uint64_t v80 = v90;
      sub_24EE57710();
      uint64_t v81 = v127;
      uint64_t v157 = 0;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v38, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v31, v29);
      long long v152 = v140;
      long long v153 = v141;
      long long v154 = v142;
      uint64_t v155 = v143;
      long long v148 = v136;
      long long v149 = v137;
      long long v150 = v138;
      long long v151 = v139;
      v146[1] = v134[1];
      v146[2] = v134[2];
      v146[3] = v134[3];
      long long v147 = v135;
      v144[0] = v132[0];
      v144[1] = v132[1];
      long long v145 = v133;
      v146[0] = v134[0];
      sub_24EC90878((uint64_t)v144);
LABEL_39:
      sub_24EC8EF70((uint64_t)v144, (uint64_t)v156);
      sub_24EC8EF70((uint64_t)v156, v126);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
      break;
  }
  return result;
}

unint64_t sub_24ECBD0B4()
{
  unint64_t result = qword_269964F78;
  if (!qword_269964F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F78);
  }
  return result;
}

unint64_t sub_24ECBD108()
{
  unint64_t result = qword_269964F80;
  if (!qword_269964F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F80);
  }
  return result;
}

unint64_t sub_24ECBD15C()
{
  unint64_t result = qword_269964F88;
  if (!qword_269964F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F88);
  }
  return result;
}

unint64_t sub_24ECBD1B0()
{
  unint64_t result = qword_269964F90;
  if (!qword_269964F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F90);
  }
  return result;
}

unint64_t sub_24ECBD204()
{
  unint64_t result = qword_269964F98;
  if (!qword_269964F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964F98);
  }
  return result;
}

unint64_t sub_24ECBD258()
{
  unint64_t result = qword_269964FA0;
  if (!qword_269964FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FA0);
  }
  return result;
}

unint64_t sub_24ECBD2AC()
{
  unint64_t result = qword_269964FA8;
  if (!qword_269964FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FA8);
  }
  return result;
}

unint64_t sub_24ECBD300()
{
  unint64_t result = qword_269964FB0;
  if (!qword_269964FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FB0);
  }
  return result;
}

unint64_t sub_24ECBD354()
{
  unint64_t result = qword_269964FB8;
  if (!qword_269964FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FB8);
  }
  return result;
}

unint64_t sub_24ECBD3A8()
{
  unint64_t result = qword_269964FC0;
  if (!qword_269964FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FC0);
  }
  return result;
}

uint64_t sub_24ECBD3FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LazyCanvasItemContent.init(from:)(a1, a2);
}

uint64_t sub_24ECBD414(void *a1)
{
  return LazyCanvasItemContent.encode(to:)(a1);
}

uint64_t LazyCanvasItemContent.hash(into:)()
{
  sub_24EC8EF70(v0, (uint64_t)v2);
  sub_24EC8EF70((uint64_t)v2, (uint64_t)v3);
  switch(sub_24EC8EFCC((uint64_t)v3))
  {
    case 1u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = FullWidthStageViewLayout.hash(into:)();
      break;
    case 2u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = InfoActionCardViewLayout.hash(into:)();
      break;
    case 3u:
    case 5u:
      nullsub_1(v3);
      sub_24EE57880();
      sub_24EE578A0();
      uint64_t result = sub_24EE578A0();
      break;
    case 4u:
      nullsub_1(v3);
      sub_24EE57880();
      sub_24EC8A508();
      uint64_t result = sub_24EE578A0();
      break;
    case 6u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = StandardCardViewLayout.hash(into:)();
      break;
    case 7u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = StandardHorizontalStackViewLayout.hash(into:)();
      break;
    case 8u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = StandardVerticalStackViewLayout.hash(into:)();
      break;
    case 9u:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = TallCardViewLayout.hash(into:)();
      break;
    case 0xAu:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = VerticalStackCardLayout.hash(into:)();
      break;
    case 0xBu:
    case 0xCu:
      uint64_t result = sub_24EE57880();
      break;
    default:
      nullsub_1(v3);
      sub_24EE57880();
      uint64_t result = ActionCardViewLayout.hash(into:)();
      break;
  }
  return result;
}

uint64_t LazyCanvasItemContent.hashValue.getter()
{
  sub_24EC8EF70(v0, (uint64_t)v3);
  sub_24EC8EF70((uint64_t)v3, (uint64_t)v2);
  sub_24EE57870();
  LazyCanvasItemContent.hash(into:)();
  return sub_24EE578B0();
}

uint64_t sub_24ECBD8D0()
{
  sub_24EC8EF70(v0, (uint64_t)v3);
  sub_24EC8EF70((uint64_t)v3, (uint64_t)v2);
  sub_24EE57870();
  LazyCanvasItemContent.hash(into:)();
  return sub_24EE578B0();
}

uint64_t sub_24ECBD930()
{
  return sub_24EE578B0();
}

uint64_t _s15FitnessCanvasUI04LazyB11ItemContentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_24EC8EF70(a1, (uint64_t)v157);
  sub_24EC8EF70(a2, (uint64_t)v158);
  sub_24EC8EF70((uint64_t)v157, (uint64_t)v159);
  switch(sub_24EC8EFCC((uint64_t)v159))
  {
    case 1u:
      uint64_t v20 = nullsub_1(v159);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 1) {
        goto LABEL_30;
      }
      uint64_t v21 = (_OWORD *)nullsub_1(v156);
      long long v22 = *(_OWORD *)(v20 + 176);
      long long v150 = *(_OWORD *)(v20 + 160);
      long long v151 = v22;
      long long v23 = *(_OWORD *)(v20 + 208);
      long long v152 = *(_OWORD *)(v20 + 192);
      long long v153 = v23;
      long long v24 = *(_OWORD *)(v20 + 112);
      long long v146 = *(_OWORD *)(v20 + 96);
      long long v147 = v24;
      long long v25 = *(_OWORD *)(v20 + 144);
      long long v148 = *(_OWORD *)(v20 + 128);
      long long v149 = v25;
      long long v26 = *(_OWORD *)(v20 + 48);
      long long v142 = *(_OWORD *)(v20 + 32);
      long long v143 = v26;
      long long v27 = *(_OWORD *)(v20 + 80);
      long long v144 = *(_OWORD *)(v20 + 64);
      long long v145 = v27;
      long long v28 = *(_OWORD *)(v20 + 16);
      float64x2_t v140 = *(float64x2_t *)v20;
      long long v141 = v28;
      long long v29 = v21[11];
      long long v134 = v21[10];
      long long v135 = v29;
      long long v30 = v21[13];
      long long v136 = v21[12];
      long long v137 = v30;
      long long v31 = v21[7];
      *(_OWORD *)&v130[48] = v21[6];
      long long v131 = v31;
      long long v32 = v21[9];
      long long v132 = v21[8];
      long long v133 = v32;
      long long v33 = v21[3];
      long long v129 = v21[2];
      *(_OWORD *)uint64_t v130 = v33;
      long long v34 = v21[5];
      *(_OWORD *)&v130[16] = v21[4];
      *(_OWORD *)&v130[32] = v34;
      long long v35 = v21[1];
      *(_OWORD *)uint64_t v128 = *v21;
      *(_OWORD *)&v128[16] = v35;
      char v19 = _s15FitnessCanvasUI24FullWidthStageViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      return v19 & 1;
    case 2u:
      uint64_t v36 = (double *)nullsub_1(v159);
      float64_t v37 = *v36;
      float64_t v38 = v36[1];
      uint64_t v39 = *((void *)v36 + 2);
      uint64_t v40 = *((void *)v36 + 3);
      uint64_t v41 = *((void *)v36 + 4);
      uint64_t v42 = *((void *)v36 + 5);
      uint64_t v43 = *((void *)v36 + 6);
      uint64_t v44 = *((void *)v36 + 7);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 2) {
        goto LABEL_30;
      }
      uint64_t v45 = (_OWORD *)nullsub_1(v156);
      v140.f64[0] = v37;
      v140.f64[1] = v38;
      *(void *)&long long v141 = v39;
      *((void *)&v141 + 1) = v40;
      *(void *)&long long v142 = v41;
      *((void *)&v142 + 1) = v42;
      *(void *)&long long v143 = v43;
      *((void *)&v143 + 1) = v44;
      long long v46 = v45[1];
      *(_OWORD *)uint64_t v128 = *v45;
      *(_OWORD *)&v128[16] = v46;
      long long v47 = v45[3];
      long long v129 = v45[2];
      *(_OWORD *)uint64_t v130 = v47;
      char v19 = _s15FitnessCanvasUI24InfoActionCardViewLayoutV2eeoiySbAC_ACtFZ_0(&v140, (float64x2_t *)v128);
      return v19 & 1;
    case 3u:
      uint64_t v48 = (double *)nullsub_1(v159);
      double v50 = *v48;
      double v49 = v48[1];
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 3) {
        goto LABEL_30;
      }
      goto LABEL_17;
    case 4u:
      uint64_t v51 = (double *)nullsub_1(v159);
      double v53 = *v51;
      double v52 = v51[1];
      double v54 = v51[2];
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 4) {
        goto LABEL_30;
      }
      long long v55 = (double *)nullsub_1(v156);
      BOOL v56 = v53 == *v55;
      if (v52 != v55[1]) {
        BOOL v56 = 0;
      }
      char v19 = v54 == v55[2] && v56;
      break;
    case 5u:
      uint64_t v57 = (double *)nullsub_1(v159);
      double v50 = *v57;
      double v49 = v57[1];
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 5) {
        goto LABEL_30;
      }
LABEL_17:
      uint64_t v58 = (double *)nullsub_1(v156);
      char v19 = v49 == v58[1] && v50 == *v58;
      break;
    case 6u:
      long long v59 = (double *)nullsub_1(v159);
      float64_t v60 = *v59;
      float64_t v61 = v59[1];
      uint64_t v62 = *((void *)v59 + 2);
      uint64_t v63 = *((void *)v59 + 3);
      uint64_t v64 = *((void *)v59 + 4);
      uint64_t v65 = *((void *)v59 + 5);
      uint64_t v66 = *((void *)v59 + 6);
      uint64_t v67 = *((void *)v59 + 7);
      uint64_t v68 = *((void *)v59 + 8);
      uint64_t v69 = *((void *)v59 + 9);
      uint64_t v70 = *((void *)v59 + 10);
      uint64_t v126 = *((void *)v59 + 12);
      uint64_t v127 = *((void *)v59 + 11);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 6) {
        goto LABEL_30;
      }
      uint64_t v71 = nullsub_1(v156);
      uint64_t v72 = *(void *)(v71 + 48);
      v140.f64[0] = v60;
      v140.f64[1] = v61;
      *(void *)&long long v141 = v62;
      *((void *)&v141 + 1) = v63;
      *(void *)&long long v142 = v64;
      *((void *)&v142 + 1) = v65;
      *(void *)&long long v143 = v66;
      *((void *)&v143 + 1) = v67;
      *(void *)&long long v144 = v68;
      *((void *)&v144 + 1) = v69;
      *(void *)&long long v145 = v70;
      *((void *)&v145 + 1) = v127;
      *(void *)&long long v146 = v126;
      long long v73 = *(_OWORD *)(v71 + 16);
      *(_OWORD *)uint64_t v128 = *(_OWORD *)v71;
      *(_OWORD *)&v128[16] = v73;
      long long v129 = *(_OWORD *)(v71 + 32);
      *(void *)uint64_t v130 = v72;
      *(_OWORD *)&v130[8] = *(_OWORD *)(v71 + 56);
      *(_OWORD *)&v130[24] = *(_OWORD *)(v71 + 72);
      *(_OWORD *)&v130[40] = *(_OWORD *)(v71 + 88);
      char v19 = _s15FitnessCanvasUI22StandardCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      break;
    case 7u:
      uint64_t v74 = nullsub_1(v159);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 7) {
        goto LABEL_30;
      }
      uint64_t v75 = (_OWORD *)nullsub_1(v156);
      long long v76 = *(_OWORD *)(v74 + 112);
      long long v146 = *(_OWORD *)(v74 + 96);
      long long v147 = v76;
      long long v77 = *(_OWORD *)(v74 + 144);
      long long v148 = *(_OWORD *)(v74 + 128);
      long long v149 = v77;
      long long v78 = *(_OWORD *)(v74 + 48);
      long long v142 = *(_OWORD *)(v74 + 32);
      long long v143 = v78;
      long long v79 = *(_OWORD *)(v74 + 80);
      long long v144 = *(_OWORD *)(v74 + 64);
      long long v145 = v79;
      long long v80 = *(_OWORD *)(v74 + 16);
      float64x2_t v140 = *(float64x2_t *)v74;
      long long v141 = v80;
      long long v81 = v75[7];
      *(_OWORD *)&v130[48] = v75[6];
      long long v131 = v81;
      long long v82 = v75[9];
      long long v132 = v75[8];
      long long v133 = v82;
      long long v83 = v75[3];
      long long v129 = v75[2];
      *(_OWORD *)uint64_t v130 = v83;
      long long v84 = v75[5];
      *(_OWORD *)&v130[16] = v75[4];
      *(_OWORD *)&v130[32] = v84;
      long long v85 = v75[1];
      *(_OWORD *)uint64_t v128 = *v75;
      *(_OWORD *)&v128[16] = v85;
      char v19 = _s15FitnessCanvasUI33StandardHorizontalStackViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      break;
    case 8u:
      uint64_t v86 = nullsub_1(v159);
      char v87 = *(unsigned char *)v86;
      float64_t v88 = *(double *)(v86 + 8);
      uint64_t v89 = *(void *)(v86 + 16);
      uint64_t v90 = *(void *)(v86 + 24);
      char v91 = *(unsigned char *)(v86 + 32);
      uint64_t v92 = *(void *)(v86 + 40);
      uint64_t v93 = *(void *)(v86 + 48);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 8) {
        goto LABEL_30;
      }
      uint64_t v94 = nullsub_1(v156);
      char v95 = *(unsigned char *)v94;
      uint64_t v96 = *(void *)(v94 + 24);
      char v97 = *(unsigned char *)(v94 + 32);
      uint64_t v98 = *(void *)(v94 + 40);
      uint64_t v99 = *(void *)(v94 + 48);
      LOBYTE(v140.f64[0]) = v87;
      v140.f64[1] = v88;
      *(void *)&long long v141 = v89;
      *((void *)&v141 + 1) = v90;
      LOBYTE(v142) = v91;
      *((void *)&v142 + 1) = v92;
      *(void *)&long long v143 = v93;
      v128[0] = v95;
      *(_OWORD *)&v128[8] = *(_OWORD *)(v94 + 8);
      *(void *)&v128[24] = v96;
      LOBYTE(v129) = v97;
      *((void *)&v129 + 1) = v98;
      *(void *)uint64_t v130 = v99;
      char v19 = _s15FitnessCanvasUI31StandardVerticalStackViewLayoutV2eeoiySbAC_ACtFZ_0(v140.f64, (double *)v128);
      break;
    case 9u:
      uint64_t v100 = nullsub_1(v159);
      float64_t v101 = *(double *)v100;
      float64_t v102 = *(double *)(v100 + 8);
      uint64_t v103 = *(void *)(v100 + 16);
      char v104 = *(unsigned char *)(v100 + 24);
      uint64_t v105 = *(void *)(v100 + 32);
      uint64_t v106 = *(void *)(v100 + 40);
      uint64_t v107 = *(void *)(v100 + 48);
      uint64_t v108 = *(void *)(v100 + 56);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 9) {
        goto LABEL_30;
      }
      uint64_t v109 = nullsub_1(v156);
      uint64_t v110 = *(void *)(v109 + 16);
      char v111 = *(unsigned char *)(v109 + 24);
      uint64_t v112 = *(void *)(v109 + 48);
      uint64_t v113 = *(void *)(v109 + 56);
      v140.f64[0] = v101;
      v140.f64[1] = v102;
      *(void *)&long long v141 = v103;
      BYTE8(v141) = v104;
      *(void *)&long long v142 = v105;
      *((void *)&v142 + 1) = v106;
      *(void *)&long long v143 = v107;
      *((void *)&v143 + 1) = v108;
      *(_OWORD *)uint64_t v128 = *(_OWORD *)v109;
      *(void *)&v128[16] = v110;
      v128[24] = v111;
      long long v129 = *(_OWORD *)(v109 + 32);
      *(void *)uint64_t v130 = v112;
      *(void *)&v130[8] = v113;
      char v19 = _s15FitnessCanvasUI18TallCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      break;
    case 0xAu:
      uint64_t v114 = nullsub_1(v159);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156) != 10) {
        goto LABEL_30;
      }
      uint64_t v115 = (_OWORD *)nullsub_1(v156);
      long long v116 = *(_OWORD *)(v114 + 80);
      long long v144 = *(_OWORD *)(v114 + 64);
      long long v145 = v116;
      long long v117 = *(_OWORD *)(v114 + 112);
      long long v146 = *(_OWORD *)(v114 + 96);
      long long v147 = v117;
      long long v118 = *(_OWORD *)(v114 + 16);
      float64x2_t v140 = *(float64x2_t *)v114;
      long long v141 = v118;
      long long v119 = *(_OWORD *)(v114 + 48);
      long long v142 = *(_OWORD *)(v114 + 32);
      long long v143 = v119;
      long long v120 = v115[5];
      *(_OWORD *)&v130[16] = v115[4];
      *(_OWORD *)&v130[32] = v120;
      long long v121 = v115[7];
      *(_OWORD *)&v130[48] = v115[6];
      long long v131 = v121;
      long long v122 = v115[1];
      *(_OWORD *)uint64_t v128 = *v115;
      *(_OWORD *)&v128[16] = v122;
      long long v123 = v115[3];
      long long v129 = v115[2];
      *(_OWORD *)uint64_t v130 = v123;
      char v19 = _s15FitnessCanvasUI23VerticalStackCardLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      break;
    case 0xBu:
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      BOOL v124 = sub_24EC8EFCC((uint64_t)v156) == 11;
      goto LABEL_33;
    case 0xCu:
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      BOOL v124 = sub_24EC8EFCC((uint64_t)v156) == 12;
LABEL_33:
      char v19 = v124;
      break;
    default:
      uint64_t v3 = nullsub_1(v159);
      sub_24EC8EF70((uint64_t)v158, (uint64_t)v156);
      if (sub_24EC8EFCC((uint64_t)v156))
      {
LABEL_30:
        char v19 = 0;
      }
      else
      {
        uint64_t v4 = nullsub_1(v156);
        long long v5 = *(_OWORD *)(v3 + 208);
        long long v152 = *(_OWORD *)(v3 + 192);
        long long v153 = v5;
        long long v154 = *(_OWORD *)(v3 + 224);
        uint64_t v155 = *(void *)(v3 + 240);
        long long v6 = *(_OWORD *)(v3 + 144);
        long long v148 = *(_OWORD *)(v3 + 128);
        long long v149 = v6;
        long long v7 = *(_OWORD *)(v3 + 176);
        long long v150 = *(_OWORD *)(v3 + 160);
        long long v151 = v7;
        long long v8 = *(_OWORD *)(v3 + 80);
        long long v144 = *(_OWORD *)(v3 + 64);
        long long v145 = v8;
        long long v9 = *(_OWORD *)(v3 + 112);
        long long v146 = *(_OWORD *)(v3 + 96);
        long long v147 = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        float64x2_t v140 = *(float64x2_t *)v3;
        long long v141 = v10;
        long long v11 = *(_OWORD *)(v3 + 48);
        long long v142 = *(_OWORD *)(v3 + 32);
        long long v143 = v11;
        long long v12 = *(_OWORD *)(v4 + 208);
        long long v136 = *(_OWORD *)(v4 + 192);
        long long v137 = v12;
        long long v138 = *(_OWORD *)(v4 + 224);
        uint64_t v139 = *(void *)(v4 + 240);
        long long v13 = *(_OWORD *)(v4 + 144);
        long long v132 = *(_OWORD *)(v4 + 128);
        long long v133 = v13;
        long long v14 = *(_OWORD *)(v4 + 176);
        long long v134 = *(_OWORD *)(v4 + 160);
        long long v135 = v14;
        long long v15 = *(_OWORD *)(v4 + 80);
        *(_OWORD *)&v130[16] = *(_OWORD *)(v4 + 64);
        *(_OWORD *)&v130[32] = v15;
        long long v16 = *(_OWORD *)(v4 + 112);
        *(_OWORD *)&v130[48] = *(_OWORD *)(v4 + 96);
        long long v131 = v16;
        long long v17 = *(_OWORD *)(v4 + 16);
        *(_OWORD *)uint64_t v128 = *(_OWORD *)v4;
        *(_OWORD *)&v128[16] = v17;
        long long v18 = *(_OWORD *)(v4 + 48);
        long long v129 = *(_OWORD *)(v4 + 32);
        *(_OWORD *)uint64_t v130 = v18;
        char v19 = _s15FitnessCanvasUI20ActionCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v140, (uint64_t)v128);
      }
      break;
  }
  return v19 & 1;
}

unint64_t sub_24ECBE040()
{
  unint64_t result = qword_269964FC8;
  if (!qword_269964FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FC8);
  }
  return result;
}

__n128 __swift_memcpy249_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_OWORD *)(a1 + 233) = *(long long *)((char *)a2 + 233);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for LazyCanvasItemContent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 249)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 248);
  if (v3 >= 0xC) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LazyCanvasItemContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_OWORD *)(result + 233) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 245;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 249) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 249) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 248) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24ECBE184(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 248);
  if (result >= 0xB) {
    return (*(_DWORD *)a1 + 11);
  }
  return result;
}

uint64_t sub_24ECBE1A0(uint64_t result, unsigned int a2)
{
  if (a2 > 0xA)
  {
    *(void *)(result + 240) = 0;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 11;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 248) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent()
{
  return &type metadata for LazyCanvasItemContent;
}

uint64_t getEnumTagSinglePayload for LazyCanvasItemContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LazyCanvasItemContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECBE350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.CodingKeys()
{
  return &type metadata for LazyCanvasItemContent.CodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.ActionCardCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.ActionCardCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.FullWidthStageCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.FullWidthStageCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.InfoActionCardCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.InfoActionCardCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.LargeBrickCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.LargeBrickCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.MediumDynamicBrickCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.MediumDynamicBrickCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.MonogramVerticalStackCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.MonogramVerticalStackCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.SmallDynamicBrickCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.SmallDynamicBrickCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.StandardCardCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.StandardCardCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.StandardHorizontalStackCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.StandardHorizontalStackCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.StandardVerticalStackCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.StandardVerticalStackCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.TallCardCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.TallCardCodingKeys;
}

unsigned char *_s15FitnessCanvasUI21LazyCanvasItemContentO20ActionCardCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ECBE4DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.VerticalStackCardCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.VerticalStackCardCodingKeys;
}

ValueMetadata *type metadata accessor for LazyCanvasItemContent.WideBrickCodingKeys()
{
  return &type metadata for LazyCanvasItemContent.WideBrickCodingKeys;
}

unint64_t sub_24ECBE528()
{
  unint64_t result = qword_269964FD0;
  if (!qword_269964FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FD0);
  }
  return result;
}

unint64_t sub_24ECBE580()
{
  unint64_t result = qword_269964FD8;
  if (!qword_269964FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FD8);
  }
  return result;
}

unint64_t sub_24ECBE5D8()
{
  unint64_t result = qword_269964FE0;
  if (!qword_269964FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FE0);
  }
  return result;
}

unint64_t sub_24ECBE630()
{
  unint64_t result = qword_269964FE8;
  if (!qword_269964FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FE8);
  }
  return result;
}

unint64_t sub_24ECBE688()
{
  unint64_t result = qword_269964FF0;
  if (!qword_269964FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FF0);
  }
  return result;
}

unint64_t sub_24ECBE6E0()
{
  unint64_t result = qword_269964FF8;
  if (!qword_269964FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269964FF8);
  }
  return result;
}

unint64_t sub_24ECBE738()
{
  unint64_t result = qword_269965000;
  if (!qword_269965000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965000);
  }
  return result;
}

unint64_t sub_24ECBE790()
{
  unint64_t result = qword_269965008;
  if (!qword_269965008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965008);
  }
  return result;
}

unint64_t sub_24ECBE7E8()
{
  unint64_t result = qword_269965010;
  if (!qword_269965010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965010);
  }
  return result;
}

unint64_t sub_24ECBE840()
{
  unint64_t result = qword_269965018;
  if (!qword_269965018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965018);
  }
  return result;
}

unint64_t sub_24ECBE898()
{
  unint64_t result = qword_269965020;
  if (!qword_269965020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965020);
  }
  return result;
}

unint64_t sub_24ECBE8F0()
{
  unint64_t result = qword_269965028;
  if (!qword_269965028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965028);
  }
  return result;
}

unint64_t sub_24ECBE948()
{
  unint64_t result = qword_269965030;
  if (!qword_269965030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965030);
  }
  return result;
}

unint64_t sub_24ECBE9A0()
{
  unint64_t result = qword_269965038;
  if (!qword_269965038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965038);
  }
  return result;
}

unint64_t sub_24ECBE9F8()
{
  unint64_t result = qword_269965040;
  if (!qword_269965040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965040);
  }
  return result;
}

unint64_t sub_24ECBEA50()
{
  unint64_t result = qword_269965048;
  if (!qword_269965048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965048);
  }
  return result;
}

unint64_t sub_24ECBEAA8()
{
  unint64_t result = qword_269965050;
  if (!qword_269965050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965050);
  }
  return result;
}

unint64_t sub_24ECBEB00()
{
  unint64_t result = qword_269965058;
  if (!qword_269965058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965058);
  }
  return result;
}

unint64_t sub_24ECBEB58()
{
  unint64_t result = qword_269965060;
  if (!qword_269965060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965060);
  }
  return result;
}

unint64_t sub_24ECBEBB0()
{
  unint64_t result = qword_269965068;
  if (!qword_269965068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965068);
  }
  return result;
}

unint64_t sub_24ECBEC08()
{
  unint64_t result = qword_269965070;
  if (!qword_269965070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965070);
  }
  return result;
}

unint64_t sub_24ECBEC60()
{
  unint64_t result = qword_269965078;
  if (!qword_269965078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965078);
  }
  return result;
}

unint64_t sub_24ECBECB8()
{
  unint64_t result = qword_269965080;
  if (!qword_269965080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965080);
  }
  return result;
}

unint64_t sub_24ECBED10()
{
  unint64_t result = qword_269965088;
  if (!qword_269965088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965088);
  }
  return result;
}

unint64_t sub_24ECBED68()
{
  unint64_t result = qword_269965090;
  if (!qword_269965090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965090);
  }
  return result;
}

unint64_t sub_24ECBEDC0()
{
  unint64_t result = qword_269965098;
  if (!qword_269965098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965098);
  }
  return result;
}

unint64_t sub_24ECBEE18()
{
  unint64_t result = qword_2699650A0;
  if (!qword_2699650A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650A0);
  }
  return result;
}

unint64_t sub_24ECBEE70()
{
  unint64_t result = qword_2699650A8;
  if (!qword_2699650A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650A8);
  }
  return result;
}

unint64_t sub_24ECBEEC8()
{
  unint64_t result = qword_2699650B0;
  if (!qword_2699650B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650B0);
  }
  return result;
}

unint64_t sub_24ECBEF20()
{
  unint64_t result = qword_2699650B8;
  if (!qword_2699650B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650B8);
  }
  return result;
}

unint64_t sub_24ECBEF78()
{
  unint64_t result = qword_2699650C0;
  if (!qword_2699650C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650C0);
  }
  return result;
}

unint64_t sub_24ECBEFD0()
{
  unint64_t result = qword_2699650C8;
  if (!qword_2699650C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650C8);
  }
  return result;
}

unint64_t sub_24ECBF028()
{
  unint64_t result = qword_2699650D0;
  if (!qword_2699650D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650D0);
  }
  return result;
}

unint64_t sub_24ECBF080()
{
  unint64_t result = qword_2699650D8;
  if (!qword_2699650D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650D8);
  }
  return result;
}

unint64_t sub_24ECBF0D8()
{
  unint64_t result = qword_2699650E0;
  if (!qword_2699650E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650E0);
  }
  return result;
}

unint64_t sub_24ECBF130()
{
  unint64_t result = qword_2699650E8;
  if (!qword_2699650E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650E8);
  }
  return result;
}

unint64_t sub_24ECBF188()
{
  unint64_t result = qword_2699650F0;
  if (!qword_2699650F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650F0);
  }
  return result;
}

unint64_t sub_24ECBF1E0()
{
  unint64_t result = qword_2699650F8;
  if (!qword_2699650F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699650F8);
  }
  return result;
}

unint64_t sub_24ECBF238()
{
  unint64_t result = qword_269965100;
  if (!qword_269965100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965100);
  }
  return result;
}

unint64_t sub_24ECBF290()
{
  unint64_t result = qword_269965108;
  if (!qword_269965108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965108);
  }
  return result;
}

uint64_t sub_24ECBF2E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61436E6F69746361 && a2 == 0xEA00000000006472;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746469576C6C7566 && a2 == 0xEE00656761745368 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697463416F666E69 && a2 == 0xEE00647261436E6FLL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697242656772616CLL && a2 == 0xEA00000000006B63 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C400 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C420 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C440 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x647261646E617473 && a2 == 0xEC00000064726143 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EE7C460 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C480 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x647261436C6C6174 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C4A0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6369724265646977 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t CanvasSectionDescriptor.identifier.getter()
{
  uint64_t v0 = sub_24EC996FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t CanvasSectionDescriptor.layout.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 180);
  uint64_t v5 = type metadata accessor for CanvasSectionLayout();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t CanvasSectionDescriptor.header.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 184);
  type metadata accessor for CanvasSectionHeader();
  uint64_t v5 = sub_24EE57430();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t CanvasSectionDescriptor.footer.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 188));
  return result;
}

uint64_t CanvasSectionDescriptor.items.getter(uint64_t a1)
{
  sub_24ECC2CFC(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CanvasSectionDescriptor.items.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 192);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*CanvasSectionDescriptor.items.modify())()
{
  return nullsub_1;
}

uint64_t CanvasSectionDescriptor.metrics.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 196);
  uint64_t v5 = sub_24EE57430();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CanvasSectionDescriptor.redactionReasons.getter(uint64_t a1)
{
  sub_24ECC2D08(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CanvasSectionDescriptor.init(identifier:layout:header:footer:items:metrics:redactionReasons:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  char v19 = *a5;
  *a9 = a1;
  a9[1] = a2;
  long long v10 = (int *)type metadata accessor for CanvasSectionDescriptor();
  long long v11 = (char *)a9 + v10[45];
  uint64_t v12 = type metadata accessor for CanvasSectionLayout();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  long long v13 = (char *)a9 + v10[46];
  type metadata accessor for CanvasSectionHeader();
  uint64_t v14 = sub_24EE57430();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *((unsigned char *)a9 + v10[47]) = v19;
  *(void *)((char *)a9 + v10[48]) = a6;
  long long v15 = (char *)a9 + v10[49];
  uint64_t v16 = sub_24EE57430();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a7, v16);
  *(void *)((char *)a9 + v10[50]) = a8;
  return result;
}

uint64_t sub_24ECBFCC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C4C0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_24ECBFF90(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 2:
      unint64_t result = 0x726564616568;
      break;
    case 3:
      unint64_t result = 0x7265746F6F66;
      break;
    case 4:
      unint64_t result = 0x736D657469;
      break;
    case 5:
      unint64_t result = 0x7363697274656DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24ECC0070(char *a1, char *a2)
{
  return sub_24EC97258(*a1, *a2);
}

uint64_t sub_24ECC00CC()
{
  return sub_24EC974A4();
}

uint64_t sub_24ECC012C()
{
  return sub_24EC97268();
}

uint64_t sub_24ECC017C()
{
  return sub_24EE578B0();
}

unint64_t sub_24ECC01EC()
{
  return sub_24ECBFF90(*v0);
}

uint64_t sub_24ECC024C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECBFCC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ECC02AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ECC2D2C();
  *a1 = result;
  return result;
}

uint64_t sub_24ECC0310(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECC0364(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECC03B8()
{
  uint64_t v0 = sub_24EC996FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_24ECC03FC(uint64_t a1)
{
  sub_24ECC2CFC(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24ECC0428(uint64_t a1)
{
  sub_24ECC2D08(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CanvasSectionDescriptor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 144);
  uint64_t v21 = *(void *)(a2 + 152);
  uint64_t v22 = *(void *)(a2 + 160);
  uint64_t v23 = *(void *)(a2 + 168);
  uint64_t v50 = v4;
  uint64_t v59 = v4;
  uint64_t v60 = v5;
  uint64_t v45 = v5;
  uint64_t v44 = v6;
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  uint64_t v43 = v7;
  uint64_t v42 = v8;
  uint64_t v63 = v8;
  uint64_t v64 = v9;
  v35[1] = v9;
  uint64_t v51 = v10;
  uint64_t v65 = v10;
  uint64_t v66 = v11;
  uint64_t v48 = v11;
  uint64_t v53 = v13;
  uint64_t v67 = v13;
  uint64_t v68 = v12;
  uint64_t v47 = v12;
  uint64_t v41 = v14;
  uint64_t v69 = v14;
  uint64_t v70 = v15;
  uint64_t v40 = v15;
  uint64_t v39 = v16;
  uint64_t v71 = v16;
  uint64_t v72 = v17;
  uint64_t v38 = v17;
  uint64_t v37 = v18;
  uint64_t v73 = v18;
  uint64_t v74 = v19;
  uint64_t v36 = v19;
  v35[0] = v20;
  uint64_t v75 = v20;
  uint64_t v76 = v21;
  uint64_t v49 = v21;
  uint64_t v46 = v22;
  uint64_t v77 = v22;
  uint64_t v78 = v23;
  uint64_t v52 = v23;
  type metadata accessor for CanvasSectionDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_24EE577C0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  long long v27 = (char *)v35 - v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v28 = v54;
  sub_24EE578D0();
  LOBYTE(v59) = 0;
  uint64_t v56 = v24;
  long long v29 = v27;
  uint64_t v30 = v55;
  sub_24EE57770();
  if (v30) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v56);
  }
  uint64_t v32 = v48;
  uint64_t v33 = v50;
  LOBYTE(v79) = 1;
  uint64_t v59 = v51;
  uint64_t v60 = v53;
  uint64_t v61 = v49;
  uint64_t v62 = v52;
  type metadata accessor for CanvasSectionLayout();
  swift_getWitnessTable();
  sub_24EE577B0();
  LOBYTE(v79) = 2;
  uint64_t v59 = v33;
  uint64_t v60 = v32;
  uint64_t v34 = v47;
  uint64_t v61 = v47;
  uint64_t v62 = v46;
  type metadata accessor for CanvasSectionHeader();
  swift_getWitnessTable();
  sub_24EE57760();
  LOBYTE(v59) = *(unsigned char *)(v28 + *(int *)(a2 + 188));
  LOBYTE(v79) = 3;
  sub_24EC9971C();
  sub_24EE577B0();
  uint64_t v79 = *(void *)(v28 + *(int *)(a2 + 192));
  char v58 = 4;
  uint64_t v59 = v33;
  uint64_t v60 = v45;
  uint64_t v61 = v44;
  uint64_t v62 = v43;
  uint64_t v63 = v42;
  uint64_t v64 = v53;
  uint64_t v65 = v34;
  uint64_t v66 = v41;
  uint64_t v67 = v40;
  uint64_t v68 = v39;
  uint64_t v69 = v38;
  uint64_t v70 = v37;
  uint64_t v71 = v36;
  uint64_t v72 = v52;
  type metadata accessor for CanvasItemDescriptor();
  sub_24EE571B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE577B0();
  LOBYTE(v59) = 5;
  sub_24EE57760();
  uint64_t v59 = *(void *)(v28 + *(int *)(a2 + 200));
  LOBYTE(v79) = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE548);
  sub_24ECC2DA0(&qword_26B1DE550, (void (*)(void))sub_24ECC2D4C);
  sub_24EE577B0();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v56);
}

uint64_t CanvasSectionDescriptor.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, uint64_t a19, char *a20,char *a21,char *a22)
{
  long long v83 = a7;
  uint64_t v88 = a6;
  uint64_t v79 = a5;
  uint64_t v77 = a4;
  char v87 = a3;
  long long v81 = (void *)a1;
  uint64_t v55 = a9;
  uint64_t v84 = a19;
  uint64_t v89 = a18;
  long long v80 = a17;
  uint64_t v78 = a16;
  uint64_t v76 = a15;
  uint64_t v86 = a14;
  long long v85 = a13;
  long long v82 = a10;
  uint64_t v58 = sub_24EE57430();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v54 - v24;
  uint64_t v91 = a2;
  uint64_t v92 = a10;
  uint64_t v73 = a2;
  uint64_t v75 = a12;
  uint64_t v93 = a12;
  uint64_t v94 = a21;
  uint64_t v69 = (void (**)(uint64_t, uint64_t *, int *))a21;
  uint64_t v66 = type metadata accessor for CanvasSectionHeader();
  uint64_t v60 = sub_24EE57430();
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v57 = (char *)&v54 - v25;
  uint64_t v26 = (char *)a8;
  uint64_t v68 = (char *)a8;
  uint64_t v91 = a8;
  uint64_t v92 = a11;
  uint64_t v74 = a11;
  uint64_t v93 = a20;
  uint64_t v94 = a22;
  uint64_t v70 = a20;
  uint64_t v63 = type metadata accessor for CanvasSectionLayout();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = (char *)&v54 - v27;
  uint64_t v91 = a2;
  uint64_t v92 = v87;
  uint64_t v28 = v77;
  long long v29 = v79;
  uint64_t v93 = v77;
  uint64_t v94 = v79;
  uint64_t v95 = v88;
  uint64_t v96 = v83;
  char v97 = v26;
  uint64_t v98 = v82;
  uint64_t v99 = a11;
  uint64_t v100 = a12;
  float64_t v101 = v85;
  float64_t v102 = v86;
  uint64_t v30 = v76;
  long long v31 = v78;
  uint64_t v103 = v76;
  char v104 = v78;
  uint64_t v32 = v80;
  uint64_t v105 = v80;
  uint64_t v106 = v89;
  uint64_t v107 = v84;
  uint64_t v108 = a20;
  uint64_t v109 = a21;
  uint64_t v110 = a22;
  type metadata accessor for CanvasSectionDescriptor.CodingKeys();
  uint64_t WitnessTable = (int *)swift_getWitnessTable();
  uint64_t v67 = sub_24EE57730();
  uint64_t v64 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v34 = (char *)&v54 - v33;
  uint64_t v91 = v73;
  uint64_t v92 = v87;
  uint64_t v93 = v28;
  uint64_t v94 = v29;
  uint64_t v95 = v88;
  uint64_t v96 = v83;
  char v97 = v68;
  uint64_t v98 = v82;
  long long v35 = v81;
  uint64_t v99 = v74;
  uint64_t v100 = v75;
  float64_t v101 = v85;
  float64_t v102 = v86;
  uint64_t v103 = v30;
  char v104 = v31;
  uint64_t v105 = v32;
  uint64_t v106 = v89;
  uint64_t v107 = v84;
  uint64_t v108 = v70;
  uint64_t v109 = (char *)v69;
  uint64_t v110 = a22;
  uint64_t v70 = a22;
  uint64_t v36 = type metadata accessor for CanvasSectionDescriptor();
  uint64_t v37 = *(void (***)(uint64_t, uint64_t *, int *))(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t *)((char *)&v54 - v38);
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  long long v82 = v34;
  uint64_t v40 = v72;
  sub_24EE578C0();
  if (v40) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  }
  uint64_t v41 = v65;
  uint64_t v69 = v37;
  uint64_t v42 = v64;
  uint64_t v72 = v39;
  uint64_t WitnessTable = (int *)v36;
  LOBYTE(v91) = 0;
  uint64_t v43 = sub_24EE576D0();
  uint64_t v44 = v72;
  *uint64_t v72 = v43;
  v44[1] = v45;
  LOBYTE(v91) = 1;
  uint64_t v46 = v63;
  swift_getWitnessTable();
  sub_24EE57710();
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))((char *)v44 + WitnessTable[45], v41, v46);
  LOBYTE(v91) = 2;
  swift_getWitnessTable();
  uint64_t v47 = v57;
  uint64_t v48 = v82;
  sub_24EE576C0();
  uint64_t v49 = WitnessTable;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))((char *)v44 + WitnessTable[46], v47, v60);
  LOBYTE(v111) = 3;
  sub_24EC99770();
  sub_24EE57710();
  *((unsigned char *)v44 + v49[47]) = v91;
  uint64_t v91 = v73;
  uint64_t v92 = v87;
  uint64_t v93 = v77;
  uint64_t v94 = v79;
  uint64_t v95 = v88;
  uint64_t v96 = v74;
  char v97 = v75;
  uint64_t v98 = v85;
  uint64_t v99 = v86;
  uint64_t v100 = v76;
  float64_t v101 = v78;
  float64_t v102 = v80;
  uint64_t v103 = v89;
  char v104 = v70;
  type metadata accessor for CanvasItemDescriptor();
  sub_24EE571B0();
  LOBYTE(v91) = 4;
  uint64_t v90 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE57710();
  uint64_t v50 = WitnessTable;
  *(uint64_t *)((char *)v44 + WitnessTable[48]) = v111;
  LOBYTE(v91) = 5;
  uint64_t v51 = v56;
  sub_24EE576C0();
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))((char *)v44 + v50[49], v51, v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE548);
  LOBYTE(v111) = 6;
  sub_24ECC2DA0((unint64_t *)&unk_269965110, (void (*)(void))sub_24ECC2E10);
  sub_24EE57710();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v67);
  *(uint64_t *)((char *)v44 + v50[50]) = v91;
  uint64_t v52 = v69;
  v69[2](v55, v44, v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  return ((uint64_t (*)(uint64_t *, int *))v52[1])(v44, v50);
}

uint64_t sub_24ECC167C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CanvasSectionDescriptor.init(from:)(a1, *(void *)(a2 + 16), *(char **)(a2 + 24), *(char **)(a2 + 32), *(char **)(a2 + 40), *(void *)(a2 + 48), *(char **)(a2 + 56), *(void *)(a2 + 64), a3, *(char **)(a2 + 72), *(char **)(a2 + 80), *(char **)(a2 + 88), *(char **)(a2 + 96), *(char **)(a2 + 104), *(char **)(a2 + 112), *(char **)(a2 + 120), *(char **)(a2 + 128), *(char **)(a2 + 136), *(void *)(a2 + 144),
           *(char **)(a2 + 152),
           *(char **)(a2 + 160),
           *(char **)(a2 + 168));
}

uint64_t sub_24ECC16DC(void *a1, uint64_t a2)
{
  return CanvasSectionDescriptor.encode(to:)(a1, a2);
}

uint64_t CanvasSectionDescriptor.hash(into:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_24EE570A0();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for CanvasSectionLayout();
  CanvasSectionLayout.hash(into:)(a1, v5);
  type metadata accessor for CanvasSectionHeader();
  sub_24EE57430();
  swift_getWitnessTable();
  sub_24EE57440();
  sub_24EE57880();
  swift_bridgeObjectRetain();
  type metadata accessor for CanvasItemDescriptor();
  swift_getWitnessTable();
  sub_24EE571C0();
  swift_bridgeObjectRelease();
  sub_24EE57430();
  sub_24EE57440();
  uint64_t v6 = *(void *)(v2 + *(int *)(a2 + 200));
  swift_bridgeObjectRetain();
  sub_24ECC2A5C(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t static CanvasSectionDescriptor.== infix(_:_:)(char *a1, char *a2, unsigned int (*a3)(void, void, void), char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v129 = a7;
  uint64_t v128 = a6;
  uint64_t v127 = a5;
  uint64_t v126 = a4;
  uint64_t v26 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v105 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v107 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v108 = (char *)&v89 - v30;
  uint64_t v111 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v106 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v109 = (char *)&v89 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v110 = (char *)&v89 - v35;
  uint64_t v130 = a3;
  long long v132 = a3;
  long long v133 = a10;
  uint64_t v131 = a12;
  uint64_t v134 = a12;
  uint64_t v135 = a21;
  uint64_t v36 = type metadata accessor for CanvasSectionHeader();
  uint64_t v120 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v113 = (char *)&v89 - v37;
  uint64_t v38 = sub_24EE57430();
  uint64_t v125 = swift_getTupleTypeMetadata2();
  uint64_t v117 = *(void *)(v125 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v125);
  uint64_t v41 = (char *)&v89 - v40;
  uint64_t v121 = *(void *)(v38 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  long long v116 = (char *)&v89 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  long long v123 = (char *)&v89 - v45;
  MEMORY[0x270FA5388](v44);
  BOOL v124 = (char *)&v89 - v46;
  if (*(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1)
    || (char v47 = sub_24EE577E0(), v48 = 0, (v47 & 1) != 0))
  {
    uint64_t v114 = v38;
    uint64_t v115 = v41;
    uint64_t v122 = v36;
    uint64_t v98 = v26;
    uint64_t v97 = v28;
    long long v132 = v130;
    long long v133 = v126;
    uint64_t v134 = v127;
    uint64_t v135 = v128;
    uint64_t v136 = v129;
    uint64_t v137 = a8;
    uint64_t v99 = a8;
    uint64_t v138 = a9;
    uint64_t v139 = a10;
    uint64_t v140 = a11;
    uint64_t v141 = v131;
    long long v142 = a13;
    uint64_t v143 = a14;
    uint64_t v100 = a14;
    uint64_t v101 = a15;
    uint64_t v144 = a15;
    uint64_t v145 = a16;
    float64_t v102 = (char *)a16;
    uint64_t v103 = a17;
    uint64_t v146 = a17;
    uint64_t v147 = a18;
    uint64_t v104 = a18;
    uint64_t v96 = a19;
    uint64_t v148 = a19;
    uint64_t v149 = a20;
    uint64_t v150 = a21;
    uint64_t v151 = a22;
    uint64_t v49 = type metadata accessor for CanvasSectionDescriptor();
    uint64_t v50 = *(int *)(v49 + 180);
    long long v118 = a1;
    long long v119 = a2;
    if ((static CanvasSectionLayout.== infix(_:_:)((uint64_t)&a1[v50], (uint64_t)&a2[v50], a9, a11, a20, a22) & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v89 = a11;
    uint64_t v90 = a13;
    uint64_t v91 = a22;
    uint64_t v92 = a10;
    uint64_t v93 = a21;
    uint64_t v51 = v121;
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
    uint64_t v53 = v124;
    uint64_t v54 = v114;
    v52(v124, &v118[*(int *)(v49 + 184)], v114);
    uint64_t v94 = v49;
    uint64_t v55 = v123;
    v52(v123, &v119[*(int *)(v49 + 184)], v54);
    uint64_t v56 = v115;
    uint64_t v57 = &v115[*(int *)(v125 + 48)];
    v52(v115, v53, v54);
    uint64_t v95 = v57;
    v52(v57, v55, v54);
    uint64_t v58 = v120;
    uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
    if (v59(v56, 1, v122) == 1)
    {
      uint64_t v60 = *(void (**)(char *, uint64_t))(v51 + 8);
      v60(v55, v54);
      v60(v53, v54);
      if (v59(v95, 1, v122) == 1)
      {
        v60(v56, v54);
        uint64_t v61 = v131;
LABEL_13:
        uint64_t v69 = v94;
        uint64_t v70 = v118;
        uint64_t v71 = v119;
        if (v118[*(int *)(v94 + 188)] != v119[*(int *)(v94 + 188)]) {
          goto LABEL_23;
        }
        long long v132 = v130;
        long long v133 = v126;
        uint64_t v134 = v127;
        uint64_t v135 = v128;
        uint64_t v136 = v129;
        uint64_t v137 = v89;
        uint64_t v138 = v61;
        uint64_t v139 = v90;
        uint64_t v140 = v100;
        uint64_t v141 = v101;
        long long v142 = v102;
        uint64_t v143 = v103;
        uint64_t v144 = v104;
        uint64_t v145 = v91;
        type metadata accessor for CanvasItemDescriptor();
        swift_getWitnessTable();
        if ((sub_24EE571D0() & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v72 = v111;
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
        uint64_t v74 = v110;
        uint64_t v75 = v97;
        v73(v110, &v70[*(int *)(v69 + 196)], v97);
        uint64_t v76 = v109;
        v73(v109, &v71[*(int *)(v69 + 196)], v75);
        uint64_t v77 = v108;
        uint64_t v78 = (uint64_t)&v108[*(int *)(TupleTypeMetadata2 + 48)];
        v73(v108, v74, v75);
        uint64_t v131 = v78;
        v73((char *)v78, v76, v75);
        uint64_t v130 = *(unsigned int (**)(void, void, void))(v98 + 48);
        if (v130(v77, 1, v99) == 1)
        {
          uint64_t v79 = *(void (**)(char *, uint64_t))(v72 + 8);
          v79(v76, v75);
          v79(v74, v75);
          if (v130(v131, 1, v99) == 1)
          {
            v79(v77, v75);
LABEL_22:
            char v48 = sub_24ECC25F8(*(void *)&v70[*(int *)(v94 + 200)], *(void *)&v71[*(int *)(v94 + 200)]);
            return v48 & 1;
          }
          goto LABEL_20;
        }
        long long v80 = v106;
        v73(v106, v77, v75);
        uint64_t v81 = v131;
        uint64_t v82 = v99;
        if (v130(v131, 1, v99) == 1)
        {
          long long v83 = *(void (**)(char *, uint64_t))(v111 + 8);
          v83(v109, v75);
          v83(v110, v75);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v80, v82);
LABEL_20:
          (*(void (**)(char *, uint64_t))(v107 + 8))(v77, TupleTypeMetadata2);
          goto LABEL_23;
        }
        uint64_t v84 = v98;
        long long v85 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v105, v81, v82);
        LODWORD(v131) = sub_24EE57040();
        uint64_t v86 = *(void (**)(char *, uint64_t))(v84 + 8);
        v86(v85, v82);
        char v87 = *(void (**)(char *, uint64_t))(v111 + 8);
        v87(v109, v75);
        v87(v110, v75);
        v86(v80, v82);
        v87(v77, v75);
        if (v131) {
          goto LABEL_22;
        }
LABEL_23:
        char v48 = 0;
        return v48 & 1;
      }
    }
    else
    {
      uint64_t v62 = (uint64_t)v116;
      v52(v116, v56, v54);
      uint64_t v63 = v95;
      uint64_t v64 = v122;
      if (v59(v95, 1, v122) != 1)
      {
        uint64_t v66 = (uint64_t)v113;
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v113, v63, v64);
        uint64_t v61 = v131;
        LODWORD(v125) = static CanvasSectionHeader.== infix(_:_:)(v62, v66, (uint64_t)v130, v92, v131, v93);
        uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
        v67(v66, v64);
        uint64_t v68 = *(void (**)(char *, uint64_t))(v51 + 8);
        v68(v123, v54);
        v68(v124, v54);
        v67(v62, v64);
        v68(v56, v54);
        if ((v125 & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_13;
      }
      uint64_t v65 = *(void (**)(char *, uint64_t))(v51 + 8);
      v65(v123, v54);
      v65(v124, v54);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v62, v64);
    }
    (*(void (**)(char *, uint64_t))(v117 + 8))(v56, v125);
    goto LABEL_23;
  }
  return v48 & 1;
}

uint64_t sub_24ECC25F8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7)
          {
            int64_t v3 = v10 + 3;
            if (v10 + 3 >= v8) {
              return 1;
            }
            uint64_t v7 = *(void *)(v4 + 8 * v3);
            if (!v7) {
              break;
            }
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_24EE57870();
    sub_24EE57880();
    uint64_t result = sub_24EE578B0();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 4;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24ECC277C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_35;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_24EE57870();
    sub_24EE57880();
    uint64_t result = sub_24EE578B0();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t CanvasSectionDescriptor.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  CanvasSectionDescriptor.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ECC29C4(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  CanvasSectionDescriptor.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ECC2A08(char *a1, char *a2, uint64_t a3)
{
  return static CanvasSectionDescriptor.== infix(_:_:)(a1, a2, *(unsigned int (**)(void, void, void))(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), *(void *)(a3 + 48), *(void *)(a3 + 56), *(void *)(a3 + 64), *(char **)(a3 + 72), *(void *)(a3 + 80), *(void *)(a3 + 88), *(char **)(a3 + 96), *(void *)(a3 + 104), *(void *)(a3 + 112), *(void *)(a3 + 120), *(void *)(a3 + 128), *(void *)(a3 + 136), *(void *)(a3 + 144),
           *(void *)(a3 + 152),
           *(void *)(a3 + 160),
           *(void *)(a3 + 168)) & 1;
}

uint64_t sub_24ECC2A5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24EE578B0();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 56;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & v6;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (!v11)
    {
      if (__OFADD__(v5++, 1)) {
        goto LABEL_18;
      }
      if (v5 >= v12) {
        return sub_24EE57880();
      }
      uint64_t v11 = *(void *)(v7 + 8 * v5);
      if (!v11) {
        break;
      }
    }
LABEL_5:
    v11 &= v11 - 1;
    sub_24EE57870();
    sub_24EE57880();
    uint64_t result = sub_24EE578B0();
    v4 ^= result;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v12) {
    return sub_24EE57880();
  }
  uint64_t v11 = *(void *)(v7 + 8 * v14);
  if (v11)
  {
    ++v5;
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v12) {
      return sub_24EE57880();
    }
    uint64_t v11 = *(void *)(v7 + 8 * v5);
    ++v14;
    if (v11) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24ECC2B90(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24EE578B0();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_24EE57880();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_24EE57870();
    sub_24EE57880();
    uint64_t result = sub_24EE578B0();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_24EE57880();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_24EE57880();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24ECC2CFC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 192));
}

uint64_t sub_24ECC2D08(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 200));
}

uint64_t type metadata accessor for CanvasSectionDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ECC2D2C()
{
  return 7;
}

uint64_t type metadata accessor for CanvasSectionDescriptor.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ECC2D4C()
{
  unint64_t result = qword_26B1DD098;
  if (!qword_26B1DD098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD098);
  }
  return result;
}

uint64_t sub_24ECC2DA0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE548);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ECC2E10()
{
  unint64_t result = qword_269965118;
  if (!qword_269965118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965118);
  }
  return result;
}

uint64_t sub_24ECC2E64()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECC2E80(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 144);
}

uint64_t sub_24ECC2E88(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 152);
}

uint64_t sub_24ECC2E90(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 160);
}

uint64_t sub_24ECC2E98(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_24ECC2F38()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.layout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.header.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.footer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.metrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of CanvasSectionDescriptorProtocol.redactionReasons.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t sub_24ECC2FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 192);
}

uint64_t sub_24ECC2FE8()
{
  uint64_t result = type metadata accessor for CanvasSectionLayout();
  if (v1 <= 0x3F)
  {
    type metadata accessor for CanvasSectionHeader();
    uint64_t result = sub_24EE57430();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24EE57430();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24ECC3158(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v126 = a3[8];
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v122 = a3[10];
  uint64_t v5 = *(_DWORD *)(v125 + 80);
  uint64_t v121 = *(void *)(v122 - 8);
  int v6 = *(_DWORD *)(v121 + 80) | *(_DWORD *)(v125 + 80);
  uint64_t v7 = v6 & 0xF8 | 7u;
  unint64_t v8 = *(void *)(v125 + 64);
  if (v8 <= 0x10) {
    unint64_t v9 = 16;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v126 - 8) + 64);
  }
  unint64_t v10 = v8 + ((v5 + 8) & ~v5);
  if (v10 <= 0x18) {
    unint64_t v10 = 24;
  }
  unint64_t v120 = v10;
  unint64_t v11 = v10 + 1;
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  unint64_t v124 = v12;
  if (v12 + 1 > v9) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = v9;
  }
  if (*(void *)(*(void *)(v122 - 8) + 64) <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = *(void *)(*(void *)(v122 - 8) + 64);
  }
  uint64_t v132 = sub_24EE55880();
  uint64_t v15 = *(void *)(v132 - 8);
  uint64_t v129 = a3[9];
  uint64_t v16 = *(void *)(v129 - 8);
  int v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = a3[2];
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v136 = v19;
  int v21 = *(_DWORD *)(v19 + 84);
  int v22 = v17 | *(_DWORD *)(v15 + 80) | v20;
  uint64_t v23 = (v17 | *(unsigned char *)(v15 + 80) | v20);
  uint64_t v24 = v17;
  uint64_t v25 = v20;
  uint64_t v131 = v15;
  unsigned int v26 = *(_DWORD *)(v15 + 84);
  int v27 = *(_DWORD *)(v16 + 84);
  if (v27) {
    unsigned int v28 = v27 - 1;
  }
  else {
    unsigned int v28 = 0;
  }
  if (v28 <= v26) {
    unsigned int v29 = v26;
  }
  else {
    unsigned int v29 = v28;
  }
  unsigned int v30 = v21 - 1;
  if (!v21) {
    unsigned int v30 = 0;
  }
  if (v30 > v29) {
    unsigned int v29 = v30;
  }
  if (v27) {
    uint64_t v31 = *(void *)(*(void *)(v129 - 8) + 64);
  }
  else {
    uint64_t v31 = *(void *)(*(void *)(v129 - 8) + 64) + 1;
  }
  uint64_t v130 = *(void *)(*(void *)(v132 - 8) + 64) + v24;
  uint64_t v128 = v31 + v25;
  if (v21) {
    uint64_t v32 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v32 = *(void *)(v19 + 64) + 1;
  }
  unsigned int v135 = v29;
  BOOL v33 = v29 == 0;
  unint64_t v34 = v14;
  uint64_t v134 = ((v31 + v25 + (v130 & ~v24)) & ~v25) + v32;
  if (v33) {
    uint64_t v35 = ((v31 + v25 + (v130 & ~v24)) & ~v25) + v32 + 1;
  }
  else {
    uint64_t v35 = ((v31 + v25 + (v130 & ~v24)) & ~v25) + v32;
  }
  uint64_t v36 = a3[7];
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v133 = v37;
  uint64_t v38 = *(_DWORD *)(v37 + 80);
  if (*(_DWORD *)(v37 + 84)) {
    uint64_t v39 = *(void *)(*(void *)(v36 - 8) + 64);
  }
  else {
    uint64_t v39 = *(void *)(*(void *)(v36 - 8) + 64) + 1;
  }
  uint64_t v40 = v23 | v7 | v38;
  if (v40 != 7
    || ((v6 | *(_DWORD *)(v37 + 80) | v22) & 0x100000) != 0
    || ((v39 + 7 + ((v38 + ((v35 + ((v34 + v23 + 1 + ((v7 + 16) & ~v7)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v38)) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    uint64_t v49 = (uint64_t *)(v48 + ((v40 + 16) & ~v40));
    swift_retain();
    return v49;
  }
  size_t v112 = v35;
  uint64_t v113 = v34 + v23 + 1;
  unsigned int v114 = v28;
  unsigned int v115 = v26;
  unsigned int v116 = *(_DWORD *)(v16 + 84);
  unsigned int v117 = *(_DWORD *)(v19 + 84);
  size_t __n = v31;
  size_t v108 = v32;
  uint64_t v127 = *(void *)(v129 - 8);
  size_t v109 = v39;
  uint64_t v110 = v18;
  uint64_t v118 = v39 + 7;
  uint64_t v41 = a2[1];
  *a1 = *a2;
  a1[1] = v41;
  long long v119 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  uint64_t v42 = (unsigned __int8 *)(((unint64_t)a2 + v7 + 16) & ~v7);
  unsigned int v43 = v42[v34];
  unint64_t v44 = v34;
  swift_bridgeObjectRetain();
  if (v43 < 5)
  {
    unint64_t v46 = v44;
  }
  else
  {
    if (v44 <= 3) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 4;
    }
    unint64_t v46 = v44;
    switch(v45)
    {
      case 1:
        int v47 = *v42;
        if (v44 < 4) {
          goto LABEL_52;
        }
        goto LABEL_54;
      case 2:
        int v47 = *(unsigned __int16 *)v42;
        if (v44 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_52;
      case 3:
        int v47 = *(unsigned __int16 *)v42 | (v42[2] << 16);
        if (v44 < 4) {
          goto LABEL_52;
        }
        goto LABEL_54;
      case 4:
        int v47 = *(_DWORD *)v42;
        if (v44 < 4) {
LABEL_52:
        }
          unsigned int v43 = (v47 | ((v43 - 5) << (8 * v44))) + 5;
        else {
LABEL_54:
        }
          unsigned int v43 = v47 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v50 = ~v23;
  uint64_t v111 = ~v24;
  uint64_t v51 = ~v25;
  uint64_t v52 = ~v38;
  uint64_t v53 = v136;
  uint64_t v54 = v119;
  switch(v43)
  {
    case 1u:
      uint64_t v56 = v51;
      uint64_t v57 = v50;
      unint64_t v58 = v46;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v125 + 16))(v119, v42, v126);
      uint64_t v50 = v57;
      uint64_t v51 = v56;
      uint64_t v53 = v136;
      unint64_t v46 = v58;
      char v55 = 1;
      goto LABEL_66;
    case 2u:
      uint64_t v59 = v51;
      uint64_t v60 = v50;
      unint64_t v61 = v46;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v125 + 16))(v119, v42, v126);
      uint64_t v50 = v60;
      uint64_t v51 = v59;
      uint64_t v53 = v136;
      unint64_t v46 = v61;
      char v55 = 2;
      goto LABEL_66;
    case 3u:
      unsigned int v62 = v42[v124];
      unsigned int v63 = v62 - 2;
      if (v62 >= 2)
      {
        if (v124 <= 3) {
          uint64_t v64 = v124;
        }
        else {
          uint64_t v64 = 4;
        }
        switch(v64)
        {
          case 1:
            int v65 = *v42;
            goto LABEL_106;
          case 2:
            int v65 = *(unsigned __int16 *)v42;
            goto LABEL_106;
          case 3:
            int v65 = *(unsigned __int16 *)v42 | (v42[2] << 16);
            goto LABEL_106;
          case 4:
            int v65 = *(_DWORD *)v42;
LABEL_106:
            if (v124 < 4) {
              unsigned int v62 = (v65 | (v63 << (8 * v124))) + 2;
            }
            else {
              unsigned int v62 = v65 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v62 == 1)
      {
        unint64_t v9 = v120;
        unsigned int v92 = v42[v120];
        unsigned int v93 = v92 - 2;
        if (v92 >= 2)
        {
          if (v120 <= 3) {
            uint64_t v94 = v120;
          }
          else {
            uint64_t v94 = 4;
          }
          switch(v94)
          {
            case 1:
              int v95 = *v42;
              goto LABEL_125;
            case 2:
              int v95 = *(unsigned __int16 *)v42;
              goto LABEL_125;
            case 3:
              int v95 = *(unsigned __int16 *)v42 | (v42[2] << 16);
              goto LABEL_125;
            case 4:
              int v95 = *(_DWORD *)v42;
LABEL_125:
              if (v120 < 4) {
                unsigned int v92 = (v95 | (v93 << (8 * v120))) + 2;
              }
              else {
                unsigned int v92 = v95 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v92 == 1)
        {
          *long long v119 = *(void *)v42;
          uint64_t v123 = v50;
          unint64_t v100 = v46;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v125 + 16))(((unint64_t)v119 + v5 + 8) & ~v5, (unint64_t)&v42[v5 + 8] & ~v5, v126);
          uint64_t v50 = v123;
          unint64_t v46 = v100;
          char v101 = 1;
          unint64_t v9 = v120;
        }
        else
        {
          char v101 = 0;
          long long v102 = *(_OWORD *)v42;
          v119[2] = *((void *)v42 + 2);
          *(_OWORD *)long long v119 = v102;
        }
        char v103 = 1;
      }
      else
      {
        unsigned int v96 = v42[v9];
        unsigned int v97 = v96 - 2;
        if (v96 >= 2)
        {
          if (v9 <= 3) {
            uint64_t v98 = v9;
          }
          else {
            uint64_t v98 = 4;
          }
          switch(v98)
          {
            case 1:
              int v99 = *v42;
              goto LABEL_135;
            case 2:
              int v99 = *(unsigned __int16 *)v42;
              goto LABEL_135;
            case 3:
              int v99 = *(unsigned __int16 *)v42 | (v42[2] << 16);
              goto LABEL_135;
            case 4:
              int v99 = *(_DWORD *)v42;
LABEL_135:
              if (v9 < 4) {
                unsigned int v96 = (v99 | (v97 << (8 * v9))) + 2;
              }
              else {
                unsigned int v96 = v99 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v96 == 1)
        {
          uint64_t v104 = v51;
          uint64_t v105 = v50;
          unint64_t v106 = v46;
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v125 + 16))(v119, v42, v126);
          uint64_t v50 = v105;
          uint64_t v51 = v104;
          uint64_t v53 = v136;
          unint64_t v46 = v106;
          uint64_t v54 = v119;
          char v103 = 0;
          char v101 = 1;
        }
        else
        {
          char v101 = 0;
          char v103 = 0;
          *(_OWORD *)long long v119 = *(_OWORD *)v42;
        }
      }
      uint64_t v69 = v127;
      uint64_t v71 = v116;
      uint64_t v70 = v117;
      unsigned int v73 = v114;
      uint64_t v72 = v115;
      *((unsigned char *)v54 + v9) = v101;
      *((unsigned char *)v54 + v124) = v103;
      char v55 = 3;
      goto LABEL_67;
    case 4u:
      uint64_t v66 = v51;
      uint64_t v67 = v50;
      unint64_t v68 = v46;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v121 + 16))(v119, v42, v122);
      uint64_t v50 = v67;
      uint64_t v51 = v66;
      uint64_t v53 = v136;
      unint64_t v46 = v68;
      char v55 = 4;
      goto LABEL_66;
    default:
      char v55 = 0;
      *(_OWORD *)long long v119 = *(_OWORD *)v42;
LABEL_66:
      uint64_t v69 = v127;
      uint64_t v71 = v116;
      uint64_t v70 = v117;
      unsigned int v73 = v114;
      uint64_t v72 = v115;
LABEL_67:
      *((unsigned char *)v54 + v46) = v55;
      uint64_t v74 = (void *)(((unint64_t)v54 + v113) & v50);
      uint64_t v75 = (unsigned __int8 *)((unint64_t)&v42[v113] & v50);
      if (v135)
      {
        if (v72 == v135)
        {
          if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v131 + 48))(v75, v72, v132)) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v79 = (unint64_t)&v75[v130] & v111;
          if (v73 == v135) {
            unsigned int v80 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v69 + 48))(v79, v71, v129);
          }
          else {
            unsigned int v80 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v53 + 48))((v128 + v79) & v51, v70, v110);
          }
          if (v80 < 2) {
            goto LABEL_84;
          }
        }
LABEL_97:
        size_t v85 = v112;
        memcpy(v74, v75, v112);
        uint64_t v49 = a1;
        goto LABEL_98;
      }
      if (v75[v134])
      {
        int v76 = (v75[v134] - 1) << (8 * v134);
        if (v134 > 3) {
          int v76 = 0;
        }
        if (v134)
        {
          int v77 = v134 <= 3 ? v134 : 4;
          switch(v77)
          {
            case 2:
              int v78 = *(unsigned __int16 *)v75;
              break;
            case 3:
              int v78 = *(unsigned __int16 *)v75 | (v75[2] << 16);
              break;
            case 4:
              int v78 = *(_DWORD *)v75;
              break;
            default:
              int v78 = *v75;
              break;
          }
        }
        else
        {
          int v78 = 0;
        }
        if ((v78 | v76) != 0xFFFFFFFF) {
          goto LABEL_97;
        }
      }
LABEL_84:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v131 + 16))(v74, v75, v132);
      uint64_t v81 = (void *)(((unint64_t)v74 + v130) & v111);
      uint64_t v82 = (const void *)((unint64_t)&v75[v130] & v111);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v82, 1, v129))
      {
        memcpy(v81, v82, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 16))(v81, v82, v129);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v81, 0, 1, v129);
      }
      long long v83 = (void *)(((unint64_t)v81 + v128) & v51);
      uint64_t v84 = (const void *)(((unint64_t)v82 + v128) & v51);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v84, 1, v110))
      {
        memcpy(v83, v84, v108);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v83, v84, v110);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v83, 0, 1, v110);
      }
      size_t v85 = v112;
      uint64_t v49 = a1;
      if (!v135) {
        *((unsigned char *)v74 + v134) = 0;
      }
LABEL_98:
      *((unsigned char *)v74 + v85) = v75[v85];
      unint64_t v86 = ((unint64_t)v74 + v85) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v87 = (unint64_t)&v75[v85] & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v86 + 8) = *(void *)(v87 + 8);
      uint64_t v88 = (void *)((v86 + v38 + 16) & v52);
      uint64_t v89 = (const void *)((v87 + v38 + 16) & v52);
      uint64_t v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v133 + 48);
      swift_bridgeObjectRetain();
      if (v90(v89, 1, v36))
      {
        memcpy(v88, v89, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v133 + 16))(v88, v89, v36);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v133 + 56))(v88, 0, 1, v36);
      }
      *(void *)(((unint64_t)v88 + v118) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v89 + v118) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      return v49;
  }
}

uint64_t sub_24ECC3D98(uint64_t a1, void *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2[8] - 8);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a2[10] - 8);
  uint64_t v7 = v6;
  uint64_t v8 = (*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80)) & 0xF8 | 7u;
  uint64_t v9 = *(_DWORD *)(v4 + 80);
  uint64_t v10 = (a1 + v8 + 16) & ~v8;
  unint64_t v11 = *(void *)(v4 + 64);
  if (v11 <= 0x10) {
    unint64_t v12 = 16;
  }
  else {
    unint64_t v12 = *(void *)(v4 + 64);
  }
  unint64_t v13 = v11 + ((v9 + 8) & ~v9);
  if (v13 <= 0x18) {
    unint64_t v13 = 24;
  }
  if (v13 + 1 <= v12 + 1) {
    unint64_t v14 = v12 + 1;
  }
  else {
    unint64_t v14 = v13 + 1;
  }
  if (v14 + 1 > v12) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = v12;
  }
  unint64_t v16 = *(void *)(v6 + 64);
  if (v16 <= v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = v16;
  }
  unsigned int v18 = *(unsigned __int8 *)(v10 + v17);
  if (v18 >= 5)
  {
    if (v17 <= 3) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *(unsigned __int8 *)v10;
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)v10;
        goto LABEL_24;
      case 3:
        int v20 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)(v10 + 2) << 16);
        goto LABEL_24;
      case 4:
        int v20 = *(_DWORD *)v10;
LABEL_24:
        int v21 = (v20 | ((v18 - 5) << (8 * v17))) + 5;
        unsigned int v22 = v20 + 5;
        if (v17 >= 4) {
          unsigned int v18 = v22;
        }
        else {
          unsigned int v18 = v21;
        }
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 1u:
    case 2u:
      goto LABEL_28;
    case 3u:
      unsigned int v23 = *(unsigned __int8 *)(v10 + v14);
      unsigned int v24 = v23 - 2;
      if (v23 >= 2)
      {
        if (v14 <= 3) {
          uint64_t v25 = v14;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *(unsigned __int8 *)v10;
            goto LABEL_88;
          case 2:
            int v26 = *(unsigned __int16 *)v10;
            goto LABEL_88;
          case 3:
            int v26 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)(v10 + 2) << 16);
            goto LABEL_88;
          case 4:
            int v26 = *(_DWORD *)v10;
LABEL_88:
            int v62 = (v26 | (v24 << (8 * v14))) + 2;
            unsigned int v23 = v26 + 2;
            if (v14 < 4) {
              unsigned int v23 = v62;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 1)
      {
        unsigned int v63 = *(unsigned __int8 *)(v10 + v13);
        unsigned int v64 = v63 - 2;
        if (v63 >= 2)
        {
          if (v13 <= 3) {
            uint64_t v65 = v13;
          }
          else {
            uint64_t v65 = 4;
          }
          switch(v65)
          {
            case 1:
              int v66 = *(unsigned __int8 *)v10;
              goto LABEL_106;
            case 2:
              int v66 = *(unsigned __int16 *)v10;
              goto LABEL_106;
            case 3:
              int v66 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)(v10 + 2) << 16);
              goto LABEL_106;
            case 4:
              int v66 = *(_DWORD *)v10;
LABEL_106:
              int v71 = (v66 | (v64 << (8 * v13))) + 2;
              unsigned int v63 = v66 + 2;
              if (v13 < 4) {
                unsigned int v63 = v71;
              }
              break;
            default:
              break;
          }
        }
        if (v63 == 1) {
          (*(void (**)(uint64_t))(v4 + 8))((v9 + 8 + v10) & ~v9);
        }
      }
      else
      {
        unsigned int v67 = *(unsigned __int8 *)(v10 + v12);
        unsigned int v68 = v67 - 2;
        if (v67 >= 2)
        {
          if (v12 <= 3) {
            uint64_t v69 = v12;
          }
          else {
            uint64_t v69 = 4;
          }
          switch(v69)
          {
            case 1:
              int v70 = *(unsigned __int8 *)v10;
              goto LABEL_113;
            case 2:
              int v70 = *(unsigned __int16 *)v10;
              goto LABEL_113;
            case 3:
              int v70 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)(v10 + 2) << 16);
              goto LABEL_113;
            case 4:
              int v70 = *(_DWORD *)v10;
LABEL_113:
              int v72 = (v70 | (v68 << (8 * v12))) + 2;
              unsigned int v67 = v70 + 2;
              if (v12 < 4) {
                unsigned int v67 = v72;
              }
              break;
            default:
              break;
          }
        }
        if (v67 == 1) {
LABEL_28:
        }
          (*(void (**)(uint64_t))(v5 + 8))(v10);
      }
      break;
    case 4u:
      (*(void (**)(uint64_t, void))(v7 + 8))(v10, a2[10]);
      break;
    default:
      break;
  }
  uint64_t v27 = sub_24EE55880();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = a2[9];
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = v30;
  uint64_t v32 = *(_DWORD *)(v30 + 80);
  uint64_t v75 = a2[2];
  int v76 = a2;
  uint64_t v33 = *(void *)(v75 - 8);
  int v34 = *(_DWORD *)(v33 + 84);
  uint64_t v35 = *(_DWORD *)(v33 + 80);
  uint64_t v36 = (*(unsigned char *)(v30 + 80) | *(unsigned char *)(v28 + 80) | *(_DWORD *)(v33 + 80));
  uint64_t v37 = (unsigned __int16 *)(((v10 | 1) + v36 + v17) & ~v36);
  uint64_t v38 = *(unsigned int *)(v28 + 84);
  uint64_t v39 = *(unsigned int *)(v30 + 84);
  unsigned int v40 = v39 - 1;
  if (!v39) {
    unsigned int v40 = 0;
  }
  if (v40 <= v38) {
    unsigned int v41 = *(_DWORD *)(v28 + 84);
  }
  else {
    unsigned int v41 = v40;
  }
  unsigned int v42 = v34 - 1;
  if (!v34) {
    unsigned int v42 = 0;
  }
  if (v42 <= v41) {
    unsigned int v43 = v41;
  }
  else {
    unsigned int v43 = v42;
  }
  uint64_t v44 = *(void *)(v30 + 64);
  if (!v39) {
    ++v44;
  }
  uint64_t v45 = *(void *)(*(void *)(v27 - 8) + 64) + v32;
  uint64_t v46 = v44 + v35;
  uint64_t v47 = (v44 + v35 + (v45 & ~v32)) & ~v35;
  uint64_t v48 = *(void *)(*(void *)(v75 - 8) + 64);
  if (!v34) {
    ++v48;
  }
  uint64_t v49 = v48 + v47;
  uint64_t v73 = ~v32;
  uint64_t v74 = ~v35;
  if (v43)
  {
    if (v38 == v43)
    {
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v28 + 48))(v37, v38, v27)) {
        goto LABEL_77;
      }
    }
    else
    {
      unint64_t v53 = ((unint64_t)v37 + v45) & ~v32;
      if (v40 == v43) {
        unsigned int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v53, v39, v29);
      }
      else {
        unsigned int v54 = (*(uint64_t (**)(unint64_t))(v33 + 48))((v46 + v53) & ~v35);
      }
      if (v54 >= 2) {
        goto LABEL_77;
      }
    }
    goto LABEL_73;
  }
  if (!*((unsigned char *)v37 + v49)) {
    goto LABEL_73;
  }
  int v50 = (*((unsigned __int8 *)v37 + v49) - 1) << (8 * v49);
  if (v49 > 3) {
    int v50 = 0;
  }
  if (v49)
  {
    int v51 = v49 <= 3 ? v48 + v47 : 4;
    switch(v51)
    {
      case 2:
        int v52 = *v37;
        break;
      case 3:
        int v52 = *v37 | (*((unsigned __int8 *)v37 + 2) << 16);
        break;
      case 4:
        int v52 = *(_DWORD *)v37;
        break;
      default:
        int v52 = *(unsigned __int8 *)v37;
        break;
    }
  }
  else
  {
    int v52 = 0;
  }
  if ((v52 | v50) == 0xFFFFFFFF)
  {
LABEL_73:
    (*(void (**)(unsigned __int16 *, uint64_t))(v28 + 8))(v37, v27);
    unint64_t v55 = ((unint64_t)v37 + v45) & v73;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v55, 1, v29)) {
      (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v55, v29);
    }
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))((v46 + v55) & v74, 1, v75)) {
      (*(void (**)(unint64_t, uint64_t))(v33 + 8))((v46 + v55) & v74, v75);
    }
  }
LABEL_77:
  if (v43) {
    uint64_t v56 = v37;
  }
  else {
    uint64_t v56 = (unsigned __int16 *)((char *)v37 + 1);
  }
  unint64_t v57 = ((unint64_t)v56 + v49) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v58 = v76[7];
  uint64_t v59 = *(void *)(v58 - 8);
  unint64_t v60 = (v57 + *(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v59 + 48))(v60, 1, v58)) {
    (*(void (**)(unint64_t, uint64_t))(v59 + 8))(v60, v58);
  }
  return swift_bridgeObjectRelease();
}

void *sub_24ECC45C0(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  __dst = (void *)a3[8];
  uint64_t v5 = *(__dst - 1);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = a3[10];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = (*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0xF8 | 7u;
  uint64_t v113 = a1;
  unint64_t v11 = (void *)(((unint64_t)a1 + v10 + 16) & ~v10);
  unint64_t v12 = (unsigned __int8 *)(((unint64_t)a2 + v10 + 16) & ~v10);
  unint64_t v13 = *(void *)(v5 + 64);
  if (v13 <= 0x10) {
    unint64_t v14 = 16;
  }
  else {
    unint64_t v14 = *(void *)(*(__dst - 1) + 64);
  }
  unint64_t v15 = v13 + ((v6 + 8) & ~v6);
  if (v15 <= 0x18) {
    unint64_t v15 = 24;
  }
  unint64_t v111 = v15;
  unint64_t v16 = v15 + 1;
  if (v16 <= v14 + 1) {
    unint64_t v17 = v14 + 1;
  }
  else {
    unint64_t v17 = v16;
  }
  if (v17 + 1 > v14) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = v14;
  }
  unint64_t v19 = *(void *)(v8 + 64);
  if (v19 <= v18) {
    unint64_t v20 = v18;
  }
  else {
    unint64_t v20 = v19;
  }
  unsigned int v21 = v12[v20];
  swift_bridgeObjectRetain();
  if (v21 >= 5)
  {
    if (v20 <= 3) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v12;
        goto LABEL_24;
      case 2:
        int v23 = *(unsigned __int16 *)v12;
        goto LABEL_24;
      case 3:
        int v23 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_24;
      case 4:
        int v23 = *(_DWORD *)v12;
LABEL_24:
        int v24 = (v23 | ((v21 - 5) << (8 * v20))) + 5;
        unsigned int v25 = v23 + 5;
        if (v20 >= 4) {
          unsigned int v21 = v25;
        }
        else {
          unsigned int v21 = v24;
        }
        break;
      default:
        break;
    }
  }
  switch(v21)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, void *))(v5 + 16))(v11, v12, __dst);
      char v26 = 1;
      goto LABEL_77;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, void *))(v5 + 16))(v11, v12, __dst);
      char v26 = 2;
      goto LABEL_77;
    case 3u:
      unsigned int v27 = v12[v17];
      unsigned int v28 = v27 - 2;
      if (v27 < 2) {
        goto LABEL_43;
      }
      if (v17 <= 3) {
        uint64_t v29 = v17;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v12;
          break;
        case 2:
          int v30 = *(unsigned __int16 *)v12;
          break;
        case 3:
          int v30 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          break;
        case 4:
          int v30 = *(_DWORD *)v12;
          break;
        default:
          goto LABEL_43;
      }
      if (v17 < 4)
      {
        if ((v30 | (v28 << (8 * v17))) == 0xFFFFFFFF)
        {
LABEL_44:
          unint64_t v14 = v111;
          unsigned int v31 = v12[v111];
          unsigned int v32 = v31 - 2;
          if (v31 >= 2)
          {
            if (v111 <= 3) {
              uint64_t v33 = v111;
            }
            else {
              uint64_t v33 = 4;
            }
            switch(v33)
            {
              case 1:
                int v34 = *v12;
                goto LABEL_60;
              case 2:
                int v34 = *(unsigned __int16 *)v12;
                goto LABEL_60;
              case 3:
                int v34 = *(unsigned __int16 *)v12 | (v12[2] << 16);
                goto LABEL_60;
              case 4:
                int v34 = *(_DWORD *)v12;
LABEL_60:
                if (v111 < 4) {
                  unsigned int v31 = (v34 | (v32 << (8 * v111))) + 2;
                }
                else {
                  unsigned int v31 = v34 + 2;
                }
                break;
              default:
                break;
            }
          }
          if (v31 == 1)
          {
            *unint64_t v11 = *(void *)v12;
            (*(void (**)(unint64_t, unint64_t, void *))(v5 + 16))(((unint64_t)v11 + v6 + 8) & ~v6, (unint64_t)&v12[v6 + 8] & ~v6, __dst);
            char v39 = 1;
          }
          else
          {
            char v39 = 0;
            long long v40 = *(_OWORD *)v12;
            void v11[2] = *((void *)v12 + 2);
            *(_OWORD *)unint64_t v11 = v40;
          }
          char v41 = 1;
          goto LABEL_76;
        }
      }
      else
      {
        unsigned int v27 = v30 + 2;
LABEL_43:
        if (v27 == 1) {
          goto LABEL_44;
        }
      }
      unsigned int v35 = v12[v14];
      unsigned int v36 = v35 - 2;
      if (v35 >= 2)
      {
        if (v14 <= 3) {
          uint64_t v37 = v14;
        }
        else {
          uint64_t v37 = 4;
        }
        switch(v37)
        {
          case 1:
            int v38 = *v12;
            goto LABEL_70;
          case 2:
            int v38 = *(unsigned __int16 *)v12;
            goto LABEL_70;
          case 3:
            int v38 = *(unsigned __int16 *)v12 | (v12[2] << 16);
            goto LABEL_70;
          case 4:
            int v38 = *(_DWORD *)v12;
LABEL_70:
            if (v14 < 4) {
              unsigned int v35 = (v38 | (v36 << (8 * v14))) + 2;
            }
            else {
              unsigned int v35 = v38 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v35 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *, void *))(v5 + 16))(v11, v12, __dst);
        char v41 = 0;
        char v39 = 1;
      }
      else
      {
        char v39 = 0;
        char v41 = 0;
        *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
      }
LABEL_76:
      *((unsigned char *)v11 + v14) = v39;
      *((unsigned char *)v11 + v17) = v41;
      char v26 = 3;
LABEL_77:
      *((unsigned char *)v11 + v20) = v26;
      uint64_t v42 = sub_24EE55880();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = a3[9];
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = v45;
      uint64_t v112 = a3[2];
      uint64_t v47 = *(void *)(v112 - 8);
      uint64_t v48 = v47;
      int v49 = *(_DWORD *)(v47 + 84);
      uint64_t v50 = (*(_DWORD *)(v45 + 80) | *(_DWORD *)(v43 + 80) | *(_DWORD *)(v47 + 80));
      uint64_t v51 = *(_DWORD *)(v45 + 80);
      uint64_t v52 = *(_DWORD *)(v47 + 80);
      uint64_t v53 = v20 + v50 + 1;
      __dsta = (unsigned char *)(((unint64_t)v11 + v53) & ~v50);
      unsigned int v54 = (unsigned __int16 *)((unint64_t)&v12[v53] & ~v50);
      uint64_t v55 = *(unsigned int *)(v43 + 84);
      uint64_t v56 = *(unsigned int *)(v45 + 84);
      if (v56) {
        unsigned int v57 = v56 - 1;
      }
      else {
        unsigned int v57 = 0;
      }
      if (v57 <= v55) {
        unsigned int v58 = *(_DWORD *)(v43 + 84);
      }
      else {
        unsigned int v58 = v57;
      }
      unsigned int v59 = v49 - 1;
      if (!v49) {
        unsigned int v59 = 0;
      }
      if (v59 <= v58) {
        unsigned int v60 = v58;
      }
      else {
        unsigned int v60 = v59;
      }
      size_t v61 = *(void *)(v45 + 64);
      if (!v56) {
        ++v61;
      }
      uint64_t v62 = *(void *)(*(void *)(v42 - 8) + 64) + v51;
      uint64_t v63 = ~v52;
      size_t __n = v61;
      if (v49) {
        uint64_t v64 = *(void *)(v47 + 64);
      }
      else {
        uint64_t v64 = *(void *)(v47 + 64) + 1;
      }
      size_t v65 = ((v61 + v52 + (v62 & ~v51)) & ~v52) + v64;
      size_t v109 = v61 + v52;
      uint64_t v110 = ~v51;
      if (!v60)
      {
        if (!*((unsigned char *)v54 + v65)) {
          goto LABEL_110;
        }
        int v76 = (*((unsigned __int8 *)v54 + v65) - 1) << (8 * v65);
        if (v65 > 3) {
          int v76 = 0;
        }
        if (v65)
        {
          int v77 = v65 <= 3 ? ((v61 + v52 + (v62 & ~v51)) & ~v52) + v64 : 4;
          switch(v77)
          {
            case 2:
              int v78 = *v54;
              break;
            case 3:
              int v78 = *v54 | (*((unsigned __int8 *)v54 + 2) << 16);
              break;
            case 4:
              int v78 = *(_DWORD *)v54;
              break;
            default:
              int v78 = *(unsigned __int8 *)v54;
              break;
          }
        }
        else
        {
          int v78 = 0;
        }
        if ((v78 | v76) == 0xFFFFFFFF) {
          goto LABEL_110;
        }
        goto LABEL_123;
      }
      if (v55 != v60)
      {
        size_t v106 = v42;
        unint64_t v79 = ((unint64_t)v54 + v62) & ~v51;
        if (v57 == v60) {
          unsigned int v80 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v46 + 48))(v79, v56, v44);
        }
        else {
          unsigned int v80 = (*(uint64_t (**)(size_t))(v47 + 48))((v61 + v52 + v79) & v63);
        }
        uint64_t v42 = v106;
        if (v80 < 2) {
          goto LABEL_110;
        }
LABEL_123:
        if (v60) {
          size_t v88 = v65;
        }
        else {
          size_t v88 = v65 + 1;
        }
        unint64_t v86 = __dsta;
        memcpy(__dsta, v54, v88);
        unint64_t v87 = v113;
        goto LABEL_127;
      }
      int v66 = v54;
      unsigned int v105 = v60;
      uint64_t v67 = v46;
      uint64_t v68 = v64;
      uint64_t v69 = v54;
      uint64_t v70 = *(void *)(v112 - 8);
      size_t v71 = v65;
      uint64_t v72 = ~v52;
      uint64_t v73 = a3[9];
      uint64_t v74 = v42;
      int v75 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v43 + 48))(v66, v55, v42);
      uint64_t v42 = v74;
      uint64_t v44 = v73;
      uint64_t v63 = v72;
      size_t v65 = v71;
      uint64_t v48 = v70;
      unsigned int v54 = v69;
      uint64_t v64 = v68;
      uint64_t v46 = v67;
      unsigned int v60 = v105;
      if (v75) {
        goto LABEL_123;
      }
LABEL_110:
      size_t v107 = v64;
      uint64_t v81 = v44;
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v43 + 16))(__dsta, v54, v42);
      uint64_t v82 = (void *)((unint64_t)&__dsta[v62] & v110);
      long long v83 = (const void *)(((unint64_t)v54 + v62) & v110);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v83, 1, v81))
      {
        memcpy(v82, v83, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v82, v83, v81);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v82, 0, 1, v81);
      }
      uint64_t v84 = (void *)(((unint64_t)v82 + v109) & v63);
      size_t v85 = (const void *)(((unint64_t)v83 + v109) & v63);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v85, 1, v112))
      {
        memcpy(v84, v85, v107);
        unint64_t v87 = v113;
        unint64_t v86 = __dsta;
        if (v60) {
          goto LABEL_127;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v84, v85, v112);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v84, 0, 1, v112);
        unint64_t v87 = v113;
        unint64_t v86 = __dsta;
        if (v60) {
          goto LABEL_127;
        }
      }
      v86[v65] = 0;
LABEL_127:
      if (v60) {
        size_t v89 = v65;
      }
      else {
        size_t v89 = v65 + 1;
      }
      unint64_t v90 = (unint64_t)&v86[v89];
      unint64_t v91 = (unint64_t)v54 + v89;
      *(unsigned char *)unint64_t v90 = *(unsigned char *)v91;
      v90 &= 0xFFFFFFFFFFFFFFF8;
      *(void *)(v90 + 8) = *(void *)((v91 & 0xFFFFFFFFFFFFFFF8) + 8);
      uint64_t v92 = a3[7];
      uint64_t v93 = *(void *)(v92 - 8);
      uint64_t v94 = *(unsigned __int8 *)(v93 + 80);
      int v95 = (void *)((v94 + 16 + v90) & ~v94);
      unsigned int v96 = (const void *)((v94 + 16 + (v91 & 0xFFFFFFFFFFFFFFF8)) & ~v94);
      unsigned int v97 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48);
      swift_bridgeObjectRetain();
      if (v97(v96, 1, v92))
      {
        int v98 = *(_DWORD *)(v93 + 84);
        size_t v99 = *(void *)(v93 + 64);
        if (v98) {
          size_t v100 = v99;
        }
        else {
          size_t v100 = v99 + 1;
        }
        memcpy(v95, v96, v100);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v93 + 16))(v95, v96, v92);
        long long v102 = *(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56);
        uint64_t v101 = v93 + 56;
        v102(v95, 0, 1, v92);
        int v98 = *(_DWORD *)(v101 + 28);
        size_t v99 = *(void *)(v101 + 8);
      }
      if (v98) {
        size_t v103 = v99;
      }
      else {
        size_t v103 = v99 + 1;
      }
      *(void *)(((unint64_t)v95 + v103 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v96
                                                                                          + v103
                                                                                          + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      return v87;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v11, v12, v7);
      char v26 = 4;
      goto LABEL_77;
    default:
      char v26 = 0;
      *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
      goto LABEL_77;
  }
}

void *sub_24ECC508C(void *a1, void *a2, void *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  long long v174 = a3;
  uint64_t v10 = a3[10];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = (*(_DWORD *)(v11 + 80) | v8) & 0xF8 | 7u;
  unint64_t v13 = (unsigned __int8 *)(((unint64_t)a1 + v12 + 16) & ~v12);
  unint64_t v14 = (unsigned __int8 *)(((unint64_t)a2 + v12 + 16) & ~v12);
  unint64_t v15 = *(void *)(v7 + 64);
  uint64_t v166 = a1;
  if (v13 == v14)
  {
    unint64_t v26 = 16;
    if (v15 > 0x10) {
      unint64_t v26 = *(void *)(v7 + 64);
    }
    unint64_t v27 = v15 + ((v9 + 8) & ~v9);
    if (v27 <= 0x18) {
      unint64_t v27 = 24;
    }
    unint64_t v28 = v27 + 1;
    if (v28 <= v26 + 1) {
      unint64_t v28 = v26 + 1;
    }
    if (v28 + 1 > v26) {
      unint64_t v29 = v28 + 1;
    }
    else {
      unint64_t v29 = v26;
    }
    if (*(void *)(v11 + 64) <= v29) {
      unint64_t v21 = v29;
    }
    else {
      unint64_t v21 = *(void *)(v11 + 64);
    }
  }
  else
  {
    if (v15 <= 0x10) {
      unint64_t v16 = 16;
    }
    else {
      unint64_t v16 = *(void *)(v7 + 64);
    }
    uint64_t v172 = v9 + 8;
    unint64_t v17 = v15 + ((v9 + 8) & ~v9);
    if (v17 <= 0x18) {
      uint64_t v18 = 24;
    }
    else {
      uint64_t v18 = v17;
    }
    if (v18 + 1 <= v16 + 1) {
      uint64_t v19 = v16 + 1;
    }
    else {
      uint64_t v19 = v18 + 1;
    }
    if (v19 + 1 > v16) {
      unint64_t v20 = v19 + 1;
    }
    else {
      unint64_t v20 = v16;
    }
    if (*(void *)(v11 + 64) <= v20) {
      unint64_t v21 = v20;
    }
    else {
      unint64_t v21 = *(void *)(v11 + 64);
    }
    unsigned int v22 = v13[v21];
    unsigned int v23 = v22 - 5;
    if (v22 >= 5)
    {
      if (v21 <= 3) {
        uint64_t v24 = v21;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v13;
          if (v21 < 4) {
            goto LABEL_39;
          }
          goto LABEL_41;
        case 2:
          int v25 = *(unsigned __int16 *)v13;
          if (v21 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_39;
        case 3:
          int v25 = *(unsigned __int16 *)v13 | (v13[2] << 16);
          if (v21 < 4) {
            goto LABEL_39;
          }
          goto LABEL_41;
        case 4:
          int v25 = *(_DWORD *)v13;
          if (v21 < 4) {
LABEL_39:
          }
            unsigned int v22 = (v25 | (v23 << (8 * v21))) + 5;
          else {
LABEL_41:
          }
            unsigned int v22 = v25 + 5;
          break;
        default:
          break;
      }
    }
    uint64_t v170 = ~v9;
    switch(v22)
    {
      case 1u:
      case 2u:
        goto LABEL_43;
      case 3u:
        unsigned int v30 = v13[v19];
        unsigned int v31 = v30 - 2;
        if (v30 < 2) {
          goto LABEL_80;
        }
        if (v19 <= 3) {
          uint64_t v32 = v19;
        }
        else {
          uint64_t v32 = 4;
        }
        switch(v32)
        {
          case 1:
            int v33 = *v13;
            break;
          case 2:
            int v33 = *(unsigned __int16 *)v13;
            break;
          case 3:
            int v33 = *(unsigned __int16 *)v13 | (v13[2] << 16);
            break;
          case 4:
            int v33 = *(_DWORD *)v13;
            break;
          default:
            goto LABEL_80;
        }
        if (v19 < 4)
        {
          if ((v33 | (v31 << (8 * v19))) == 0xFFFFFFFF)
          {
LABEL_81:
            unsigned int v43 = v13[v18];
            unsigned int v44 = v43 - 2;
            if (v43 >= 2)
            {
              if (v18 <= 3) {
                uint64_t v45 = v18;
              }
              else {
                uint64_t v45 = 4;
              }
              switch(v45)
              {
                case 1:
                  int v46 = *v13;
                  goto LABEL_116;
                case 2:
                  int v46 = *(unsigned __int16 *)v13;
                  goto LABEL_116;
                case 3:
                  int v46 = *(unsigned __int16 *)v13 | (v13[2] << 16);
                  goto LABEL_116;
                case 4:
                  int v46 = *(_DWORD *)v13;
LABEL_116:
                  if (v18 < 4) {
                    unsigned int v43 = (v46 | (v44 << (8 * v18))) + 2;
                  }
                  else {
                    unsigned int v43 = v46 + 2;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v43 == 1) {
              (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&v13[v172] & v170, v6);
            }
            goto LABEL_51;
          }
        }
        else
        {
          unsigned int v30 = v33 + 2;
LABEL_80:
          if (v30 == 1) {
            goto LABEL_81;
          }
        }
        unsigned int v47 = v13[v16];
        unsigned int v48 = v47 - 2;
        if (v47 >= 2)
        {
          if (v16 <= 3) {
            uint64_t v49 = v16;
          }
          else {
            uint64_t v49 = 4;
          }
          switch(v49)
          {
            case 1:
              int v50 = *v13;
              goto LABEL_124;
            case 2:
              int v50 = *(unsigned __int16 *)v13;
              goto LABEL_124;
            case 3:
              int v50 = *(unsigned __int16 *)v13 | (v13[2] << 16);
              goto LABEL_124;
            case 4:
              int v50 = *(_DWORD *)v13;
LABEL_124:
              if (v16 < 4) {
                unsigned int v47 = (v50 | (v48 << (8 * v16))) + 2;
              }
              else {
                unsigned int v47 = v50 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v47 == 1) {
LABEL_43:
        }
          (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(v13, v6);
LABEL_51:
        unsigned int v34 = v14[v21];
        unsigned int v35 = v34 - 5;
        if (v34 >= 5)
        {
          if (v21 <= 3) {
            uint64_t v36 = v21;
          }
          else {
            uint64_t v36 = 4;
          }
          switch(v36)
          {
            case 1:
              int v37 = *v14;
              if (v21 < 4) {
                goto LABEL_61;
              }
              goto LABEL_63;
            case 2:
              int v37 = *(unsigned __int16 *)v14;
              if (v21 >= 4) {
                goto LABEL_63;
              }
              goto LABEL_61;
            case 3:
              int v37 = *(unsigned __int16 *)v14 | (v14[2] << 16);
              if (v21 < 4) {
                goto LABEL_61;
              }
              goto LABEL_63;
            case 4:
              int v37 = *(_DWORD *)v14;
              if (v21 < 4) {
LABEL_61:
              }
                unsigned int v34 = (v37 | (v35 << (8 * v21))) + 5;
              else {
LABEL_63:
              }
                unsigned int v34 = v37 + 5;
              break;
            default:
              goto LABEL_64;
          }
        }
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(v13, v10);
        goto LABEL_51;
      default:
        goto LABEL_51;
    }
LABEL_64:
    switch(v34)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(v13, v14, v6);
        char v38 = 1;
        goto LABEL_148;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(v13, v14, v6);
        char v38 = 2;
        goto LABEL_148;
      case 3u:
        unsigned int v39 = v14[v19];
        unsigned int v40 = v39 - 2;
        if (v39 < 2) {
          goto LABEL_99;
        }
        if (v19 <= 3) {
          uint64_t v41 = v19;
        }
        else {
          uint64_t v41 = 4;
        }
        switch(v41)
        {
          case 1:
            int v42 = *v14;
            break;
          case 2:
            int v42 = *(unsigned __int16 *)v14;
            break;
          case 3:
            int v42 = *(unsigned __int16 *)v14 | (v14[2] << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)v14;
            break;
          default:
            goto LABEL_99;
        }
        if (v19 < 4)
        {
          if ((v42 | (v40 << (8 * v19))) == 0xFFFFFFFF)
          {
LABEL_100:
            unsigned int v51 = v14[v18];
            unsigned int v52 = v51 - 2;
            if (v51 >= 2)
            {
              if (v18 <= 3) {
                uint64_t v53 = v18;
              }
              else {
                uint64_t v53 = 4;
              }
              switch(v53)
              {
                case 1:
                  int v54 = *v14;
                  goto LABEL_132;
                case 2:
                  int v54 = *(unsigned __int16 *)v14;
                  goto LABEL_132;
                case 3:
                  int v54 = *(unsigned __int16 *)v14 | (v14[2] << 16);
                  goto LABEL_132;
                case 4:
                  int v54 = *(_DWORD *)v14;
LABEL_132:
                  if (v18 < 4) {
                    unsigned int v51 = (v54 | (v52 << (8 * v18))) + 2;
                  }
                  else {
                    unsigned int v51 = v54 + 2;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v51 == 1)
            {
              *(void *)unint64_t v13 = *(void *)v14;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((unint64_t)&v13[v172] & v170, (unint64_t)&v14[v172] & v170, v6);
              char v59 = 1;
              unint64_t v16 = v18;
              char v60 = 1;
            }
            else
            {
              char v59 = 0;
              long long v61 = *(_OWORD *)v14;
              *((void *)v13 + 2) = *((void *)v14 + 2);
              *(_OWORD *)unint64_t v13 = v61;
              char v60 = 1;
              unint64_t v16 = v18;
            }
            goto LABEL_147;
          }
        }
        else
        {
          unsigned int v39 = v42 + 2;
LABEL_99:
          if (v39 == 1) {
            goto LABEL_100;
          }
        }
        unsigned int v55 = v14[v16];
        unsigned int v56 = v55 - 2;
        if (v55 >= 2)
        {
          if (v16 <= 3) {
            uint64_t v57 = v16;
          }
          else {
            uint64_t v57 = 4;
          }
          switch(v57)
          {
            case 1:
              int v58 = *v14;
              goto LABEL_141;
            case 2:
              int v58 = *(unsigned __int16 *)v14;
              goto LABEL_141;
            case 3:
              int v58 = *(unsigned __int16 *)v14 | (v14[2] << 16);
              goto LABEL_141;
            case 4:
              int v58 = *(_DWORD *)v14;
LABEL_141:
              if (v16 < 4) {
                unsigned int v55 = (v58 | (v56 << (8 * v16))) + 2;
              }
              else {
                unsigned int v55 = v58 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v55 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(v13, v14, v6);
          char v60 = 0;
          char v59 = 1;
        }
        else
        {
          char v59 = 0;
          char v60 = 0;
          *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        }
LABEL_147:
        v13[v16] = v59;
        v13[v19] = v60;
        char v38 = 3;
LABEL_148:
        v13[v21] = v38;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v11 + 16))(v13, v14, v10);
        char v38 = 4;
        goto LABEL_148;
      default:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
        v13[v21] = 0;
        break;
    }
  }
  uint64_t v62 = sub_24EE55880();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = v174[9];
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v171 = v174[2];
  uint64_t v66 = *(void *)(v171 - 8);
  uint64_t v173 = v66;
  uint64_t v67 = *(unsigned int *)(v66 + 84);
  uint64_t v68 = (*(_DWORD *)(v65 + 80) | *(_DWORD *)(v63 + 80) | *(_DWORD *)(v66 + 80));
  uint64_t v69 = *(_DWORD *)(v65 + 80);
  uint64_t v70 = *(_DWORD *)(v66 + 80);
  uint64_t v71 = v21 + v68 + 1;
  unint64_t v72 = (unint64_t)&v13[v71];
  uint64_t v73 = v65;
  uint64_t v74 = (unsigned __int16 *)(v72 & ~v68);
  int v75 = (unsigned __int16 *)((unint64_t)&v14[v71] & ~v68);
  uint64_t v76 = *(unsigned int *)(v63 + 84);
  uint64_t v77 = *(unsigned int *)(v65 + 84);
  if (v77) {
    unsigned int v78 = v77 - 1;
  }
  else {
    unsigned int v78 = 0;
  }
  if (v78 <= v76) {
    unsigned int v79 = *(_DWORD *)(v63 + 84);
  }
  else {
    unsigned int v79 = v78;
  }
  unsigned int v80 = v67 - 1;
  if (!v67) {
    unsigned int v80 = 0;
  }
  if (v80 <= v79) {
    unsigned int v81 = v79;
  }
  else {
    unsigned int v81 = v80;
  }
  size_t v82 = *(void *)(v65 + 64);
  if (v77) {
    size_t v83 = v82;
  }
  else {
    size_t v83 = v82 + 1;
  }
  uint64_t v84 = ~v69;
  uint64_t v85 = *(void *)(*(void *)(v62 - 8) + 64) + v69;
  uint64_t v86 = v85 & ~v69;
  uint64_t v87 = ~v70;
  size_t v88 = v83 + v70;
  size_t v89 = (v83 + v70 + v86) & ~v70;
  if (v67) {
    uint64_t v90 = *(void *)(v66 + 64);
  }
  else {
    uint64_t v90 = *(void *)(v66 + 64) + 1;
  }
  size_t v91 = v89 + v90;
  size_t v163 = v90;
  size_t v164 = v83 + v70;
  uint64_t v165 = ~v70;
  size_t __n = v83;
  uint64_t v167 = v85;
  uint64_t v168 = v84;
  if (!v81)
  {
    char v100 = 8 * v91;
    int v95 = v74;
    if (*((unsigned char *)v74 + v91))
    {
      int v101 = (*((unsigned __int8 *)v74 + v91) - 1) << v100;
      if (v91 > 3) {
        int v101 = 0;
      }
      if (v91)
      {
        int v102 = v91 <= 3 ? v91 : 4;
        switch(v102)
        {
          case 2:
            int v103 = *v74;
            break;
          case 3:
            int v103 = *v74 | (*((unsigned __int8 *)v74 + 2) << 16);
            break;
          case 4:
            int v103 = *(_DWORD *)v74;
            break;
          default:
            int v103 = *(unsigned __int8 *)v74;
            break;
        }
      }
      else
      {
        int v103 = 0;
      }
      if ((v103 | v101) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v75 + v91)) {
          goto LABEL_254;
        }
        int v112 = (*((unsigned __int8 *)v75 + v91) - 1) << v100;
        if (v91 > 3) {
          int v112 = 0;
        }
        if (v91)
        {
          int v113 = v91 <= 3 ? v91 : 4;
          switch(v113)
          {
            case 2:
              int v114 = *v75;
              break;
            case 3:
              int v114 = *v75 | (*((unsigned __int8 *)v75 + 2) << 16);
              break;
            case 4:
              int v114 = *(_DWORD *)v75;
              break;
            default:
              int v114 = *(unsigned __int8 *)v75;
              break;
          }
        }
        else
        {
          int v114 = 0;
        }
        if ((v114 | v112) == 0xFFFFFFFF) {
          goto LABEL_254;
        }
        goto LABEL_250;
      }
    }
    if (!*((unsigned char *)v75 + v91)) {
      goto LABEL_232;
    }
    int v115 = (*((unsigned __int8 *)v75 + v91) - 1) << v100;
    if (v91 > 3) {
      int v115 = 0;
    }
    __src = v75;
    if (v91)
    {
      if (v91 <= 3) {
        int v116 = v91;
      }
      else {
        int v116 = 4;
      }
      switch(v116)
      {
        case 2:
          int v117 = *v75;
          break;
        case 3:
          int v117 = *v75 | (*((unsigned __int8 *)v75 + 2) << 16);
          break;
        case 4:
          int v117 = *(_DWORD *)v75;
          break;
        default:
          int v117 = *(unsigned __int8 *)v75;
          break;
      }
    }
    else
    {
      int v117 = 0;
    }
    int v99 = (v117 | v115) + 1;
    goto LABEL_223;
  }
  long long v169 = v74;
  if (v76 == v81)
  {
    uint64_t v159 = *(void *)(v174[9] - 8);
    uint64_t v160 = v174[9];
    size_t v92 = v89 + v90;
    unsigned int v93 = v81;
    uint64_t v94 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v63 + 48);
    int v95 = v74;
    uint64_t v96 = v62;
    uint64_t v97 = *(void *)(v62 - 8);
    int v98 = v94(v169, v76);
    __src = v75;
    int v99 = ((uint64_t (*)(unsigned __int16 *, uint64_t, uint64_t))v94)(v75, v76, v96);
    uint64_t v63 = v97;
    uint64_t v62 = v96;
    unsigned int v81 = v93;
    size_t v91 = v92;
    uint64_t v73 = v159;
    uint64_t v64 = v160;
    if (v98)
    {
      if (!v99) {
        goto LABEL_254;
      }
      goto LABEL_250;
    }
LABEL_223:
    int v75 = __src;
    if (v99) {
      goto LABEL_224;
    }
LABEL_232:
    unsigned int v158 = v81;
    (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v63 + 24))(v95, v75, v62);
    uint64_t v122 = (void *)((unint64_t)&v95[v167] & v168);
    uint64_t v123 = (void *)(((unint64_t)v75 + v167) & v168);
    unint64_t v124 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
    int v125 = v124(v122, 1, v64);
    uint64_t v126 = v64;
    int v127 = v124(v123, 1, v64);
    size_t v128 = v91;
    if (v125)
    {
      if (!v127)
      {
        (*(void (**)(void *, void *, uint64_t))(v73 + 16))(v122, v123, v126);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v122, 0, 1, v126);
        goto LABEL_238;
      }
    }
    else
    {
      if (!v127)
      {
        (*(void (**)(void *, void *, uint64_t))(v73 + 24))(v122, v123, v126);
LABEL_238:
        uint64_t v129 = (void *)(((unint64_t)v122 + v164) & v165);
        uint64_t v130 = (void *)(((unint64_t)v123 + v164) & v165);
        uint64_t v131 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v173 + 48);
        int v132 = v131(v129, 1, v171);
        int v133 = v131(v130, 1, v171);
        if (v132)
        {
          unint64_t v120 = v166;
          unsigned int v81 = v158;
          size_t v91 = v128;
          if (!v133)
          {
            (*(void (**)(void *, void *, uint64_t))(v173 + 16))(v129, v130, v171);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v129, 0, 1, v171);
            goto LABEL_262;
          }
        }
        else
        {
          unint64_t v120 = v166;
          unsigned int v81 = v158;
          size_t v91 = v128;
          if (!v133)
          {
            (*(void (**)(void *, void *, uint64_t))(v173 + 24))(v129, v130, v171);
            goto LABEL_262;
          }
          (*(void (**)(void *, uint64_t))(v173 + 8))(v129, v171);
        }
        memcpy(v129, v130, v163);
        goto LABEL_262;
      }
      (*(void (**)(void *, uint64_t))(v73 + 8))(v122, v126);
    }
    memcpy(v122, v123, __n);
    goto LABEL_238;
  }
  uint64_t v104 = *(void *)(v62 - 8);
  uint64_t v105 = v62;
  unint64_t v106 = ((unint64_t)v169 + v85) & v84;
  if (v78 == v81) {
    unsigned int v107 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v73 + 48))(v106, v77, v64);
  }
  else {
    unsigned int v107 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v66 + 48))((v88 + v106) & v87, v67, v171);
  }
  if (v107 >= 2)
  {
    unint64_t v110 = ((unint64_t)v75 + v167) & v168;
    if (v78 == v81) {
      unsigned int v111 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v73 + 48))(v110, v77, v64);
    }
    else {
      unsigned int v111 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v173 + 48))((v164 + v110) & v165, v67, v171);
    }
    int v95 = v169;
    uint64_t v62 = v105;
    uint64_t v63 = v104;
    if (v111 < 2)
    {
LABEL_254:
      unsigned int v135 = v81;
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v63 + 16))(v95, v75, v62);
      uint64_t v136 = (void *)((unint64_t)&v95[v167] & v168);
      uint64_t v137 = (const void *)(((unint64_t)v75 + v167) & v168);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48))(v137, 1, v64))
      {
        memcpy(v136, v137, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v136, v137, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v136, 0, 1, v64);
      }
      uint64_t v138 = (void *)(((unint64_t)v136 + v164) & v165);
      uint64_t v139 = (const void *)(((unint64_t)v137 + v164) & v165);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v173 + 48))(v139, 1, v171))
      {
        memcpy(v138, v139, v163);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v173 + 16))(v138, v139, v171);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v138, 0, 1, v171);
      }
      unint64_t v120 = v166;
      unsigned int v81 = v135;
      if (!v135) {
        v95[v91] = 0;
      }
      goto LABEL_262;
    }
LABEL_250:
    if (v81) {
      size_t v134 = v91;
    }
    else {
      size_t v134 = v91 + 1;
    }
    memcpy(v95, v75, v134);
    unint64_t v120 = v166;
    goto LABEL_262;
  }
  unint64_t v108 = ((unint64_t)v75 + v167) & v168;
  if (v78 == v81) {
    unsigned int v109 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v73 + 48))(v108, v77, v64);
  }
  else {
    unsigned int v109 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v173 + 48))((v164 + v108) & v165, v67, v171);
  }
  int v95 = v169;
  uint64_t v62 = v105;
  uint64_t v63 = v104;
  if (v109 < 2) {
    goto LABEL_232;
  }
LABEL_224:
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v95, v62);
  unint64_t v118 = (unint64_t)&v95[v167] & v168;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v73 + 48))(v118, 1, v64)) {
    (*(void (**)(unint64_t, uint64_t))(v73 + 8))(v118, v64);
  }
  unint64_t v119 = (v164 + v118) & v165;
  unint64_t v120 = v166;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v173 + 48))(v119, 1, v171)) {
    (*(void (**)(unint64_t, uint64_t))(v173 + 8))(v119, v171);
  }
  if (v81) {
    size_t v121 = v91;
  }
  else {
    size_t v121 = v91 + 1;
  }
  memcpy(v95, v75, v121);
LABEL_262:
  if (v81) {
    size_t v140 = v91;
  }
  else {
    size_t v140 = v91 + 1;
  }
  unint64_t v141 = (unint64_t)&v95[v140];
  unint64_t v142 = (unint64_t)v75 + v140;
  *(unsigned char *)unint64_t v141 = *(unsigned char *)v142;
  unint64_t v143 = v141 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v144 = v142 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v141 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v142 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v145 = v174[7];
  uint64_t v146 = *(void *)(v145 - 8);
  uint64_t v147 = *(unsigned __int8 *)(v146 + 80);
  uint64_t v148 = (void *)((v147 + 16 + v143) & ~v147);
  uint64_t v149 = (void *)((v147 + 16 + v144) & ~v147);
  uint64_t v150 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v146 + 48);
  int v151 = v150(v148, 1, v145);
  int v152 = v150(v149, 1, v145);
  if (v151)
  {
    if (!v152)
    {
      (*(void (**)(void *, void *, uint64_t))(v146 + 16))(v148, v149, v145);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v146 + 56))(v148, 0, 1, v145);
      goto LABEL_276;
    }
    int v153 = *(_DWORD *)(v146 + 84);
    size_t v154 = *(void *)(v146 + 64);
  }
  else
  {
    if (!v152)
    {
      (*(void (**)(void *, void *, uint64_t))(v146 + 24))(v148, v149, v145);
      goto LABEL_276;
    }
    (*(void (**)(void *, uint64_t))(v146 + 8))(v148, v145);
    int v153 = *(_DWORD *)(v146 + 84);
    size_t v154 = *(void *)(v146 + 64);
  }
  if (v153) {
    size_t v155 = v154;
  }
  else {
    size_t v155 = v154 + 1;
  }
  memcpy(v148, v149, v155);
LABEL_276:
  if (*(_DWORD *)(v146 + 84)) {
    uint64_t v156 = *(void *)(v146 + 64);
  }
  else {
    uint64_t v156 = *(void *)(v146 + 64) + 1;
  }
  *(void *)(((unint64_t)v148 + v156 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v149
                                                                                       + v156
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v120;
}

_OWORD *sub_24ECC645C(_OWORD *a1, _OWORD *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3[8] - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(a3[10] - 8);
  uint64_t v7 = v6;
  uint64_t v8 = (*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80)) & 0xF8 | 7u;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  uint64_t v10 = (unsigned __int8 *)(((unint64_t)a2 + v8 + 16) & ~v8);
  unint64_t v11 = *(void *)(v4 + 64);
  if (v11 <= 0x10) {
    unint64_t v12 = 16;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(a3[8] - 8) + 64);
  }
  unint64_t v13 = v11 + ((v5 + 8) & ~v5);
  if (v13 <= 0x18) {
    uint64_t v14 = 24;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 + 1 <= v12 + 1) {
    uint64_t v15 = v12 + 1;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (v15 + 1 > v12) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = v12;
  }
  unint64_t v17 = *(void *)(v6 + 64);
  if (v17 <= v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = v17;
  }
  unsigned int v19 = v10[v18];
  unsigned int v20 = v19 - 5;
  if (v19 >= 5)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v10;
        goto LABEL_25;
      case 2:
        int v22 = *(unsigned __int16 *)v10;
        goto LABEL_25;
      case 3:
        int v22 = *(unsigned __int16 *)(((unint64_t)a2 + v8 + 16) & ~v8) | (*(unsigned __int8 *)((((unint64_t)a2 + v8 + 16) & ~v8)
                                                                                                  + 2) << 16);
        goto LABEL_25;
      case 4:
        int v22 = *(_DWORD *)v10;
LABEL_25:
        int v23 = (v22 | (v20 << (8 * v18))) + 5;
        unsigned int v19 = v22 + 5;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  switch(v19)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *))(v4 + 32))(v9, v10);
      char v24 = 1;
      goto LABEL_76;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *))(v4 + 32))(v9, v10);
      char v24 = 2;
      goto LABEL_76;
    case 3u:
      unsigned int v25 = v10[v15];
      unsigned int v26 = v25 - 2;
      if (v25 < 2) {
        goto LABEL_43;
      }
      if (v15 <= 3) {
        uint64_t v27 = v15;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *v10;
          break;
        case 2:
          int v28 = *(unsigned __int16 *)v10;
          break;
        case 3:
          int v28 = *(unsigned __int16 *)(((unint64_t)a2 + v8 + 16) & ~v8) | (*(unsigned __int8 *)((((unint64_t)a2 + v8 + 16) & ~v8) + 2) << 16);
          break;
        case 4:
          int v28 = *(_DWORD *)v10;
          break;
        default:
          goto LABEL_43;
      }
      if (v15 < 4)
      {
        if ((v28 | (v26 << (8 * v15))) == 0xFFFFFFFF)
        {
LABEL_44:
          unsigned int v29 = v10[v14];
          unsigned int v30 = v29 - 2;
          if (v29 >= 2)
          {
            if (v14 <= 3) {
              uint64_t v31 = v14;
            }
            else {
              uint64_t v31 = 4;
            }
            switch(v31)
            {
              case 1:
                int v32 = *v10;
                goto LABEL_60;
              case 2:
                int v32 = *(unsigned __int16 *)v10;
                goto LABEL_60;
              case 3:
                int v32 = *(unsigned __int16 *)(((unint64_t)a2 + v8 + 16) & ~v8) | (*(unsigned __int8 *)((((unint64_t)a2 + v8 + 16) & ~v8) + 2) << 16);
                goto LABEL_60;
              case 4:
                int v32 = *(_DWORD *)v10;
LABEL_60:
                if (v14 < 4) {
                  unsigned int v29 = (v32 | (v30 << (8 * v14))) + 2;
                }
                else {
                  unsigned int v29 = v32 + 2;
                }
                break;
              default:
                break;
            }
          }
          if (v29 == 1)
          {
            *uint64_t v9 = *(void *)v10;
            (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 8) & ~v5, (unint64_t)&v10[v5 + 8] & ~v5);
            char v37 = 1;
            unint64_t v12 = v14;
            char v38 = 1;
          }
          else
          {
            char v37 = 0;
            long long v39 = *(_OWORD *)v10;
            *(void *)((((unint64_t)a1 + v8 + 16) & ~v8) + 0x10) = *(void *)((((unint64_t)a2 + v8 + 16) & ~v8)
                                                                                     + 0x10);
            *(_OWORD *)uint64_t v9 = v39;
            char v38 = 1;
            unint64_t v12 = v14;
          }
          goto LABEL_75;
        }
      }
      else
      {
        unsigned int v25 = v28 + 2;
LABEL_43:
        if (v25 == 1) {
          goto LABEL_44;
        }
      }
      unsigned int v33 = v10[v12];
      unsigned int v34 = v33 - 2;
      if (v33 >= 2)
      {
        if (v12 <= 3) {
          uint64_t v35 = v12;
        }
        else {
          uint64_t v35 = 4;
        }
        switch(v35)
        {
          case 1:
            int v36 = *v10;
            goto LABEL_69;
          case 2:
            int v36 = *(unsigned __int16 *)v10;
            goto LABEL_69;
          case 3:
            int v36 = *(unsigned __int16 *)(((unint64_t)a2 + v8 + 16) & ~v8) | (*(unsigned __int8 *)((((unint64_t)a2 + v8 + 16) & ~v8) + 2) << 16);
            goto LABEL_69;
          case 4:
            int v36 = *(_DWORD *)v10;
LABEL_69:
            if (v12 < 4) {
              unsigned int v33 = (v36 | (v34 << (8 * v12))) + 2;
            }
            else {
              unsigned int v33 = v36 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v33 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *))(v4 + 32))(v9, v10);
        char v38 = 0;
        char v37 = 1;
      }
      else
      {
        char v37 = 0;
        char v38 = 0;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
LABEL_75:
      *((unsigned char *)v9 + v12) = v37;
      *((unsigned char *)v9 + v15) = v38;
      char v24 = 3;
LABEL_76:
      *((unsigned char *)v9 + v18) = v24;
      uint64_t v40 = sub_24EE55880();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v42 = a3[9];
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = v43;
      uint64_t v109 = a3[2];
      unint64_t v110 = a3;
      uint64_t v45 = *(void *)(v109 - 8);
      uint64_t v46 = v45;
      int v47 = *(_DWORD *)(v45 + 84);
      uint64_t v48 = (*(_DWORD *)(v43 + 80) | *(_DWORD *)(v41 + 80) | *(_DWORD *)(v45 + 80));
      uint64_t v49 = *(_DWORD *)(v43 + 80);
      uint64_t v50 = *(_DWORD *)(v45 + 80);
      uint64_t v51 = v18 + v48 + 1;
      __dst = (char *)(((unint64_t)v9 + v51) & ~v48);
      unsigned int v52 = (unsigned __int16 *)((unint64_t)&v10[v51] & ~v48);
      uint64_t v53 = *(unsigned int *)(v41 + 84);
      uint64_t v54 = *(unsigned int *)(v43 + 84);
      if (v54) {
        unsigned int v55 = v54 - 1;
      }
      else {
        unsigned int v55 = 0;
      }
      if (v55 <= v53) {
        unsigned int v56 = *(_DWORD *)(v41 + 84);
      }
      else {
        unsigned int v56 = v55;
      }
      unsigned int v57 = v47 - 1;
      if (!v47) {
        unsigned int v57 = 0;
      }
      if (v57 <= v56) {
        unsigned int v58 = v56;
      }
      else {
        unsigned int v58 = v57;
      }
      size_t v59 = *(void *)(v43 + 64);
      if (!v54) {
        ++v59;
      }
      uint64_t v60 = *(void *)(*(void *)(v40 - 8) + 64) + v49;
      uint64_t v61 = ~v50;
      size_t __n = v59;
      if (v47) {
        uint64_t v62 = *(void *)(v45 + 64);
      }
      else {
        uint64_t v62 = *(void *)(v45 + 64) + 1;
      }
      size_t v63 = ((v59 + v50 + (v60 & ~v49)) & ~v50) + v62;
      size_t v107 = v59 + v50;
      uint64_t v108 = ~v49;
      if (!v58)
      {
        if (!*((unsigned char *)v52 + v63)) {
          goto LABEL_109;
        }
        int v74 = (*((unsigned __int8 *)v52 + v63) - 1) << (8 * v63);
        if (v63 > 3) {
          int v74 = 0;
        }
        if (v63)
        {
          int v75 = v63 <= 3 ? ((v59 + v50 + (v60 & ~v49)) & ~v50) + v62 : 4;
          switch(v75)
          {
            case 2:
              int v76 = *v52;
              break;
            case 3:
              int v76 = *v52 | (*((unsigned __int8 *)v52 + 2) << 16);
              break;
            case 4:
              int v76 = *(_DWORD *)v52;
              break;
            default:
              int v76 = *(unsigned __int8 *)v52;
              break;
          }
        }
        else
        {
          int v76 = 0;
        }
        if ((v76 | v74) == 0xFFFFFFFF) {
          goto LABEL_109;
        }
        goto LABEL_122;
      }
      if (v53 == v58)
      {
        uint64_t v64 = v52;
        unsigned int v103 = v58;
        uint64_t v65 = v44;
        uint64_t v66 = v62;
        uint64_t v67 = v52;
        uint64_t v68 = *(void *)(v109 - 8);
        size_t v69 = v63;
        uint64_t v70 = ~v50;
        uint64_t v71 = v42;
        uint64_t v72 = v40;
        int v73 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v41 + 48))(v64, v53, v40);
        uint64_t v40 = v72;
        uint64_t v42 = v71;
        uint64_t v61 = v70;
        size_t v63 = v69;
        uint64_t v46 = v68;
        unsigned int v52 = v67;
        uint64_t v62 = v66;
        uint64_t v44 = v65;
        unsigned int v58 = v103;
        if (!v73) {
          goto LABEL_109;
        }
LABEL_122:
        if (v58) {
          size_t v87 = v63;
        }
        else {
          size_t v87 = v63 + 1;
        }
        uint64_t v86 = __dst;
        memcpy(__dst, v52, v87);
        uint64_t v85 = v110;
        size_t v82 = a1;
        goto LABEL_126;
      }
      size_t v104 = v40;
      unint64_t v77 = ((unint64_t)v52 + v60) & ~v49;
      if (v55 == v58) {
        unsigned int v78 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v44 + 48))(v77, v54, v42);
      }
      else {
        unsigned int v78 = (*(uint64_t (**)(size_t))(v45 + 48))((v59 + v50 + v77) & v61);
      }
      uint64_t v40 = v104;
      if (v78 >= 2) {
        goto LABEL_122;
      }
LABEL_109:
      size_t v105 = v62;
      uint64_t v79 = v42;
      (*(void (**)(char *, unsigned __int16 *, uint64_t))(v41 + 32))(__dst, v52, v40);
      unsigned int v80 = (void *)((unint64_t)&__dst[v60] & v108);
      unsigned int v81 = (const void *)(((unint64_t)v52 + v60) & v108);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v81, 1, v79))
      {
        memcpy(v80, v81, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v44 + 32))(v80, v81, v79);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v80, 0, 1, v79);
      }
      size_t v82 = a1;
      size_t v83 = (void *)(((unint64_t)v80 + v107) & v61);
      uint64_t v84 = (const void *)(((unint64_t)v81 + v107) & v61);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v84, 1, v109))
      {
        memcpy(v83, v84, v105);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v83, v84, v109);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v83, 0, 1, v109);
      }
      uint64_t v85 = v110;
      uint64_t v86 = __dst;
      if (!v58) {
        __dst[v63] = 0;
      }
LABEL_126:
      if (v58) {
        size_t v88 = v63;
      }
      else {
        size_t v88 = v63 + 1;
      }
      unint64_t v89 = (unint64_t)&v86[v88];
      unint64_t v90 = (unint64_t)v52 + v88;
      *(unsigned char *)unint64_t v89 = *(unsigned char *)v90;
      v89 &= 0xFFFFFFFFFFFFFFF8;
      *(void *)(v89 + 8) = *(void *)((v90 & 0xFFFFFFFFFFFFFFF8) + 8);
      uint64_t v91 = v85[7];
      uint64_t v92 = *(void *)(v91 - 8);
      uint64_t v93 = *(unsigned __int8 *)(v92 + 80);
      uint64_t v94 = (void *)((v93 + 16 + v89) & ~v93);
      int v95 = (const void *)((v93 + 16 + (v90 & 0xFFFFFFFFFFFFFFF8)) & ~v93);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v92 + 48))(v95, 1, v91))
      {
        int v96 = *(_DWORD *)(v92 + 84);
        size_t v97 = *(void *)(v92 + 64);
        if (v96) {
          size_t v98 = v97;
        }
        else {
          size_t v98 = v97 + 1;
        }
        memcpy(v94, v95, v98);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v94, v95, v91);
        char v100 = *(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56);
        uint64_t v99 = v92 + 56;
        v100(v94, 0, 1, v91);
        int v96 = *(_DWORD *)(v99 + 28);
        size_t v97 = *(void *)(v99 + 8);
      }
      if (v96) {
        size_t v101 = v97;
      }
      else {
        size_t v101 = v97 + 1;
      }
      *(void *)(((unint64_t)v94 + v101 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v95
                                                                                          + v101
                                                                                          + 7) & 0xFFFFFFFFFFFFFFF8);
      return v82;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, void))(v7 + 32))(v9, v10, a3[10]);
      char v24 = 4;
      goto LABEL_76;
    default:
      char v24 = 0;
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      goto LABEL_76;
  }
}

void *sub_24ECC6F00(void *a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[8];
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  long long v175 = a3;
  uint64_t v11 = a3[10];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(_DWORD *)(v12 + 80) | v9) & 0xF8 | 7u;
  uint64_t v14 = (unsigned __int8 *)(((unint64_t)a1 + v13 + 16) & ~v13);
  uint64_t v15 = (unsigned __int8 *)(((unint64_t)a2 + v13 + 16) & ~v13);
  unint64_t v16 = *(void *)(v8 + 64);
  uint64_t v167 = a1;
  if (v14 == v15)
  {
    unint64_t v27 = 16;
    if (v16 > 0x10) {
      unint64_t v27 = *(void *)(v8 + 64);
    }
    unint64_t v28 = v16 + ((v10 + 8) & ~v10);
    if (v28 <= 0x18) {
      unint64_t v28 = 24;
    }
    unint64_t v29 = v28 + 1;
    if (v29 <= v27 + 1) {
      unint64_t v29 = v27 + 1;
    }
    if (v29 + 1 > v27) {
      unint64_t v30 = v29 + 1;
    }
    else {
      unint64_t v30 = v27;
    }
    if (*(void *)(v12 + 64) <= v30) {
      unint64_t v22 = v30;
    }
    else {
      unint64_t v22 = *(void *)(v12 + 64);
    }
  }
  else
  {
    if (v16 <= 0x10) {
      unint64_t v17 = 16;
    }
    else {
      unint64_t v17 = *(void *)(v8 + 64);
    }
    uint64_t v173 = v10 + 8;
    unint64_t v18 = v16 + ((v10 + 8) & ~v10);
    if (v18 <= 0x18) {
      uint64_t v19 = 24;
    }
    else {
      uint64_t v19 = v18;
    }
    if (v19 + 1 <= v17 + 1) {
      uint64_t v20 = v17 + 1;
    }
    else {
      uint64_t v20 = v19 + 1;
    }
    if (v20 + 1 > v17) {
      unint64_t v21 = v20 + 1;
    }
    else {
      unint64_t v21 = v17;
    }
    if (*(void *)(v12 + 64) <= v21) {
      unint64_t v22 = v21;
    }
    else {
      unint64_t v22 = *(void *)(v12 + 64);
    }
    unsigned int v23 = v14[v22];
    unsigned int v24 = v23 - 5;
    if (v23 >= 5)
    {
      if (v22 <= 3) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v14;
          if (v22 < 4) {
            goto LABEL_39;
          }
          goto LABEL_41;
        case 2:
          int v26 = *(unsigned __int16 *)v14;
          if (v22 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_39;
        case 3:
          int v26 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          if (v22 < 4) {
            goto LABEL_39;
          }
          goto LABEL_41;
        case 4:
          int v26 = *(_DWORD *)v14;
          if (v22 < 4) {
LABEL_39:
          }
            unsigned int v23 = (v26 | (v24 << (8 * v22))) + 5;
          else {
LABEL_41:
          }
            unsigned int v23 = v26 + 5;
          break;
        default:
          break;
      }
    }
    uint64_t v171 = ~v10;
    switch(v23)
    {
      case 1u:
      case 2u:
        goto LABEL_43;
      case 3u:
        unsigned int v31 = v14[v20];
        unsigned int v32 = v31 - 2;
        if (v31 < 2) {
          goto LABEL_80;
        }
        if (v20 <= 3) {
          uint64_t v33 = v20;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *v14;
            break;
          case 2:
            int v34 = *(unsigned __int16 *)v14;
            break;
          case 3:
            int v34 = *(unsigned __int16 *)v14 | (v14[2] << 16);
            break;
          case 4:
            int v34 = *(_DWORD *)v14;
            break;
          default:
            goto LABEL_80;
        }
        if (v20 < 4)
        {
          if ((v34 | (v32 << (8 * v20))) == 0xFFFFFFFF)
          {
LABEL_81:
            unsigned int v44 = v14[v19];
            unsigned int v45 = v44 - 2;
            if (v44 >= 2)
            {
              if (v19 <= 3) {
                uint64_t v46 = v19;
              }
              else {
                uint64_t v46 = 4;
              }
              switch(v46)
              {
                case 1:
                  int v47 = *v14;
                  goto LABEL_116;
                case 2:
                  int v47 = *(unsigned __int16 *)v14;
                  goto LABEL_116;
                case 3:
                  int v47 = *(unsigned __int16 *)v14 | (v14[2] << 16);
                  goto LABEL_116;
                case 4:
                  int v47 = *(_DWORD *)v14;
LABEL_116:
                  if (v19 < 4) {
                    unsigned int v44 = (v47 | (v45 << (8 * v19))) + 2;
                  }
                  else {
                    unsigned int v44 = v47 + 2;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v44 == 1) {
              (*(void (**)(unint64_t, uint64_t))(v8 + 8))((unint64_t)&v14[v173] & v171, v7);
            }
            goto LABEL_51;
          }
        }
        else
        {
          unsigned int v31 = v34 + 2;
LABEL_80:
          if (v31 == 1) {
            goto LABEL_81;
          }
        }
        unsigned int v48 = v14[v17];
        unsigned int v49 = v48 - 2;
        if (v48 >= 2)
        {
          if (v17 <= 3) {
            uint64_t v50 = v17;
          }
          else {
            uint64_t v50 = 4;
          }
          switch(v50)
          {
            case 1:
              int v51 = *v14;
              goto LABEL_124;
            case 2:
              int v51 = *(unsigned __int16 *)v14;
              goto LABEL_124;
            case 3:
              int v51 = *(unsigned __int16 *)v14 | (v14[2] << 16);
              goto LABEL_124;
            case 4:
              int v51 = *(_DWORD *)v14;
LABEL_124:
              if (v17 < 4) {
                unsigned int v48 = (v51 | (v49 << (8 * v17))) + 2;
              }
              else {
                unsigned int v48 = v51 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v48 == 1) {
LABEL_43:
        }
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v14, v7);
LABEL_51:
        unsigned int v35 = v15[v22];
        unsigned int v36 = v35 - 5;
        if (v35 >= 5)
        {
          if (v22 <= 3) {
            uint64_t v37 = v22;
          }
          else {
            uint64_t v37 = 4;
          }
          switch(v37)
          {
            case 1:
              int v38 = *v15;
              if (v22 < 4) {
                goto LABEL_61;
              }
              goto LABEL_63;
            case 2:
              int v38 = *(unsigned __int16 *)v15;
              if (v22 >= 4) {
                goto LABEL_63;
              }
              goto LABEL_61;
            case 3:
              int v38 = *(unsigned __int16 *)v15 | (v15[2] << 16);
              if (v22 < 4) {
                goto LABEL_61;
              }
              goto LABEL_63;
            case 4:
              int v38 = *(_DWORD *)v15;
              if (v22 < 4) {
LABEL_61:
              }
                unsigned int v35 = (v38 | (v36 << (8 * v22))) + 5;
              else {
LABEL_63:
              }
                unsigned int v35 = v38 + 5;
              break;
            default:
              goto LABEL_64;
          }
        }
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(v14, v11);
        goto LABEL_51;
      default:
        goto LABEL_51;
    }
LABEL_64:
    switch(v35)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v14, v15, v7);
        char v39 = 1;
        goto LABEL_148;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v14, v15, v7);
        char v39 = 2;
        goto LABEL_148;
      case 3u:
        unsigned int v40 = v15[v20];
        unsigned int v41 = v40 - 2;
        if (v40 < 2) {
          goto LABEL_99;
        }
        if (v20 <= 3) {
          uint64_t v42 = v20;
        }
        else {
          uint64_t v42 = 4;
        }
        switch(v42)
        {
          case 1:
            int v43 = *v15;
            break;
          case 2:
            int v43 = *(unsigned __int16 *)v15;
            break;
          case 3:
            int v43 = *(unsigned __int16 *)v15 | (v15[2] << 16);
            break;
          case 4:
            int v43 = *(_DWORD *)v15;
            break;
          default:
            goto LABEL_99;
        }
        if (v20 < 4)
        {
          if ((v43 | (v41 << (8 * v20))) == 0xFFFFFFFF)
          {
LABEL_100:
            unsigned int v52 = v15[v19];
            unsigned int v53 = v52 - 2;
            if (v52 >= 2)
            {
              if (v19 <= 3) {
                uint64_t v54 = v19;
              }
              else {
                uint64_t v54 = 4;
              }
              switch(v54)
              {
                case 1:
                  int v55 = *v15;
                  goto LABEL_132;
                case 2:
                  int v55 = *(unsigned __int16 *)v15;
                  goto LABEL_132;
                case 3:
                  int v55 = *(unsigned __int16 *)v15 | (v15[2] << 16);
                  goto LABEL_132;
                case 4:
                  int v55 = *(_DWORD *)v15;
LABEL_132:
                  if (v19 < 4) {
                    unsigned int v52 = (v55 | (v53 << (8 * v19))) + 2;
                  }
                  else {
                    unsigned int v52 = v55 + 2;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v52 == 1)
            {
              *(void *)uint64_t v14 = *(void *)v15;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((unint64_t)&v14[v173] & v171, (unint64_t)&v15[v173] & v171, v7);
              char v60 = 1;
              unint64_t v17 = v19;
              char v61 = 1;
            }
            else
            {
              char v60 = 0;
              long long v62 = *(_OWORD *)v15;
              *((void *)v14 + 2) = *((void *)v15 + 2);
              *(_OWORD *)uint64_t v14 = v62;
              char v61 = 1;
              unint64_t v17 = v19;
            }
            goto LABEL_147;
          }
        }
        else
        {
          unsigned int v40 = v43 + 2;
LABEL_99:
          if (v40 == 1) {
            goto LABEL_100;
          }
        }
        unsigned int v56 = v15[v17];
        unsigned int v57 = v56 - 2;
        if (v56 >= 2)
        {
          if (v17 <= 3) {
            uint64_t v58 = v17;
          }
          else {
            uint64_t v58 = 4;
          }
          switch(v58)
          {
            case 1:
              int v59 = *v15;
              goto LABEL_141;
            case 2:
              int v59 = *(unsigned __int16 *)v15;
              goto LABEL_141;
            case 3:
              int v59 = *(unsigned __int16 *)v15 | (v15[2] << 16);
              goto LABEL_141;
            case 4:
              int v59 = *(_DWORD *)v15;
LABEL_141:
              if (v17 < 4) {
                unsigned int v56 = (v59 | (v57 << (8 * v17))) + 2;
              }
              else {
                unsigned int v56 = v59 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v56 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v14, v15, v7);
          char v61 = 0;
          char v60 = 1;
        }
        else
        {
          char v60 = 0;
          char v61 = 0;
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        }
LABEL_147:
        v14[v17] = v60;
        v14[v20] = v61;
        char v39 = 3;
LABEL_148:
        v14[v22] = v39;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(v14, v15, v11);
        char v39 = 4;
        goto LABEL_148;
      default:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        v14[v22] = 0;
        break;
    }
  }
  uint64_t v63 = sub_24EE55880();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = v175[9];
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v172 = v175[2];
  uint64_t v67 = *(void *)(v172 - 8);
  uint64_t v174 = v67;
  uint64_t v68 = *(unsigned int *)(v67 + 84);
  uint64_t v69 = (*(_DWORD *)(v66 + 80) | *(_DWORD *)(v64 + 80) | *(_DWORD *)(v67 + 80));
  uint64_t v70 = *(_DWORD *)(v66 + 80);
  uint64_t v71 = *(_DWORD *)(v67 + 80);
  uint64_t v72 = v22 + v69 + 1;
  unint64_t v73 = (unint64_t)&v14[v72];
  uint64_t v74 = v66;
  int v75 = (unsigned __int16 *)(v73 & ~v69);
  int v76 = (unsigned __int16 *)((unint64_t)&v15[v72] & ~v69);
  uint64_t v77 = *(unsigned int *)(v64 + 84);
  uint64_t v78 = *(unsigned int *)(v66 + 84);
  if (v78) {
    unsigned int v79 = v78 - 1;
  }
  else {
    unsigned int v79 = 0;
  }
  if (v79 <= v77) {
    unsigned int v80 = *(_DWORD *)(v64 + 84);
  }
  else {
    unsigned int v80 = v79;
  }
  unsigned int v81 = v68 - 1;
  if (!v68) {
    unsigned int v81 = 0;
  }
  if (v81 <= v80) {
    unsigned int v82 = v80;
  }
  else {
    unsigned int v82 = v81;
  }
  size_t v83 = *(void *)(v66 + 64);
  if (v78) {
    size_t v84 = v83;
  }
  else {
    size_t v84 = v83 + 1;
  }
  uint64_t v85 = ~v70;
  uint64_t v86 = *(void *)(*(void *)(v63 - 8) + 64) + v70;
  uint64_t v87 = v86 & ~v70;
  uint64_t v88 = ~v71;
  size_t v89 = v84 + v71;
  size_t v90 = (v84 + v71 + v87) & ~v71;
  if (v68) {
    uint64_t v91 = *(void *)(v67 + 64);
  }
  else {
    uint64_t v91 = *(void *)(v67 + 64) + 1;
  }
  size_t v92 = v90 + v91;
  size_t v164 = v91;
  size_t v165 = v84 + v71;
  uint64_t v166 = ~v71;
  size_t __n = v84;
  uint64_t v168 = v86;
  uint64_t v169 = v85;
  if (!v82)
  {
    char v101 = 8 * v92;
    int v96 = v75;
    if (*((unsigned char *)v75 + v92))
    {
      int v102 = (*((unsigned __int8 *)v75 + v92) - 1) << v101;
      if (v92 > 3) {
        int v102 = 0;
      }
      if (v92)
      {
        int v103 = v92 <= 3 ? v92 : 4;
        switch(v103)
        {
          case 2:
            int v104 = *v75;
            break;
          case 3:
            int v104 = *v75 | (*((unsigned __int8 *)v75 + 2) << 16);
            break;
          case 4:
            int v104 = *(_DWORD *)v75;
            break;
          default:
            int v104 = *(unsigned __int8 *)v75;
            break;
        }
      }
      else
      {
        int v104 = 0;
      }
      if ((v104 | v102) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v76 + v92)) {
          goto LABEL_254;
        }
        int v113 = (*((unsigned __int8 *)v76 + v92) - 1) << v101;
        if (v92 > 3) {
          int v113 = 0;
        }
        if (v92)
        {
          int v114 = v92 <= 3 ? v92 : 4;
          switch(v114)
          {
            case 2:
              int v115 = *v76;
              break;
            case 3:
              int v115 = *v76 | (*((unsigned __int8 *)v76 + 2) << 16);
              break;
            case 4:
              int v115 = *(_DWORD *)v76;
              break;
            default:
              int v115 = *(unsigned __int8 *)v76;
              break;
          }
        }
        else
        {
          int v115 = 0;
        }
        if ((v115 | v113) == 0xFFFFFFFF) {
          goto LABEL_254;
        }
        goto LABEL_250;
      }
    }
    if (!*((unsigned char *)v76 + v92)) {
      goto LABEL_232;
    }
    int v116 = (*((unsigned __int8 *)v76 + v92) - 1) << v101;
    if (v92 > 3) {
      int v116 = 0;
    }
    __src = v76;
    if (v92)
    {
      if (v92 <= 3) {
        int v117 = v92;
      }
      else {
        int v117 = 4;
      }
      switch(v117)
      {
        case 2:
          int v118 = *v76;
          break;
        case 3:
          int v118 = *v76 | (*((unsigned __int8 *)v76 + 2) << 16);
          break;
        case 4:
          int v118 = *(_DWORD *)v76;
          break;
        default:
          int v118 = *(unsigned __int8 *)v76;
          break;
      }
    }
    else
    {
      int v118 = 0;
    }
    int v100 = (v118 | v116) + 1;
    goto LABEL_223;
  }
  uint64_t v170 = v75;
  if (v77 == v82)
  {
    uint64_t v160 = *(void *)(v175[9] - 8);
    uint64_t v161 = v175[9];
    size_t v93 = v90 + v91;
    unsigned int v94 = v82;
    int v95 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v64 + 48);
    int v96 = v75;
    uint64_t v97 = v63;
    uint64_t v98 = *(void *)(v63 - 8);
    int v99 = v95(v170, v77);
    __src = v76;
    int v100 = ((uint64_t (*)(unsigned __int16 *, uint64_t, uint64_t))v95)(v76, v77, v97);
    uint64_t v64 = v98;
    uint64_t v63 = v97;
    unsigned int v82 = v94;
    size_t v92 = v93;
    uint64_t v74 = v160;
    uint64_t v65 = v161;
    if (v99)
    {
      if (!v100) {
        goto LABEL_254;
      }
      goto LABEL_250;
    }
LABEL_223:
    int v76 = __src;
    if (v100) {
      goto LABEL_224;
    }
LABEL_232:
    unsigned int v159 = v82;
    (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v64 + 40))(v96, v76, v63);
    uint64_t v123 = (void *)((unint64_t)&v96[v168] & v169);
    unint64_t v124 = (void *)(((unint64_t)v76 + v168) & v169);
    int v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
    int v126 = v125(v123, 1, v65);
    uint64_t v127 = v65;
    int v128 = v125(v124, 1, v65);
    size_t v129 = v92;
    if (v126)
    {
      if (!v128)
      {
        (*(void (**)(void *, void *, uint64_t))(v74 + 32))(v123, v124, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v123, 0, 1, v127);
        goto LABEL_238;
      }
    }
    else
    {
      if (!v128)
      {
        (*(void (**)(void *, void *, uint64_t))(v74 + 40))(v123, v124, v127);
LABEL_238:
        uint64_t v130 = (void *)(((unint64_t)v123 + v165) & v166);
        uint64_t v131 = (void *)(((unint64_t)v124 + v165) & v166);
        int v132 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v174 + 48);
        int v133 = v132(v130, 1, v172);
        int v134 = v132(v131, 1, v172);
        if (v133)
        {
          size_t v121 = v167;
          unsigned int v82 = v159;
          size_t v92 = v129;
          if (!v134)
          {
            (*(void (**)(void *, void *, uint64_t))(v174 + 32))(v130, v131, v172);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v174 + 56))(v130, 0, 1, v172);
            goto LABEL_262;
          }
        }
        else
        {
          size_t v121 = v167;
          unsigned int v82 = v159;
          size_t v92 = v129;
          if (!v134)
          {
            (*(void (**)(void *, void *, uint64_t))(v174 + 40))(v130, v131, v172);
            goto LABEL_262;
          }
          (*(void (**)(void *, uint64_t))(v174 + 8))(v130, v172);
        }
        memcpy(v130, v131, v164);
        goto LABEL_262;
      }
      (*(void (**)(void *, uint64_t))(v74 + 8))(v123, v127);
    }
    memcpy(v123, v124, __n);
    goto LABEL_238;
  }
  uint64_t v105 = *(void *)(v63 - 8);
  uint64_t v106 = v63;
  unint64_t v107 = ((unint64_t)v170 + v86) & v85;
  if (v79 == v82) {
    unsigned int v108 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v107, v78, v65);
  }
  else {
    unsigned int v108 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v67 + 48))((v89 + v107) & v88, v68, v172);
  }
  if (v108 >= 2)
  {
    unint64_t v111 = ((unint64_t)v76 + v168) & v169;
    if (v79 == v82) {
      unsigned int v112 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v111, v78, v65);
    }
    else {
      unsigned int v112 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v174 + 48))((v165 + v111) & v166, v68, v172);
    }
    int v96 = v170;
    uint64_t v63 = v106;
    uint64_t v64 = v105;
    if (v112 < 2)
    {
LABEL_254:
      unsigned int v136 = v82;
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v64 + 32))(v96, v76, v63);
      uint64_t v137 = (void *)((unint64_t)&v96[v168] & v169);
      uint64_t v138 = (const void *)(((unint64_t)v76 + v168) & v169);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48))(v138, 1, v65))
      {
        memcpy(v137, v138, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v74 + 32))(v137, v138, v65);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v137, 0, 1, v65);
      }
      uint64_t v139 = (void *)(((unint64_t)v137 + v165) & v166);
      size_t v140 = (const void *)(((unint64_t)v138 + v165) & v166);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v174 + 48))(v140, 1, v172))
      {
        memcpy(v139, v140, v164);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v174 + 32))(v139, v140, v172);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v174 + 56))(v139, 0, 1, v172);
      }
      size_t v121 = v167;
      unsigned int v82 = v136;
      if (!v136) {
        v96[v92] = 0;
      }
      goto LABEL_262;
    }
LABEL_250:
    if (v82) {
      size_t v135 = v92;
    }
    else {
      size_t v135 = v92 + 1;
    }
    memcpy(v96, v76, v135);
    size_t v121 = v167;
    goto LABEL_262;
  }
  unint64_t v109 = ((unint64_t)v76 + v168) & v169;
  if (v79 == v82) {
    unsigned int v110 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v109, v78, v65);
  }
  else {
    unsigned int v110 = (*(uint64_t (**)(size_t, uint64_t, uint64_t))(v174 + 48))((v165 + v109) & v166, v68, v172);
  }
  int v96 = v170;
  uint64_t v63 = v106;
  uint64_t v64 = v105;
  if (v110 < 2) {
    goto LABEL_232;
  }
LABEL_224:
  (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v96, v63);
  unint64_t v119 = (unint64_t)&v96[v168] & v169;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v119, 1, v65)) {
    (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v119, v65);
  }
  unint64_t v120 = (v165 + v119) & v166;
  size_t v121 = v167;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v174 + 48))(v120, 1, v172)) {
    (*(void (**)(unint64_t, uint64_t))(v174 + 8))(v120, v172);
  }
  if (v82) {
    size_t v122 = v92;
  }
  else {
    size_t v122 = v92 + 1;
  }
  memcpy(v96, v76, v122);
LABEL_262:
  if (v82) {
    size_t v141 = v92;
  }
  else {
    size_t v141 = v92 + 1;
  }
  unint64_t v142 = (unint64_t)&v96[v141];
  unint64_t v143 = (unint64_t)v76 + v141;
  *(unsigned char *)unint64_t v142 = *(unsigned char *)v143;
  unint64_t v144 = v142 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v145 = v143 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v142 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v143 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v146 = v175[7];
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v148 = *(unsigned __int8 *)(v147 + 80);
  uint64_t v149 = (void *)((v148 + 16 + v144) & ~v148);
  uint64_t v150 = (void *)((v148 + 16 + v145) & ~v148);
  int v151 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v147 + 48);
  int v152 = v151(v149, 1, v146);
  int v153 = v151(v150, 1, v146);
  if (v152)
  {
    if (!v153)
    {
      (*(void (**)(void *, void *, uint64_t))(v147 + 32))(v149, v150, v146);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(v149, 0, 1, v146);
      goto LABEL_276;
    }
    int v154 = *(_DWORD *)(v147 + 84);
    size_t v155 = *(void *)(v147 + 64);
  }
  else
  {
    if (!v153)
    {
      (*(void (**)(void *, void *, uint64_t))(v147 + 40))(v149, v150, v146);
      goto LABEL_276;
    }
    (*(void (**)(void *, uint64_t))(v147 + 8))(v149, v146);
    int v154 = *(_DWORD *)(v147 + 84);
    size_t v155 = *(void *)(v147 + 64);
  }
  if (v154) {
    size_t v156 = v155;
  }
  else {
    size_t v156 = v155 + 1;
  }
  memcpy(v149, v150, v156);
LABEL_276:
  if (*(_DWORD *)(v147 + 84)) {
    uint64_t v157 = *(void *)(v147 + 64);
  }
  else {
    uint64_t v157 = *(void *)(v147 + 64) + 1;
  }
  *(void *)(((unint64_t)v149 + v157 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v150
                                                                                       + v157
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return v121;
}

uint64_t sub_24ECC82B0(uint64_t a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[8] - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = 16;
  if (v6 > 0x10) {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  int v8 = *(_DWORD *)(v5 + 80);
  unint64_t v9 = ((v8 + 8) & ~(unint64_t)v8) + v6;
  if (v9 <= 0x18) {
    unint64_t v9 = 24;
  }
  unint64_t v10 = v9 + 1;
  if (v10 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  if (v10 + 1 > v7) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7;
  }
  uint64_t v12 = *(void *)(a3[10] - 8);
  unint64_t v13 = *(void *)(v12 + 64);
  if (v13 <= v11) {
    unint64_t v13 = v11;
  }
  unint64_t v67 = v13;
  uint64_t v14 = *(void *)(sub_24EE55880() - 8);
  uint64_t v64 = a3[9];
  uint64_t v15 = *(void *)(v64 - 8);
  unsigned int v16 = *(_DWORD *)(v14 + 84);
  uint64_t v17 = v15;
  int v18 = *(_DWORD *)(v15 + 84);
  if (v18) {
    unsigned int v19 = v18 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  uint64_t v63 = a3[2];
  uint64_t v20 = *(void *)(v63 - 8);
  if (v19 <= v16) {
    unsigned int v21 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v21 = v19;
  }
  uint64_t v22 = *(unsigned int *)(v20 + 84);
  unsigned int v23 = v22 - 1;
  if (!v22) {
    unsigned int v23 = 0;
  }
  if (v23 <= v21) {
    unsigned int v24 = v21;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v24) {
    unsigned int v25 = v24 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  uint64_t v66 = a3[7];
  uint64_t v26 = *(void *)(v66 - 8);
  uint64_t v27 = *(unsigned int *)(v26 + 84);
  unsigned int v28 = v27 - 1;
  if (!v27) {
    unsigned int v28 = 0;
  }
  if (v25 <= v28) {
    unsigned int v29 = v28;
  }
  else {
    unsigned int v29 = v25;
  }
  if (v29 <= 0x7FFFFFFF) {
    unsigned int v30 = 0x7FFFFFFF;
  }
  else {
    unsigned int v30 = v29;
  }
  unsigned int v62 = *(_DWORD *)(v15 + 84);
  if (v18) {
    uint64_t v31 = *(void *)(v15 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v15 + 64) + 1;
  }
  int v32 = *(_DWORD *)(v12 + 80);
  uint64_t v65 = v14;
  int v33 = *(_DWORD *)(v14 + 80);
  int v34 = *(_DWORD *)(v17 + 80);
  int v35 = *(_DWORD *)(v20 + 80);
  uint64_t v36 = *(void *)(v14 + 64);
  uint64_t v37 = *(void *)(v20 + 64);
  if (v22) {
    uint64_t v38 = v24 == 0;
  }
  else {
    uint64_t v38 = (v24 == 0) + 1;
  }
  uint64_t v39 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v40 = 7;
  if (!v27) {
    uint64_t v40 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v41 = (v32 | v8) & 0xF8 | 7u;
  unint64_t v42 = v67 + 1;
  char v43 = v34 | v33;
  uint64_t v44 = v35;
  uint64_t v45 = (v43 | v35);
  uint64_t v46 = v36 + v34;
  uint64_t v47 = v31 + v35;
  unint64_t v48 = v38 + v37 + ((v31 + v44 + (v46 & ~(unint64_t)v34)) & ~v44);
  uint64_t v49 = v39 + 16;
  if (v30 < a2)
  {
    unint64_t v50 = ((v40
          + *(void *)(*(void *)(v66 - 8) + 64)
          + ((v49 + ((v48 + ((v42 + v45 + ((v41 + 16) & ~v41)) & ~v45)) & 0xFFFFFFFFFFFFFFF8)) & ~v39)) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v51 = v50 & 0xFFFFFFF8;
    if ((v50 & 0xFFFFFFF8) != 0) {
      unsigned int v52 = 2;
    }
    else {
      unsigned int v52 = a2 - v30 + 1;
    }
    if (v52 >= 0x10000) {
      LODWORD(v53) = 4;
    }
    else {
      LODWORD(v53) = 2;
    }
    if (v52 < 0x100) {
      LODWORD(v53) = 1;
    }
    if (v52 >= 2) {
      uint64_t v53 = v53;
    }
    else {
      uint64_t v53 = 0;
    }
    switch(v53)
    {
      case 1:
        int v54 = *(unsigned __int8 *)(a1 + v50);
        if (!v54) {
          break;
        }
        goto LABEL_59;
      case 2:
        int v54 = *(unsigned __int16 *)(a1 + v50);
        if (v54) {
          goto LABEL_59;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ECC87C8);
      case 4:
        int v54 = *(_DWORD *)(a1 + v50);
        if (!v54) {
          break;
        }
LABEL_59:
        int v55 = v54 - 1;
        if (v51)
        {
          int v55 = 0;
          LODWORD(v51) = *(_DWORD *)a1;
        }
        return v30 + (v51 | v55) + 1;
      default:
        break;
    }
  }
  if ((v29 & 0x80000000) != 0)
  {
    uint64_t v58 = (((a1 + v41 + 16) & ~v41) + v45 + v42) & ~v45;
    if (v25 == v30)
    {
      if (v24 >= 2)
      {
        if (v16 == v24)
        {
          unsigned int v59 = (*(uint64_t (**)(uint64_t))(v65 + 48))(v58);
        }
        else
        {
          unint64_t v60 = (v46 + v58) & ~(unint64_t)v34;
          if (v19 == v24) {
            unsigned int v61 = (*(uint64_t (**)(unint64_t, void, uint64_t))(*(void *)(v64 - 8) + 48))(v60, v62, v64);
          }
          else {
            unsigned int v61 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))((v47 + v60) & ~v44, v22, v63);
          }
          if (v61 >= 2) {
            unsigned int v59 = v61 - 1;
          }
          else {
            unsigned int v59 = 0;
          }
        }
        goto LABEL_80;
      }
    }
    else if (v27 >= 2)
    {
      unsigned int v59 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))((v49 + ((v48 + v58) & 0xFFFFFFFFFFFFFFF8)) & ~v39, v27, v66);
LABEL_80:
      if (v59 >= 2) {
        return v59 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v57 = *(void *)(a1 + 8);
  if (v57 >= 0xFFFFFFFF) {
    LODWORD(v57) = -1;
  }
  return (v57 + 1);
}

void sub_24ECC87DC(void *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[8] - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = 16;
  if (v6 > 0x10) {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  int v8 = *(_DWORD *)(v5 + 80);
  unint64_t v9 = ((v8 + 8) & ~(unint64_t)v8) + v6;
  if (v9 <= 0x18) {
    unint64_t v9 = 24;
  }
  unint64_t v10 = v9 + 1;
  if (v10 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  if (v10 + 1 > v7) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7;
  }
  uint64_t v12 = *(void *)(a4[10] - 8);
  if (*(void *)(v12 + 64) <= v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = *(void *)(v12 + 64);
  }
  uint64_t v14 = sub_24EE55880();
  int v15 = 0;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v71 = a4[9];
  uint64_t v72 = v14;
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(void *)(v71 - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  if (v19) {
    unsigned int v20 = v19 - 1;
  }
  else {
    unsigned int v20 = 0;
  }
  uint64_t v69 = a4[2];
  uint64_t v21 = *(void *)(v69 - 8);
  if (v20 <= v17) {
    unsigned int v22 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v22 = v20;
  }
  uint64_t v23 = *(void *)(v69 - 8);
  uint64_t v24 = *(unsigned int *)(v21 + 84);
  if (v24) {
    unsigned int v25 = v24 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v25 <= v22) {
    unsigned int v26 = v22;
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26) {
    unsigned int v27 = v26 - 1;
  }
  else {
    unsigned int v27 = 0;
  }
  uint64_t v73 = a4[7];
  uint64_t v28 = *(void *)(v73 - 8);
  uint64_t v29 = *(unsigned int *)(v28 + 84);
  size_t v30 = *(void *)(v21 + 64);
  int v31 = *(_DWORD *)(v12 + 80);
  uint64_t v70 = *(void *)(v71 - 8);
  int v32 = *(_DWORD *)(v18 + 80);
  uint64_t v33 = *(unsigned __int8 *)(v28 + 80);
  unsigned int v34 = v29 - 1;
  if (!v29) {
    unsigned int v34 = 0;
  }
  if (v27 <= v34) {
    unsigned int v35 = v34;
  }
  else {
    unsigned int v35 = v27;
  }
  if (v35 <= 0x7FFFFFFF) {
    unsigned int v36 = 0x7FFFFFFF;
  }
  else {
    unsigned int v36 = v35;
  }
  if (v19) {
    uint64_t v37 = *(void *)(*(void *)(v71 - 8) + 64);
  }
  else {
    uint64_t v37 = *(void *)(*(void *)(v71 - 8) + 64) + 1;
  }
  if (!v24) {
    ++v30;
  }
  char v38 = v31 | v8;
  uint64_t v39 = *(_DWORD *)(v18 + 80);
  uint64_t v40 = *(_DWORD *)(v23 + 80);
  unsigned __int8 v41 = v32 | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v23 + 80);
  uint64_t v42 = *(void *)(*(void *)(v14 - 8) + 64) + v32;
  uint64_t v43 = v37 + v40;
  unint64_t v44 = (v37 + v40 + (v42 & ~(unint64_t)v32)) & ~v40;
  size_t v45 = v44 + v30;
  if (v26) {
    unint64_t v46 = v44 + v30;
  }
  else {
    unint64_t v46 = v45 + 1;
  }
  uint64_t v47 = 7;
  if (!v29) {
    uint64_t v47 = 8;
  }
  uint64_t v48 = v47 + *(void *)(*(void *)(v73 - 8) + 64);
  uint64_t v49 = v38 & 0xF8 | 7u;
  unint64_t v50 = v13 + 1;
  uint64_t v51 = v41;
  uint64_t v52 = v33 + 16;
  size_t v53 = ((v48 + ((v33 + 16 + ((v46 + ((v50 + v51 + ((v49 + 16) & ~v49)) & ~v51)) & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v36 < a3)
  {
    if (v53) {
      unsigned int v54 = 2;
    }
    else {
      unsigned int v54 = a3 - v36 + 1;
    }
    if (v54 >= 0x10000) {
      int v55 = 4;
    }
    else {
      int v55 = 2;
    }
    if (v54 < 0x100) {
      int v55 = 1;
    }
    if (v54 >= 2) {
      int v15 = v55;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v36)
  {
    if (v53) {
      int v56 = 1;
    }
    else {
      int v56 = a2 - v36;
    }
    if (v53)
    {
      bzero(a1, v53);
      *(_DWORD *)a1 = ~v36 + a2;
    }
    switch(v15)
    {
      case 1:
        *((unsigned char *)a1 + v53) = v56;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v53) = v56;
        return;
      case 3:
        goto LABEL_119;
      case 4:
        *(_DWORD *)((char *)a1 + v53) = v56;
        return;
      default:
        return;
    }
  }
  uint64_t v68 = ~v40;
  uint64_t v57 = ~v33;
  switch(v15)
  {
    case 1:
      *((unsigned char *)a1 + v53) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_73;
    case 2:
      *(_WORD *)((char *)a1 + v53) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_73;
    case 3:
LABEL_119:
      __break(1u);
      JUMPOUT(0x24ECC8EE0);
    case 4:
      *(_DWORD *)((char *)a1 + v53) = 0;
      goto LABEL_72;
    default:
LABEL_72:
      if (!a2) {
        return;
      }
LABEL_73:
      if ((v35 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *a1 = a2 ^ 0x80000000;
          a1[1] = 0;
        }
        else
        {
          a1[1] = a2 - 1;
        }
        return;
      }
      uint64_t v58 = (unsigned char *)(((((unint64_t)a1 + v49 + 16) & ~v49) + v51 + v50) & ~v51);
      if (v27 != v36)
      {
        if (v29 < 2) {
          return;
        }
        unint64_t v62 = (v52 + ((unint64_t)&v58[v46] & 0xFFFFFFFFFFFFFFF8)) & v57;
        uint64_t v63 = a2 + 1;
        uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
        uint64_t v19 = v29;
        uint64_t v65 = v73;
        goto LABEL_118;
      }
      if (v26 < 2) {
        return;
      }
      if (a2 + 1 > v26)
      {
        if (v45 <= 3) {
          int v59 = ~(-1 << (8 * v45));
        }
        else {
          int v59 = -1;
        }
        if (v45)
        {
          int v60 = v59 & (a2 - v26);
          if (v45 <= 3) {
            int v61 = v45;
          }
          else {
            int v61 = 4;
          }
          bzero(v58, v45);
          switch(v61)
          {
            case 2:
              goto LABEL_113;
            case 3:
              goto LABEL_114;
            case 4:
              goto LABEL_115;
            default:
              goto LABEL_89;
          }
        }
        return;
      }
      if (a2 == -1) {
        return;
      }
      if (v17 == v26)
      {
        uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        unint64_t v62 = (unint64_t)v58;
        uint64_t v63 = a2 + 1;
        uint64_t v19 = v17;
        uint64_t v65 = v72;
        goto LABEL_101;
      }
      unint64_t v62 = (unint64_t)&v58[v42] & ~v39;
      if (v20 == v26)
      {
        uint64_t v63 = a2 + 2;
        uint64_t v65 = v71;
        uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
LABEL_101:
LABEL_118:
        v64(v62, v63, v19, v65);
        return;
      }
      uint64_t v58 = (unsigned char *)((v43 + v62) & v68);
      if (a2 + 1 <= v25)
      {
        uint64_t v63 = a2 + 2;
        uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
        unint64_t v62 = (v43 + v62) & v68;
        uint64_t v19 = v24;
        uint64_t v65 = v69;
        goto LABEL_118;
      }
      if (v30 <= 3) {
        int v66 = ~(-1 << (8 * v30));
      }
      else {
        int v66 = -1;
      }
      if (v30)
      {
        int v60 = v66 & (a2 - v25);
        if (v30 <= 3) {
          int v67 = v30;
        }
        else {
          int v67 = 4;
        }
        bzero((void *)((v43 + v62) & v68), v30);
        switch(v67)
        {
          case 2:
LABEL_113:
            *(_WORD *)uint64_t v58 = v60;
            break;
          case 3:
LABEL_114:
            *(_WORD *)uint64_t v58 = v60;
            v58[2] = BYTE2(v60);
            break;
          case 4:
LABEL_115:
            *(_DWORD *)uint64_t v58 = v60;
            break;
          default:
LABEL_89:
            *uint64_t v58 = v60;
            break;
        }
      }
      return;
  }
}

uint64_t sub_24ECC8F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 160);
}

uint64_t getEnumTagSinglePayload for TallCardViewLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24ECC8FC0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECC908CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_24ECC90B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECC90D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECC90EC()
{
  return swift_getWitnessTable();
}

uint64_t CanvasItemDescriptor.title.getter(uint64_t a1)
{
  uint64_t v3 = sub_24EE55880();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)&v66 - v6;
  int v8 = *(ValueMetadata **)(a1 + 16);
  BOOL v7 = *(ValueMetadata **)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v74 = v8;
  uint64_t v75 = (uint64_t)v7;
  long long v68 = *(_OWORD *)(a1 + 56);
  long long v76 = v68;
  uint64_t v77 = v9;
  uint64_t v78 = v10;
  uint64_t v11 = type metadata accessor for CanvasItemContent();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v73 = (uint64_t)&v66 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1 + *(int *)(a1 + 132), v11);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v33 = type metadata accessor for FullWidthItemDescriptor();
      uint64_t v34 = v33;
      goto LABEL_19;
    case 2:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      uint64_t v74 = &type metadata for FullWidthStageViewLayout;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = &type metadata for FullWidthStageViewStyle;
      *((void *)&v76 + 1) = v15;
      uint64_t v77 = v15;
      uint64_t v78 = v15;
      uint64_t v79 = sub_24EE57430();
      uint64_t v80 = v79;
      uint64_t v81 = sub_24EE57430();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      *(void *)&long long v68 = &v14[TupleTypeMetadata[12]];
      uint64_t v36 = (uint64_t)&v14[TupleTypeMetadata[20]];
      int v67 = &v14[TupleTypeMetadata[24]];
      uint64_t v37 = (uint64_t)&v14[TupleTypeMetadata[28]];
      char v38 = &v14[TupleTypeMetadata[32]];
      uint64_t v39 = &v14[TupleTypeMetadata[36]];
      uint64_t v40 = &v14[TupleTypeMetadata[40]];
      uint64_t v41 = v73;
      sub_24ECB04CC(v36, v73);
      uint64_t v42 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v40, v42);
      uint64_t v43 = sub_24EE57430();
      unint64_t v44 = *(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8);
      v44(v39, v43);
      v44(v38, v43);
      uint64_t v31 = v41;
      sub_24EC90738(v37);
      sub_24EC90738((uint64_t)v67);
      (*((void (**)(void, ValueMetadata *))v7[-1].Description + 1))(v68, v7);
      goto LABEL_23;
    case 3:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 48, "layout title description actionButton ");
      uint64_t v74 = &type metadata for InfoActionCardViewLayout;
      uint64_t v75 = v15;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = sub_24EE57430();
      size_t v45 = (int *)swift_getTupleTypeMetadata();
      uint64_t v46 = (uint64_t)&v14[v45[16]];
      uint64_t v47 = &v14[v45[20]];
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[v45[12]], v73);
      uint64_t v48 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      sub_24EC90738(v46);
      goto LABEL_23;
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 48, "artwork footnote subtitle title ");
      uint64_t v74 = v7;
      uint64_t v75 = v15;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = v15;
      uint64_t v49 = (int *)swift_getTupleTypeMetadata();
      uint64_t v22 = (uint64_t)&v14[v49[12]];
      uint64_t v50 = (uint64_t)&v14[v49[16]];
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[v49[20]], v73);
      sub_24EC90738(v50);
      goto LABEL_22;
    case 5:
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 48, "artwork caption displayStyle layout title ");
      uint64_t v74 = v7;
      uint64_t v75 = v15;
      *(void *)&long long v76 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v76 + 1) = &type metadata for DynamicBrickViewLayout;
      uint64_t v77 = v15;
      uint64_t v21 = swift_getTupleTypeMetadata();
      uint64_t v22 = (uint64_t)&v14[*(int *)(v21 + 48)];
      uint64_t v23 = *(int *)(v21 + 96);
      goto LABEL_21;
    case 6:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 48, "layout artwork title subtitle ");
      uint64_t v74 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = v15;
      uint64_t v51 = (int *)swift_getTupleTypeMetadata();
      unsigned int v25 = &v14[v51[12]];
      uint64_t v27 = (uint64_t)&v14[v51[20]];
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[v51[16]], v73);
      goto LABEL_16;
    case 8:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      qmemcpy(&v66 - 6, "layout artwork title subtitle caption ", 38);
      uint64_t v52 = &type metadata for StandardCardViewLayout;
      goto LABEL_14;
    case 9:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
      uint64_t v74 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = v15;
      uint64_t v77 = v15;
      uint64_t v78 = v15;
      uint64_t v79 = sub_24EE57430();
      size_t v53 = (int *)swift_getTupleTypeMetadata();
      unsigned int v25 = &v14[v53[12]];
      uint64_t v54 = (uint64_t)&v14[v53[16]];
      uint64_t v27 = (uint64_t)&v14[v53[20]];
      uint64_t v28 = (uint64_t)&v14[v53[24]];
      uint64_t v55 = (uint64_t)&v14[v53[28]];
      int v56 = &v14[v53[32]];
      uint64_t v31 = v73;
      sub_24ECB04CC(v54, v73);
      uint64_t v57 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
      sub_24EC90738(v55);
      goto LABEL_15;
    case 10:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      qmemcpy(&v66 - 6, "layout artwork title subtitle caption ", 38);
      uint64_t v52 = &type metadata for StandardVerticalStackViewLayout;
      goto LABEL_14;
    case 11:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 48, "layout artwork title overlay ");
      uint64_t v74 = &type metadata for TallCardViewLayout;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = &type metadata for Overlay;
      uint64_t v58 = swift_getTupleTypeMetadata();
      unsigned int v25 = &v14[*(int *)(v58 + 48)];
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[*(int *)(v58 + 64)], v73);
      goto LABEL_17;
    case 12:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      qmemcpy(&v66 - 6, "layout artwork title subtitle caption ", 38);
      uint64_t v52 = &type metadata for VerticalStackCardLayout;
LABEL_14:
      *((unsigned char *)&v66 - 10) = 0;
      uint64_t v74 = v52;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = v15;
      *((void *)&v76 + 1) = v15;
      uint64_t v77 = v15;
      int v59 = (int *)swift_getTupleTypeMetadata();
      unsigned int v25 = &v14[v59[12]];
      uint64_t v27 = (uint64_t)&v14[v59[20]];
      uint64_t v28 = (uint64_t)&v14[v59[24]];
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[v59[16]], v73);
      goto LABEL_15;
    case 13:
      uint64_t v33 = v68;
      uint64_t v34 = v68;
LABEL_19:
      (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v14, v33);
      return 0;
    case 14:
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v22 = (uint64_t)&v14[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v23 = *(int *)(TupleTypeMetadata3 + 64);
LABEL_21:
      uint64_t v31 = v73;
      sub_24ECB04CC((uint64_t)&v14[v23], v73);
LABEL_22:
      sub_24EC90738(v22);
      (*((void (**)(char *, ValueMetadata *))v7[-1].Description + 1))(v14, v7);
      goto LABEL_23;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v66 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      uint64_t v74 = &type metadata for ActionCardViewLayout;
      uint64_t v75 = (uint64_t)v7;
      *(void *)&long long v76 = &type metadata for ActionCardViewStyle;
      *((void *)&v76 + 1) = v15;
      uint64_t v77 = v15;
      uint64_t v78 = v15;
      uint64_t v79 = (uint64_t)v8;
      uint64_t v80 = sub_24EE57430();
      uint64_t v24 = (int *)swift_getTupleTypeMetadata();
      unsigned int v25 = &v14[v24[12]];
      uint64_t v26 = (uint64_t)&v14[v24[20]];
      uint64_t v27 = (uint64_t)&v14[v24[24]];
      uint64_t v28 = (uint64_t)&v14[v24[28]];
      uint64_t v29 = &v14[v24[32]];
      size_t v30 = &v14[v24[36]];
      uint64_t v31 = v73;
      sub_24ECB04CC(v26, v73);
      uint64_t v32 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
      (*((void (**)(char *, ValueMetadata *))v8[-1].Description + 1))(v29, v8);
LABEL_15:
      sub_24EC90738(v28);
LABEL_16:
      sub_24EC90738(v27);
LABEL_17:
      (*((void (**)(char *, ValueMetadata *))v7[-1].Description + 1))(v25, v7);
LABEL_23:
      sub_24ECB04CC(v31, (uint64_t)v18);
      uint64_t v62 = v71;
      uint64_t v61 = v72;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v18, 1, v72) == 1)
      {
        sub_24EC90738((uint64_t)v18);
        return 0;
      }
      else
      {
        uint64_t v64 = v70;
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v70, v18, v61);
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v69, v64, v61);
        uint64_t v63 = sub_24EE57090();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
      }
      return v63;
  }
}

uint64_t View.stackRatio(_:)()
{
  return sub_24EE56760();
}

unint64_t sub_24ECCA20C()
{
  unint64_t result = qword_26B1DD258[0];
  if (!qword_26B1DD258[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DD258);
  }
  return result;
}

void sub_24ECCA260(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t RatioStack.init(_:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

uint64_t sub_24ECCA27C(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v97 = (char *)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE078);
  MEMORY[0x270FA5388](v13 - 8);
  unsigned int v110 = (char *)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_24EE55C70();
  uint64_t v102 = *(void *)(v115 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v115);
  int v113 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unsigned int v108 = (char *)v94 - v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v107 = (char *)v94 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_24EE55D10();
  uint64_t v23 = *(void *)(v114 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v114);
  unint64_t v109 = (char *)v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v94 - v26;
  int v95 = *v5;
  uint64_t v99 = a3;
  uint64_t v96 = a1;
  if (v95) {
    double v28 = *(double *)&a3;
  }
  else {
    double v28 = *(double *)&a1;
  }
  int v100 = a4;
  int v98 = a2;
  if (v95) {
    char v29 = a4;
  }
  else {
    char v29 = a2;
  }
  if (v29) {
    double v30 = 10.0;
  }
  else {
    double v30 = v28;
  }
  uint64_t v31 = sub_24ECCAD6C(a5);
  v94[1] = 0;
  uint64_t v32 = v31[2];
  double v33 = 0.0;
  double v34 = 0.0;
  if (v32)
  {
    if (v32 == 1)
    {
      uint64_t v35 = 0;
LABEL_16:
      uint64_t v38 = v32 - v35;
      uint64_t v39 = (double *)&v31[v35 + 4];
      do
      {
        double v40 = *v39++;
        double v34 = v34 + v40;
        --v38;
      }
      while (v38);
      goto LABEL_18;
    }
    uint64_t v35 = v32 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v36 = (double *)(v31 + 5);
    uint64_t v37 = v32 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v34 = v34 + *(v36 - 1) + *v36;
      v36 += 2;
      v37 -= 2;
    }
    while (v37);
    if (v32 != v35) {
      goto LABEL_16;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (1.0 - v34 >= 0.0) {
    double v33 = 1.0 - v34;
  }
  unint64_t v111 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v112 = v23 + 16;
  v111(v27, a5, v114);
  uint64_t v118 = MEMORY[0x263F8EE78];
  sub_24ECCCB80(&qword_26B1DE0A8);
  sub_24EE570E0();
  uint64_t v41 = &v22[*(int *)(v20 + 36)];
  sub_24ECCCB80(&qword_26B1DE0B0);
  uint64_t v42 = *(void *)v41;
  sub_24EE57380();
  if (v42 == *(void *)&v116)
  {
    uint64_t v43 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v110, 1, 1, v115);
  }
  else
  {
    uint64_t v106 = (void (**)(uint64_t))(v102 + 16);
    uint64_t v105 = (void (**)(char *, uint64_t))(v23 + 8);
    int v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    unint64_t v44 = (void (**)(void))(v102 + 32);
    char v101 = (void (**)(char *, uint64_t))(v102 + 8);
    int v104 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v94[0] = (v102 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v45 = v114;
    uint64_t v43 = (uint64_t)v110;
    while (1)
    {
      uint64_t v48 = (void (*)(double *, void))sub_24EE573D0();
      uint64_t v49 = v115;
      (*v106)(v43);
      v48(&v116, 0);
      uint64_t v50 = v109;
      v111(v109, (uint64_t)v22, v45);
      sub_24EE57390();
      uint64_t v51 = v45;
      uint64_t v52 = v49;
      (*v105)(v50, v51);
      size_t v53 = *v104;
      (*v104)((char *)v43, 0, 1, v49);
      if ((*v103)(v43, 1, v49) == 1) {
        break;
      }
      uint64_t v54 = v22;
      uint64_t v55 = *v44;
      int v56 = v107;
      (*v44)();
      sub_24ECCA20C();
      sub_24EE55C80();
      if (v117 == 1)
      {
        ((void (*)(char *, char *, uint64_t))v55)(v108, v56, v52);
        uint64_t v57 = v118;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24EE54E4C(0, *(void *)(v57 + 16) + 1, 1);
          uint64_t v57 = v118;
        }
        unint64_t v59 = *(void *)(v57 + 16);
        unint64_t v58 = *(void *)(v57 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_24EE54E4C(v58 > 1, v59 + 1, 1);
          uint64_t v57 = v118;
        }
        *(void *)(v57 + 16) = v59 + 1;
        ((void (*)(unint64_t, char *, uint64_t))v55)(v57+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(void *)(v102 + 72) * v59, v108, v115);
        uint64_t v118 = v57;
      }
      else
      {
        (*v101)(v56, v52);
      }
      uint64_t v46 = *(void *)v41;
      uint64_t v22 = v54;
      uint64_t v45 = v114;
      sub_24EE57380();
      BOOL v47 = v46 == *(void *)&v116;
      uint64_t v43 = (uint64_t)v110;
      if (v47)
      {
        v53(v110, 1, 1, v115);
        break;
      }
    }
  }
  sub_24EC88758((uint64_t)v22, &qword_26B1DE5C0);
  sub_24EC88758(v43, &qword_26B1DE078);
  uint64_t v60 = *(void *)(v118 + 16);
  swift_release();
  if (v60) {
    double v61 = v33 / (double)v60;
  }
  else {
    double v61 = 0.0;
  }
  uint64_t v62 = v114;
  uint64_t v63 = sub_24EE57370();
  double v64 = MEMORY[0x263F8EE78];
  if (!v63)
  {
    uint64_t v74 = MEMORY[0x263F8EE78];
    goto LABEL_49;
  }
  uint64_t v65 = v63;
  uint64_t v118 = MEMORY[0x263F8EE78];
  sub_24EE54E0C(0, v63 & ~(v63 >> 63), 0);
  uint64_t result = sub_24EE57360();
  if ((v65 & 0x8000000000000000) == 0)
  {
    int v67 = (void (**)(char *))(v102 + 16);
    long long v68 = (void (**)(char *, uint64_t))(v102 + 8);
    uint64_t v69 = a5;
    do
    {
      uint64_t v70 = (void (*)(double *, void))sub_24EE573D0();
      uint64_t v71 = v113;
      uint64_t v72 = v115;
      (*v67)(v113);
      v70(&v116, 0);
      sub_24ECCA20C();
      sub_24EE55C80();
      if (v117) {
        double v73 = v61;
      }
      else {
        double v73 = v116;
      }
      (*v68)(v71, v72);
      uint64_t v74 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24EE54E0C(0, *(void *)(v74 + 16) + 1, 1);
        uint64_t v74 = v118;
      }
      unint64_t v76 = *(void *)(v74 + 16);
      unint64_t v75 = *(void *)(v74 + 24);
      if (v76 >= v75 >> 1)
      {
        sub_24EE54E0C(v75 > 1, v76 + 1, 1);
        uint64_t v74 = v118;
      }
      *(void *)(v74 + 16) = v76 + 1;
      *(double *)(v74 + 8 * v76 + 32) = v30 * v73;
      a5 = v69;
      uint64_t v62 = v114;
      sub_24EE57390();
      --v65;
    }
    while (v65);
    double v64 = MEMORY[0x263F8EE78];
LABEL_49:
    uint64_t v77 = (uint64_t)v97;
    uint64_t v78 = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v97, a5, v62);
    MEMORY[0x270FA5388](v78);
    int v79 = v95;
    LOBYTE(v94[-6]) = v95;
    v94[-5] = v96;
    LOBYTE(v94[-4]) = v98 & 1;
    v94[-3] = v99;
    LOBYTE(v94[-2]) = v100 & 1;
    v94[-1] = v74;
    uint64_t v80 = sub_24ECCBBAC(v77, (double (*)(void, char *))sub_24ECCCBC4, (uint64_t)&v94[-8]);
    sub_24EC88758(v77, &qword_26B1DE5D0);
    int64_t v81 = *(void *)(v80 + 16);
    if (v81)
    {
      double v116 = v64;
      sub_24EE54E0C(0, v81, 0);
      double v82 = v116;
      unint64_t v83 = *(void *)(*(void *)&v116 + 16);
      size_t v84 = (uint64_t *)(v80 + 40);
      do
      {
        uint64_t v85 = v84 - 1;
        if (!v79) {
          uint64_t v85 = v84;
        }
        uint64_t v86 = *v85;
        double v116 = v82;
        unint64_t v87 = *(void *)(*(void *)&v82 + 24);
        if (v83 >= v87 >> 1)
        {
          sub_24EE54E0C(v87 > 1, v83 + 1, 1);
          double v82 = v116;
        }
        *(void *)(*(void *)&v82 + 16) = v83 + 1;
        *(void *)(*(void *)&v82 + 8 * v83 + 32) = v86;
        v84 += 2;
        ++v83;
        --v81;
      }
      while (v81);
      swift_bridgeObjectRelease();
      uint64_t v88 = *(void *)(*(void *)&v82 + 16);
      if (!v88) {
        goto LABEL_64;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      double v82 = MEMORY[0x263F8EE78];
      uint64_t v88 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v88)
      {
LABEL_64:
        swift_bridgeObjectRelease();
        return v74;
      }
    }
    double v89 = *(double *)(*(void *)&v82 + 32);
    uint64_t v90 = v88 - 1;
    if (v90)
    {
      uint64_t v91 = (double *)(*(void *)&v82 + 40);
      do
      {
        double v92 = *v91++;
        double v93 = v92;
        if (v89 < v92) {
          double v89 = v93;
        }
        --v90;
      }
      while (v90);
    }
    goto LABEL_64;
  }
  __break(1u);
  return result;
}

void *sub_24ECCAD6C(uint64_t a1)
{
  uint64_t v2 = sub_24EE55C70();
  uint64_t v42 = *(void **)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE078);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EE55D10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v39 = v8 + 16;
  v38(v10, a1, v7);
  sub_24ECCCB80(&qword_26B1DE0A8);
  double v40 = v10;
  sub_24EE570E0();
  uint64_t v15 = &v14[*(int *)(v12 + 44)];
  sub_24ECCCB80(&qword_26B1DE0B0);
  uint64_t v16 = *(void *)v15;
  uint64_t v41 = v14;
  sub_24EE57380();
  if (v16 == v43)
  {
    uint64_t v17 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v42[7];
    uint64_t v42 = (void *)MEMORY[0x263F8EE78];
    v17(v6, 1, 1, v2);
LABEL_14:
    uint64_t v18 = (uint64_t)v41;
  }
  else
  {
    uint64_t v18 = (uint64_t)v41;
    double v34 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v35 = (void (**)(char *))(v42 + 2);
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 7);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v42 + 4);
    double v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 6);
    uint64_t v31 = (void (**)(char *, uint64_t))(v42 + 1);
    uint64_t v42 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v21 = (void (*)(uint64_t *, void))sub_24EE573D0();
      (*v35)(v6);
      v21(&v43, 0);
      uint64_t v22 = v40;
      v38(v40, v18, v7);
      sub_24EE57390();
      (*v34)(v22, v7);
      uint64_t v23 = *v36;
      (*v36)(v6, 0, 1, v2);
      if ((*v33)(v6, 1, v2) == 1) {
        break;
      }
      uint64_t v24 = v37;
      (*v32)(v37, v6, v2);
      sub_24ECCA20C();
      sub_24EE55C80();
      uint64_t v25 = v43;
      char v26 = v44;
      (*v31)(v24, v2);
      if ((v26 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v42 = sub_24ECCB9B0(0, v42[2] + 1, 1, v42);
        }
        unint64_t v28 = v42[2];
        unint64_t v27 = v42[3];
        if (v28 >= v27 >> 1) {
          uint64_t v42 = sub_24ECCB9B0((void *)(v27 > 1), v28 + 1, 1, v42);
        }
        uint64_t v19 = v42;
        v42[2] = v28 + 1;
        v19[v28 + 4] = v25;
      }
      uint64_t v20 = *(void *)v15;
      uint64_t v18 = (uint64_t)v41;
      sub_24EE57380();
      if (v20 == v43)
      {
        v23(v6, 1, 1, v2);
        goto LABEL_14;
      }
    }
  }
  sub_24EC88758(v18, &qword_26B1DE5C0);
  return v42;
}

uint64_t sub_24ECCB284(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = sub_24EE564C0();
  uint64_t result = sub_24EE564C0();
  if (v10 != result)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a8 + 16) > a1)
    {
      goto LABEL_4;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_4:
  int v12 = sub_24EE564C0();
  uint64_t result = sub_24EE564C0();
  if (v12 != result) {
    return sub_24EE55C50();
  }
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  if (*(void *)(a8 + 16) > a1) {
    return sub_24EE55C50();
  }
LABEL_11:
  __break(1u);
  return result;
}

double RatioStack.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_24ECCA27C(a1, a2 & 1, a3, a4 & 1, a5);
  double v6 = v5;
  double v8 = v7;
  int v9 = sub_24EE564C0();
  if (v9 == sub_24EE564C0()) {
    double v10 = v6;
  }
  else {
    double v10 = v8;
  }
  sub_24EE564C0();
  sub_24EE564C0();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t RatioStack.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = *v9;
  LOBYTE(v40) = *v9;
  char v42 = a2 & 1;
  char v41 = a4 & 1;
  uint64_t v23 = sub_24ECCA27C(a1, a2 & 1, a3, a4 & 1, a5);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = v23;
  int v29 = sub_24EE564C0();
  unsigned __int8 v30 = sub_24EE564C0();
  double v31 = a6;
  double v32 = a7;
  double v33 = a8;
  double v34 = a9;
  if (v29 == v30) {
    double MinY = CGRectGetMinY(*(CGRect *)&v31);
  }
  else {
    double MinY = CGRectGetMinX(*(CGRect *)&v31);
  }
  double v40 = MinY;
  uint64_t v36 = sub_24EE55D10();
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v21, a5, v36);
  MEMORY[0x270FA5388](v37);
  *(&v39 - 10) = v25;
  *(&v39 - 9) = v27;
  *(&v39 - 8) = v28;
  *((unsigned char *)&v39 - 56) = v22;
  *((double *)&v39 - 6) = a6;
  *((double *)&v39 - 5) = a7;
  *((double *)&v39 - 4) = a8;
  *((double *)&v39 - 3) = a9;
  *(&v39 - 2) = (uint64_t)&v40;
  sub_24ECCC2A8((uint64_t)v21, (void (*)(uint64_t, char *))sub_24ECCB7E4, (uint64_t)(&v39 - 12));
  sub_24EC88758((uint64_t)v21, &qword_26B1DE5D0);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24ECCB630(unint64_t result, double a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, uint64_t a8, uint64_t a9, uint64_t a10, double *a11)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v11 = result;
  if (*(void *)(a9 + 16) <= result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v17 = a9 + 32;
  int v18 = sub_24EE564C0();
  if (v18 == sub_24EE564C0())
  {
    v21.origin.x = a4;
    v21.origin.y = a5;
    v21.size.width = a6;
    v21.size.height = a7;
    CGRectGetMidX(v21);
  }
  int v19 = sub_24EE564C0();
  if (v19 != sub_24EE564C0())
  {
    v22.origin.x = a4;
    v22.origin.y = a5;
    v22.size.width = a6;
    v22.size.height = a7;
    CGRectGetMidY(v22);
  }
  int v20 = sub_24EE564C0();
  if (v20 == sub_24EE564C0()) {
    sub_24EE56E50();
  }
  else {
    sub_24EE56E80();
  }
  sub_24EE564C0();
  sub_24EE564C0();
  sub_24EE564C0();
  sub_24EE564C0();
  uint64_t result = sub_24EE55C60();
  *a11 = *(double *)(v17 + 8 * v11) + *a11;
  return result;
}

unint64_t sub_24ECCB7E4(unint64_t a1, uint64_t a2)
{
  return sub_24ECCB630(a1, *(double *)(v2 + 16), *(double *)(v2 + 24), *(CGFloat *)(v2 + 48), *(CGFloat *)(v2 + 56), *(CGFloat *)(v2 + 64), *(CGFloat *)(v2 + 72), a2, *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(double **)(v2 + 80));
}

double sub_24ECCB810(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return RatioStack.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_24ECCB828(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  return RatioStack.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

uint64_t sub_24ECCB840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24ECCB8B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B668]);
}

uint64_t sub_24ECCB878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24ECCB8B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B670]);
}

uint64_t sub_24ECCB8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_24ECCB8F4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_24EE55AB0();
  return sub_24ECCB964;
}

void sub_24ECCB964(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void *sub_24ECCB9B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE720);
      double v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      double v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24ECCBAC0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24ECCBAC0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24EE57680();
  __break(1u);
  return result;
}

uint64_t sub_24ECCBBAC(uint64_t a1, double (*a2)(void, char *), uint64_t a3)
{
  uint64_t v71 = (double (*)(void, char *))a2;
  uint64_t v72 = a3;
  unint64_t v76 = (unsigned char *)a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE078);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v78 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_24EE55C70();
  unint64_t v58 = *(char **)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v74 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE558);
  uint64_t v6 = MEMORY[0x270FA5388](v73);
  uint64_t v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int64_t v11 = &v57[-v10];
  MEMORY[0x270FA5388](v9);
  uint64_t v70 = &v57[-v12];
  uint64_t v13 = sub_24EE55D10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D0);
  MEMORY[0x270FA5388](v17 - 8);
  int v19 = &v57[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C8);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = &v57[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = MEMORY[0x263F8EE78];
  sub_24EE54E2C(0, 0, 0);
  sub_24ECCCB18((uint64_t)v76, (uint64_t)v19);
  uint64_t v69 = (void *)v14;
  uint64_t v24 = v19;
  uint64_t v25 = v16;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v24, v13);
  sub_24ECCCB80(&qword_26B1DE0A8);
  sub_24EE570E0();
  uint64_t v26 = *(int *)(v21 + 44);
  *(void *)&v23[v26] = 0;
  uint64_t v27 = (uint64_t *)&v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C0) + 36)];
  uint64_t v28 = sub_24ECCCB80(&qword_26B1DE0B0);
  unint64_t v75 = v27;
  unint64_t v76 = v23;
  uint64_t v29 = *v27;
  sub_24EE57380();
  if (v29 == v79[0])
  {
    uint64_t v30 = (uint64_t)v78;
    uint64_t v31 = (uint64_t)v76;
    (*((void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v58 + 7))(v78, 1, 1, v77);
  }
  else
  {
    uint64_t v60 = v11;
    uint64_t v64 = v26;
    int v67 = (void (**)(unsigned char *, uint64_t, uint64_t))(v69 + 2);
    long long v68 = (void (**)(unsigned char *))(v58 + 16);
    double v32 = v69 + 1;
    uint64_t v69 = v58 + 56;
    uint64_t v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
    uint64_t v66 = (void (**)(unsigned char *, uint64_t))v32;
    double v33 = (void (**)(unsigned char *, uint64_t, uint64_t))(v58 + 32);
    uint64_t v31 = (uint64_t)v76;
    uint64_t v62 = v13;
    double v61 = v25;
    uint64_t v59 = v28;
    uint64_t v63 = v8;
    uint64_t v34 = v77;
    while (1)
    {
      uint64_t v35 = (void (*)(uint64_t *, void))sub_24EE573D0();
      uint64_t v30 = (uint64_t)v78;
      (*v68)(v78);
      v35(v79, 0);
      (*v67)(v25, v31, v13);
      sub_24EE57390();
      (*v66)(v25, v13);
      uint64_t v36 = (char *)*v69;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v69)(v30, 0, 1, v34);
      if ((*v65)(v30, 1, v34) == 1) {
        break;
      }
      unint64_t v58 = v36;
      uint64_t v37 = (uint64_t (*)(unsigned char *, unsigned char *, uint64_t))*v33;
      uint64_t v38 = v73;
      uint64_t v39 = v74;
      (*v33)(v74, v30, v34);
      double v40 = &v63[*(int *)(v38 + 48)];
      uint64_t v41 = v64;
      uint64_t v42 = *(void *)(v31 + v64);
      uint64_t result = v37(v40, v39, v34);
      if (__OFADD__(v42, 1))
      {
        __break(1u);
        return result;
      }
      *(void *)(v31 + v41) = v42 + 1;
      uint64_t v44 = (uint64_t)v60;
      uint64_t v45 = (char *)v60 + *(int *)(v38 + 48);
      *uint64_t v60 = v42;
      v37(v45, v40, v34);
      uint64_t v46 = v70;
      sub_24ECCCBF0(v44, (uint64_t)v70);
      double v47 = v71(*v46, (char *)v46 + *(int *)(v38 + 48));
      uint64_t v49 = v48;
      sub_24EC88758((uint64_t)v46, &qword_26B1DE558);
      uint64_t v50 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24EE54E2C(0, *(void *)(v50 + 16) + 1, 1);
        uint64_t v50 = v80;
      }
      uint64_t v51 = v75;
      unint64_t v53 = *(void *)(v50 + 16);
      unint64_t v52 = *(void *)(v50 + 24);
      uint64_t v13 = v62;
      if (v53 >= v52 >> 1)
      {
        sub_24EE54E2C(v52 > 1, v53 + 1, 1);
        uint64_t v50 = v80;
      }
      *(void *)(v50 + 16) = v53 + 1;
      uint64_t v54 = v50 + 16 * v53;
      *(double *)(v54 + 32) = v47;
      *(void *)(v54 + 40) = v49;
      uint64_t v55 = *v51;
      uint64_t v31 = (uint64_t)v76;
      sub_24EE57380();
      BOOL v56 = v55 == v79[0];
      uint64_t v25 = v61;
      if (v56)
      {
        uint64_t v30 = (uint64_t)v78;
        ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v58)(v78, 1, 1, v77);
        break;
      }
    }
  }
  sub_24EC88758(v30, &qword_26B1DE078);
  sub_24EC88758(v31, &qword_26B1DE5C8);
  return v80;
}

uint64_t sub_24ECCC2A8(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE078);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = sub_24EE55C70();
  uint64_t v7 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v63 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE558);
  uint64_t v9 = MEMORY[0x270FA5388](v62);
  double v61 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  unint64_t v58 = &v45[-v11];
  uint64_t v12 = sub_24EE55D10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C8);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v45[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24ECCCB18(a1, (uint64_t)v18);
  uint64_t v23 = v13;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v15, v18, v12);
  sub_24ECCCB80(&qword_26B1DE0A8);
  uint64_t v64 = v15;
  sub_24EE570E0();
  uint64_t v24 = *(int *)(v20 + 44);
  *(void *)&v22[v24] = 0;
  uint64_t v25 = (uint64_t *)&v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5C0) + 36)];
  uint64_t v26 = sub_24ECCCB80(&qword_26B1DE0B0);
  uint64_t v66 = v25;
  uint64_t v27 = *v25;
  uint64_t v28 = (uint64_t)v22;
  uint64_t v29 = v26;
  sub_24EE57380();
  if (v27 == v65[0])
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v46);
  }
  else
  {
    uint64_t v55 = (void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 16);
    BOOL v56 = (void (**)(unsigned char *))(v7 + 16);
    uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v23 + 8);
    uint64_t v57 = (void *)(v7 + 56);
    uint64_t v52 = v24;
    unint64_t v53 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v51 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32);
    uint64_t v30 = v46;
    uint64_t v49 = v29;
    uint64_t v50 = v6;
    uint64_t v48 = v12;
    while (1)
    {
      uint64_t v31 = (void (*)(uint64_t *, void))sub_24EE573D0();
      (*v56)(v6);
      v31(v65, 0);
      double v32 = v64;
      (*v55)(v64, v28, v12);
      sub_24EE57390();
      (*v54)(v32, v12);
      double v33 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))*v57;
      ((void (*)(unsigned char *, void, uint64_t, uint64_t))*v57)(v6, 0, 1, v30);
      if ((*v53)(v6, 1, v30) == 1) {
        break;
      }
      double v47 = v33;
      uint64_t v34 = (uint64_t (*)(unsigned char *, unsigned char *, uint64_t))*v51;
      uint64_t v35 = v63;
      (*v51)(v63, v6, v30);
      uint64_t v36 = v62;
      uint64_t v37 = &v61[*(int *)(v62 + 48)];
      uint64_t v38 = v52;
      uint64_t v39 = *(void *)(v28 + v52);
      uint64_t result = v34(v37, v35, v30);
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        return result;
      }
      *(void *)(v28 + v38) = v39 + 1;
      uint64_t v41 = *(int *)(v36 + 48);
      uint64_t v42 = (uint64_t)v58;
      uint64_t v43 = (char *)v58 + v41;
      *unint64_t v58 = v39;
      v34((unsigned char *)(v42 + v41), v37, v30);
      v59(v39, v43);
      sub_24EC88758(v42, &qword_26B1DE558);
      uint64_t v44 = *v66;
      uint64_t v12 = v48;
      sub_24EE57380();
      uint64_t v6 = v50;
      if (v44 == v65[0])
      {
        v47(v50, 1, 1, v46);
        break;
      }
    }
  }
  sub_24EC88758((uint64_t)v6, &qword_26B1DE078);
  return sub_24EC88758(v28, &qword_26B1DE5C8);
}

unint64_t sub_24ECCC88C()
{
  unint64_t result = qword_26B1DD140[0];
  if (!qword_26B1DD140[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DD140);
  }
  return result;
}

unint64_t sub_24ECCC8E4()
{
  unint64_t result = qword_269965120;
  if (!qword_269965120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965120);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RatioStack(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECCCA04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RatioStack()
{
  return &type metadata for RatioStack;
}

uint64_t sub_24ECCCA3C()
{
  return swift_getWitnessTable();
}

unint64_t sub_24ECCCAAC()
{
  unint64_t result = qword_269965130;
  if (!qword_269965130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965130);
  }
  return result;
}

ValueMetadata *type metadata accessor for StackRatioKey()
{
  return &type metadata for StackRatioKey;
}

uint64_t sub_24ECCCB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ECCCB80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24EE55D10();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ECCCBC4(unint64_t a1, uint64_t a2)
{
  return sub_24ECCB284(a1, a2, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_24ECCCBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ECCCC5C(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD1F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECCCC98(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD1F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECCCCD4()
{
  if (*v0) {
    return 0x656C63726963;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_24ECCCD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECCD4F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ECCCD38(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD1A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECCCD74(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD1A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECCCDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EE577E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24ECCCE30(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD24C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECCCE6C(uint64_t a1)
{
  unint64_t v2 = sub_24ECCD24C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArtworkClipShape.encode(to:)(void *a1, uint64_t a2, int a3)
{
  uint64_t v18 = a2;
  int v20 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6A8);
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6B0);
  uint64_t v15 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6A0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ECCD1A4();
  sub_24EE578D0();
  if (v20)
  {
    char v22 = 1;
    sub_24ECCD1F8();
    sub_24EE57740();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v17);
  }
  else
  {
    char v21 = 0;
    sub_24ECCD24C();
    sub_24EE57740();
    uint64_t v19 = v18;
    sub_24ECB1664();
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_24ECCD1A4()
{
  unint64_t result = qword_26B1DD5F8;
  if (!qword_26B1DD5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5F8);
  }
  return result;
}

unint64_t sub_24ECCD1F8()
{
  unint64_t result = qword_269965138;
  if (!qword_269965138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965138);
  }
  return result;
}

unint64_t sub_24ECCD24C()
{
  unint64_t result = qword_26B1DD620;
  if (!qword_26B1DD620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD620);
  }
  return result;
}

void *ArtworkClipShape.init(from:)(void *a1)
{
  unint64_t result = sub_24ECCD5DC(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

void *sub_24ECCD2C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24ECCD5DC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_24ECCD2F8(void *a1)
{
  return ArtworkClipShape.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t ArtworkClipShape.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_24EE57880();
  }
  sub_24EE57880();
  return sub_24EE578A0();
}

uint64_t static ArtworkClipShape.== infix(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 | a4)) {
    char v4 = a2 & a4;
  }
  else {
    char v4 = *(double *)&a1 == *(double *)&a3;
  }
  return v4 & 1;
}

uint64_t ArtworkClipShape.hashValue.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_24EE578A0();
  }
  return sub_24EE578B0();
}

uint64_t sub_24ECCD3FC()
{
  return ArtworkClipShape.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_24ECCD408()
{
  if (*(unsigned char *)(v0 + 8)) {
    return sub_24EE57880();
  }
  sub_24EE57880();
  return sub_24EE578A0();
}

uint64_t sub_24ECCD458()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24EE57870();
  sub_24EE57880();
  if ((v1 & 1) == 0) {
    sub_24EE578A0();
  }
  return sub_24EE578B0();
}

uint64_t sub_24ECCD4C4(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_24ECCD4F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C580 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C63726963 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_24ECCD5DC(void *a1)
{
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965158);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  int v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965160);
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269965168);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v28 = a1;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24ECCD1A4();
  uint64_t v13 = v29;
  sub_24EE578C0();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v24 = v4;
  uint64_t v14 = v27;
  uint64_t v29 = v8;
  uint64_t v15 = sub_24EE57720();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v16 = sub_24EE57560();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    void *v18 = &type metadata for ArtworkClipShape;
    uint64_t v12 = v10;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
LABEL_7:
    uint64_t v22 = (uint64_t)v28;
    goto LABEL_8;
  }
  if (*(unsigned char *)(v15 + 32))
  {
    char v32 = 1;
    sub_24ECCD1F8();
    sub_24EE57690();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
    uint64_t v12 = 0;
  }
  else
  {
    char v31 = 0;
    sub_24ECCD24C();
    sub_24EE57690();
    sub_24ECB1F14();
    int v20 = v6;
    uint64_t v21 = v24;
    sub_24EE57710();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
    uint64_t v12 = v30;
  }
  uint64_t v22 = (uint64_t)v28;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v22);
  return v12;
}

unint64_t sub_24ECCDA98()
{
  unint64_t result = qword_269965140;
  if (!qword_269965140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965140);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkClipShape(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkClipShape(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24ECCDB50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24ECCDB6C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkClipShape()
{
  return &type metadata for ArtworkClipShape;
}

unsigned char *storeEnumTagSinglePayload for ArtworkClipShape.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECCDC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkClipShape.CodingKeys()
{
  return &type metadata for ArtworkClipShape.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ArtworkClipShape.RoundedRectangleCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ECCDD3CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkClipShape.RoundedRectangleCodingKeys()
{
  return &type metadata for ArtworkClipShape.RoundedRectangleCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkClipShape.CircleCodingKeys()
{
  return &type metadata for ArtworkClipShape.CircleCodingKeys;
}

unint64_t sub_24ECCDD88()
{
  unint64_t result = qword_269965148;
  if (!qword_269965148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965148);
  }
  return result;
}

unint64_t sub_24ECCDDE0()
{
  unint64_t result = qword_269965150;
  if (!qword_269965150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965150);
  }
  return result;
}

unint64_t sub_24ECCDE38()
{
  unint64_t result = qword_26B1DD630;
  if (!qword_26B1DD630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD630);
  }
  return result;
}

unint64_t sub_24ECCDE90()
{
  unint64_t result = qword_26B1DD628;
  if (!qword_26B1DD628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD628);
  }
  return result;
}

unint64_t sub_24ECCDEE8()
{
  unint64_t result = qword_26B1DD618;
  if (!qword_26B1DD618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD618);
  }
  return result;
}

unint64_t sub_24ECCDF40()
{
  unint64_t result = qword_26B1DD610;
  if (!qword_26B1DD610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD610);
  }
  return result;
}

unint64_t sub_24ECCDF98()
{
  unint64_t result = qword_26B1DD608;
  if (!qword_26B1DD608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD608);
  }
  return result;
}

unint64_t sub_24ECCDFF0()
{
  unint64_t result = qword_26B1DD600;
  if (!qword_26B1DD600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD600);
  }
  return result;
}

uint64_t dispatch thunk of static CanvasSectionDensityProtocol.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_24ECCE058(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636974726576 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6F7A69726F68 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ECCE158(char a1)
{
  if (a1) {
    return 0x746E6F7A69726F68;
  }
  else {
    return 0x6C61636974726576;
  }
}

uint64_t sub_24ECCE194()
{
  return sub_24ECB0B4C();
}

uint64_t sub_24ECCE1A4()
{
  return sub_24EE578B0();
}

uint64_t sub_24ECCE1EC()
{
  return sub_24ECCE158(*v0);
}

uint64_t sub_24ECCE1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECCE058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ECCE22C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECCE280(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECCE2D4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECCE328(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECCE37C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECCE3D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CanvasGridAxis.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v39 = type metadata accessor for CanvasGridAxis.HorizontalCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_24EE577C0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  double v40 = (char *)v29 - v5;
  uint64_t v6 = type metadata accessor for CanvasHorizontalGridLayout();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)v29 - v7;
  uint64_t v8 = type metadata accessor for CanvasGridAxis.VerticalCodingKeys();
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v31 = v8;
  v29[1] = v9;
  uint64_t v10 = sub_24EE577C0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x270FA5388](v10);
  char v32 = (char *)v29 - v11;
  uint64_t v12 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v30 = (char *)v29 - v14;
  uint64_t v15 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CanvasGridAxis.CodingKeys();
  swift_getWitnessTable();
  uint64_t v18 = sub_24EE577C0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)v29 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EE578D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v47, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = v41;
    uint64_t v21 = v42;
    uint64_t v23 = v38;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v17, v42);
    char v49 = 1;
    uint64_t v24 = v40;
    uint64_t v25 = v46;
    sub_24EE57740();
    swift_getWitnessTable();
    uint64_t v26 = v44;
    sub_24EE577B0();
    uint64_t v27 = v43;
  }
  else
  {
    uint64_t v22 = v33;
    uint64_t v21 = v34;
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v17, v34);
    char v48 = 0;
    uint64_t v24 = v32;
    uint64_t v25 = v46;
    sub_24EE57740();
    swift_getWitnessTable();
    uint64_t v26 = v36;
    sub_24EE577B0();
    uint64_t v27 = v35;
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v25);
}

uint64_t type metadata accessor for CanvasGridAxis.HorizontalCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CanvasGridAxis.VerticalCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CanvasGridAxis.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CanvasGridAxis.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  double v61 = a4;
  uint64_t v68 = type metadata accessor for CanvasGridAxis.HorizontalCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = sub_24EE57730();
  uint64_t v55 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v63 = (char *)&v47 - v7;
  uint64_t v8 = type metadata accessor for CanvasGridAxis.VerticalCodingKeys();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = v8;
  uint64_t v52 = sub_24EE57730();
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v62 = (char *)&v47 - v9;
  type metadata accessor for CanvasGridAxis.CodingKeys();
  swift_getWitnessTable();
  uint64_t v67 = sub_24EE57730();
  uint64_t v64 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v57 = a2;
  uint64_t v56 = a3;
  uint64_t v65 = type metadata accessor for CanvasGridAxis();
  uint64_t v51 = *(void *)(v65 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v65);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v47 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v66 = v11;
  uint64_t v20 = v73;
  sub_24EE578C0();
  uint64_t v21 = (uint64_t)a1;
  if (!v20)
  {
    char v49 = v17;
    uint64_t v50 = v14;
    char v48 = v19;
    uint64_t v23 = v65;
    uint64_t v22 = v66;
    uint64_t v73 = v21;
    uint64_t v24 = v67;
    *(void *)&long long v69 = sub_24EE57720();
    sub_24EE571B0();
    swift_getWitnessTable();
    *(void *)&long long v71 = sub_24EE57480();
    *((void *)&v71 + 1) = v25;
    *(void *)&long long v72 = v26;
    *((void *)&v72 + 1) = v27;
    sub_24EE57470();
    swift_getWitnessTable();
    sub_24EE573A0();
    char v28 = v69;
    if (v69 == 2 || (long long v47 = v71, v69 = v71, v70 = v72, (sub_24EE573C0() & 1) == 0))
    {
      uint64_t v31 = sub_24EE57560();
      swift_allocError();
      char v32 = v22;
      uint64_t v33 = v24;
      uint64_t v35 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
      *uint64_t v35 = v23;
      sub_24EE576A0();
      sub_24EE57550();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v31);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
    }
    else
    {
      if (v28)
      {
        LOBYTE(v69) = 1;
        sub_24EE57690();
        type metadata accessor for CanvasHorizontalGridLayout();
        swift_getWitnessTable();
        double v40 = v50;
        uint64_t v41 = v53;
        uint64_t v42 = v63;
        sub_24EE57710();
        uint64_t v43 = v64;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v41);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v24);
        uint64_t v44 = v23;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        uint64_t v46 = v48;
        v45(v48, v40, v23);
        uint64_t v30 = v61;
      }
      else
      {
        LOBYTE(v69) = 0;
        sub_24EE57690();
        uint64_t v29 = v24;
        uint64_t v30 = v61;
        type metadata accessor for CanvasVerticalGridLayout();
        swift_getWitnessTable();
        uint64_t v37 = v49;
        uint64_t v38 = v52;
        uint64_t v39 = v62;
        sub_24EE57710();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v22, v29);
        uint64_t v44 = v23;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        uint64_t v46 = v48;
        v45(v48, v37, v23);
      }
      v45(v30, v46, v44);
    }
    uint64_t v21 = v73;
  }
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

uint64_t type metadata accessor for CanvasGridAxis()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24ECCF2B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return CanvasGridAxis.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24ECCF2D0(void *a1, uint64_t a2)
{
  return CanvasGridAxis.encode(to:)(a1, a2);
}

uint64_t CanvasGridAxis.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CanvasHorizontalGridLayout();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, v3, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v16, v6);
    sub_24EE57880();
    CanvasHorizontalGridLayout.hash(into:)(a1, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v16, v10);
    sub_24EE57880();
    CanvasVerticalGridLayout.hash(into:)(a1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t static CanvasGridAxis.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v6 = type metadata accessor for CanvasHorizontalGridLayout();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v33 - v7;
  uint64_t v8 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (char *)&v33 - v9;
  uint64_t v40 = a4;
  uint64_t v10 = type metadata accessor for CanvasGridAxis();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = (char *)&v33 + *(int *)(v18 + 48) - v19;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v22((char *)&v33 - v19, v41, v10);
  v22(v21, v42, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22(v14, (uint64_t)v20, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = v38;
      uint64_t v23 = v39;
      uint64_t v25 = (uint64_t)v34;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v34, v21, v39);
      char v26 = static CanvasHorizontalGridLayout.== infix(_:_:)((uint64_t)v14, v25, a3);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v27(v25, v23);
      v27((uint64_t)v14, v23);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
LABEL_7:
    char v26 = 0;
    uint64_t v11 = v35;
    uint64_t v10 = TupleTypeMetadata2;
    goto LABEL_10;
  }
  v22(v16, (uint64_t)v20, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v37);
    goto LABEL_7;
  }
  uint64_t v29 = v36;
  uint64_t v28 = v37;
  uint64_t v30 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v21, v37);
  char v26 = static CanvasVerticalGridLayout.== infix(_:_:)((uint64_t)v16, v30, a3);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v31(v30, v28);
  v31((uint64_t)v16, v28);
LABEL_10:
  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
  return v26 & 1;
}

uint64_t CanvasGridAxis.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  CanvasGridAxis.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ECCF9FC(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  CanvasGridAxis.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ECCFA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CanvasGridAxis.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_24ECCFA4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECCFA68()
{
  uint64_t result = type metadata accessor for CanvasVerticalGridLayout();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CanvasHorizontalGridLayout();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24ECCFB48(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 0x10) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v4 + 80);
  unint64_t v8 = ((v7 + 8) & ~(unint64_t)v7) + v5;
  if (v8 <= 0x18) {
    uint64_t v9 = 24;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 <= (unint64_t)(v6 + 1)) {
    uint64_t v10 = v6 + 1;
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  if (v7 > 7u || (v7 & 0x100000) != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v13 + ((v7 & 0xF8 ^ 0x1F8u) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v14 = a2[v10];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v16 = v10;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          if (v10 >= 4) {
            goto LABEL_39;
          }
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_39;
          }
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_29;
          }
          goto LABEL_39;
        case 4:
          int v17 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_29:
            unsigned int v14 = (v17 | (v15 << (8 * v10))) + 2;
            break;
          }
LABEL_39:
          if (v17 != -1) {
            goto LABEL_40;
          }
          goto LABEL_31;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
LABEL_31:
      unsigned int v18 = a2[v9];
      unsigned int v19 = v18 - 2;
      if (v18 >= 2)
      {
        if (v9 <= 3) {
          uint64_t v20 = v9;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a2;
            if (v9 >= 4) {
              goto LABEL_54;
            }
            goto LABEL_50;
          case 2:
            int v21 = *(unsigned __int16 *)a2;
            if (v9 >= 4) {
              goto LABEL_54;
            }
            goto LABEL_50;
          case 3:
            int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v9 < 4) {
              goto LABEL_50;
            }
            goto LABEL_54;
          case 4:
            int v21 = *(_DWORD *)a2;
            if (v9 < 4)
            {
LABEL_50:
              unsigned int v18 = (v21 | (v19 << (8 * v9))) + 2;
              break;
            }
LABEL_54:
            if (v21 != -1) {
              goto LABEL_55;
            }
            goto LABEL_52;
          default:
            break;
        }
      }
      if (v18 == 1)
      {
LABEL_52:
        *a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v7 + 8) & ~(unint64_t)v7, (unint64_t)&a2[v7 + 8] & ~(unint64_t)v7);
        char v26 = 1;
      }
      else
      {
LABEL_55:
        char v26 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = *((void *)a2 + 2);
      }
      *((unsigned char *)v3 + v9) = v26;
      *((unsigned char *)v3 + v10) = 1;
    }
    else
    {
LABEL_40:
      unsigned int v22 = a2[v6];
      unsigned int v23 = v22 - 2;
      if (v22 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v24 = v6;
        }
        else {
          uint64_t v24 = 4;
        }
        switch(v24)
        {
          case 1:
            int v25 = *a2;
            if (v6 >= 4) {
              goto LABEL_64;
            }
            goto LABEL_60;
          case 2:
            int v25 = *(unsigned __int16 *)a2;
            if (v6 >= 4) {
              goto LABEL_64;
            }
            goto LABEL_60;
          case 3:
            int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v6 < 4) {
              goto LABEL_60;
            }
            goto LABEL_64;
          case 4:
            int v25 = *(_DWORD *)a2;
            if (v6 < 4)
            {
LABEL_60:
              unsigned int v22 = (v25 | (v23 << (8 * v6))) + 2;
              break;
            }
LABEL_64:
            if (v25 != -1) {
              goto LABEL_65;
            }
            goto LABEL_62;
          default:
            break;
        }
      }
      if (v22 == 1)
      {
LABEL_62:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v27 = 1;
      }
      else
      {
LABEL_65:
        char v27 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      *((unsigned char *)v3 + v6) = v27;
      *((unsigned char *)v3 + v10) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_24ECCFED4(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 0x10) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = ((v5 + 8) & ~v5) + v3;
  if (v6 <= 0x18) {
    unint64_t v6 = 24;
  }
  if (v6 + 1 <= v4 + 1) {
    uint64_t v7 = v4 + 1;
  }
  else {
    uint64_t v7 = v6 + 1;
  }
  unsigned int v8 = result[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *result;
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)result;
        goto LABEL_18;
      case 3:
        int v11 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)result;
LABEL_18:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    unsigned int v13 = result[v6];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *result;
          goto LABEL_36;
        case 2:
          int v16 = *(unsigned __int16 *)result;
          goto LABEL_36;
        case 3:
          int v16 = *(unsigned __int16 *)result | (result[2] << 16);
          goto LABEL_36;
        case 4:
          int v16 = *(_DWORD *)result;
LABEL_36:
          int v21 = (v16 | (v14 << (8 * v6))) + 2;
          unsigned int v13 = v16 + 2;
          if (v6 < 4) {
            unsigned int v13 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1) {
      return (unsigned __int8 *)(*(uint64_t (**)(unint64_t))(v2 + 8))((unint64_t)&result[v5 + 8] & ~v5);
    }
  }
  else
  {
    unsigned int v17 = result[v4];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v4 <= 3) {
        uint64_t v19 = v4;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *result;
          goto LABEL_43;
        case 2:
          int v20 = *(unsigned __int16 *)result;
          goto LABEL_43;
        case 3:
          int v20 = *(unsigned __int16 *)result | (result[2] << 16);
          goto LABEL_43;
        case 4:
          int v20 = *(_DWORD *)result;
LABEL_43:
          int v22 = (v20 | (v18 << (8 * v4))) + 2;
          unsigned int v17 = v20 + 2;
          if (v4 < 4) {
            unsigned int v17 = v22;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1) {
      return (unsigned __int8 *)(*(uint64_t (**)(void))(v2 + 8))();
    }
  }
  return result;
}

void *sub_24ECD0144(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 0x10) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = ((v7 + 8) & ~v7) + v5;
  if (v8 <= 0x18) {
    uint64_t v9 = 24;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 <= (unint64_t)(v6 + 1)) {
    uint64_t v10 = v6 + 1;
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_19;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_19:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = a2[v9];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_37;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_37;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_37;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_37:
          int v24 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v7 + 8) & ~v7, (unint64_t)&a2[v7 + 8] & ~v7);
      char v25 = 1;
      uint64_t v6 = v9;
      char v26 = 1;
    }
    else
    {
      char v25 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = *((void *)a2 + 2);
      char v26 = 1;
      uint64_t v6 = v9;
    }
  }
  else
  {
    unsigned int v20 = a2[v6];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v22 = v6;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          goto LABEL_45;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_45;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_45;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_45:
          int v27 = (v23 | (v21 << (8 * v6))) + 2;
          unsigned int v20 = v23 + 2;
          if (v6 < 4) {
            unsigned int v20 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v20 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      char v26 = 0;
      char v25 = 1;
    }
    else
    {
      char v25 = 0;
      char v26 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
  }
  *((unsigned char *)a1 + v6) = v25;
  *((unsigned char *)a1 + v10) = v26;
  return a1;
}

unsigned __int8 *sub_24ECD0448(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (v7 <= 0x10) {
      uint64_t v8 = 16;
    }
    else {
      uint64_t v8 = *(void *)(v6 + 64);
    }
    uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v10 = ((v9 + 8) & ~v9) + v7;
    if (v10 <= 0x18) {
      uint64_t v11 = 24;
    }
    else {
      uint64_t v11 = v10;
    }
    if (v11 + 1 <= (unint64_t)(v8 + 1)) {
      uint64_t v12 = v8 + 1;
    }
    else {
      uint64_t v12 = v11 + 1;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v12 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_21;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v12 < 4) {
LABEL_21:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v12))) + 2;
          else {
LABEL_23:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v9;
    if (v13 == 1)
    {
      unsigned int v18 = a1[v11];
      unsigned int v19 = v18 - 2;
      if (v18 >= 2)
      {
        if (v11 <= 3) {
          uint64_t v20 = v11;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            if (v11 >= 4) {
              goto LABEL_46;
            }
            goto LABEL_42;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            if (v11 >= 4) {
              goto LABEL_46;
            }
            goto LABEL_42;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v11 < 4) {
              goto LABEL_42;
            }
            goto LABEL_46;
          case 4:
            int v21 = *(_DWORD *)a1;
            if (v11 < 4)
            {
LABEL_42:
              unsigned int v18 = (v21 | (v19 << (8 * v11))) + 2;
              break;
            }
LABEL_46:
            if (v21 != -1) {
              goto LABEL_54;
            }
            goto LABEL_44;
          default:
            break;
        }
      }
      if (v18 == 1) {
LABEL_44:
      }
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v9 + 8] & v17, v5);
    }
    else
    {
      unsigned int v22 = a1[v8];
      unsigned int v23 = v22 - 2;
      if (v22 >= 2)
      {
        if (v8 <= 3) {
          uint64_t v24 = v8;
        }
        else {
          uint64_t v24 = 4;
        }
        switch(v24)
        {
          case 1:
            int v25 = *a1;
            if (v8 >= 4) {
              goto LABEL_83;
            }
            goto LABEL_51;
          case 2:
            int v25 = *(unsigned __int16 *)a1;
            if (v8 >= 4) {
              goto LABEL_83;
            }
            goto LABEL_51;
          case 3:
            int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v8 < 4) {
              goto LABEL_51;
            }
            goto LABEL_83;
          case 4:
            int v25 = *(_DWORD *)a1;
            if (v8 < 4)
            {
LABEL_51:
              unsigned int v22 = (v25 | (v23 << (8 * v8))) + 2;
              break;
            }
LABEL_83:
            if (v25 != -1) {
              goto LABEL_54;
            }
            goto LABEL_53;
          default:
            break;
        }
      }
      if (v22 == 1) {
LABEL_53:
      }
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
LABEL_54:
    unsigned int v26 = a2[v12];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v28 = v12;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *a2;
          if (v12 >= 4) {
            goto LABEL_74;
          }
          goto LABEL_64;
        case 2:
          int v29 = *(unsigned __int16 *)a2;
          if (v12 >= 4) {
            goto LABEL_74;
          }
          goto LABEL_64;
        case 3:
          int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v12 < 4) {
            goto LABEL_64;
          }
          goto LABEL_74;
        case 4:
          int v29 = *(_DWORD *)a2;
          if (v12 < 4)
          {
LABEL_64:
            unsigned int v26 = (v29 | (v27 << (8 * v12))) + 2;
            break;
          }
LABEL_74:
          if (v29 != -1) {
            goto LABEL_75;
          }
          goto LABEL_66;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
LABEL_66:
      unsigned int v30 = a2[v11];
      unsigned int v31 = v30 - 2;
      if (v30 >= 2)
      {
        if (v11 <= 3) {
          uint64_t v32 = v11;
        }
        else {
          uint64_t v32 = 4;
        }
        switch(v32)
        {
          case 1:
            int v33 = *a2;
            if (v11 >= 4) {
              goto LABEL_92;
            }
            goto LABEL_88;
          case 2:
            int v33 = *(unsigned __int16 *)a2;
            if (v11 >= 4) {
              goto LABEL_92;
            }
            goto LABEL_88;
          case 3:
            int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v11 < 4) {
              goto LABEL_88;
            }
            goto LABEL_92;
          case 4:
            int v33 = *(_DWORD *)a2;
            if (v11 < 4)
            {
LABEL_88:
              unsigned int v30 = (v33 | (v31 << (8 * v11))) + 2;
              break;
            }
LABEL_92:
            if (v33 != -1) {
              goto LABEL_93;
            }
            goto LABEL_90;
          default:
            break;
        }
      }
      if (v30 == 1)
      {
LABEL_90:
        *(void *)a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&a1[v9 + 8] & v17, (unint64_t)&a2[v9 + 8] & v17, v5);
        char v38 = 1;
        uint64_t v8 = v11;
        char v39 = 1;
      }
      else
      {
LABEL_93:
        char v38 = 0;
        long long v40 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *(_OWORD *)a1 = v40;
        char v39 = 1;
        uint64_t v8 = v11;
      }
    }
    else
    {
LABEL_75:
      unsigned int v34 = a2[v8];
      unsigned int v35 = v34 - 2;
      if (v34 >= 2)
      {
        if (v8 <= 3) {
          uint64_t v36 = v8;
        }
        else {
          uint64_t v36 = 4;
        }
        switch(v36)
        {
          case 1:
            int v37 = *a2;
            if (v8 >= 4) {
              goto LABEL_101;
            }
            goto LABEL_97;
          case 2:
            int v37 = *(unsigned __int16 *)a2;
            if (v8 >= 4) {
              goto LABEL_101;
            }
            goto LABEL_97;
          case 3:
            int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v8 < 4) {
              goto LABEL_97;
            }
            goto LABEL_101;
          case 4:
            int v37 = *(_DWORD *)a2;
            if (v8 < 4)
            {
LABEL_97:
              unsigned int v34 = (v37 | (v35 << (8 * v8))) + 2;
              break;
            }
LABEL_101:
            if (v37 != -1) {
              goto LABEL_102;
            }
            goto LABEL_99;
          default:
            break;
        }
      }
      if (v34 == 1)
      {
LABEL_99:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v39 = 0;
        char v38 = 1;
      }
      else
      {
LABEL_102:
        char v38 = 0;
        char v39 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    a1[v8] = v38;
    a1[v12] = v39;
  }
  return a1;
}

void *sub_24ECD0A18(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 0x10) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = ((v7 + 8) & ~v7) + v5;
  if (v8 <= 0x18) {
    uint64_t v9 = 24;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9 + 1 <= (unint64_t)(v6 + 1)) {
    uint64_t v10 = v6 + 1;
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_19;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_19:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    unsigned int v16 = a2[v9];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v18 = v9;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_37;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_37;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_37;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_37:
          int v24 = (v19 | (v17 << (8 * v9))) + 2;
          unsigned int v16 = v19 + 2;
          if (v9 < 4) {
            unsigned int v16 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + v7 + 8) & ~v7, (unint64_t)&a2[v7 + 8] & ~v7);
      char v25 = 1;
      uint64_t v6 = v9;
      char v26 = 1;
    }
    else
    {
      char v25 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = *((void *)a2 + 2);
      char v26 = 1;
      uint64_t v6 = v9;
    }
  }
  else
  {
    unsigned int v20 = a2[v6];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v22 = v6;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          goto LABEL_45;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_45;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_45;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_45:
          int v27 = (v23 | (v21 << (8 * v6))) + 2;
          unsigned int v20 = v23 + 2;
          if (v6 < 4) {
            unsigned int v20 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v20 == 1)
    {
      (*(void (**)(void *))(v4 + 32))(a1);
      char v26 = 0;
      char v25 = 1;
    }
    else
    {
      char v25 = 0;
      char v26 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
  }
  *((unsigned char *)a1 + v6) = v25;
  *((unsigned char *)a1 + v10) = v26;
  return a1;
}

unsigned __int8 *sub_24ECD0D1C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (v7 <= 0x10) {
      uint64_t v8 = 16;
    }
    else {
      uint64_t v8 = *(void *)(v6 + 64);
    }
    uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v10 = ((v9 + 8) & ~v9) + v7;
    if (v10 <= 0x18) {
      uint64_t v11 = 24;
    }
    else {
      uint64_t v11 = v10;
    }
    if (v11 + 1 <= (unint64_t)(v8 + 1)) {
      uint64_t v12 = v8 + 1;
    }
    else {
      uint64_t v12 = v11 + 1;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v12 >= 4) {
            goto LABEL_23;
          }
          goto LABEL_21;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v12 < 4) {
LABEL_21:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v12))) + 2;
          else {
LABEL_23:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v9;
    if (v13 == 1)
    {
      unsigned int v18 = a1[v11];
      unsigned int v19 = v18 - 2;
      if (v18 >= 2)
      {
        if (v11 <= 3) {
          uint64_t v20 = v11;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            if (v11 >= 4) {
              goto LABEL_46;
            }
            goto LABEL_42;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            if (v11 >= 4) {
              goto LABEL_46;
            }
            goto LABEL_42;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v11 < 4) {
              goto LABEL_42;
            }
            goto LABEL_46;
          case 4:
            int v21 = *(_DWORD *)a1;
            if (v11 < 4)
            {
LABEL_42:
              unsigned int v18 = (v21 | (v19 << (8 * v11))) + 2;
              break;
            }
LABEL_46:
            if (v21 != -1) {
              goto LABEL_54;
            }
            goto LABEL_44;
          default:
            break;
        }
      }
      if (v18 == 1) {
LABEL_44:
      }
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v9 + 8] & v17, v5);
    }
    else
    {
      unsigned int v22 = a1[v8];
      unsigned int v23 = v22 - 2;
      if (v22 >= 2)
      {
        if (v8 <= 3) {
          uint64_t v24 = v8;
        }
        else {
          uint64_t v24 = 4;
        }
        switch(v24)
        {
          case 1:
            int v25 = *a1;
            if (v8 >= 4) {
              goto LABEL_83;
            }
            goto LABEL_51;
          case 2:
            int v25 = *(unsigned __int16 *)a1;
            if (v8 >= 4) {
              goto LABEL_83;
            }
            goto LABEL_51;
          case 3:
            int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v8 < 4) {
              goto LABEL_51;
            }
            goto LABEL_83;
          case 4:
            int v25 = *(_DWORD *)a1;
            if (v8 < 4)
            {
LABEL_51:
              unsigned int v22 = (v25 | (v23 << (8 * v8))) + 2;
              break;
            }
LABEL_83:
            if (v25 != -1) {
              goto LABEL_54;
            }
            goto LABEL_53;
          default:
            break;
        }
      }
      if (v22 == 1) {
LABEL_53:
      }
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
LABEL_54:
    unsigned int v26 = a2[v12];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v28 = v12;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *a2;
          if (v12 >= 4) {
            goto LABEL_74;
          }
          goto LABEL_64;
        case 2:
          int v29 = *(unsigned __int16 *)a2;
          if (v12 >= 4) {
            goto LABEL_74;
          }
          goto LABEL_64;
        case 3:
          int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v12 < 4) {
            goto LABEL_64;
          }
          goto LABEL_74;
        case 4:
          int v29 = *(_DWORD *)a2;
          if (v12 < 4)
          {
LABEL_64:
            unsigned int v26 = (v29 | (v27 << (8 * v12))) + 2;
            break;
          }
LABEL_74:
          if (v29 != -1) {
            goto LABEL_75;
          }
          goto LABEL_66;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
LABEL_66:
      unsigned int v30 = a2[v11];
      unsigned int v31 = v30 - 2;
      if (v30 >= 2)
      {
        if (v11 <= 3) {
          uint64_t v32 = v11;
        }
        else {
          uint64_t v32 = 4;
        }
        switch(v32)
        {
          case 1:
            int v33 = *a2;
            if (v11 >= 4) {
              goto LABEL_92;
            }
            goto LABEL_88;
          case 2:
            int v33 = *(unsigned __int16 *)a2;
            if (v11 >= 4) {
              goto LABEL_92;
            }
            goto LABEL_88;
          case 3:
            int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v11 < 4) {
              goto LABEL_88;
            }
            goto LABEL_92;
          case 4:
            int v33 = *(_DWORD *)a2;
            if (v11 < 4)
            {
LABEL_88:
              unsigned int v30 = (v33 | (v31 << (8 * v11))) + 2;
              break;
            }
LABEL_92:
            if (v33 != -1) {
              goto LABEL_93;
            }
            goto LABEL_90;
          default:
            break;
        }
      }
      if (v30 == 1)
      {
LABEL_90:
        *(void *)a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))((unint64_t)&a1[v9 + 8] & v17, (unint64_t)&a2[v9 + 8] & v17, v5);
        char v38 = 1;
        uint64_t v8 = v11;
        char v39 = 1;
      }
      else
      {
LABEL_93:
        char v38 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        char v39 = 1;
        uint64_t v8 = v11;
      }
    }
    else
    {
LABEL_75:
      unsigned int v34 = a2[v8];
      unsigned int v35 = v34 - 2;
      if (v34 >= 2)
      {
        if (v8 <= 3) {
          uint64_t v36 = v8;
        }
        else {
          uint64_t v36 = 4;
        }
        switch(v36)
        {
          case 1:
            int v37 = *a2;
            if (v8 >= 4) {
              goto LABEL_101;
            }
            goto LABEL_97;
          case 2:
            int v37 = *(unsigned __int16 *)a2;
            if (v8 >= 4) {
              goto LABEL_101;
            }
            goto LABEL_97;
          case 3:
            int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v8 < 4) {
              goto LABEL_97;
            }
            goto LABEL_101;
          case 4:
            int v37 = *(_DWORD *)a2;
            if (v8 < 4)
            {
LABEL_97:
              unsigned int v34 = (v37 | (v35 << (8 * v8))) + 2;
              break;
            }
LABEL_101:
            if (v37 != -1) {
              goto LABEL_102;
            }
            goto LABEL_99;
          default:
            break;
        }
      }
      if (v34 == 1)
      {
LABEL_99:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v39 = 0;
        char v38 = 1;
      }
      else
      {
LABEL_102:
        char v38 = 0;
        char v39 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    a1[v8] = v38;
    a1[v12] = v39;
  }
  return a1;
}

uint64_t sub_24ECD12EC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = 16;
  if (v4 > 0x10) {
    uint64_t v5 = *(void *)(v3 + 64);
  }
  unint64_t v6 = ((*(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v6 <= 0x18) {
    unint64_t v6 = 24;
  }
  unint64_t v7 = v6 + 1;
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_27;
  }
  unint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 254) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v13 < 2)
    {
LABEL_27:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 2) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_27;
  }
LABEL_19:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 255;
}

void sub_24ECD1478(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = 16;
  if (v6 > 0x10) {
    uint64_t v7 = *(void *)(v5 + 64);
  }
  unint64_t v8 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v8 <= 0x18) {
    unint64_t v8 = 24;
  }
  unint64_t v9 = v8 + 1;
  if (v9 <= v7 + 1) {
    unint64_t v9 = v7 + 1;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFF)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 254) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v12 = a2 - 255;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x24ECD1698);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24ECD16C0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = 16;
  if (v3 > 0x10) {
    uint64_t v4 = *(void *)(v2 + 64);
  }
  unint64_t v5 = ((*(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v5 <= 0x18) {
    unint64_t v5 = 24;
  }
  unint64_t v6 = v5 + 1;
  if (v6 <= v4 + 1) {
    unint64_t v7 = v4 + 1;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = a1[v7];
  int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_17;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v12 = (v11 | (v9 << (8 * v7))) + 2;
        LODWORD(v8) = v11 + 2;
        if (v7 >= 4) {
          uint64_t v8 = v8;
        }
        else {
          uint64_t v8 = v12;
        }
        break;
      default:
        return v8;
    }
  }
  return v8;
}

void sub_24ECD17D0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    unint64_t v8 = *(void *)(v4 + 64);
    uint64_t v9 = 16;
    if (v8 > 0x10) {
      uint64_t v9 = *(void *)(v4 + 64);
    }
    unint64_t v10 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v8;
    if (v10 <= 0x18) {
      unint64_t v10 = 24;
    }
    unint64_t v11 = v10 + 1;
    if (v11 <= v9 + 1) {
      size_t v12 = v9 + 1;
    }
    else {
      size_t v12 = v11;
    }
    unsigned int v13 = a2 - 2;
    if (v12 < 4)
    {
      unsigned int v14 = v13 >> (8 * v12);
      int v15 = v13 & ~(-1 << (8 * v12));
      a1[v12] = v14 + 2;
      bzero(a1, v12);
      if (v12 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if (v12 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
    else
    {
      a1[v12] = 2;
      bzero(a1, v12);
      *(_DWORD *)a1 = v13;
    }
  }
  else
  {
    unint64_t v5 = *(void *)(v4 + 64);
    unint64_t v6 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
    if (v6 <= 0x18) {
      unint64_t v6 = 24;
    }
    unint64_t v7 = v6 + 1;
    if (v5 <= 0x10) {
      unint64_t v5 = 16;
    }
    if (v7 <= v5 + 1) {
      unint64_t v7 = v5 + 1;
    }
    a1[v7] = a2;
  }
}

unsigned char *sub_24ECD1924(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECD19F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24ECD1A1C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ECD1AB8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD1AE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1AFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1B18()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1B34()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1B50()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1B6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1B88()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1BA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECD1BC0()
{
  return swift_getWitnessTable();
}

uint64_t EquatableViewModifierBuilder.action.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t sub_24ECD1C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  v24[0] = a8;
  v24[1] = a4;
  v24[2] = a5;
  v24[3] = a7;
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  int v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EE55A00();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = MEMORY[0x270FA5388](v17);
  int v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a9 = a2;
  *((void *)a9 + 1) = a3;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, a1, a6, v19);
  sub_24EE55A10();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a6);
  uint64_t v22 = type metadata accessor for EquatableViewModifierBuilder();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&a9[*(int *)(v22 + 44)], v21, v17);
}

uint64_t static EquatableViewModifierBuilder.identified<A>(_:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  __n128 v17 = MEMORY[0x270FA5388](a1);
  __n128 v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
  swift_retain();
  return sub_24ECD1C14((uint64_t)v19, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t static EquatableViewModifierBuilder.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  return MEMORY[0x270F2CCD0](a1 + v4, a2 + v4);
}

uint64_t type metadata accessor for EquatableViewModifierBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24ECD1F5C(uint64_t a1, uint64_t a2)
{
  return static EquatableViewModifierBuilder.== infix(_:_:)(a1, a2);
}

uint64_t sub_24ECD1F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24ECD1F74()
{
  uint64_t result = sub_24EE55A00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24ECD2010(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 44);
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24EE55A00();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_24ECD20F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_24EE55A00();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_24ECD2170(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EE55A00();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_24ECD2208(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_24ECD229C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_24ECD2318(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_24ECD23A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24ECD23B8);
}

uint64_t sub_24ECD23B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EE55A00();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24ECD2468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24ECD247C);
}

void *sub_24ECD247C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EE55A00();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

BOOL static DynamicBrickDisplayStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24ECD2538(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2DF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECD2574(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2DF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECD25B0(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2DA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECD25EC(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2DA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECD2628(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2D4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECD2664(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2D4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECD26A8()
{
  uint64_t result = 0x654C6D6F74746F62;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265746E6563;
      break;
    case 2:
      uint64_t result = 0x654C7265746E6563;
      break;
    case 3:
      uint64_t result = 0x696461654C706F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD2740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECD3B2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ECD2768(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24ECD2774(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2CA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECD27B0(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2CA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ECD27EC(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2CF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ECD2828(uint64_t a1)
{
  unint64_t v2 = sub_24ECD2CF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicBrickDisplayStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699652F0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  int v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699652F8);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  unsigned int v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965300);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  unsigned int v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965308);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965310);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ECD2CA4();
  sub_24EE578D0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_24ECD2DA0();
      __n128 v17 = v23;
      sub_24EE57740();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_24ECD2D4C();
      __n128 v17 = v26;
      sub_24EE57740();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_24ECD2CF8();
      __n128 v17 = v29;
      sub_24EE57740();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24ECD2DF4();
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24ECD2CA4()
{
  unint64_t result = qword_269965318;
  if (!qword_269965318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965318);
  }
  return result;
}

unint64_t sub_24ECD2CF8()
{
  unint64_t result = qword_269965320;
  if (!qword_269965320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965320);
  }
  return result;
}

unint64_t sub_24ECD2D4C()
{
  unint64_t result = qword_269965328;
  if (!qword_269965328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965328);
  }
  return result;
}

unint64_t sub_24ECD2DA0()
{
  unint64_t result = qword_269965330;
  if (!qword_269965330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965330);
  }
  return result;
}

unint64_t sub_24ECD2DF4()
{
  unint64_t result = qword_269965338;
  if (!qword_269965338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965338);
  }
  return result;
}

uint64_t DynamicBrickDisplayStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965340);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  char v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965348);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965350);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965358);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965360);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  __n128 v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24ECD2CA4();
  uint64_t v19 = v52;
  sub_24EE578C0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  long long v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  unsigned int v23 = v17;
  uint64_t v24 = sub_24EE57720();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_24EE57560();
    swift_allocError();
    int v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    void *v29 = &type metadata for DynamicBrickDisplayStyle;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_24ECD2DA0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_24EE57690();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_24ECD2D4C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_24EE57690();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_24ECD2CF8();
      uint64_t v37 = v52;
      sub_24EE57690();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_24ECD2DF4();
      uint64_t v26 = v52;
      sub_24EE57690();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
LABEL_19:
      *char v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_24ECD347C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DynamicBrickDisplayStyle.init(from:)(a1, a2);
}

uint64_t sub_24ECD3494(void *a1)
{
  return DynamicBrickDisplayStyle.encode(to:)(a1);
}

uint64_t DynamicBrickDisplayStyle.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t DynamicBrickDisplayStyle.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24ECD3524()
{
  unint64_t result = qword_269965368;
  if (!qword_269965368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965368);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle()
{
  return &type metadata for DynamicBrickDisplayStyle;
}

uint64_t getEnumTagSinglePayload for ContentMargins.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15FitnessCanvasUI24DynamicBrickDisplayStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ECD36ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.BottomLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.BottomLeadingCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CenterCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.CenterLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.CenterLeadingCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicBrickDisplayStyle.TopLeadingCodingKeys()
{
  return &type metadata for DynamicBrickDisplayStyle.TopLeadingCodingKeys;
}

unint64_t sub_24ECD3768()
{
  unint64_t result = qword_269965370;
  if (!qword_269965370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965370);
  }
  return result;
}

unint64_t sub_24ECD37C0()
{
  unint64_t result = qword_269965378;
  if (!qword_269965378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965378);
  }
  return result;
}

unint64_t sub_24ECD3818()
{
  unint64_t result = qword_269965380;
  if (!qword_269965380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965380);
  }
  return result;
}

unint64_t sub_24ECD3870()
{
  unint64_t result = qword_269965388;
  if (!qword_269965388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965388);
  }
  return result;
}

unint64_t sub_24ECD38C8()
{
  unint64_t result = qword_269965390;
  if (!qword_269965390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965390);
  }
  return result;
}

unint64_t sub_24ECD3920()
{
  unint64_t result = qword_269965398;
  if (!qword_269965398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965398);
  }
  return result;
}

unint64_t sub_24ECD3978()
{
  unint64_t result = qword_2699653A0;
  if (!qword_2699653A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653A0);
  }
  return result;
}

unint64_t sub_24ECD39D0()
{
  unint64_t result = qword_2699653A8;
  if (!qword_2699653A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653A8);
  }
  return result;
}

unint64_t sub_24ECD3A28()
{
  unint64_t result = qword_2699653B0;
  if (!qword_2699653B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653B0);
  }
  return result;
}

unint64_t sub_24ECD3A80()
{
  unint64_t result = qword_2699653B8;
  if (!qword_2699653B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653B8);
  }
  return result;
}

unint64_t sub_24ECD3AD8()
{
  unint64_t result = qword_2699653C0;
  if (!qword_2699653C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653C0);
  }
  return result;
}

uint64_t sub_24ECD3B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654C6D6F74746F62 && a2 == 0xED0000676E696461;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746E6563 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654C7265746E6563 && a2 == 0xED0000676E696461 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696461654C706F74 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24ECD3D30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EE7C5A0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C5C0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_24ECD4058(char a1)
{
  unint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B726F77747261;
      break;
    case 2:
      unint64_t result = 0x656C797473;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x6E6F6974706163;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD415C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61436E6F69746361 && a2 == 0xEA00000000006472;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746469576C6C7566 && a2 == 0xED00006D65744968 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746469576C6C7566 && a2 == 0xEE00656761745368 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463416F666E69 && a2 == 0xEE00647261436E6FLL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x697242656772616CLL && a2 == 0xEA00000000006B63 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C400 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C420 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C440 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x647261646E617473 && a2 == 0xEC00000064726143 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EE7C460 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C480 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x647261436C6C6174 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C4A0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C69754277656976 && a2 == 0xEB00000000726564 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6369724265646977 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

unint64_t sub_24ECD47C8(char a1)
{
  unint64_t result = 0x61436E6F69746361;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x746469576C6C7566;
      break;
    case 3:
      unint64_t result = 0x697463416F666E69;
      break;
    case 4:
      unint64_t result = 0x697242656772616CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x647261646E617473;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x647261436C6C6174;
      break;
    case 13:
      unint64_t result = 0x6C69754277656976;
      break;
    case 14:
      unint64_t result = 0x6369724265646977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD49BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x637365446D657469 && a2 == 0xEE00726F74706972)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24ECD4A68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EE7C5A0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C5C0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x69566D6F74737563 && a2 == 0xEA00000000007765)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_24ECD4E00(char a1)
{
  unint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B726F77747261;
      break;
    case 2:
      unint64_t result = 0x656C797473;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x6E6F6974706163;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x69566D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD4F24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x75426E6F69746361 && a2 == 0xEC0000006E6F7474)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24ECD5100(char a1)
{
  uint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x75426E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD519C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6E746F6F66 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24ECD5350(char a1)
{
  uint64_t result = 0x6B726F77747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746F6E746F6F66;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD53E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24ECD558C(char a1)
{
  uint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6B726F77747261;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x656C746974627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD5618(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24ECD5840(char a1)
{
  uint64_t result = 0x6B726F77747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F6974706163;
      break;
    case 2:
      uint64_t result = 0x5379616C70736964;
      break;
    case 3:
      uint64_t result = 0x74756F79616CLL;
      break;
    case 4:
      uint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD58EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74695470756F7267 && a2 == 0xEA0000000000656CLL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xED00007765695679)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24ECD5BF4(char a1)
{
  uint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6B726F77747261;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x656C746974627573;
      break;
    case 4:
      uint64_t result = 0x6E6F6974706163;
      break;
    case 5:
      uint64_t result = 0x74695470756F7267;
      break;
    case 6:
      uint64_t result = 0x726F737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD5CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79616C7265766FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24ECD5E90(char a1)
{
  uint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6B726F77747261;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x79616C7265766FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD5F1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24ECD612C(char a1)
{
  uint64_t result = 0x74756F79616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6B726F77747261;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x656C746974627573;
      break;
    case 4:
      uint64_t result = 0x6E6F6974706163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ECD61D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24ECD6268(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24ECD63B8(char a1)
{
  if (!a1) {
    return 0x6B726F77747261;
  }
  if (a1 == 1) {
    return 0x656C746974627573;
  }
  return 0x656C746974;
}

uint64_t sub_24ECD640C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_24ECD7334(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24ED03D28);
}

uint64_t sub_24ECD6428(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24ECD7358(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24ED03D2C);
}

uint64_t sub_24ECD6440(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24ECD7374(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void))sub_24ED03D2C);
}

uint64_t sub_24ECD6458(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD4058);
}

uint64_t sub_24ECD6470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD3D30, a4);
}

uint64_t sub_24ECD6488@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D00, a2);
}

uint64_t sub_24ECD64A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD64F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6548(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_24ECD7334(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24EC97258);
}

uint64_t sub_24ECD6560()
{
  return sub_24EC974A4();
}

uint64_t sub_24ECD6588(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24ECD7358(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24EC97268);
}

uint64_t sub_24ECD65A0(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24ECD7374(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void))sub_24EC97268);
}

uint64_t sub_24ECD65B8(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD47C8);
}

uint64_t sub_24ECD65D0(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
}

uint64_t sub_24ECD65EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD415C, a4);
}

uint64_t sub_24ECD6604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
  *a5 = result;
  return result;
}

uint64_t sub_24ECD6644@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D08, a2);
}

uint64_t sub_24ECD665C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD66B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6704()
{
  return 0x637365446D657469;
}

uint64_t sub_24ECD6728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD71EC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD49BC, a4);
}

uint64_t sub_24ECD6740@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD7248(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ECB0F04, a2);
}

uint64_t sub_24ECD6758(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD67AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6800(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD4E00);
}

uint64_t sub_24ECD6818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD4A68, a4);
}

uint64_t sub_24ECD6830@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D10, a2);
}

uint64_t sub_24ECD6848(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD689C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD68F0(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD5100);
}

uint64_t sub_24ECD6908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD4F24, a4);
}

uint64_t sub_24ECD6920@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D30, a2);
}

uint64_t sub_24ECD6938(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD698C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD69E0(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD5350);
}

uint64_t sub_24ECD69F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD519C, a4);
}

uint64_t sub_24ECD6A10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6A64(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6AB8(void *a1, uint64_t a2)
{
  return sub_24ECD6AD0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD5840);
}

uint64_t sub_24ECD6AD0(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
}

uint64_t sub_24ECD6B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6B18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD5618, a4);
}

uint64_t sub_24ECD6B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
  *a5 = result;
  return result;
}

uint64_t sub_24ECD6B58@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D34, a2);
}

uint64_t sub_24ECD6B70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6BC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6C18(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD558C);
}

uint64_t sub_24ECD6C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD53E0, a4);
}

uint64_t sub_24ECD6C48(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6C9C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6CF0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6D44(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6D98(void *a1, uint64_t a2)
{
  return sub_24ECD6AD0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD612C);
}

uint64_t sub_24ECD6DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6B18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD5F1C, a4);
}

uint64_t sub_24ECD6DC8@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24EC996F4, a2);
}

uint64_t sub_24ECD6DE0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6E34(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6E88(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD5BF4);
}

uint64_t sub_24ECD6EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD58EC, a4);
}

uint64_t sub_24ECD6EB8@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ECC2D2C, a2);
}

uint64_t sub_24ECD6ED0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6F24(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD6F78(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD6FCC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD7020(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD5E90);
}

uint64_t sub_24ECD7038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD5CE4, a4);
}

uint64_t sub_24ECD7050@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D18, a2);
}

uint64_t sub_24ECD7068(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD70BC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD7110(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD7164(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD71B8()
{
  return 0x7470697263736564;
}

uint64_t sub_24ECD71D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD71EC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD61D4, a4);
}

uint64_t sub_24ECD71EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_24ECD7230@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD7248(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D38, a2);
}

uint64_t sub_24ECD7248@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24ECD728C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD72E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ECD7334(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
}

uint64_t sub_24ECD7358(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void, void))
{
  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7]);
}

uint64_t sub_24ECD7374(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void, void, void))
{
  sub_24EE57870();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7]);
  return sub_24EE578B0();
}

uint64_t sub_24ECD73D4(void *a1, uint64_t a2)
{
  return sub_24ECD65D0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_24ECD63B8);
}

uint64_t sub_24ECD73EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24ECD6604(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24ECD6268, a4);
}

uint64_t sub_24ECD7404@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ECD741C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_24ED03D20, a2);
}

uint64_t sub_24ECD741C@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  *a3 = result;
  return result;
}

uint64_t sub_24ECD745C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ECD74B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CanvasItemContent.encode(to:)(uint64_t a1, void *a2)
{
  *(void *)&long long v589 = a1;
  uint64_t v3 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[5];
  uint64_t v7 = a2[6];
  uint64_t v8 = a2[7];
  *(void *)&long long v610 = a2[2];
  uint64_t v4 = v610;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v516 = type metadata accessor for CanvasItemContent.WideBrickCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v521 = sub_24EE577C0();
  uint64_t v457 = *(void *)(v521 - 8);
  MEMORY[0x270FA5388](v521);
  uint64_t v519 = (char *)v444 - v9;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v10 = type metadata accessor for CanvasItemContent.ViewBuilderCodingKeys();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v506 = v10;
  uint64_t v504 = v11;
  uint64_t v509 = sub_24EE577C0();
  uint64_t v459 = *(void *)(v509 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v509);
  uint64_t v505 = (char *)v444 - v13;
  uint64_t v507 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v503 = (char *)v444 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v15 = type metadata accessor for CanvasItemContent.VerticalStackCardCodingKeys();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v510 = v15;
  uint64_t v508 = v16;
  uint64_t v522 = sub_24EE577C0();
  uint64_t v456 = *(void *)(v522 - 8);
  MEMORY[0x270FA5388](v522);
  v520 = (char *)v444 - v17;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v18 = type metadata accessor for CanvasItemContent.TallCardCodingKeys();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v501 = v18;
  uint64_t v499 = v19;
  uint64_t v515 = sub_24EE577C0();
  uint64_t v451 = *(void *)(v515 - 8);
  MEMORY[0x270FA5388](v515);
  uint64_t v512 = (char *)v444 - v20;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v21 = type metadata accessor for CanvasItemContent.StandardVerticalStackCodingKeys();
  uint64_t v497 = swift_getWitnessTable();
  uint64_t v498 = v21;
  uint64_t v513 = sub_24EE577C0();
  uint64_t v455 = *(void *)(v513 - 8);
  MEMORY[0x270FA5388](v513);
  uint64_t v511 = (char *)v444 - v22;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v23 = type metadata accessor for CanvasItemContent.StandardHorizontalStackCodingKeys();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v496 = v23;
  uint64_t v494 = v24;
  uint64_t v518 = sub_24EE577C0();
  uint64_t v447 = *(void *)(v518 - 8);
  MEMORY[0x270FA5388](v518);
  uint64_t v517 = (char *)v444 - v25;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v26 = type metadata accessor for CanvasItemContent.StandardCardCodingKeys();
  uint64_t v490 = swift_getWitnessTable();
  uint64_t v491 = v26;
  uint64_t v502 = sub_24EE577C0();
  uint64_t v454 = *(void *)(v502 - 8);
  MEMORY[0x270FA5388](v502);
  v500 = (char *)v444 - v27;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v28 = type metadata accessor for CanvasItemContent.SmallDynamicBrickCodingKeys();
  uint64_t v485 = swift_getWitnessTable();
  uint64_t v486 = v28;
  uint64_t v495 = sub_24EE577C0();
  uint64_t v453 = *(void *)(v495 - 8);
  MEMORY[0x270FA5388](v495);
  uint64_t v493 = (char *)v444 - v29;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v30 = type metadata accessor for CanvasItemContent.MonogramVerticalStackCodingKeys();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v483 = v30;
  uint64_t v481 = v31;
  uint64_t v492 = sub_24EE577C0();
  uint64_t v450 = *(void *)(v492 - 8);
  MEMORY[0x270FA5388](v492);
  v488 = (char *)v444 - v32;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v33 = type metadata accessor for CanvasItemContent.MediumDynamicBrickCodingKeys();
  uint64_t v475 = swift_getWitnessTable();
  uint64_t v476 = v33;
  uint64_t v489 = sub_24EE577C0();
  uint64_t v452 = *(void *)(v489 - 8);
  MEMORY[0x270FA5388](v489);
  v487 = (char *)v444 - v34;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v35 = type metadata accessor for CanvasItemContent.LargeBrickCodingKeys();
  uint64_t v473 = swift_getWitnessTable();
  uint64_t v474 = v35;
  uint64_t v484 = sub_24EE577C0();
  uint64_t v449 = *(void *)(v484 - 8);
  MEMORY[0x270FA5388](v484);
  uint64_t v482 = (char *)v444 - v36;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v37 = type metadata accessor for CanvasItemContent.InfoActionCardCodingKeys();
  uint64_t v469 = swift_getWitnessTable();
  uint64_t v470 = v37;
  uint64_t v479 = sub_24EE577C0();
  uint64_t v448 = *(void *)(v479 - 8);
  MEMORY[0x270FA5388](v479);
  uint64_t v477 = (char *)v444 - v38;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v39 = type metadata accessor for CanvasItemContent.FullWidthStageCodingKeys();
  uint64_t v471 = swift_getWitnessTable();
  uint64_t v472 = v39;
  uint64_t v524 = sub_24EE577C0();
  uint64_t v446 = *(void *)(v524 - 8);
  MEMORY[0x270FA5388](v524);
  long long v523 = (char *)v444 - v40;
  uint64_t v528 = sub_24EE57430();
  uint64_t v527 = *(void *)(v528 - 8);
  MEMORY[0x270FA5388](v528);
  v568 = (char *)v444 - v41;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v42 = type metadata accessor for CanvasItemContent.FullWidthItemCodingKeys();
  uint64_t v461 = swift_getWitnessTable();
  uint64_t v462 = v42;
  uint64_t v466 = sub_24EE577C0();
  uint64_t v458 = *(void *)(v466 - 8);
  MEMORY[0x270FA5388](v466);
  uint64_t v463 = (char *)v444 - v43;
  uint64_t v44 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v464 = *(void *)(v44 - 8);
  uint64_t v465 = v44;
  MEMORY[0x270FA5388](v44);
  uint64_t v460 = (char *)v444 - v45;
  *(void *)&long long v610 = v4;
  *((void *)&v610 + 1) = v3;
  *(void *)&long long v611 = v5;
  *((void *)&v611 + 1) = v6;
  *(void *)&long long v612 = v7;
  *((void *)&v612 + 1) = v8;
  uint64_t v46 = type metadata accessor for CanvasItemContent.ActionCardCodingKeys();
  uint64_t v467 = swift_getWitnessTable();
  uint64_t v468 = v46;
  uint64_t v480 = sub_24EE577C0();
  uint64_t v445 = *(void *)(v480 - 8);
  MEMORY[0x270FA5388](v480);
  v478 = (char *)v444 - v47;
  *(void *)&long long v584 = sub_24EE57430();
  *(void *)&long long v583 = *(void *)(v584 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v584);
  uint64_t v529 = (char *)v444 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v548 = (char *)v444 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v569 = (char *)v444 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v554 = (char *)v444 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v544 = (char *)v444 - v57;
  uint64_t v541 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v56);
  v562 = (char *)v444 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v586 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v59 = MEMORY[0x270FA5388](v586);
  uint64_t v552 = (uint64_t)v444 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v580 = (uint64_t)v444 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v537 = (uint64_t)v444 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v535 = (uint64_t)v444 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v567 = (uint64_t)v444 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v543 = (uint64_t)v444 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v530 = (uint64_t)v444 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v540 = (uint64_t)v444 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v565 = (uint64_t)v444 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v556 = (uint64_t)v444 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  uint64_t v570 = (uint64_t)v444 - v80;
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v561 = (uint64_t)v444 - v82;
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v553 = (uint64_t)v444 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  uint64_t v536 = (uint64_t)v444 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  uint64_t v534 = (uint64_t)v444 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  uint64_t v566 = (uint64_t)v444 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  uint64_t v547 = (uint64_t)v444 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  uint64_t v582 = (uint64_t)v444 - v94;
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  uint64_t v533 = (uint64_t)v444 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  uint64_t v542 = (uint64_t)v444 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  uint64_t v546 = (uint64_t)v444 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  uint64_t v581 = (uint64_t)v444 - v102;
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  uint64_t v532 = (uint64_t)v444 - v104;
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  uint64_t v563 = (uint64_t)v444 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  uint64_t v576 = (uint64_t)v444 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v564 = (uint64_t)v444 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  uint64_t v551 = (uint64_t)v444 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  uint64_t v557 = (uint64_t)v444 - v114;
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  uint64_t v558 = (uint64_t)v444 - v116;
  uint64_t v117 = MEMORY[0x270FA5388](v115);
  uint64_t v560 = (uint64_t)v444 - v118;
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  uint64_t v555 = (uint64_t)v444 - v120;
  uint64_t v121 = MEMORY[0x270FA5388](v119);
  uint64_t v545 = (uint64_t)v444 - v122;
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  uint64_t v559 = (uint64_t)v444 - v124;
  *(void *)&long long v591 = *(void *)(v3 - 8);
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  unsigned long long v531 = (char *)v444 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = MEMORY[0x270FA5388](v125);
  uint64_t v578 = (char *)v444 - v128;
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  v579 = (char *)v444 - v130;
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  uint64_t v577 = (char *)v444 - v132;
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  v572 = (char *)v444 - v134;
  uint64_t v135 = MEMORY[0x270FA5388](v133);
  v550 = (char *)v444 - v136;
  uint64_t v137 = MEMORY[0x270FA5388](v135);
  v539 = (char *)v444 - v138;
  uint64_t v139 = MEMORY[0x270FA5388](v137);
  v575 = (char *)v444 - v140;
  uint64_t v141 = MEMORY[0x270FA5388](v139);
  v538 = (char *)v444 - v142;
  uint64_t v143 = MEMORY[0x270FA5388](v141);
  uint64_t v549 = (char *)v444 - v144;
  uint64_t v145 = MEMORY[0x270FA5388](v143);
  unsigned __int8 v574 = (char *)v444 - v146;
  uint64_t v147 = MEMORY[0x270FA5388](v145);
  uint64_t v573 = (char *)v444 - v148;
  uint64_t v149 = *(a2 - 1);
  MEMORY[0x270FA5388](v147);
  uint64_t v571 = v4;
  *(void *)&long long v610 = v4;
  *(void *)&long long v592 = v3;
  *((void *)&v610 + 1) = v3;
  uint64_t v525 = v5;
  *(void *)&long long v611 = v5;
  int v151 = (unsigned __int8 *)v444 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0);
  v444[1] = v6;
  *((void *)&v611 + 1) = v6;
  uint64_t v585 = v7;
  *(void *)&long long v612 = v7;
  uint64_t v526 = v8;
  *((void *)&v612 + 1) = v8;
  type metadata accessor for CanvasItemContent.CodingKeys();
  swift_getWitnessTable();
  uint64_t v593 = sub_24EE577C0();
  uint64_t v587 = *(void *)(v593 - 8);
  MEMORY[0x270FA5388](v593);
  int v153 = (char *)v444 - v152;
  __swift_project_boxed_opaque_existential_1((void *)v589, *(void *)(v589 + 24));
  uint64_t v625 = v153;
  sub_24EE578D0();
  (*(void (**)(unsigned __int8 *, void, void *))(v149 + 16))(v151, v590, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v181 = v464;
      uint64_t v180 = v465;
      uint64_t v182 = v460;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v464 + 32))(v460, v151, v465);
      LOBYTE(v610) = 1;
      uint64_t v183 = v463;
      uint64_t v184 = v593;
      uint64_t v185 = v625;
      sub_24EE57740();
      swift_getWitnessTable();
      uint64_t v186 = v466;
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v458 + 8))(v183, v186);
      (*(void (**)(char *, uint64_t))(v181 + 8))(v182, v180);
      return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v185, v184);
    case 2:
      long long v187 = *((_OWORD *)v151 + 11);
      long long v618 = *((_OWORD *)v151 + 10);
      long long v619 = v187;
      long long v188 = *((_OWORD *)v151 + 13);
      long long v620 = *((_OWORD *)v151 + 12);
      long long v621 = v188;
      long long v189 = *((_OWORD *)v151 + 7);
      long long v614 = *((_OWORD *)v151 + 6);
      long long v615 = v189;
      long long v190 = *((_OWORD *)v151 + 9);
      long long v616 = *((_OWORD *)v151 + 8);
      long long v617 = v190;
      long long v191 = *((_OWORD *)v151 + 3);
      long long v612 = *((_OWORD *)v151 + 2);
      v613[0] = v191;
      long long v192 = *((_OWORD *)v151 + 5);
      v613[1] = *((_OWORD *)v151 + 4);
      v613[2] = v192;
      long long v193 = *((_OWORD *)v151 + 1);
      long long v610 = *(_OWORD *)v151;
      long long v611 = v193;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-14], "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      *(void *)&long long v594 = &type metadata for FullWidthStageViewLayout;
      uint64_t v194 = v592;
      *((void *)&v594 + 1) = v592;
      *(void *)&long long v595 = &type metadata for FullWidthStageViewStyle;
      *((void *)&v595 + 1) = v586;
      *(void *)&long long v596 = v586;
      *((void *)&v596 + 1) = v586;
      uint64_t v195 = v584;
      *(void *)&long long v597 = v584;
      *((void *)&v597 + 1) = v584;
      uint64_t v196 = v151;
      uint64_t v197 = v528;
      *(void *)&long long v598 = v528;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v199 = &v196[TupleTypeMetadata[12]];
      LODWORD(v589) = v196[TupleTypeMetadata[16]];
      uint64_t v200 = (uint64_t)&v196[TupleTypeMetadata[20]];
      uint64_t v201 = (uint64_t)&v196[TupleTypeMetadata[24]];
      uint64_t v202 = (uint64_t)&v196[TupleTypeMetadata[28]];
      uint64_t v203 = &v196[TupleTypeMetadata[32]];
      *(void *)&long long v590 = &v196[TupleTypeMetadata[36]];
      uint64_t v204 = &v196[TupleTypeMetadata[40]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v574, v199, v194);
      sub_24ECB04CC(v200, v560);
      sub_24ECB04CC(v201, v558);
      sub_24ECB04CC(v202, v557);
      uint64_t v205 = v583;
      uint64_t v206 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v583 + 32);
      v206(v554, v203, v195);
      v206(v569, (unsigned __int8 *)v590, v195);
      uint64_t v207 = v197;
      uint64_t v208 = v527;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v527 + 32))(v568, v204, v197);
      LOBYTE(v594) = 2;
      uint64_t v209 = v523;
      sub_24EE57740();
      long long v604 = v618;
      long long v605 = v619;
      long long v606 = v620;
      long long v607 = v621;
      long long v600 = v614;
      long long v601 = v615;
      long long v602 = v616;
      long long v603 = v617;
      long long v596 = v612;
      long long v597 = v613[0];
      long long v598 = v613[1];
      long long v599 = v613[2];
      long long v594 = v610;
      long long v595 = v611;
      char v624 = 0;
      sub_24ECBB9E0();
      uint64_t v210 = v524;
      uint64_t v211 = v588;
      sub_24EE577B0();
      if (v211)
      {
        (*(void (**)(char *, uint64_t))(v446 + 8))(v209, v210);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v568, v207);
        uint64_t v212 = *(void (**)(char *, uint64_t))(v205 + 8);
        v212(v569, v195);
        v212(v554, v195);
      }
      else
      {
        char v388 = v589;
        LOBYTE(v594) = 1;
        sub_24EE577B0();
        LOBYTE(v594) = v388;
        char v624 = 2;
        sub_24ECDD364();
        sub_24EE577B0();
        LOBYTE(v594) = 3;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        sub_24EE57760();
        LOBYTE(v594) = 4;
        sub_24EE57760();
        LOBYTE(v594) = 5;
        sub_24EE57760();
        LOBYTE(v594) = 6;
        sub_24EE57760();
        LOBYTE(v594) = 7;
        sub_24EE57760();
        LOBYTE(v594) = 8;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v446 + 8))(v523, v524);
        (*(void (**)(char *, uint64_t))(v527 + 8))(v568, v528);
        uint64_t v442 = *(void (**)(char *, uint64_t))(v583 + 8);
        uint64_t v443 = v584;
        v442(v569, v584);
        v442(v554, v443);
      }
      sub_24EC88758(v557, &qword_26B1DB9F0);
      sub_24EC88758(v558, &qword_26B1DB9F0);
      sub_24EC88758(v560, &qword_26B1DB9F0);
      (*(void (**)(char *, void))(v591 + 8))(v574, v592);
      goto LABEL_53;
    case 3:
      long long v592 = *(_OWORD *)v151;
      long long v591 = *((_OWORD *)v151 + 1);
      long long v590 = *((_OWORD *)v151 + 2);
      uint64_t v213 = *((void *)v151 + 6);
      uint64_t v214 = *((void *)v151 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout title description actionButton ");
      *(void *)&long long v610 = &type metadata for InfoActionCardViewLayout;
      *((void *)&v610 + 1) = v586;
      *(void *)&long long v611 = v586;
      uint64_t v215 = v584;
      *((void *)&v611 + 1) = v584;
      uint64_t v216 = (int *)swift_getTupleTypeMetadata();
      uint64_t v217 = (uint64_t)&v151[v216[12]];
      uint64_t v218 = (uint64_t)&v151[v216[16]];
      uint64_t v219 = &v151[v216[20]];
      sub_24ECB04CC(v217, v551);
      sub_24ECB04CC(v218, v564);
      uint64_t v220 = v583;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v583 + 32))(v548, v219, v215);
      LOBYTE(v610) = 3;
      uint64_t v221 = v477;
      uint64_t v222 = v593;
      uint64_t v223 = v625;
      sub_24EE57740();
      long long v610 = v592;
      long long v611 = v591;
      long long v612 = v590;
      *(void *)&v613[0] = v213;
      *((void *)&v613[0] + 1) = v214;
      LOBYTE(v594) = 0;
      sub_24ECBB938();
      uint64_t v224 = v479;
      uint64_t v225 = v588;
      sub_24EE577B0();
      if (v225)
      {
        (*(void (**)(char *, uint64_t))(v448 + 8))(v221, v224);
        (*(void (**)(char *, uint64_t))(v220 + 8))(v548, v215);
        sub_24EC88758(v564, &qword_26B1DB9F0);
        sub_24EC88758(v551, &qword_26B1DB9F0);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v223, v222);
      }
      else
      {
        LOBYTE(v610) = 1;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        uint64_t v389 = v221;
        uint64_t v390 = v551;
        sub_24EE57760();
        LOBYTE(v610) = 2;
        sub_24EE57760();
        LOBYTE(v610) = 3;
        uint64_t v418 = v548;
        sub_24EE57760();
        uint64_t v419 = v224;
        uint64_t v420 = v593;
        uint64_t v421 = v625;
        (*(void (**)(char *, uint64_t))(v448 + 8))(v389, v419);
        (*(void (**)(char *, uint64_t))(v583 + 8))(v418, v215);
        sub_24EC88758(v564, &qword_26B1DB9F0);
        sub_24EC88758(v390, &qword_26B1DB9F0);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v421, v420);
      }
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "artwork footnote subtitle title ");
      uint64_t v226 = v592;
      *(void *)&long long v610 = v592;
      *((void *)&v610 + 1) = v586;
      *(void *)&long long v611 = v586;
      *((void *)&v611 + 1) = v586;
      uint64_t v227 = (int *)swift_getTupleTypeMetadata();
      uint64_t v228 = (uint64_t)&v151[v227[12]];
      uint64_t v229 = (uint64_t)&v151[v227[16]];
      uint64_t v230 = (uint64_t)&v151[v227[20]];
      uint64_t v231 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v549, v151, v226);
      sub_24ECB04CC(v228, v576);
      sub_24ECB04CC(v229, v563);
      uint64_t v232 = v532;
      sub_24ECB04CC(v230, v532);
      LOBYTE(v610) = 4;
      uint64_t v233 = v482;
      uint64_t v234 = v625;
      sub_24EE57740();
      LOBYTE(v610) = 0;
      uint64_t v235 = v484;
      uint64_t v236 = v588;
      sub_24EE577B0();
      if (v236)
      {
        (*(void (**)(char *, uint64_t))(v449 + 8))(v233, v235);
        sub_24EC88758(v232, &qword_26B1DB9F0);
        sub_24EC88758(v563, &qword_26B1DB9F0);
        sub_24EC88758(v576, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v231 + 8))(v549, v226);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v234, v593);
      }
      LOBYTE(v610) = 1;
      sub_24EE55880();
      sub_24ECF314C(&qword_26B1DB9D8);
      sub_24EE57760();
      LOBYTE(v610) = 2;
      sub_24EE57760();
      uint64_t v406 = v549;
      LOBYTE(v610) = 3;
      uint64_t v422 = v532;
      sub_24EE57760();
      (*(void (**)(char *, uint64_t))(v449 + 8))(v233, v235);
      sub_24EC88758(v422, &qword_26B1DB9F0);
      sub_24EC88758(v563, &qword_26B1DB9F0);
      sub_24EC88758(v576, &qword_26B1DB9F0);
      (*(void (**)(char *, uint64_t))(v591 + 8))(v406, v226);
      goto LABEL_53;
    case 5:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "artwork caption displayStyle layout title ");
      uint64_t v237 = v592;
      *(void *)&long long v610 = v592;
      *((void *)&v610 + 1) = v586;
      *(void *)&long long v611 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v611 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v612 = v586;
      uint64_t v238 = (int *)swift_getTupleTypeMetadata();
      uint64_t v239 = (uint64_t)&v151[v238[12]];
      LODWORD(v589) = v151[v238[16]];
      uint64_t v240 = &v151[v238[20]];
      uint64_t v241 = *(void *)v240;
      uint64_t v242 = *((void *)v240 + 1);
      uint64_t v243 = (uint64_t)&v151[v238[24]];
      uint64_t v244 = v591;
      uint64_t v245 = v538;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v538, v151, v237);
      sub_24ECB04CC(v239, v581);
      sub_24ECB04CC(v243, v546);
      LOBYTE(v610) = 5;
      uint64_t v246 = v487;
      uint64_t v247 = v593;
      uint64_t v248 = v625;
      sub_24EE57740();
      LOBYTE(v610) = 0;
      uint64_t v249 = v489;
      uint64_t v250 = v588;
      sub_24EE577B0();
      *(void *)&long long v590 = v250;
      if (v250)
      {
        (*(void (**)(char *, uint64_t))(v452 + 8))(v246, v249);
        sub_24EC88758(v546, &qword_26B1DB9F0);
        uint64_t v251 = v581;
        goto LABEL_18;
      }
      char v391 = v589;
      LOBYTE(v610) = 1;
      uint64_t v392 = sub_24EE55880();
      uint64_t v393 = sub_24ECF314C(&qword_26B1DB9D8);
      uint64_t v394 = v590;
      sub_24EE57760();
      if (v394)
      {
        (*(void (**)(char *, uint64_t))(v452 + 8))(v246, v249);
        sub_24EC88758(v546, &qword_26B1DB9F0);
        sub_24EC88758(v581, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v591 + 8))(v538, v237);
        goto LABEL_53;
      }
      uint64_t v588 = v393;
      *(void *)&long long v590 = v392;
      LOBYTE(v610) = v391;
      LOBYTE(v594) = 2;
      sub_24ECDD310();
      uint64_t v407 = v246;
      sub_24EE577B0();
      *(void *)&long long v610 = v241;
      *((void *)&v610 + 1) = v242;
      LOBYTE(v594) = 3;
      sub_24ECBB740();
      sub_24EE577B0();
      uint64_t v423 = v581;
      uint64_t v424 = v546;
      uint64_t v425 = v593;
      LOBYTE(v610) = 4;
      sub_24EE57760();
      (*(void (**)(char *, uint64_t))(v452 + 8))(v407, v249);
      sub_24EC88758(v424, &qword_26B1DB9F0);
      sub_24EC88758(v423, &qword_26B1DB9F0);
      (*(void (**)(char *, uint64_t))(v591 + 8))(v538, v237);
      return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v625, v425);
    case 6:
      long long v590 = *(_OWORD *)v151;
      uint64_t v252 = *((void *)v151 + 2);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout artwork title subtitle ");
      *(void *)&long long v610 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v253 = v592;
      *((void *)&v610 + 1) = v592;
      *(void *)&long long v611 = v586;
      *((void *)&v611 + 1) = v586;
      uint64_t v254 = (int *)swift_getTupleTypeMetadata();
      uint64_t v255 = &v151[v254[12]];
      uint64_t v256 = (uint64_t)&v151[v254[16]];
      uint64_t v257 = (uint64_t)&v151[v254[20]];
      uint64_t v258 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v575, v255, v253);
      uint64_t v259 = v542;
      sub_24ECB04CC(v256, v542);
      uint64_t v260 = v533;
      sub_24ECB04CC(v257, v533);
      LOBYTE(v610) = 6;
      uint64_t v261 = v488;
      uint64_t v262 = v593;
      uint64_t v263 = v625;
      sub_24EE57740();
      long long v610 = v590;
      *(void *)&long long v611 = v252;
      LOBYTE(v594) = 0;
      sub_24ECBB7E8();
      uint64_t v264 = v492;
      uint64_t v265 = v588;
      sub_24EE577B0();
      if (v265)
      {
        (*(void (**)(char *, uint64_t))(v450 + 8))(v261, v264);
        sub_24EC88758(v260, &qword_26B1DB9F0);
        sub_24EC88758(v259, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v258 + 8))(v575, v592);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v263, v262);
      }
      else
      {
        LOBYTE(v610) = 1;
        sub_24EE577B0();
        LOBYTE(v610) = 2;
        uint64_t v408 = sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        *(void *)&long long v590 = v408;
        sub_24EE57760();
        LOBYTE(v610) = 3;
        uint64_t v426 = v533;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v450 + 8))(v261, v264);
        sub_24EC88758(v426, &qword_26B1DB9F0);
        sub_24EC88758(v542, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v258 + 8))(v575, v592);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v263, v593);
      }
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "artwork caption displayStyle layout title ");
      uint64_t v237 = v592;
      *(void *)&long long v610 = v592;
      *((void *)&v610 + 1) = v586;
      *(void *)&long long v611 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v611 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v612 = v586;
      uint64_t v266 = (int *)swift_getTupleTypeMetadata();
      uint64_t v267 = (uint64_t)&v151[v266[12]];
      LODWORD(v589) = v151[v266[16]];
      uint64_t v268 = &v151[v266[20]];
      uint64_t v269 = *(void *)v268;
      uint64_t v270 = *((void *)v268 + 1);
      uint64_t v271 = (uint64_t)&v151[v266[24]];
      uint64_t v244 = v591;
      uint64_t v245 = v539;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v539, v151, v237);
      sub_24ECB04CC(v267, v582);
      sub_24ECB04CC(v271, v547);
      LOBYTE(v610) = 7;
      uint64_t v272 = v493;
      uint64_t v247 = v593;
      uint64_t v248 = v625;
      sub_24EE57740();
      LOBYTE(v610) = 0;
      uint64_t v273 = v495;
      uint64_t v274 = v588;
      sub_24EE577B0();
      *(void *)&long long v590 = v274;
      if (v274)
      {
        (*(void (**)(char *, uint64_t))(v453 + 8))(v272, v273);
        sub_24EC88758(v547, &qword_26B1DB9F0);
        uint64_t v251 = v582;
LABEL_18:
        sub_24EC88758(v251, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v244 + 8))(v245, v237);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v248, v247);
      }
      else
      {
        char v395 = v589;
        LOBYTE(v610) = 1;
        uint64_t v396 = sub_24EE55880();
        uint64_t v397 = sub_24ECF314C(&qword_26B1DB9D8);
        uint64_t v398 = v590;
        sub_24EE57760();
        if (v398)
        {
          (*(void (**)(char *, uint64_t))(v453 + 8))(v272, v273);
          sub_24EC88758(v547, &qword_26B1DB9F0);
          sub_24EC88758(v582, &qword_26B1DB9F0);
          (*(void (**)(char *, uint64_t))(v591 + 8))(v539, v237);
          goto LABEL_53;
        }
        uint64_t v588 = v397;
        *(void *)&long long v590 = v396;
        LOBYTE(v610) = v395;
        LOBYTE(v594) = 2;
        sub_24ECDD310();
        uint64_t v409 = v272;
        sub_24EE577B0();
        *(void *)&long long v610 = v269;
        *((void *)&v610 + 1) = v270;
        LOBYTE(v594) = 3;
        sub_24ECBB740();
        sub_24EE577B0();
        uint64_t v427 = v582;
        uint64_t v428 = v547;
        uint64_t v425 = v593;
        LOBYTE(v610) = 4;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v453 + 8))(v409, v273);
        sub_24EC88758(v428, &qword_26B1DB9F0);
        sub_24EC88758(v427, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v591 + 8))(v539, v237);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v625, v425);
      }
    case 8:
      long long v590 = *(_OWORD *)v151;
      uint64_t v275 = *((void *)v151 + 2);
      uint64_t v276 = *((void *)v151 + 3);
      long long v589 = *((_OWORD *)v151 + 2);
      uint64_t v277 = *((void *)v151 + 6);
      long long v584 = *(_OWORD *)(v151 + 56);
      long long v583 = *(_OWORD *)(v151 + 72);
      uint64_t v278 = *((void *)v151 + 11);
      uint64_t v279 = *((void *)v151 + 12);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout artwork title subtitle caption ");
      *(void *)&long long v610 = &type metadata for StandardCardViewLayout;
      uint64_t v280 = v592;
      *((void *)&v610 + 1) = v592;
      *(void *)&long long v611 = v586;
      *((void *)&v611 + 1) = v586;
      *(void *)&long long v612 = v586;
      uint64_t v281 = (int *)swift_getTupleTypeMetadata();
      uint64_t v282 = (uint64_t)&v151[v281[16]];
      uint64_t v283 = &v151[v281[20]];
      uint64_t v284 = &v151[v281[24]];
      uint64_t v285 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v550, &v151[v281[12]], v280);
      sub_24ECB04CC(v282, v566);
      uint64_t v286 = (uint64_t)v283;
      uint64_t v287 = v534;
      sub_24ECB04CC(v286, v534);
      uint64_t v288 = (uint64_t)v284;
      uint64_t v289 = v536;
      sub_24ECB04CC(v288, v536);
      LOBYTE(v610) = 8;
      uint64_t v290 = v500;
      uint64_t v291 = v593;
      uint64_t v292 = v625;
      sub_24EE57740();
      long long v610 = v590;
      *(void *)&long long v611 = v275;
      *((void *)&v611 + 1) = v276;
      long long v612 = v589;
      *(void *)&v613[0] = v277;
      uint64_t v293 = v290;
      *(_OWORD *)((char *)v613 + 8) = v584;
      *(_OWORD *)((char *)&v613[1] + 8) = v583;
      *((void *)&v613[2] + 1) = v278;
      *(void *)&long long v614 = v279;
      LOBYTE(v594) = 0;
      sub_24ECBB698();
      uint64_t v294 = v502;
      uint64_t v295 = v588;
      sub_24EE577B0();
      if (!v295)
      {
        LOBYTE(v610) = 1;
        uint64_t v399 = v550;
        sub_24EE577B0();
        LOBYTE(v610) = 2;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        sub_24EE57760();
        uint64_t v410 = v536;
        LOBYTE(v610) = 3;
        uint64_t v429 = v534;
        sub_24EE57760();
        LOBYTE(v610) = 4;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v454 + 8))(v293, v294);
        sub_24EC88758(v410, &qword_26B1DB9F0);
        sub_24EC88758(v429, &qword_26B1DB9F0);
        sub_24EC88758(v566, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v399, v592);
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v454 + 8))(v293, v294);
      sub_24EC88758(v289, &qword_26B1DB9F0);
      sub_24EC88758(v287, &qword_26B1DB9F0);
      sub_24EC88758(v566, &qword_26B1DB9F0);
      (*(void (**)(char *, void))(v285 + 8))(v550, v592);
      uint64_t v296 = *(uint64_t (**)(char *, uint64_t))(v587 + 8);
      uint64_t v297 = v292;
      return v296(v297, v291);
    case 9:
      long long v298 = *((_OWORD *)v151 + 7);
      long long v614 = *((_OWORD *)v151 + 6);
      long long v615 = v298;
      long long v299 = *((_OWORD *)v151 + 9);
      long long v616 = *((_OWORD *)v151 + 8);
      long long v617 = v299;
      long long v300 = *((_OWORD *)v151 + 3);
      long long v612 = *((_OWORD *)v151 + 2);
      v613[0] = v300;
      long long v301 = *((_OWORD *)v151 + 5);
      v613[1] = *((_OWORD *)v151 + 4);
      v613[2] = v301;
      long long v302 = *((_OWORD *)v151 + 1);
      long long v610 = *(_OWORD *)v151;
      long long v611 = v302;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-10], "layout artwork title subtitle caption groupTitle accessoryView ");
      *(void *)&long long v594 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v303 = v592;
      *((void *)&v594 + 1) = v592;
      *(void *)&long long v595 = v586;
      *((void *)&v595 + 1) = v586;
      *(void *)&long long v596 = v586;
      *((void *)&v596 + 1) = v586;
      uint64_t v304 = v584;
      *(void *)&long long v597 = v584;
      uint64_t v305 = (int *)swift_getTupleTypeMetadata();
      uint64_t v306 = (uint64_t)&v151[v305[16]];
      uint64_t v307 = (uint64_t)&v151[v305[20]];
      uint64_t v308 = (uint64_t)&v151[v305[24]];
      uint64_t v309 = (uint64_t)&v151[v305[28]];
      uint64_t v310 = &v151[v305[32]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v572, &v151[v305[12]], v303);
      sub_24ECB04CC(v306, v553);
      sub_24ECB04CC(v307, v561);
      sub_24ECB04CC(v308, v570);
      sub_24ECB04CC(v309, v556);
      uint64_t v311 = v583;
      uint64_t v312 = v529;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v583 + 32))(v529, v310, v304);
      LOBYTE(v594) = 9;
      uint64_t v313 = v517;
      uint64_t v314 = v593;
      uint64_t v315 = v625;
      sub_24EE57740();
      long long v600 = v614;
      long long v601 = v615;
      long long v602 = v616;
      long long v603 = v617;
      long long v596 = v612;
      long long v597 = v613[0];
      long long v598 = v613[1];
      long long v599 = v613[2];
      long long v594 = v610;
      long long v595 = v611;
      char v624 = 0;
      sub_24ECBB5F0();
      uint64_t v316 = v518;
      uint64_t v317 = v588;
      sub_24EE577B0();
      if (v317)
      {
        (*(void (**)(char *, uint64_t))(v447 + 8))(v313, v316);
        (*(void (**)(char *, void))(v311 + 8))(v312, v584);
        sub_24EC88758(v556, &qword_26B1DB9F0);
        sub_24EC88758(v570, &qword_26B1DB9F0);
        sub_24EC88758(v561, &qword_26B1DB9F0);
        sub_24EC88758(v553, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v572, v592);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v315, v314);
      }
      else
      {
        uint64_t v400 = v591;
        LOBYTE(v594) = 1;
        sub_24EE577B0();
        uint64_t v401 = v316;
        LOBYTE(v594) = 2;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        uint64_t v411 = v313;
        uint64_t v412 = v553;
        sub_24EE57760();
        LOBYTE(v594) = 3;
        sub_24EE57760();
        LOBYTE(v594) = 4;
        sub_24EE57760();
        LOBYTE(v594) = 5;
        sub_24EE57760();
        uint64_t v433 = v411;
        LOBYTE(v594) = 6;
        uint64_t v437 = v529;
        sub_24EE57760();
        uint64_t v438 = v583;
        uint64_t v439 = v561;
        (*(void (**)(char *, uint64_t))(v447 + 8))(v433, v401);
        (*(void (**)(char *, void))(v438 + 8))(v437, v584);
        sub_24EC88758(v556, &qword_26B1DB9F0);
        sub_24EC88758(v570, &qword_26B1DB9F0);
        sub_24EC88758(v439, &qword_26B1DB9F0);
        sub_24EC88758(v412, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v400 + 8))(v572, v592);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v625, v593);
      }
    case 10:
      LODWORD(v590) = *v151;
      uint64_t v318 = *((void *)v151 + 1);
      uint64_t v319 = *((void *)v151 + 2);
      *(void *)&long long v589 = *((void *)v151 + 3);
      LODWORD(v584) = v151[32];
      uint64_t v320 = *((void *)v151 + 5);
      *(void *)&long long v583 = *((void *)v151 + 6);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout artwork title subtitle caption ");
      *(void *)&long long v610 = &type metadata for StandardVerticalStackViewLayout;
      uint64_t v321 = v592;
      *((void *)&v610 + 1) = v592;
      *(void *)&long long v611 = v586;
      *((void *)&v611 + 1) = v586;
      *(void *)&long long v612 = v586;
      uint64_t v322 = (int *)swift_getTupleTypeMetadata();
      uint64_t v323 = (uint64_t)&v151[v322[16]];
      uint64_t v324 = (uint64_t)&v151[v322[20]];
      uint64_t v325 = (uint64_t)&v151[v322[24]];
      uint64_t v326 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v577, &v151[v322[12]], v321);
      sub_24ECB04CC(v323, v565);
      uint64_t v327 = v540;
      sub_24ECB04CC(v324, v540);
      uint64_t v328 = v530;
      sub_24ECB04CC(v325, v530);
      LOBYTE(v610) = 10;
      uint64_t v329 = v511;
      uint64_t v330 = v593;
      uint64_t v331 = v625;
      sub_24EE57740();
      LOBYTE(v610) = v590;
      *((void *)&v610 + 1) = v318;
      *(void *)&long long v611 = v319;
      *((void *)&v611 + 1) = v589;
      LOBYTE(v612) = v584;
      *((void *)&v612 + 1) = v320;
      *(void *)&v613[0] = v583;
      LOBYTE(v594) = 0;
      sub_24ECBB548();
      uint64_t v332 = v513;
      uint64_t v333 = v588;
      sub_24EE577B0();
      if (v333)
      {
        (*(void (**)(char *, uint64_t))(v455 + 8))(v329, v332);
        sub_24EC88758(v328, &qword_26B1DB9F0);
        sub_24EC88758(v327, &qword_26B1DB9F0);
        sub_24EC88758(v565, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v326 + 8))(v577, v592);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v331, v330);
      }
      LOBYTE(v610) = 1;
      sub_24EE577B0();
      LOBYTE(v610) = 2;
      sub_24EE55880();
      sub_24ECF314C(&qword_26B1DB9D8);
      sub_24EE57760();
      LOBYTE(v610) = 3;
      sub_24EE57760();
      LOBYTE(v610) = 4;
      uint64_t v434 = v530;
      sub_24EE57760();
      uint64_t v435 = v565;
      uint64_t v436 = v591;
      (*(void (**)(char *, uint64_t))(v455 + 8))(v329, v332);
      sub_24EC88758(v434, &qword_26B1DB9F0);
      sub_24EC88758(v540, &qword_26B1DB9F0);
      sub_24EC88758(v435, &qword_26B1DB9F0);
      (*(void (**)(char *, void))(v436 + 8))(v577, v592);
      goto LABEL_53;
    case 11:
      long long v590 = *(_OWORD *)v151;
      uint64_t v334 = *((void *)v151 + 2);
      LODWORD(v589) = v151[24];
      long long v584 = *((_OWORD *)v151 + 2);
      uint64_t v335 = *((void *)v151 + 6);
      uint64_t v336 = *((void *)v151 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout artwork title overlay ");
      *(void *)&long long v610 = &type metadata for TallCardViewLayout;
      uint64_t v337 = v592;
      *((void *)&v610 + 1) = v592;
      *(void *)&long long v611 = v586;
      *((void *)&v611 + 1) = &type metadata for Overlay;
      uint64_t v338 = (int *)swift_getTupleTypeMetadata();
      uint64_t v339 = &v151[v338[12]];
      uint64_t v340 = (uint64_t)&v151[v338[16]];
      LODWORD(v586) = v151[v338[20]];
      uint64_t v341 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v579, v339, v337);
      uint64_t v342 = v543;
      sub_24ECB04CC(v340, v543);
      LOBYTE(v610) = 11;
      uint64_t v343 = v512;
      uint64_t v291 = v593;
      uint64_t v344 = v625;
      sub_24EE57740();
      long long v610 = v590;
      *(void *)&long long v611 = v334;
      BYTE8(v611) = v589;
      long long v612 = v584;
      *(void *)&v613[0] = v335;
      *((void *)&v613[0] + 1) = v336;
      uint64_t v345 = v343;
      LOBYTE(v594) = 0;
      sub_24ECBB4A0();
      uint64_t v346 = v515;
      uint64_t v347 = v588;
      sub_24EE577B0();
      if (v347)
      {
        (*(void (**)(char *, uint64_t))(v451 + 8))(v345, v346);
        sub_24EC88758(v342, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v341 + 8))(v579, v337);
      }
      else
      {
        char v402 = v586;
        LOBYTE(v610) = 1;
        sub_24EE577B0();
        LOBYTE(v610) = 2;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        sub_24EE57760();
        LOBYTE(v610) = v402;
        LOBYTE(v594) = 3;
        sub_24ECDD2BC();
        sub_24EE577B0();
        uint64_t v430 = v579;
        (*(void (**)(char *, uint64_t))(v451 + 8))(v345, v346);
        sub_24EC88758(v543, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v430, v592);
      }
      uint64_t v296 = *(uint64_t (**)(char *, uint64_t))(v587 + 8);
      uint64_t v297 = v344;
      return v296(v297, v291);
    case 12:
      long long v348 = *((_OWORD *)v151 + 5);
      v613[1] = *((_OWORD *)v151 + 4);
      v613[2] = v348;
      long long v349 = *((_OWORD *)v151 + 7);
      long long v614 = *((_OWORD *)v151 + 6);
      long long v615 = v349;
      long long v350 = *((_OWORD *)v151 + 1);
      long long v610 = *(_OWORD *)v151;
      long long v611 = v350;
      long long v351 = *((_OWORD *)v151 + 3);
      long long v612 = *((_OWORD *)v151 + 2);
      v613[0] = v351;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-6], "layout artwork title subtitle caption ");
      *(void *)&long long v594 = &type metadata for VerticalStackCardLayout;
      uint64_t v352 = v592;
      *((void *)&v594 + 1) = v592;
      *(void *)&long long v595 = v586;
      *((void *)&v595 + 1) = v586;
      *(void *)&long long v596 = v586;
      uint64_t v353 = (int *)swift_getTupleTypeMetadata();
      uint64_t v354 = (uint64_t)&v151[v353[16]];
      uint64_t v355 = (uint64_t)&v151[v353[20]];
      uint64_t v356 = &v151[v353[24]];
      uint64_t v357 = v591;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v578, &v151[v353[12]], v352);
      sub_24ECB04CC(v354, v567);
      uint64_t v358 = v535;
      sub_24ECB04CC(v355, v535);
      uint64_t v359 = (uint64_t)v356;
      uint64_t v360 = v537;
      sub_24ECB04CC(v359, v537);
      LOBYTE(v594) = 12;
      uint64_t v361 = v520;
      uint64_t v362 = v593;
      uint64_t v363 = v625;
      sub_24EE57740();
      long long v598 = v613[1];
      long long v599 = v613[2];
      long long v600 = v614;
      long long v601 = v615;
      long long v594 = v610;
      long long v595 = v611;
      long long v596 = v612;
      long long v597 = v613[0];
      char v624 = 0;
      sub_24ECBB3F8();
      uint64_t v364 = v522;
      uint64_t v365 = v588;
      sub_24EE577B0();
      if (v365)
      {
        (*(void (**)(char *, uint64_t))(v456 + 8))(v361, v364);
        sub_24EC88758(v360, &qword_26B1DB9F0);
        sub_24EC88758(v358, &qword_26B1DB9F0);
        sub_24EC88758(v567, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v357 + 8))(v578, v592);
        uint64_t v366 = *(uint64_t (**)(char *, uint64_t))(v587 + 8);
        uint64_t v367 = v363;
      }
      else
      {
        LOBYTE(v594) = 1;
        sub_24EE577B0();
        LOBYTE(v594) = 2;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        sub_24EE57760();
        uint64_t v413 = v537;
        LOBYTE(v594) = 3;
        uint64_t v431 = v535;
        sub_24EE57760();
        LOBYTE(v594) = 4;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v456 + 8))(v361, v364);
        sub_24EC88758(v413, &qword_26B1DB9F0);
        sub_24EC88758(v431, &qword_26B1DB9F0);
        sub_24EC88758(v567, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v578, v592);
        uint64_t v366 = *(uint64_t (**)(char *, uint64_t))(v587 + 8);
        uint64_t v367 = v625;
      }
      goto LABEL_56;
    case 13:
      uint64_t v368 = v507;
      uint64_t v369 = v503;
      uint64_t v370 = v151;
      uint64_t v371 = v525;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v507 + 32))(v503, v370, v525);
      LOBYTE(v610) = 13;
      uint64_t v372 = v505;
      uint64_t v373 = v593;
      uint64_t v374 = v625;
      sub_24EE57740();
      uint64_t v375 = v509;
      sub_24EE577B0();
      (*(void (**)(char *, uint64_t))(v459 + 8))(v372, v375);
      (*(void (**)(char *, uint64_t))(v368 + 8))(v369, v371);
      return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v374, v373);
    case 14:
      uint64_t v376 = v592;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v378 = (uint64_t)&v151[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v379 = (uint64_t)&v151[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v380 = v591;
      uint64_t v381 = v531;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v531, v151, v376);
      sub_24ECB04CC(v378, v580);
      sub_24ECB04CC(v379, v552);
      LOBYTE(v610) = 14;
      uint64_t v382 = v519;
      uint64_t v383 = v593;
      uint64_t v384 = v625;
      sub_24EE57740();
      LOBYTE(v610) = 0;
      uint64_t v385 = v521;
      uint64_t v386 = v588;
      sub_24EE577B0();
      *(void *)&long long v590 = v386;
      if (v386)
      {
        (*(void (**)(char *, uint64_t))(v457 + 8))(v382, v385);
        sub_24EC88758(v552, &qword_26B1DB9F0);
        sub_24EC88758(v580, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v380 + 8))(v381, v376);
        return (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v384, v383);
      }
      LOBYTE(v610) = 1;
      sub_24EE55880();
      uint64_t v403 = v382;
      sub_24ECF314C(&qword_26B1DB9D8);
      uint64_t v404 = v580;
      uint64_t v405 = v590;
      sub_24EE57760();
      if (v405)
      {
        (*(void (**)(char *, uint64_t))(v457 + 8))(v382, v385);
        sub_24EC88758(v552, &qword_26B1DB9F0);
        sub_24EC88758(v404, &qword_26B1DB9F0);
        (*(void (**)(char *, uint64_t))(v591 + 8))(v531, v376);
        goto LABEL_53;
      }
      LOBYTE(v610) = 2;
      uint64_t v414 = v552;
      sub_24EE57760();
      uint64_t v415 = v591;
      uint64_t v362 = v593;
      uint64_t v416 = v625;
      (*(void (**)(char *, uint64_t))(v457 + 8))(v403, v385);
      sub_24EC88758(v414, &qword_26B1DB9F0);
      sub_24EC88758(v580, &qword_26B1DB9F0);
      (*(void (**)(char *, uint64_t))(v415 + 8))(v531, v376);
      uint64_t v366 = *(uint64_t (**)(char *, uint64_t))(v587 + 8);
      uint64_t v367 = v416;
LABEL_56:
      uint64_t result = v366(v367, v362);
      break;
    default:
      uint64_t v623 = *((void *)v151 + 30);
      long long v155 = *((_OWORD *)v151 + 13);
      long long v620 = *((_OWORD *)v151 + 12);
      long long v621 = v155;
      long long v622 = *((_OWORD *)v151 + 14);
      long long v156 = *((_OWORD *)v151 + 9);
      long long v616 = *((_OWORD *)v151 + 8);
      long long v617 = v156;
      long long v157 = *((_OWORD *)v151 + 11);
      long long v618 = *((_OWORD *)v151 + 10);
      long long v619 = v157;
      long long v158 = *((_OWORD *)v151 + 5);
      v613[1] = *((_OWORD *)v151 + 4);
      v613[2] = v158;
      long long v159 = *((_OWORD *)v151 + 7);
      long long v614 = *((_OWORD *)v151 + 6);
      long long v615 = v159;
      long long v160 = *((_OWORD *)v151 + 1);
      long long v610 = *(_OWORD *)v151;
      long long v611 = v160;
      long long v161 = *((_OWORD *)v151 + 3);
      long long v612 = *((_OWORD *)v151 + 2);
      v613[0] = v161;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v444[-12], "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      *(void *)&long long v594 = &type metadata for ActionCardViewLayout;
      uint64_t v162 = v592;
      *((void *)&v594 + 1) = v592;
      *(void *)&long long v595 = &type metadata for ActionCardViewStyle;
      *((void *)&v595 + 1) = v586;
      *(void *)&long long v596 = v586;
      *((void *)&v596 + 1) = v586;
      uint64_t v163 = v571;
      *(void *)&long long v597 = v571;
      uint64_t v164 = v584;
      *((void *)&v597 + 1) = v584;
      size_t v165 = (int *)swift_getTupleTypeMetadata();
      uint64_t v166 = &v151[v165[12]];
      LODWORD(v590) = v151[v165[16]];
      uint64_t v167 = (uint64_t)&v151[v165[20]];
      uint64_t v168 = (uint64_t)&v151[v165[24]];
      uint64_t v169 = (uint64_t)&v151[v165[28]];
      uint64_t v170 = &v151[v165[32]];
      uint64_t v171 = &v151[v165[36]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v591 + 32))(v573, v166, v162);
      sub_24ECB04CC(v167, v559);
      sub_24ECB04CC(v168, v545);
      sub_24ECB04CC(v169, v555);
      uint64_t v172 = v541;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v541 + 32))(v562, v170, v163);
      uint64_t v173 = v583;
      uint64_t v174 = v544;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v583 + 32))(v544, v171, v164);
      LOBYTE(v594) = 0;
      long long v175 = v478;
      uint64_t v176 = v593;
      sub_24EE57740();
      long long v606 = v620;
      long long v607 = v621;
      long long v608 = v622;
      uint64_t v609 = v623;
      long long v602 = v616;
      long long v603 = v617;
      long long v604 = v618;
      long long v605 = v619;
      long long v598 = v613[1];
      long long v599 = v613[2];
      long long v600 = v614;
      long long v601 = v615;
      long long v594 = v610;
      long long v595 = v611;
      long long v596 = v612;
      long long v597 = v613[0];
      char v624 = 0;
      sub_24ECBBA88();
      uint64_t v177 = v480;
      uint64_t v178 = v588;
      sub_24EE577B0();
      if (v178)
      {
        (*(void (**)(char *, uint64_t))(v445 + 8))(v175, v177);
        (*(void (**)(char *, void))(v173 + 8))(v174, v584);
        (*(void (**)(char *, uint64_t))(v172 + 8))(v562, v571);
        sub_24EC88758(v555, &qword_26B1DB9F0);
        sub_24EC88758(v545, &qword_26B1DB9F0);
        sub_24EC88758(v559, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v573, v592);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v625, v176);
      }
      else
      {
        char v387 = v590;
        LOBYTE(v594) = 1;
        sub_24EE577B0();
        LOBYTE(v594) = v387;
        char v624 = 2;
        sub_24ECDD3B8();
        sub_24EE577B0();
        LOBYTE(v594) = 3;
        sub_24EE55880();
        sub_24ECF314C(&qword_26B1DB9D8);
        uint64_t v417 = v175;
        sub_24EE57760();
        LOBYTE(v594) = 4;
        uint64_t v432 = v545;
        sub_24EE57760();
        LOBYTE(v594) = 5;
        sub_24EE57760();
        LOBYTE(v594) = 6;
        uint64_t v440 = v562;
        uint64_t v441 = v571;
        sub_24EE577B0();
        LOBYTE(v594) = 7;
        sub_24EE57760();
        (*(void (**)(char *, uint64_t))(v445 + 8))(v417, v177);
        (*(void (**)(char *, void))(v583 + 8))(v544, v584);
        (*(void (**)(char *, uint64_t))(v541 + 8))(v440, v441);
        sub_24EC88758(v555, &qword_26B1DB9F0);
        sub_24EC88758(v432, &qword_26B1DB9F0);
        sub_24EC88758(v559, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v591 + 8))(v573, v592);
LABEL_53:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v587 + 8))(v625, v593);
      }
      break;
  }
  return result;
}

uint64_t type metadata accessor for CanvasItemContent.WideBrickCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.ViewBuilderCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.VerticalStackCardCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.TallCardCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.StandardVerticalStackCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.StandardHorizontalStackCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.StandardCardCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.SmallDynamicBrickCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.MonogramVerticalStackCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.MediumDynamicBrickCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.LargeBrickCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.InfoActionCardCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.FullWidthStageCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.FullWidthItemCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.ActionCardCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasItemContent.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ECDD2BC()
{
  unint64_t result = qword_26B1DDFA8[0];
  if (!qword_26B1DDFA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DDFA8);
  }
  return result;
}

unint64_t sub_24ECDD310()
{
  unint64_t result = qword_2699653C8;
  if (!qword_2699653C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653C8);
  }
  return result;
}

unint64_t sub_24ECDD364()
{
  unint64_t result = qword_2699653D0;
  if (!qword_2699653D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653D0);
  }
  return result;
}

unint64_t sub_24ECDD3B8()
{
  unint64_t result = qword_26B1DD9C0;
  if (!qword_26B1DD9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD9C0);
  }
  return result;
}

uint64_t CanvasItemContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v234 = a8;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v327 = type metadata accessor for CanvasItemContent.WideBrickCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v252 = sub_24EE57730();
  uint64_t v253 = *(void *)(v252 - 8);
  MEMORY[0x270FA5388](v252);
  uint64_t v293 = (char *)&v229 - v15;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v16 = type metadata accessor for CanvasItemContent.ViewBuilderCodingKeys();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v320 = v16;
  uint64_t v319 = v17;
  uint64_t v249 = sub_24EE57730();
  uint64_t v236 = *(void *)(v249 - 8);
  MEMORY[0x270FA5388](v249);
  uint64_t v292 = (char *)&v229 - v18;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v19 = type metadata accessor for CanvasItemContent.VerticalStackCardCodingKeys();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v318 = v19;
  uint64_t v317 = v20;
  uint64_t v270 = sub_24EE57730();
  uint64_t v254 = *(void *)(v270 - 8);
  MEMORY[0x270FA5388](v270);
  long long v299 = (char *)&v229 - v21;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v22 = type metadata accessor for CanvasItemContent.TallCardCodingKeys();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v316 = v22;
  uint64_t v315 = v23;
  uint64_t v268 = sub_24EE57730();
  uint64_t v251 = *(void *)(v268 - 8);
  MEMORY[0x270FA5388](v268);
  uint64_t v294 = (char *)&v229 - v24;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v25 = type metadata accessor for CanvasItemContent.StandardVerticalStackCodingKeys();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v314 = v25;
  uint64_t v313 = v26;
  uint64_t v260 = sub_24EE57730();
  uint64_t v250 = *(void *)(v260 - 8);
  MEMORY[0x270FA5388](v260);
  long long v298 = (char *)&v229 - v27;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v28 = type metadata accessor for CanvasItemContent.StandardHorizontalStackCodingKeys();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v312 = v28;
  uint64_t v311 = v29;
  uint64_t v261 = sub_24EE57730();
  uint64_t v264 = *(void *)(v261 - 8);
  MEMORY[0x270FA5388](v261);
  long long v300 = (char *)&v229 - v30;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v31 = type metadata accessor for CanvasItemContent.StandardCardCodingKeys();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v310 = v31;
  uint64_t v309 = v32;
  uint64_t v259 = sub_24EE57730();
  uint64_t v248 = *(void *)(v259 - 8);
  MEMORY[0x270FA5388](v259);
  uint64_t v297 = (char *)&v229 - v33;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v34 = type metadata accessor for CanvasItemContent.SmallDynamicBrickCodingKeys();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v308 = v34;
  uint64_t v307 = v35;
  uint64_t v258 = sub_24EE57730();
  uint64_t v247 = *(void *)(v258 - 8);
  MEMORY[0x270FA5388](v258);
  uint64_t v296 = (char *)&v229 - v36;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v37 = type metadata accessor for CanvasItemContent.MonogramVerticalStackCodingKeys();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v306 = v37;
  uint64_t v289 = v38;
  uint64_t v245 = sub_24EE57730();
  uint64_t v246 = *(void *)(v245 - 8);
  MEMORY[0x270FA5388](v245);
  uint64_t v291 = (char *)&v229 - v39;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v40 = type metadata accessor for CanvasItemContent.MediumDynamicBrickCodingKeys();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v305 = v40;
  uint64_t v288 = v41;
  uint64_t v256 = sub_24EE57730();
  uint64_t v244 = *(void *)(v256 - 8);
  MEMORY[0x270FA5388](v256);
  uint64_t v295 = (char *)&v229 - v42;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v43 = type metadata accessor for CanvasItemContent.LargeBrickCodingKeys();
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v287 = v43;
  uint64_t v286 = v44;
  uint64_t v242 = sub_24EE57730();
  uint64_t v243 = *(void *)(v242 - 8);
  MEMORY[0x270FA5388](v242);
  uint64_t v290 = (char *)&v229 - v45;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v46 = type metadata accessor for CanvasItemContent.InfoActionCardCodingKeys();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v285 = v46;
  uint64_t v284 = v47;
  uint64_t v240 = sub_24EE57730();
  uint64_t v241 = *(void *)(v240 - 8);
  MEMORY[0x270FA5388](v240);
  uint64_t v303 = (char *)&v229 - v48;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v49 = type metadata accessor for CanvasItemContent.FullWidthStageCodingKeys();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v283 = v49;
  uint64_t v282 = v50;
  uint64_t v262 = sub_24EE57730();
  uint64_t v257 = *(void *)(v262 - 8);
  MEMORY[0x270FA5388](v262);
  long long v302 = (char *)&v229 - v51;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v52 = type metadata accessor for CanvasItemContent.FullWidthItemCodingKeys();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v280 = v52;
  uint64_t v279 = v53;
  uint64_t v238 = sub_24EE57730();
  uint64_t v235 = *(void *)(v238 - 8);
  MEMORY[0x270FA5388](v238);
  uint64_t v281 = (char *)&v229 - v54;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v55 = type metadata accessor for CanvasItemContent.ActionCardCodingKeys();
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v278 = v55;
  uint64_t v277 = v56;
  uint64_t v276 = sub_24EE57730();
  uint64_t v263 = *(void *)(v276 - 8);
  MEMORY[0x270FA5388](v276);
  long long v301 = (char *)&v229 - v57;
  *(void *)&long long v335 = a2;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v338 = a7;
  uint64_t v58 = type metadata accessor for CanvasItemContent.CodingKeys();
  uint64_t v332 = swift_getWitnessTable();
  uint64_t v59 = sub_24EE57730();
  uint64_t v329 = *(void *)(v59 - 8);
  uint64_t v330 = v59;
  MEMORY[0x270FA5388](v59);
  uint64_t v334 = (char *)&v229 - v60;
  *(void *)&long long v335 = a2;
  uint64_t v271 = a2;
  uint64_t v304 = a3;
  *((void *)&v335 + 1) = a3;
  *(void *)&long long v336 = a4;
  uint64_t v269 = a4;
  uint64_t v326 = a5;
  *((void *)&v336 + 1) = a5;
  uint64_t v337 = a6;
  uint64_t v328 = a6;
  uint64_t v322 = a7;
  uint64_t v338 = a7;
  uint64_t v324 = type metadata accessor for CanvasItemContent();
  uint64_t v323 = *(void *)(v324 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v324);
  uint64_t v265 = (char *)&v229 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v237 = (char *)&v229 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v255 = (char *)&v229 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v239 = (char *)&v229 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v274 = (char *)&v229 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v275 = (char *)&v229 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v273 = (char *)&v229 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v267 = (char *)&v229 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v272 = (char *)&v229 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  uint64_t v266 = (char *)&v229 - v80;
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v83 = (char *)&v229 - v82;
  uint64_t v84 = MEMORY[0x270FA5388](v81);
  uint64_t v86 = (char *)&v229 - v85;
  uint64_t v87 = MEMORY[0x270FA5388](v84);
  uint64_t v89 = (char *)&v229 - v88;
  uint64_t v90 = MEMORY[0x270FA5388](v87);
  uint64_t v92 = (char *)&v229 - v91;
  uint64_t v93 = MEMORY[0x270FA5388](v90);
  uint64_t v95 = (char *)&v229 - v94;
  MEMORY[0x270FA5388](v93);
  uint64_t v97 = (char *)&v229 - v96;
  uint64_t v98 = a1[3];
  uint64_t v331 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v98);
  *(void *)&long long v325 = v58;
  uint64_t v99 = v333;
  sub_24EE578C0();
  if (!v99)
  {
    uint64_t v230 = v92;
    uint64_t v332 = (uint64_t)v86;
    uint64_t v233 = v83;
    uint64_t v231 = v95;
    uint64_t v232 = v89;
    uint64_t v333 = 0;
    uint64_t v229 = v97;
    uint64_t v100 = v330;
    *(void *)&long long v335 = sub_24EE57720();
    sub_24EE571B0();
    swift_getWitnessTable();
    *(void *)&long long v342 = sub_24EE57480();
    *((void *)&v342 + 1) = v101;
    *(void *)&long long v343 = v102;
    *((void *)&v343 + 1) = v103;
    sub_24EE57470();
    swift_getWitnessTable();
    sub_24EE573A0();
    if (v335 == 15 || (long long v325 = v342, v335 = v342, v336 = v343, (sub_24EE573C0() & 1) == 0))
    {
      uint64_t v109 = sub_24EE57560();
      swift_allocError();
      uint64_t v111 = v110;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
      *uint64_t v111 = v324;
      uint64_t v112 = v334;
      sub_24EE576A0();
      sub_24EE57550();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v109 - 8) + 104))(v111, *MEMORY[0x263F8DCB0], v109);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v329 + 8))(v112, v100);
    }
    else
    {
      uint64_t v104 = v334;
      uint64_t v105 = v323;
      switch((int)v323)
      {
        case 1:
          LOBYTE(v335) = 1;
          uint64_t v115 = v281;
          uint64_t v116 = v333;
          sub_24EE57690();
          if (v116) {
            goto LABEL_33;
          }
          type metadata accessor for FullWidthItemDescriptor();
          swift_getWitnessTable();
          uint64_t v117 = v230;
          uint64_t v118 = v238;
          sub_24EE57710();
          (*(void (**)(char *, uint64_t))(v235 + 8))(v115, v118);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v104, v100);
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
          uint64_t v171 = v117;
          uint64_t v172 = v229;
          v170(v229, v171, v227);
          goto LABEL_42;
        case 2:
          LOBYTE(v335) = 2;
          uint64_t v119 = v302;
          uint64_t v120 = v333;
          sub_24EE57690();
          if (v120) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD354();
          uint64_t v121 = v232;
          uint64_t v122 = v262;
          uint64_t v123 = v119;
          uint64_t v124 = sub_24EE57710();
          uint64_t v333 = &v229;
          MEMORY[0x270FA5388](v124);
          strcpy((char *)&v229 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
          *(void *)&long long v335 = &type metadata for FullWidthStageViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = &type metadata for FullWidthStageViewStyle;
          *((void *)&v336 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          uint64_t v337 = *((void *)&v336 + 1);
          uint64_t v338 = *((void *)&v336 + 1);
          uint64_t v339 = sub_24EE57430();
          uint64_t v340 = v339;
          uint64_t v341 = sub_24EE57430();
          uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
          uint64_t v174 = (uint64_t)&v121[*(int *)(TupleTypeMetadata + 48)];
          LOBYTE(v335) = 1;
          sub_24EE57710();
          LOBYTE(v335) = 2;
          sub_24ECE2C70();
          sub_24EE57710();
          uint64_t v333 = 0;
          uint64_t v198 = v257;
          uint64_t v332 = v174;
          uint64_t v213 = (uint64_t)&v121[*(int *)(TupleTypeMetadata + 80)];
          sub_24EE55880();
          LOBYTE(v335) = 3;
          uint64_t v214 = sub_24ECF314C(&qword_2699653D8);
          uint64_t v327 = v213;
          uint64_t v328 = v214;
          uint64_t v215 = v333;
          sub_24EE576C0();
          if (v215)
          {
            (*(void (**)(char *, uint64_t))(v198 + 8))(v123, v122);
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v100);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v304 - 8) + 8))(v332, v304);
            break;
          }
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          LOBYTE(v335) = 5;
          sub_24EE576C0();
          LOBYTE(v335) = 6;
          sub_24EE576C0();
          LOBYTE(v335) = 7;
          sub_24EE576C0();
          LOBYTE(v335) = 8;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v257 + 8))(v302, v262);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v100);
          uint64_t v228 = v232;
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v323 + 32);
          uint64_t v172 = v229;
          v170(v229, v228, v227);
          goto LABEL_47;
        case 3:
          LOBYTE(v335) = 3;
          uint64_t v125 = v303;
          uint64_t v126 = v333;
          sub_24EE57690();
          if (v126) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD300();
          uint64_t v127 = v240;
          sub_24EE57710();
          MEMORY[0x270FA5388](v125);
          strcpy((char *)&v229 - 48, "layout title description actionButton ");
          *(void *)&long long v335 = &type metadata for InfoActionCardViewLayout;
          *((void *)&v335 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *(void *)&long long v336 = *((void *)&v335 + 1);
          *((void *)&v336 + 1) = sub_24EE57430();
          uint64_t v333 = (char **)swift_getTupleTypeMetadata();
          uint64_t v175 = v332 + *((int *)v333 + 12);
          sub_24EE55880();
          LOBYTE(v335) = 1;
          sub_24ECF314C(&qword_2699653D8);
          sub_24EE576C0();
          uint64_t v328 = v175;
          uint64_t v199 = v332 + *((int *)v333 + 16);
          LOBYTE(v335) = 2;
          uint64_t v327 = v199;
          uint64_t v200 = v127;
          uint64_t v201 = v303;
          sub_24EE576C0();
          uint64_t v216 = v332;
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          uint64_t v217 = v329;
          uint64_t v218 = v334;
          uint64_t v221 = v216;
          (*(void (**)(char *, uint64_t))(v241 + 8))(v201, v200);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v100);
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
          uint64_t v172 = v229;
          v170(v229, (char *)v221, v227);
LABEL_42:
          uint64_t v222 = v234;
          goto LABEL_48;
        case 4:
          LOBYTE(v335) = 4;
          uint64_t v128 = v290;
          uint64_t v129 = v333;
          sub_24EE57690();
          if (v129) {
            goto LABEL_33;
          }
          char v344 = 0;
          uint64_t v130 = v233;
          uint64_t v131 = v304;
          uint64_t v132 = v242;
          uint64_t v133 = sub_24EE57710();
          MEMORY[0x270FA5388](v133);
          strcpy((char *)&v229 - 48, "artwork footnote subtitle title ");
          *(void *)&long long v335 = v131;
          *((void *)&v335 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *(void *)&long long v336 = *((void *)&v335 + 1);
          *((void *)&v336 + 1) = *((void *)&v335 + 1);
          uint64_t v176 = swift_getTupleTypeMetadata();
          uint64_t v177 = v130;
          uint64_t v178 = v176;
          long long v179 = (char **)&v177[*(int *)(v176 + 48)];
          sub_24EE55880();
          LOBYTE(v335) = 1;
          sub_24ECF314C(&qword_2699653D8);
          sub_24EE576C0();
          uint64_t v180 = v132;
          uint64_t v181 = v329;
          uint64_t v333 = v179;
          uint64_t v202 = v233;
          uint64_t v203 = (uint64_t)&v233[*(int *)(v178 + 64)];
          LOBYTE(v335) = 2;
          uint64_t v332 = v203;
          sub_24EE576C0();
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          uint64_t v219 = v202;
          (*(void (**)(char *, uint64_t))(v243 + 8))(v128, v180);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v181 + 8))(v334, v330);
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v323 + 32);
          uint64_t v172 = v229;
          v170(v229, v219, v227);
          uint64_t v222 = v234;
          goto LABEL_48;
        case 5:
          LOBYTE(v335) = 5;
          uint64_t v134 = v333;
          sub_24EE57690();
          if (v134) {
            goto LABEL_33;
          }
          char v344 = 0;
          uint64_t v135 = v266;
          uint64_t v136 = v304;
          uint64_t v137 = sub_24EE57710();
          MEMORY[0x270FA5388](v137);
          strcpy((char *)&v229 - 48, "artwork caption displayStyle layout title ");
          *(void *)&long long v335 = v136;
          *((void *)&v335 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *(void *)&long long v336 = &type metadata for DynamicBrickDisplayStyle;
          *((void *)&v336 + 1) = &type metadata for DynamicBrickViewLayout;
          uint64_t v337 = *((void *)&v335 + 1);
          uint64_t v333 = (char **)swift_getTupleTypeMetadata();
          uint64_t v182 = (uint64_t)&v135[*((int *)v333 + 12)];
          sub_24EE55880();
          LOBYTE(v335) = 1;
          uint64_t v183 = sub_24ECF314C(&qword_2699653D8);
          sub_24EE576C0();
          uint64_t v328 = v183;
          uint64_t v332 = v182;
          LOBYTE(v335) = 2;
          sub_24ECE2C1C();
          sub_24EE57710();
          LOBYTE(v335) = 3;
          sub_24ECBD258();
          sub_24EE57710();
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v244 + 8))(v295, v256);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v330);
          uint64_t v226 = v266;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 6:
          LOBYTE(v335) = 6;
          uint64_t v138 = v291;
          uint64_t v139 = v333;
          sub_24EE57690();
          if (v139) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD2AC();
          uint64_t v140 = v245;
          uint64_t v141 = sub_24EE57710();
          MEMORY[0x270FA5388](v141);
          strcpy((char *)&v229 - 48, "layout artwork title subtitle ");
          *(void *)&long long v335 = &type metadata for MonogramVerticalStackViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = v336;
          uint64_t v184 = swift_getTupleTypeMetadata();
          LOBYTE(v335) = 1;
          sub_24EE57710();
          uint64_t v204 = &v272[*(int *)(v184 + 64)];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v332 = (uint64_t)v204;
          sub_24EE576C0();
          uint64_t v333 = 0;
          uint64_t v205 = v329;
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v246 + 8))(v138, v140);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v205 + 8))(v334, v330);
          uint64_t v226 = v272;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 7:
          LOBYTE(v335) = 7;
          uint64_t v142 = v333;
          sub_24EE57690();
          if (v142) {
            goto LABEL_33;
          }
          char v344 = 0;
          uint64_t v143 = v267;
          uint64_t v144 = v304;
          uint64_t v145 = sub_24EE57710();
          MEMORY[0x270FA5388](v145);
          strcpy((char *)&v229 - 48, "artwork caption displayStyle layout title ");
          *(void *)&long long v335 = v144;
          *((void *)&v335 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *(void *)&long long v336 = &type metadata for DynamicBrickDisplayStyle;
          *((void *)&v336 + 1) = &type metadata for DynamicBrickViewLayout;
          uint64_t v337 = *((void *)&v335 + 1);
          uint64_t v333 = (char **)swift_getTupleTypeMetadata();
          uint64_t v185 = (uint64_t)&v143[*((int *)v333 + 12)];
          sub_24EE55880();
          LOBYTE(v335) = 1;
          uint64_t v186 = sub_24ECF314C(&qword_2699653D8);
          sub_24EE576C0();
          uint64_t v328 = v186;
          uint64_t v332 = v185;
          LOBYTE(v335) = 2;
          sub_24ECE2C1C();
          sub_24EE57710();
          LOBYTE(v335) = 3;
          sub_24ECBD258();
          sub_24EE57710();
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v247 + 8))(v296, v258);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v330);
          uint64_t v226 = v267;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 8:
          LOBYTE(v335) = 8;
          uint64_t v146 = v333;
          sub_24EE57690();
          if (v146) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD204();
          uint64_t v147 = sub_24EE57710();
          MEMORY[0x270FA5388](v147);
          strcpy((char *)&v229 - 48, "layout artwork title subtitle caption ");
          *(void *)&long long v335 = &type metadata for StandardCardViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = v336;
          uint64_t v337 = v336;
          uint64_t v187 = swift_getTupleTypeMetadata();
          LOBYTE(v335) = 1;
          sub_24EE57710();
          uint64_t v206 = &v273[*(int *)(v187 + 64)];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v332 = (uint64_t)v206;
          sub_24EE576C0();
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          uint64_t v333 = 0;
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v248 + 8))(v297, v259);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v330);
          uint64_t v226 = v273;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 9:
          LOBYTE(v335) = 9;
          uint64_t v148 = v333;
          sub_24EE57690();
          if (v148) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD1B0();
          uint64_t v149 = sub_24EE57710();
          uint64_t v333 = &v229;
          MEMORY[0x270FA5388](v149);
          strcpy((char *)&v229 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
          *(void *)&long long v335 = &type metadata for StandardHorizontalStackViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = v336;
          uint64_t v337 = v336;
          uint64_t v338 = v336;
          uint64_t v339 = sub_24EE57430();
          long long v188 = (int *)swift_getTupleTypeMetadata();
          LOBYTE(v335) = 1;
          sub_24EE57710();
          uint64_t v207 = &v275[v188[16]];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v332 = (uint64_t)v207;
          sub_24EE576C0();
          uint64_t v220 = &v275[v188[20]];
          LOBYTE(v335) = 3;
          uint64_t v328 = (uint64_t)v220;
          sub_24EE576C0();
          uint64_t v223 = &v275[v188[24]];
          LOBYTE(v335) = 4;
          uint64_t v327 = (uint64_t)v223;
          sub_24EE576C0();
          uint64_t v333 = 0;
          LOBYTE(v335) = 5;
          sub_24EE576C0();
          LOBYTE(v335) = 6;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v264 + 8))(v300, v261);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v100);
          uint64_t v226 = v275;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 10:
          LOBYTE(v335) = 10;
          uint64_t v150 = v333;
          sub_24EE57690();
          if (v150) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD15C();
          uint64_t v151 = sub_24EE57710();
          MEMORY[0x270FA5388](v151);
          strcpy((char *)&v229 - 48, "layout artwork title subtitle caption ");
          *(void *)&long long v335 = &type metadata for StandardVerticalStackViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = v336;
          uint64_t v337 = v336;
          uint64_t v189 = swift_getTupleTypeMetadata();
          LOBYTE(v335) = 1;
          sub_24EE57710();
          uint64_t v208 = &v274[*(int *)(v189 + 64)];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v332 = (uint64_t)v208;
          sub_24EE576C0();
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          uint64_t v333 = 0;
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v250 + 8))(v298, v260);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v330);
          uint64_t v226 = v274;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 11:
          LOBYTE(v335) = 11;
          uint64_t v152 = v294;
          int v153 = v333;
          sub_24EE57690();
          if (v153) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD108();
          long long v159 = v239;
          uint64_t v160 = sub_24EE57710();
          MEMORY[0x270FA5388](v160);
          strcpy((char *)&v229 - 48, "layout artwork title overlay ");
          *(void *)&long long v335 = &type metadata for TallCardViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = &type metadata for Overlay;
          uint64_t v190 = swift_getTupleTypeMetadata();
          LOBYTE(v335) = 1;
          uint64_t v191 = v268;
          sub_24EE57710();
          uint64_t v209 = &v159[*(int *)(v190 + 64)];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v333 = (char **)v209;
          sub_24EE576C0();
          uint64_t v210 = v329;
          LOBYTE(v335) = 3;
          sub_24ECE2BC8();
          sub_24EE57710();
          (*(void (**)(char *, uint64_t))(v251 + 8))(v152, v191);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v210 + 8))(v334, v330);
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v224 = v159;
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v323 + 32);
          uint64_t v172 = v229;
          v170(v229, v224, v227);
          goto LABEL_47;
        case 12:
          LOBYTE(v335) = 12;
          int v154 = v333;
          sub_24EE57690();
          if (v154) {
            goto LABEL_33;
          }
          char v344 = 0;
          sub_24ECBD0B4();
          long long v161 = v255;
          uint64_t v162 = sub_24EE57710();
          MEMORY[0x270FA5388](v162);
          strcpy((char *)&v229 - 48, "layout artwork title subtitle caption ");
          *(void *)&long long v335 = &type metadata for VerticalStackCardLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          *((void *)&v336 + 1) = v336;
          uint64_t v337 = v336;
          uint64_t v192 = swift_getTupleTypeMetadata();
          long long v193 = &v161[*(int *)(v192 + 48)];
          LOBYTE(v335) = 1;
          uint64_t v194 = (uint64_t)v193;
          sub_24EE57710();
          uint64_t v332 = v194;
          uint64_t v211 = &v161[*(int *)(v192 + 64)];
          sub_24EE55880();
          LOBYTE(v335) = 2;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v328 = (uint64_t)v211;
          sub_24EE576C0();
          LOBYTE(v335) = 3;
          sub_24EE576C0();
          uint64_t v333 = 0;
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v254 + 8))(v299, v270);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v330);
          uint64_t v226 = v255;
          uint64_t v227 = v324;
          goto LABEL_46;
        case 13:
          LOBYTE(v335) = 13;
          long long v155 = v292;
          long long v156 = v333;
          sub_24EE57690();
          if (v156) {
            goto LABEL_33;
          }
          uint64_t v163 = v237;
          uint64_t v164 = v249;
          sub_24EE57710();
          uint64_t v165 = v329;
          (*(void (**)(char *, uint64_t))(v236 + 8))(v155, v164);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v165 + 8))(v104, v100);
          uint64_t v227 = v324;
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
          uint64_t v172 = v229;
          v170(v229, v163, v227);
          uint64_t v222 = v234;
          goto LABEL_48;
        case 14:
          LOBYTE(v335) = 14;
          long long v157 = v293;
          long long v158 = v333;
          sub_24EE57690();
          if (v158) {
            goto LABEL_33;
          }
          LOBYTE(v335) = 0;
          uint64_t v166 = v265;
          uint64_t v167 = v252;
          sub_24EE57710();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          uint64_t v195 = &v166[*(int *)(swift_getTupleTypeMetadata3() + 48)];
          sub_24EE55880();
          LOBYTE(v335) = 1;
          sub_24ECF314C(&qword_2699653D8);
          sub_24EE576C0();
          uint64_t v196 = v167;
          uint64_t v197 = v329;
          uint64_t v333 = (char **)v195;
          LOBYTE(v335) = 2;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v253 + 8))(v157, v196);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v197 + 8))(v334, v330);
          uint64_t v226 = v265;
          uint64_t v227 = v324;
          goto LABEL_46;
        default:
          LOBYTE(v335) = 0;
          uint64_t v106 = v333;
          sub_24EE57690();
          if (v106)
          {
LABEL_33:
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v329 + 8))(v104, v100);
            uint64_t v113 = (uint64_t)v331;
            return __swift_destroy_boxed_opaque_existential_1(v113);
          }
          char v344 = 0;
          sub_24ECBD3A8();
          uint64_t v107 = v231;
          uint64_t v108 = sub_24EE57710();
          uint64_t v333 = &v229;
          MEMORY[0x270FA5388](v108);
          strcpy((char *)&v229 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
          *(void *)&long long v335 = &type metadata for ActionCardViewLayout;
          *((void *)&v335 + 1) = v304;
          *(void *)&long long v336 = &type metadata for ActionCardViewStyle;
          *((void *)&v336 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
          uint64_t v337 = *((void *)&v336 + 1);
          uint64_t v338 = *((void *)&v336 + 1);
          uint64_t v339 = v271;
          uint64_t v340 = sub_24EE57430();
          uint64_t v168 = (int *)swift_getTupleTypeMetadata();
          uint64_t v169 = &v107[v168[12]];
          LOBYTE(v335) = 1;
          sub_24EE57710();
          uint64_t v333 = (char **)v169;
          LOBYTE(v335) = 2;
          sub_24ECE2CC4();
          sub_24EE57710();
          uint64_t v212 = (uint64_t)&v107[v168[20]];
          sub_24EE55880();
          LOBYTE(v335) = 3;
          sub_24ECF314C(&qword_2699653D8);
          uint64_t v332 = v212;
          sub_24EE576C0();
          LOBYTE(v335) = 4;
          sub_24EE576C0();
          uint64_t v225 = &v231[v168[28]];
          LOBYTE(v335) = 5;
          uint64_t v328 = (uint64_t)v225;
          sub_24EE576C0();
          LOBYTE(v335) = 6;
          sub_24EE57710();
          LOBYTE(v335) = 7;
          sub_24EE576C0();
          (*(void (**)(char *, uint64_t))(v263 + 8))(v301, v276);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v329 + 8))(v334, v100);
          uint64_t v226 = v231;
          uint64_t v227 = v324;
LABEL_46:
          swift_storeEnumTagMultiPayload();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v323 + 32);
          uint64_t v172 = v229;
          v170(v229, v226, v227);
LABEL_47:
          uint64_t v222 = v234;
LABEL_48:
          v170(v222, v172, v227);
          break;
      }
    }
  }
  uint64_t v113 = (uint64_t)v331;
  return __swift_destroy_boxed_opaque_existential_1(v113);
}

uint64_t type metadata accessor for CanvasItemContent()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ECE2BC8()
{
  unint64_t result = qword_2699653E0;
  if (!qword_2699653E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653E0);
  }
  return result;
}

unint64_t sub_24ECE2C1C()
{
  unint64_t result = qword_2699653E8;
  if (!qword_2699653E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653E8);
  }
  return result;
}

unint64_t sub_24ECE2C70()
{
  unint64_t result = qword_2699653F0;
  if (!qword_2699653F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653F0);
  }
  return result;
}

unint64_t sub_24ECE2CC4()
{
  unint64_t result = qword_2699653F8;
  if (!qword_2699653F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699653F8);
  }
  return result;
}

uint64_t sub_24ECE2D18@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return CanvasItemContent.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a3);
}

uint64_t sub_24ECE2D40(uint64_t a1, void *a2)
{
  return CanvasItemContent.encode(to:)(a1, a2);
}

uint64_t CanvasItemContent.hash(into:)(uint64_t a1, void *a2)
{
  uint64_t v537 = a1;
  uint64_t v479 = *(void *)(a2[4] - 8);
  MEMORY[0x270FA5388](a1);
  v478 = (char *)&v441 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v480 = v4;
  uint64_t v513 = sub_24EE57430();
  uint64_t v484 = *(void *)(v513 - 8);
  MEMORY[0x270FA5388](v513);
  uint64_t v512 = (char *)&v441 - v5;
  uint64_t v6 = a2[3];
  *(void *)&long long v532 = a2[6];
  uint64_t v7 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v473 = *(void *)(v7 - 8);
  uint64_t v474 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v472 = (char *)&v441 - v8;
  uint64_t v535 = sub_24EE55880();
  uint64_t v536 = *(void *)(v535 - 8);
  MEMORY[0x270FA5388](v535);
  uint64_t v533 = (char *)&v441 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2[2];
  *(void *)&long long v531 = sub_24EE57430();
  *(void *)&long long v530 = *(void *)(v531 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v531);
  uint64_t v510 = (char *)&v441 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v504 = (char *)&v441 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v509 = (char *)&v441 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v508 = (char *)&v441 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v506 = (char *)&v441 - v20;
  uint64_t v511 = v10;
  uint64_t v507 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v505 = (char *)&v441 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v22 = MEMORY[0x270FA5388](v534);
  uint64_t v471 = (uint64_t)&v441 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v466 = (uint64_t)&v441 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v523 = (uint64_t)&v441 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v500 = (uint64_t)&v441 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v482 = (uint64_t)&v441 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v477 = (uint64_t)&v441 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v470 = (uint64_t)&v441 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v483 = (uint64_t)&v441 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  *(void *)&long long v529 = (char *)&v441 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v503 = (uint64_t)&v441 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v465 = (uint64_t)&v441 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v467 = (uint64_t)&v441 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v476 = (uint64_t)&v441 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v469 = (uint64_t)&v441 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v464 = (uint64_t)&v441 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v525 = (uint64_t)&v441 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v524 = (uint64_t)&v441 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v501 = (uint64_t)&v441 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v481 = (uint64_t)&v441 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v475 = (uint64_t)&v441 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v468 = (uint64_t)&v441 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v463 = (uint64_t)&v441 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v528 = (uint64_t)&v441 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v527 = (uint64_t)&v441 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v526 = (uint64_t)&v441 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v502 = (uint64_t)&v441 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v444 = (uint64_t)&v441 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v443 = (uint64_t)&v441 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v442 = (uint64_t)&v441 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v445 = (uint64_t)&v441 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v514 = (uint64_t)&v441 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  uint64_t v488 = (uint64_t)&v441 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v462 = (uint64_t)&v441 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  uint64_t v454 = (uint64_t)&v441 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  uint64_t v486 = (uint64_t)&v441 - v91;
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  uint64_t v498 = (uint64_t)&v441 - v93;
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  uint64_t v459 = (uint64_t)&v441 - v95;
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  uint64_t v453 = (uint64_t)&v441 - v97;
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  uint64_t v520 = (uint64_t)&v441 - v99;
  uint64_t v100 = MEMORY[0x270FA5388](v98);
  uint64_t v497 = (uint64_t)&v441 - v101;
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  uint64_t v457 = (uint64_t)&v441 - v103;
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  uint64_t v449 = (uint64_t)&v441 - v105;
  uint64_t v106 = MEMORY[0x270FA5388](v104);
  uint64_t v485 = (uint64_t)&v441 - v107;
  uint64_t v108 = MEMORY[0x270FA5388](v106);
  uint64_t v495 = (uint64_t)&v441 - v109;
  uint64_t v110 = MEMORY[0x270FA5388](v108);
  uint64_t v458 = (uint64_t)&v441 - v111;
  uint64_t v112 = MEMORY[0x270FA5388](v110);
  uint64_t v452 = (uint64_t)&v441 - v113;
  uint64_t v114 = MEMORY[0x270FA5388](v112);
  uint64_t v447 = (uint64_t)&v441 - v115;
  uint64_t v116 = MEMORY[0x270FA5388](v114);
  uint64_t v460 = (uint64_t)&v441 - v117;
  uint64_t v118 = MEMORY[0x270FA5388](v116);
  uint64_t v517 = (uint64_t)&v441 - v119;
  uint64_t v120 = MEMORY[0x270FA5388](v118);
  uint64_t v494 = (uint64_t)&v441 - v121;
  uint64_t v122 = MEMORY[0x270FA5388](v120);
  uint64_t v448 = (uint64_t)&v441 - v123;
  uint64_t v124 = MEMORY[0x270FA5388](v122);
  uint64_t v126 = (char *)&v441 - v125;
  uint64_t v127 = MEMORY[0x270FA5388](v124);
  uint64_t v515 = (uint64_t)&v441 - v128;
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  uint64_t v492 = (uint64_t)&v441 - v130;
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  uint64_t v461 = (uint64_t)&v441 - v132;
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  uint64_t v455 = (uint64_t)&v441 - v134;
  uint64_t v135 = MEMORY[0x270FA5388](v133);
  uint64_t v450 = (uint64_t)&v441 - v136;
  uint64_t v137 = MEMORY[0x270FA5388](v135);
  uint64_t v522 = (uint64_t)&v441 - v138;
  uint64_t v139 = MEMORY[0x270FA5388](v137);
  uint64_t v521 = (uint64_t)&v441 - v140;
  uint64_t v141 = MEMORY[0x270FA5388](v139);
  uint64_t v499 = (uint64_t)&v441 - v142;
  uint64_t v143 = MEMORY[0x270FA5388](v141);
  uint64_t v456 = (uint64_t)&v441 - v144;
  uint64_t v145 = MEMORY[0x270FA5388](v143);
  uint64_t v451 = (uint64_t)&v441 - v146;
  uint64_t v147 = MEMORY[0x270FA5388](v145);
  uint64_t v446 = (uint64_t)&v441 - v148;
  uint64_t v149 = MEMORY[0x270FA5388](v147);
  uint64_t v519 = (uint64_t)&v441 - v150;
  uint64_t v151 = MEMORY[0x270FA5388](v149);
  uint64_t v518 = (uint64_t)&v441 - v152;
  uint64_t v153 = MEMORY[0x270FA5388](v151);
  uint64_t v496 = (uint64_t)&v441 - v154;
  *(void *)&long long v539 = v6;
  *(void *)&long long v540 = *(void *)(v6 - 8);
  uint64_t v155 = MEMORY[0x270FA5388](v153);
  long long v157 = (char *)&v441 - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = MEMORY[0x270FA5388](v155);
  uint64_t v490 = (char *)&v441 - v159;
  uint64_t v160 = MEMORY[0x270FA5388](v158);
  uint64_t v162 = (char *)&v441 - v161;
  uint64_t v163 = MEMORY[0x270FA5388](v160);
  uint64_t v489 = (char *)&v441 - v164;
  uint64_t v165 = MEMORY[0x270FA5388](v163);
  uint64_t v493 = (char *)&v441 - v166;
  uint64_t v167 = MEMORY[0x270FA5388](v165);
  v487 = (char *)&v441 - v168;
  uint64_t v169 = MEMORY[0x270FA5388](v167);
  uint64_t v171 = (char *)&v441 - v170;
  uint64_t v172 = MEMORY[0x270FA5388](v169);
  uint64_t v174 = (char *)&v441 - v173;
  uint64_t v175 = MEMORY[0x270FA5388](v172);
  uint64_t v177 = (char *)&v441 - v176;
  uint64_t v178 = MEMORY[0x270FA5388](v175);
  uint64_t v180 = (char *)&v441 - v179;
  uint64_t v181 = MEMORY[0x270FA5388](v178);
  uint64_t v516 = (char *)&v441 - v182;
  uint64_t v183 = MEMORY[0x270FA5388](v181);
  uint64_t v491 = (char *)&v441 - v184;
  MEMORY[0x270FA5388](v183);
  uint64_t v186 = (unsigned __int8 *)&v441 - ((v185 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned __int8 *, void, void *))(v187 + 16))(v186, v538, a2);
  *(void *)&long long v538 = a2;
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v215 = v472;
      uint64_t v214 = v473;
      uint64_t v216 = v474;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v473 + 32))(v472, v186, v474);
      uint64_t v217 = v537;
      sub_24EE57880();
      FullWidthItemDescriptor.hash(into:)(v217, v216);
      return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v215, v216);
    case 2:
      long long v218 = *((_OWORD *)v186 + 11);
      long long v565 = *((_OWORD *)v186 + 10);
      long long v566 = v218;
      long long v219 = *((_OWORD *)v186 + 13);
      long long v567 = *((_OWORD *)v186 + 12);
      long long v568 = v219;
      long long v220 = *((_OWORD *)v186 + 7);
      long long v561 = *((_OWORD *)v186 + 6);
      long long v562 = v220;
      long long v221 = *((_OWORD *)v186 + 9);
      long long v563 = *((_OWORD *)v186 + 8);
      long long v564 = v221;
      long long v222 = *((_OWORD *)v186 + 3);
      long long v559 = *((_OWORD *)v186 + 2);
      v560[0] = v222;
      long long v223 = *((_OWORD *)v186 + 5);
      v560[1] = *((_OWORD *)v186 + 4);
      v560[2] = v223;
      long long v224 = *((_OWORD *)v186 + 1);
      long long v557 = *(_OWORD *)v186;
      long long v558 = v224;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      *(void *)&long long v541 = &type metadata for FullWidthStageViewLayout;
      uint64_t v225 = v539;
      *((void *)&v541 + 1) = v539;
      *(void *)&long long v542 = &type metadata for FullWidthStageViewStyle;
      *((void *)&v542 + 1) = v534;
      *(void *)&long long v543 = v534;
      *((void *)&v543 + 1) = v534;
      uint64_t v226 = v531;
      *(void *)&long long v544 = v531;
      *((void *)&v544 + 1) = v531;
      uint64_t v227 = v513;
      *(void *)&long long v545 = v513;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v229 = &v186[TupleTypeMetadata[12]];
      uint64_t v534 = v186[TupleTypeMetadata[16]];
      uint64_t v230 = (uint64_t)&v186[TupleTypeMetadata[20]];
      uint64_t v231 = (uint64_t)&v186[TupleTypeMetadata[24]];
      uint64_t v232 = (uint64_t)&v186[TupleTypeMetadata[28]];
      uint64_t v233 = &v186[TupleTypeMetadata[32]];
      uint64_t v234 = &v186[TupleTypeMetadata[36]];
      uint64_t v235 = &v186[TupleTypeMetadata[40]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v516, v229, v225);
      uint64_t v236 = v499;
      sub_24ECB04CC(v230, v499);
      sub_24ECB04CC(v231, v521);
      sub_24ECB04CC(v232, v522);
      uint64_t v237 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v530 + 32);
      v237(v508, v233, v226);
      v237(v509, v234, v226);
      uint64_t v238 = v484;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v484 + 32))(v512, v235, v227);
      sub_24EE57880();
      long long v552 = v566;
      long long v553 = v567;
      long long v554 = v568;
      long long v547 = v561;
      long long v548 = v562;
      long long v549 = v563;
      long long v550 = v564;
      long long v551 = v565;
      long long v543 = v559;
      long long v544 = v560[0];
      long long v545 = v560[1];
      long long v546 = v560[2];
      long long v541 = v557;
      long long v542 = v558;
      FullWidthStageViewLayout.hash(into:)();
      uint64_t v208 = v539;
      sub_24EE57000();
      sub_24EE57880();
      uint64_t v239 = v450;
      sub_24ECF30E4(v236, v450);
      uint64_t v240 = v536;
      uint64_t v241 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v242 = v535;
      if (v241(v239, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v243 = v533;
      }
      else
      {
        uint64_t v243 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v240 + 32))(v533, v239, v242);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v240 + 8))(v243, v242);
      }
      uint64_t v391 = v455;
      sub_24ECF30E4(v521, v455);
      if (v241(v391, 1, v242) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v240 + 32))(v243, v391, v242);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v240 + 8))(v243, v242);
      }
      uint64_t v409 = v461;
      sub_24ECF30E4(v522, v461);
      if (v241(v409, 1, v242) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v240 + 32))(v243, v409, v242);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v240 + 8))(v243, v242);
      }
      uint64_t v429 = v531;
      uint64_t v430 = v508;
      sub_24EE57440();
      uint64_t v431 = v509;
      sub_24EE57440();
      uint64_t v432 = v513;
      uint64_t v433 = v512;
      sub_24EE57440();
      (*(void (**)(char *, uint64_t))(v238 + 8))(v433, v432);
      uint64_t v434 = *(void (**)(char *, uint64_t))(v530 + 8);
      v434(v431, v429);
      v434(v430, v429);
      sub_24EC88758(v522, &qword_26B1DB9F0);
      sub_24EC88758(v521, &qword_26B1DB9F0);
      sub_24EC88758(v499, &qword_26B1DB9F0);
      uint64_t v422 = *(uint64_t (**)(char *, uint64_t))(v540 + 8);
      uint64_t v423 = v516;
      goto LABEL_118;
    case 3:
      long long v244 = *(_OWORD *)v186;
      long long v539 = *((_OWORD *)v186 + 1);
      long long v540 = v244;
      long long v532 = *((_OWORD *)v186 + 2);
      uint64_t v245 = *((void *)v186 + 6);
      uint64_t v246 = *((void *)v186 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout title description actionButton ");
      *(void *)&long long v557 = &type metadata for InfoActionCardViewLayout;
      *((void *)&v557 + 1) = v534;
      *(void *)&long long v558 = v534;
      uint64_t v247 = v531;
      *((void *)&v558 + 1) = v531;
      uint64_t v248 = (int *)swift_getTupleTypeMetadata();
      uint64_t v249 = (uint64_t)&v186[v248[16]];
      uint64_t v250 = &v186[v248[20]];
      uint64_t v251 = v492;
      sub_24ECB04CC((uint64_t)&v186[v248[12]], v492);
      sub_24ECB04CC(v249, v515);
      uint64_t v252 = v530;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v530 + 32))(v504, v250, v247);
      sub_24EE57880();
      long long v557 = v540;
      long long v558 = v539;
      long long v559 = v532;
      *(void *)&v560[0] = v245;
      *((void *)&v560[0] + 1) = v246;
      InfoActionCardViewLayout.hash(into:)();
      sub_24ECF30E4(v251, (uint64_t)v126);
      uint64_t v253 = v536;
      uint64_t v254 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v536 + 48);
      uint64_t v255 = v535;
      if (v254(v126, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v256 = v533;
      }
      else
      {
        uint64_t v256 = v533;
        (*(void (**)(char *, char *, uint64_t))(v253 + 32))(v533, v126, v255);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v253 + 8))(v256, v255);
      }
      uint64_t v392 = v448;
      sub_24ECF30E4(v515, v448);
      if (v254((char *)v392, 1, v255) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v253 + 32))(v256, v392, v255);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v253 + 8))(v256, v255);
      }
      uint64_t v410 = v531;
      uint64_t v411 = v504;
      sub_24EE57440();
      (*(void (**)(char *, uint64_t))(v252 + 8))(v411, v410);
      sub_24EC88758(v515, &qword_26B1DB9F0);
      return sub_24EC88758(v492, &qword_26B1DB9F0);
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "artwork footnote subtitle title ");
      uint64_t v257 = v539;
      *(void *)&long long v557 = v539;
      *((void *)&v557 + 1) = v534;
      *(void *)&long long v558 = v534;
      *((void *)&v558 + 1) = v534;
      uint64_t v258 = (int *)swift_getTupleTypeMetadata();
      uint64_t v259 = (uint64_t)&v186[v258[12]];
      uint64_t v260 = (uint64_t)&v186[v258[16]];
      uint64_t v261 = (uint64_t)&v186[v258[20]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v180, v186, v257);
      uint64_t v262 = v494;
      sub_24ECB04CC(v259, v494);
      sub_24ECB04CC(v260, v517);
      uint64_t v263 = v460;
      sub_24ECB04CC(v261, v460);
      sub_24EE57880();
      sub_24EE57000();
      uint64_t v264 = v447;
      sub_24ECF30E4(v262, v447);
      uint64_t v265 = v536;
      uint64_t v266 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v267 = v535;
      if (v266(v264, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v268 = v533;
      }
      else
      {
        uint64_t v268 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v265 + 32))(v533, v264, v267);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v265 + 8))(v268, v267);
      }
      uint64_t v393 = v452;
      sub_24ECF30E4(v517, v452);
      if (v266(v393, 1, v267) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v265 + 32))(v268, v393, v267);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v265 + 8))(v268, v267);
      }
      uint64_t v412 = v458;
      sub_24ECF30E4(v263, v458);
      if (v266(v412, 1, v267) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v265 + 32))(v268, v412, v267);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v265 + 8))(v268, v267);
      }
      sub_24EC88758(v263, &qword_26B1DB9F0);
      sub_24EC88758(v517, &qword_26B1DB9F0);
      sub_24EC88758(v494, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, void))(v540 + 8))(v180, v539);
    case 5:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "artwork caption displayStyle layout title ");
      uint64_t v269 = v539;
      *(void *)&long long v557 = v539;
      *((void *)&v557 + 1) = v534;
      *(void *)&long long v558 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v558 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v559 = v534;
      uint64_t v270 = (int *)swift_getTupleTypeMetadata();
      uint64_t v271 = (uint64_t)&v186[v270[12]];
      uint64_t v534 = v186[v270[16]];
      *(void *)&long long v538 = *(void *)&v186[v270[20] + 8];
      uint64_t v272 = (uint64_t)&v186[v270[24]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v177, v186, v269);
      uint64_t v273 = v495;
      sub_24ECB04CC(v271, v495);
      uint64_t v274 = v485;
      sub_24ECB04CC(v272, v485);
      sub_24EE57880();
      sub_24EE57000();
      uint64_t v275 = v449;
      sub_24ECF30E4(v273, v449);
      uint64_t v276 = v536;
      uint64_t v277 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v278 = v535;
      if (v277(v275, 1, v535) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v394 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v276 + 32))(v533, v275, v278);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        char v395 = v394;
        uint64_t v274 = v485;
        (*(void (**)(char *, uint64_t))(v276 + 8))(v395, v278);
      }
      sub_24EE57880();
      sub_24EE578A0();
      sub_24EE578A0();
      uint64_t v396 = v457;
      sub_24ECF30E4(v274, v457);
      if (v277(v396, 1, v278) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v413 = v536;
        uint64_t v414 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v533, v396, v278);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v413 + 8))(v414, v278);
      }
      sub_24EC88758(v274, &qword_26B1DB9F0);
      sub_24EC88758(v495, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, void))(v540 + 8))(v177, v539);
    case 6:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout artwork title subtitle ");
      *(void *)&long long v557 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v279 = v539;
      *((void *)&v557 + 1) = v539;
      *(void *)&long long v558 = v534;
      *((void *)&v558 + 1) = v534;
      uint64_t v280 = (int *)swift_getTupleTypeMetadata();
      uint64_t v281 = (uint64_t)&v186[v280[16]];
      uint64_t v282 = (uint64_t)&v186[v280[20]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v174, &v186[v280[12]], v279);
      uint64_t v283 = v497;
      sub_24ECB04CC(v281, v497);
      sub_24ECB04CC(v282, v520);
      sub_24EE57880();
      sub_24EC8A508();
      sub_24EE578A0();
      sub_24EE57000();
      uint64_t v284 = v453;
      sub_24ECF30E4(v283, v453);
      uint64_t v285 = v536;
      uint64_t v286 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v287 = v535;
      if (v286(v284, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v288 = v533;
      }
      else
      {
        uint64_t v288 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v285 + 32))(v533, v284, v287);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v285 + 8))(v288, v287);
      }
      uint64_t v397 = v459;
      sub_24ECF30E4(v520, v459);
      if (v286(v397, 1, v287) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v285 + 32))(v288, v397, v287);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v285 + 8))(v288, v287);
      }
      sub_24EC88758(v520, &qword_26B1DB9F0);
      sub_24EC88758(v497, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, uint64_t))(v540 + 8))(v174, v279);
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "artwork caption displayStyle layout title ");
      uint64_t v289 = v539;
      *(void *)&long long v557 = v539;
      *((void *)&v557 + 1) = v534;
      *(void *)&long long v558 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v558 + 1) = &type metadata for DynamicBrickViewLayout;
      *(void *)&long long v559 = v534;
      uint64_t v290 = (int *)swift_getTupleTypeMetadata();
      uint64_t v291 = (uint64_t)&v186[v290[12]];
      uint64_t v534 = v186[v290[16]];
      *(void *)&long long v538 = *(void *)&v186[v290[20] + 8];
      uint64_t v292 = (uint64_t)&v186[v290[24]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v171, v186, v289);
      uint64_t v293 = v498;
      sub_24ECB04CC(v291, v498);
      uint64_t v294 = v486;
      sub_24ECB04CC(v292, v486);
      sub_24EE57880();
      sub_24EE57000();
      uint64_t v295 = v454;
      sub_24ECF30E4(v293, v454);
      uint64_t v296 = v536;
      uint64_t v297 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v298 = v535;
      if (v297(v295, 1, v535) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v398 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 32))(v533, v295, v298);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        uint64_t v399 = v398;
        uint64_t v294 = v486;
        (*(void (**)(char *, uint64_t))(v296 + 8))(v399, v298);
      }
      sub_24EE57880();
      sub_24EE578A0();
      sub_24EE578A0();
      uint64_t v400 = v462;
      sub_24ECF30E4(v294, v462);
      if (v297(v400, 1, v298) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v415 = v536;
        uint64_t v416 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v533, v400, v298);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v415 + 8))(v416, v298);
      }
      sub_24EC88758(v294, &qword_26B1DB9F0);
      sub_24EC88758(v498, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, void))(v540 + 8))(v171, v539);
    case 8:
      long long v538 = *(_OWORD *)v186;
      uint64_t v371 = *((void *)v186 + 2);
      uint64_t v372 = *((void *)v186 + 3);
      long long v373 = *((_OWORD *)v186 + 2);
      uint64_t v374 = *((void *)v186 + 6);
      long long v530 = *(_OWORD *)(v186 + 56);
      long long v531 = v373;
      long long v529 = *(_OWORD *)(v186 + 72);
      uint64_t v375 = *((void *)v186 + 11);
      uint64_t v376 = *((void *)v186 + 12);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout artwork title subtitle caption ");
      *(void *)&long long v557 = &type metadata for StandardCardViewLayout;
      uint64_t v377 = v539;
      *((void *)&v557 + 1) = v539;
      *(void *)&long long v558 = v534;
      *((void *)&v558 + 1) = v534;
      *(void *)&long long v559 = v534;
      uint64_t v378 = (int *)swift_getTupleTypeMetadata();
      uint64_t v379 = (uint64_t)&v186[v378[16]];
      uint64_t v380 = (uint64_t)&v186[v378[20]];
      uint64_t v381 = (uint64_t)&v186[v378[24]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v487, &v186[v378[12]], v377);
      uint64_t v382 = v488;
      sub_24ECB04CC(v379, v488);
      sub_24ECB04CC(v380, v514);
      uint64_t v383 = v445;
      sub_24ECB04CC(v381, v445);
      sub_24EE57880();
      long long v557 = v538;
      *(void *)&long long v558 = v371;
      *((void *)&v558 + 1) = v372;
      long long v559 = v531;
      *(void *)&v560[0] = v374;
      *(_OWORD *)((char *)v560 + 8) = v530;
      *(_OWORD *)((char *)&v560[1] + 8) = v529;
      *((void *)&v560[2] + 1) = v375;
      *(void *)&long long v561 = v376;
      StandardCardViewLayout.hash(into:)();
      sub_24EE57000();
      uint64_t v384 = v442;
      sub_24ECF30E4(v382, v442);
      uint64_t v385 = v536;
      uint64_t v386 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v387 = v535;
      int v388 = v386(v384, 1, v535);
      uint64_t v389 = v533;
      if (v388 == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v385 + 32))(v533, v384, v387);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v385 + 8))(v389, v387);
      }
      uint64_t v407 = v443;
      sub_24ECF30E4(v514, v443);
      if (v386(v407, 1, v387) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v385 + 32))(v389, v407, v387);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v385 + 8))(v389, v387);
      }
      uint64_t v424 = v444;
      sub_24ECF30E4(v383, v444);
      if (v386(v424, 1, v387) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v385 + 32))(v389, v424, v387);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v385 + 8))(v389, v387);
      }
      sub_24EC88758(v383, &qword_26B1DB9F0);
      sub_24EC88758(v514, &qword_26B1DB9F0);
      sub_24EC88758(v488, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, uint64_t))(v540 + 8))(v487, v377);
    case 9:
      long long v299 = *((_OWORD *)v186 + 7);
      long long v561 = *((_OWORD *)v186 + 6);
      long long v562 = v299;
      long long v300 = *((_OWORD *)v186 + 9);
      long long v563 = *((_OWORD *)v186 + 8);
      long long v564 = v300;
      long long v301 = *((_OWORD *)v186 + 3);
      long long v559 = *((_OWORD *)v186 + 2);
      v560[0] = v301;
      long long v302 = *((_OWORD *)v186 + 5);
      v560[1] = *((_OWORD *)v186 + 4);
      v560[2] = v302;
      long long v303 = *((_OWORD *)v186 + 1);
      long long v557 = *(_OWORD *)v186;
      long long v558 = v303;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
      *(void *)&long long v541 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v304 = v539;
      *((void *)&v541 + 1) = v539;
      *(void *)&long long v542 = v534;
      *((void *)&v542 + 1) = v534;
      *(void *)&long long v543 = v534;
      *((void *)&v543 + 1) = v534;
      uint64_t v305 = v531;
      *(void *)&long long v544 = v531;
      uint64_t v306 = (int *)swift_getTupleTypeMetadata();
      uint64_t v307 = &v186[v306[12]];
      uint64_t v308 = (uint64_t)&v186[v306[16]];
      uint64_t v309 = (uint64_t)&v186[v306[20]];
      uint64_t v310 = (uint64_t)&v186[v306[24]];
      uint64_t v311 = (uint64_t)&v186[v306[28]];
      uint64_t v312 = &v186[v306[32]];
      uint64_t v208 = v304;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v493, v307, v304);
      uint64_t v313 = v502;
      sub_24ECB04CC(v308, v502);
      sub_24ECB04CC(v309, v526);
      sub_24ECB04CC(v310, v527);
      sub_24ECB04CC(v311, v528);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v530 + 32))(v510, v312, v305);
      sub_24EE57880();
      long long v547 = v561;
      long long v548 = v562;
      long long v549 = v563;
      long long v550 = v564;
      long long v543 = v559;
      long long v544 = v560[0];
      long long v545 = v560[1];
      long long v546 = v560[2];
      long long v541 = v557;
      long long v542 = v558;
      StandardHorizontalStackViewLayout.hash(into:)();
      sub_24EE57000();
      uint64_t v314 = v463;
      sub_24ECF30E4(v313, v463);
      uint64_t v315 = v536;
      uint64_t v316 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v317 = v535;
      if (v316(v314, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v318 = v533;
      }
      else
      {
        uint64_t v318 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v315 + 32))(v533, v314, v317);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v315 + 8))(v318, v317);
      }
      uint64_t v401 = v468;
      sub_24ECF30E4(v526, v468);
      if (v316(v401, 1, v317) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v315 + 32))(v318, v401, v317);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v315 + 8))(v318, v317);
      }
      uint64_t v417 = v475;
      sub_24ECF30E4(v527, v475);
      if (v316(v417, 1, v317) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v315 + 32))(v318, v417, v317);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v315 + 8))(v318, v317);
      }
      uint64_t v435 = v481;
      sub_24ECF30E4(v528, v481);
      if (v316(v435, 1, v317) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v315 + 32))(v318, v435, v317);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v315 + 8))(v318, v317);
      }
      uint64_t v439 = v531;
      uint64_t v440 = v510;
      sub_24EE57440();
      (*(void (**)(char *, uint64_t))(v530 + 8))(v440, v439);
      sub_24EC88758(v528, &qword_26B1DB9F0);
      sub_24EC88758(v527, &qword_26B1DB9F0);
      sub_24EC88758(v526, &qword_26B1DB9F0);
      sub_24EC88758(v502, &qword_26B1DB9F0);
      uint64_t v422 = *(uint64_t (**)(char *, uint64_t))(v540 + 8);
      uint64_t v423 = v493;
      goto LABEL_118;
    case 10:
      LODWORD(v538) = *v186;
      uint64_t v319 = *((void *)v186 + 1);
      uint64_t v320 = *((void *)v186 + 2);
      uint64_t v321 = *((void *)v186 + 3);
      unsigned __int8 v322 = v186[32];
      uint64_t v323 = *((void *)v186 + 5);
      *(void *)&long long v531 = *((void *)v186 + 6);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout artwork title subtitle caption ");
      *(void *)&long long v557 = &type metadata for StandardVerticalStackViewLayout;
      uint64_t v324 = v539;
      *((void *)&v557 + 1) = v539;
      *(void *)&long long v558 = v534;
      *((void *)&v558 + 1) = v534;
      *(void *)&long long v559 = v534;
      long long v325 = (int *)swift_getTupleTypeMetadata();
      uint64_t v326 = (uint64_t)&v186[v325[16]];
      uint64_t v327 = (uint64_t)&v186[v325[20]];
      uint64_t v328 = (uint64_t)&v186[v325[24]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v489, &v186[v325[12]], v324);
      uint64_t v329 = v501;
      sub_24ECB04CC(v326, v501);
      sub_24ECB04CC(v327, v524);
      sub_24ECB04CC(v328, v525);
      sub_24EE57880();
      LOBYTE(v557) = v538;
      *((void *)&v557 + 1) = v319;
      *(void *)&long long v558 = v320;
      *((void *)&v558 + 1) = v321;
      LOBYTE(v559) = v322;
      *((void *)&v559 + 1) = v323;
      *(void *)&v560[0] = v531;
      StandardVerticalStackViewLayout.hash(into:)();
      sub_24EE57000();
      uint64_t v330 = v464;
      sub_24ECF30E4(v329, v464);
      uint64_t v331 = v536;
      uint64_t v332 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v333 = v535;
      if (v332(v330, 1, v535) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        char v402 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v331 + 32))(v533, v330, v333);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v331 + 8))(v402, v333);
      }
      uint64_t v403 = v469;
      sub_24ECF30E4(v524, v469);
      if (v332(v403, 1, v333) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v418 = v536;
        uint64_t v419 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v533, v403, v333);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v418 + 8))(v419, v333);
      }
      uint64_t v420 = v476;
      sub_24ECF30E4(v525, v476);
      if (v332(v420, 1, v333) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v436 = v536;
        uint64_t v437 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v533, v420, v333);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v436 + 8))(v437, v333);
      }
      sub_24EC88758(v525, &qword_26B1DB9F0);
      sub_24EC88758(v524, &qword_26B1DB9F0);
      sub_24EC88758(v501, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, uint64_t))(v540 + 8))(v489, v324);
    case 11:
      long long v538 = *(_OWORD *)v186;
      uint64_t v334 = *((void *)v186 + 2);
      unsigned __int8 v335 = v186[24];
      long long v531 = *((_OWORD *)v186 + 2);
      uint64_t v336 = *((void *)v186 + 6);
      uint64_t v337 = *((void *)v186 + 7);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout artwork title overlay ");
      *(void *)&long long v557 = &type metadata for TallCardViewLayout;
      uint64_t v338 = v539;
      *((void *)&v557 + 1) = v539;
      *(void *)&long long v558 = v534;
      *((void *)&v558 + 1) = &type metadata for Overlay;
      uint64_t v339 = swift_getTupleTypeMetadata();
      uint64_t v340 = (uint64_t)&v186[*(int *)(v339 + 64)];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v162, &v186[*(int *)(v339 + 48)], v338);
      uint64_t v341 = v467;
      sub_24ECB04CC(v340, v467);
      sub_24EE57880();
      long long v557 = v538;
      *(void *)&long long v558 = v334;
      BYTE8(v558) = v335;
      long long v559 = v531;
      *(void *)&v560[0] = v336;
      *((void *)&v560[0] + 1) = v337;
      TallCardViewLayout.hash(into:)();
      sub_24EE57000();
      uint64_t v342 = v465;
      sub_24ECF30E4(v341, v465);
      uint64_t v343 = v536;
      uint64_t v344 = v535;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48))(v342, 1, v535) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        uint64_t v404 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v343 + 32))(v533, v342, v344);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v343 + 8))(v404, v344);
      }
      sub_24EE57880();
      sub_24EC88758(v341, &qword_26B1DB9F0);
      return (*(uint64_t (**)(char *, uint64_t))(v540 + 8))(v162, v338);
    case 12:
      long long v345 = *((_OWORD *)v186 + 5);
      v560[1] = *((_OWORD *)v186 + 4);
      v560[2] = v345;
      long long v346 = *((_OWORD *)v186 + 7);
      long long v561 = *((_OWORD *)v186 + 6);
      long long v562 = v346;
      long long v347 = *((_OWORD *)v186 + 1);
      long long v557 = *(_OWORD *)v186;
      long long v558 = v347;
      long long v348 = *((_OWORD *)v186 + 3);
      long long v559 = *((_OWORD *)v186 + 2);
      v560[0] = v348;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 48, "layout artwork title subtitle caption ");
      *(void *)&long long v541 = &type metadata for VerticalStackCardLayout;
      uint64_t v349 = v539;
      *((void *)&v541 + 1) = v539;
      *(void *)&long long v542 = v534;
      *((void *)&v542 + 1) = v534;
      *(void *)&long long v543 = v534;
      long long v350 = (int *)swift_getTupleTypeMetadata();
      uint64_t v351 = (uint64_t)&v186[v350[16]];
      uint64_t v352 = (uint64_t)&v186[v350[20]];
      uint64_t v353 = (uint64_t)&v186[v350[24]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v490, &v186[v350[12]], v349);
      uint64_t v354 = v503;
      sub_24ECB04CC(v351, v503);
      sub_24ECB04CC(v352, v529);
      uint64_t v355 = v483;
      sub_24ECB04CC(v353, v483);
      sub_24EE57880();
      long long v545 = v560[1];
      long long v546 = v560[2];
      long long v547 = v561;
      long long v548 = v562;
      long long v541 = v557;
      long long v542 = v558;
      long long v543 = v559;
      long long v544 = v560[0];
      VerticalStackCardLayout.hash(into:)();
      sub_24EE57000();
      uint64_t v356 = v470;
      sub_24ECF30E4(v354, v470);
      uint64_t v357 = v536;
      uint64_t v358 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v359 = v535;
      if (v358(v356, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v360 = v533;
      }
      else
      {
        uint64_t v360 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v357 + 32))(v533, v356, v359);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v357 + 8))(v360, v359);
      }
      uint64_t v405 = v477;
      sub_24ECF30E4(v529, v477);
      if (v358(v405, 1, v359) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v357 + 32))(v360, v405, v359);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v357 + 8))(v360, v359);
      }
      uint64_t v421 = v482;
      sub_24ECF30E4(v355, v482);
      if (v358(v421, 1, v359) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v357 + 32))(v360, v421, v359);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v357 + 8))(v360, v359);
      }
      sub_24EC88758(v355, &qword_26B1DB9F0);
      sub_24EC88758(v529, &qword_26B1DB9F0);
      sub_24EC88758(v503, &qword_26B1DB9F0);
      uint64_t v422 = *(uint64_t (**)(char *, uint64_t))(v540 + 8);
      uint64_t v423 = v490;
      goto LABEL_113;
    case 13:
      uint64_t v215 = v478;
      uint64_t v214 = v479;
      uint64_t v216 = v480;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v479 + 32))(v478, v186, v480);
      sub_24EE57880();
      sub_24EE57000();
      return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v215, v216);
    case 14:
      uint64_t v349 = v539;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v363 = (uint64_t)&v186[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v364 = (uint64_t)&v186[*(int *)(TupleTypeMetadata3 + 64)];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v157, v186, v349);
      uint64_t v365 = v500;
      sub_24ECB04CC(v363, v500);
      sub_24ECB04CC(v364, v523);
      sub_24EE57880();
      sub_24EE57000();
      uint64_t v366 = v466;
      sub_24ECF30E4(v365, v466);
      uint64_t v367 = v536;
      uint64_t v368 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v369 = v535;
      if (v368(v366, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v370 = v533;
      }
      else
      {
        uint64_t v370 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v367 + 32))(v533, v366, v369);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v367 + 8))(v370, v369);
      }
      uint64_t v406 = v471;
      sub_24ECF30E4(v523, v471);
      if (v368(v406, 1, v369) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v367 + 32))(v370, v406, v369);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v367 + 8))(v370, v369);
      }
      sub_24EC88758(v523, &qword_26B1DB9F0);
      sub_24EC88758(v500, &qword_26B1DB9F0);
      uint64_t v422 = *(uint64_t (**)(char *, uint64_t))(v540 + 8);
      uint64_t v423 = v157;
LABEL_113:
      uint64_t v438 = v349;
      break;
    default:
      uint64_t v570 = *((void *)v186 + 30);
      long long v189 = *((_OWORD *)v186 + 13);
      long long v567 = *((_OWORD *)v186 + 12);
      long long v568 = v189;
      long long v569 = *((_OWORD *)v186 + 14);
      long long v190 = *((_OWORD *)v186 + 9);
      long long v563 = *((_OWORD *)v186 + 8);
      long long v564 = v190;
      long long v191 = *((_OWORD *)v186 + 11);
      long long v565 = *((_OWORD *)v186 + 10);
      long long v566 = v191;
      long long v192 = *((_OWORD *)v186 + 5);
      v560[1] = *((_OWORD *)v186 + 4);
      v560[2] = v192;
      long long v193 = *((_OWORD *)v186 + 7);
      long long v561 = *((_OWORD *)v186 + 6);
      long long v562 = v193;
      long long v194 = *((_OWORD *)v186 + 1);
      long long v557 = *(_OWORD *)v186;
      long long v558 = v194;
      long long v195 = *((_OWORD *)v186 + 3);
      long long v559 = *((_OWORD *)v186 + 2);
      v560[0] = v195;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v441 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      *(void *)&long long v541 = &type metadata for ActionCardViewLayout;
      uint64_t v196 = v539;
      *((void *)&v541 + 1) = v539;
      *(void *)&long long v542 = &type metadata for ActionCardViewStyle;
      *((void *)&v542 + 1) = v534;
      *(void *)&long long v543 = v534;
      *((void *)&v543 + 1) = v534;
      uint64_t v197 = v511;
      *(void *)&long long v544 = v511;
      uint64_t v198 = v531;
      *((void *)&v544 + 1) = v531;
      uint64_t v199 = (int *)swift_getTupleTypeMetadata();
      uint64_t v200 = &v186[v199[12]];
      uint64_t v534 = v186[v199[16]];
      uint64_t v201 = (uint64_t)&v186[v199[20]];
      uint64_t v202 = (uint64_t)&v186[v199[24]];
      uint64_t v203 = (uint64_t)&v186[v199[28]];
      uint64_t v204 = &v186[v199[32]];
      uint64_t v205 = &v186[v199[36]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v540 + 32))(v491, v200, v196);
      uint64_t v206 = v496;
      sub_24ECB04CC(v201, v496);
      sub_24ECB04CC(v202, v518);
      sub_24ECB04CC(v203, v519);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v507 + 32))(v505, v204, v197);
      uint64_t v207 = v530;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v530 + 32))(v506, v205, v198);
      sub_24EE57880();
      long long v553 = v567;
      long long v554 = v568;
      long long v555 = v569;
      uint64_t v556 = v570;
      long long v549 = v563;
      long long v550 = v564;
      long long v551 = v565;
      long long v552 = v566;
      long long v545 = v560[1];
      long long v546 = v560[2];
      long long v547 = v561;
      long long v548 = v562;
      long long v541 = v557;
      long long v542 = v558;
      long long v543 = v559;
      long long v544 = v560[0];
      ActionCardViewLayout.hash(into:)();
      uint64_t v208 = v539;
      sub_24EE57000();
      sub_24EE57880();
      uint64_t v209 = v446;
      sub_24ECF30E4(v206, v446);
      uint64_t v210 = v536;
      uint64_t v211 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v536 + 48);
      uint64_t v212 = v535;
      if (v211(v209, 1, v535) == 1)
      {
        sub_24EE57890();
        uint64_t v213 = v533;
      }
      else
      {
        uint64_t v213 = v533;
        (*(void (**)(char *, uint64_t, uint64_t))(v210 + 32))(v533, v209, v212);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v210 + 8))(v213, v212);
      }
      uint64_t v390 = v451;
      sub_24ECF30E4(v518, v451);
      if (v211(v390, 1, v212) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v210 + 32))(v213, v390, v212);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v210 + 8))(v213, v212);
      }
      uint64_t v408 = v456;
      sub_24ECF30E4(v519, v456);
      if (v211(v408, 1, v212) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v210 + 32))(v213, v408, v212);
        sub_24EE57890();
        sub_24ECF314C(&qword_26B1DB9E0);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v210 + 8))(v213, v212);
      }
      uint64_t v425 = v505;
      uint64_t v426 = v511;
      sub_24EE57000();
      uint64_t v427 = v531;
      uint64_t v428 = v506;
      sub_24EE57440();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v428, v427);
      (*(void (**)(char *, uint64_t))(v507 + 8))(v425, v426);
      sub_24EC88758(v519, &qword_26B1DB9F0);
      sub_24EC88758(v518, &qword_26B1DB9F0);
      sub_24EC88758(v496, &qword_26B1DB9F0);
      uint64_t v422 = *(uint64_t (**)(char *, uint64_t))(v540 + 8);
      uint64_t v423 = v491;
LABEL_118:
      uint64_t v438 = v208;
      break;
  }
  return v422(v423, v438);
}

uint64_t static CanvasItemContent.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v1666 = a2;
  uint64_t v1667 = a1;
  uint64_t v1619 = *(void *)(a5 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a1);
  uint64_t v1536 = (char *)&v1447 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v1448 = (char *)&v1447 - v16;
  uint64_t v17 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v1449 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  v1452 = (char *)&v1447 - v19;
  v1654 = (char *)v17;
  uint64_t v1653 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v1450 = (char *)&v1447 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v1538 = (char *)&v1447 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v1618 = (char *)&v1447 - v24;
  uint64_t v1606 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v1605 = *(void *)(v1606 - 8);
  MEMORY[0x270FA5388](v1606);
  uint64_t v1535 = (char *)&v1447 - v25;
  uint64_t v26 = sub_24EE57430();
  uint64_t v1509 = swift_getTupleTypeMetadata2();
  uint64_t v1479 = *(void *)(v1509 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v1509);
  uint64_t v1461 = (char *)&v1447 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v1523 = (char *)&v1447 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v1457 = (char *)&v1447 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v1463 = (char *)&v1447 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v1458 = (char *)&v1447 - v35;
  uint64_t v1658 = sub_24EE55880();
  uint64_t v1657 = *(void *)(v1658 - 8);
  MEMORY[0x270FA5388](v1658);
  uint64_t v1569 = (char *)&v1447 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1656 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DBA00);
  uint64_t v37 = MEMORY[0x270FA5388](v1656);
  uint64_t v1511 = (uint64_t)&v1447 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v1532 = (uint64_t)&v1447 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v1492 = (uint64_t)&v1447 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v1500 = (uint64_t)&v1447 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v1521 = (uint64_t)&v1447 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v1526 = (uint64_t)&v1447 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v1491 = (uint64_t)&v1447 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v1499 = (uint64_t)&v1447 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v1520 = (uint64_t)&v1447 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v1462 = (uint64_t)&v1447 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v1480 = (uint64_t)&v1447 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v1501 = (uint64_t)&v1447 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v1524 = (uint64_t)&v1447 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v1490 = (uint64_t)&v1447 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v1498 = (uint64_t)&v1447 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v1519 = (uint64_t)&v1447 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v1487 = (uint64_t)&v1447 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v1530 = (uint64_t)&v1447 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v1510 = (uint64_t)&v1447 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v1518 = (uint64_t)&v1447 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v1486 = (uint64_t)&v1447 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  uint64_t v1529 = (uint64_t)&v1447 - v80;
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v1494 = (uint64_t)&v1447 - v82;
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v1512 = (uint64_t)&v1447 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  uint64_t v1531 = (uint64_t)&v1447 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  uint64_t v1525 = (uint64_t)&v1447 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  uint64_t v1528 = (uint64_t)&v1447 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  uint64_t v1469 = (uint64_t)&v1447 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  uint64_t v1488 = (uint64_t)&v1447 - v94;
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  uint64_t v1508 = (uint64_t)&v1447 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  uint64_t v1464 = (uint64_t)&v1447 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  uint64_t v1478 = (uint64_t)&v1447 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  uint64_t v1497 = (uint64_t)&v1447 - v102;
  uint64_t v1661 = v26;
  uint64_t v1660 = *(void **)(v26 - 8);
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  uint64_t v1456 = (char *)&v1447 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  v1560 = (char *)&v1447 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  uint64_t v1622 = (char *)&v1447 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v1489 = (char *)&v1447 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  uint64_t v1548 = (char *)&v1447 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  uint64_t v1592 = (char *)&v1447 - v114;
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  uint64_t v1453 = (char *)&v1447 - v116;
  uint64_t v117 = MEMORY[0x270FA5388](v115);
  uint64_t v1455 = (char *)&v1447 - v118;
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  uint64_t v1577 = (char *)&v1447 - v120;
  uint64_t v121 = MEMORY[0x270FA5388](v119);
  uint64_t v1578 = (char *)&v1447 - v122;
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  uint64_t v1621 = (char *)&v1447 - v124;
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  uint64_t v1623 = (char *)&v1447 - v126;
  uint64_t v127 = MEMORY[0x270FA5388](v125);
  v1454 = (char *)&v1447 - v128;
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  uint64_t v1534 = (char *)&v1447 - v130;
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  uint64_t v1598 = (char *)&v1447 - v132;
  v1652.f64[0] = *(float64_t *)(a3 - 8);
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  uint64_t v1470 = (char *)&v1447 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = MEMORY[0x270FA5388](v133);
  uint64_t v1533 = (char *)&v1447 - v136;
  MEMORY[0x270FA5388](v135);
  uint64_t v1582 = (char *)&v1447 - v137;
  *(void *)&v1665.f64[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v138 = MEMORY[0x270FA5388](*(void *)&v1665.f64[0]);
  uint64_t v1496 = (uint64_t)&v1447 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = MEMORY[0x270FA5388](v138);
  uint64_t v1517 = (uint64_t)&v1447 - v141;
  uint64_t v142 = MEMORY[0x270FA5388](v140);
  uint64_t v1596 = (uint64_t)&v1447 - v143;
  uint64_t v144 = MEMORY[0x270FA5388](v142);
  uint64_t v1575 = (uint64_t)&v1447 - v145;
  uint64_t v146 = MEMORY[0x270FA5388](v144);
  uint64_t v1597 = (uint64_t)&v1447 - v147;
  uint64_t v148 = MEMORY[0x270FA5388](v146);
  uint64_t v1651 = (unsigned __int8 *)&v1447 - v149;
  uint64_t v150 = MEMORY[0x270FA5388](v148);
  uint64_t v1468 = (uint64_t)&v1447 - v151;
  uint64_t v152 = MEMORY[0x270FA5388](v150);
  uint64_t v1485 = (uint64_t)&v1447 - v153;
  uint64_t v154 = MEMORY[0x270FA5388](v152);
  uint64_t v1507 = (uint64_t)&v1447 - v155;
  uint64_t v156 = MEMORY[0x270FA5388](v154);
  uint64_t v1562 = (uint64_t)&v1447 - v157;
  uint64_t v158 = MEMORY[0x270FA5388](v156);
  uint64_t v1568 = (uint64_t)&v1447 - v159;
  uint64_t v160 = MEMORY[0x270FA5388](v158);
  uint64_t v1542 = (uint64_t)&v1447 - v161;
  uint64_t v162 = MEMORY[0x270FA5388](v160);
  uint64_t v1587 = (uint64_t)&v1447 - v163;
  uint64_t v164 = MEMORY[0x270FA5388](v162);
  uint64_t v1635 = (uint64_t)&v1447 - v165;
  uint64_t v166 = MEMORY[0x270FA5388](v164);
  uint64_t v1556 = (uint64_t)&v1447 - v167;
  uint64_t v168 = MEMORY[0x270FA5388](v166);
  uint64_t v1506 = (uint64_t)&v1447 - v169;
  uint64_t v170 = MEMORY[0x270FA5388](v168);
  uint64_t v1546 = (uint64_t)&v1447 - v171;
  uint64_t v172 = MEMORY[0x270FA5388](v170);
  uint64_t v1547 = (uint64_t)&v1447 - v173;
  uint64_t v174 = MEMORY[0x270FA5388](v172);
  uint64_t v1467 = (uint64_t)&v1447 - v175;
  uint64_t v176 = MEMORY[0x270FA5388](v174);
  uint64_t v1484 = (uint64_t)&v1447 - v177;
  uint64_t v178 = MEMORY[0x270FA5388](v176);
  uint64_t v1504 = (uint64_t)&v1447 - v179;
  uint64_t v180 = MEMORY[0x270FA5388](v178);
  uint64_t v1563 = (uint64_t)&v1447 - v181;
  uint64_t v182 = MEMORY[0x270FA5388](v180);
  uint64_t v1567 = (uint64_t)&v1447 - v183;
  uint64_t v184 = MEMORY[0x270FA5388](v182);
  uint64_t v1541 = (uint64_t)&v1447 - v185;
  uint64_t v186 = MEMORY[0x270FA5388](v184);
  uint64_t v1629 = (uint64_t)&v1447 - v187;
  uint64_t v188 = MEMORY[0x270FA5388](v186);
  uint64_t v1634 = (uint64_t)&v1447 - v189;
  uint64_t v190 = MEMORY[0x270FA5388](v188);
  uint64_t v1555 = (uint64_t)&v1447 - v191;
  uint64_t v192 = MEMORY[0x270FA5388](v190);
  uint64_t v1459 = (uint64_t)&v1447 - v193;
  uint64_t v194 = MEMORY[0x270FA5388](v192);
  uint64_t v1466 = (uint64_t)&v1447 - v195;
  uint64_t v196 = MEMORY[0x270FA5388](v194);
  uint64_t v1522 = (char *)&v1447 - v197;
  uint64_t v198 = MEMORY[0x270FA5388](v196);
  uint64_t v1505 = (uint64_t)&v1447 - v199;
  uint64_t v200 = MEMORY[0x270FA5388](v198);
  uint64_t v1576 = (uint64_t)&v1447 - v201;
  uint64_t v202 = MEMORY[0x270FA5388](v200);
  uint64_t v1585 = (uint64_t)&v1447 - v203;
  uint64_t v204 = MEMORY[0x270FA5388](v202);
  uint64_t v1565 = (uint64_t)&v1447 - v205;
  uint64_t v206 = MEMORY[0x270FA5388](v204);
  uint64_t v1550 = (uint64_t)&v1447 - v207;
  uint64_t v208 = MEMORY[0x270FA5388](v206);
  uint64_t v1624 = (uint64_t)&v1447 - v209;
  uint64_t v210 = MEMORY[0x270FA5388](v208);
  uint64_t v1628 = (uint64_t)&v1447 - v211;
  uint64_t v212 = MEMORY[0x270FA5388](v210);
  uint64_t v1631 = (uint64_t)&v1447 - v213;
  uint64_t v214 = MEMORY[0x270FA5388](v212);
  uint64_t v1632 = (uint64_t)&v1447 - v215;
  uint64_t v216 = MEMORY[0x270FA5388](v214);
  uint64_t v1474 = (char *)&v1447 - v217;
  uint64_t v218 = MEMORY[0x270FA5388](v216);
  uint64_t v1483 = (uint64_t)&v1447 - v219;
  uint64_t v220 = MEMORY[0x270FA5388](v218);
  uint64_t v1503 = (uint64_t)&v1447 - v221;
  uint64_t v222 = MEMORY[0x270FA5388](v220);
  uint64_t v1561 = (uint64_t)&v1447 - v223;
  uint64_t v224 = MEMORY[0x270FA5388](v222);
  uint64_t v1566 = (uint64_t)&v1447 - v225;
  uint64_t v226 = MEMORY[0x270FA5388](v224);
  uint64_t v1540 = (uint64_t)&v1447 - v227;
  uint64_t v228 = MEMORY[0x270FA5388](v226);
  uint64_t v1586 = (uint64_t)&v1447 - v229;
  uint64_t v230 = MEMORY[0x270FA5388](v228);
  uint64_t v1604 = (uint64_t)&v1447 - v231;
  uint64_t v232 = MEMORY[0x270FA5388](v230);
  uint64_t v1554 = (uint64_t)&v1447 - v233;
  uint64_t v234 = MEMORY[0x270FA5388](v232);
  uint64_t v1477 = (uint64_t)&v1447 - v235;
  uint64_t v236 = MEMORY[0x270FA5388](v234);
  uint64_t v1516 = (uint64_t)&v1447 - v237;
  uint64_t v238 = MEMORY[0x270FA5388](v236);
  uint64_t v1581 = (uint64_t)&v1447 - v239;
  uint64_t v240 = MEMORY[0x270FA5388](v238);
  uint64_t v1572 = (uint64_t)&v1447 - v241;
  uint64_t v242 = MEMORY[0x270FA5388](v240);
  uint64_t v1574 = (uint64_t)&v1447 - v243;
  uint64_t v244 = MEMORY[0x270FA5388](v242);
  uint64_t v1648 = (uint64_t)&v1447 - v245;
  uint64_t v246 = MEMORY[0x270FA5388](v244);
  uint64_t v1482 = (uint64_t)&v1447 - v247;
  uint64_t v248 = MEMORY[0x270FA5388](v246);
  uint64_t v1502 = (uint64_t)&v1447 - v249;
  uint64_t v250 = MEMORY[0x270FA5388](v248);
  uint64_t v1543 = (uint64_t)&v1447 - v251;
  uint64_t v252 = MEMORY[0x270FA5388](v250);
  uint64_t v1544 = (uint64_t)&v1447 - v253;
  uint64_t v254 = MEMORY[0x270FA5388](v252);
  uint64_t v1603 = (uint64_t)&v1447 - v255;
  uint64_t v256 = MEMORY[0x270FA5388](v254);
  uint64_t v1643 = (uint64_t)&v1447 - v257;
  uint64_t v258 = MEMORY[0x270FA5388](v256);
  uint64_t v1475 = (uint64_t)&v1447 - v259;
  uint64_t v260 = MEMORY[0x270FA5388](v258);
  uint64_t v1515 = (uint64_t)&v1447 - v261;
  uint64_t v262 = MEMORY[0x270FA5388](v260);
  uint64_t v1580 = (uint64_t)&v1447 - v263;
  uint64_t v264 = MEMORY[0x270FA5388](v262);
  uint64_t v1571 = (uint64_t)&v1447 - v265;
  uint64_t v266 = MEMORY[0x270FA5388](v264);
  uint64_t v1573 = (uint64_t)&v1447 - v267;
  uint64_t v268 = MEMORY[0x270FA5388](v266);
  uint64_t v1647 = (uint64_t)&v1447 - v269;
  uint64_t v270 = MEMORY[0x270FA5388](v268);
  uint64_t v1476 = (uint64_t)&v1447 - v271;
  uint64_t v272 = MEMORY[0x270FA5388](v270);
  uint64_t v1527 = (char *)&v1447 - v273;
  uint64_t v274 = MEMORY[0x270FA5388](v272);
  uint64_t v1514 = (uint64_t)&v1447 - v275;
  uint64_t v276 = MEMORY[0x270FA5388](v274);
  uint64_t v1588 = (uint64_t)&v1447 - v277;
  uint64_t v278 = MEMORY[0x270FA5388](v276);
  uint64_t v1600 = (uint64_t)&v1447 - v279;
  uint64_t v280 = MEMORY[0x270FA5388](v278);
  uint64_t v1570 = (uint64_t)&v1447 - v281;
  uint64_t v282 = MEMORY[0x270FA5388](v280);
  uint64_t v1589 = (uint64_t)&v1447 - v283;
  uint64_t v284 = MEMORY[0x270FA5388](v282);
  uint64_t v1640 = (uint64_t)&v1447 - v285;
  uint64_t v286 = MEMORY[0x270FA5388](v284);
  uint64_t v1638 = (uint64_t)&v1447 - v287;
  uint64_t v288 = MEMORY[0x270FA5388](v286);
  uint64_t v1495 = (uint64_t)&v1447 - v289;
  uint64_t v290 = MEMORY[0x270FA5388](v288);
  uint64_t v1513 = (uint64_t)&v1447 - v291;
  uint64_t v292 = MEMORY[0x270FA5388](v290);
  uint64_t v1599 = (uint64_t)&v1447 - v293;
  uint64_t v294 = MEMORY[0x270FA5388](v292);
  uint64_t v1564 = (uint64_t)&v1447 - v295;
  uint64_t v296 = MEMORY[0x270FA5388](v294);
  uint64_t v1639 = (uint64_t)&v1447 - v297;
  uint64_t v298 = MEMORY[0x270FA5388](v296);
  uint64_t v1645 = (uint64_t)&v1447 - v299;
  uint64_t v300 = MEMORY[0x270FA5388](v298);
  uint64_t v1460 = (uint64_t)&v1447 - v301;
  uint64_t v302 = MEMORY[0x270FA5388](v300);
  uint64_t v1471 = (uint64_t)&v1447 - v303;
  uint64_t v304 = MEMORY[0x270FA5388](v302);
  uint64_t v1493 = (uint64_t)&v1447 - v305;
  uint64_t v306 = MEMORY[0x270FA5388](v304);
  uint64_t v1626 = (uint64_t)&v1447 - v307;
  uint64_t v308 = MEMORY[0x270FA5388](v306);
  uint64_t v1625 = (uint64_t)&v1447 - v309;
  uint64_t v310 = MEMORY[0x270FA5388](v308);
  uint64_t v1545 = (uint64_t)&v1447 - v311;
  uint64_t v312 = MEMORY[0x270FA5388](v310);
  uint64_t v1627 = (uint64_t)&v1447 - v313;
  uint64_t v314 = MEMORY[0x270FA5388](v312);
  uint64_t v1630 = (uint64_t)&v1447 - v315;
  uint64_t v316 = MEMORY[0x270FA5388](v314);
  uint64_t v1636 = (uint64_t)&v1447 - v317;
  uint64_t v318 = MEMORY[0x270FA5388](v316);
  uint64_t v1473 = (char *)&v1447 - v319;
  uint64_t v320 = MEMORY[0x270FA5388](v318);
  uint64_t v1465 = (uint64_t)&v1447 - v321;
  uint64_t v322 = MEMORY[0x270FA5388](v320);
  uint64_t v1481 = (uint64_t)&v1447 - v323;
  uint64_t v324 = MEMORY[0x270FA5388](v322);
  uint64_t v1549 = (uint64_t)&v1447 - v325;
  uint64_t v326 = MEMORY[0x270FA5388](v324);
  uint64_t v1583 = (uint64_t)&v1447 - v327;
  uint64_t v328 = MEMORY[0x270FA5388](v326);
  uint64_t v1593 = (uint64_t)&v1447 - v329;
  uint64_t v330 = MEMORY[0x270FA5388](v328);
  uint64_t v1579 = (uint64_t)&v1447 - v331;
  uint64_t v332 = MEMORY[0x270FA5388](v330);
  uint64_t v1584 = (uint64_t)&v1447 - v333;
  uint64_t v334 = MEMORY[0x270FA5388](v332);
  uint64_t v1594 = (uint64_t)&v1447 - v335;
  *(void *)&long long v1668 = *(void *)(a4 - 8);
  uint64_t v336 = MEMORY[0x270FA5388](v334);
  uint64_t v1559 = (char *)&v1447 - ((v337 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = MEMORY[0x270FA5388](v336);
  uint64_t v1552 = (char *)&v1447 - v339;
  uint64_t v340 = MEMORY[0x270FA5388](v338);
  uint64_t v1633 = (char *)&v1447 - v341;
  uint64_t v342 = MEMORY[0x270FA5388](v340);
  uint64_t v1558 = (char *)&v1447 - v343;
  uint64_t v344 = MEMORY[0x270FA5388](v342);
  uint64_t v1644 = (char *)&v1447 - v345;
  uint64_t v346 = MEMORY[0x270FA5388](v344);
  uint64_t v1539 = (char *)&v1447 - v347;
  uint64_t v348 = MEMORY[0x270FA5388](v346);
  uint64_t v1553 = (char *)&v1447 - v349;
  uint64_t v350 = MEMORY[0x270FA5388](v348);
  v1642 = (char *)&v1447 - v351;
  uint64_t v352 = MEMORY[0x270FA5388](v350);
  uint64_t v1646 = (char *)&v1447 - v353;
  uint64_t v354 = MEMORY[0x270FA5388](v352);
  uint64_t v1551 = (char *)&v1447 - v355;
  uint64_t v356 = MEMORY[0x270FA5388](v354);
  v1637 = (char *)&v1447 - v357;
  uint64_t v358 = MEMORY[0x270FA5388](v356);
  uint64_t v1591 = (char *)&v1447 - v359;
  uint64_t v360 = MEMORY[0x270FA5388](v358);
  v1557 = (char *)&v1447 - v361;
  uint64_t v362 = MEMORY[0x270FA5388](v360);
  uint64_t v1641 = (char *)&v1447 - v363;
  uint64_t v364 = MEMORY[0x270FA5388](v362);
  uint64_t v1590 = (char *)&v1447 - v365;
  uint64_t v366 = MEMORY[0x270FA5388](v364);
  uint64_t v1602 = (char *)&v1447 - v367;
  uint64_t v368 = MEMORY[0x270FA5388](v366);
  *(void *)&long long v1649 = (char *)&v1447 - v369;
  uint64_t v370 = MEMORY[0x270FA5388](v368);
  *(void *)&long long v1650 = (char *)&v1447 - v371;
  uint64_t v372 = MEMORY[0x270FA5388](v370);
  uint64_t v1595 = (char *)&v1447 - v373;
  MEMORY[0x270FA5388](v372);
  uint64_t v1601 = (char *)&v1447 - v374;
  uint64_t v1655 = a3;
  *(void *)&v1717.f64[0] = a3;
  *(void *)&v1669.f64[0] = a4;
  *(void *)&v1717.f64[1] = a4;
  uint64_t v1620 = a5;
  *(void *)&long long v1718 = a5;
  uint64_t v1472 = a6;
  *((void *)&v1718 + 1) = a6;
  uint64_t v1659 = a7;
  *(void *)&long long v1719 = a7;
  uint64_t v1537 = a8;
  *((void *)&v1719 + 1) = a8;
  uint64_t v375 = type metadata accessor for CanvasItemContent();
  uint64_t v376 = *(void *)(v375 - 8);
  uint64_t v377 = MEMORY[0x270FA5388](v375);
  uint64_t v1617 = (char *)&v1447 - ((v378 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = MEMORY[0x270FA5388](v377);
  uint64_t v1610 = (char *)&v1447 - v380;
  uint64_t v381 = MEMORY[0x270FA5388](v379);
  uint64_t v1613 = (char *)&v1447 - v382;
  uint64_t v383 = MEMORY[0x270FA5388](v381);
  uint64_t v1611 = (char *)&v1447 - v384;
  uint64_t v385 = MEMORY[0x270FA5388](v383);
  uint64_t v1609 = (double *)((char *)&v1447 - v386);
  uint64_t v387 = MEMORY[0x270FA5388](v385);
  uint64_t v1612 = (char *)&v1447 - v388;
  uint64_t v389 = MEMORY[0x270FA5388](v387);
  uint64_t v1608 = (double *)((char *)&v1447 - v390);
  uint64_t v391 = MEMORY[0x270FA5388](v389);
  uint64_t v1616 = (char *)&v1447 - v392;
  uint64_t v393 = MEMORY[0x270FA5388](v391);
  uint64_t v1607 = (double *)((char *)&v1447 - v394);
  uint64_t v395 = MEMORY[0x270FA5388](v393);
  uint64_t v1615 = (char *)&v1447 - v396;
  uint64_t v397 = MEMORY[0x270FA5388](v395);
  uint64_t v1614 = (char *)&v1447 - v398;
  uint64_t v399 = MEMORY[0x270FA5388](v397);
  uint64_t v401 = (double *)((char *)&v1447 - v400);
  uint64_t v402 = MEMORY[0x270FA5388](v399);
  uint64_t v404 = (char *)&v1447 - v403;
  uint64_t v405 = MEMORY[0x270FA5388](v402);
  uint64_t v407 = (char *)&v1447 - v406;
  MEMORY[0x270FA5388](v405);
  uint64_t v409 = (char *)&v1447 - v408;
  uint64_t v410 = swift_getTupleTypeMetadata2();
  *(void *)&long long v1663 = *(void *)(v410 - 8);
  uint64_t v411 = MEMORY[0x270FA5388](v410);
  uint64_t v413 = (char *)&v1447 - v412;
  uint64_t v1664 = v411;
  uint64_t v414 = (char *)&v1447 + *(int *)(v411 + 48) - v412;
  uint64_t v1662 = v376;
  uint64_t v415 = *(void (**)(char *, uint64_t, uint64_t))(v376 + 16);
  v415((char *)&v1447 - v412, v1667, v375);
  uint64_t v1667 = (uint64_t)v414;
  v415(v414, v1666, v375);
  uint64_t v1670 = v413;
  uint64_t v416 = v375;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v434 = v1670;
      v415(v407, (uint64_t)v1670, v375);
      uint64_t v435 = v1667;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v1605 + 8))(v407, v1606);
        goto LABEL_94;
      }
      uint64_t v436 = v1605;
      uint64_t v437 = v1535;
      uint64_t v438 = v1606;
      (*(void (**)(char *, uint64_t, uint64_t))(v1605 + 32))(v1535, v435, v1606);
      char v439 = static FullWidthItemDescriptor.== infix(_:_:)((uint64_t)v407, v437, *(uint64_t *)&v1669.f64[0], v1659);
      uint64_t v440 = *(void (**)(char *, uint64_t))(v436 + 8);
      v440(v437, v438);
      v440(v407, v438);
      (*(void (**)(char *, uint64_t))(v1662 + 8))(v434, v416);
      return v439 & 1;
    case 2u:
      uint64_t v441 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v404, v1670, v375);
      long long v442 = *((_OWORD *)v404 + 11);
      long long v1727 = *((_OWORD *)v404 + 10);
      long long v1728 = v442;
      long long v443 = *((_OWORD *)v404 + 13);
      long long v1729 = *((_OWORD *)v404 + 12);
      long long v1730 = v443;
      long long v444 = *((_OWORD *)v404 + 7);
      long long v1723 = *((_OWORD *)v404 + 6);
      long long v1724 = v444;
      long long v445 = *((_OWORD *)v404 + 9);
      long long v1725 = *((_OWORD *)v404 + 8);
      long long v1726 = v445;
      long long v446 = *((_OWORD *)v404 + 3);
      long long v1719 = *((_OWORD *)v404 + 2);
      long long v1720 = v446;
      long long v447 = *((_OWORD *)v404 + 5);
      long long v1721 = *((_OWORD *)v404 + 4);
      long long v1722 = v447;
      long long v448 = *((_OWORD *)v404 + 1);
      float64x2_t v1717 = *(float64x2_t *)v404;
      long long v1718 = v448;
      MEMORY[0x270FA5388](v441);
      strcpy((char *)&v1447 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      *(void *)&v1703.f64[0] = &type metadata for FullWidthStageViewLayout;
      float64_t v449 = v1669.f64[0];
      v1703.f64[1] = v1669.f64[0];
      *(void *)&long long v1704 = &type metadata for FullWidthStageViewStyle;
      *((void *)&v1704 + 1) = *(void *)&v1665.f64[0];
      v1705.f64[0] = v1665.f64[0];
      v1705.f64[1] = v1665.f64[0];
      uint64_t v450 = v1661;
      *(void *)&v1706[0] = v1661;
      *((void *)&v1706[0] + 1) = v1661;
      *(void *)&v1706[1] = v1654;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v452 = &v404[TupleTypeMetadata[12]];
      LODWORD(v1648) = v404[TupleTypeMetadata[16]];
      uint64_t v453 = v375;
      *(void *)&v1665.f64[0] = &v404[TupleTypeMetadata[20]];
      uint64_t v1651 = (unsigned __int8 *)&v404[TupleTypeMetadata[24]];
      uint64_t v454 = (uint64_t)&v404[TupleTypeMetadata[28]];
      uint64_t v455 = &v404[TupleTypeMetadata[32]];
      uint64_t v456 = &v404[TupleTypeMetadata[36]];
      uint64_t v457 = &v404[TupleTypeMetadata[40]];
      uint64_t v458 = v1667;
      uint64_t v1666 = v453;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, char *))(v1653 + 8))(v457, v1654);
        uint64_t v893 = (void (*)(char *, uint64_t))v1660[1];
        v893(v456, v450);
        v893(v455, v450);
        sub_24EC88758(v454, &qword_26B1DB9F0);
        sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
        sub_24EC88758(*(uint64_t *)&v1665.f64[0], &qword_26B1DB9F0);
        uint64_t v894 = *(void (**)(void, void))(v1668 + 8);
        float64_t v895 = *(double *)&v452;
        goto LABEL_87;
      }
      long long v459 = *(_OWORD *)(v458 + 64);
      v1706[2] = *(_OWORD *)(v458 + 80);
      v1706[1] = v459;
      long long v460 = *(_OWORD *)(v458 + 128);
      long long v1710 = *(_OWORD *)(v458 + 144);
      long long v1709 = v460;
      long long v461 = *(_OWORD *)(v458 + 96);
      long long v1708 = *(_OWORD *)(v458 + 112);
      long long v1707 = v461;
      long long v462 = *(_OWORD *)(v458 + 192);
      long long v1714 = *(_OWORD *)(v458 + 208);
      long long v1713 = v462;
      long long v463 = *(_OWORD *)(v458 + 160);
      long long v1712 = *(_OWORD *)(v458 + 176);
      long long v1711 = v463;
      float64x2_t v464 = *(float64x2_t *)(v458 + 32);
      v1706[0] = *(_OWORD *)(v458 + 48);
      float64x2_t v1705 = v464;
      long long v465 = *(_OWORD *)(v458 + 16);
      float64x2_t v1703 = *(float64x2_t *)v458;
      long long v1704 = v465;
      uint64_t v1644 = (char *)(v458 + TupleTypeMetadata[12]);
      LODWORD(v1643) = *(unsigned __int8 *)(v458 + TupleTypeMetadata[16]);
      uint64_t v1645 = v458 + TupleTypeMetadata[20];
      uint64_t v1646 = (char *)(v458 + TupleTypeMetadata[24]);
      uint64_t v1647 = v458 + TupleTypeMetadata[28];
      *(void *)&long long v1663 = v458 + TupleTypeMetadata[32];
      uint64_t v1664 = v458 + TupleTypeMetadata[36];
      uint64_t v1667 = v458 + TupleTypeMetadata[40];
      uint64_t v466 = v452;
      uint64_t v467 = *(void (**)(void, char *, void))(v1668 + 32);
      v467(v1650, v466, *(void *)&v449);
      sub_24ECB04CC(*(uint64_t *)&v1665.f64[0], v1636);
      sub_24ECB04CC((uint64_t)v1651, v1630);
      sub_24ECB04CC(v454, v1627);
      uint64_t v468 = (void (*)(char *, char *, uint64_t))v1660[4];
      v468(v1623, v455, v450);
      v468(v1621, v456, v450);
      uint64_t v469 = *(void (**)(char *, char *, char *))(v1653 + 32);
      uint64_t v470 = v457;
      uint64_t v471 = (uint64_t)v1654;
      v469(v1618, v470, v1654);
      v467(v1649, v1644, *(void *)&v449);
      uint64_t v472 = v1545;
      sub_24ECB04CC(v1645, v1545);
      sub_24ECB04CC((uint64_t)v1646, v1625);
      sub_24ECB04CC(v1647, v1626);
      uint64_t v473 = v1578;
      v468(v1578, (char *)v1663, v450);
      uint64_t v474 = v1577;
      v468(v1577, (char *)v1664, v450);
      uint64_t v475 = v1538;
      v469(v1538, (char *)v1667, (char *)v471);
      long long v1697 = v1727;
      long long v1698 = v1728;
      long long v1699 = v1729;
      long long v1700 = v1730;
      long long v1693 = v1723;
      long long v1694 = v1724;
      long long v1695 = v1725;
      long long v1696 = v1726;
      long long v1689 = v1719;
      long long v1690 = v1720;
      long long v1691 = v1721;
      long long v1692 = v1722;
      float64x2_t v1687 = v1717;
      long long v1688 = v1718;
      long long v1681 = v1711;
      long long v1682 = v1712;
      long long v1683 = v1713;
      long long v1684 = v1714;
      long long v1677 = v1707;
      long long v1678 = v1708;
      long long v1679 = v1709;
      long long v1680 = v1710;
      float64x2_t v1673 = v1705;
      long long v1674 = v1706[0];
      long long v1675 = v1706[1];
      long long v1676 = v1706[2];
      float64x2_t v1671 = v1703;
      long long v1672 = v1704;
      uint64_t v476 = v471;
      if ((_s15FitnessCanvasUI24FullWidthStageViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1687, (uint64_t)&v1671) & 1) == 0)
      {
        uint64_t v1667 = *(void *)(v1653 + 8);
        ((void (*)(char *, uint64_t))v1667)(v475, v471);
        uint64_t v929 = (void (*)(char *, uint64_t))v1660[1];
        v929(v474, v450);
        v929(v473, v450);
        sub_24EC88758(v1626, &qword_26B1DB9F0);
        sub_24EC88758(v1625, &qword_26B1DB9F0);
        sub_24EC88758(v472, &qword_26B1DB9F0);
        uint64_t v930 = *(void (**)(void, void))(v1668 + 8);
        float64_t v931 = v1669.f64[0];
        v930(v1649, *(void *)&v1669.f64[0]);
        ((void (*)(char *, uint64_t))v1667)(v1618, v471);
        v929(v1621, v450);
        v929(v1623, v450);
        sub_24EC88758(v1627, &qword_26B1DB9F0);
        sub_24EC88758(v1630, &qword_26B1DB9F0);
        sub_24EC88758(v1636, &qword_26B1DB9F0);
        v930(v1650, *(void *)&v931);
        goto LABEL_333;
      }
      uint64_t v477 = v1653;
      float64_t v478 = v1669.f64[0];
      char v479 = sub_24EE57040();
      uint64_t v480 = v1670;
      if ((v479 & 1) == 0)
      {
        uint64_t v955 = v477 + 8;
        uint64_t v956 = *(void (**)(char *, uint64_t))(v477 + 8);
        uint64_t v1653 = v955;
        v956(v475, v476);
        float64_t v957 = v478;
        uint64_t v958 = (void (*)(char *, uint64_t))v1660[1];
        uint64_t v959 = v1661;
        v958(v1577, v1661);
        v958(v1578, v959);
        sub_24EC88758(v1626, &qword_26B1DB9F0);
        sub_24EC88758(v1625, &qword_26B1DB9F0);
        sub_24EC88758(v472, &qword_26B1DB9F0);
        uint64_t v960 = *(void (**)(void, void))(v1668 + 8);
        v960(v1649, *(void *)&v478);
        v956(v1618, v476);
LABEL_117:
        v958(v1621, v959);
        v958(v1623, v959);
        sub_24EC88758(v1627, &qword_26B1DB9F0);
        sub_24EC88758(v1630, &qword_26B1DB9F0);
        sub_24EC88758(v1636, &qword_26B1DB9F0);
        v960(v1650, *(void *)&v957);
        goto LABEL_333;
      }
      uint64_t v481 = v1668;
      if (v1648 == v1643)
      {
        uint64_t v482 = v1508;
        uint64_t v483 = v1508 + *(int *)(v1656 + 48);
        sub_24ECF30E4(v1636, v1508);
        sub_24ECF30E4(v472, v483);
        uint64_t v484 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
        uint64_t v485 = v1658;
        if (v484(v482, 1, v1658) == 1)
        {
          if (v484(v483, 1, v485) == 1)
          {
            sub_24EC88758(v482, &qword_26B1DB9F0);
            uint64_t v485 = v1658;
            goto LABEL_282;
          }
        }
        else
        {
          uint64_t v1061 = v1493;
          sub_24ECF30E4(v482, v1493);
          if (v484(v483, 1, v485) != 1)
          {
            uint64_t v1159 = v1657;
            v1160 = v484;
            uint64_t v1161 = v1569;
            (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v483, v485);
            sub_24ECF314C(&qword_26B1DB9E8);
            char v1162 = sub_24EE57040();
            uint64_t v1163 = *(void (**)(char *, uint64_t))(v1159 + 8);
            v1164 = v1161;
            uint64_t v484 = v1160;
            uint64_t v475 = v1538;
            v1163(v1164, v485);
            v1163((char *)v1061, v485);
            sub_24EC88758(v482, &qword_26B1DB9F0);
            if (v1162)
            {
LABEL_282:
              uint64_t v1165 = v1488;
              uint64_t v1166 = v1488 + *(int *)(v1656 + 48);
              sub_24ECF30E4(v1630, v1488);
              uint64_t v1167 = v1625;
              sub_24ECF30E4(v1625, v1166);
              if (v484(v1165, 1, v485) == 1)
              {
                if (v484(v1166, 1, v485) == 1)
                {
                  sub_24EC88758(v1165, &qword_26B1DB9F0);
                  uint64_t v485 = v1658;
                  goto LABEL_349;
                }
              }
              else
              {
                uint64_t v1231 = v1471;
                sub_24ECF30E4(v1165, v1471);
                if (v484(v1166, 1, v485) != 1)
                {
                  uint64_t v1272 = v1657;
                  v1273 = v484;
                  uint64_t v1274 = v1569;
                  (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1166, v485);
                  sub_24ECF314C(&qword_26B1DB9E8);
                  char v1275 = sub_24EE57040();
                  uint64_t v1276 = *(void (**)(char *, uint64_t))(v1272 + 8);
                  uint64_t v1277 = v1274;
                  uint64_t v484 = v1273;
                  uint64_t v475 = v1538;
                  v1276(v1277, v485);
                  v1276((char *)v1231, v485);
                  uint64_t v1167 = v1625;
                  sub_24EC88758(v1165, &qword_26B1DB9F0);
                  if (v1275)
                  {
LABEL_349:
                    uint64_t v1278 = v1469;
                    uint64_t v1279 = v1469 + *(int *)(v1656 + 48);
                    sub_24ECF30E4(v1627, v1469);
                    sub_24ECF30E4(v1626, v1279);
                    unsigned int v1280 = v484(v1278, 1, v485);
                    uint64_t v1281 = v1668;
                    if (v1280 == 1)
                    {
                      unsigned int v1282 = v484(v1279, 1, v485);
                      uint64_t v1283 = v1655;
                      if (v1282 == 1)
                      {
                        sub_24EC88758(v1278, &qword_26B1DB9F0);
                        uint64_t v1284 = v1660;
                        goto LABEL_381;
                      }
                    }
                    else
                    {
                      uint64_t v1324 = v1460;
                      sub_24ECF30E4(v1278, v1460);
                      unsigned int v1325 = v484(v1279, 1, v485);
                      uint64_t v1283 = v1655;
                      if (v1325 != 1)
                      {
                        uint64_t v1340 = v1657;
                        uint64_t v1341 = v1569;
                        (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1279, v485);
                        sub_24ECF314C(&qword_26B1DB9E8);
                        char v1342 = sub_24EE57040();
                        uint64_t v1343 = *(void (**)(char *, uint64_t))(v1340 + 8);
                        v1344 = v1341;
                        uint64_t v1281 = v1668;
                        v1343(v1344, v485);
                        v1343((char *)v1324, v485);
                        sub_24EC88758(v1278, &qword_26B1DB9F0);
                        uint64_t v1284 = v1660;
                        if (v1342)
                        {
LABEL_381:
                          long long v1345 = v1463;
                          uint64_t v1346 = &v1463[*(int *)(v1509 + 48)];
                          v1347 = (void (*)(char *, char *, uint64_t))v1284[2];
                          uint64_t v1348 = v1661;
                          v1347(v1463, v1623, v1661);
                          v1347(v1346, v1578, v1348);
                          uint64_t v1349 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)&v1652.f64[0] + 48);
                          int v1350 = v1349(v1345, 1, v1283);
                          uint64_t v1667 = (uint64_t)v1349;
                          if (v1350 == 1)
                          {
                            int v1351 = v1349(v1346, 1, v1283);
                            uint64_t v1352 = v1577;
                            if (v1351 == 1)
                            {
                              v1665.f64[0] = (float64_t)v1284[1];
                              (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1463, v1661);
                              goto LABEL_401;
                            }
                          }
                          else
                          {
                            uint64_t v1378 = v1455;
                            v1347(v1455, v1463, v1661);
                            if (v1349(v1346, 1, v1283) != 1)
                            {
                              float64_t v1386 = v1652.f64[0];
                              uint64_t v1387 = v1470;
                              (*(void (**)(char *, char *, uint64_t))(*(void *)&v1652.f64[0] + 32))(v1470, v1346, v1283);
                              LODWORD(v1664) = sub_24EE57040();
                              uint64_t v1388 = *(void (**)(char *, uint64_t))(*(void *)&v1386 + 8);
                              v1388(v1387, v1283);
                              v1388(v1378, v1283);
                              uint64_t v1284 = v1660;
                              v1665.f64[0] = (float64_t)v1660[1];
                              (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1463, v1661);
                              uint64_t v1352 = v1577;
                              if (v1664)
                              {
LABEL_401:
                                v1389 = v1457;
                                v1390 = &v1457[*(int *)(v1509 + 48)];
                                uint64_t v1391 = v1661;
                                v1347(v1457, v1621, v1661);
                                v1347(v1390, v1352, v1391);
                                uint64_t v1392 = v1389;
                                v1393 = (unsigned int (*)(char *, uint64_t, uint64_t))v1667;
                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v1667)(v1392, 1, v1283) == 1)
                                {
                                  if (v1393(v1390, 1, v1283) == 1)
                                  {
                                    (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1457, v1661);
LABEL_417:
                                    uint64_t v1424 = v1452;
                                    uint64_t v1425 = (uint64_t)&v1452[*(int *)(TupleTypeMetadata2 + 48)];
                                    uint64_t v1426 = *(void (**)(char *, char *, char *))(v1653 + 16);
                                    uint64_t v1427 = (uint64_t)v1654;
                                    v1426(v1452, v1618, v1654);
                                    uint64_t v1667 = v1425;
                                    v1426((char *)v1425, v1538, (char *)v1427);
                                    uint64_t v1664 = *(void *)(v1619 + 48);
                                    if (((unsigned int (*)(char *, uint64_t, uint64_t))v1664)(v1424, 1, v1620) == 1)
                                    {
                                      uint64_t v1428 = v1653 + 8;
                                      uint64_t v1429 = *(void (**)(char *, char *))(v1653 + 8);
                                      v1429(v1538, v1654);
                                      uint64_t v1430 = v1661;
                                      float64_t v1431 = v1665.f64[0];
                                      (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1577, v1661);
                                      (*(void (**)(char *, uint64_t))&v1431)(v1578, v1430);
                                      sub_24EC88758(v1626, &qword_26B1DB9F0);
                                      sub_24EC88758(v1625, &qword_26B1DB9F0);
                                      sub_24EC88758(v1545, &qword_26B1DB9F0);
                                      uint64_t v1432 = *(void (**)(void, void))(v1668 + 8);
                                      float64_t v1433 = v1669.f64[0];
                                      v1432(v1649, *(void *)&v1669.f64[0]);
                                      uint64_t v1653 = v1428;
                                      *(void *)&long long v1668 = v1429;
                                      v1429(v1618, v1654);
                                      (*(void (**)(char *, uint64_t))&v1431)(v1621, v1430);
                                      (*(void (**)(char *, uint64_t))&v1431)(v1623, v1430);
                                      sub_24EC88758(v1627, &qword_26B1DB9F0);
                                      sub_24EC88758(v1630, &qword_26B1DB9F0);
                                      sub_24EC88758(v1636, &qword_26B1DB9F0);
                                      v1432(v1650, *(void *)&v1433);
                                      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1664)(v1667, 1, v1620) == 1)
                                      {
                                        ((void (*)(char *, char *))v1668)(v1452, v1654);
                                        goto LABEL_424;
                                      }
                                    }
                                    else
                                    {
                                      v1426(v1450, v1452, v1654);
                                      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1664)(v1667, 1, v1620) != 1)
                                      {
                                        uint64_t v1439 = v1619;
                                        uint64_t v1440 = v1448;
                                        uint64_t v1441 = v1620;
                                        (*(void (**)(char *, uint64_t, uint64_t))(v1619 + 32))(v1448, v1667, v1620);
                                        LODWORD(v1664) = sub_24EE57040();
                                        v1442 = *(void (**)(char *, uint64_t))(v1439 + 8);
                                        uint64_t v1619 = v1439 + 8;
                                        *(void *)&long long v1663 = v1442;
                                        v1442(v1440, v1441);
                                        uint64_t v1667 = *(void *)(v1653 + 8);
                                        ((void (*)(char *, char *))v1667)(v1538, v1654);
                                        uint64_t v1443 = v1661;
                                        float64_t v1444 = v1665.f64[0];
                                        (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1577, v1661);
                                        (*(void (**)(char *, uint64_t))&v1444)(v1578, v1443);
                                        sub_24EC88758(v1626, &qword_26B1DB9F0);
                                        sub_24EC88758(v1625, &qword_26B1DB9F0);
                                        sub_24EC88758(v1545, &qword_26B1DB9F0);
                                        uint64_t v1445 = *(void (**)(void, void))(v1668 + 8);
                                        float64_t v1446 = v1669.f64[0];
                                        v1445(v1649, *(void *)&v1669.f64[0]);
                                        ((void (*)(char *, char *))v1667)(v1618, v1654);
                                        (*(void (**)(char *, uint64_t))&v1444)(v1621, v1443);
                                        (*(void (**)(char *, uint64_t))&v1444)(v1623, v1443);
                                        sub_24EC88758(v1627, &qword_26B1DB9F0);
                                        sub_24EC88758(v1630, &qword_26B1DB9F0);
                                        sub_24EC88758(v1636, &qword_26B1DB9F0);
                                        v1445(v1650, *(void *)&v1446);
                                        ((void (*)(char *, uint64_t))v1663)(v1450, v1441);
                                        ((void (*)(char *, char *))v1667)(v1452, v1654);
                                        if (v1664) {
                                          goto LABEL_424;
                                        }
                                        goto LABEL_333;
                                      }
                                      uint64_t v1667 = *(void *)(v1653 + 8);
                                      uint64_t v1434 = (uint64_t)v1654;
                                      ((void (*)(char *, char *))v1667)(v1538, v1654);
                                      uint64_t v1435 = v1661;
                                      float64_t v1436 = v1665.f64[0];
                                      (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1577, v1661);
                                      (*(void (**)(char *, uint64_t))&v1436)(v1578, v1435);
                                      sub_24EC88758(v1626, &qword_26B1DB9F0);
                                      sub_24EC88758(v1625, &qword_26B1DB9F0);
                                      sub_24EC88758(v1545, &qword_26B1DB9F0);
                                      uint64_t v1437 = *(void (**)(void, void))(v1668 + 8);
                                      float64_t v1438 = v1669.f64[0];
                                      v1437(v1649, *(void *)&v1669.f64[0]);
                                      ((void (*)(char *, uint64_t))v1667)(v1618, v1434);
                                      (*(void (**)(char *, uint64_t))&v1436)(v1621, v1435);
                                      (*(void (**)(char *, uint64_t))&v1436)(v1623, v1435);
                                      sub_24EC88758(v1627, &qword_26B1DB9F0);
                                      sub_24EC88758(v1630, &qword_26B1DB9F0);
                                      sub_24EC88758(v1636, &qword_26B1DB9F0);
                                      v1437(v1650, *(void *)&v1438);
                                      (*(void (**)(char *, uint64_t))(v1619 + 8))(v1450, v1620);
                                    }
                                    (*(void (**)(char *, uint64_t))(v1449 + 8))(v1452, TupleTypeMetadata2);
                                    goto LABEL_333;
                                  }
                                }
                                else
                                {
                                  v1347(v1453, v1457, v1391);
                                  if (v1393(v1390, 1, v1283) != 1)
                                  {
                                    float64_t v1418 = v1652.f64[0];
                                    uint64_t v1419 = v1470;
                                    uint64_t v1420 = v1655;
                                    (*(void (**)(char *, char *, uint64_t))(*(void *)&v1652.f64[0] + 32))(v1470, v1390, v1655);
                                    uint64_t v1421 = v1453;
                                    char v1422 = sub_24EE57040();
                                    uint64_t v1423 = *(void (**)(char *, uint64_t))(*(void *)&v1418 + 8);
                                    v1423(v1419, v1420);
                                    v1423(v1421, v1420);
                                    (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1457, v1661);
                                    if (v1422) {
                                      goto LABEL_417;
                                    }
LABEL_413:
                                    uint64_t v1667 = *(void *)(v1653 + 8);
                                    uint64_t v1407 = (uint64_t)v1654;
                                    ((void (*)(char *, char *))v1667)(v1538, v1654);
                                    uint64_t v1408 = v1661;
                                    float64_t v1409 = v1665.f64[0];
                                    (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1577, v1661);
                                    (*(void (**)(char *, uint64_t))&v1409)(v1578, v1408);
                                    sub_24EC88758(v1626, &qword_26B1DB9F0);
                                    sub_24EC88758(v1625, &qword_26B1DB9F0);
                                    sub_24EC88758(v1545, &qword_26B1DB9F0);
                                    uint64_t v1410 = *(void (**)(void, void))(v1668 + 8);
                                    float64_t v1411 = v1669.f64[0];
                                    v1410(v1649, *(void *)&v1669.f64[0]);
                                    ((void (*)(char *, uint64_t))v1667)(v1618, v1407);
                                    (*(void (**)(char *, uint64_t))&v1409)(v1621, v1408);
                                    (*(void (**)(char *, uint64_t))&v1409)(v1623, v1408);
                                    sub_24EC88758(v1627, &qword_26B1DB9F0);
                                    sub_24EC88758(v1630, &qword_26B1DB9F0);
                                    sub_24EC88758(v1636, &qword_26B1DB9F0);
                                    v1410(v1650, *(void *)&v1411);
                                    goto LABEL_333;
                                  }
                                  (*(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8))(v1453, v1655);
                                }
                                (*(void (**)(char *, uint64_t))(v1479 + 8))(v1457, v1509);
                                goto LABEL_413;
                              }
                              goto LABEL_404;
                            }
                            (*(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8))(v1378, v1283);
                            uint64_t v1284 = v1660;
                            uint64_t v1352 = v1577;
                          }
                          (*(void (**)(char *, uint64_t))(v1479 + 8))(v1463, v1509);
LABEL_404:
                          uint64_t v1667 = *(void *)(v1653 + 8);
                          uint64_t v1394 = (uint64_t)v1654;
                          ((void (*)(char *, char *))v1667)(v1538, v1654);
                          uint64_t v958 = (void (*)(char *, uint64_t))v1284[1];
                          uint64_t v1395 = v1352;
                          uint64_t v959 = v1661;
                          v958(v1395, v1661);
                          v958(v1578, v959);
                          sub_24EC88758(v1626, &qword_26B1DB9F0);
                          sub_24EC88758(v1167, &qword_26B1DB9F0);
                          sub_24EC88758(v1545, &qword_26B1DB9F0);
                          uint64_t v960 = *(void (**)(void, void))(v1668 + 8);
                          float64_t v957 = v1669.f64[0];
                          v960(v1649, *(void *)&v1669.f64[0]);
                          ((void (*)(char *, uint64_t))v1667)(v1618, v1394);
                          goto LABEL_117;
                        }
LABEL_371:
                        uint64_t v1667 = *(void *)(v1653 + 8);
                        uint64_t v1326 = (uint64_t)v1654;
                        ((void (*)(char *, char *))v1667)(v1538, v1654);
                        uint64_t v1327 = (void (*)(char *, uint64_t))v1284[1];
                        uint64_t v1328 = v1661;
                        v1327(v1577, v1661);
                        v1327(v1578, v1328);
                        sub_24EC88758(v1626, &qword_26B1DB9F0);
                        sub_24EC88758(v1167, &qword_26B1DB9F0);
                        sub_24EC88758(v1545, &qword_26B1DB9F0);
                        uint64_t v1329 = *(void (**)(void, void))(v1281 + 8);
                        float64_t v1330 = v1669.f64[0];
                        v1329(v1649, *(void *)&v1669.f64[0]);
                        ((void (*)(char *, uint64_t))v1667)(v1618, v1326);
                        v1327(v1621, v1328);
                        v1327(v1623, v1328);
                        sub_24EC88758(v1627, &qword_26B1DB9F0);
                        sub_24EC88758(v1630, &qword_26B1DB9F0);
                        sub_24EC88758(v1636, &qword_26B1DB9F0);
                        v1329(v1650, *(void *)&v1330);
                        goto LABEL_333;
                      }
                      (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1324, v485);
                    }
                    sub_24EC88758(v1278, &qword_26B1DBA00);
                    uint64_t v1284 = v1660;
                    goto LABEL_371;
                  }
LABEL_352:
                  uint64_t v1667 = *(void *)(v1653 + 8);
                  uint64_t v1285 = (uint64_t)v1654;
                  ((void (*)(char *, char *))v1667)(v475, v1654);
                  uint64_t v1286 = (void (*)(char *, uint64_t))v1660[1];
                  uint64_t v1287 = v1661;
                  v1286(v1577, v1661);
                  v1286(v1578, v1287);
                  sub_24EC88758(v1626, &qword_26B1DB9F0);
                  sub_24EC88758(v1167, &qword_26B1DB9F0);
                  sub_24EC88758(v1545, &qword_26B1DB9F0);
                  uint64_t v1288 = *(void (**)(void, void))(v1668 + 8);
                  float64_t v1289 = v1669.f64[0];
                  v1288(v1649, *(void *)&v1669.f64[0]);
                  ((void (*)(char *, uint64_t))v1667)(v1618, v1285);
                  v1286(v1621, v1287);
                  v1286(v1623, v1287);
                  sub_24EC88758(v1627, &qword_26B1DB9F0);
                  sub_24EC88758(v1630, &qword_26B1DB9F0);
                  sub_24EC88758(v1636, &qword_26B1DB9F0);
                  v1288(v1650, *(void *)&v1289);
                  goto LABEL_333;
                }
                (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1231, v485);
              }
              sub_24EC88758(v1165, &qword_26B1DBA00);
              goto LABEL_352;
            }
LABEL_285:
            uint64_t v1667 = *(void *)(v1653 + 8);
            uint64_t v1168 = (uint64_t)v1654;
            ((void (*)(char *, char *))v1667)(v475, v1654);
            uint64_t v1169 = (void (*)(char *, uint64_t))v1660[1];
            uint64_t v1170 = v1661;
            v1169(v1577, v1661);
            v1169(v1578, v1170);
            sub_24EC88758(v1626, &qword_26B1DB9F0);
            sub_24EC88758(v1625, &qword_26B1DB9F0);
            sub_24EC88758(v1545, &qword_26B1DB9F0);
            uint64_t v1171 = *(void (**)(void, void))(v1668 + 8);
            float64_t v1172 = v1669.f64[0];
            v1171(v1649, *(void *)&v1669.f64[0]);
            ((void (*)(char *, uint64_t))v1667)(v1618, v1168);
            v1169(v1621, v1170);
            v1169(v1623, v1170);
            sub_24EC88758(v1627, &qword_26B1DB9F0);
            sub_24EC88758(v1630, &qword_26B1DB9F0);
            sub_24EC88758(v1636, &qword_26B1DB9F0);
            v1171(v1650, *(void *)&v1172);
            goto LABEL_333;
          }
          (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1061, v485);
        }
        sub_24EC88758(v482, &qword_26B1DBA00);
        goto LABEL_285;
      }
      uint64_t v986 = v477 + 8;
      uint64_t v987 = *(void (**)(char *, uint64_t))(v477 + 8);
      uint64_t v1653 = v986;
      v987(v475, v476);
      uint64_t v988 = (void (*)(char *, uint64_t))v1660[1];
      uint64_t v989 = v1661;
      v988(v1577, v1661);
      v988(v1578, v989);
      sub_24EC88758(v1626, &qword_26B1DB9F0);
      sub_24EC88758(v1625, &qword_26B1DB9F0);
      sub_24EC88758(v472, &qword_26B1DB9F0);
      uint64_t v990 = *(void (**)(void, void))(v481 + 8);
      v990(v1649, *(void *)&v478);
      v987(v1618, (uint64_t)v1654);
      v988(v1621, v989);
      v988(v1623, v989);
      sub_24EC88758(v1627, &qword_26B1DB9F0);
      sub_24EC88758(v1630, &qword_26B1DB9F0);
      sub_24EC88758(v1636, &qword_26B1DB9F0);
      v990(v1650, *(void *)&v478);
      goto LABEL_141;
    case 3u:
      uint64_t v486 = ((uint64_t (*)(double *, char *, uint64_t))v415)(v401, v1670, v375);
      float64_t v487 = *v401;
      float64_t v488 = v401[1];
      uint64_t v489 = *((void *)v401 + 2);
      uint64_t v490 = *((void *)v401 + 3);
      uint64_t v491 = *((void *)v401 + 4);
      uint64_t v492 = *((void *)v401 + 5);
      uint64_t v493 = *((void *)v401 + 6);
      uint64_t v494 = *((void *)v401 + 7);
      MEMORY[0x270FA5388](v486);
      strcpy((char *)&v1447 - 48, "layout title description actionButton ");
      *(void *)&v1717.f64[0] = &type metadata for InfoActionCardViewLayout;
      v1717.f64[1] = v1665.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      uint64_t v495 = v1661;
      *((void *)&v1718 + 1) = v1661;
      uint64_t v496 = (int *)swift_getTupleTypeMetadata();
      uint64_t v497 = v496[12];
      uint64_t v498 = (uint64_t)v401 + v497;
      uint64_t v499 = v496[16];
      uint64_t v500 = (uint64_t)v401 + v499;
      uint64_t v501 = v496[20];
      uint64_t v502 = v416;
      uint64_t v503 = (char *)v401 + v501;
      uint64_t v504 = v1667;
      uint64_t v1666 = v502;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        ((void (*)(char *, uint64_t))v1660[1])(v503, v495);
        sub_24EC88758(v500, &qword_26B1DB9F0);
        sub_24EC88758(v498, &qword_26B1DB9F0);
        uint64_t v434 = v1670;
        goto LABEL_94;
      }
      float64x2_t v1669 = *(float64x2_t *)v504;
      long long v1668 = *(_OWORD *)(v504 + 16);
      float64x2_t v1665 = *(float64x2_t *)(v504 + 32);
      uint64_t v505 = v504 + v497;
      uint64_t v506 = v504 + v499;
      uint64_t v507 = (char *)(v504 + v501);
      uint64_t v1664 = *(void *)(v504 + 48);
      uint64_t v1667 = *(void *)(v504 + 56);
      sub_24ECB04CC(v498, v1645);
      sub_24ECB04CC(v500, v1639);
      uint64_t v508 = v1660;
      uint64_t v509 = (void (*)(char *, char *, uint64_t))v1660[4];
      uint64_t v510 = v1592;
      v509(v1592, v503, v495);
      uint64_t v511 = v505;
      uint64_t v512 = v1564;
      sub_24ECB04CC(v511, v1564);
      uint64_t v513 = v1599;
      sub_24ECB04CC(v506, v1599);
      uint64_t v514 = v1548;
      v509(v1548, v507, v495);
      v1717.f64[0] = v487;
      v1717.f64[1] = v488;
      *(void *)&long long v1718 = v489;
      *((void *)&v1718 + 1) = v490;
      *(void *)&long long v1719 = v491;
      *((void *)&v1719 + 1) = v492;
      *(void *)&long long v1720 = v493;
      *((void *)&v1720 + 1) = v494;
      float64x2_t v1703 = v1669;
      long long v1704 = v1668;
      float64x2_t v1705 = v1665;
      *(void *)&v1706[0] = v1664;
      *((void *)&v1706[0] + 1) = v1667;
      if ((_s15FitnessCanvasUI24InfoActionCardViewLayoutV2eeoiySbAC_ACtFZ_0(&v1717, &v1703) & 1) == 0)
      {
        uint64_t v932 = (void (*)(char *, uint64_t))v508[1];
        v932(v514, v495);
        sub_24EC88758(v513, &qword_26B1DB9F0);
        sub_24EC88758(v512, &qword_26B1DB9F0);
        v932(v510, v495);
        sub_24EC88758(v1639, &qword_26B1DB9F0);
        uint64_t v933 = v1645;
LABEL_122:
        sub_24EC88758(v933, &qword_26B1DB9F0);
        goto LABEL_333;
      }
      uint64_t v515 = v1528;
      uint64_t v516 = v1528 + *(int *)(v1656 + 48);
      uint64_t v517 = v1645;
      sub_24ECF30E4(v1645, v1528);
      sub_24ECF30E4(v512, v516);
      uint64_t v518 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v519 = v1658;
      if (v518(v515, 1, v1658) == 1)
      {
        if (v518(v516, 1, v519) == 1)
        {
          sub_24EC88758(v515, &qword_26B1DB9F0);
          uint64_t v519 = v1658;
          goto LABEL_171;
        }
      }
      else
      {
        uint64_t v961 = v1513;
        sub_24ECF30E4(v515, v1513);
        if (v518(v516, 1, v519) != 1)
        {
          uint64_t v1005 = v1657;
          uint64_t v1006 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v516, v519);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1007 = sub_24EE57040();
          uint64_t v1008 = *(void (**)(char *, uint64_t))(v1005 + 8);
          v1008(v1006, v519);
          v1008((char *)v961, v519);
          uint64_t v512 = v1564;
          uint64_t v517 = v1645;
          uint64_t v514 = v1548;
          sub_24EC88758(v515, &qword_26B1DB9F0);
          if (v1007)
          {
LABEL_171:
            uint64_t v1009 = v1525;
            uint64_t v1010 = v1525 + *(int *)(v1656 + 48);
            sub_24ECF30E4(v1639, v1525);
            sub_24ECF30E4(v1599, v1010);
            if (v518(v1009, 1, v519) == 1)
            {
              unsigned int v1011 = v518(v1010, 1, v519);
              uint64_t v1012 = v1666;
              uint64_t v1013 = v1523;
              if (v1011 == 1)
              {
                sub_24EC88758(v1525, &qword_26B1DB9F0);
                uint64_t v1014 = v1661;
                uint64_t v1015 = v1592;
                uint64_t v1016 = v1660;
LABEL_242:
                *(void *)&float64_t v1114 = &v1013[*(int *)(v1509 + 48)];
                uint64_t v1115 = v514;
                uint64_t v1116 = (void (*)(char *, char *, uint64_t))v1016[2];
                v1116(v1013, v1015, v1014);
                v1669.f64[0] = v1114;
                v1116(*(char **)&v1114, v1115, v1014);
                float64_t v1117 = v1652.f64[0];
                uint64_t v1118 = v1013;
                uint64_t v1119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)&v1652.f64[0] + 48);
                uint64_t v1120 = v1655;
                if (v1119(v1118, 1, v1655) == 1)
                {
                  uint64_t v1121 = (void (*)(char *, uint64_t))v1016[1];
                  v1121(v1115, v1014);
                  sub_24EC88758(v1599, &qword_26B1DB9F0);
                  sub_24EC88758(v1564, &qword_26B1DB9F0);
                  v1121(v1592, v1014);
                  sub_24EC88758(v1639, &qword_26B1DB9F0);
                  sub_24EC88758(v1645, &qword_26B1DB9F0);
                  if (v1119(*(char **)&v1669.f64[0], 1, v1120) == 1)
                  {
                    v1121(v1523, v1014);
LABEL_251:
                    uint64_t v1131 = v1666;
                    uint64_t v1132 = v1670;
LABEL_326:
                    (*(void (**)(char *, uint64_t))(v1662 + 8))(v1132, v1131);
                    goto LABEL_367;
                  }
                  goto LABEL_274;
                }
                uint64_t v1153 = v1489;
                v1116(v1489, v1523, v1014);
                float64_t v1154 = v1669.f64[0];
                if (v1119(*(char **)&v1669.f64[0], 1, v1120) == 1)
                {
                  uint64_t v1155 = (void (*)(char *, uint64_t))v1016[1];
                  v1155(v1548, v1014);
                  sub_24EC88758(v1599, &qword_26B1DB9F0);
                  sub_24EC88758(v1564, &qword_26B1DB9F0);
                  v1155(v1592, v1014);
                  sub_24EC88758(v1639, &qword_26B1DB9F0);
                  sub_24EC88758(v1645, &qword_26B1DB9F0);
                  (*(void (**)(char *, uint64_t))(*(void *)&v1117 + 8))(v1153, v1120);
LABEL_274:
                  (*(void (**)(char *, uint64_t))(v1479 + 8))(v1523, v1509);
                  goto LABEL_279;
                }
                uint64_t v1236 = v1470;
                (*(void (**)(char *, float64_t, uint64_t))(*(void *)&v1117 + 32))(v1470, COERCE_FLOAT64_T(*(void *)&v1154), v1120);
                char v1137 = sub_24EE57040();
                uint64_t v1237 = *(void (**)(char *, uint64_t))(*(void *)&v1117 + 8);
                v1237(v1236, v1120);
                uint64_t v1238 = (void (*)(char *, uint64_t))v1016[1];
                v1238(v1548, v1014);
                sub_24EC88758(v1599, &qword_26B1DB9F0);
                sub_24EC88758(v1564, &qword_26B1DB9F0);
                v1238(v1592, v1014);
                sub_24EC88758(v1639, &qword_26B1DB9F0);
                sub_24EC88758(v1645, &qword_26B1DB9F0);
                v1237(v1489, v1120);
                v1238(v1523, v1014);
LABEL_325:
                uint64_t v1131 = v1666;
                uint64_t v1132 = v1670;
                if (v1137) {
                  goto LABEL_326;
                }
                goto LABEL_280;
              }
            }
            else
            {
              uint64_t v1057 = v1495;
              sub_24ECF30E4(v1009, v1495);
              unsigned int v1058 = v518(v1010, 1, v519);
              uint64_t v1013 = v1523;
              if (v1058 != 1)
              {
                uint64_t v1110 = v1657;
                uint64_t v1111 = v1569;
                (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1010, v519);
                sub_24ECF314C(&qword_26B1DB9E8);
                char v1112 = sub_24EE57040();
                uint64_t v1113 = *(void (**)(char *, uint64_t))(v1110 + 8);
                v1113(v1111, v519);
                v1113((char *)v1057, v519);
                sub_24EC88758(v1009, &qword_26B1DB9F0);
                uint64_t v1012 = v1666;
                uint64_t v1014 = v1661;
                uint64_t v1015 = v1592;
                uint64_t v1016 = v1660;
                if (v1112) {
                  goto LABEL_242;
                }
                goto LABEL_245;
              }
              (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1057, v519);
              uint64_t v1012 = v1666;
            }
            sub_24EC88758(v1525, &qword_26B1DBA00);
            uint64_t v1014 = v1661;
            uint64_t v1015 = v1592;
            uint64_t v1016 = v1660;
LABEL_245:
            uint64_t v1122 = (void (*)(char *, uint64_t))v1016[1];
            v1122(v514, v1014);
            sub_24EC88758(v1599, &qword_26B1DB9F0);
            sub_24EC88758(v1564, &qword_26B1DB9F0);
            v1122(v1015, v1014);
            sub_24EC88758(v1639, &qword_26B1DB9F0);
            sub_24EC88758(v1645, &qword_26B1DB9F0);
            (*(void (**)(char *, uint64_t))(v1662 + 8))(v1670, v1012);
            goto LABEL_334;
          }
          goto LABEL_121;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v961, v519);
      }
      sub_24EC88758(v515, &qword_26B1DBA00);
LABEL_121:
      uint64_t v962 = (void (*)(char *, uint64_t))v1660[1];
      uint64_t v963 = v1661;
      v962(v514, v1661);
      sub_24EC88758(v1599, &qword_26B1DB9F0);
      sub_24EC88758(v512, &qword_26B1DB9F0);
      v962(v1592, v963);
      sub_24EC88758(v1639, &qword_26B1DB9F0);
      uint64_t v933 = v517;
      goto LABEL_122;
    case 4u:
      uint64_t v520 = v1614;
      uint64_t v521 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1614, v1670, v375);
      MEMORY[0x270FA5388](v521);
      strcpy((char *)&v1447 - 48, "artwork footnote subtitle title ");
      float64_t v449 = v1669.f64[0];
      v1717.f64[0] = v1669.f64[0];
      v1717.f64[1] = v1665.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      *((void *)&v1718 + 1) = *(void *)&v1665.f64[0];
      uint64_t v522 = (int *)swift_getTupleTypeMetadata();
      uint64_t v523 = v522[12];
      uint64_t v524 = (uint64_t)&v520[v523];
      uint64_t v525 = v522[16];
      uint64_t v526 = v522[20];
      uint64_t v527 = v416;
      uint64_t v528 = (uint64_t)&v520[v526];
      uint64_t v529 = v1667;
      uint64_t v1666 = v527;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_24EC88758((uint64_t)&v520[v526], &qword_26B1DB9F0);
        sub_24EC88758((uint64_t)&v520[v525], &qword_26B1DB9F0);
        sub_24EC88758(v524, &qword_26B1DB9F0);
        uint64_t v894 = *(void (**)(void, void))(v1668 + 8);
        float64_t v895 = *(double *)&v520;
        goto LABEL_87;
      }
      *(void *)&v1665.f64[0] = v529 + v526;
      uint64_t v530 = v1668;
      (*(void (**)(char *, uint64_t, float64_t))(v1668 + 32))(v1602, v529, COERCE_FLOAT64_T(*(void *)&v449));
      sub_24ECB04CC(v524, v1638);
      sub_24ECB04CC((uint64_t)&v520[v525], v1640);
      uint64_t v531 = v528;
      uint64_t v532 = v1589;
      sub_24ECB04CC(v531, v1589);
      uint64_t v533 = v529 + v523;
      uint64_t v534 = v1570;
      sub_24ECB04CC(v533, v1570);
      uint64_t v535 = v529 + v525;
      uint64_t v536 = v1600;
      sub_24ECB04CC(v535, v1600);
      uint64_t v537 = v530;
      uint64_t v538 = v1588;
      sub_24ECB04CC(*(uint64_t *)&v1665.f64[0], v1588);
      uint64_t v539 = v537;
      LOBYTE(v537) = sub_24EE57040();
      long long v540 = *(void (**)(char *, void))(v539 + 8);
      v540(v520, *(void *)&v449);
      if ((v537 & 1) == 0)
      {
        sub_24EC88758(v538, &qword_26B1DB9F0);
        sub_24EC88758(v536, &qword_26B1DB9F0);
        sub_24EC88758(v534, &qword_26B1DB9F0);
        sub_24EC88758(v532, &qword_26B1DB9F0);
        sub_24EC88758(v1640, &qword_26B1DB9F0);
        sub_24EC88758(v1638, &qword_26B1DB9F0);
        v540(v1602, *(void *)&v449);
        goto LABEL_333;
      }
      *(void *)&long long v1668 = v540;
      uint64_t v541 = v1531;
      uint64_t v542 = v1531 + *(int *)(v1656 + 48);
      uint64_t v543 = v1638;
      sub_24ECF30E4(v1638, v1531);
      sub_24ECF30E4(v534, v542);
      long long v544 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v545 = v1658;
      if (v544(v541, 1, v1658) == 1)
      {
        int v546 = v544(v542, 1, v545);
        uint64_t v547 = (uint64_t)v1527;
        if (v546 == 1)
        {
          sub_24EC88758(v541, &qword_26B1DB9F0);
          float64_t v548 = v1669.f64[0];
LABEL_175:
          uint64_t v1021 = v1512;
          uint64_t v1022 = v1512 + *(int *)(v1656 + 48);
          sub_24ECF30E4(v1640, v1512);
          sub_24ECF30E4(v1600, v1022);
          if (v544(v1021, 1, v545) == 1)
          {
            if (v544(v1022, 1, v545) == 1)
            {
              sub_24EC88758(v1021, &qword_26B1DB9F0);
LABEL_247:
              uint64_t v1127 = v1494;
              uint64_t v1128 = v1494 + *(int *)(v1656 + 48);
              uint64_t v1129 = v1589;
              sub_24ECF30E4(v1589, v1494);
              uint64_t v1130 = v1588;
              sub_24ECF30E4(v1588, v1128);
              if (v544(v1127, 1, v545) == 1)
              {
                sub_24EC88758(v1130, &qword_26B1DB9F0);
                sub_24EC88758(v1600, &qword_26B1DB9F0);
                sub_24EC88758(v1570, &qword_26B1DB9F0);
                sub_24EC88758(v1129, &qword_26B1DB9F0);
                sub_24EC88758(v1640, &qword_26B1DB9F0);
                sub_24EC88758(v543, &qword_26B1DB9F0);
                ((void (*)(char *, void))v1668)(v1602, *(void *)&v1669.f64[0]);
                if (v544(v1128, 1, v1658) == 1)
                {
                  uint64_t v1047 = v1127;
                  goto LABEL_250;
                }
LABEL_277:
                uint64_t v1060 = v1127;
LABEL_278:
                sub_24EC88758(v1060, &qword_26B1DBA00);
                goto LABEL_279;
              }
              uint64_t v1156 = v1476;
              sub_24ECF30E4(v1127, v1476);
              int v1157 = v544(v1128, 1, v545);
              uint64_t v1158 = (void (**)(uint64_t, uint64_t))(v1657 + 8);
              if (v1157 == 1)
              {
                sub_24EC88758(v1588, &qword_26B1DB9F0);
                sub_24EC88758(v1600, &qword_26B1DB9F0);
                sub_24EC88758(v1570, &qword_26B1DB9F0);
                sub_24EC88758(v1589, &qword_26B1DB9F0);
                sub_24EC88758(v1640, &qword_26B1DB9F0);
                sub_24EC88758(v543, &qword_26B1DB9F0);
                ((void (*)(char *, void))v1668)(v1602, *(void *)&v1669.f64[0]);
                (*v1158)(v1156, v545);
                goto LABEL_277;
              }
              uint64_t v1239 = v1657 + 32;
              uint64_t v1240 = v1569;
              (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1128, v545);
              sub_24ECF314C(&qword_26B1DB9E8);
              char v1137 = sub_24EE57040();
              uint64_t v1241 = *(void (**)(char *, uint64_t))(v1239 - 24);
              v1241(v1240, v545);
              sub_24EC88758(v1588, &qword_26B1DB9F0);
              sub_24EC88758(v1600, &qword_26B1DB9F0);
              sub_24EC88758(v1570, &qword_26B1DB9F0);
              sub_24EC88758(v1589, &qword_26B1DB9F0);
              sub_24EC88758(v1640, &qword_26B1DB9F0);
              sub_24EC88758(v543, &qword_26B1DB9F0);
              ((void (*)(char *, void))v1668)(v1602, *(void *)&v1669.f64[0]);
              v1241((char *)v1156, v545);
              uint64_t v1139 = v1494;
LABEL_324:
              sub_24EC88758(v1139, &qword_26B1DB9F0);
              goto LABEL_325;
            }
            goto LABEL_209;
          }
          sub_24ECF30E4(v1021, v547);
          if (v544(v1022, 1, v545) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v547, v545);
LABEL_209:
            sub_24EC88758(v1021, &qword_26B1DBA00);
            goto LABEL_252;
          }
          uint64_t v1123 = v1657;
          uint64_t v1124 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1022, v545);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1125 = sub_24EE57040();
          uint64_t v1126 = *(void (**)(char *, uint64_t))(v1123 + 8);
          v1126(v1124, v1658);
          v1126((char *)v547, v1658);
          uint64_t v543 = v1638;
          uint64_t v545 = v1658;
          sub_24EC88758(v1512, &qword_26B1DB9F0);
          if (v1125) {
            goto LABEL_247;
          }
LABEL_252:
          sub_24EC88758(v1588, &qword_26B1DB9F0);
          sub_24EC88758(v1600, &qword_26B1DB9F0);
          sub_24EC88758(v1570, &qword_26B1DB9F0);
          sub_24EC88758(v1589, &qword_26B1DB9F0);
          sub_24EC88758(v1640, &qword_26B1DB9F0);
          sub_24EC88758(v543, &qword_26B1DB9F0);
          ((void (*)(char *, void))v1668)(v1602, *(void *)&v548);
          goto LABEL_333;
        }
      }
      else
      {
        uint64_t v964 = v1514;
        sub_24ECF30E4(v541, v1514);
        int v965 = v544(v542, 1, v545);
        uint64_t v547 = (uint64_t)v1527;
        if (v965 != 1)
        {
          uint64_t v1017 = v1657;
          uint64_t v1018 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v542, v545);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1019 = sub_24EE57040();
          uint64_t v1020 = *(void (**)(char *, uint64_t))(v1017 + 8);
          v1020(v1018, v1658);
          v1020((char *)v964, v1658);
          uint64_t v543 = v1638;
          uint64_t v545 = v1658;
          sub_24EC88758(v1531, &qword_26B1DB9F0);
          float64_t v548 = v1669.f64[0];
          if ((v1019 & 1) == 0) {
            goto LABEL_252;
          }
          goto LABEL_175;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v964, v545);
      }
      sub_24EC88758(v541, &qword_26B1DBA00);
      float64_t v548 = v1669.f64[0];
      goto LABEL_252;
    case 5u:
      long long v549 = v1615;
      uint64_t v550 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1615, v1670, v416);
      MEMORY[0x270FA5388](v550);
      strcpy((char *)&v1447 - 48, "artwork caption displayStyle layout title ");
      float64_t v551 = v1669.f64[0];
      v1717.f64[0] = v1669.f64[0];
      v1717.f64[1] = v1665.f64[0];
      *(void *)&long long v1718 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v1718 + 1) = &type metadata for DynamicBrickViewLayout;
      *(float64_t *)&long long v1719 = v1665.f64[0];
      long long v552 = (int *)swift_getTupleTypeMetadata();
      uint64_t v553 = v416;
      uint64_t v554 = v552[12];
      uint64_t v555 = (uint64_t)&v549[v554];
      uint64_t v556 = v552[16];
      LODWORD(v1665.f64[0]) = v549[v556];
      uint64_t v557 = v552[20];
      double v559 = *(double *)&v549[v557];
      double v558 = *(double *)&v549[v557 + 8];
      uint64_t v560 = v552[24];
      uint64_t v561 = (uint64_t)&v549[v560];
      uint64_t v562 = v1667;
      uint64_t v1666 = v553;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_78;
      }
      LODWORD(v1664) = *(unsigned __int8 *)(v562 + v556);
      double v564 = *(double *)(v562 + v557);
      double v563 = *(double *)(v562 + v557 + 8);
      uint64_t v565 = v562 + v560;
      uint64_t v566 = v1668;
      long long v567 = v1590;
      (*(void (**)(char *, uint64_t, float64_t))(v1668 + 32))(v1590, v562, COERCE_FLOAT64_T(*(void *)&v551));
      sub_24ECB04CC((uint64_t)&v549[v554], v1647);
      uint64_t v568 = v1573;
      sub_24ECB04CC(v561, v1573);
      uint64_t v569 = v562 + v554;
      uint64_t v570 = v1571;
      sub_24ECB04CC(v569, v1571);
      uint64_t v571 = v565;
      uint64_t v572 = v1580;
      sub_24ECB04CC(v571, v1580);
      char v573 = sub_24EE57040();
      uint64_t v576 = *(void (**)(char *, void))(v566 + 8);
      uint64_t v575 = v566 + 8;
      unsigned __int8 v574 = v576;
      v576(v549, *(void *)&v551);
      if ((v573 & 1) == 0)
      {
        sub_24EC88758(v572, &qword_26B1DB9F0);
        sub_24EC88758(v570, &qword_26B1DB9F0);
        sub_24EC88758(v568, &qword_26B1DB9F0);
        uint64_t v934 = v1647;
        goto LABEL_107;
      }
      *(void *)&long long v1668 = v575;
      uint64_t v577 = v1529;
      uint64_t v578 = v1529 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v1647, v1529);
      sub_24ECF30E4(v570, v578);
      v579 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v580 = v1658;
      int v581 = v579(v577, 1, v1658);
      uint64_t v582 = v1670;
      if (v581 == 1)
      {
        if (v579(v578, 1, v580) == 1)
        {
          sub_24EC88758(v577, &qword_26B1DB9F0);
          long long v583 = v1590;
          goto LABEL_179;
        }
      }
      else
      {
        uint64_t v966 = v1515;
        sub_24ECF30E4(v577, v1515);
        if (v579(v578, 1, v580) != 1)
        {
          uint64_t v1023 = v1657;
          uint64_t v1024 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v578, v580);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1025 = sub_24EE57040();
          uint64_t v1026 = *(void (**)(char *, uint64_t))(v1023 + 8);
          v1026(v1024, v1658);
          v1026((char *)v966, v1658);
          uint64_t v580 = v1658;
          uint64_t v582 = v1670;
          sub_24EC88758(v577, &qword_26B1DB9F0);
          long long v583 = v1590;
          if (v1025)
          {
LABEL_179:
            uint64_t v1027 = v1573;
            if (LODWORD(v1665.f64[0]) == v1664 && v559 == v564 && v558 == v563)
            {
              uint64_t v1028 = v1486;
              uint64_t v1029 = v1486 + *(int *)(v1656 + 48);
              sub_24ECF30E4(v1573, v1486);
              uint64_t v1030 = v1580;
              sub_24ECF30E4(v1580, v1029);
              if (v579(v1028, 1, v580) == 1)
              {
                sub_24EC88758(v1030, &qword_26B1DB9F0);
                sub_24EC88758(v1571, &qword_26B1DB9F0);
                sub_24EC88758(v1027, &qword_26B1DB9F0);
                sub_24EC88758(v1647, &qword_26B1DB9F0);
                uint64_t v1031 = v1590;
                goto LABEL_192;
              }
              uint64_t v1173 = v1475;
              sub_24ECF30E4(v1028, v1475);
              if (v579(v1029, 1, v580) == 1)
              {
                sub_24EC88758(v1580, &qword_26B1DB9F0);
                sub_24EC88758(v1571, &qword_26B1DB9F0);
                sub_24EC88758(v1027, &qword_26B1DB9F0);
                sub_24EC88758(v1647, &qword_26B1DB9F0);
                uint64_t v1174 = v1590;
LABEL_290:
                v574(v1174, *(void *)&v1669.f64[0]);
                (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1173, v580);
                goto LABEL_291;
              }
              uint64_t v1264 = v1657;
              uint64_t v1265 = v1569;
              (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1029, v580);
              sub_24ECF314C(&qword_26B1DB9E8);
              char v1266 = sub_24EE57040();
              uint64_t v1267 = *(void (**)(char *, uint64_t))(v1264 + 8);
              v1267(v1265, v580);
              uint64_t v1268 = v580;
              sub_24EC88758(v1580, &qword_26B1DB9F0);
              sub_24EC88758(v1571, &qword_26B1DB9F0);
              sub_24EC88758(v1027, &qword_26B1DB9F0);
              sub_24EC88758(v1647, &qword_26B1DB9F0);
              v574(v1590, *(void *)&v1669.f64[0]);
              uint64_t v1269 = v1475;
              goto LABEL_345;
            }
            sub_24EC88758(v1580, &qword_26B1DB9F0);
            sub_24EC88758(v1571, &qword_26B1DB9F0);
            uint64_t v967 = v1027;
LABEL_185:
            sub_24EC88758(v967, &qword_26B1DB9F0);
            uint64_t v1032 = v1647;
            goto LABEL_196;
          }
LABEL_129:
          sub_24EC88758(v1580, &qword_26B1DB9F0);
          sub_24EC88758(v1571, &qword_26B1DB9F0);
          uint64_t v967 = v1573;
          goto LABEL_185;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v966, v580);
      }
      sub_24EC88758(v577, &qword_26B1DBA00);
      long long v583 = v1590;
      goto LABEL_129;
    case 6u:
      long long v584 = v1607;
      uint64_t v585 = v1670;
      uint64_t v586 = ((uint64_t (*)(double *))v415)(v1607);
      double v588 = *v584;
      double v587 = v584[1];
      double v589 = v584[2];
      MEMORY[0x270FA5388](v586);
      strcpy((char *)&v1447 - 48, "layout artwork title subtitle ");
      *(void *)&v1717.f64[0] = &type metadata for MonogramVerticalStackViewLayout;
      float64_t v590 = v1669.f64[0];
      v1717.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      *((void *)&v1718 + 1) = *(void *)&v1665.f64[0];
      long long v591 = (int *)swift_getTupleTypeMetadata();
      uint64_t v592 = v591[12];
      uint64_t v593 = (char *)v584 + v592;
      uint64_t v594 = v591[16];
      uint64_t v595 = (uint64_t)v584 + v594;
      uint64_t v596 = v591[20];
      uint64_t v597 = v416;
      uint64_t v598 = (uint64_t)v584 + v596;
      long long v599 = (double *)v1667;
      uint64_t v1666 = v597;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_24EC88758(v598, &qword_26B1DB9F0);
        sub_24EC88758(v595, &qword_26B1DB9F0);
        (*(void (**)(char *, float64_t))(v1668 + 8))(v593, COERCE_FLOAT64_T(*(void *)&v590));
        uint64_t v434 = v585;
        goto LABEL_94;
      }
      double v601 = *v599;
      double v600 = v599[1];
      double v602 = v599[2];
      long long v603 = (char *)v599 + v592;
      long long v604 = (char *)v599 + v594;
      uint64_t v605 = (uint64_t)v599 + v596;
      long long v606 = *(void (**)(char *, char *, void))(v1668 + 32);
      v606(v1641, v593, *(void *)&v590);
      sub_24ECB04CC(v595, v1643);
      sub_24ECB04CC(v598, v1603);
      long long v607 = v1557;
      v606(v1557, v603, *(void *)&v590);
      uint64_t v608 = (uint64_t)v604;
      uint64_t v609 = v1544;
      sub_24ECB04CC(v608, v1544);
      uint64_t v610 = v1543;
      sub_24ECB04CC(v605, v1543);
      if (v588 != v601 || v587 != v600 || v589 != v602)
      {
        sub_24EC88758(v610, &qword_26B1DB9F0);
        sub_24EC88758(v609, &qword_26B1DB9F0);
        uint64_t v935 = *(void (**)(char *, void))(v1668 + 8);
        uint64_t v936 = v607;
        float64_t v937 = v1669.f64[0];
        v935(v936, *(void *)&v1669.f64[0]);
        sub_24EC88758(v1603, &qword_26B1DB9F0);
        sub_24EC88758(v1643, &qword_26B1DB9F0);
        uint64_t v938 = v1641;
LABEL_153:
        v935(v938, *(void *)&v937);
        goto LABEL_333;
      }
      long long v611 = v1641;
      long long v612 = v607;
      float64_t v613 = v1669.f64[0];
      char v614 = sub_24EE57040();
      uint64_t v480 = v1670;
      if ((v614 & 1) == 0)
      {
        sub_24EC88758(v610, &qword_26B1DB9F0);
        sub_24EC88758(v609, &qword_26B1DB9F0);
        uint64_t v968 = *(void (**)(char *, void))(v1668 + 8);
        v968(v612, *(void *)&v613);
        sub_24EC88758(v1603, &qword_26B1DB9F0);
        sub_24EC88758(v1643, &qword_26B1DB9F0);
        v968(v611, *(void *)&v613);
        goto LABEL_141;
      }
      uint64_t v615 = v1518;
      uint64_t v616 = v1518 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v1643, v1518);
      sub_24ECF30E4(v609, v616);
      uint64_t v617 = v1657;
      long long v618 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v619 = v1658;
      if (v618(v615, 1, v1658) == 1)
      {
        if (v618(v616, 1, v619) == 1)
        {
          sub_24EC88758(v615, &qword_26B1DB9F0);
          goto LABEL_217;
        }
      }
      else
      {
        uint64_t v991 = v1502;
        sub_24ECF30E4(v615, v1502);
        if (v618(v616, 1, v619) != 1)
        {
          uint64_t v1062 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v617 + 32))(v1569, v616, v619);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1063 = sub_24EE57040();
          uint64_t v1064 = *(void (**)(char *, uint64_t))(v617 + 8);
          uint64_t v1065 = v1062;
          uint64_t v610 = v1543;
          v1064(v1065, v1658);
          v1064((char *)v991, v1658);
          uint64_t v609 = v1544;
          uint64_t v619 = v1658;
          sub_24EC88758(v615, &qword_26B1DB9F0);
          long long v611 = v1641;
          if (v1063)
          {
LABEL_217:
            uint64_t v1066 = v1510;
            uint64_t v1067 = v1510 + *(int *)(v1656 + 48);
            uint64_t v1068 = v1603;
            sub_24ECF30E4(v1603, v1510);
            sub_24ECF30E4(v610, v1067);
            if (v618(v1066, 1, v619) == 1)
            {
              sub_24EC88758(v610, &qword_26B1DB9F0);
              sub_24EC88758(v609, &qword_26B1DB9F0);
              uint64_t v1069 = *(void (**)(char *, void))(v1668 + 8);
              float64_t v1070 = v1669.f64[0];
              v1069(v1557, *(void *)&v1669.f64[0]);
              sub_24EC88758(v1068, &qword_26B1DB9F0);
              sub_24EC88758(v1643, &qword_26B1DB9F0);
              uint64_t v1066 = v1510;
              v1069(v1641, *(void *)&v1070);
              unsigned int v1071 = v618(v1067, 1, v1658);
              uint64_t v1072 = v1666;
              if (v1071 == 1)
              {
                sub_24EC88758(v1066, &qword_26B1DB9F0);
LABEL_298:
                (*(void (**)(char *, uint64_t))(v1662 + 8))(v1670, v1072);
LABEL_367:
                char v439 = 1;
                return v439 & 1;
              }
            }
            else
            {
              uint64_t v1140 = v1482;
              sub_24ECF30E4(v1066, v1482);
              if (v618(v1067, 1, v619) != 1)
              {
                uint64_t v1192 = v1569;
                (*(void (**)(char *, uint64_t, uint64_t))(v617 + 32))(v1569, v1067, v619);
                sub_24ECF314C(&qword_26B1DB9E8);
                LODWORD(v1667) = sub_24EE57040();
                uint64_t v1193 = *(void (**)(char *, uint64_t))(v617 + 8);
                v1193(v1192, v619);
                sub_24EC88758(v1543, &qword_26B1DB9F0);
                sub_24EC88758(v1544, &qword_26B1DB9F0);
                uint64_t v1194 = *(void (**)(char *, void))(v1668 + 8);
                uint64_t v1195 = v1140;
                float64_t v1196 = v1669.f64[0];
                v1194(v1557, *(void *)&v1669.f64[0]);
                sub_24EC88758(v1068, &qword_26B1DB9F0);
                sub_24EC88758(v1643, &qword_26B1DB9F0);
                v1194(v1641, *(void *)&v1196);
                v1193((char *)v1195, v1658);
                sub_24EC88758(v1066, &qword_26B1DB9F0);
                uint64_t v1072 = v1666;
                if (v1667) {
                  goto LABEL_298;
                }
LABEL_299:
                (*(void (**)(char *, uint64_t))(v1662 + 8))(v1670, v1072);
                goto LABEL_334;
              }
              sub_24EC88758(v1543, &qword_26B1DB9F0);
              sub_24EC88758(v1544, &qword_26B1DB9F0);
              uint64_t v1141 = v619;
              uint64_t v1142 = *(void (**)(char *, void))(v1668 + 8);
              float64_t v1143 = v1669.f64[0];
              v1142(v1557, *(void *)&v1669.f64[0]);
              sub_24EC88758(v1068, &qword_26B1DB9F0);
              sub_24EC88758(v1643, &qword_26B1DB9F0);
              v1142(v1641, *(void *)&v1143);
              (*(void (**)(uint64_t, uint64_t))(v617 + 8))(v1140, v1141);
              uint64_t v1072 = v1666;
            }
            sub_24EC88758(v1066, &qword_26B1DBA00);
            goto LABEL_299;
          }
          goto LABEL_152;
        }
        (*(void (**)(uint64_t, uint64_t))(v617 + 8))(v991, v619);
        long long v611 = v1641;
      }
      sub_24EC88758(v615, &qword_26B1DBA00);
LABEL_152:
      sub_24EC88758(v610, &qword_26B1DB9F0);
      sub_24EC88758(v609, &qword_26B1DB9F0);
      uint64_t v935 = *(void (**)(char *, void))(v1668 + 8);
      float64_t v937 = v1669.f64[0];
      v935(v1557, *(void *)&v1669.f64[0]);
      sub_24EC88758(v1603, &qword_26B1DB9F0);
      sub_24EC88758(v1643, &qword_26B1DB9F0);
      uint64_t v938 = v611;
      goto LABEL_153;
    case 7u:
      long long v549 = v1616;
      uint64_t v620 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1616, v1670, v416);
      MEMORY[0x270FA5388](v620);
      strcpy((char *)&v1447 - 48, "artwork caption displayStyle layout title ");
      float64_t v551 = v1669.f64[0];
      v1717.f64[0] = v1669.f64[0];
      v1717.f64[1] = v1665.f64[0];
      *(void *)&long long v1718 = &type metadata for DynamicBrickDisplayStyle;
      *((void *)&v1718 + 1) = &type metadata for DynamicBrickViewLayout;
      *(float64_t *)&long long v1719 = v1665.f64[0];
      long long v621 = (int *)swift_getTupleTypeMetadata();
      uint64_t v622 = v416;
      uint64_t v623 = v621[12];
      uint64_t v555 = (uint64_t)&v549[v623];
      uint64_t v624 = v621[16];
      LODWORD(v1665.f64[0]) = v549[v624];
      uint64_t v625 = v621[20];
      double v627 = *(double *)&v549[v625];
      double v626 = *(double *)&v549[v625 + 8];
      uint64_t v628 = v621[24];
      uint64_t v561 = (uint64_t)&v549[v628];
      uint64_t v629 = v1667;
      uint64_t v1666 = v622;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_78:
        sub_24EC88758(v561, &qword_26B1DB9F0);
        sub_24EC88758(v555, &qword_26B1DB9F0);
        (*(void (**)(char *, float64_t))(v1668 + 8))(v549, COERCE_FLOAT64_T(*(void *)&v551));
        goto LABEL_90;
      }
      LODWORD(v1664) = *(unsigned __int8 *)(v629 + v624);
      double v631 = *(double *)(v629 + v625);
      double v630 = *(double *)(v629 + v625 + 8);
      uint64_t v632 = v629 + v628;
      uint64_t v633 = v1668;
      long long v567 = v1591;
      (*(void (**)(char *, uint64_t, float64_t))(v1668 + 32))(v1591, v629, COERCE_FLOAT64_T(*(void *)&v551));
      sub_24ECB04CC((uint64_t)&v549[v623], v1648);
      uint64_t v634 = v1574;
      sub_24ECB04CC(v561, v1574);
      uint64_t v635 = v629 + v623;
      uint64_t v636 = v1572;
      sub_24ECB04CC(v635, v1572);
      uint64_t v637 = v632;
      uint64_t v638 = v1581;
      sub_24ECB04CC(v637, v1581);
      char v639 = sub_24EE57040();
      long long v641 = *(void (**)(char *, void))(v633 + 8);
      uint64_t v640 = v633 + 8;
      unsigned __int8 v574 = v641;
      v641(v549, *(void *)&v551);
      if ((v639 & 1) == 0)
      {
        sub_24EC88758(v638, &qword_26B1DB9F0);
        sub_24EC88758(v636, &qword_26B1DB9F0);
        sub_24EC88758(v634, &qword_26B1DB9F0);
        uint64_t v934 = v1648;
LABEL_107:
        sub_24EC88758(v934, &qword_26B1DB9F0);
        v574(v567, *(void *)&v551);
        goto LABEL_333;
      }
      *(void *)&long long v1668 = v640;
      uint64_t v642 = v1530;
      uint64_t v643 = v1530 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v1648, v1530);
      sub_24ECF30E4(v636, v643);
      v579 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v580 = v1658;
      int v644 = v579(v642, 1, v1658);
      uint64_t v582 = v1670;
      if (v644 == 1)
      {
        if (v579(v643, 1, v580) == 1)
        {
          sub_24EC88758(v642, &qword_26B1DB9F0);
          long long v583 = v1591;
          goto LABEL_187;
        }
      }
      else
      {
        uint64_t v969 = v1516;
        sub_24ECF30E4(v642, v1516);
        if (v579(v643, 1, v580) != 1)
        {
          uint64_t v1033 = v1657;
          uint64_t v1034 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v643, v580);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1035 = sub_24EE57040();
          v1036 = *(void (**)(char *, uint64_t))(v1033 + 8);
          v1036(v1034, v1658);
          v1036((char *)v969, v1658);
          uint64_t v580 = v1658;
          uint64_t v582 = v1670;
          sub_24EC88758(v642, &qword_26B1DB9F0);
          long long v583 = v1591;
          if (v1035)
          {
LABEL_187:
            uint64_t v1037 = v1574;
            if (LODWORD(v1665.f64[0]) == v1664 && v627 == v631 && v626 == v630)
            {
              uint64_t v1028 = v1487;
              uint64_t v1029 = v1487 + *(int *)(v1656 + 48);
              sub_24ECF30E4(v1574, v1487);
              uint64_t v1038 = v1581;
              sub_24ECF30E4(v1581, v1029);
              if (v579(v1028, 1, v580) == 1)
              {
                sub_24EC88758(v1038, &qword_26B1DB9F0);
                sub_24EC88758(v1572, &qword_26B1DB9F0);
                sub_24EC88758(v1037, &qword_26B1DB9F0);
                sub_24EC88758(v1648, &qword_26B1DB9F0);
                uint64_t v1031 = v1591;
LABEL_192:
                v574(v1031, *(void *)&v1669.f64[0]);
                if (v579(v1029, 1, v1658) == 1)
                {
                  sub_24EC88758(v1028, &qword_26B1DB9F0);
                  uint64_t v1039 = v1666;
                  goto LABEL_346;
                }
LABEL_291:
                sub_24EC88758(v1028, &qword_26B1DBA00);
                uint64_t v1039 = v1666;
                goto LABEL_347;
              }
              uint64_t v1173 = v1477;
              sub_24ECF30E4(v1028, v1477);
              if (v579(v1029, 1, v580) == 1)
              {
                sub_24EC88758(v1581, &qword_26B1DB9F0);
                sub_24EC88758(v1572, &qword_26B1DB9F0);
                sub_24EC88758(v1037, &qword_26B1DB9F0);
                sub_24EC88758(v1648, &qword_26B1DB9F0);
                uint64_t v1174 = v1591;
                goto LABEL_290;
              }
              uint64_t v1270 = v1657;
              uint64_t v1271 = v1569;
              (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1029, v580);
              sub_24ECF314C(&qword_26B1DB9E8);
              char v1266 = sub_24EE57040();
              uint64_t v1267 = *(void (**)(char *, uint64_t))(v1270 + 8);
              v1267(v1271, v580);
              uint64_t v1268 = v580;
              sub_24EC88758(v1581, &qword_26B1DB9F0);
              sub_24EC88758(v1572, &qword_26B1DB9F0);
              sub_24EC88758(v1037, &qword_26B1DB9F0);
              sub_24EC88758(v1648, &qword_26B1DB9F0);
              v574(v1591, *(void *)&v1669.f64[0]);
              uint64_t v1269 = v1477;
LABEL_345:
              v1267((char *)v1269, v1268);
              sub_24EC88758(v1028, &qword_26B1DB9F0);
              uint64_t v1039 = v1666;
              if (v1266)
              {
LABEL_346:
                (*(void (**)(char *, uint64_t))(v1662 + 8))(v582, v1039);
                goto LABEL_367;
              }
LABEL_347:
              (*(void (**)(char *, uint64_t))(v1662 + 8))(v582, v1039);
              goto LABEL_334;
            }
            sub_24EC88758(v1581, &qword_26B1DB9F0);
            sub_24EC88758(v1572, &qword_26B1DB9F0);
            uint64_t v970 = v1037;
LABEL_195:
            sub_24EC88758(v970, &qword_26B1DB9F0);
            uint64_t v1032 = v1648;
LABEL_196:
            sub_24EC88758(v1032, &qword_26B1DB9F0);
            v574(v583, *(void *)&v1669.f64[0]);
            goto LABEL_197;
          }
LABEL_134:
          sub_24EC88758(v1581, &qword_26B1DB9F0);
          sub_24EC88758(v1572, &qword_26B1DB9F0);
          uint64_t v970 = v1574;
          goto LABEL_195;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v969, v580);
      }
      sub_24EC88758(v642, &qword_26B1DBA00);
      long long v583 = v1591;
      goto LABEL_134;
    case 8u:
      uint64_t v645 = v1608;
      uint64_t v646 = ((uint64_t (*)(double *, char *, uint64_t))v415)(v1608, v1670, v375);
      float64_t v647 = *v645;
      float64_t v648 = v645[1];
      uint64_t v649 = *((void *)v645 + 2);
      uint64_t v650 = *((void *)v645 + 3);
      uint64_t v1655 = *((void *)v645 + 4);
      v1654 = (char *)*((void *)v645 + 5);
      uint64_t v1653 = *((void *)v645 + 6);
      uint64_t v651 = *((void *)v645 + 7);
      uint64_t v652 = *((void *)v645 + 8);
      uint64_t v653 = *((void *)v645 + 9);
      uint64_t v654 = *((void *)v645 + 10);
      uint64_t v1661 = *((void *)v645 + 11);
      uint64_t v1660 = (void *)*((void *)v645 + 12);
      MEMORY[0x270FA5388](v646);
      strcpy((char *)&v1447 - 48, "layout artwork title subtitle caption ");
      *(void *)&v1717.f64[0] = &type metadata for StandardCardViewLayout;
      v1717.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      *((void *)&v1718 + 1) = *(void *)&v1665.f64[0];
      *(float64_t *)&long long v1719 = v1665.f64[0];
      uint64_t v655 = (int *)swift_getTupleTypeMetadata();
      uint64_t v656 = v655[12];
      v657 = (char *)v645 + v656;
      uint64_t v658 = v655[16];
      uint64_t v659 = (uint64_t)v645 + v658;
      uint64_t v660 = v655[20];
      uint64_t v661 = v416;
      uint64_t v662 = (uint64_t)v645 + v660;
      uint64_t v663 = v655[24];
      uint64_t v664 = (uint64_t)v645 + v663;
      uint64_t v665 = v1667;
      uint64_t v1666 = v661;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        sub_24EC88758(v664, &qword_26B1DB9F0);
        sub_24EC88758(v662, &qword_26B1DB9F0);
        sub_24EC88758(v659, &qword_26B1DB9F0);
        (*(void (**)(char *, void))(v1668 + 8))(v657, *(void *)&v1669.f64[0]);
        goto LABEL_90;
      }
      float64x2_t v1665 = *(float64x2_t *)v665;
      uint64_t v1664 = *(void *)(v665 + 16);
      *(void *)&long long v1663 = *(void *)(v665 + 24);
      float64x2_t v1652 = *(float64x2_t *)(v665 + 32);
      uint64_t v1651 = *(unsigned __int8 **)(v665 + 48);
      long long v1650 = *(_OWORD *)(v665 + 56);
      long long v1649 = *(_OWORD *)(v665 + 72);
      unsigned __int8 v666 = (char *)(v665 + v656);
      uint64_t v667 = v665 + v658;
      uint64_t v1646 = (char *)(v665 + v660);
      uint64_t v1648 = *(void *)(v665 + 88);
      uint64_t v1647 = *(void *)(v665 + 96);
      uint64_t v1667 = v665 + v663;
      uint64_t v668 = *(void (**)(char *, char *, void))(v1668 + 32);
      float64_t v669 = v1669.f64[0];
      v668(v1637, v657, *(void *)&v1669.f64[0]);
      uint64_t v670 = v659;
      uint64_t v671 = v1554;
      sub_24ECB04CC(v670, v1554);
      sub_24ECB04CC(v662, v1604);
      uint64_t v672 = v664;
      uint64_t v673 = v1586;
      sub_24ECB04CC(v672, v1586);
      v674 = v1551;
      v668(v1551, v666, *(void *)&v669);
      uint64_t v675 = v1540;
      sub_24ECB04CC(v667, v1540);
      uint64_t v676 = v1566;
      sub_24ECB04CC((uint64_t)v1646, v1566);
      uint64_t v677 = v1561;
      sub_24ECB04CC(v1667, v1561);
      v1717.f64[0] = v647;
      v1717.f64[1] = v648;
      *(void *)&long long v1718 = v649;
      *((void *)&v1718 + 1) = v650;
      *(void *)&long long v1719 = v1655;
      *((void *)&v1719 + 1) = v1654;
      *(void *)&long long v1720 = v1653;
      *((void *)&v1720 + 1) = v651;
      *(void *)&long long v1721 = v652;
      *((void *)&v1721 + 1) = v653;
      *(void *)&long long v1722 = v654;
      *((void *)&v1722 + 1) = v1661;
      *(void *)&long long v1723 = v1660;
      float64x2_t v1703 = v1665;
      *(void *)&long long v1704 = v1664;
      *((void *)&v1704 + 1) = v1663;
      float64x2_t v1705 = v1652;
      *(void *)&v1706[0] = v1651;
      *(_OWORD *)((char *)v1706 + 8) = v1650;
      *(_OWORD *)((char *)&v1706[1] + 8) = v1649;
      *((void *)&v1706[2] + 1) = v1648;
      *(void *)&long long v1707 = v1647;
      if (!_s15FitnessCanvasUI22StandardCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1717, (uint64_t)&v1703))
      {
        sub_24EC88758(v677, &qword_26B1DB9F0);
        sub_24EC88758(v676, &qword_26B1DB9F0);
        sub_24EC88758(v675, &qword_26B1DB9F0);
        uint64_t v939 = v671;
        uint64_t v940 = *(void (**)(char *, void))(v1668 + 8);
        float64_t v941 = v1669.f64[0];
        v940(v674, *(void *)&v1669.f64[0]);
        sub_24EC88758(v673, &qword_26B1DB9F0);
        sub_24EC88758(v1604, &qword_26B1DB9F0);
        sub_24EC88758(v939, &qword_26B1DB9F0);
        v940(v1637, *(void *)&v941);
        goto LABEL_333;
      }
      uint64_t v678 = v675;
      uint64_t v679 = v1637;
      float64_t v680 = v1669.f64[0];
      char v681 = sub_24EE57040();
      uint64_t v682 = v1670;
      if ((v681 & 1) == 0)
      {
        sub_24EC88758(v677, &qword_26B1DB9F0);
        sub_24EC88758(v676, &qword_26B1DB9F0);
        sub_24EC88758(v678, &qword_26B1DB9F0);
        uint64_t v971 = v671;
        uint64_t v972 = *(void (**)(char *, void))(v1668 + 8);
        v972(v674, *(void *)&v680);
        sub_24EC88758(v1586, &qword_26B1DB9F0);
        sub_24EC88758(v1604, &qword_26B1DB9F0);
        sub_24EC88758(v971, &qword_26B1DB9F0);
        v972(v679, *(void *)&v680);
        goto LABEL_137;
      }
      uint64_t v683 = v1519;
      uint64_t v684 = v1519 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v671, v1519);
      sub_24ECF30E4(v678, v684);
      uint64_t v685 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v686 = v1658;
      int v687 = v685(v683, 1, v1658);
      uint64_t v1667 = (uint64_t)v685;
      if (v687 == 1)
      {
        uint64_t v688 = v684;
        uint64_t v689 = v686;
        unsigned __int8 v690 = v679;
        if (v685(v688, 1, v686) == 1)
        {
          sub_24EC88758(v683, &qword_26B1DB9F0);
          uint64_t v691 = v1604;
          uint64_t v692 = v678;
          uint64_t v693 = v689;
LABEL_221:
          uint64_t v1078 = v1498;
          uint64_t v1079 = v1498 + *(int *)(v1656 + 48);
          sub_24ECF30E4(v691, v1498);
          sub_24ECF30E4(v1566, v1079);
          uint64_t v1080 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1667;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1667)(v1078, 1, v693) == 1)
          {
            if (v1080(v1079, 1, v693) == 1)
            {
              sub_24EC88758(v1078, &qword_26B1DB9F0);
LABEL_301:
              uint64_t v1201 = v1490;
              uint64_t v1202 = v1490 + *(int *)(v1656 + 48);
              sub_24ECF30E4(v1586, v1490);
              uint64_t v1203 = v1561;
              *(void *)&v1665.f64[0] = v1202;
              sub_24ECF30E4(v1561, v1202);
              if (v1080(v1201, 1, v693) == 1)
              {
                sub_24EC88758(v1203, &qword_26B1DB9F0);
                sub_24EC88758(v1566, &qword_26B1DB9F0);
                sub_24EC88758(v692, &qword_26B1DB9F0);
                uint64_t v1204 = *(void (**)(char *, void))(v1668 + 8);
                float64_t v1205 = v1669.f64[0];
                v1204(v1551, *(void *)&v1669.f64[0]);
                sub_24EC88758(v1586, &qword_26B1DB9F0);
                sub_24EC88758(v691, &qword_26B1DB9F0);
                sub_24EC88758(v1554, &qword_26B1DB9F0);
                v1204(v690, *(void *)&v1205);
                uint64_t v1206 = v1490;
                int v1207 = v1080(*(void *)&v1665.f64[0], 1, v1658);
                goto LABEL_312;
              }
              uint64_t v1247 = v1201;
              uint64_t v1248 = v1201;
              uint64_t v1249 = (uint64_t)v1474;
              sub_24ECF30E4(v1247, (uint64_t)v1474);
              float64_t v1250 = v1665.f64[0];
              if (v1080(*(void *)&v1665.f64[0], 1, v693) == 1)
              {
                sub_24EC88758(v1561, &qword_26B1DB9F0);
                sub_24EC88758(v1566, &qword_26B1DB9F0);
                sub_24EC88758(v1540, &qword_26B1DB9F0);
                uint64_t v1251 = v693;
                uint64_t v1252 = *(void (**)(char *, void))(v1668 + 8);
                float64_t v1253 = v1669.f64[0];
                v1252(v1551, *(void *)&v1669.f64[0]);
                sub_24EC88758(v1586, &qword_26B1DB9F0);
                sub_24EC88758(v691, &qword_26B1DB9F0);
                sub_24EC88758(v1554, &qword_26B1DB9F0);
                v1252(v690, *(void *)&v1253);
                (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1249, v1251);
                uint64_t v814 = v1666;
                uint64_t v1206 = v1248;
LABEL_342:
                uint64_t v1002 = v1206;
LABEL_166:
                sub_24EC88758(v1002, &qword_26B1DBA00);
                uint64_t v815 = v1670;
LABEL_167:
                (*(void (**)(char *, uint64_t))(v1662 + 8))(v815, v814);
                goto LABEL_334;
              }
              uint64_t v1308 = v1657;
              uint64_t v1309 = v1569;
              (*(void (**)(char *, float64_t, uint64_t))(v1657 + 32))(v1569, COERCE_FLOAT64_T(*(void *)&v1250), v693);
              sub_24ECF314C(&qword_26B1DB9E8);
              LODWORD(v1667) = sub_24EE57040();
              uint64_t v1310 = *(void (**)(char *, uint64_t))(v1308 + 8);
              v1310(v1309, v693);
              sub_24EC88758(v1561, &qword_26B1DB9F0);
              sub_24EC88758(v1566, &qword_26B1DB9F0);
              sub_24EC88758(v1540, &qword_26B1DB9F0);
              uint64_t v1311 = v1248;
              uint64_t v1312 = *(void (**)(char *, void))(v1668 + 8);
              float64_t v1313 = v1669.f64[0];
              v1312(v1551, *(void *)&v1669.f64[0]);
              sub_24EC88758(v1586, &qword_26B1DB9F0);
              sub_24EC88758(v691, &qword_26B1DB9F0);
              sub_24EC88758(v1554, &qword_26B1DB9F0);
              v1312(v690, *(void *)&v1313);
              v1310(v1474, v1658);
              uint64_t v1314 = v1311;
              goto LABEL_365;
            }
            goto LABEL_259;
          }
          uint64_t v1144 = v1483;
          sub_24ECF30E4(v1078, v1483);
          if (v1080(v1079, 1, v693) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1144, v693);
            unsigned __int8 v690 = v1637;
LABEL_259:
            sub_24EC88758(v1078, &qword_26B1DBA00);
            goto LABEL_303;
          }
          uint64_t v1197 = v1657;
          uint64_t v1198 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1079, v693);
          sub_24ECF314C(&qword_26B1DB9E8);
          LODWORD(v1665.f64[0]) = sub_24EE57040();
          uint64_t v1199 = v1078;
          uint64_t v1200 = *(void (**)(char *, uint64_t))(v1197 + 8);
          uint64_t v692 = v1540;
          v1200(v1198, v1658);
          v1200((char *)v1144, v1658);
          uint64_t v693 = v1658;
          sub_24EC88758(v1199, &qword_26B1DB9F0);
          unsigned __int8 v690 = v1637;
          if (LOBYTE(v1665.f64[0])) {
            goto LABEL_301;
          }
LABEL_303:
          sub_24EC88758(v1561, &qword_26B1DB9F0);
          sub_24EC88758(v1566, &qword_26B1DB9F0);
          sub_24EC88758(v692, &qword_26B1DB9F0);
          uint64_t v1208 = *(void (**)(char *, void))(v1668 + 8);
          float64_t v1209 = v1669.f64[0];
          v1208(v1551, *(void *)&v1669.f64[0]);
          sub_24EC88758(v1586, &qword_26B1DB9F0);
          sub_24EC88758(v691, &qword_26B1DB9F0);
          sub_24EC88758(v1554, &qword_26B1DB9F0);
          v1208(v690, *(void *)&v1209);
          goto LABEL_333;
        }
      }
      else
      {
        uint64_t v992 = v1503;
        sub_24ECF30E4(v683, v1503);
        int v993 = v685(v684, 1, v686);
        uint64_t v994 = v686;
        if (v993 != 1)
        {
          uint64_t v1073 = v1657;
          uint64_t v1074 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v684, v994);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1075 = sub_24EE57040();
          uint64_t v1076 = *(void (**)(char *, uint64_t))(v1073 + 8);
          uint64_t v692 = v1540;
          v1076(v1074, v1658);
          v1076((char *)v992, v1658);
          uint64_t v693 = v1658;
          uint64_t v1077 = v683;
          uint64_t v691 = v1604;
          sub_24EC88758(v1077, &qword_26B1DB9F0);
          unsigned __int8 v690 = v1637;
          if ((v1075 & 1) == 0) {
            goto LABEL_303;
          }
          goto LABEL_221;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v992, v686);
        unsigned __int8 v690 = v1637;
      }
      sub_24EC88758(v683, &qword_26B1DBA00);
      uint64_t v691 = v1604;
      uint64_t v692 = v678;
      goto LABEL_303;
    case 9u:
      v694 = v1612;
      uint64_t v695 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1612, v1670, v375);
      long long v696 = *((_OWORD *)v694 + 7);
      long long v1723 = *((_OWORD *)v694 + 6);
      long long v1724 = v696;
      long long v697 = *((_OWORD *)v694 + 9);
      long long v1725 = *((_OWORD *)v694 + 8);
      long long v1726 = v697;
      long long v698 = *((_OWORD *)v694 + 3);
      long long v1719 = *((_OWORD *)v694 + 2);
      long long v1720 = v698;
      long long v699 = *((_OWORD *)v694 + 5);
      long long v1721 = *((_OWORD *)v694 + 4);
      long long v1722 = v699;
      long long v700 = *((_OWORD *)v694 + 1);
      float64x2_t v1717 = *(float64x2_t *)v694;
      long long v1718 = v700;
      MEMORY[0x270FA5388](v695);
      strcpy((char *)&v1447 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
      *(void *)&v1703.f64[0] = &type metadata for StandardHorizontalStackViewLayout;
      float64_t v449 = v1669.f64[0];
      v1703.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1704 = v1665.f64[0];
      *((void *)&v1704 + 1) = *(void *)&v1665.f64[0];
      v1705.f64[0] = v1665.f64[0];
      v1705.f64[1] = v1665.f64[0];
      uint64_t v701 = v1661;
      *(void *)&v1706[0] = v1661;
      uint64_t v702 = (int *)swift_getTupleTypeMetadata();
      uint64_t v703 = &v694[v702[12]];
      *(void *)&v1665.f64[0] = &v694[v702[16]];
      v1654 = &v694[v702[20]];
      uint64_t v704 = (uint64_t)&v694[v702[24]];
      uint64_t v705 = (uint64_t)&v694[v702[28]];
      uint64_t v706 = v416;
      long long v707 = &v694[v702[32]];
      uint64_t v708 = v1667;
      uint64_t v1666 = v706;
      if (swift_getEnumCaseMultiPayload() != 9)
      {
        ((void (*)(char *, uint64_t))v1660[1])(v707, v701);
        sub_24EC88758(v705, &qword_26B1DB9F0);
        sub_24EC88758(v704, &qword_26B1DB9F0);
        sub_24EC88758((uint64_t)v1654, &qword_26B1DB9F0);
        sub_24EC88758(*(uint64_t *)&v1665.f64[0], &qword_26B1DB9F0);
        uint64_t v894 = *(void (**)(void, void))(v1668 + 8);
        float64_t v895 = *(double *)&v703;
        goto LABEL_87;
      }
      long long v709 = *(_OWORD *)(v708 + 64);
      v1706[2] = *(_OWORD *)(v708 + 80);
      v1706[1] = v709;
      long long v710 = *(_OWORD *)(v708 + 128);
      long long v1710 = *(_OWORD *)(v708 + 144);
      long long v1709 = v710;
      long long v711 = *(_OWORD *)(v708 + 96);
      long long v1708 = *(_OWORD *)(v708 + 112);
      long long v1707 = v711;
      float64x2_t v712 = *(float64x2_t *)(v708 + 32);
      v1706[0] = *(_OWORD *)(v708 + 48);
      float64x2_t v1705 = v712;
      long long v713 = *(_OWORD *)(v708 + 16);
      float64x2_t v1703 = *(float64x2_t *)v708;
      long long v1704 = v713;
      *(void *)&long long v1650 = v708 + v702[12];
      uint64_t v1651 = (unsigned __int8 *)(v708 + v702[16]);
      uint64_t v1653 = v708 + v702[20];
      *(void *)&long long v1663 = v708 + v702[24];
      uint64_t v1664 = v708 + v702[28];
      uint64_t v1667 = v708 + v702[32];
      v714 = v703;
      uint64_t v715 = *(void (**)(uint64_t, char *, void))(v1668 + 32);
      v715((uint64_t)v1646, v714, *(void *)&v449);
      sub_24ECB04CC(*(uint64_t *)&v1665.f64[0], v1632);
      sub_24ECB04CC((uint64_t)v1654, v1631);
      sub_24ECB04CC(v704, v1628);
      sub_24ECB04CC(v705, v1624);
      uint64_t v716 = v1660;
      v717 = (void (*)(char *, char *, uint64_t))v1660[4];
      v717(v1622, v707, v701);
      v715((uint64_t)v1642, (char *)v1650, *(void *)&v449);
      uint64_t v718 = v1550;
      sub_24ECB04CC((uint64_t)v1651, v1550);
      uint64_t v719 = v1565;
      sub_24ECB04CC(v1653, v1565);
      uint64_t v720 = v1585;
      sub_24ECB04CC(v1663, v1585);
      uint64_t v721 = v1576;
      sub_24ECB04CC(v1664, v1576);
      uint64_t v722 = v1560;
      v717(v1560, (char *)v1667, v701);
      long long v1693 = v1723;
      long long v1694 = v1724;
      long long v1695 = v1725;
      long long v1696 = v1726;
      long long v1689 = v1719;
      long long v1690 = v1720;
      long long v1691 = v1721;
      long long v1692 = v1722;
      float64x2_t v1687 = v1717;
      long long v1688 = v1718;
      long long v1677 = v1707;
      long long v1678 = v1708;
      long long v1679 = v1709;
      long long v1680 = v1710;
      float64x2_t v1673 = v1705;
      long long v1674 = v1706[0];
      long long v1675 = v1706[1];
      long long v1676 = v1706[2];
      float64x2_t v1671 = v1703;
      long long v1672 = v1704;
      if (!_s15FitnessCanvasUI33StandardHorizontalStackViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1687, (uint64_t)&v1671))
      {
        uint64_t v942 = (void (*)(char *, uint64_t))v716[1];
        v942(v722, v701);
        sub_24EC88758(v721, &qword_26B1DB9F0);
        sub_24EC88758(v720, &qword_26B1DB9F0);
        sub_24EC88758(v719, &qword_26B1DB9F0);
        sub_24EC88758(v718, &qword_26B1DB9F0);
        uint64_t v943 = *(void (**)(char *, void))(v1668 + 8);
        float64_t v944 = v1669.f64[0];
        v943(v1642, *(void *)&v1669.f64[0]);
        v942(v1622, v701);
        sub_24EC88758(v1624, &qword_26B1DB9F0);
        sub_24EC88758(v1628, &qword_26B1DB9F0);
        sub_24EC88758(v1631, &qword_26B1DB9F0);
        sub_24EC88758(v1632, &qword_26B1DB9F0);
        v943(v1646, *(void *)&v944);
        goto LABEL_333;
      }
      uint64_t v723 = v719;
      uint64_t v724 = v1642;
      char v725 = sub_24EE57040();
      uint64_t v682 = v1670;
      if ((v725 & 1) == 0)
      {
        uint64_t v973 = (void (*)(char *, uint64_t))v1660[1];
        v973(v722, v701);
        sub_24EC88758(v1576, &qword_26B1DB9F0);
        sub_24EC88758(v1585, &qword_26B1DB9F0);
        sub_24EC88758(v723, &qword_26B1DB9F0);
        sub_24EC88758(v718, &qword_26B1DB9F0);
        uint64_t v974 = *(void (**)(char *, void))(v1668 + 8);
        uint64_t v975 = v724;
        float64_t v976 = v1669.f64[0];
        v974(v975, *(void *)&v1669.f64[0]);
        v973(v1622, v701);
        sub_24EC88758(v1624, &qword_26B1DB9F0);
        sub_24EC88758(v1628, &qword_26B1DB9F0);
        sub_24EC88758(v1631, &qword_26B1DB9F0);
        sub_24EC88758(v1632, &qword_26B1DB9F0);
        v974(v1646, *(void *)&v976);
LABEL_137:
        (*(void (**)(char *, uint64_t))(v1662 + 8))(v682, v1666);
        goto LABEL_334;
      }
      uint64_t v726 = v1524;
      uint64_t v727 = v1524 + *(int *)(v1656 + 48);
      uint64_t v728 = v1632;
      sub_24ECF30E4(v1632, v1524);
      sub_24ECF30E4(v718, v727);
      uint64_t v729 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v730 = v1658;
      int v731 = v729(v726, 1, v1658);
      uint64_t v732 = v1660;
      if (v731 == 1)
      {
        int v733 = v729(v727, 1, v730);
        uint64_t v734 = v1576;
        uint64_t v735 = (uint64_t)v1522;
        if (v733 != 1) {
          goto LABEL_320;
        }
        sub_24EC88758(v726, &qword_26B1DB9F0);
        uint64_t v730 = v1658;
      }
      else
      {
        uint64_t v995 = v1505;
        sub_24ECF30E4(v726, v1505);
        int v996 = v729(v727, 1, v730);
        uint64_t v735 = (uint64_t)v1522;
        if (v996 == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v995, v730);
          uint64_t v734 = v1576;
          goto LABEL_320;
        }
        uint64_t v1081 = v1657;
        v1082 = v1569;
        (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v727, v730);
        sub_24ECF314C(&qword_26B1DB9E8);
        char v1083 = sub_24EE57040();
        uint64_t v1084 = *(void (**)(char *, uint64_t))(v1081 + 8);
        uint64_t v1085 = v1082;
        uint64_t v732 = v1660;
        v1084(v1085, v730);
        v1084((char *)v995, v730);
        uint64_t v728 = v1632;
        sub_24EC88758(v1524, &qword_26B1DB9F0);
        uint64_t v734 = v1576;
        if ((v1083 & 1) == 0) {
          goto LABEL_321;
        }
      }
      uint64_t v726 = v1501;
      uint64_t v1086 = v1501 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v1631, v1501);
      sub_24ECF30E4(v1565, v1086);
      if (v729(v726, 1, v730) != 1)
      {
        sub_24ECF30E4(v726, v735);
        if (v729(v1086, 1, v730) == 1)
        {
LABEL_319:
          (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v735, v730);
          goto LABEL_320;
        }
        uint64_t v1145 = v1657;
        uint64_t v1146 = v1569;
        (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1086, v730);
        sub_24ECF314C(&qword_26B1DB9E8);
        char v1147 = sub_24EE57040();
        uint64_t v1148 = *(void (**)(char *, uint64_t))(v1145 + 8);
        uint64_t v1149 = v1146;
        uint64_t v732 = v1660;
        v1148(v1149, v730);
        v1148((char *)v735, v730);
        uint64_t v728 = v1632;
        sub_24EC88758(v1501, &qword_26B1DB9F0);
        if ((v1147 & 1) == 0)
        {
LABEL_321:
          uint64_t v1232 = (void (*)(char *, uint64_t))v732[1];
          uint64_t v1233 = v1661;
          v1232(v1560, v1661);
          sub_24EC88758(v734, &qword_26B1DB9F0);
          sub_24EC88758(v1585, &qword_26B1DB9F0);
          sub_24EC88758(v1565, &qword_26B1DB9F0);
          sub_24EC88758(v1550, &qword_26B1DB9F0);
          uint64_t v1234 = *(void (**)(char *, void))(v1668 + 8);
          float64_t v1235 = v1669.f64[0];
          v1234(v1642, *(void *)&v1669.f64[0]);
          v1232(v1622, v1233);
          sub_24EC88758(v1624, &qword_26B1DB9F0);
          sub_24EC88758(v1628, &qword_26B1DB9F0);
          sub_24EC88758(v1631, &qword_26B1DB9F0);
          sub_24EC88758(v728, &qword_26B1DB9F0);
          v1234(v1646, *(void *)&v1235);
          goto LABEL_333;
        }
LABEL_262:
        uint64_t v726 = v1480;
        uint64_t v1150 = v1480 + *(int *)(v1656 + 48);
        sub_24ECF30E4(v1628, v1480);
        sub_24ECF30E4(v1585, v1150);
        if (v729(v726, 1, v730) == 1)
        {
          if (v729(v1150, 1, v730) == 1)
          {
            sub_24EC88758(v726, &qword_26B1DB9F0);
            uint64_t v730 = v1658;
            goto LABEL_354;
          }
          goto LABEL_320;
        }
        uint64_t v735 = v1466;
        sub_24ECF30E4(v726, v1466);
        if (v729(v1150, 1, v730) == 1) {
          goto LABEL_319;
        }
        uint64_t v1290 = v1657;
        v1291 = v1569;
        (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1150, v730);
        sub_24ECF314C(&qword_26B1DB9E8);
        char v1292 = sub_24EE57040();
        uint64_t v1293 = *(void (**)(char *, uint64_t))(v1290 + 8);
        v1294 = v1291;
        uint64_t v732 = v1660;
        v1293(v1294, v730);
        v1293((char *)v735, v730);
        uint64_t v728 = v1632;
        sub_24EC88758(v1480, &qword_26B1DB9F0);
        if (v1292)
        {
LABEL_354:
          uint64_t v1295 = v1462;
          uint64_t v1296 = v1462 + *(int *)(v1656 + 48);
          sub_24ECF30E4(v1624, v1462);
          sub_24ECF30E4(v734, v1296);
          if (v729(v1295, 1, v730) == 1)
          {
            if (v729(v1296, 1, v730) == 1)
            {
              sub_24EC88758(v1295, &qword_26B1DB9F0);
              uint64_t v1297 = v1661;
              uint64_t v1298 = v1560;
LABEL_385:
              uint64_t v1357 = v1461;
              uint64_t v1358 = (uint64_t)&v1461[*(int *)(v1509 + 48)];
              uint64_t v1359 = (void (*)(char *, char *, uint64_t))v1660[2];
              v1359(v1461, v1622, v1297);
              v1359((char *)v1358, v1298, v1297);
              uint64_t v1360 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)&v1652.f64[0] + 48);
              uint64_t v1361 = v1655;
              if (v1360((uint64_t)v1357, 1, v1655) == 1)
              {
                uint64_t v1667 = v1358;
                uint64_t v1362 = (void (*)(char *, uint64_t))v1660[1];
                v1362(v1560, v1297);
                sub_24EC88758(v734, &qword_26B1DB9F0);
                sub_24EC88758(v1585, &qword_26B1DB9F0);
                sub_24EC88758(v1565, &qword_26B1DB9F0);
                sub_24EC88758(v1550, &qword_26B1DB9F0);
                uint64_t v1363 = *(void (**)(char *, void))(v1668 + 8);
                float64_t v1364 = v1669.f64[0];
                v1363(v1642, *(void *)&v1669.f64[0]);
                *(void *)&long long v1668 = v1362;
                v1362(v1622, v1297);
                sub_24EC88758(v1624, &qword_26B1DB9F0);
                sub_24EC88758(v1628, &qword_26B1DB9F0);
                sub_24EC88758(v1631, &qword_26B1DB9F0);
                sub_24EC88758(v1632, &qword_26B1DB9F0);
                v1363(v1646, *(void *)&v1364);
                if (v1360(v1667, 1, v1655) == 1)
                {
                  ((void (*)(char *, uint64_t))v1668)(v1461, v1297);
                  goto LABEL_251;
                }
              }
              else
              {
                uint64_t v1379 = v1456;
                v1359(v1456, v1461, v1297);
                if (v1360(v1358, 1, v1361) != 1)
                {
                  float64_t v1402 = v1652.f64[0];
                  uint64_t v1403 = v1470;
                  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v1652.f64[0] + 32))(v1470, v1358, v1361);
                  LODWORD(v1667) = sub_24EE57040();
                  v1665.f64[0] = *(float64_t *)(*(void *)&v1402 + 8);
                  (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1403, v1361);
                  uint64_t v1404 = (void (*)(char *, uint64_t))v1660[1];
                  v1404(v1560, v1297);
                  sub_24EC88758(v734, &qword_26B1DB9F0);
                  sub_24EC88758(v1585, &qword_26B1DB9F0);
                  sub_24EC88758(v1565, &qword_26B1DB9F0);
                  sub_24EC88758(v1550, &qword_26B1DB9F0);
                  uint64_t v1405 = *(void (**)(char *, void))(v1668 + 8);
                  float64_t v1406 = v1669.f64[0];
                  v1405(v1642, *(void *)&v1669.f64[0]);
                  v1404(v1622, v1297);
                  sub_24EC88758(v1624, &qword_26B1DB9F0);
                  sub_24EC88758(v1628, &qword_26B1DB9F0);
                  sub_24EC88758(v1631, &qword_26B1DB9F0);
                  sub_24EC88758(v1632, &qword_26B1DB9F0);
                  v1405(v1646, *(void *)&v1406);
                  (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1456, v1361);
                  v1404(v1461, v1297);
                  uint64_t v1131 = v1666;
                  uint64_t v1132 = v1670;
                  if (v1667) {
                    goto LABEL_326;
                  }
                  goto LABEL_280;
                }
                uint64_t v1380 = (void (*)(char *, uint64_t))v1660[1];
                v1380(v1560, v1297);
                sub_24EC88758(v734, &qword_26B1DB9F0);
                sub_24EC88758(v1585, &qword_26B1DB9F0);
                sub_24EC88758(v1565, &qword_26B1DB9F0);
                sub_24EC88758(v1550, &qword_26B1DB9F0);
                uint64_t v1381 = *(void (**)(char *, void))(v1668 + 8);
                float64_t v1382 = v1669.f64[0];
                v1381(v1642, *(void *)&v1669.f64[0]);
                v1380(v1622, v1297);
                sub_24EC88758(v1624, &qword_26B1DB9F0);
                sub_24EC88758(v1628, &qword_26B1DB9F0);
                sub_24EC88758(v1631, &qword_26B1DB9F0);
                sub_24EC88758(v1632, &qword_26B1DB9F0);
                v1381(v1646, *(void *)&v1382);
                (*(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8))(v1379, v1361);
              }
              (*(void (**)(char *, uint64_t))(v1479 + 8))(v1461, v1509);
LABEL_279:
              uint64_t v1131 = v1666;
              uint64_t v1132 = v1670;
LABEL_280:
              (*(void (**)(char *, uint64_t))(v1662 + 8))(v1132, v1131);
              goto LABEL_334;
            }
          }
          else
          {
            uint64_t v1331 = v1459;
            sub_24ECF30E4(v1295, v1459);
            if (v729(v1296, 1, v730) != 1)
            {
              uint64_t v1353 = v1657;
              uint64_t v1354 = v1569;
              (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1296, v730);
              sub_24ECF314C(&qword_26B1DB9E8);
              char v1355 = sub_24EE57040();
              uint64_t v1356 = *(void (**)(char *, uint64_t))(v1353 + 8);
              v1356(v1354, v730);
              v1356((char *)v1331, v730);
              sub_24EC88758(v1295, &qword_26B1DB9F0);
              uint64_t v1297 = v1661;
              uint64_t v1298 = v1560;
              if (v1355) {
                goto LABEL_385;
              }
LABEL_375:
              uint64_t v1332 = (void (*)(char *, uint64_t))v1660[1];
              v1332(v1298, v1297);
              sub_24EC88758(v734, &qword_26B1DB9F0);
              sub_24EC88758(v1585, &qword_26B1DB9F0);
              sub_24EC88758(v1565, &qword_26B1DB9F0);
              sub_24EC88758(v1550, &qword_26B1DB9F0);
              uint64_t v1333 = *(void (**)(char *, void))(v1668 + 8);
              float64_t v1334 = v1669.f64[0];
              v1333(v1642, *(void *)&v1669.f64[0]);
              v1332(v1622, v1297);
              sub_24EC88758(v1624, &qword_26B1DB9F0);
              sub_24EC88758(v1628, &qword_26B1DB9F0);
              sub_24EC88758(v1631, &qword_26B1DB9F0);
              sub_24EC88758(v1632, &qword_26B1DB9F0);
              v1333(v1646, *(void *)&v1334);
              goto LABEL_333;
            }
            (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1331, v730);
          }
          sub_24EC88758(v1295, &qword_26B1DBA00);
          uint64_t v1297 = v1661;
          uint64_t v1298 = v1560;
          goto LABEL_375;
        }
        goto LABEL_321;
      }
      if (v729(v1086, 1, v730) == 1)
      {
        sub_24EC88758(v726, &qword_26B1DB9F0);
        uint64_t v730 = v1658;
        goto LABEL_262;
      }
LABEL_320:
      sub_24EC88758(v726, &qword_26B1DBA00);
      goto LABEL_321;
    case 0xAu:
      uint64_t v736 = v1609;
      uint64_t v737 = ((uint64_t (*)(double *, char *, uint64_t))v415)(v1609, v1670, v375);
      LODWORD(v1661) = *(unsigned __int8 *)v736;
      float64_t v738 = v736[1];
      uint64_t v739 = *((void *)v736 + 2);
      uint64_t v1660 = (void *)*((void *)v736 + 3);
      LODWORD(v1655) = *((unsigned __int8 *)v736 + 32);
      uint64_t v740 = *((void *)v736 + 5);
      v1654 = (char *)*((void *)v736 + 6);
      MEMORY[0x270FA5388](v737);
      strcpy((char *)&v1447 - 48, "layout artwork title subtitle caption ");
      *(void *)&v1717.f64[0] = &type metadata for StandardVerticalStackViewLayout;
      float64_t v449 = v1669.f64[0];
      v1717.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      *((void *)&v1718 + 1) = *(void *)&v1665.f64[0];
      *(float64_t *)&long long v1719 = v1665.f64[0];
      uint64_t v741 = (int *)swift_getTupleTypeMetadata();
      uint64_t v742 = v741[12];
      *(void *)&v1665.f64[0] = (char *)v736 + v742;
      uint64_t v743 = v741[16];
      uint64_t v744 = (uint64_t)v736 + v743;
      uint64_t v745 = v741[20];
      uint64_t v746 = v416;
      uint64_t v747 = (uint64_t)v736 + v745;
      uint64_t v748 = v741[24];
      uint64_t v749 = (uint64_t)v736 + v748;
      uint64_t v750 = (double *)v1667;
      uint64_t v1666 = v746;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        sub_24EC88758(v749, &qword_26B1DB9F0);
        sub_24EC88758(v747, &qword_26B1DB9F0);
        sub_24EC88758(v744, &qword_26B1DB9F0);
        uint64_t v894 = *(void (**)(void, void))(v1668 + 8);
        float64_t v895 = v1665.f64[0];
LABEL_87:
        float64_t v896 = v449;
LABEL_89:
        v894(*(void *)&v895, *(void *)&v896);
LABEL_90:
        uint64_t v434 = v1670;
LABEL_94:
        (*(void (**)(char *, uint64_t))(v1663 + 8))(v434, v1664);
        goto LABEL_334;
      }
      LODWORD(v1664) = *(unsigned __int8 *)v750;
      float64_t v751 = v750[1];
      uint64_t v752 = *((void *)v750 + 2);
      *(double *)&long long v1663 = v750[3];
      LODWORD(v1653) = *((unsigned __int8 *)v750 + 32);
      uint64_t v753 = (unsigned __int8 *)v750 + v742;
      float64_t v754 = v750[5];
      uint64_t v755 = (uint64_t)v750 + v743;
      uint64_t v1651 = (unsigned __int8 *)v750 + v745;
      v1652.f64[0] = v750[6];
      uint64_t v1667 = (uint64_t)v750 + v748;
      float64_t v756 = v449;
      uint64_t v757 = *(void (**)(char *, unsigned __int8 *, void))(v1668 + 32);
      uint64_t v758 = v1553;
      v757(v1553, *(unsigned __int8 **)&v1665.f64[0], *(void *)&v449);
      uint64_t v759 = v744;
      uint64_t v760 = v1555;
      sub_24ECB04CC(v759, v1555);
      sub_24ECB04CC(v747, v1634);
      sub_24ECB04CC(v749, v1629);
      uint64_t v761 = v1539;
      v757(v1539, v753, *(void *)&v449);
      uint64_t v762 = v1541;
      sub_24ECB04CC(v755, v1541);
      uint64_t v763 = v1567;
      sub_24ECB04CC((uint64_t)v1651, v1567);
      uint64_t v764 = v1563;
      sub_24ECB04CC(v1667, v1563);
      LOBYTE(v1717.f64[0]) = v1661;
      v1717.f64[1] = v738;
      *(void *)&long long v1718 = v739;
      *((void *)&v1718 + 1) = v1660;
      LOBYTE(v1719) = v1655;
      *((void *)&v1719 + 1) = v740;
      *(void *)&long long v1720 = v1654;
      LOBYTE(v1703.f64[0]) = v1664;
      v1703.f64[1] = v751;
      *(void *)&long long v1704 = v752;
      *((void *)&v1704 + 1) = v1663;
      LOBYTE(v1705.f64[0]) = v1653;
      v1705.f64[1] = v754;
      *(float64_t *)uint64_t v1706 = v1652.f64[0];
      if (!_s15FitnessCanvasUI31StandardVerticalStackViewLayoutV2eeoiySbAC_ACtFZ_0(v1717.f64, v1703.f64))
      {
        sub_24EC88758(v764, &qword_26B1DB9F0);
        sub_24EC88758(v763, &qword_26B1DB9F0);
        sub_24EC88758(v762, &qword_26B1DB9F0);
        uint64_t v945 = v760;
        uint64_t v946 = *(void (**)(char *, void))(v1668 + 8);
        v946(v761, *(void *)&v449);
        sub_24EC88758(v1629, &qword_26B1DB9F0);
        sub_24EC88758(v1634, &qword_26B1DB9F0);
        sub_24EC88758(v945, &qword_26B1DB9F0);
        uint64_t v947 = v758;
        goto LABEL_113;
      }
      char v765 = sub_24EE57040();
      uint64_t v480 = v1670;
      if ((v765 & 1) == 0)
      {
        sub_24EC88758(v764, &qword_26B1DB9F0);
        sub_24EC88758(v763, &qword_26B1DB9F0);
        sub_24EC88758(v762, &qword_26B1DB9F0);
        uint64_t v977 = v760;
        uint64_t v978 = *(void (**)(char *, void))(v1668 + 8);
        v978(v761, *(void *)&v756);
        sub_24EC88758(v1629, &qword_26B1DB9F0);
        sub_24EC88758(v1634, &qword_26B1DB9F0);
        sub_24EC88758(v977, &qword_26B1DB9F0);
        v978(v758, *(void *)&v756);
        goto LABEL_141;
      }
      uint64_t v766 = v1520;
      uint64_t v767 = v1520 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v760, v1520);
      sub_24ECF30E4(v762, v767);
      v768 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v769 = v1658;
      int v770 = v768(v766, 1, v1658);
      uint64_t v771 = v1634;
      uint64_t v1667 = (uint64_t)v768;
      if (v770 == 1)
      {
        int v772 = v768(v767, 1, v769);
        float64_t v756 = v1669.f64[0];
        if (v772 == 1)
        {
          sub_24EC88758(v766, &qword_26B1DB9F0);
          v773 = v761;
LABEL_229:
          uint64_t v1095 = v1499;
          uint64_t v1096 = v1499 + *(int *)(v1656 + 48);
          sub_24ECF30E4(v771, v1499);
          sub_24ECF30E4(v1567, v1096);
          uint64_t v1097 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1667;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1667)(v1095, 1, v769) == 1)
          {
            if (v1097(v1096, 1, v769) == 1)
            {
              sub_24EC88758(v1095, &qword_26B1DB9F0);
LABEL_305:
              uint64_t v806 = v1491;
              uint64_t v1218 = v1491 + *(int *)(v1656 + 48);
              sub_24ECF30E4(v1629, v1491);
              *(void *)&v1665.f64[0] = v1218;
              sub_24ECF30E4(v1563, v1218);
              if (v1097(v806, 1, v769) == 1)
              {
                sub_24EC88758(v1563, &qword_26B1DB9F0);
                sub_24EC88758(v1567, &qword_26B1DB9F0);
                sub_24EC88758(v762, &qword_26B1DB9F0);
                uint64_t v1219 = *(void (**)(char *, void))(v1668 + 8);
                v1219(v773, *(void *)&v756);
                sub_24EC88758(v1629, &qword_26B1DB9F0);
                sub_24EC88758(v771, &qword_26B1DB9F0);
                sub_24EC88758(v1555, &qword_26B1DB9F0);
                v1219(v1553, *(void *)&v756);
                uint64_t v806 = v1491;
                int v1220 = v1097(*(void *)&v1665.f64[0], 1, v769);
                uint64_t v814 = v1666;
                if (v1220 != 1) {
                  goto LABEL_165;
                }
                uint64_t v1221 = v806;
LABEL_314:
                sub_24EC88758(v1221, &qword_26B1DB9F0);
                uint64_t v815 = v1670;
                goto LABEL_366;
              }
              uint64_t v1254 = v1467;
              sub_24ECF30E4(v806, v1467);
              float64_t v1255 = v1665.f64[0];
              if (v1097(*(void *)&v1665.f64[0], 1, v769) == 1)
              {
                sub_24EC88758(v1563, &qword_26B1DB9F0);
                sub_24EC88758(v1567, &qword_26B1DB9F0);
                sub_24EC88758(v1541, &qword_26B1DB9F0);
                uint64_t v1256 = v769;
                uint64_t v1257 = *(void (**)(char *, void))(v1668 + 8);
                v1257(v773, *(void *)&v756);
                sub_24EC88758(v1629, &qword_26B1DB9F0);
                sub_24EC88758(v771, &qword_26B1DB9F0);
                sub_24EC88758(v1555, &qword_26B1DB9F0);
                v1257(v1553, *(void *)&v756);
                (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1254, v1256);
LABEL_164:
                uint64_t v814 = v1666;
LABEL_165:
                uint64_t v1002 = v806;
                goto LABEL_166;
              }
              uint64_t v1315 = v1657;
              uint64_t v1316 = v1569;
              (*(void (**)(char *, float64_t, uint64_t))(v1657 + 32))(v1569, COERCE_FLOAT64_T(*(void *)&v1255), v769);
              sub_24ECF314C(&qword_26B1DB9E8);
              LODWORD(v1667) = sub_24EE57040();
              uint64_t v1317 = *(void (**)(char *, uint64_t))(v1315 + 8);
              v1317(v1316, v769);
              sub_24EC88758(v1563, &qword_26B1DB9F0);
              sub_24EC88758(v1567, &qword_26B1DB9F0);
              sub_24EC88758(v1541, &qword_26B1DB9F0);
              uint64_t v1318 = v806;
              uint64_t v1319 = *(void (**)(char *, void))(v1668 + 8);
              v1319(v1539, *(void *)&v756);
              sub_24EC88758(v1629, &qword_26B1DB9F0);
              sub_24EC88758(v771, &qword_26B1DB9F0);
              sub_24EC88758(v1555, &qword_26B1DB9F0);
              v1319(v1553, *(void *)&v756);
              v1317((char *)v1254, v1658);
              goto LABEL_364;
            }
            goto LABEL_267;
          }
          uint64_t v1151 = v1484;
          sub_24ECF30E4(v1095, v1484);
          if (v1097(v1096, 1, v769) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1151, v769);
            uint64_t v771 = v1634;
LABEL_267:
            sub_24EC88758(v1095, &qword_26B1DBA00);
            goto LABEL_308;
          }
          uint64_t v1210 = v1097;
          v1211 = v773;
          uint64_t v1212 = v1657;
          v1213 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1096, v769);
          sub_24ECF314C(&qword_26B1DB9E8);
          LODWORD(v1665.f64[0]) = sub_24EE57040();
          uint64_t v1214 = v1212;
          v773 = v1211;
          uint64_t v1097 = v1210;
          float64_t v756 = v1669.f64[0];
          uint64_t v1215 = v1095;
          uint64_t v1216 = *(void (**)(char *, uint64_t))(v1214 + 8);
          uint64_t v1217 = v1213;
          uint64_t v762 = v1541;
          v1216(v1217, v1658);
          v1216((char *)v1151, v1658);
          uint64_t v769 = v1658;
          sub_24EC88758(v1215, &qword_26B1DB9F0);
          uint64_t v771 = v1634;
          if (LOBYTE(v1665.f64[0])) {
            goto LABEL_305;
          }
LABEL_308:
          sub_24EC88758(v1563, &qword_26B1DB9F0);
          sub_24EC88758(v1567, &qword_26B1DB9F0);
          sub_24EC88758(v762, &qword_26B1DB9F0);
          uint64_t v946 = *(void (**)(char *, void))(v1668 + 8);
          v946(v773, *(void *)&v756);
          sub_24EC88758(v1629, &qword_26B1DB9F0);
          sub_24EC88758(v771, &qword_26B1DB9F0);
          sub_24EC88758(v1555, &qword_26B1DB9F0);
          uint64_t v947 = v1553;
          goto LABEL_113;
        }
      }
      else
      {
        uint64_t v997 = v1634;
        uint64_t v998 = v1504;
        sub_24ECF30E4(v766, v1504);
        if (v768(v767, 1, v769) != 1)
        {
          uint64_t v1087 = v1657;
          v1088 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v767, v769);
          sub_24ECF314C(&qword_26B1DB9E8);
          char v1089 = sub_24EE57040();
          uint64_t v1090 = v1087;
          uint64_t v1091 = v766;
          uint64_t v1092 = *(void (**)(char *, uint64_t))(v1090 + 8);
          uint64_t v1093 = v1088;
          uint64_t v762 = v1541;
          v1092(v1093, v1658);
          v1092((char *)v998, v1658);
          uint64_t v769 = v1658;
          uint64_t v1094 = v1091;
          v773 = v1539;
          uint64_t v771 = v1634;
          sub_24EC88758(v1094, &qword_26B1DB9F0);
          float64_t v756 = v1669.f64[0];
          if ((v1089 & 1) == 0) {
            goto LABEL_308;
          }
          goto LABEL_229;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v998, v769);
        uint64_t v771 = v997;
        float64_t v756 = v1669.f64[0];
      }
      sub_24EC88758(v766, &qword_26B1DBA00);
      v773 = v761;
      goto LABEL_308;
    case 0xBu:
      uint64_t v774 = v1611;
      uint64_t v775 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1611, v1670, v416);
      float64_t v776 = *(double *)v774;
      float64_t v777 = *((double *)v774 + 1);
      uint64_t v778 = *((void *)v774 + 2);
      char v779 = v774[24];
      uint64_t v780 = *((void *)v774 + 4);
      uint64_t v781 = *((void *)v774 + 5);
      uint64_t v782 = *((void *)v774 + 6);
      uint64_t v1661 = *((void *)v774 + 7);
      MEMORY[0x270FA5388](v775);
      strcpy((char *)&v1447 - 48, "layout artwork title overlay ");
      *(void *)&v1717.f64[0] = &type metadata for TallCardViewLayout;
      float64_t v783 = v1669.f64[0];
      v1717.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1718 = v1665.f64[0];
      *((void *)&v1718 + 1) = &type metadata for Overlay;
      uint64_t v784 = (int *)swift_getTupleTypeMetadata();
      uint64_t v785 = v416;
      uint64_t v786 = v784[12];
      uint64_t v787 = &v774[v786];
      uint64_t v788 = v784[16];
      uint64_t v789 = (uint64_t)&v774[v788];
      uint64_t v790 = v784[20];
      int v791 = v774[v790];
      uint64_t v792 = v1667;
      uint64_t v1666 = v785;
      if (swift_getEnumCaseMultiPayload() != 11)
      {
        sub_24EC88758(v789, &qword_26B1DB9F0);
        uint64_t v894 = *(void (**)(void, void))(v1668 + 8);
        float64_t v895 = *(double *)&v787;
        float64_t v896 = v783;
        goto LABEL_89;
      }
      LODWORD(v1655) = v791;
      float64x2_t v1665 = *(float64x2_t *)v792;
      uint64_t v793 = *(void *)(v792 + 16);
      LODWORD(v1664) = *(unsigned __int8 *)(v792 + 24);
      long long v1663 = *(_OWORD *)(v792 + 32);
      uint64_t v794 = *(void *)(v792 + 48);
      uint64_t v1660 = *(void **)(v792 + 56);
      uint64_t v795 = (char *)(v792 + v786);
      uint64_t v796 = v792 + v788;
      LODWORD(v1667) = *(unsigned __int8 *)(v792 + v790);
      uint64_t v797 = v1668;
      uint64_t v798 = *(void (**)(char *, char *, void))(v1668 + 32);
      v798(v1644, v787, *(void *)&v783);
      uint64_t v799 = v789;
      uint64_t v800 = v1547;
      sub_24ECB04CC(v799, v1547);
      uint64_t v801 = v1558;
      v798(v1558, v795, *(void *)&v783);
      uint64_t v802 = v1546;
      sub_24ECB04CC(v796, v1546);
      v1717.f64[0] = v776;
      v1717.f64[1] = v777;
      *(void *)&long long v1718 = v778;
      BYTE8(v1718) = v779;
      *(void *)&long long v1719 = v780;
      *((void *)&v1719 + 1) = v781;
      *(void *)&long long v1720 = v782;
      *((void *)&v1720 + 1) = v1661;
      float64x2_t v1703 = v1665;
      *(void *)&long long v1704 = v793;
      BYTE8(v1704) = v1664;
      float64x2_t v1705 = (float64x2_t)v1663;
      *(void *)&v1706[0] = v794;
      *((void *)&v1706[0] + 1) = v1660;
      if (!_s15FitnessCanvasUI18TallCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1717, (uint64_t)&v1703))
      {
        sub_24EC88758(v802, &qword_26B1DB9F0);
        uint64_t v948 = *(void (**)(char *, void))(v797 + 8);
        v948(v801, *(void *)&v783);
        sub_24EC88758(v800, &qword_26B1DB9F0);
        v948(v1644, *(void *)&v783);
        goto LABEL_333;
      }
      uint64_t v803 = v1644;
      char v804 = sub_24EE57040();
      uint64_t v805 = v1670;
      if ((v804 & 1) == 0)
      {
        sub_24EC88758(v802, &qword_26B1DB9F0);
        uint64_t v979 = v800;
        uint64_t v980 = *(void (**)(char *, void))(v1668 + 8);
        v980(v801, *(void *)&v783);
        sub_24EC88758(v979, &qword_26B1DB9F0);
        v980(v803, *(void *)&v783);
        (*(void (**)(char *, uint64_t))(v1662 + 8))(v805, v1666);
        goto LABEL_334;
      }
      uint64_t v806 = v1526;
      uint64_t v807 = v1526 + *(int *)(v1656 + 48);
      sub_24ECF30E4(v800, v1526);
      sub_24ECF30E4(v802, v807);
      uint64_t v808 = v1657;
      uint64_t v809 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v810 = v800;
      uint64_t v811 = v1658;
      if (v809(v806, 1, v1658) == 1)
      {
        sub_24EC88758(v802, &qword_26B1DB9F0);
        uint64_t v812 = *(void (**)(char *, void))(v1668 + 8);
        v812(v1558, *(void *)&v783);
        sub_24EC88758(v810, &qword_26B1DB9F0);
        v812(v1644, *(void *)&v783);
        uint64_t v806 = v1526;
        int v813 = v809(v807, 1, v811);
        uint64_t v814 = v1666;
        if (v813 != 1) {
          goto LABEL_165;
        }
        sub_24EC88758(v806, &qword_26B1DB9F0);
        uint64_t v815 = v1670;
      }
      else
      {
        uint64_t v999 = v1506;
        sub_24ECF30E4(v806, v1506);
        if (v809(v807, 1, v811) == 1)
        {
          sub_24EC88758(v1546, &qword_26B1DB9F0);
          uint64_t v1000 = v811;
          uint64_t v1001 = *(void (**)(char *, void))(v1668 + 8);
          v1001(v1558, *(void *)&v783);
          sub_24EC88758(v1547, &qword_26B1DB9F0);
          v1001(v1644, *(void *)&v783);
          (*(void (**)(uint64_t, uint64_t))(v808 + 8))(v999, v1000);
          goto LABEL_164;
        }
        uint64_t v1098 = v1569;
        (*(void (**)(char *, uint64_t, uint64_t))(v808 + 32))(v1569, v807, v811);
        sub_24ECF314C(&qword_26B1DB9E8);
        LODWORD(v1665.f64[0]) = sub_24EE57040();
        uint64_t v1099 = *(void (**)(char *, uint64_t))(v808 + 8);
        v1099(v1098, v811);
        sub_24EC88758(v1546, &qword_26B1DB9F0);
        uint64_t v1100 = *(void (**)(char *, void))(v1668 + 8);
        v1100(v1558, *(void *)&v783);
        sub_24EC88758(v1547, &qword_26B1DB9F0);
        v1100(v1644, *(void *)&v783);
        v1099((char *)v999, v811);
        sub_24EC88758(v806, &qword_26B1DB9F0);
        uint64_t v814 = v1666;
        uint64_t v815 = v1670;
        if ((LOBYTE(v1665.f64[0]) & 1) == 0) {
          goto LABEL_167;
        }
      }
      char v1101 = v1655 ^ v1667;
      (*(void (**)(char *, uint64_t))(v1662 + 8))(v815, v814);
      char v439 = v1101 ^ 1;
      return v439 & 1;
    case 0xCu:
      uint64_t v816 = v1613;
      uint64_t v434 = v1670;
      uint64_t v817 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v1613, v1670, v375);
      long long v818 = *((_OWORD *)v816 + 5);
      long long v1721 = *((_OWORD *)v816 + 4);
      long long v1722 = v818;
      long long v819 = *((_OWORD *)v816 + 7);
      long long v1723 = *((_OWORD *)v816 + 6);
      long long v1724 = v819;
      long long v820 = *((_OWORD *)v816 + 1);
      float64x2_t v1717 = *(float64x2_t *)v816;
      long long v1718 = v820;
      long long v821 = *((_OWORD *)v816 + 3);
      long long v1719 = *((_OWORD *)v816 + 2);
      long long v1720 = v821;
      MEMORY[0x270FA5388](v817);
      strcpy((char *)&v1447 - 48, "layout artwork title subtitle caption ");
      *(void *)&v1703.f64[0] = &type metadata for VerticalStackCardLayout;
      float64_t v756 = v1669.f64[0];
      v1703.f64[1] = v1669.f64[0];
      *(float64_t *)&long long v1704 = v1665.f64[0];
      *((void *)&v1704 + 1) = *(void *)&v1665.f64[0];
      v1705.f64[0] = v1665.f64[0];
      uint64_t v822 = (int *)swift_getTupleTypeMetadata();
      uint64_t v823 = &v816[v822[12]];
      uint64_t v824 = (uint64_t)&v816[v822[16]];
      uint64_t v825 = v416;
      uint64_t v826 = (uint64_t)&v816[v822[20]];
      uint64_t v827 = (uint64_t)&v816[v822[24]];
      uint64_t v828 = v1667;
      uint64_t v1666 = v825;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        sub_24EC88758(v827, &qword_26B1DB9F0);
        sub_24EC88758(v826, &qword_26B1DB9F0);
        sub_24EC88758(v824, &qword_26B1DB9F0);
        (*(void (**)(char *, float64_t))(v1668 + 8))(v823, COERCE_FLOAT64_T(*(void *)&v756));
        goto LABEL_94;
      }
      long long v829 = *(_OWORD *)(v828 + 96);
      long long v1708 = *(_OWORD *)(v828 + 112);
      long long v1707 = v829;
      long long v830 = *(_OWORD *)(v828 + 64);
      v1706[2] = *(_OWORD *)(v828 + 80);
      v1706[1] = v830;
      long long v831 = *(_OWORD *)(v828 + 16);
      float64x2_t v1703 = *(float64x2_t *)v828;
      long long v1704 = v831;
      float64x2_t v832 = *(float64x2_t *)(v828 + 32);
      v1706[0] = *(_OWORD *)(v828 + 48);
      float64x2_t v1705 = v832;
      uint64_t v833 = v828 + v822[12];
      uint64_t v834 = v828 + v822[16];
      *(void *)&v1665.f64[0] = v828 + v822[20];
      uint64_t v1667 = v828 + v822[24];
      uint64_t v835 = *(void (**)(char *, char *, void))(v1668 + 32);
      v835(v1633, v823, *(void *)&v756);
      uint64_t v836 = v824;
      uint64_t v837 = v1556;
      sub_24ECB04CC(v836, v1556);
      sub_24ECB04CC(v826, v1635);
      uint64_t v838 = v827;
      uint64_t v839 = v1587;
      sub_24ECB04CC(v838, v1587);
      uint64_t v840 = v1552;
      v835(v1552, (char *)v833, *(void *)&v756);
      uint64_t v841 = v834;
      uint64_t v842 = v1542;
      sub_24ECB04CC(v841, v1542);
      uint64_t v843 = v1568;
      sub_24ECB04CC(*(uint64_t *)&v1665.f64[0], v1568);
      uint64_t v844 = v1562;
      sub_24ECB04CC(v1667, v1562);
      long long v1691 = v1721;
      long long v1692 = v1722;
      long long v1693 = v1723;
      long long v1694 = v1724;
      float64x2_t v1687 = v1717;
      long long v1688 = v1718;
      long long v1689 = v1719;
      long long v1690 = v1720;
      long long v1675 = v1706[1];
      long long v1676 = v1706[2];
      long long v1677 = v1707;
      long long v1678 = v1708;
      float64x2_t v1671 = v1703;
      long long v1672 = v1704;
      float64x2_t v1673 = v1705;
      long long v1674 = v1706[0];
      if (!_s15FitnessCanvasUI23VerticalStackCardLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1687, (uint64_t)&v1671))
      {
        sub_24EC88758(v844, &qword_26B1DB9F0);
        sub_24EC88758(v843, &qword_26B1DB9F0);
        sub_24EC88758(v842, &qword_26B1DB9F0);
        uint64_t v949 = v837;
        uint64_t v946 = *(void (**)(char *, void))(v1668 + 8);
        v946(v840, *(void *)&v756);
        sub_24EC88758(v839, &qword_26B1DB9F0);
        sub_24EC88758(v1635, &qword_26B1DB9F0);
        sub_24EC88758(v949, &qword_26B1DB9F0);
        uint64_t v947 = v1633;
LABEL_113:
        v946(v947, *(void *)&v756);
        goto LABEL_333;
      }
      uint64_t v845 = v842;
      uint64_t v846 = v1633;
      char v847 = sub_24EE57040();
      uint64_t v480 = v1670;
      if (v847)
      {
        v848 = v846;
        uint64_t v849 = v1521;
        uint64_t v850 = v1521 + *(int *)(v1656 + 48);
        sub_24ECF30E4(v837, v1521);
        sub_24ECF30E4(v845, v850);
        v851 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
        uint64_t v852 = v1658;
        unsigned int v853 = v851(v849, 1, v1658);
        uint64_t v854 = v1635;
        if (v853 == 1)
        {
          unsigned int v855 = v851(v850, 1, v852);
          uint64_t v856 = v848;
          float64_t v756 = v1669.f64[0];
          if (v855 == 1)
          {
            sub_24EC88758(v849, &qword_26B1DB9F0);
LABEL_235:
            uint64_t v849 = v1500;
            uint64_t v1108 = v1500 + *(int *)(v1656 + 48);
            sub_24ECF30E4(v854, v1500);
            sub_24ECF30E4(v1568, v1108);
            if (v851(v849, 1, v852) == 1)
            {
              if (v851(v1108, 1, v852) == 1)
              {
                sub_24EC88758(v849, &qword_26B1DB9F0);
LABEL_310:
                uint64_t v1227 = v1492;
                uint64_t v1228 = v1492 + *(int *)(v1656 + 48);
                sub_24ECF30E4(v1587, v1492);
                uint64_t v1229 = v1562;
                *(void *)&v1665.f64[0] = v1228;
                sub_24ECF30E4(v1562, v1228);
                if (v851(v1227, 1, v852) == 1)
                {
                  uint64_t v1667 = (uint64_t)v851;
                  sub_24EC88758(v1229, &qword_26B1DB9F0);
                  sub_24EC88758(v1568, &qword_26B1DB9F0);
                  sub_24EC88758(v845, &qword_26B1DB9F0);
                  v1230 = *(void (**)(char *, void))(v1668 + 8);
                  v1230(v1552, *(void *)&v756);
                  sub_24EC88758(v1587, &qword_26B1DB9F0);
                  sub_24EC88758(v1635, &qword_26B1DB9F0);
                  sub_24EC88758(v1556, &qword_26B1DB9F0);
                  v1230(v856, *(void *)&v756);
                  uint64_t v1206 = v1492;
                  int v1207 = ((uint64_t (*)(void, uint64_t, uint64_t))v1667)(*(void *)&v1665.f64[0], 1, v852);
LABEL_312:
                  uint64_t v814 = v1666;
                  if (v1207 != 1) {
                    goto LABEL_342;
                  }
                  uint64_t v1221 = v1206;
                  goto LABEL_314;
                }
                uint64_t v1258 = v1227;
                uint64_t v1259 = v1227;
                uint64_t v1260 = v1468;
                sub_24ECF30E4(v1258, v1468);
                float64_t v1261 = v1665.f64[0];
                if (v851(*(void *)&v1665.f64[0], 1, v852) == 1)
                {
                  sub_24EC88758(v1562, &qword_26B1DB9F0);
                  sub_24EC88758(v1568, &qword_26B1DB9F0);
                  sub_24EC88758(v1542, &qword_26B1DB9F0);
                  uint64_t v1262 = v852;
                  uint64_t v1263 = *(void (**)(char *, void))(v1668 + 8);
                  v1263(v1552, *(void *)&v756);
                  sub_24EC88758(v1587, &qword_26B1DB9F0);
                  sub_24EC88758(v1635, &qword_26B1DB9F0);
                  sub_24EC88758(v1556, &qword_26B1DB9F0);
                  v1263(v856, *(void *)&v756);
                  (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1260, v1262);
                  uint64_t v814 = v1666;
                  uint64_t v1206 = v1259;
                  goto LABEL_342;
                }
                uint64_t v1320 = v1657;
                uint64_t v1321 = v1569;
                (*(void (**)(char *, float64_t, uint64_t))(v1657 + 32))(v1569, COERCE_FLOAT64_T(*(void *)&v1261), v852);
                sub_24ECF314C(&qword_26B1DB9E8);
                LODWORD(v1667) = sub_24EE57040();
                uint64_t v1322 = *(void (**)(char *, uint64_t))(v1320 + 8);
                v1322(v1321, v852);
                sub_24EC88758(v1562, &qword_26B1DB9F0);
                sub_24EC88758(v1568, &qword_26B1DB9F0);
                sub_24EC88758(v1542, &qword_26B1DB9F0);
                uint64_t v1318 = v1259;
                uint64_t v1323 = *(void (**)(char *, void))(v1668 + 8);
                v1323(v1552, *(void *)&v756);
                sub_24EC88758(v1587, &qword_26B1DB9F0);
                sub_24EC88758(v1635, &qword_26B1DB9F0);
                sub_24EC88758(v1556, &qword_26B1DB9F0);
                v1323(v856, *(void *)&v756);
                v1322((char *)v1260, v1658);
LABEL_364:
                uint64_t v1314 = v1318;
LABEL_365:
                sub_24EC88758(v1314, &qword_26B1DB9F0);
                uint64_t v814 = v1666;
                uint64_t v815 = v1670;
                if ((v1667 & 1) == 0) {
                  goto LABEL_167;
                }
LABEL_366:
                (*(void (**)(char *, uint64_t))(v1662 + 8))(v815, v814);
                goto LABEL_367;
              }
            }
            else
            {
              uint64_t v1152 = v1485;
              sub_24ECF30E4(v849, v1485);
              uint64_t v1667 = (uint64_t)v851;
              if (v851(v1108, 1, v852) != 1)
              {
                uint64_t v1222 = v1657;
                uint64_t v1223 = v1569;
                (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1108, v852);
                sub_24ECF314C(&qword_26B1DB9E8);
                LODWORD(v1665.f64[0]) = sub_24EE57040();
                uint64_t v1224 = v849;
                uint64_t v1225 = *(void (**)(char *, uint64_t))(v1222 + 8);
                uint64_t v1226 = v1223;
                uint64_t v854 = v1635;
                uint64_t v845 = v1542;
                v1225(v1226, v1658);
                v1225((char *)v1152, v1658);
                uint64_t v852 = v1658;
                sub_24EC88758(v1224, &qword_26B1DB9F0);
                v851 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v1667;
                uint64_t v856 = v1633;
                if (LOBYTE(v1665.f64[0])) {
                  goto LABEL_310;
                }
                goto LABEL_271;
              }
              (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1152, v852);
              uint64_t v856 = v1633;
            }
          }
        }
        else
        {
          uint64_t v1003 = v851;
          uint64_t v1004 = v1507;
          sub_24ECF30E4(v849, v1507);
          uint64_t v1667 = (uint64_t)v1003;
          if (v1003(v850, 1, v852) != 1)
          {
            uint64_t v1102 = v1657;
            uint64_t v1103 = v1569;
            (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v850, v852);
            sub_24ECF314C(&qword_26B1DB9E8);
            char v1104 = sub_24EE57040();
            uint64_t v1105 = v849;
            uint64_t v1106 = *(void (**)(char *, uint64_t))(v1102 + 8);
            uint64_t v845 = v1542;
            v1106(v1103, v1658);
            v1106((char *)v1004, v1658);
            uint64_t v852 = v1658;
            uint64_t v1107 = v1105;
            uint64_t v856 = v1633;
            uint64_t v854 = v1635;
            sub_24EC88758(v1107, &qword_26B1DB9F0);
            float64_t v756 = v1669.f64[0];
            v851 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v1667;
            if ((v1104 & 1) == 0)
            {
LABEL_271:
              sub_24EC88758(v1562, &qword_26B1DB9F0);
              sub_24EC88758(v1568, &qword_26B1DB9F0);
              sub_24EC88758(v845, &qword_26B1DB9F0);
              uint64_t v946 = *(void (**)(char *, void))(v1668 + 8);
              v946(v1552, *(void *)&v756);
              sub_24EC88758(v1587, &qword_26B1DB9F0);
              sub_24EC88758(v854, &qword_26B1DB9F0);
              sub_24EC88758(v1556, &qword_26B1DB9F0);
              uint64_t v947 = v856;
              goto LABEL_113;
            }
            goto LABEL_235;
          }
          uint64_t v856 = v848;
          (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1004, v852);
          float64_t v756 = v1669.f64[0];
        }
        sub_24EC88758(v849, &qword_26B1DBA00);
        goto LABEL_271;
      }
      sub_24EC88758(v844, &qword_26B1DB9F0);
      sub_24EC88758(v843, &qword_26B1DB9F0);
      sub_24EC88758(v845, &qword_26B1DB9F0);
      uint64_t v981 = v837;
      uint64_t v982 = *(void (**)(char *, void))(v1668 + 8);
      v982(v840, *(void *)&v756);
      sub_24EC88758(v1587, &qword_26B1DB9F0);
      sub_24EC88758(v1635, &qword_26B1DB9F0);
      sub_24EC88758(v981, &qword_26B1DB9F0);
      v982(v846, *(void *)&v756);
LABEL_141:
      (*(void (**)(char *, uint64_t))(v1662 + 8))(v480, v1666);
LABEL_334:
      char v439 = 0;
      return v439 & 1;
    case 0xDu:
      uint64_t v857 = v1610;
      uint64_t v434 = v1670;
      v415(v1610, (uint64_t)v1670, v375);
      uint64_t v858 = v1667;
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v859 = v1619;
        uint64_t v860 = v1536;
        uint64_t v861 = v1620;
        (*(void (**)(char *, uint64_t, uint64_t))(v1619 + 32))(v1536, v858, v1620);
        char v439 = sub_24EE57040();
        uint64_t v862 = *(void (**)(char *, uint64_t))(v859 + 8);
        v862(v860, v861);
        v862(v857, v861);
        (*(void (**)(char *, uint64_t))(v1662 + 8))(v434, v416);
        return v439 & 1;
      }
      (*(void (**)(char *, uint64_t))(v1619 + 8))(v857, v1620);
      goto LABEL_94;
    case 0xEu:
      uint64_t v863 = v1617;
      uint64_t v434 = v1670;
      v415(v1617, (uint64_t)v1670, v375);
      float64_t v864 = v1669.f64[0];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v866 = v375;
      uint64_t v867 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v868 = (uint64_t)&v863[v867];
      uint64_t v869 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v870 = (uint64_t)&v863[v869];
      uint64_t v871 = v1667;
      uint64_t v1666 = v866;
      if (swift_getEnumCaseMultiPayload() != 14)
      {
        sub_24EC88758((uint64_t)&v863[v869], &qword_26B1DB9F0);
        sub_24EC88758(v868, &qword_26B1DB9F0);
        (*(void (**)(char *, float64_t))(v1668 + 8))(v863, COERCE_FLOAT64_T(*(void *)&v864));
        goto LABEL_94;
      }
      uint64_t v872 = v1668;
      uint64_t v873 = v863;
      uint64_t v874 = v1559;
      (*(void (**)(char *, uint64_t, float64_t))(v1668 + 32))(v1559, v871, COERCE_FLOAT64_T(*(void *)&v864));
      sub_24ECB04CC(v868, (uint64_t)v1651);
      uint64_t v875 = v870;
      uint64_t v876 = v1597;
      sub_24ECB04CC(v875, v1597);
      float64_t v877 = v864;
      uint64_t v878 = v874;
      uint64_t v879 = v1575;
      sub_24ECB04CC(v871 + v867, v1575);
      uint64_t v880 = v871 + v869;
      uint64_t v881 = v1596;
      sub_24ECB04CC(v880, v1596);
      uint64_t v882 = v873;
      LOBYTE(v873) = sub_24EE57040();
      uint64_t v885 = *(void (**)(char *, void))(v872 + 8);
      uint64_t v884 = v872 + 8;
      uint64_t v883 = v885;
      v885(v882, *(void *)&v877);
      if ((v873 & 1) == 0)
      {
        sub_24EC88758(v881, &qword_26B1DB9F0);
        sub_24EC88758(v879, &qword_26B1DB9F0);
        sub_24EC88758(v876, &qword_26B1DB9F0);
        sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
        v883(v878, *(void *)&v877);
        goto LABEL_333;
      }
      uint64_t v1667 = (uint64_t)v883;
      uint64_t v886 = v879;
      uint64_t v887 = v1532;
      uint64_t v888 = v1532 + *(int *)(v1656 + 48);
      sub_24ECF30E4((uint64_t)v1651, v1532);
      sub_24ECF30E4(v886, v888);
      uint64_t v889 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
      uint64_t v890 = v1658;
      if (v889(v887, 1, v1658) == 1)
      {
        int v891 = v889(v888, 1, v890);
        uint64_t v892 = v878;
        uint64_t v582 = v1670;
        if (v891 == 1)
        {
          sub_24EC88758(v887, &qword_26B1DB9F0);
          goto LABEL_199;
        }
      }
      else
      {
        uint64_t v983 = v1517;
        sub_24ECF30E4(v887, v1517);
        int v984 = v889(v888, 1, v890);
        uint64_t v582 = v1670;
        if (v984 != 1)
        {
          uint64_t v1040 = v1657;
          uint64_t v1041 = v1569;
          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v888, v890);
          sub_24ECF314C(&qword_26B1DB9E8);
          LODWORD(v1665.f64[0]) = sub_24EE57040();
          uint64_t v1042 = *(void (**)(char *, uint64_t))(v1040 + 8);
          v1042(v1041, v1658);
          v1042((char *)v983, v1658);
          uint64_t v890 = v1658;
          sub_24EC88758(v1532, &qword_26B1DB9F0);
          uint64_t v892 = v1559;
          if (LOBYTE(v1665.f64[0]))
          {
LABEL_199:
            *(void *)&long long v1668 = v884;
            uint64_t v1043 = v1511;
            uint64_t v1044 = v1511 + *(int *)(v1656 + 48);
            uint64_t v1045 = v1597;
            sub_24ECF30E4(v1597, v1511);
            uint64_t v1046 = v1596;
            sub_24ECF30E4(v1596, v1044);
            if (v889(v1043, 1, v890) == 1)
            {
              sub_24EC88758(v1046, &qword_26B1DB9F0);
              sub_24EC88758(v1575, &qword_26B1DB9F0);
              sub_24EC88758(v1045, &qword_26B1DB9F0);
              sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
              ((void (*)(char *, void))v1667)(v892, *(void *)&v1669.f64[0]);
              if (v889(v1044, 1, v890) == 1)
              {
                uint64_t v1047 = v1043;
LABEL_250:
                sub_24EC88758(v1047, &qword_26B1DB9F0);
                goto LABEL_251;
              }
            }
            else
            {
              uint64_t v1059 = v1496;
              sub_24ECF30E4(v1043, v1496);
              if (v889(v1044, 1, v890) != 1)
              {
                uint64_t v1133 = v1657;
                uint64_t v1134 = v1043;
                uint64_t v1135 = v1059;
                uint64_t v1136 = v1569;
                (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1044, v890);
                sub_24ECF314C(&qword_26B1DB9E8);
                char v1137 = sub_24EE57040();
                uint64_t v1138 = *(void (**)(char *, uint64_t))(v1133 + 8);
                v1138(v1136, v890);
                sub_24EC88758(v1596, &qword_26B1DB9F0);
                sub_24EC88758(v1575, &qword_26B1DB9F0);
                sub_24EC88758(v1597, &qword_26B1DB9F0);
                sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
                ((void (*)(char *, void))v1667)(v892, *(void *)&v1669.f64[0]);
                v1138((char *)v1135, v890);
                uint64_t v1139 = v1134;
                goto LABEL_324;
              }
              sub_24EC88758(v1596, &qword_26B1DB9F0);
              sub_24EC88758(v1575, &qword_26B1DB9F0);
              sub_24EC88758(v1597, &qword_26B1DB9F0);
              sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
              ((void (*)(char *, void))v1667)(v892, *(void *)&v1669.f64[0]);
              (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1059, v890);
            }
            uint64_t v1060 = v1043;
            goto LABEL_278;
          }
LABEL_145:
          sub_24EC88758(v1596, &qword_26B1DB9F0);
          sub_24EC88758(v1575, &qword_26B1DB9F0);
          sub_24EC88758(v1597, &qword_26B1DB9F0);
          sub_24EC88758((uint64_t)v1651, &qword_26B1DB9F0);
          ((void (*)(char *, void))v1667)(v892, *(void *)&v1669.f64[0]);
LABEL_197:
          (*(void (**)(char *, uint64_t))(v1662 + 8))(v582, v1666);
          goto LABEL_334;
        }
        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v983, v890);
        uint64_t v892 = v1559;
      }
      sub_24EC88758(v887, &qword_26B1DBA00);
      goto LABEL_145;
    default:
      uint64_t v417 = ((uint64_t (*)(char *, char *, uint64_t))v415)(v409, v1670, v375);
      uint64_t v1732 = *((void *)v409 + 30);
      long long v418 = *((_OWORD *)v409 + 13);
      long long v1729 = *((_OWORD *)v409 + 12);
      long long v1730 = v418;
      long long v1731 = *((_OWORD *)v409 + 14);
      long long v419 = *((_OWORD *)v409 + 9);
      long long v1725 = *((_OWORD *)v409 + 8);
      long long v1726 = v419;
      long long v420 = *((_OWORD *)v409 + 11);
      long long v1727 = *((_OWORD *)v409 + 10);
      long long v1728 = v420;
      long long v421 = *((_OWORD *)v409 + 5);
      long long v1721 = *((_OWORD *)v409 + 4);
      long long v1722 = v421;
      long long v422 = *((_OWORD *)v409 + 7);
      long long v1723 = *((_OWORD *)v409 + 6);
      long long v1724 = v422;
      long long v423 = *((_OWORD *)v409 + 1);
      float64x2_t v1717 = *(float64x2_t *)v409;
      long long v1718 = v423;
      long long v424 = *((_OWORD *)v409 + 3);
      long long v1719 = *((_OWORD *)v409 + 2);
      long long v1720 = v424;
      MEMORY[0x270FA5388](v417);
      strcpy((char *)&v1447 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      *(void *)&v1703.f64[0] = &type metadata for ActionCardViewLayout;
      v1703.f64[1] = v1669.f64[0];
      *(void *)&long long v1704 = &type metadata for ActionCardViewStyle;
      *((void *)&v1704 + 1) = *(void *)&v1665.f64[0];
      v1705.f64[0] = v1665.f64[0];
      v1705.f64[1] = v1665.f64[0];
      *(void *)&v1706[0] = v1655;
      *((void *)&v1706[0] + 1) = v1661;
      uint64_t v425 = (int *)swift_getTupleTypeMetadata();
      *(void *)&v1665.f64[0] = &v409[v425[12]];
      int v426 = v409[v425[16]];
      uint64_t v427 = (uint64_t)&v409[v425[20]];
      uint64_t v428 = v375;
      uint64_t v429 = (uint64_t)&v409[v425[24]];
      uint64_t v430 = (uint64_t)&v409[v425[28]];
      uint64_t v431 = &v409[v425[32]];
      uint64_t v432 = &v409[v425[36]];
      uint64_t v433 = v1667;
      if (swift_getEnumCaseMultiPayload())
      {
        ((void (*)(char *, uint64_t))v1660[1])(v432, v1661);
        (*(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8))(v431, v1655);
        sub_24EC88758(v430, &qword_26B1DB9F0);
        sub_24EC88758(v429, &qword_26B1DB9F0);
        sub_24EC88758(v427, &qword_26B1DB9F0);
        (*(void (**)(void, void))(v1668 + 8))(*(void *)&v1665.f64[0], *(void *)&v1669.f64[0]);
        goto LABEL_90;
      }
      LODWORD(v1650) = v426;
      uint64_t v1666 = v428;
      long long v897 = *(_OWORD *)(v433 + 96);
      long long v1708 = *(_OWORD *)(v433 + 112);
      long long v1707 = v897;
      long long v898 = *(_OWORD *)(v433 + 64);
      v1706[2] = *(_OWORD *)(v433 + 80);
      v1706[1] = v898;
      long long v899 = *(_OWORD *)(v433 + 160);
      long long v1712 = *(_OWORD *)(v433 + 176);
      long long v1711 = v899;
      long long v900 = *(_OWORD *)(v433 + 128);
      long long v1710 = *(_OWORD *)(v433 + 144);
      long long v1709 = v900;
      uint64_t v1716 = *(void *)(v433 + 240);
      long long v1715 = *(_OWORD *)(v433 + 224);
      long long v901 = *(_OWORD *)(v433 + 192);
      long long v1714 = *(_OWORD *)(v433 + 208);
      long long v1713 = v901;
      long long v902 = *(_OWORD *)(v433 + 16);
      float64x2_t v1703 = *(float64x2_t *)v433;
      long long v1704 = v902;
      float64x2_t v903 = *(float64x2_t *)(v433 + 32);
      v1706[0] = *(_OWORD *)(v433 + 48);
      float64x2_t v1705 = v903;
      uint64_t v1651 = (unsigned __int8 *)(v433 + v425[12]);
      LODWORD(v1649) = *(unsigned __int8 *)(v433 + v425[16]);
      uint64_t v1653 = v433 + v425[20];
      v1654 = (char *)(v433 + v425[24]);
      *(void *)&long long v1663 = v433 + v425[28];
      uint64_t v1664 = v433 + v425[32];
      uint64_t v1667 = v433 + v425[36];
      uint64_t v904 = *(void (**)(char *, unsigned __int8 *, void))(v1668 + 32);
      float64_t v905 = v1669.f64[0];
      v904(v1601, *(unsigned __int8 **)&v1665.f64[0], *(void *)&v1669.f64[0]);
      sub_24ECB04CC(v427, v1594);
      sub_24ECB04CC(v429, v1584);
      sub_24ECB04CC(v430, v1579);
      uint64_t v907 = *(void *)&v1652.f64[0] + 32;
      uint64_t v906 = *(void (**)(char *, char *, uint64_t))(*(void *)&v1652.f64[0] + 32);
      uint64_t v908 = v431;
      uint64_t v909 = v1655;
      v906(v1582, v908, v1655);
      uint64_t v910 = (void (*)(char *, char *, uint64_t))v1660[4];
      uint64_t v911 = v432;
      uint64_t v912 = v1661;
      v910(v1598, v911, v1661);
      v904(v1595, v1651, *(void *)&v905);
      sub_24ECB04CC(v1653, v1593);
      sub_24ECB04CC((uint64_t)v1654, v1583);
      uint64_t v913 = v1549;
      sub_24ECB04CC(v1663, v1549);
      uint64_t v914 = v1533;
      uint64_t v915 = v1664;
      *(void *)&v1665.f64[0] = v906;
      uint64_t v1664 = v907;
      v906(v1533, (char *)v915, v909);
      uint64_t v916 = v1534;
      v910(v1534, (char *)v1667, v912);
      long long v1699 = v1729;
      long long v1700 = v1730;
      long long v1701 = v1731;
      uint64_t v1702 = v1732;
      long long v1695 = v1725;
      long long v1696 = v1726;
      long long v1697 = v1727;
      long long v1698 = v1728;
      long long v1691 = v1721;
      long long v1692 = v1722;
      long long v1693 = v1723;
      long long v1694 = v1724;
      float64x2_t v1687 = v1717;
      long long v1688 = v1718;
      long long v1689 = v1719;
      long long v1690 = v1720;
      long long v1683 = v1713;
      long long v1684 = v1714;
      long long v1685 = v1715;
      uint64_t v1686 = v1716;
      long long v1679 = v1709;
      long long v1680 = v1710;
      long long v1681 = v1711;
      long long v1682 = v1712;
      long long v1675 = v1706[1];
      long long v1676 = v1706[2];
      long long v1677 = v1707;
      long long v1678 = v1708;
      float64x2_t v1671 = v1703;
      long long v1672 = v1704;
      float64x2_t v1673 = v1705;
      long long v1674 = v1706[0];
      BOOL v917 = _s15FitnessCanvasUI20ActionCardViewLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)&v1687, (uint64_t)&v1671);
      float64_t v918 = v1669.f64[0];
      if (v917)
      {
        v919 = v1595;
        if (sub_24EE57040())
        {
          uint64_t v920 = v1668;
          uint64_t v921 = v1660;
          uint64_t v922 = v1598;
          uint64_t v923 = v1549;
          if (v1650 != v1649)
          {
            uint64_t v1048 = (void (*)(char *, uint64_t))v1660[1];
            ++v1660;
            uint64_t v1049 = v909;
            uint64_t v1050 = v1661;
            v1048(v1534, v1661);
            uint64_t v1051 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
            v1051(v914, v1049);
            sub_24EC88758(v923, &qword_26B1DB9F0);
            sub_24EC88758(v1583, &qword_26B1DB9F0);
            sub_24EC88758(v1593, &qword_26B1DB9F0);
            uint64_t v1052 = *(void (**)(char *, void))(v920 + 8);
            uint64_t v1053 = v919;
            float64_t v1054 = v1669.f64[0];
            v1052(v1053, *(void *)&v1669.f64[0]);
            v1048(v922, v1050);
            v1051(v1582, v1655);
LABEL_203:
            sub_24EC88758(v1579, &qword_26B1DB9F0);
            sub_24EC88758(v1584, &qword_26B1DB9F0);
            sub_24EC88758(v1594, &qword_26B1DB9F0);
            uint64_t v1055 = v1601;
            float64_t v1056 = v1054;
LABEL_332:
            v1052(v1055, *(void *)&v1056);
            goto LABEL_333;
          }
          uint64_t v924 = v1497;
          uint64_t v925 = v1497 + *(int *)(v1656 + 48);
          sub_24ECF30E4(v1594, v1497);
          sub_24ECF30E4(v1593, v925);
          v926 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1657 + 48);
          uint64_t v927 = v1658;
          int v928 = v926(v924, 1, v1658);
          uint64_t v1667 = (uint64_t)v926;
          if (v928 == 1)
          {
            if (v926(v925, 1, v927) == 1)
            {
              sub_24EC88758(v924, &qword_26B1DB9F0);
              uint64_t v927 = v1658;
              goto LABEL_293;
            }
          }
          else
          {
            uint64_t v1109 = v1481;
            sub_24ECF30E4(v924, v1481);
            if (v926(v925, 1, v927) != 1)
            {
              uint64_t v1175 = v1657;
              uint64_t v1176 = v924;
              uint64_t v1177 = v1569;
              (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v925, v927);
              sub_24ECF314C(&qword_26B1DB9E8);
              char v1178 = sub_24EE57040();
              uint64_t v1179 = *(void (**)(char *, uint64_t))(v1175 + 8);
              v1179(v1177, v927);
              v1179((char *)v1109, v927);
              uint64_t v921 = v1660;
              uint64_t v920 = v1668;
              sub_24EC88758(v1176, &qword_26B1DB9F0);
              uint64_t v923 = v1549;
              if (v1178)
              {
LABEL_293:
                uint64_t v1180 = v920;
                uint64_t v1181 = v1478;
                uint64_t v1182 = v1478 + *(int *)(v1656 + 48);
                sub_24ECF30E4(v1584, v1478);
                sub_24ECF30E4(v1583, v1182);
                uint64_t v1183 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1667;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1667)(v1181, 1, v927) == 1)
                {
                  int v1184 = v1183(v1182, 1, v927);
                  uint64_t v1185 = v1582;
                  uint64_t v1186 = (uint64_t)v1473;
                  if (v1184 == 1)
                  {
                    sub_24EC88758(v1181, &qword_26B1DB9F0);
                    uint64_t v927 = v1658;
                    goto LABEL_358;
                  }
                }
                else
                {
                  uint64_t v1242 = v1465;
                  sub_24ECF30E4(v1181, v1465);
                  if (v1183(v1182, 1, v927) != 1)
                  {
                    uint64_t v1299 = v1242;
                    uint64_t v1300 = v1657;
                    uint64_t v1301 = v1181;
                    uint64_t v1302 = v1569;
                    (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1182, v927);
                    sub_24ECF314C(&qword_26B1DB9E8);
                    char v1303 = sub_24EE57040();
                    uint64_t v1304 = *(void (**)(char *, uint64_t))(v1300 + 8);
                    v1304(v1302, v927);
                    v1304((char *)v1299, v927);
                    uint64_t v921 = v1660;
                    uint64_t v1180 = v1668;
                    sub_24EC88758(v1301, &qword_26B1DB9F0);
                    uint64_t v1185 = v1582;
                    uint64_t v1183 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1667;
                    uint64_t v1186 = (uint64_t)v1473;
                    if (v1303)
                    {
LABEL_358:
                      uint64_t v1305 = v1464;
                      uint64_t v1306 = v1464 + *(int *)(v1656 + 48);
                      sub_24ECF30E4(v1579, v1464);
                      sub_24ECF30E4(v1549, v1306);
                      if (v1183(v1305, 1, v927) == 1)
                      {
                        if (v1183(v1306, 1, v927) == 1)
                        {
                          sub_24EC88758(v1305, &qword_26B1DB9F0);
                          uint64_t v1307 = v1655;
LABEL_389:
                          if (sub_24EE57040())
                          {
                            uint64_t v1369 = v1307;
                            uint64_t v1370 = v1458;
                            uint64_t v1371 = (uint64_t)&v1458[*(int *)(v1509 + 48)];
                            uint64_t v1372 = (void (*)(char *, char *, uint64_t))v921[2];
                            uint64_t v1373 = v1661;
                            v1372(v1458, v1598, v1661);
                            uint64_t v1667 = v1371;
                            v1372((char *)v1371, v1534, v1373);
                            *(void *)&long long v1663 = *(void *)(*(void *)&v1652.f64[0] + 48);
                            if (((unsigned int (*)(char *, uint64_t, uint64_t))v1663)(v1370, 1, v1369) == 1)
                            {
                              uint64_t v1374 = v1660 + 1;
                              uint64_t v1375 = (void (*)(char *, uint64_t))v1660[1];
                              v1375(v1534, v1373);
                              v1665.f64[0] = *(float64_t *)(*(void *)&v1652.f64[0] + 8);
                              (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1533, v1369);
                              sub_24EC88758(v1549, &qword_26B1DB9F0);
                              sub_24EC88758(v1583, &qword_26B1DB9F0);
                              sub_24EC88758(v1593, &qword_26B1DB9F0);
                              uint64_t v1376 = *(void (**)(char *, void))(v1668 + 8);
                              float64_t v1377 = v1669.f64[0];
                              v1376(v1595, *(void *)&v1669.f64[0]);
                              uint64_t v1660 = v1374;
                              v1375(v1598, v1373);
                              (*(void (**)(char *, uint64_t))&v1665.f64[0])(v1582, v1369);
                              sub_24EC88758(v1579, &qword_26B1DB9F0);
                              sub_24EC88758(v1584, &qword_26B1DB9F0);
                              sub_24EC88758(v1594, &qword_26B1DB9F0);
                              v1376(v1601, *(void *)&v1377);
                              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1663)(v1667, 1, v1369) == 1)
                              {
                                v1375(v1458, v1661);
LABEL_424:
                                (*(void (**)(char *, uint64_t))(v1662 + 8))(v1670, v1666);
                                goto LABEL_367;
                              }
                            }
                            else
                            {
                              v1372(v1454, v1458, v1373);
                              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1663)(v1667, 1, v1369) != 1)
                              {
                                uint64_t v1412 = v1470;
                                uint64_t v1413 = v1655;
                                (*(void (**)(char *, uint64_t, uint64_t))&v1665.f64[0])(v1470, v1667, v1655);
                                LODWORD(v1667) = sub_24EE57040();
                                uint64_t v1414 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
                                v1414(v1412, v1413);
                                uint64_t v1415 = (void (*)(char *, uint64_t))v1660[1];
                                v1415(v1534, v1661);
                                v1414(v1533, v1413);
                                sub_24EC88758(v1549, &qword_26B1DB9F0);
                                sub_24EC88758(v1583, &qword_26B1DB9F0);
                                sub_24EC88758(v1593, &qword_26B1DB9F0);
                                uint64_t v1416 = *(void (**)(char *, void))(v1668 + 8);
                                float64_t v1417 = v1669.f64[0];
                                v1416(v1595, *(void *)&v1669.f64[0]);
                                v1415(v1598, v1661);
                                v1414(v1582, v1413);
                                sub_24EC88758(v1579, &qword_26B1DB9F0);
                                sub_24EC88758(v1584, &qword_26B1DB9F0);
                                sub_24EC88758(v1594, &qword_26B1DB9F0);
                                v1416(v1601, *(void *)&v1417);
                                v1414(v1454, v1413);
                                v1415(v1458, v1661);
                                if (v1667) {
                                  goto LABEL_424;
                                }
                                goto LABEL_333;
                              }
                              v1396 = (void (*)(char *, uint64_t))v1660[1];
                              uint64_t v1397 = v1661;
                              v1396(v1534, v1661);
                              uint64_t v1667 = *(void *)(*(void *)&v1652.f64[0] + 8);
                              uint64_t v1398 = v1655;
                              ((void (*)(char *, uint64_t))v1667)(v1533, v1655);
                              sub_24EC88758(v1549, &qword_26B1DB9F0);
                              sub_24EC88758(v1583, &qword_26B1DB9F0);
                              sub_24EC88758(v1593, &qword_26B1DB9F0);
                              v1399 = *(void (**)(char *, void))(v1668 + 8);
                              float64_t v1400 = v1669.f64[0];
                              v1399(v1595, *(void *)&v1669.f64[0]);
                              v1396(v1598, v1397);
                              uint64_t v1401 = (void (*)(char *, uint64_t))v1667;
                              ((void (*)(char *, uint64_t))v1667)(v1582, v1398);
                              sub_24EC88758(v1579, &qword_26B1DB9F0);
                              sub_24EC88758(v1584, &qword_26B1DB9F0);
                              sub_24EC88758(v1594, &qword_26B1DB9F0);
                              v1399(v1601, *(void *)&v1400);
                              v1401(v1454, v1398);
                            }
                            (*(void (**)(char *, uint64_t))(v1479 + 8))(v1458, v1509);
LABEL_333:
                            (*(void (**)(char *, uint64_t))(v1662 + 8))(v1670, v1666);
                            goto LABEL_334;
                          }
                          uint64_t v1383 = (void (*)(char *, uint64_t))v921[1];
                          uint64_t v1660 = v921 + 1;
                          uint64_t v1667 = (uint64_t)v1383;
                          uint64_t v1384 = v1661;
                          v1383(v1534, v1661);
                          uint64_t v1385 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
                          v1385(v1533, v1307);
                          sub_24EC88758(v1549, &qword_26B1DB9F0);
                          sub_24EC88758(v1583, &qword_26B1DB9F0);
                          sub_24EC88758(v1593, &qword_26B1DB9F0);
                          uint64_t v1052 = *(void (**)(char *, void))(v1180 + 8);
                          float64_t v1054 = v1669.f64[0];
                          v1052(v1595, *(void *)&v1669.f64[0]);
                          ((void (*)(char *, uint64_t))v1667)(v1598, v1384);
                          v1385(v1185, v1307);
                          goto LABEL_203;
                        }
                      }
                      else
                      {
                        sub_24ECF30E4(v1305, v1186);
                        if (v1183(v1306, 1, v927) != 1)
                        {
                          uint64_t v1365 = v1657;
                          uint64_t v1366 = v1569;
                          (*(void (**)(char *, uint64_t, uint64_t))(v1657 + 32))(v1569, v1306, v927);
                          sub_24ECF314C(&qword_26B1DB9E8);
                          char v1367 = sub_24EE57040();
                          uint64_t v1368 = *(void (**)(char *, uint64_t))(v1365 + 8);
                          uint64_t v921 = v1660;
                          v1368(v1366, v927);
                          v1368((char *)v1186, v927);
                          sub_24EC88758(v1464, &qword_26B1DB9F0);
                          uint64_t v1307 = v1655;
                          if (v1367) {
                            goto LABEL_389;
                          }
LABEL_379:
                          v1335 = (void (*)(char *, uint64_t))v921[1];
                          uint64_t v1660 = v921 + 1;
                          uint64_t v1336 = v1661;
                          v1335(v1534, v1661);
                          uint64_t v1337 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
                          v1337(v1533, v1307);
                          sub_24EC88758(v1549, &qword_26B1DB9F0);
                          sub_24EC88758(v1583, &qword_26B1DB9F0);
                          sub_24EC88758(v1593, &qword_26B1DB9F0);
                          uint64_t v1338 = *(void (**)(char *, void))(v1180 + 8);
                          float64_t v1339 = v1669.f64[0];
                          v1338(v1595, *(void *)&v1669.f64[0]);
                          v1335(v1598, v1336);
                          v1337(v1582, v1307);
                          sub_24EC88758(v1579, &qword_26B1DB9F0);
                          sub_24EC88758(v1584, &qword_26B1DB9F0);
                          sub_24EC88758(v1594, &qword_26B1DB9F0);
                          v1338(v1601, *(void *)&v1339);
                          goto LABEL_333;
                        }
                        (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1186, v927);
                      }
                      sub_24EC88758(v1305, &qword_26B1DBA00);
                      uint64_t v1307 = v1655;
                      goto LABEL_379;
                    }
                    goto LABEL_330;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1242, v927);
                }
                sub_24EC88758(v1181, &qword_26B1DBA00);
LABEL_330:
                uint64_t v1667 = v921[1];
                uint64_t v1243 = v1661;
                ((void (*)(char *, uint64_t))v1667)(v1534, v1661);
                uint64_t v1244 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
                uint64_t v1245 = v1655;
                v1244(v1533, v1655);
                sub_24EC88758(v1549, &qword_26B1DB9F0);
                sub_24EC88758(v1583, &qword_26B1DB9F0);
                sub_24EC88758(v1593, &qword_26B1DB9F0);
                uint64_t v1052 = *(void (**)(char *, void))(v1180 + 8);
                float64_t v1191 = v1669.f64[0];
                v1052(v1595, *(void *)&v1669.f64[0]);
                ((void (*)(char *, uint64_t))v1667)(v1598, v1243);
                v1244(v1582, v1245);
                goto LABEL_331;
              }
LABEL_296:
              uint64_t v1187 = (void (*)(char *, uint64_t))v921[1];
              uint64_t v1660 = v921 + 1;
              uint64_t v1188 = v1661;
              v1187(v1534, v1661);
              uint64_t v1189 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
              uint64_t v1190 = v1655;
              v1189(v1533, v1655);
              sub_24EC88758(v923, &qword_26B1DB9F0);
              sub_24EC88758(v1583, &qword_26B1DB9F0);
              sub_24EC88758(v1593, &qword_26B1DB9F0);
              uint64_t v1052 = *(void (**)(char *, void))(v920 + 8);
              float64_t v1191 = v1669.f64[0];
              v1052(v1595, *(void *)&v1669.f64[0]);
              v1187(v1598, v1188);
              v1189(v1582, v1190);
LABEL_331:
              sub_24EC88758(v1579, &qword_26B1DB9F0);
              sub_24EC88758(v1584, &qword_26B1DB9F0);
              sub_24EC88758(v1594, &qword_26B1DB9F0);
              uint64_t v1055 = v1601;
              float64_t v1056 = v1191;
              goto LABEL_332;
            }
            (*(void (**)(uint64_t, uint64_t))(v1657 + 8))(v1109, v927);
            uint64_t v923 = v1549;
          }
          sub_24EC88758(v924, &qword_26B1DBA00);
          goto LABEL_296;
        }
        float64_t v950 = v918;
        uint64_t v1667 = v1660[1];
        uint64_t v951 = v1661;
        ((void (*)(char *, uint64_t))v1667)(v916, v1661);
        uint64_t v952 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
        v952(v914, v909);
        sub_24EC88758(v1549, &qword_26B1DB9F0);
        sub_24EC88758(v1583, &qword_26B1DB9F0);
        sub_24EC88758(v1593, &qword_26B1DB9F0);
        uint64_t v985 = v919;
        uint64_t v953 = v909;
        uint64_t v954 = *(void (**)(char *, void))(v1668 + 8);
        v954(v985, *(void *)&v918);
      }
      else
      {
        float64_t v950 = v1669.f64[0];
        uint64_t v1667 = v1660[1];
        uint64_t v951 = v1661;
        ((void (*)(char *, uint64_t))v1667)(v916, v1661);
        uint64_t v952 = *(void (**)(char *, uint64_t))(*(void *)&v1652.f64[0] + 8);
        v952(v914, v909);
        sub_24EC88758(v913, &qword_26B1DB9F0);
        sub_24EC88758(v1583, &qword_26B1DB9F0);
        sub_24EC88758(v1593, &qword_26B1DB9F0);
        uint64_t v953 = v909;
        uint64_t v954 = *(void (**)(char *, void))(v1668 + 8);
        v954(v1595, *(void *)&v950);
      }
      ((void (*)(char *, uint64_t))v1667)(v1598, v951);
      v952(v1582, v953);
      sub_24EC88758(v1579, &qword_26B1DB9F0);
      sub_24EC88758(v1584, &qword_26B1DB9F0);
      sub_24EC88758(v1594, &qword_26B1DB9F0);
      v954(v1601, *(void *)&v950);
      goto LABEL_333;
  }
}

uint64_t CanvasItemContent.hashValue.getter(void *a1)
{
  sub_24EE57870();
  CanvasItemContent.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ECF308C(uint64_t a1, void *a2)
{
  sub_24EE57870();
  CanvasItemContent.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ECF30D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static CanvasItemContent.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
}

uint64_t sub_24ECF30E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ECF314C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24EE55880();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ECF3190()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ECF31AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24ECF31B4()
{
  uint64_t v29 = &unk_24EE5B2E8;
  uint64_t v0 = swift_checkMetadataState();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(v0 - 8) + 64;
    uint64_t v30 = v3;
    uint64_t v31 = &unk_24EE5B300;
    sub_24ED02DA0();
    if (v5 > 0x3F) {
      return v4;
    }
    uint64_t v6 = *(void *)(v4 - 8) + 64;
    uint64_t v32 = (void *)v6;
    uint64_t v33 = v6;
    uint64_t v34 = v6;
    uint64_t v7 = swift_checkMetadataState();
    if (v8 > 0x3F) {
      return v7;
    }
    uint64_t v35 = *(void *)(v7 - 8) + 64;
    uint64_t v4 = sub_24EE57430();
    if (v9 > 0x3F)
    {
      return v4;
    }
    else
    {
      uint64_t v10 = *(void *)(v4 - 8) + 64;
      uint64_t v36 = v10;
      swift_getTupleTypeLayout();
      uint64_t v40 = &v39;
      uint64_t v11 = type metadata accessor for FullWidthItemDescriptor();
      uint64_t v1 = v11;
      if (v12 <= 0x3F)
      {
        uint64_t v41 = *(void *)(v11 - 8) + 64;
        uint64_t v29 = &unk_24EE5B318;
        uint64_t v30 = v3;
        uint64_t v31 = &unk_24EE5B330;
        uint64_t v32 = (void *)v6;
        uint64_t v33 = v6;
        uint64_t v34 = v6;
        uint64_t v35 = v10;
        uint64_t v36 = v10;
        uint64_t v13 = sub_24EE57430();
        uint64_t v1 = v13;
        if (v14 <= 0x3F)
        {
          uint64_t v37 = *(void *)(v13 - 8) + 64;
          swift_getTupleTypeLayout();
          uint64_t v42 = &v38;
          swift_getTupleTypeLayout();
          uint64_t v43 = &v28;
          uint64_t v29 = (void *)v3;
          uint64_t v30 = v6;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          swift_getTupleTypeLayout();
          uint64_t v44 = &v27;
          uint64_t v29 = (void *)v3;
          uint64_t v30 = v6;
          uint64_t v31 = &unk_24EE5B330;
          uint64_t v32 = &unk_24EE5B360;
          uint64_t v33 = v6;
          swift_getTupleTypeLayout();
          uint64_t v45 = &v26;
          uint64_t v29 = &unk_24EE5B378;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          swift_getTupleTypeLayout();
          uint64_t v46 = &v25;
          uint64_t v29 = (void *)v3;
          uint64_t v30 = v6;
          uint64_t v31 = &unk_24EE5B330;
          uint64_t v32 = &unk_24EE5B360;
          uint64_t v33 = v6;
          swift_getTupleTypeLayout();
          uint64_t v47 = &v24;
          uint64_t v29 = &unk_24EE5B390;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          uint64_t v33 = v6;
          swift_getTupleTypeLayout();
          uint64_t v48 = &v23;
          uint64_t v29 = &unk_24EE5B3A8;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          uint64_t v33 = v6;
          uint64_t v34 = v6;
          uint64_t v35 = v10;
          swift_getTupleTypeLayout();
          uint64_t v49 = &v22;
          uint64_t v29 = &unk_24EE5B3C0;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          uint64_t v33 = v6;
          swift_getTupleTypeLayout();
          uint64_t v50 = &v21;
          uint64_t v29 = &unk_24EE5B3D8;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = &unk_24EE5B3F0;
          swift_getTupleTypeLayout();
          uint64_t v51 = &v20;
          uint64_t v29 = &unk_24EE5B408;
          uint64_t v30 = v3;
          uint64_t v31 = (void *)v6;
          uint64_t v32 = (void *)v6;
          uint64_t v33 = v6;
          swift_getTupleTypeLayout();
          uint64_t v52 = &v19;
          uint64_t v15 = swift_checkMetadataState();
          uint64_t v1 = v15;
          if (v16 <= 0x3F)
          {
            uint64_t v53 = *(void *)(v15 - 8) + 64;
            swift_getTupleTypeLayout3();
            uint64_t v54 = &v18;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return v1;
}

_OWORD *sub_24ECF3674(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v270 = a3[3];
  uint64_t v271 = *(void *)(v270 - 8);
  int v280 = *(_DWORD *)(v271 + 80);
  uint64_t v4 = v280;
  size_t v5 = *(void *)(v271 + 64);
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v272 = v6;
  uint64_t v273 = v7;
  int v277 = v8;
  uint64_t v9 = v8;
  uint64_t v10 = v5 + v8;
  size_t v260 = v10 + 1 + ((v4 + 248) & ~v4);
  size_t v11 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v12 = *(void *)(v7 + 64);
  }
  else {
    size_t v12 = v11 + 1;
  }
  size_t v13 = v12 + v8;
  uint64_t v268 = a3[2];
  uint64_t v14 = *(void *)(v268 - 8);
  int v274 = *(_DWORD *)(v14 + 80);
  size_t v15 = v12 + v274;
  uint64_t v16 = *(void *)(v14 + 64);
  uint64_t v263 = v16 + v274;
  uint64_t v267 = v14;
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v17 = *(void *)(*(void *)(v268 - 8) + 64);
  }
  else {
    uint64_t v17 = v16 + 1;
  }
  unint64_t v297 = ((v263
         + ((v15
           + ((v12
             + v8
             + ((v12 + v8 + (v260 & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)*(_DWORD *)(v14 + 80))) & ~(unint64_t)*(_DWORD *)(v14 + 80))
       + v17;
  size_t v269 = v5;
  if (v11 > v5) {
    size_t v5 = *(void *)(v7 + 64);
  }
  uint64_t v19 = sub_24EE55960();
  uint64_t v253 = *(void *)(v19 - 8);
  uint64_t v254 = v19;
  int v20 = *(_DWORD *)(v253 + 80);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v253 + 64);
  size_t v18 = v13 & ~v9;
  if (((v12 + v20 + v18) & ~(unint64_t)v20) + v22 <= v5) {
    uint64_t v23 = v5;
  }
  else {
    uint64_t v23 = ((v12 + v20 + v18) & ~(unint64_t)v20) + v22;
  }
  uint64_t v262 = v17 + v274;
  uint64_t v24 = a3[4];
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25;
  int v27 = *(_DWORD *)(v25 + 80);
  uint64_t v28 = v274;
  unint64_t v29 = *(void *)(v25 + 64);
  if (*(_DWORD *)(v25 + 84)) {
    size_t v30 = *(void *)(v25 + 64);
  }
  else {
    size_t v30 = v29 + 1;
  }
  unint64_t v31 = v30
      + ((v17
        + v27
        + ((v17
          + v274
          + ((v15
            + ((v13
              + ((v13 + ((v10 + 1 + ((v280 + 224) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)) & ~(unint64_t)v274)) & ~(unint64_t)v274)) & ~(unint64_t)v27);
  unint64_t v32 = v17 + ((v15 + ((v13 + ((v9 + 64) & ~v9)) & ~v9)) & ~(unint64_t)v274);
  size_t v33 = (v10 & ~v9) + v12;
  unint64_t v34 = ((v33 + v9) & ~v9) + v12;
  unint64_t v35 = ((v9 + 24 + (v33 & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v12;
  size_t __n = v17;
  size_t v266 = v12 + v274;
  unint64_t v36 = ((v15
        + ((v13
          + ((v13
            + ((v13 + ((v10 + ((v280 + 160) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~(unint64_t)v274)
      + v17;
  unint64_t v37 = ((v13
        + ((v13 + ((v10 + ((v280 + 56) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
      + v12;
  unint64_t v38 = ((v10 + ((v280 + 64) & ~(unint64_t)v280)) & ~v9) + v12;
  size_t v258 = ((v34 + v9) & ~v9) + v12;
  unint64_t v259 = v35;
  if (v35 <= v297) {
    unint64_t v35 = v297;
  }
  if (v35 <= v23 + 1) {
    unint64_t v35 = v23 + 1;
  }
  if (v35 <= v31) {
    unint64_t v35 = v31;
  }
  if (v35 <= v32) {
    unint64_t v35 = v32;
  }
  if (v35 <= ((v34 + v9) & ~v9) + v12) {
    unint64_t v35 = ((v34 + v9) & ~v9) + v12;
  }
  unint64_t v256 = ((v13
         + ((v13 + ((v10 + ((v280 + 104) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
       + v12;
  unint64_t v257 = ((v13 + ((v10 + ((v280 + 24) & ~(unint64_t)v280)) & ~v9)) & ~v9)
       + v12;
  if (v35 <= v257) {
    unint64_t v35 = ((v13 + ((v10 + ((v280 + 24) & ~(unint64_t)v280)) & ~v9)) & ~v9)
  }
        + v12;
  if (v35 <= ((v13
              + ((v13 + ((v10 + ((v280 + 104) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
            + v12)
    unint64_t v35 = ((v13
          + ((v13 + ((v10 + ((v280 + 104) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
        + v12;
  if (v35 <= v36) {
    unint64_t v35 = v36;
  }
  if (v35 <= v37) {
    unint64_t v35 = ((v13
  }
          + ((v13 + ((v10 + ((v280 + 56) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
        + v12;
  size_t v255 = v38 + 1;
  if (v35 <= v38 + 1) {
    unint64_t v39 = v38 + 1;
  }
  else {
    unint64_t v39 = v35;
  }
  unint64_t v40 = v9 | v280 | v274 | (unint64_t)v20;
  size_t v293 = v12 + v9;
  size_t v295 = v12;
  unint64_t v41 = ((v13
        + ((v13 + ((v10 + ((v280 + 128) & ~(unint64_t)v280)) & ~v9)) & ~v9)) & ~v9)
      + v12;
  if (v39 <= v41) {
    unint64_t v39 = v41;
  }
  if (v39 <= v34) {
    unint64_t v39 = v34;
  }
  if (v39 <= v29) {
    unint64_t v42 = v29;
  }
  else {
    unint64_t v42 = v39;
  }
  if ((v40 | v27) > 7 || ((v277 | v280 | v274 | v20 | v27) & 0x100000) != 0 || v42 + 1 > 0x18)
  {
    uint64_t v49 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v47 = (_OWORD *)(v49
                   + (((v40 | v27) & 0xF8 ^ 0x1F8) & ((v40 | v27) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v43 = v10;
    unint64_t v278 = v36;
    unint64_t v281 = v31;
    unsigned int v44 = a2[v42];
    unsigned int v45 = v44 - 15;
    unint64_t v252 = v32;
    if (v44 < 0xF)
    {
      uint64_t v47 = a1;
    }
    else
    {
      if (v42 <= 3) {
        uint64_t v46 = v42;
      }
      else {
        uint64_t v46 = 4;
      }
      uint64_t v47 = a1;
      switch(v46)
      {
        case 1:
          int v48 = *a2;
          if (v42 < 4) {
            goto LABEL_59;
          }
          goto LABEL_61;
        case 2:
          int v48 = *(unsigned __int16 *)a2;
          if (v42 >= 4) {
            goto LABEL_61;
          }
          goto LABEL_59;
        case 3:
          int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v42 < 4) {
            goto LABEL_59;
          }
          goto LABEL_61;
        case 4:
          int v48 = *(_DWORD *)a2;
          if (v42 < 4) {
LABEL_59:
          }
            unsigned int v44 = (v48 | (v45 << (8 * v42))) + 15;
          else {
LABEL_61:
          }
            unsigned int v44 = v48 + 15;
          break;
        default:
          break;
      }
    }
    unint64_t v286 = v37;
    uint64_t v51 = ~v4;
    uint64_t v298 = ~v9;
    unint64_t v52 = ~(unint64_t)v274;
    uint64_t v53 = ~v21;
    switch(v44)
    {
      case 1u:
        unsigned int v69 = a2[v23];
        unsigned int v70 = v69 - 3;
        if (v69 < 3)
        {
          uint64_t v74 = v47;
          uint64_t v73 = v272;
          uint64_t v72 = v273;
          size_t v75 = v295;
        }
        else
        {
          if (v23 <= 3) {
            uint64_t v71 = v23;
          }
          else {
            uint64_t v71 = 4;
          }
          uint64_t v73 = v272;
          uint64_t v72 = v273;
          uint64_t v74 = v47;
          size_t v75 = v295;
          switch(v71)
          {
            case 1:
              int v76 = *a2;
              goto LABEL_232;
            case 2:
              int v76 = *(unsigned __int16 *)a2;
              goto LABEL_232;
            case 3:
              int v76 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_232;
            case 4:
              int v76 = *(_DWORD *)a2;
LABEL_232:
              if (v23 < 4) {
                unsigned int v69 = (v76 | (v70 << (8 * v23))) + 3;
              }
              else {
                unsigned int v69 = v76 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v69 == 2)
        {
          unint64_t v292 = v42;
          uint64_t v283 = *(_DWORD *)(v253 + 80);
          uint64_t v296 = v23;
          uint64_t v249 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v72 + 48);
          if (v249(a2, 1, v73))
          {
            memcpy(v74, a2, v75);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v72 + 16))(v74, a2, v73);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v73);
          }
          uint64_t v250 = (void *)(((unint64_t)v74 + v293) & v298);
          uint64_t v251 = (void *)((unint64_t)&a2[v293] & v298);
          if (v249((unsigned __int8 *)v251, 1, v73))
          {
            memcpy(v250, v251, v75);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v72 + 16))(v250, v251, v73);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v250, 0, 1, v73);
          }
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v253 + 16))(((unint64_t)v250 + v75 + v283) & v53, ((unint64_t)v251 + v75 + v283) & v53, v254);
          char v248 = 2;
          uint64_t v245 = v296;
          uint64_t v47 = v74;
          unint64_t v247 = v292;
        }
        else if (v69 == 1)
        {
          uint64_t v47 = v74;
          uint64_t v244 = v74;
          uint64_t v245 = v23;
          unint64_t v246 = v42;
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v72 + 16))(v244, a2, v73);
          unint64_t v247 = v246;
          char v248 = 1;
        }
        else
        {
          unint64_t v247 = v42;
          uint64_t v245 = v23;
          uint64_t v47 = v74;
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v271 + 16))(v74, a2, v270);
          char v248 = 0;
        }
        *((unsigned char *)v47 + v245) = v248;
        *((unsigned char *)v47 + v247) = 1;
        break;
      case 2u:
        unint64_t v264 = ~(unint64_t)v27;
        unint64_t v77 = v42;
        uint64_t v275 = v27;
        size_t v261 = v30;
        uint64_t v279 = v26;
        uint64_t v282 = v24;
        uint64_t v288 = ~v28;
        long long v78 = *((_OWORD *)a2 + 11);
        v47[10] = *((_OWORD *)a2 + 10);
        v47[11] = v78;
        long long v79 = *((_OWORD *)a2 + 13);
        v47[12] = *((_OWORD *)a2 + 12);
        v47[13] = v79;
        long long v80 = *((_OWORD *)a2 + 7);
        v47[6] = *((_OWORD *)a2 + 6);
        v47[7] = v80;
        long long v81 = *((_OWORD *)a2 + 9);
        v47[8] = *((_OWORD *)a2 + 8);
        v47[9] = v81;
        long long v82 = *((_OWORD *)a2 + 3);
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v82;
        long long v83 = *((_OWORD *)a2 + 5);
        v47[4] = *((_OWORD *)a2 + 4);
        v47[5] = v83;
        long long v84 = *((_OWORD *)a2 + 1);
        uint64_t v85 = ((unint64_t)v47 + v4 + 224) & v51;
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v84;
        uint64_t v86 = v47;
        uint64_t v87 = (unint64_t)&a2[v4 + 224] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v85, v87, v270);
        size_t v88 = v87 + v269;
        *(unsigned char *)(v85 + v269) = *(unsigned char *)(v87 + v269);
        uint64_t v89 = (void *)((v85 + v269 + v9 + 1) & v298);
        uint64_t v90 = (const void *)((v88 + v9 + 1) & v298);
        uint64_t v91 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v91(v90, 1, v272))
        {
          size_t v92 = v295;
          memcpy(v89, v90, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v89, v90, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v89, 0, 1, v272);
          size_t v92 = v295;
        }
        uint64_t v183 = (void *)(((unint64_t)v89 + v293) & v298);
        uint64_t v184 = (const void *)(((unint64_t)v90 + v293) & v298);
        if (v91(v184, 1, v272))
        {
          memcpy(v183, v184, v92);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v183, v184, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v183, 0, 1, v272);
        }
        uint64_t v203 = (void *)(((unint64_t)v183 + v293) & v298);
        uint64_t v204 = (const void *)(((unint64_t)v184 + v293) & v298);
        if (v91(v204, 1, v272))
        {
          memcpy(v203, v204, v92);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v203, v204, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v203, 0, 1, v272);
        }
        uint64_t v47 = v86;
        uint64_t v218 = (void *)(((unint64_t)v203 + v266) & v288);
        uint64_t v219 = (const void *)(((unint64_t)v204 + v266) & v288);
        uint64_t v220 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v267 + 48);
        if (v220(v219, 1, v268))
        {
          size_t v221 = __n;
          memcpy(v218, v219, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v267 + 16))(v218, v219, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v218, 0, 1, v268);
          size_t v221 = __n;
        }
        uint64_t v224 = (void *)(((unint64_t)v218 + v262) & v288);
        uint64_t v225 = (const void *)(((unint64_t)v219 + v262) & v288);
        if (v220(v225, 1, v268))
        {
          memcpy(v224, v225, v221);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v267 + 16))(v224, v225, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v224, 0, 1, v268);
        }
        uint64_t v228 = (void *)(((unint64_t)v224 + v221 + v275) & v264);
        uint64_t v229 = (const void *)(((unint64_t)v225 + v221 + v275) & v264);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v279 + 48))(v229, 1, v282))
        {
          memcpy(v228, v229, v261);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v279 + 16))(v228, v229, v282);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v228, 0, 1, v282);
        }
        *((unsigned char *)v47 + v77) = 2;
        break;
      case 3u:
        unint64_t v93 = v42;
        long long v94 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v94;
        long long v95 = *((_OWORD *)a2 + 3);
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v95;
        uint64_t v96 = v47;
        uint64_t v97 = (void *)(((unint64_t)v47 + v9 + 64) & v298);
        uint64_t v98 = (const void *)((unint64_t)&a2[v9 + 64] & v298);
        uint64_t v99 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v99(v98, 1, v272))
        {
          size_t v100 = v295;
          memcpy(v97, v98, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v97, v98, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v97, 0, 1, v272);
          size_t v100 = v295;
        }
        uint64_t v185 = (void *)(((unint64_t)v97 + v293) & v298);
        uint64_t v186 = (const void *)(((unint64_t)v98 + v293) & v298);
        unint64_t v187 = v93;
        if (v99(v186, 1, v272))
        {
          memcpy(v185, v186, v100);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v185, v186, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v185, 0, 1, v272);
        }
        uint64_t v205 = (void *)(((unint64_t)v185 + v100 + v274) & v52);
        uint64_t v206 = (const void *)(((unint64_t)v186 + v100 + v274) & v52);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v267 + 48))(v206, 1, v268))
        {
          memcpy(v205, v206, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v267 + 16))(v205, v206, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v205, 0, 1, v268);
        }
        uint64_t v47 = v96;
        *((unsigned char *)v96 + v187) = 3;
        break;
      case 4u:
        unint64_t v289 = v42;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v271 + 16))(v47, a2, v270);
        unint64_t v101 = (unint64_t)v47 + v43;
        uint64_t v102 = (void *)(((unint64_t)v47 + v43) & v298);
        unint64_t v103 = (unint64_t)&a2[v43];
        uint64_t v104 = (const void *)((unint64_t)&a2[v43] & v298);
        uint64_t v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v105(v104, 1, v272))
        {
          uint64_t v106 = v104;
          size_t v107 = v295;
          memcpy(v102, v106, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v102, v104, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v102, 0, 1, v272);
          size_t v107 = v295;
        }
        uint64_t v188 = (void *)(((v101 | v9) + v107) & v298);
        uint64_t v189 = (const void *)(((v103 | v9) + v107) & v298);
        if (v105(v189, 1, v272))
        {
          memcpy(v188, v189, v107);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v188, v189, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v188, 0, 1, v272);
        }
        uint64_t v207 = (void *)(((unint64_t)v188 + v293) & v298);
        uint64_t v208 = (const void *)(((unint64_t)v189 + v293) & v298);
        if (v105(v208, 1, v272))
        {
          memcpy(v207, v208, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v207, v208, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v207, 0, 1, v272);
        }
        *((unsigned char *)v47 + v289) = 4;
        break;
      case 5u:
        uint64_t v149 = v9 + 24;
        unint64_t v150 = v42;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v271 + 16))(v47, a2, v270);
        uint64_t v151 = (void *)(((unint64_t)v47 + v43) & v298);
        uint64_t v152 = (const void *)((unint64_t)&a2[v43] & v298);
        uint64_t v153 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v153(v152, 1, v272))
        {
          size_t v154 = v295;
          memcpy(v151, v152, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v151, v152, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v151, 0, 1, v272);
          size_t v154 = v295;
        }
        *((unsigned char *)v151 + v154) = *((unsigned char *)v152 + v154);
        unint64_t v230 = ((unint64_t)v151 + v154) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v231 = ((unint64_t)v152 + v154) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v230 + 8) = *(_OWORD *)(v231 + 8);
        uint64_t v232 = (void *)((v149 + v230) & v298);
        uint64_t v233 = (const void *)((v149 + v231) & v298);
        if (v153(v233, 1, v272))
        {
          memcpy(v232, v233, v154);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v232, v233, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v232, 0, 1, v272);
        }
        *((unsigned char *)v47 + v150) = 5;
        break;
      case 6u:
        unint64_t v155 = v42;
        *uint64_t v47 = *(_OWORD *)a2;
        *((void *)v47 + 2) = *((void *)a2 + 2);
        uint64_t v156 = ((unint64_t)v47 + v4 + 24) & v51;
        uint64_t v157 = (unint64_t)&a2[v4 + 24] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v156, v157, v270);
        uint64_t v158 = (void *)((v156 + v269 + v9) & v298);
        uint64_t v159 = (const void *)((v157 + v269 + v9) & v298);
        uint64_t v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v160(v159, 1, v272))
        {
          size_t v161 = v295;
          memcpy(v158, v159, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v158, v159, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v158, 0, 1, v272);
          size_t v161 = v295;
        }
        uint64_t v234 = (void *)(((unint64_t)v158 + v293) & v298);
        uint64_t v235 = (const void *)(((unint64_t)v159 + v293) & v298);
        if (v160(v235, 1, v272))
        {
          memcpy(v234, v235, v161);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v234, v235, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v234, 0, 1, v272);
        }
        *((unsigned char *)v47 + v155) = 6;
        break;
      case 7u:
        uint64_t v108 = v9 + 24;
        unint64_t v109 = v42;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v271 + 16))(v47, a2, v270);
        uint64_t v110 = (void *)(((unint64_t)v47 + v43) & v298);
        uint64_t v111 = (const void *)((unint64_t)&a2[v43] & v298);
        uint64_t v112 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v112(v111, 1, v272))
        {
          size_t v113 = v295;
          memcpy(v110, v111, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v110, v111, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v110, 0, 1, v272);
          size_t v113 = v295;
        }
        *((unsigned char *)v110 + v113) = *((unsigned char *)v111 + v113);
        unint64_t v190 = ((unint64_t)v110 + v113) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v191 = ((unint64_t)v111 + v113) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v190 + 8) = *(_OWORD *)(v191 + 8);
        uint64_t v192 = (void *)((v108 + v190) & v298);
        uint64_t v193 = (const void *)((v108 + v191) & v298);
        if (v112(v193, 1, v272))
        {
          memcpy(v192, v193, v113);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v192, v193, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v192, 0, 1, v272);
        }
        *((unsigned char *)v47 + v109) = 7;
        break;
      case 8u:
        unint64_t v162 = v42;
        long long v163 = *((_OWORD *)a2 + 5);
        v47[4] = *((_OWORD *)a2 + 4);
        v47[5] = v163;
        *((void *)v47 + 12) = *((void *)a2 + 12);
        long long v164 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v164;
        long long v165 = *((_OWORD *)a2 + 3);
        uint64_t v166 = ((unint64_t)v47 + v4 + 104) & v51;
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v165;
        uint64_t v167 = (unint64_t)&a2[v4 + 104] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v166, v167, v270);
        uint64_t v168 = (void *)((v166 + v269 + v9) & v298);
        uint64_t v169 = (const void *)((v167 + v269 + v9) & v298);
        uint64_t v170 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v170(v169, 1, v272))
        {
          size_t v171 = v295;
          memcpy(v168, v169, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v168, v169, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v168, 0, 1, v272);
          size_t v171 = v295;
        }
        uint64_t v236 = (void *)(((unint64_t)v168 + v293) & v298);
        uint64_t v237 = (const void *)(((unint64_t)v169 + v293) & v298);
        if (v170(v237, 1, v272))
        {
          memcpy(v236, v237, v171);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v236, v237, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v236, 0, 1, v272);
        }
        uint64_t v240 = (void *)(((unint64_t)v236 + v293) & v298);
        uint64_t v241 = (const void *)(((unint64_t)v237 + v293) & v298);
        if (v170(v241, 1, v272))
        {
          memcpy(v240, v241, v171);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v240, v241, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v240, 0, 1, v272);
        }
        *((unsigned char *)v47 + v162) = 8;
        break;
      case 9u:
        unint64_t v114 = v42;
        unint64_t v290 = ~(unint64_t)v274;
        long long v115 = *((_OWORD *)a2 + 7);
        v47[6] = *((_OWORD *)a2 + 6);
        v47[7] = v115;
        long long v116 = *((_OWORD *)a2 + 9);
        v47[8] = *((_OWORD *)a2 + 8);
        v47[9] = v116;
        long long v117 = *((_OWORD *)a2 + 3);
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v117;
        long long v118 = *((_OWORD *)a2 + 5);
        v47[4] = *((_OWORD *)a2 + 4);
        v47[5] = v118;
        long long v119 = *((_OWORD *)a2 + 1);
        uint64_t v120 = ((unint64_t)v47 + v4 + 160) & v51;
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v119;
        uint64_t v121 = (unint64_t)&a2[v4 + 160] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v120, v121, v270);
        uint64_t v122 = (void *)((v120 + v269 + v9) & v298);
        uint64_t v123 = (const void *)((v121 + v269 + v9) & v298);
        uint64_t v124 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v124(v123, 1, v272))
        {
          size_t v125 = v295;
          memcpy(v122, v123, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v122, v123, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v122, 0, 1, v272);
          size_t v125 = v295;
        }
        uint64_t v194 = (void *)(((unint64_t)v122 + v293) & v298);
        uint64_t v195 = (const void *)(((unint64_t)v123 + v293) & v298);
        if (v124(v195, 1, v272))
        {
          memcpy(v194, v195, v125);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v194, v195, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v194, 0, 1, v272);
        }
        uint64_t v209 = (void *)(((unint64_t)v194 + v293) & v298);
        uint64_t v210 = (const void *)(((unint64_t)v195 + v293) & v298);
        if (v124(v210, 1, v272))
        {
          memcpy(v209, v210, v125);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v209, v210, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v209, 0, 1, v272);
        }
        uint64_t v222 = (void *)(((unint64_t)v209 + v293) & v298);
        uint64_t v223 = (const void *)(((unint64_t)v210 + v293) & v298);
        if (v124(v223, 1, v272))
        {
          memcpy(v222, v223, v125);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v222, v223, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v222, 0, 1, v272);
        }
        uint64_t v226 = (void *)(((unint64_t)v222 + v266) & v290);
        uint64_t v227 = (const void *)(((unint64_t)v223 + v266) & v290);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v267 + 48))(v227, 1, v268))
        {
          memcpy(v226, v227, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v267 + 16))(v226, v227, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v226, 0, 1, v268);
        }
        *((unsigned char *)v47 + v114) = 9;
        break;
      case 0xAu:
        unint64_t v172 = v42;
        long long v173 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v173;
        v47[2] = *((_OWORD *)a2 + 2);
        *((void *)v47 + 6) = *((void *)a2 + 6);
        uint64_t v174 = ((unint64_t)v47 + v4 + 56) & v51;
        uint64_t v175 = (unint64_t)&a2[v4 + 56] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v174, v175, v270);
        uint64_t v176 = (void *)((v174 + v269 + v9) & v298);
        uint64_t v177 = (const void *)((v175 + v269 + v9) & v298);
        uint64_t v178 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v178(v177, 1, v272))
        {
          size_t v179 = v295;
          memcpy(v176, v177, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v176, v177, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v176, 0, 1, v272);
          size_t v179 = v295;
        }
        uint64_t v238 = (void *)(((unint64_t)v176 + v293) & v298);
        uint64_t v239 = (const void *)(((unint64_t)v177 + v293) & v298);
        if (v178(v239, 1, v272))
        {
          memcpy(v238, v239, v179);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v238, v239, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v238, 0, 1, v272);
        }
        uint64_t v242 = (void *)(((unint64_t)v238 + v293) & v298);
        uint64_t v243 = (const void *)(((unint64_t)v239 + v293) & v298);
        if (v178(v243, 1, v272))
        {
          memcpy(v242, v243, v179);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v242, v243, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v242, 0, 1, v272);
        }
        *((unsigned char *)v47 + v172) = 10;
        break;
      case 0xBu:
        size_t v276 = v23 + 1;
        uint64_t v126 = ~v28;
        long long v127 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v127;
        long long v128 = *((_OWORD *)a2 + 3);
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v128;
        uint64_t v129 = ((unint64_t)v47 + v4 + 64) & v51;
        uint64_t v130 = (unint64_t)&a2[v4 + 64] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v129, v130, v270);
        uint64_t v131 = (void *)((v129 + v269 + v9) & v298);
        uint64_t v132 = (const void *)((v130 + v269 + v9) & v298);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48))(v132, 1, v272))
        {
          size_t v133 = v295;
          memcpy(v131, v132, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v131, v132, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v131, 0, 1, v272);
          size_t v133 = v295;
        }
        *((unsigned char *)v131 + v133) = *((unsigned char *)v132 + v133);
        size_t v196 = ((v263 + ((v266 + ((v293 + (((v260 | v9) + v133) & v298)) & v298)) & v126)) & v126) + __n;
        if (v276 > v196) {
          size_t v196 = v276;
        }
        if (v281 > v196) {
          size_t v196 = v281;
        }
        if (v252 > v196) {
          size_t v196 = v252;
        }
        if (v258 > v196) {
          size_t v196 = v258;
        }
        if (v259 > v196) {
          size_t v196 = v259;
        }
        if (v257 > v196) {
          size_t v196 = v257;
        }
        if (v259 > v196) {
          size_t v196 = v259;
        }
        if (v256 > v196) {
          size_t v196 = v256;
        }
        if (v278 > v196) {
          size_t v196 = v278;
        }
        if (v286 > v196) {
          size_t v196 = v286;
        }
        if (v255 > v196) {
          size_t v196 = v255;
        }
        if (v41 > v196) {
          size_t v196 = v41;
        }
        if (v29 > v196) {
          size_t v196 = v29;
        }
        if (v34 > v196) {
          size_t v196 = v34;
        }
        *((unsigned char *)v47 + v196) = 11;
        break;
      case 0xCu:
        unint64_t v134 = v42;
        long long v135 = *((_OWORD *)a2 + 5);
        v47[4] = *((_OWORD *)a2 + 4);
        v47[5] = v135;
        long long v136 = *((_OWORD *)a2 + 7);
        v47[6] = *((_OWORD *)a2 + 6);
        v47[7] = v136;
        long long v137 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v137;
        long long v138 = *((_OWORD *)a2 + 3);
        uint64_t v139 = ((unint64_t)v47 + v4 + 128) & v51;
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v138;
        uint64_t v140 = (unint64_t)&a2[v4 + 128] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v139, v140, v270);
        uint64_t v141 = (void *)((v139 + v269 + v9) & v298);
        uint64_t v142 = (const void *)((v140 + v269 + v9) & v298);
        uint64_t v143 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v143(v142, 1, v272))
        {
          size_t v144 = v295;
          memcpy(v141, v142, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v141, v142, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v141, 0, 1, v272);
          size_t v144 = v295;
        }
        uint64_t v197 = (void *)(((unint64_t)v141 + v293) & v298);
        uint64_t v198 = (const void *)(((unint64_t)v142 + v293) & v298);
        if (v143(v198, 1, v272))
        {
          memcpy(v197, v198, v144);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v197, v198, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v197, 0, 1, v272);
        }
        uint64_t v211 = (void *)(((unint64_t)v197 + v293) & v298);
        uint64_t v212 = (const void *)(((unint64_t)v198 + v293) & v298);
        if (v143(v212, 1, v272))
        {
          memcpy(v211, v212, v144);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v211, v212, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v211, 0, 1, v272);
        }
        *((unsigned char *)v47 + v134) = 12;
        break;
      case 0xDu:
        unint64_t v180 = v42;
        (*(void (**)(_OWORD *, unsigned __int8 *))(v26 + 16))(v47, a2);
        *((unsigned char *)v47 + v180) = 13;
        break;
      case 0xEu:
        unint64_t v291 = v42;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v271 + 16))(v47, a2, v270);
        uint64_t v145 = (void *)(((unint64_t)v47 + v43) & v298);
        unint64_t v146 = (unint64_t)&a2[v43] & v298;
        uint64_t v147 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v273 + 48);
        if (v147(v146, 1, v272))
        {
          size_t v148 = v295;
          memcpy(v145, (const void *)((unint64_t)&a2[v43] & v298), v295);
        }
        else
        {
          (*(void (**)(void *, unint64_t, uint64_t))(v273 + 16))(v145, v146, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v145, 0, 1, v272);
          size_t v148 = v295;
        }
        uint64_t v199 = (void *)(((((unint64_t)v47 + v43) | v9) + v148) & v298);
        uint64_t v200 = (const void *)((((unint64_t)&a2[v43] | v9) + v148) & v298);
        if (v147((unint64_t)v200, 1, v272))
        {
          memcpy(v199, v200, v148);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v199, v200, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v199, 0, 1, v272);
        }
        *((unsigned char *)v47 + v291) = 14;
        break;
      default:
        unint64_t v54 = v42;
        unint64_t v287 = ~(unint64_t)v274;
        long long v55 = *((_OWORD *)a2 + 13);
        v47[12] = *((_OWORD *)a2 + 12);
        v47[13] = v55;
        v47[14] = *((_OWORD *)a2 + 14);
        *((void *)v47 + 30) = *((void *)a2 + 30);
        long long v56 = *((_OWORD *)a2 + 9);
        v47[8] = *((_OWORD *)a2 + 8);
        v47[9] = v56;
        long long v57 = *((_OWORD *)a2 + 11);
        v47[10] = *((_OWORD *)a2 + 10);
        v47[11] = v57;
        long long v58 = *((_OWORD *)a2 + 5);
        v47[4] = *((_OWORD *)a2 + 4);
        v47[5] = v58;
        long long v59 = *((_OWORD *)a2 + 7);
        v47[6] = *((_OWORD *)a2 + 6);
        v47[7] = v59;
        long long v60 = *((_OWORD *)a2 + 1);
        *uint64_t v47 = *(_OWORD *)a2;
        v47[1] = v60;
        long long v61 = *((_OWORD *)a2 + 3);
        uint64_t v62 = ((unint64_t)v47 + v4 + 248) & v51;
        v47[2] = *((_OWORD *)a2 + 2);
        v47[3] = v61;
        uint64_t v63 = v47;
        uint64_t v64 = (unint64_t)&a2[v4 + 248] & v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v62, v64, v270);
        *(unsigned char *)(v62 + v269) = *(unsigned char *)(v64 + v269);
        uint64_t v65 = (void *)((v62 + v269 + v9 + 1) & v298);
        uint64_t v66 = (const void *)((v64 + v269 + v9 + 1) & v298);
        uint64_t v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
        if (v67(v66, 1, v272))
        {
          size_t v68 = v295;
          memcpy(v65, v66, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v65, v66, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v65, 0, 1, v272);
          size_t v68 = v295;
        }
        uint64_t v181 = (void *)(((unint64_t)v65 + v293) & v298);
        uint64_t v182 = (const void *)(((unint64_t)v66 + v293) & v298);
        if (v67(v182, 1, v272))
        {
          memcpy(v181, v182, v68);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v181, v182, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v181, 0, 1, v272);
        }
        uint64_t v201 = (void *)(((unint64_t)v181 + v293) & v298);
        uint64_t v202 = (const void *)(((unint64_t)v182 + v293) & v298);
        if (v67(v202, 1, v272))
        {
          memcpy(v201, v202, v68);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v273 + 16))(v201, v202, v272);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v201, 0, 1, v272);
        }
        uint64_t v47 = v63;
        unint64_t v213 = ((unint64_t)v201 + v266) & v287;
        unint64_t v214 = ((unint64_t)v202 + v266) & v287;
        uint64_t v215 = *(void (**)(unint64_t, unint64_t, uint64_t))(v267 + 16);
        v215(v213, v214, v268);
        uint64_t v216 = (void *)((v263 + v213) & v287);
        uint64_t v217 = (const void *)((v263 + v214) & v287);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v267 + 48))(v217, 1, v268))
        {
          memcpy(v216, v217, __n);
        }
        else
        {
          v215((unint64_t)v216, (unint64_t)v217, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v216, 0, 1, v268);
        }
        *((unsigned char *)v47 + v54) = 0;
        break;
    }
  }
  return v47;
}

uint64_t sub_24ECF5BD0(unsigned __int8 *a1, void *a2)
{
  uint64_t v109 = a2[3];
  uint64_t v110 = *(void *)(v109 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v110 + 80);
  unint64_t v4 = *(void *)(v110 + 64);
  uint64_t v111 = sub_24EE55880();
  uint64_t v5 = *(void *)(v111 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v120 = v5;
  unint64_t v7 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v8 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v8 = v7 + 1;
  }
  uint64_t v106 = a2[2];
  uint64_t v9 = *(void *)(v106 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = v4 + v6;
  uint64_t v13 = v4 + v6 + 1;
  uint64_t v14 = v8 + v6;
  uint64_t v117 = v8 + v10;
  uint64_t v104 = v11 + v10;
  uint64_t v107 = v9;
  unint64_t v108 = v4;
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v15 = *(void *)(*(void *)(v106 - 8) + 64);
  }
  else {
    uint64_t v15 = v11 + 1;
  }
  unint64_t v115 = ((v11 + v10 + ((v8 + v10 + ((v8 + v6 + ((v8 + v6 + ((v13 + ((v3 + 248) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v10)) & ~v10)
       + v15;
  if (v7 <= v4) {
    unint64_t v16 = v4;
  }
  else {
    unint64_t v16 = *(void *)(v5 + 64);
  }
  uint64_t v18 = sub_24EE55960();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v17 = v14 & ~v6;
  if (((v8 + v20 + v17) & ~v20) + v21 <= v16) {
    unint64_t v22 = v16;
  }
  else {
    unint64_t v22 = ((v8 + v20 + v17) & ~v20) + v21;
  }
  uint64_t v23 = a1;
  uint64_t v24 = a2[4];
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = *(void *)(v25 + 64);
  uint64_t v28 = v15 + v10;
  if (*(_DWORD *)(v25 + 84)) {
    unint64_t v29 = *(void *)(v25 + 64);
  }
  else {
    unint64_t v29 = v27 + 1;
  }
  unint64_t v30 = v29
      + ((v15
        + v26
        + ((v15 + v10 + ((v117 + ((v14 + ((v14 + ((v13 + ((v3 + 224) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v10)) & ~v10)) & ~v26);
  unint64_t v31 = (v12 & ~v6) + v8;
  unint64_t v32 = ((v6 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v6) + v8;
  if (v32 <= v115) {
    unint64_t v32 = v115;
  }
  unint64_t v33 = ((v31 + v6) & ~v6) + v8;
  if (v32 <= v22 + 1) {
    unint64_t v32 = v22 + 1;
  }
  if (v32 > v30) {
    unint64_t v30 = v32;
  }
  if (v30 <= v15 + ((v117 + ((v14 + ((v6 + 64) & ~v6)) & ~v6)) & (unint64_t)~v10)) {
    unint64_t v30 = v15 + ((v117 + ((v14 + ((v6 + 64) & ~v6)) & ~v6)) & ~v10);
  }
  if (v30 <= ((v33 + v6) & ~v6) + v8) {
    unint64_t v30 = ((v33 + v6) & ~v6) + v8;
  }
  if (v30 <= ((v14 + ((v12 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v8) {
    unint64_t v30 = ((v14 + ((v12 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v8;
  }
  uint64_t v116 = v15;
  if (v30 <= ((v14 + ((v14 + ((v12 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8) {
    unint64_t v30 = ((v14 + ((v14 + ((v12 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8;
  }
  if (v30 <= ((v117 + ((v14 + ((v14 + ((v14 + ((v12 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & (unint64_t)~v10)
            + v15)
    unint64_t v30 = ((v117 + ((v14 + ((v14 + ((v14 + ((v12 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v10) + v15;
  unint64_t v34 = ((v12 + ((v3 + 64) & ~v3)) & ~v6) + v8;
  if (v30 <= ((v14 + ((v14 + ((v12 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8) {
    unint64_t v30 = ((v14 + ((v14 + ((v12 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8;
  }
  if (v30 <= v34 + 1) {
    unint64_t v30 = v34 + 1;
  }
  uint64_t v35 = v12;
  if (v30 <= ((v14 + ((v14 + ((v12 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8) {
    unint64_t v30 = ((v14 + ((v14 + ((v12 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v8;
  }
  if (v30 <= v33) {
    unint64_t v30 = v33;
  }
  if (v30 > v27) {
    unint64_t v27 = v30;
  }
  unsigned int v36 = a1[v27];
  unsigned int v37 = v36 - 15;
  if (v36 >= 0xF)
  {
    if (v27 <= 3) {
      uint64_t v38 = v27;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a1;
        if (v27 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 2:
        int v39 = *(unsigned __int16 *)a1;
        if (v27 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 3:
        int v39 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v27 < 4) {
          goto LABEL_50;
        }
        goto LABEL_54;
      case 4:
        int v39 = *(_DWORD *)a1;
        if (v27 < 4) {
LABEL_50:
        }
          unsigned int v36 = (v39 | (v37 << (8 * v27))) + 15;
        else {
LABEL_54:
        }
          unsigned int v36 = v39 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v40 = ~v3;
  uint64_t v41 = ~v6;
  uint64_t v42 = ~v20;
  switch(v36)
  {
    case 1u:
      unsigned int v56 = a1[v22];
      unsigned int v57 = v56 - 3;
      if (v56 < 3)
      {
        uint64_t v45 = v111;
        uint64_t v59 = ~v6;
      }
      else
      {
        if (v22 <= 3) {
          uint64_t v58 = v22;
        }
        else {
          uint64_t v58 = 4;
        }
        uint64_t v45 = v111;
        uint64_t v59 = ~v6;
        switch(v58)
        {
          case 1:
            int v60 = *a1;
            goto LABEL_133;
          case 2:
            int v60 = *(unsigned __int16 *)a1;
            goto LABEL_133;
          case 3:
            int v60 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_133;
          case 4:
            int v60 = *(_DWORD *)a1;
LABEL_133:
            if (v22 < 4) {
              unsigned int v56 = (v60 | (v57 << (8 * v22))) + 3;
            }
            else {
              unsigned int v56 = v60 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v56 == 2)
      {
        uint64_t v101 = *(unsigned __int8 *)(v19 + 80);
        uint64_t v119 = *(void *)(v18 - 8);
        uint64_t v79 = v18;
        uint64_t v102 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(v120 + 48);
        if (!v102(a1, 1, v45, v25)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v120 + 8))(a1, v45);
        }
        unint64_t v103 = (unint64_t)&a1[v14] & v59;
        if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v102)(v103, 1, v45)) {
          (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v103, v45);
        }
        long long v94 = (unsigned __int8 *)((v103 + v8 + v101) & v42);
        unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v119 + 8);
        goto LABEL_145;
      }
      if (v56 == 1) {
        goto LABEL_122;
      }
      uint64_t v24 = v109;
      uint64_t v25 = v110;
      goto LABEL_139;
    case 2u:
      uint64_t v61 = v28;
      uint64_t v113 = *(void *)(a2[4] - 8);
      uint64_t v105 = v24;
      uint64_t v62 = ~v10;
      uint64_t v63 = (unint64_t)&a1[v3 + 224] & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v63, v109);
      uint64_t v64 = (v108 + v6 + v63 + 1) & v41;
      uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
      if (!v65(v64, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v64, v111);
      }
      uint64_t v66 = (v14 + v64) & v41;
      if (!v65(v66, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v66, v111);
      }
      uint64_t v67 = (v14 + v66) & v41;
      if (!v65(v67, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v67, v111);
      }
      uint64_t v68 = (v117 + v67) & v62;
      unsigned int v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
      if (!v69(v68, 1, v106)) {
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v68, v106);
      }
      uint64_t v70 = (v61 + v68) & v62;
      if (!v69(v70, 1, v106)) {
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v70, v106);
      }
      uint64_t v71 = (unsigned __int8 *)((v70 + v116 + v26) & ~v26);
      uint64_t v72 = v105;
      uint64_t result = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v113 + 48))(v71, 1, v105);
      if (result) {
        return result;
      }
      uint64_t v73 = v113;
      goto LABEL_110;
    case 3u:
      uint64_t v74 = (unint64_t)&a1[v6 + 64] & v41;
      size_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 48);
      if (!v75(v74, 1, v111, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v74, v111);
      }
      uint64_t v76 = (v14 + v74) & v41;
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v75)(v76, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v76, v111);
      }
      uint64_t v71 = (unsigned __int8 *)((v76 + v8 + v10) & ~v10);
      goto LABEL_108;
    case 4u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v110 + 8))(a1, v109);
      unint64_t v77 = (unint64_t)&a1[v35] & v41;
      long long v78 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v120 + 48);
      uint64_t v79 = v111;
      if (!v78(v77, 1, v111)) {
        (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v77, v111);
      }
      unint64_t v80 = (((unint64_t)&a1[v35] | v6) + v8) & v41;
      if (!v78(v80, 1, v111)) {
        (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v80, v111);
      }
      unint64_t v81 = v14 + v80;
      goto LABEL_126;
    case 5u:
    case 7u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v110 + 8))(a1, v109);
      unint64_t v43 = (unint64_t)&a1[v35] & v41;
      unsigned int v44 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v120 + 48);
      uint64_t v45 = v111;
      if (!v44(v43, 1, v111)) {
        (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v43, v111);
      }
      unint64_t v46 = v6 + 24 + ((v8 + v43) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_121;
    case 6u:
      uint64_t v82 = (unint64_t)&a1[v3 + 24] & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v82, v109);
      uint64_t v83 = (v82 + v108 + v6) & v41;
      unsigned int v44 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v120 + 48);
      uint64_t v45 = v111;
      unsigned int v84 = v44(v83, 1, v111);
      goto LABEL_118;
    case 8u:
      uint64_t v85 = (uint64_t)&a1[v3 + 104];
      goto LABEL_115;
    case 9u:
      uint64_t v86 = ~v10;
      uint64_t v87 = (unint64_t)&a1[v3 + 160] & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v87, v109);
      uint64_t v88 = (v87 + v108 + v6) & v41;
      uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
      if (!v89(v88, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v88, v111);
      }
      uint64_t v90 = (v14 + v88) & v41;
      if (!v89(v90, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v90, v111);
      }
      uint64_t v91 = (v14 + v90) & v41;
      if (!v89(v91, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v91, v111);
      }
      uint64_t v92 = (v14 + v91) & v41;
      if (!v89(v92, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v92, v111);
      }
      uint64_t v71 = (unsigned __int8 *)((v117 + v92) & v86);
LABEL_108:
      uint64_t v72 = v106;
      uint64_t result = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v107 + 48))(v71, 1, v106);
      if (result) {
        return result;
      }
      uint64_t v73 = v107;
LABEL_110:
      unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v73 + 8);
      long long v94 = v71;
      uint64_t v24 = v72;
      break;
    case 0xAu:
      uint64_t v85 = (uint64_t)&a1[v3 + 56];
      goto LABEL_115;
    case 0xBu:
      uint64_t v95 = (unint64_t)&a1[v3 + 64] & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v95, v109);
      uint64_t v96 = (v95 + v108 + v6) & v41;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v96, 1, v111);
      if (result) {
        return result;
      }
      unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v120 + 8);
      long long v94 = (unsigned __int8 *)v96;
      uint64_t v24 = v111;
      break;
    case 0xCu:
      uint64_t v85 = (uint64_t)&a1[v3 + 128];
LABEL_115:
      uint64_t v97 = v85 & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v85 & v40, v109);
      uint64_t v98 = (v97 + v108 + v6) & v41;
      unsigned int v44 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v120 + 48);
      uint64_t v45 = v111;
      if (!v44(v98, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v98, v111);
      }
      uint64_t v83 = (v14 + v98) & v41;
      unsigned int v84 = v44(v83, 1, v111);
LABEL_118:
      if (!v84) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v83, v45);
      }
      unint64_t v46 = v14 + v83;
LABEL_121:
      uint64_t v23 = (unsigned __int8 *)(v46 & v41);
      uint64_t result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v44)(v46 & v41, 1, v45);
      if (result) {
        return result;
      }
LABEL_122:
      unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v120 + 8);
      long long v94 = v23;
      uint64_t v24 = v45;
      break;
    case 0xDu:
LABEL_139:
      unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v25 + 8);
      long long v94 = a1;
      break;
    case 0xEu:
      (*(void (**)(unsigned __int8 *, uint64_t))(v110 + 8))(a1, v109);
      unint64_t v99 = (unint64_t)&a1[v35] & v41;
      long long v78 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v120 + 48);
      uint64_t v79 = v111;
      if (!v78(v99, 1, v111)) {
        (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v99, v111);
      }
      unint64_t v81 = ((unint64_t)&a1[v35] | v6) + v8;
LABEL_126:
      size_t v100 = (unsigned __int8 *)(v81 & v41);
      uint64_t result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v78)(v81 & v41, 1, v79);
      if (result) {
        return result;
      }
      unint64_t v93 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v120 + 8);
      long long v94 = v100;
LABEL_145:
      uint64_t v24 = v79;
      break;
    default:
      uint64_t v47 = ~v10;
      uint64_t v48 = (unint64_t)&a1[v3 + 248] & v40;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v48, v109);
      uint64_t v49 = (v108 + v6 + v48 + 1) & v41;
      uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
      if (!v50(v49, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v49, v111);
      }
      uint64_t v51 = (v14 + v49) & v41;
      if (!v50(v51, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v51, v111);
      }
      uint64_t v52 = (v14 + v51) & v41;
      if (!v50(v52, 1, v111)) {
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v52, v111);
      }
      uint64_t v53 = (v117 + v52) & v47;
      long long v118 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
      v118(v53, v106);
      uint64_t v54 = (v104 + v53) & v47;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v54, 1, v106);
      if (!result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v118)(v54, v106);
      }
      return result;
  }
  return v93(v94, v24);
}

void *sub_24ECF6C10(_OWORD *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v263 = a3[3];
  uint64_t v264 = *(void *)(v263 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v264 + 80);
  size_t v5 = *(void *)(v264 + 64);
  uint64_t v265 = sub_24EE55880();
  uint64_t v6 = *(void *)(v265 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  size_t v8 = v5 + v7;
  uint64_t v269 = v5 + v7 + 1;
  uint64_t v247 = v269 + ((v4 + 248) & ~v4);
  uint64_t v272 = v6;
  size_t v9 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  size_t v11 = v10 + v7;
  uint64_t v260 = a3[2];
  uint64_t v12 = *(void *)(v260 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  size_t v14 = v10 + v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v250 = v15 + v13;
  uint64_t v258 = v12;
  if (*(_DWORD *)(v12 + 84)) {
    size_t v16 = *(void *)(*(void *)(v260 - 8) + 64);
  }
  else {
    size_t v16 = v15 + 1;
  }
  unint64_t v276 = ((v15 + v13 + ((v10 + v13 + ((v10 + v7 + ((v10 + v7 + (v247 & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13) + v16;
  size_t v262 = v5;
  if (v9 > v5) {
    size_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v18 = sub_24EE55960();
  uint64_t v19 = v13;
  uint64_t v236 = *(void *)(v18 - 8);
  uint64_t v237 = v18;
  uint64_t v20 = *(unsigned __int8 *)(v236 + 80);
  uint64_t v21 = *(void *)(v236 + 64);
  size_t v17 = v11 & ~v7;
  if (((v10 + v20 + v17) & ~v20) + v21 <= v5) {
    size_t v22 = v5;
  }
  else {
    size_t v22 = ((v10 + v20 + v17) & ~v20) + v21;
  }
  size_t v249 = v16 + v13;
  uint64_t v23 = a3[4];
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v27 = *(void *)(v24 + 64);
  if (*(_DWORD *)(v24 + 84)) {
    size_t v28 = *(void *)(v24 + 64);
  }
  else {
    size_t v28 = v27 + 1;
  }
  unint64_t v29 = v28
      + ((v16
        + v26
        + ((v16 + v13 + ((v14 + ((v11 + ((v11 + ((v269 + ((v4 + 224) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13)) & ~v26);
  unint64_t v30 = v16 + ((v14 + ((v11 + ((v7 + 64) & ~v7)) & ~v7)) & ~v13);
  size_t v31 = (v8 & ~v7) + v10;
  size_t v32 = ((v31 + v7) & ~v7) + v10;
  unint64_t v33 = ((v7 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v10;
  size_t v257 = v14;
  size_t __n = v16;
  unint64_t v34 = ((v14 + ((v11 + ((v11 + ((v11 + ((v8 + ((v4 + 160) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v19) + v16;
  unint64_t v35 = ((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  size_t v36 = ((v8 + ((v4 + 64) & ~v4)) & ~v7) + v10;
  size_t v253 = v8;
  size_t v267 = v10 + v7;
  size_t v270 = v10;
  size_t v37 = ((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  unint64_t v38 = v276;
  size_t v243 = ((v32 + v7) & ~v7) + v10;
  unint64_t v245 = v33;
  if (v33 > v276) {
    unint64_t v38 = v33;
  }
  if (v38 <= v22 + 1) {
    unint64_t v38 = v22 + 1;
  }
  if (v38 <= v29) {
    unint64_t v38 = v29;
  }
  if (v38 <= v30) {
    unint64_t v38 = v30;
  }
  if (v38 <= ((v32 + v7) & ~v7) + v10) {
    unint64_t v38 = ((v32 + v7) & ~v7) + v10;
  }
  size_t v240 = ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  size_t v241 = ((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10;
  if (v38 <= v241) {
    unint64_t v38 = ((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10;
  }
  if (v38 <= ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10) {
    unint64_t v38 = ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  size_t v238 = v36 + 1;
  unint64_t v239 = v34;
  if (v38 <= v34) {
    unint64_t v38 = v34;
  }
  if (v38 <= v35) {
    unint64_t v38 = ((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (v38 <= v36 + 1) {
    unint64_t v39 = v36 + 1;
  }
  else {
    unint64_t v39 = v38;
  }
  if (v39 <= v37) {
    unint64_t v39 = ((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (v39 <= v32) {
    unint64_t v39 = v32;
  }
  if (v39 <= v27) {
    unint64_t v40 = v27;
  }
  else {
    unint64_t v40 = v39;
  }
  unsigned int v41 = a2[v40];
  unsigned int v42 = v41 - 15;
  if (v41 >= 0xF)
  {
    if (v40 <= 3) {
      uint64_t v43 = v40;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v40 < 4) {
LABEL_51:
        }
          unsigned int v41 = (v44 | (v42 << (8 * v40))) + 15;
        else {
LABEL_55:
        }
          unsigned int v41 = v44 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = ~v4;
  uint64_t v277 = ~v7;
  uint64_t v46 = ~v19;
  switch(v41)
  {
    case 1u:
      unsigned int v61 = a2[v22];
      unsigned int v62 = v61 - 3;
      if (v61 < 3)
      {
        uint64_t v64 = v272;
        uint64_t v65 = a1;
        uint64_t v67 = v265;
        size_t v66 = v267;
      }
      else
      {
        if (v22 <= 3) {
          uint64_t v63 = v22;
        }
        else {
          uint64_t v63 = 4;
        }
        uint64_t v64 = v272;
        uint64_t v65 = a1;
        uint64_t v67 = v265;
        size_t v66 = v267;
        switch(v63)
        {
          case 1:
            int v68 = *a2;
            goto LABEL_229;
          case 2:
            int v68 = *(unsigned __int16 *)a2;
            goto LABEL_229;
          case 3:
            int v68 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_229;
          case 4:
            int v68 = *(_DWORD *)a2;
LABEL_229:
            if (v22 < 4) {
              unsigned int v61 = (v68 | (v62 << (8 * v22))) + 3;
            }
            else {
              unsigned int v61 = v68 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v61 == 2)
      {
        uint64_t v268 = ~v20;
        uint64_t v273 = *(unsigned __int8 *)(v236 + 80);
        size_t v275 = v22;
        unint64_t v231 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v64 + 48);
        unint64_t v232 = v40;
        if (v231(a2, 1, v67))
        {
          memcpy(v65, a2, v270);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v64 + 16))(v65, a2, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v67);
        }
        uint64_t v233 = (void *)(((unint64_t)v65 + v66) & v277);
        uint64_t v234 = (void *)((unint64_t)&a2[v66] & v277);
        if (v231((unsigned __int8 *)v234, 1, v67))
        {
          size_t v235 = v270;
          memcpy(v233, v234, v270);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v64 + 16))(v233, v234, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v233, 0, 1, v67);
          size_t v235 = v270;
        }
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v236 + 16))(((unint64_t)v233 + v235 + v273) & v268, ((unint64_t)v234 + v235 + v273) & v268, v237);
        char v230 = 2;
        unint64_t v40 = v232;
        size_t v229 = v275;
      }
      else
      {
        size_t v229 = v22;
        if (v61 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v64 + 16))(v65, a2, v67);
          char v230 = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v264 + 16))(v65, a2, v263);
          char v230 = 0;
        }
      }
      *((unsigned char *)v65 + v229) = v230;
      char v162 = 1;
      goto LABEL_199;
    case 2u:
      uint64_t v244 = ~v26;
      uint64_t v246 = v26;
      size_t v242 = v28;
      uint64_t v251 = v25;
      uint64_t v254 = v23;
      uint64_t v69 = ~v19;
      unint64_t v248 = v40;
      long long v70 = *((_OWORD *)a2 + 11);
      uint64_t v65 = a1;
      a1[10] = *((_OWORD *)a2 + 10);
      a1[11] = v70;
      long long v71 = *((_OWORD *)a2 + 13);
      a1[12] = *((_OWORD *)a2 + 12);
      a1[13] = v71;
      long long v72 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v72;
      long long v73 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v73;
      long long v74 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v74;
      long long v75 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v75;
      long long v76 = *((_OWORD *)a2 + 1);
      uint64_t v77 = ((unint64_t)a1 + v4 + 224) & v45;
      *a1 = *(_OWORD *)a2;
      a1[1] = v76;
      uint64_t v78 = (unint64_t)&a2[v4 + 224] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v77, v78, v263);
      *(unsigned char *)(v77 + v262) = *(unsigned char *)(v78 + v262);
      uint64_t v79 = (void *)((v77 + v262 + v7 + 1) & v277);
      unint64_t v80 = (const void *)((v78 + v262 + v7 + 1) & v277);
      unint64_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v81(v80, 1, v265))
      {
        size_t v82 = v270;
        memcpy(v79, v80, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v79, v80, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v79, 0, 1, v265);
        size_t v82 = v270;
      }
      long long v165 = (void *)(((unint64_t)v79 + v267) & v277);
      uint64_t v166 = (const void *)(((unint64_t)v80 + v267) & v277);
      if (v81(v166, 1, v265))
      {
        memcpy(v165, v166, v82);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v165, v166, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v165, 0, 1, v265);
      }
      uint64_t v185 = (void *)(((unint64_t)v165 + v267) & v277);
      uint64_t v186 = (const void *)(((unint64_t)v166 + v267) & v277);
      if (v81(v186, 1, v265))
      {
        memcpy(v185, v186, v82);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v185, v186, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v185, 0, 1, v265);
      }
      uint64_t v201 = (void *)(((unint64_t)v185 + v257) & v69);
      uint64_t v202 = (const void *)(((unint64_t)v186 + v257) & v69);
      uint64_t v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48);
      if (v203(v202, 1, v260))
      {
        size_t v204 = v16;
        memcpy(v201, v202, v16);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v201, v202, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v201, 0, 1, v260);
        size_t v204 = v16;
      }
      uint64_t v208 = (void *)(((unint64_t)v201 + v249) & v69);
      uint64_t v209 = (const void *)(((unint64_t)v202 + v249) & v69);
      if (v203(v209, 1, v260))
      {
        memcpy(v208, v209, v204);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v208, v209, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v208, 0, 1, v260);
      }
      uint64_t v212 = (void *)(((unint64_t)v208 + v204 + v246) & v244);
      unint64_t v213 = (const void *)(((unint64_t)v209 + v204 + v246) & v244);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v251 + 48))(v213, 1, v254))
      {
        memcpy(v212, v213, v242);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v251 + 16))(v212, v213, v254);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v251 + 56))(v212, 0, 1, v254);
      }
      char v162 = 2;
      goto LABEL_198;
    case 3u:
      uint64_t v83 = v19;
      unint64_t v248 = v40;
      long long v84 = *((_OWORD *)a2 + 1);
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      a1[1] = v84;
      long long v85 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v85;
      uint64_t v86 = (void *)(((unint64_t)a1 + v7 + 64) & v277);
      uint64_t v87 = (const void *)((unint64_t)&a2[v7 + 64] & v277);
      uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v88(v87, 1, v265))
      {
        memcpy(v86, v87, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v86, v87, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v86, 0, 1, v265);
      }
      uint64_t v167 = (void *)(((unint64_t)v86 + v267) & v277);
      uint64_t v168 = (char *)(((unint64_t)v87 + v267) & v277);
      if (v88(v168, 1, v265))
      {
        size_t v169 = v270;
        memcpy(v167, v168, v270);
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v272 + 16))(v167, v168, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v167, 0, 1, v265);
        size_t v169 = v270;
      }
      unint64_t v187 = &v168[v169];
      uint64_t v188 = (void *)(((unint64_t)v167 + v169 + v83) & v46);
      uint64_t v189 = (const void *)((unint64_t)&v187[v83] & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v189, 1, v260))
      {
        memcpy(v188, v189, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v188, v189, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v188, 0, 1, v260);
      }
      char v162 = 3;
      goto LABEL_198;
    case 4u:
      unint64_t v248 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 16))(a1, a2, v263);
      uint64_t v89 = (void *)(((unint64_t)a1 + v253) & v277);
      uint64_t v90 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v91 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v91(v90, 1, v265))
      {
        size_t v92 = v10;
        memcpy(v89, v90, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v89, v90, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v89, 0, 1, v265);
        size_t v92 = v10;
      }
      uint64_t v170 = (void *)(((((unint64_t)a1 + v253) | v7) + v92) & v277);
      size_t v171 = (const void *)((((unint64_t)&a2[v253] | v7) + v92) & v277);
      if (v91(v171, 1, v265))
      {
        memcpy(v170, v171, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v170, v171, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v170, 0, 1, v265);
      }
      unint64_t v190 = (void *)(((unint64_t)v170 + v267) & v277);
      unint64_t v191 = (const void *)(((unint64_t)v171 + v267) & v277);
      if (v91(v191, 1, v265))
      {
        memcpy(v190, v191, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v190, v191, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v190, 0, 1, v265);
      }
      char v162 = 4;
      goto LABEL_198;
    case 5u:
      uint64_t v131 = v7 + 24;
      unint64_t v132 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 16))(a1, a2, v263);
      size_t v133 = (void *)(((unint64_t)a1 + v253) & v277);
      unint64_t v134 = (const void *)((unint64_t)&a2[v253] & v277);
      long long v135 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v135(v134, 1, v265))
      {
        size_t v136 = v10;
        memcpy(v133, v134, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v133, v134, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v133, 0, 1, v265);
        size_t v136 = v10;
      }
      *((unsigned char *)v133 + v136) = *((unsigned char *)v134 + v136);
      unint64_t v215 = ((unint64_t)v133 + v136) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v216 = ((unint64_t)v134 + v136) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v215 + 8) = *(_OWORD *)(v216 + 8);
      uint64_t v217 = (void *)((v131 + v215) & v277);
      uint64_t v218 = (const void *)((v131 + v216) & v277);
      if (v135(v218, 1, v265))
      {
        memcpy(v217, v218, v136);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v217, v218, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v217, 0, 1, v265);
      }
      char v162 = 5;
      unint64_t v40 = v132;
      goto LABEL_199;
    case 6u:
      unint64_t v137 = v40;
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v138 = ((unint64_t)a1 + v4 + 24) & v45;
      uint64_t v139 = (unint64_t)&a2[v4 + 24] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v138, v139, v263);
      uint64_t v140 = (void *)((v138 + v262 + v7) & v277);
      uint64_t v141 = (const void *)((v139 + v262 + v7) & v277);
      uint64_t v142 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v142(v141, 1, v265))
      {
        size_t v143 = v10;
        memcpy(v140, v141, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v140, v141, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v140, 0, 1, v265);
        size_t v143 = v10;
      }
      uint64_t v219 = (void *)(((unint64_t)v140 + v267) & v277);
      uint64_t v220 = (const void *)(((unint64_t)v141 + v267) & v277);
      if (v142(v220, 1, v265))
      {
        memcpy(v219, v220, v143);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v219, v220, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v219, 0, 1, v265);
      }
      char v162 = 6;
      unint64_t v40 = v137;
      goto LABEL_199;
    case 7u:
      uint64_t v93 = v7 + 24;
      unint64_t v94 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 16))(a1, a2, v263);
      uint64_t v95 = (void *)(((unint64_t)a1 + v253) & v277);
      uint64_t v96 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v97 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v97(v96, 1, v265))
      {
        size_t v98 = v10;
        memcpy(v95, v96, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v95, v96, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v95, 0, 1, v265);
        size_t v98 = v10;
      }
      *((unsigned char *)v95 + v98) = *((unsigned char *)v96 + v98);
      unint64_t v172 = ((unint64_t)v95 + v98) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v173 = ((unint64_t)v96 + v98) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v172 + 8) = *(_OWORD *)(v173 + 8);
      uint64_t v174 = (void *)((v93 + v172) & v277);
      uint64_t v175 = (const void *)((v93 + v173) & v277);
      if (v97(v175, 1, v265))
      {
        memcpy(v174, v175, v98);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v174, v175, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v174, 0, 1, v265);
      }
      char v162 = 7;
      unint64_t v40 = v94;
      goto LABEL_199;
    case 8u:
      unint64_t v144 = v40;
      long long v145 = *((_OWORD *)a2 + 5);
      uint64_t v65 = a1;
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v145;
      *((void *)a1 + 12) = *((void *)a2 + 12);
      long long v146 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v146;
      long long v147 = *((_OWORD *)a2 + 3);
      uint64_t v148 = ((unint64_t)a1 + v4 + 104) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v147;
      uint64_t v149 = (unint64_t)&a2[v4 + 104] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v148, v149, v263);
      unint64_t v150 = (void *)((v148 + v262 + v7) & v277);
      uint64_t v151 = (const void *)((v149 + v262 + v7) & v277);
      uint64_t v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v152(v151, 1, v265))
      {
        size_t v153 = v10;
        memcpy(v150, v151, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v150, v151, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v150, 0, 1, v265);
        size_t v153 = v10;
      }
      size_t v221 = (void *)(((unint64_t)v150 + v267) & v277);
      uint64_t v222 = (const void *)(((unint64_t)v151 + v267) & v277);
      if (v152(v222, 1, v265))
      {
        memcpy(v221, v222, v153);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v221, v222, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v221, 0, 1, v265);
      }
      uint64_t v225 = (void *)(((unint64_t)v221 + v267) & v277);
      uint64_t v226 = (const void *)(((unint64_t)v222 + v267) & v277);
      if (v152(v226, 1, v265))
      {
        memcpy(v225, v226, v153);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v225, v226, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v225, 0, 1, v265);
      }
      char v162 = 8;
      unint64_t v40 = v144;
      goto LABEL_199;
    case 9u:
      uint64_t v255 = ~v19;
      long long v99 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v99;
      long long v100 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v100;
      long long v101 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v101;
      long long v102 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v102;
      long long v103 = *((_OWORD *)a2 + 1);
      uint64_t v104 = ((unint64_t)a1 + v4 + 160) & v45;
      *a1 = *(_OWORD *)a2;
      a1[1] = v103;
      uint64_t v105 = (unint64_t)&a2[v4 + 160] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v104, v105, v263);
      uint64_t v106 = (void *)((v104 + v262 + v7) & v277);
      uint64_t v107 = (const void *)((v105 + v262 + v7) & v277);
      unint64_t v108 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v108(v107, 1, v265))
      {
        size_t v109 = v270;
        memcpy(v106, v107, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v106, v107, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v106, 0, 1, v265);
        size_t v109 = v270;
      }
      uint64_t v176 = (void *)(((unint64_t)v106 + v267) & v277);
      uint64_t v177 = (const void *)(((unint64_t)v107 + v267) & v277);
      uint64_t v65 = a1;
      if (v108(v177, 1, v265))
      {
        memcpy(v176, v177, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v176, v177, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v176, 0, 1, v265);
      }
      uint64_t v192 = (void *)(((unint64_t)v176 + v267) & v277);
      uint64_t v193 = (const void *)(((unint64_t)v177 + v267) & v277);
      if (v108(v193, 1, v265))
      {
        memcpy(v192, v193, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v192, v193, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v192, 0, 1, v265);
      }
      uint64_t v205 = (void *)(((unint64_t)v192 + v267) & v277);
      uint64_t v206 = (const void *)(((unint64_t)v193 + v267) & v277);
      unint64_t v207 = v40;
      if (v108(v206, 1, v265))
      {
        memcpy(v205, v206, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v205, v206, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v205, 0, 1, v265);
      }
      uint64_t v210 = (void *)(((unint64_t)v205 + v257) & v255);
      uint64_t v211 = (const void *)(((unint64_t)v206 + v257) & v255);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v211, 1, v260))
      {
        memcpy(v210, v211, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v210, v211, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v210, 0, 1, v260);
      }
      char v162 = 9;
      unint64_t v40 = v207;
      goto LABEL_199;
    case 0xAu:
      unint64_t v154 = v40;
      long long v155 = *((_OWORD *)a2 + 1);
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      a1[1] = v155;
      a1[2] = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      uint64_t v156 = ((unint64_t)a1 + v4 + 56) & v45;
      uint64_t v157 = (unint64_t)&a2[v4 + 56] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v156, v157, v263);
      uint64_t v158 = (void *)((v156 + v262 + v7) & v277);
      uint64_t v159 = (const void *)((v157 + v262 + v7) & v277);
      uint64_t v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v160(v159, 1, v265))
      {
        size_t v161 = v10;
        memcpy(v158, v159, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v158, v159, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v158, 0, 1, v265);
        size_t v161 = v10;
      }
      uint64_t v223 = (void *)(((unint64_t)v158 + v267) & v277);
      uint64_t v224 = (const void *)(((unint64_t)v159 + v267) & v277);
      if (v160(v224, 1, v265))
      {
        memcpy(v223, v224, v161);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v223, v224, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v223, 0, 1, v265);
      }
      uint64_t v227 = (void *)(((unint64_t)v223 + v267) & v277);
      uint64_t v228 = (const void *)(((unint64_t)v224 + v267) & v277);
      if (v160(v228, 1, v265))
      {
        memcpy(v227, v228, v161);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v227, v228, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v227, 0, 1, v265);
      }
      char v162 = 10;
      unint64_t v40 = v154;
      goto LABEL_199;
    case 0xBu:
      unint64_t v259 = v29;
      size_t v261 = v22 + 1;
      uint64_t v256 = ~v19;
      long long v110 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v110;
      long long v111 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v111;
      uint64_t v112 = ((unint64_t)a1 + v4 + 64) & v45;
      uint64_t v113 = (unint64_t)&a2[v4 + 64] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v112, v113, v263);
      unint64_t v114 = (void *)((v112 + v262 + v7) & v277);
      unint64_t v115 = (const void *)((v113 + v262 + v7) & v277);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48))(v115, 1, v265))
      {
        size_t v116 = v270;
        memcpy(v114, v115, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v114, v115, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v114, 0, 1, v265);
        size_t v116 = v270;
      }
      *((unsigned char *)v114 + v116) = *((unsigned char *)v115 + v116);
      size_t v178 = ((v250 + ((v257 + ((v267 + (((v247 | v7) + v116) & v277)) & v277)) & v256)) & v256) + __n;
      if (v261 > v178) {
        size_t v178 = v261;
      }
      if (v259 > v178) {
        size_t v178 = v259;
      }
      if (v30 > v178) {
        size_t v178 = v30;
      }
      if (v243 > v178) {
        size_t v178 = v243;
      }
      if (v245 > v178) {
        size_t v178 = v245;
      }
      if (v241 > v178) {
        size_t v178 = v241;
      }
      if (v245 > v178) {
        size_t v178 = v245;
      }
      if (v240 > v178) {
        size_t v178 = v240;
      }
      if (v239 > v178) {
        size_t v178 = v239;
      }
      if (v35 > v178) {
        size_t v178 = v35;
      }
      if (v238 > v178) {
        size_t v178 = v238;
      }
      if (v37 > v178) {
        size_t v178 = v37;
      }
      if (v27 > v178) {
        size_t v178 = v27;
      }
      if (v32 <= v178) {
        unint64_t v40 = v178;
      }
      else {
        unint64_t v40 = v32;
      }
      char v162 = 11;
      uint64_t v65 = a1;
      goto LABEL_199;
    case 0xCu:
      unint64_t v117 = v40;
      long long v118 = *((_OWORD *)a2 + 5);
      uint64_t v65 = a1;
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v118;
      long long v119 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v119;
      long long v120 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v120;
      long long v121 = *((_OWORD *)a2 + 3);
      uint64_t v122 = ((unint64_t)a1 + v4 + 128) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v121;
      uint64_t v123 = (unint64_t)&a2[v4 + 128] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v122, v123, v263);
      uint64_t v124 = (void *)((v122 + v262 + v7) & v277);
      size_t v125 = (const void *)((v123 + v262 + v7) & v277);
      uint64_t v126 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v126(v125, 1, v265))
      {
        size_t v127 = v10;
        memcpy(v124, v125, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v124, v125, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v124, 0, 1, v265);
        size_t v127 = v10;
      }
      size_t v179 = (void *)(((unint64_t)v124 + v267) & v277);
      unint64_t v180 = (const void *)(((unint64_t)v125 + v267) & v277);
      if (v126(v180, 1, v265))
      {
        memcpy(v179, v180, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v179, v180, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v179, 0, 1, v265);
      }
      uint64_t v194 = (void *)(((unint64_t)v179 + v267) & v277);
      uint64_t v195 = (const void *)(((unint64_t)v180 + v267) & v277);
      if (v126(v195, 1, v265))
      {
        memcpy(v194, v195, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v194, v195, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v194, 0, 1, v265);
      }
      char v162 = 12;
      unint64_t v40 = v117;
      goto LABEL_199;
    case 0xDu:
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *))(v25 + 16))(a1, a2);
      char v162 = 13;
      goto LABEL_199;
    case 0xEu:
      unint64_t v248 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 16))(a1, a2, v263);
      long long v128 = (void *)(((unint64_t)a1 + v253) & v277);
      uint64_t v129 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v130(v129, 1, v265))
      {
        memcpy(v128, v129, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v128, v129, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v128, 0, 1, v265);
      }
      uint64_t v181 = (void *)(((((unint64_t)a1 + v253) | v7) + v10) & v277);
      uint64_t v182 = (const void *)((((unint64_t)&a2[v253] | v7) + v10) & v277);
      if (v130(v182, 1, v265))
      {
        memcpy(v181, v182, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v181, v182, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v181, 0, 1, v265);
      }
      char v162 = 14;
      goto LABEL_198;
    default:
      uint64_t v47 = ~v19;
      unint64_t v248 = v40;
      long long v48 = *((_OWORD *)a2 + 13);
      a1[12] = *((_OWORD *)a2 + 12);
      a1[13] = v48;
      a1[14] = *((_OWORD *)a2 + 14);
      *((void *)a1 + 30) = *((void *)a2 + 30);
      long long v49 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v49;
      long long v50 = *((_OWORD *)a2 + 11);
      a1[10] = *((_OWORD *)a2 + 10);
      a1[11] = v50;
      long long v51 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v51;
      long long v52 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v52;
      long long v53 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v53;
      long long v54 = *((_OWORD *)a2 + 3);
      uint64_t v55 = ((unint64_t)a1 + v4 + 248) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v54;
      uint64_t v56 = (unint64_t)&a2[v4 + 248] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16))(v55, v56, v263);
      *(unsigned char *)(v55 + v262) = *(unsigned char *)(v56 + v262);
      unsigned int v57 = (void *)((v55 + v262 + v7 + 1) & v277);
      uint64_t v58 = (const void *)((v56 + v262 + v7 + 1) & v277);
      uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v59(v58, 1, v265))
      {
        size_t v60 = v270;
        memcpy(v57, v58, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v57, v58, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v57, 0, 1, v265);
        size_t v60 = v270;
      }
      long long v163 = (void *)(((unint64_t)v57 + v267) & v277);
      long long v164 = (const void *)(((unint64_t)v58 + v267) & v277);
      uint64_t v65 = a1;
      if (v59(v164, 1, v265))
      {
        memcpy(v163, v164, v60);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v163, v164, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v163, 0, 1, v265);
      }
      uint64_t v183 = (void *)(((unint64_t)v163 + v267) & v277);
      uint64_t v184 = (const void *)(((unint64_t)v164 + v267) & v277);
      if (v59(v184, 1, v265))
      {
        memcpy(v183, v184, v60);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 16))(v183, v184, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v183, 0, 1, v265);
      }
      unint64_t v196 = ((unint64_t)v183 + v257) & v47;
      unint64_t v197 = ((unint64_t)v184 + v257) & v47;
      uint64_t v198 = *(void (**)(unint64_t, unint64_t, uint64_t))(v258 + 16);
      v198(v196, v197, v260);
      uint64_t v199 = (void *)((v250 + v196) & v47);
      uint64_t v200 = (const void *)((v250 + v197) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v200, 1, v260))
      {
        memcpy(v199, v200, v16);
      }
      else
      {
        v198((unint64_t)v199, (unint64_t)v200, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v199, 0, 1, v260);
      }
      char v162 = 0;
LABEL_198:
      unint64_t v40 = v248;
LABEL_199:
      *((unsigned char *)v65 + v40) = v162;
      return v65;
  }
}

unsigned __int8 *sub_24ECF90CC(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v355 = a3[3];
    uint64_t v356 = *(void *)(v355 - 8);
    uint64_t v4 = *(unsigned __int8 *)(v356 + 80);
    size_t v5 = *(void *)(v356 + 64);
    uint64_t v357 = sub_24EE55880();
    uint64_t v7 = *(void *)(v357 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v5 + v8;
    uint64_t v354 = v3;
    uint64_t v364 = v5 + v8 + 1;
    uint64_t v332 = v364 + ((v4 + 248) & ~v4);
    uint64_t v360 = v7;
    size_t v10 = *(void *)(v7 + 64);
    int v316 = *(_DWORD *)(v7 + 84);
    if (v316) {
      size_t v11 = *(void *)(*(void *)(v357 - 8) + 64);
    }
    else {
      size_t v11 = v10 + 1;
    }
    size_t v12 = v11 + v8;
    uint64_t v331 = a3[2];
    uint64_t v13 = *(void *)(v331 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    size_t v15 = v11 + v14;
    uint64_t v16 = *(void *)(v13 + 64);
    uint64_t v349 = v16 + v14;
    uint64_t v330 = v13;
    if (*(_DWORD *)(v13 + 84)) {
      size_t v17 = *(void *)(*(void *)(v331 - 8) + 64);
    }
    else {
      size_t v17 = v16 + 1;
    }
    unint64_t v346 = ((v16 + v14 + ((v11 + v14 + ((v11 + v8 + ((v11 + v8 + (v332 & ~v8)) & ~v8)) & ~v8)) & ~v14)) & ~v14) + v17;
    size_t v333 = v5;
    size_t v317 = *(void *)(*(void *)(v357 - 8) + 64);
    if (v10 > v5) {
      size_t v5 = *(void *)(*(void *)(v357 - 8) + 64);
    }
    uint64_t v19 = sub_24EE55960();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v314 = v20;
    uint64_t v315 = v19;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = v4;
    uint64_t v23 = *(void *)(v20 + 64);
    size_t v18 = v12 & ~v8;
    if (((v11 + v21 + v18) & ~v21) + v23 <= v5) {
      uint64_t v24 = v5;
    }
    else {
      uint64_t v24 = ((v11 + v21 + v18) & ~v21) + v23;
    }
    size_t v322 = v17 + v14;
    uint64_t v25 = a3[4];
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
    unint64_t v29 = *(void *)(v26 + 64);
    if (*(_DWORD *)(v26 + 84)) {
      size_t v30 = *(void *)(v26 + 64);
    }
    else {
      size_t v30 = v29 + 1;
    }
    unint64_t v31 = v30
        + ((v17
          + v28
          + ((v17 + v14 + ((v15 + ((v12 + ((v12 + ((v364 + ((v4 + 224) & ~v4)) & ~v8)) & ~v8)) & ~v8)) & ~v14)) & ~v14)) & ~v28);
    unint64_t v32 = v17 + ((v15 + ((v12 + ((v8 + 64) & ~v8)) & ~v8)) & ~v14);
    size_t v33 = (v9 & ~v8) + v11;
    unint64_t v34 = ((v33 + v8) & ~v8) + v11;
    uint64_t v326 = v8 + 24;
    unint64_t v35 = ((v8 + 24 + (v33 & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v11;
    size_t v352 = v17;
    size_t v353 = v11 + v14;
    uint64_t v348 = v14;
    uint64_t v36 = (v15 + ((v12 + ((v12 + ((v12 + ((v9 + ((v4 + 160) & ~v4)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v14;
    uint64_t v3 = v354;
    unint64_t v37 = v36 + v17;
    size_t v38 = ((v9 + ((v4 + 64) & ~v4)) & ~v8) + v11;
    uint64_t v329 = v9;
    size_t v365 = v11 + v8;
    size_t v359 = v11;
    unint64_t v39 = v346;
    unint64_t v342 = v35;
    if (v35 > v346) {
      unint64_t v39 = v35;
    }
    size_t v334 = v24 + 1;
    if (v39 <= v24 + 1) {
      unint64_t v39 = v24 + 1;
    }
    unint64_t v343 = v32;
    unint64_t v344 = v31;
    if (v39 <= v31) {
      unint64_t v39 = v31;
    }
    if (v39 <= v32) {
      unint64_t v39 = v32;
    }
    size_t v340 = ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11;
    unint64_t v341 = ((v34 + v8) & ~v8) + v11;
    if (v39 <= v341) {
      unint64_t v39 = ((v34 + v8) & ~v8) + v11;
    }
    if (v39 <= ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11) {
      unint64_t v39 = ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11;
    }
    unint64_t v338 = v37;
    unint64_t v339 = ((v12 + ((v12 + ((v9 + ((v4 + 104) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v39 <= v339) {
      unint64_t v39 = ((v12 + ((v12 + ((v9 + ((v4 + 104) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    if (v39 <= v37) {
      unint64_t v39 = v37;
    }
    size_t v336 = v38 + 1;
    unint64_t v337 = ((v12 + ((v12 + ((v9 + ((v4 + 56) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v39 <= v337) {
      unint64_t v39 = ((v12 + ((v12 + ((v9 + ((v4 + 56) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    if (v39 <= v38 + 1) {
      unint64_t v40 = v38 + 1;
    }
    else {
      unint64_t v40 = v39;
    }
    unint64_t v335 = ((v12 + ((v12 + ((v9 + ((v4 + 128) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v40 <= v335) {
      unint64_t v40 = ((v12 + ((v12 + ((v9 + ((v4 + 128) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    size_t v345 = v34;
    size_t v347 = v29;
    if (v40 <= v34) {
      unint64_t v40 = v34;
    }
    if (v40 <= v29) {
      unint64_t v41 = v29;
    }
    else {
      unint64_t v41 = v40;
    }
    unsigned int v42 = v354[v41];
    unsigned int v43 = v42 - 15;
    if (v42 < 0xF)
    {
      uint64_t v45 = a2;
    }
    else
    {
      if (v41 <= 3) {
        uint64_t v44 = v41;
      }
      else {
        uint64_t v44 = 4;
      }
      uint64_t v45 = a2;
      switch(v44)
      {
        case 1:
          int v46 = *v354;
          if (v41 < 4) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 2:
          int v46 = *(unsigned __int16 *)v354;
          if (v41 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          int v46 = *(unsigned __int16 *)v354 | (v354[2] << 16);
          if (v41 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 4:
          int v46 = *(_DWORD *)v354;
          if (v41 < 4) {
LABEL_57:
          }
            v46 |= v43 << (8 * v41);
LABEL_58:
          unsigned int v42 = v46 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v47 = ~v4;
    uint64_t v48 = ~v8;
    uint64_t v49 = ~v348;
    size_t __n = v30;
    uint64_t v312 = ~v21;
    uint64_t v320 = v24;
    uint64_t v321 = ~v28;
    uint64_t v324 = v27;
    uint64_t v325 = v25;
    uint64_t v323 = v28;
    uint64_t v327 = ~v4;
    uint64_t v328 = v4;
    uint64_t v313 = *(unsigned __int8 *)(v314 + 80);
    switch(v42)
    {
      case 1u:
        unsigned int v62 = v354[v24];
        unsigned int v63 = v62 - 3;
        if (v62 < 3)
        {
          uint64_t v65 = v360;
        }
        else
        {
          if (v24 <= 3) {
            uint64_t v64 = v24;
          }
          else {
            uint64_t v64 = 4;
          }
          uint64_t v65 = v360;
          switch(v64)
          {
            case 1:
              int v66 = *v354;
              goto LABEL_138;
            case 2:
              int v66 = *(unsigned __int16 *)v354;
              goto LABEL_138;
            case 3:
              int v66 = *(unsigned __int16 *)v354 | (v354[2] << 16);
              goto LABEL_138;
            case 4:
              int v66 = *(_DWORD *)v354;
LABEL_138:
              if (v24 < 4) {
                unsigned int v62 = (v66 | (v63 << (8 * v24))) + 3;
              }
              else {
                unsigned int v62 = v66 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v62 == 2)
        {
          uint64_t v107 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v65 + 48);
          if (!v107(v354, 1, v357)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v65 + 8))(v354, v357);
          }
          unint64_t v108 = (unint64_t)&v354[v365] & v48;
          if (!v107((unsigned __int8 *)v108, 1, v357)) {
            (*(void (**)(unint64_t, uint64_t))(v360 + 8))(v108, v357);
          }
          (*(void (**)(unint64_t, uint64_t))(v314 + 8))((v108 + v359 + v313) & v312, v315);
          break;
        }
        if (v62 == 1)
        {
          uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v65 + 8);
          uint64_t v106 = v354;
          goto LABEL_133;
        }
        uint64_t v25 = v355;
        uint64_t v103 = v356;
        goto LABEL_150;
      case 2u:
        uint64_t v67 = (unint64_t)&v354[v4 + 224] & v47;
        (*(void (**)(unint64_t, uint64_t))(v356 + 8))((unint64_t)&v354[v22 + 224] & v47, v355);
        uint64_t v68 = (v333 + v8 + v67 + 1) & v48;
        uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 48);
        if (!v69(v68, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v68, v357);
        }
        uint64_t v70 = (v365 + v68) & v48;
        if (!v69(v70, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v70, v357);
        }
        uint64_t v71 = (v365 + v70) & v48;
        if (!v69(v71, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v71, v357);
        }
        size_t v72 = (v353 + v71) & v49;
        long long v73 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v330 + 48);
        if (!v73(v72, 1, v331)) {
          (*(void (**)(size_t, uint64_t))(v330 + 8))(v72, v331);
        }
        size_t v74 = (v322 + v72) & v49;
        if (!v73(v74, 1, v331)) {
          (*(void (**)(size_t, uint64_t))(v330 + 8))(v74, v331);
        }
        size_t v75 = (v74 + v352 + v323) & v321;
        uint64_t v45 = a2;
        if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v324 + 48))(v75, 1, v325)) {
          break;
        }
        uint64_t v77 = v324;
        uint64_t v76 = v325;
        goto LABEL_112;
      case 3u:
        uint64_t v78 = (unint64_t)&v354[v8 + 64] & v48;
        uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 48);
        if (!v79(v78, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v78, v357);
        }
        uint64_t v80 = (v365 + v78) & v48;
        if (!v79(v80, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v80, v357);
        }
        size_t v81 = v80 + v359 + v348;
        goto LABEL_110;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v356 + 8))(v354, v355);
        unint64_t v82 = (unint64_t)&v354[v9];
        uint64_t v83 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v360 + 48);
        uint64_t v84 = v357;
        if (!v83(v82 & v48, 1, v357)) {
          (*(void (**)(unint64_t, uint64_t))(v360 + 8))(v82 & v48, v357);
        }
        size_t v85 = ((v82 | v8) + v359) & v48;
        if (!v83(v85, 1, v357)) {
          (*(void (**)(size_t, uint64_t))(v360 + 8))(v85, v357);
        }
        size_t v86 = v365 + v85;
        goto LABEL_131;
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v356 + 8))(v354, v355);
        unint64_t v50 = (unint64_t)&v354[v9] & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v360 + 48);
        uint64_t v52 = v357;
        if (!v51((unint64_t)&v354[v329] & v48, 1, v357)) {
          (*(void (**)(unint64_t, uint64_t))(v360 + 8))(v50, v357);
        }
        size_t v53 = v326 + ((v359 + v50) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_125;
      case 6u:
        uint64_t v87 = (unint64_t)&v354[v4 + 24] & v47;
        (*(void (**)(unint64_t, uint64_t))(v356 + 8))((unint64_t)&v354[v22 + 24] & v47, v355);
        uint64_t v88 = (v87 + v333 + v8) & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v360 + 48);
        uint64_t v52 = v357;
        unsigned int v89 = v51(v88, 1, v357);
        goto LABEL_122;
      case 8u:
        uint64_t v90 = (uint64_t)&v354[v4 + 104];
        goto LABEL_119;
      case 9u:
        uint64_t v91 = (unint64_t)&v354[v4 + 160] & v47;
        (*(void (**)(unint64_t, uint64_t))(v356 + 8))((unint64_t)&v354[v22 + 160] & v47, v355);
        uint64_t v92 = (v91 + v333 + v8) & v48;
        uint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 48);
        if (!v93(v92, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v92, v357);
        }
        uint64_t v94 = (v365 + v92) & v48;
        if (!v93(v94, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v94, v357);
        }
        size_t v95 = (v365 + v94) & v48;
        if (!v93(v95, 1, v357)) {
          (*(void (**)(size_t, uint64_t))(v360 + 8))(v95, v357);
        }
        size_t v96 = (v365 + v95) & v48;
        if (!v93(v96, 1, v357)) {
          (*(void (**)(size_t, uint64_t))(v360 + 8))(v96, v357);
        }
        size_t v81 = v353 + v96;
LABEL_110:
        size_t v75 = v81 & v49;
        if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v330 + 48))(v81 & v49, 1, v331)) {
          break;
        }
        uint64_t v77 = v330;
        uint64_t v76 = v331;
LABEL_112:
        (*(void (**)(size_t, uint64_t))(v77 + 8))(v75, v76);
        break;
      case 0xAu:
        uint64_t v90 = (uint64_t)&v354[v4 + 56];
        goto LABEL_119;
      case 0xBu:
        uint64_t v97 = (unint64_t)&v354[v4 + 64] & v47;
        (*(void (**)(unint64_t, uint64_t))(v356 + 8))((unint64_t)&v354[v22 + 64] & v47, v355);
        uint64_t v98 = (v97 + v333 + v8) & v48;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 48))(v98, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v98, v357);
        }
        size_t v99 = v317;
        if (!v316) {
          break;
        }
        goto LABEL_153;
      case 0xCu:
        uint64_t v90 = (uint64_t)&v354[v4 + 128];
LABEL_119:
        uint64_t v100 = v90 & v47;
        (*(void (**)(uint64_t, uint64_t))(v356 + 8))(v90 & v47, v355);
        uint64_t v101 = (v100 + v333 + v8) & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v360 + 48);
        uint64_t v52 = v357;
        if (!v51(v101, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v101, v357);
        }
        uint64_t v88 = (v365 + v101) & v48;
        unsigned int v89 = v51(v88, 1, v357);
LABEL_122:
        if (!v89) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v88, v52);
        }
        size_t v53 = v365 + v88;
LABEL_125:
        long long v102 = (unsigned __int8 *)(v53 & v48);
        if (!v51(v53 & v48, 1, v52)) {
          goto LABEL_132;
        }
        break;
      case 0xDu:
        uint64_t v103 = v27;
LABEL_150:
        uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v103 + 8);
        uint64_t v106 = v354;
        goto LABEL_151;
      case 0xEu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v356 + 8))(v354, v355);
        unint64_t v104 = (unint64_t)&v354[v9];
        uint64_t v83 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v360 + 48);
        uint64_t v84 = v357;
        if (!v83(v104 & v48, 1, v357)) {
          (*(void (**)(unint64_t, uint64_t))(v360 + 8))(v104 & v48, v357);
        }
        size_t v86 = (v104 | v8) + v359;
LABEL_131:
        long long v102 = (unsigned __int8 *)(v86 & v48);
        uint64_t v3 = v354;
        if (!v83(v86 & v48, 1, v84))
        {
LABEL_132:
          uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v360 + 8);
          uint64_t v106 = v102;
LABEL_133:
          uint64_t v25 = v357;
LABEL_151:
          v105(v106, v25);
        }
        break;
      default:
        uint64_t v54 = (unint64_t)&v354[v4 + 248] & v47;
        (*(void (**)(unint64_t, uint64_t))(v356 + 8))((unint64_t)&v354[v22 + 248] & v47, v355);
        uint64_t v55 = (v333 + v8 + v54 + 1) & v48;
        uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 48);
        if (!v56(v55, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v55, v357);
        }
        uint64_t v57 = (v365 + v55) & v48;
        if (!v56(v57, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v57, v357);
        }
        uint64_t v58 = (v365 + v57) & v48;
        if (!v56(v58, 1, v357)) {
          (*(void (**)(uint64_t, uint64_t))(v360 + 8))(v58, v357);
        }
        size_t v59 = (v353 + v58) & v49;
        size_t v60 = *(void (**)(size_t, uint64_t))(v330 + 8);
        v60(v59, v331);
        uint64_t v61 = (v349 + v59) & v49;
        uint64_t v45 = a2;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v330 + 48))(v61, 1, v331)) {
          v60(v61, v331);
        }
        break;
    }
    size_t v99 = v359;
LABEL_153:
    size_t v109 = ((v349 + ((v353 + ((v365 + (((v332 | v8) + v99) & v48)) & v48)) & v49)) & v49) + v352;
    if (v334 > v109) {
      size_t v109 = v334;
    }
    if (v344 > v109) {
      size_t v109 = v344;
    }
    if (v343 > v109) {
      size_t v109 = v343;
    }
    if (v341 > v109) {
      size_t v109 = v341;
    }
    if (v342 > v109) {
      size_t v109 = v342;
    }
    if (v340 > v109) {
      size_t v109 = v340;
    }
    if (v342 > v109) {
      size_t v109 = v342;
    }
    if (v339 > v109) {
      size_t v109 = v339;
    }
    if (v338 > v109) {
      size_t v109 = v338;
    }
    if (v337 > v109) {
      size_t v109 = v337;
    }
    if (v336 > v109) {
      size_t v109 = v336;
    }
    if (v335 > v109) {
      size_t v109 = v335;
    }
    if (v347 > v109) {
      size_t v109 = v347;
    }
    if (v345 > v109) {
      size_t v109 = v345;
    }
    unsigned int v110 = v45[v109];
    unsigned int v111 = v110 - 15;
    if (v110 < 0xF)
    {
      uint64_t v113 = v360;
    }
    else
    {
      if (v41 <= 3) {
        uint64_t v112 = v41;
      }
      else {
        uint64_t v112 = 4;
      }
      uint64_t v113 = v360;
      switch(v112)
      {
        case 1:
          int v114 = *v45;
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 2:
          int v114 = *(unsigned __int16 *)v45;
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 3:
          int v114 = *(unsigned __int16 *)v45 | (v45[2] << 16);
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 4:
          int v114 = *(_DWORD *)v45;
          if (v41 < 4) {
LABEL_190:
          }
            unsigned int v110 = (v114 | (v111 << (8 * v41))) + 15;
          else {
LABEL_194:
          }
            unsigned int v110 = v114 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v351 = ~v8;
    switch(v110)
    {
      case 1u:
        uint64_t v135 = v320;
        unsigned int v136 = v45[v320];
        unsigned int v137 = v136 - 3;
        if (v136 < 3)
        {
          uint64_t v139 = v357;
          size_t v140 = v359;
        }
        else
        {
          if (v320 <= 3) {
            uint64_t v138 = v320;
          }
          else {
            uint64_t v138 = 4;
          }
          uint64_t v139 = v357;
          size_t v140 = v359;
          switch(v138)
          {
            case 1:
              int v141 = *v45;
              goto LABEL_366;
            case 2:
              int v141 = *(unsigned __int16 *)v45;
              goto LABEL_366;
            case 3:
              int v141 = *(unsigned __int16 *)v45 | (v45[2] << 16);
              goto LABEL_366;
            case 4:
              int v141 = *(_DWORD *)v45;
LABEL_366:
              if (v320 < 4) {
                unsigned int v136 = (v141 | (v137 << (8 * v320))) + 3;
              }
              else {
                unsigned int v136 = v141 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v136 == 2)
        {
          unint64_t v305 = v41;
          uint64_t v306 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v113 + 48);
          if (v306(v45, 1, v139))
          {
            memcpy(v3, v45, v140);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 16))(v3, v45, v139);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v113 + 56))(v3, 0, 1, v139);
          }
          uint64_t v307 = v48;
          uint64_t v308 = (void *)((unint64_t)&v3[v365] & v48);
          uint64_t v309 = (void *)((unint64_t)&v45[v365] & v307);
          if (v306((unsigned __int8 *)v309, 1, v139))
          {
            memcpy(v308, v309, v140);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v113 + 16))(v308, v309, v139);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v308, 0, 1, v139);
          }
          unint64_t v41 = v305;
          uint64_t v135 = v320;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v314 + 16))(((unint64_t)v308 + v140 + v313) & v312, ((unint64_t)v309 + v140 + v313) & v312, v315);
          char v304 = 2;
        }
        else if (v136 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 16))(v3, v45, v139);
          char v304 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v356 + 16))(v3, v45, v355);
          char v304 = 0;
        }
        v3[v135] = v304;
        char v236 = 1;
        goto LABEL_381;
      case 2u:
        unint64_t v142 = v41;
        long long v143 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v143;
        long long v144 = *((_OWORD *)v45 + 2);
        long long v145 = *((_OWORD *)v45 + 3);
        long long v146 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v146;
        *((_OWORD *)v3 + 2) = v144;
        *((_OWORD *)v3 + 3) = v145;
        long long v147 = *((_OWORD *)v45 + 6);
        long long v148 = *((_OWORD *)v45 + 7);
        long long v149 = *((_OWORD *)v45 + 9);
        *((_OWORD *)v3 + 8) = *((_OWORD *)v45 + 8);
        *((_OWORD *)v3 + 9) = v149;
        *((_OWORD *)v3 + 6) = v147;
        *((_OWORD *)v3 + 7) = v148;
        long long v150 = *((_OWORD *)v45 + 10);
        long long v151 = *((_OWORD *)v45 + 11);
        long long v152 = *((_OWORD *)v45 + 13);
        *((_OWORD *)v3 + 12) = *((_OWORD *)v45 + 12);
        *((_OWORD *)v3 + 13) = v152;
        *((_OWORD *)v3 + 10) = v150;
        *((_OWORD *)v3 + 11) = v151;
        uint64_t v153 = (unint64_t)&v3[v328 + 224] & v327;
        uint64_t v154 = (unint64_t)&v45[v328 + 224] & v327;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 16))(v153, v154, v355);
        *(unsigned char *)(v153 + v333) = *(unsigned char *)(v154 + v333);
        long long v155 = (void *)((v153 + v333 + v8 + 1) & v48);
        uint64_t v156 = (const void *)((v154 + v333 + v8 + 1) & v48);
        uint64_t v157 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v360 + 48);
        if (v157(v156, 1, v357))
        {
          memcpy(v155, v156, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v360 + 16))(v155, v156, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v360 + 56))(v155, 0, 1, v357);
        }
        uint64_t v244 = (void *)(((unint64_t)v155 + v365) & v351);
        unint64_t v245 = (const void *)(((unint64_t)v156 + v365) & v351);
        if (v157(v245, 1, v357))
        {
          memcpy(v244, v245, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v360 + 16))(v244, v245, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v360 + 56))(v244, 0, 1, v357);
        }
        uint64_t v273 = (void *)(((unint64_t)v244 + v365) & v351);
        int v274 = (const void *)(((unint64_t)v245 + v365) & v351);
        if (v157(v274, 1, v357))
        {
          memcpy(v273, v274, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v360 + 16))(v273, v274, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v360 + 56))(v273, 0, 1, v357);
        }
        unint64_t v292 = (void *)(((unint64_t)v273 + v353) & v49);
        size_t v293 = (const void *)(((unint64_t)v274 + v353) & v49);
        uint64_t v294 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v330 + 48);
        if (v294(v293, 1, v331))
        {
          memcpy(v292, v293, v352);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v292, v293, v331);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v330 + 56))(v292, 0, 1, v331);
        }
        uint64_t v3 = v354;
        unint64_t v297 = (void *)(((unint64_t)v292 + v322) & v49);
        uint64_t v298 = (const void *)(((unint64_t)v293 + v322) & v49);
        if (v294(v298, 1, v331))
        {
          size_t v299 = v352;
          memcpy(v297, v298, v352);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v297, v298, v331);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v330 + 56))(v297, 0, 1, v331);
          size_t v299 = v352;
        }
        uint64_t v302 = (void *)(((unint64_t)v297 + v299 + v323) & v321);
        uint64_t v303 = (const void *)(((unint64_t)v298 + v299 + v323) & v321);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v324 + 48))(v303, 1, v325))
        {
          memcpy(v302, v303, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v324 + 16))(v302, v303, v325);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v324 + 56))(v302, 0, 1, v325);
        }
        char v287 = 2;
        goto LABEL_362;
      case 3u:
        unint64_t v361 = v41;
        long long v158 = *(_OWORD *)v45;
        long long v159 = *((_OWORD *)v45 + 1);
        long long v160 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v160;
        *(_OWORD *)uint64_t v3 = v158;
        *((_OWORD *)v3 + 1) = v159;
        size_t v161 = (void *)((unint64_t)&v3[v8 + 64] & v48);
        char v162 = (const void *)((unint64_t)&v45[v8 + 64] & v48);
        long long v163 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v163(v162, 1, v357))
        {
          size_t v164 = v359;
          memcpy(v161, v162, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v161, v162, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v161, 0, 1, v357);
          size_t v164 = v359;
        }
        uint64_t v246 = (void *)(((unint64_t)v161 + v365) & v48);
        uint64_t v247 = (const void *)(((unint64_t)v162 + v365) & v48);
        if (v163(v247, 1, v357))
        {
          memcpy(v246, v247, v164);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v246, v247, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v246, 0, 1, v357);
        }
        size_t v275 = (void *)(((unint64_t)v246 + v164 + v348) & v49);
        unint64_t v276 = (const void *)(((unint64_t)v247 + v164 + v348) & v49);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v330 + 48))(v276, 1, v331))
        {
          memcpy(v275, v276, v352);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v275, v276, v331);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v330 + 56))(v275, 0, 1, v331);
        }
        uint64_t v3 = v354;
        v354[v361] = 3;
        return v3;
      case 4u:
        unint64_t v362 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v356 + 16))(v3, v45, v355);
        unint64_t v165 = (unint64_t)&v3[v329];
        uint64_t v166 = (void *)(v165 & v48);
        unint64_t v167 = (unint64_t)&v45[v329];
        uint64_t v168 = (const void *)((unint64_t)&v45[v329] & ~v8);
        size_t v169 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v169(v168, 1, v357))
        {
          size_t v170 = v359;
          memcpy(v166, v168, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v166, v168, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v166, 0, 1, v357);
          size_t v170 = v359;
        }
        unint64_t v248 = (void *)(((v165 | v8) + v170) & v351);
        size_t v249 = (const void *)(((v167 | v8) + v170) & v351);
        if (v169(v249, 1, v357))
        {
          memcpy(v248, v249, v170);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v248, v249, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v248, 0, 1, v357);
        }
        uint64_t v3 = v354;
        uint64_t v277 = (void *)(((unint64_t)v248 + v365) & v351);
        unint64_t v278 = (const void *)(((unint64_t)v249 + v365) & v351);
        if (v169(v278, 1, v357))
        {
          memcpy(v277, v278, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v277, v278, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v277, 0, 1, v357);
        }
        unint64_t v142 = v362;
        char v287 = 4;
        goto LABEL_362;
      case 5u:
        unint64_t v171 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v356 + 16))(v3, v45, v355);
        unint64_t v172 = (void *)((unint64_t)&v3[v329] & v48);
        unint64_t v173 = (const void *)((unint64_t)&v45[v329] & ~v8);
        uint64_t v174 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v174(v173, 1, v357))
        {
          size_t v175 = v359;
          memcpy(v172, v173, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v172, v173, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v172, 0, 1, v357);
          size_t v175 = v359;
        }
        *((unsigned char *)v172 + v175) = *((unsigned char *)v173 + v175);
        unint64_t v250 = ((unint64_t)v172 + v175) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v251 = ((unint64_t)v173 + v175) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v250 + 8) = *(_OWORD *)(v251 + 8);
        unint64_t v252 = (void *)((v326 + v250) & v351);
        size_t v253 = (const void *)((v326 + v251) & v351);
        if (v174(v253, 1, v357))
        {
          memcpy(v252, v253, v175);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v252, v253, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v252, 0, 1, v357);
        }
        v3[v171] = 5;
        return v3;
      case 6u:
        unint64_t v176 = v41;
        long long v177 = *(_OWORD *)v45;
        *((void *)v3 + 2) = *((void *)v45 + 2);
        *(_OWORD *)uint64_t v3 = v177;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 16))((unint64_t)&v3[v328 + 24] & v327, (unint64_t)&v45[v328 + 24] & v327, v355);
        size_t v178 = (void *)((((unint64_t)&v3[v328 + 24] & v327) + v333 + v8) & ~v8);
        size_t v179 = (const void *)((((unint64_t)&v45[v328 + 24] & v327) + v333 + v8) & ~v8);
        unint64_t v180 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v180(v179, 1, v357))
        {
          size_t v181 = v359;
          memcpy(v178, v179, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v178, v179, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v178, 0, 1, v357);
          size_t v181 = v359;
        }
        uint64_t v254 = (void *)(((unint64_t)v178 + v365) & v351);
        uint64_t v255 = (const void *)(((unint64_t)v179 + v365) & v351);
        if (v180(v255, 1, v357))
        {
          memcpy(v254, v255, v181);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v254, v255, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v254, 0, 1, v357);
        }
        v3[v176] = 6;
        return v3;
      case 7u:
        unint64_t v182 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v356 + 16))(v3, v45, v355);
        uint64_t v183 = (void *)((unint64_t)&v3[v329] & v48);
        uint64_t v184 = (const void *)((unint64_t)&v45[v329] & ~v8);
        uint64_t v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v185(v184, 1, v357))
        {
          size_t v186 = v359;
          memcpy(v183, v184, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v183, v184, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v183, 0, 1, v357);
          size_t v186 = v359;
        }
        *((unsigned char *)v183 + v186) = *((unsigned char *)v184 + v186);
        unint64_t v256 = ((unint64_t)v183 + v186) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v257 = ((unint64_t)v184 + v186) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v256 + 8) = *(_OWORD *)(v257 + 8);
        uint64_t v258 = (void *)((v326 + v256) & v351);
        unint64_t v259 = (const void *)((v326 + v257) & v351);
        if (v185(v259, 1, v357))
        {
          memcpy(v258, v259, v186);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v258, v259, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v258, 0, 1, v357);
        }
        v3[v182] = 7;
        return v3;
      case 8u:
        unint64_t v187 = v41;
        long long v188 = *(_OWORD *)v45;
        long long v189 = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 1) = *((_OWORD *)v45 + 1);
        *((_OWORD *)v3 + 2) = v189;
        *(_OWORD *)uint64_t v3 = v188;
        long long v190 = *((_OWORD *)v45 + 3);
        long long v191 = *((_OWORD *)v45 + 4);
        long long v192 = *((_OWORD *)v45 + 5);
        *((void *)v3 + 12) = *((void *)v45 + 12);
        *((_OWORD *)v3 + 4) = v191;
        *((_OWORD *)v3 + 5) = v192;
        *((_OWORD *)v3 + 3) = v190;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 16))((unint64_t)&v3[v328 + 104] & v327, (unint64_t)&v45[v328 + 104] & v327, v355);
        uint64_t v193 = (void *)((((unint64_t)&v3[v328 + 104] & v327) + v333 + v8) & ~v8);
        uint64_t v194 = (const void *)((((unint64_t)&v45[v328 + 104] & v327) + v333 + v8) & ~v8);
        uint64_t v195 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v195(v194, 1, v357))
        {
          size_t v196 = v359;
          memcpy(v193, v194, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v193, v194, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v193, 0, 1, v357);
          size_t v196 = v359;
        }
        uint64_t v260 = (void *)(((unint64_t)v193 + v365) & v351);
        size_t v261 = (const void *)(((unint64_t)v194 + v365) & v351);
        if (v195(v261, 1, v357))
        {
          memcpy(v260, v261, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v260, v261, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v260, 0, 1, v357);
        }
        uint64_t v279 = (void *)(((unint64_t)v260 + v365) & v351);
        int v280 = (const void *)(((unint64_t)v261 + v365) & v351);
        if (v195(v280, 1, v357))
        {
          memcpy(v279, v280, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v279, v280, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v279, 0, 1, v357);
        }
        v3[v187] = 8;
        return v3;
      case 9u:
        uint64_t v319 = ~v348;
        unint64_t v197 = v41;
        long long v198 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v198;
        long long v199 = *((_OWORD *)v45 + 2);
        long long v200 = *((_OWORD *)v45 + 3);
        long long v201 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v201;
        *((_OWORD *)v3 + 2) = v199;
        *((_OWORD *)v3 + 3) = v200;
        long long v202 = *((_OWORD *)v45 + 6);
        long long v203 = *((_OWORD *)v45 + 7);
        long long v204 = *((_OWORD *)v45 + 9);
        *((_OWORD *)v3 + 8) = *((_OWORD *)v45 + 8);
        *((_OWORD *)v3 + 9) = v204;
        *((_OWORD *)v3 + 6) = v202;
        *((_OWORD *)v3 + 7) = v203;
        uint64_t v205 = (unint64_t)&v3[v328 + 160] & v327;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v356 + 16))(v205, (unint64_t)&v45[v328 + 160] & v327, v355);
        uint64_t v206 = (void *)((v205 + v333 + v8) & ~v8);
        unint64_t v207 = (const void *)((((unint64_t)&v45[v328 + 160] & v327) + v333 + v8) & ~v8);
        uint64_t v208 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v208(v207, 1, v357))
        {
          size_t v209 = v359;
          memcpy(v206, v207, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v206, v207, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v206, 0, 1, v357);
          size_t v209 = v359;
        }
        size_t v262 = (void *)(((unint64_t)v206 + v365) & v351);
        uint64_t v263 = (const void *)(((unint64_t)v207 + v365) & v351);
        if (v208(v263, 1, v357))
        {
          memcpy(v262, v263, v209);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v262, v263, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v262, 0, 1, v357);
        }
        unint64_t v281 = (void *)(((unint64_t)v262 + v365) & v351);
        uint64_t v282 = (const void *)(((unint64_t)v263 + v365) & v351);
        if (v208(v282, 1, v357))
        {
          memcpy(v281, v282, v209);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v281, v282, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v281, 0, 1, v357);
        }
        size_t v295 = (void *)(((unint64_t)v281 + v365) & v351);
        uint64_t v296 = (const void *)(((unint64_t)v282 + v365) & v351);
        if (v208(v296, 1, v357))
        {
          memcpy(v295, v296, v209);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v295, v296, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v295, 0, 1, v357);
        }
        uint64_t v300 = (void *)(((unint64_t)v295 + v353) & v319);
        uint64_t v301 = (const void *)(((unint64_t)v296 + v353) & v319);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v330 + 48))(v301, 1, v331))
        {
          memcpy(v300, v301, v352);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v300, v301, v331);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v330 + 56))(v300, 0, 1, v331);
        }
        uint64_t v3 = v354;
        v354[v197] = 9;
        return v3;
      case 0xAu:
        unint64_t v210 = v41;
        long long v211 = *(_OWORD *)v45;
        long long v212 = *((_OWORD *)v45 + 1);
        long long v213 = *((_OWORD *)v45 + 2);
        *((void *)v3 + 6) = *((void *)v45 + 6);
        *((_OWORD *)v3 + 1) = v212;
        *((_OWORD *)v3 + 2) = v213;
        *(_OWORD *)uint64_t v3 = v211;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 16))((unint64_t)&v3[v328 + 56] & v327, (unint64_t)&v45[v328 + 56] & v327, v355);
        unint64_t v214 = (void *)((((unint64_t)&v3[v328 + 56] & v327) + v333 + v8) & ~v8);
        unint64_t v215 = (const void *)((((unint64_t)&v45[v328 + 56] & v327) + v333 + v8) & ~v8);
        unint64_t v216 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v216(v215, 1, v357))
        {
          size_t v217 = v359;
          memcpy(v214, v215, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v214, v215, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v214, 0, 1, v357);
          size_t v217 = v359;
        }
        uint64_t v264 = (void *)(((unint64_t)v214 + v365) & v351);
        uint64_t v265 = (const void *)(((unint64_t)v215 + v365) & v351);
        if (v216(v265, 1, v357))
        {
          memcpy(v264, v265, v217);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v264, v265, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v264, 0, 1, v357);
        }
        uint64_t v283 = (void *)(((unint64_t)v264 + v365) & v351);
        uint64_t v284 = (const void *)(((unint64_t)v265 + v365) & v351);
        if (v216(v284, 1, v357))
        {
          memcpy(v283, v284, v217);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v283, v284, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v283, 0, 1, v357);
        }
        v3[v210] = 10;
        return v3;
      case 0xBu:
        long long v218 = *(_OWORD *)v45;
        long long v219 = *((_OWORD *)v45 + 1);
        long long v220 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v220;
        *(_OWORD *)uint64_t v3 = v218;
        *((_OWORD *)v3 + 1) = v219;
        uint64_t v221 = (unint64_t)&v3[v328 + 64] & v327;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v356 + 16))(v221, (unint64_t)&v45[v328 + 64] & v327, v355);
        uint64_t v222 = (void *)((v221 + v333 + v8) & v48);
        uint64_t v223 = (const void *)((((unint64_t)&v45[v328 + 64] & v327) + v333 + v8) & v48);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48))(v223, 1, v357))
        {
          size_t v224 = v359;
          memcpy(v222, v223, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v222, v223, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v222, 0, 1, v357);
          size_t v224 = v359;
        }
        *((unsigned char *)v222 + v224) = *((unsigned char *)v223 + v224);
        size_t v266 = ((v349 + ((v353 + ((v365 + (((v332 | v8) + v224) & v48)) & v48)) & ~v348)) & ~v348) + v352;
        if (v334 > v266) {
          size_t v266 = v334;
        }
        if (v344 > v266) {
          size_t v266 = v344;
        }
        if (v343 > v266) {
          size_t v266 = v343;
        }
        if (v341 > v266) {
          size_t v266 = v341;
        }
        if (v342 > v266) {
          size_t v266 = v342;
        }
        if (v340 > v266) {
          size_t v266 = v340;
        }
        if (v342 > v266) {
          size_t v266 = v342;
        }
        if (v339 > v266) {
          size_t v266 = v339;
        }
        if (v338 > v266) {
          size_t v266 = v338;
        }
        if (v337 > v266) {
          size_t v266 = v337;
        }
        if (v336 > v266) {
          size_t v266 = v336;
        }
        if (v335 > v266) {
          size_t v266 = v335;
        }
        if (v347 > v266) {
          size_t v266 = v347;
        }
        if (v345 > v266) {
          size_t v266 = v345;
        }
        uint64_t v3 = v354;
        v354[v266] = 11;
        return v3;
      case 0xCu:
        unint64_t v225 = v41;
        long long v226 = *(_OWORD *)v45;
        long long v227 = *((_OWORD *)v45 + 1);
        long long v228 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v228;
        *(_OWORD *)uint64_t v3 = v226;
        *((_OWORD *)v3 + 1) = v227;
        long long v229 = *((_OWORD *)v45 + 4);
        long long v230 = *((_OWORD *)v45 + 5);
        long long v231 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v231;
        *((_OWORD *)v3 + 4) = v229;
        *((_OWORD *)v3 + 5) = v230;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 16))((unint64_t)&v3[v328 + 128] & v327, (unint64_t)&v45[v328 + 128] & v327, v355);
        unint64_t v232 = (void *)((((unint64_t)&v3[v328 + 128] & v327) + v333 + v8) & ~v8);
        uint64_t v233 = (const void *)((((unint64_t)&v45[v328 + 128] & v327) + v333 + v8) & ~v8);
        uint64_t v234 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v234(v233, 1, v357))
        {
          size_t v235 = v359;
          memcpy(v232, v233, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v232, v233, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v232, 0, 1, v357);
          size_t v235 = v359;
        }
        size_t v267 = (void *)(((unint64_t)v232 + v365) & v351);
        uint64_t v268 = (const void *)(((unint64_t)v233 + v365) & v351);
        if (v234(v268, 1, v357))
        {
          memcpy(v267, v268, v235);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v267, v268, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v267, 0, 1, v357);
        }
        uint64_t v285 = (void *)(((unint64_t)v267 + v365) & v351);
        unint64_t v286 = (const void *)(((unint64_t)v268 + v365) & v351);
        if (v234(v286, 1, v357))
        {
          memcpy(v285, v286, v235);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v285, v286, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v285, 0, 1, v357);
        }
        v3[v225] = 12;
        return v3;
      case 0xDu:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v324 + 16))(v3, v45, v325);
        char v236 = 13;
LABEL_381:
        v3[v41] = v236;
        return v3;
      case 0xEu:
        unint64_t v363 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v356 + 16))(v3, v45, v355);
        unint64_t v237 = (unint64_t)&v3[v329];
        size_t v238 = (void *)(v237 & v48);
        unint64_t v239 = (const void *)((unint64_t)&v45[v329] & ~v8);
        size_t v240 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v240(v239, 1, v357))
        {
          size_t v241 = v359;
          memcpy(v238, v239, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v238, v239, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v238, 0, 1, v357);
          size_t v241 = v359;
        }
        uint64_t v269 = (void *)(((v237 | v8) + v241) & v351);
        size_t v270 = (const void *)((((unint64_t)&v45[v329] | v8) + v241) & v351);
        if (v240(v270, 1, v357))
        {
          memcpy(v269, v270, v241);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v269, v270, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v269, 0, 1, v357);
        }
        uint64_t v3 = v354;
        unint64_t v142 = v363;
        char v287 = 14;
LABEL_362:
        v3[v142] = v287;
        break;
      default:
        uint64_t v318 = ~v348;
        uint64_t v115 = v113;
        unint64_t v116 = v41;
        long long v117 = *(_OWORD *)v45;
        long long v118 = *((_OWORD *)v45 + 1);
        long long v119 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v119;
        *(_OWORD *)uint64_t v3 = v117;
        *((_OWORD *)v3 + 1) = v118;
        long long v120 = *((_OWORD *)v45 + 4);
        long long v121 = *((_OWORD *)v45 + 5);
        long long v122 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v122;
        *((_OWORD *)v3 + 4) = v120;
        *((_OWORD *)v3 + 5) = v121;
        long long v123 = *((_OWORD *)v45 + 8);
        long long v124 = *((_OWORD *)v45 + 9);
        long long v125 = *((_OWORD *)v45 + 11);
        *((_OWORD *)v3 + 10) = *((_OWORD *)v45 + 10);
        *((_OWORD *)v3 + 11) = v125;
        *((_OWORD *)v3 + 8) = v123;
        *((_OWORD *)v3 + 9) = v124;
        long long v126 = *((_OWORD *)v45 + 12);
        long long v127 = *((_OWORD *)v45 + 13);
        long long v128 = *((_OWORD *)v45 + 14);
        *((void *)v3 + 30) = *((void *)v45 + 30);
        *((_OWORD *)v3 + 13) = v127;
        *((_OWORD *)v3 + 14) = v128;
        *((_OWORD *)v3 + 12) = v126;
        uint64_t v129 = (unint64_t)&v3[v328 + 248] & v327;
        uint64_t v130 = (unint64_t)&v45[v328 + 248] & v327;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 16))(v129, v130, v355);
        *(unsigned char *)(v129 + v333) = *(unsigned char *)(v130 + v333);
        uint64_t v131 = (void *)((v129 + v333 + v8 + 1) & v48);
        unint64_t v132 = (const void *)((v130 + v333 + v8 + 1) & v48);
        size_t v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48);
        if (v133(v132, 1, v357))
        {
          size_t v134 = v359;
          memcpy(v131, v132, v359);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v131, v132, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v131, 0, 1, v357);
          size_t v134 = v359;
        }
        size_t v242 = (void *)(((unint64_t)v131 + v365) & v351);
        size_t v243 = (const void *)(((unint64_t)v132 + v365) & v351);
        if (v133(v243, 1, v357))
        {
          memcpy(v242, v243, v134);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v360 + 16))(v242, v243, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v360 + 56))(v242, 0, 1, v357);
        }
        uint64_t v271 = (void *)(((unint64_t)v242 + v365) & v351);
        uint64_t v272 = (const void *)(((unint64_t)v243 + v365) & v351);
        if (v133(v272, 1, v357))
        {
          memcpy(v271, v272, v134);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v360 + 16))(v271, v272, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v360 + 56))(v271, 0, 1, v357);
        }
        unint64_t v288 = ((unint64_t)v271 + v353) & v318;
        unint64_t v289 = *(void (**)(unint64_t, unint64_t, uint64_t))(v330 + 16);
        v289(v288, ((unint64_t)v272 + v353) & v318, v331);
        unint64_t v290 = (void *)((v349 + v288) & v318);
        unint64_t v291 = (const void *)((v349 + (((unint64_t)v272 + v353) & v318)) & v318);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v330 + 48))(v291, 1, v331))
        {
          memcpy(v290, v291, v352);
        }
        else
        {
          v289((unint64_t)v290, (unint64_t)v291, v331);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v330 + 56))(v290, 0, 1, v331);
        }
        uint64_t v3 = v354;
        v354[v116] = 0;
        break;
    }
  }
  return v3;
}

void *sub_24ECFC250(_OWORD *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v263 = a3[3];
  uint64_t v264 = *(void *)(v263 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v264 + 80);
  size_t v5 = *(void *)(v264 + 64);
  uint64_t v265 = sub_24EE55880();
  uint64_t v6 = *(void *)(v265 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  size_t v8 = v5 + v7;
  uint64_t v269 = v5 + v7 + 1;
  uint64_t v247 = v269 + ((v4 + 248) & ~v4);
  uint64_t v272 = v6;
  size_t v9 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  size_t v11 = v10 + v7;
  uint64_t v260 = a3[2];
  uint64_t v12 = *(void *)(v260 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  size_t v14 = v10 + v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v250 = v15 + v13;
  uint64_t v258 = v12;
  if (*(_DWORD *)(v12 + 84)) {
    size_t v16 = *(void *)(*(void *)(v260 - 8) + 64);
  }
  else {
    size_t v16 = v15 + 1;
  }
  unint64_t v276 = ((v15 + v13 + ((v10 + v13 + ((v10 + v7 + ((v10 + v7 + (v247 & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13) + v16;
  size_t v262 = v5;
  if (v9 > v5) {
    size_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v18 = sub_24EE55960();
  uint64_t v19 = v13;
  uint64_t v236 = *(void *)(v18 - 8);
  uint64_t v237 = v18;
  uint64_t v20 = *(unsigned __int8 *)(v236 + 80);
  uint64_t v21 = *(void *)(v236 + 64);
  size_t v17 = v11 & ~v7;
  if (((v10 + v20 + v17) & ~v20) + v21 <= v5) {
    size_t v22 = v5;
  }
  else {
    size_t v22 = ((v10 + v20 + v17) & ~v20) + v21;
  }
  size_t v249 = v16 + v13;
  uint64_t v23 = a3[4];
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v27 = *(void *)(v24 + 64);
  if (*(_DWORD *)(v24 + 84)) {
    size_t v28 = *(void *)(v24 + 64);
  }
  else {
    size_t v28 = v27 + 1;
  }
  unint64_t v29 = v28
      + ((v16
        + v26
        + ((v16 + v13 + ((v14 + ((v11 + ((v11 + ((v269 + ((v4 + 224) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13)) & ~v26);
  unint64_t v30 = v16 + ((v14 + ((v11 + ((v7 + 64) & ~v7)) & ~v7)) & ~v13);
  size_t v31 = (v8 & ~v7) + v10;
  size_t v32 = ((v31 + v7) & ~v7) + v10;
  unint64_t v33 = ((v7 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v10;
  size_t v257 = v14;
  size_t __n = v16;
  unint64_t v34 = ((v14 + ((v11 + ((v11 + ((v11 + ((v8 + ((v4 + 160) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v19) + v16;
  unint64_t v35 = ((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  size_t v36 = ((v8 + ((v4 + 64) & ~v4)) & ~v7) + v10;
  size_t v253 = v8;
  size_t v267 = v10 + v7;
  size_t v270 = v10;
  size_t v37 = ((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  unint64_t v38 = v276;
  size_t v243 = ((v32 + v7) & ~v7) + v10;
  unint64_t v245 = v33;
  if (v33 > v276) {
    unint64_t v38 = v33;
  }
  if (v38 <= v22 + 1) {
    unint64_t v38 = v22 + 1;
  }
  if (v38 <= v29) {
    unint64_t v38 = v29;
  }
  if (v38 <= v30) {
    unint64_t v38 = v30;
  }
  if (v38 <= ((v32 + v7) & ~v7) + v10) {
    unint64_t v38 = ((v32 + v7) & ~v7) + v10;
  }
  size_t v240 = ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  size_t v241 = ((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10;
  if (v38 <= v241) {
    unint64_t v38 = ((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10;
  }
  if (v38 <= ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10) {
    unint64_t v38 = ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  size_t v238 = v36 + 1;
  unint64_t v239 = v34;
  if (v38 <= v34) {
    unint64_t v38 = v34;
  }
  if (v38 <= v35) {
    unint64_t v38 = ((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (v38 <= v36 + 1) {
    unint64_t v39 = v36 + 1;
  }
  else {
    unint64_t v39 = v38;
  }
  if (v39 <= v37) {
    unint64_t v39 = ((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (v39 <= v32) {
    unint64_t v39 = v32;
  }
  if (v39 <= v27) {
    unint64_t v40 = v27;
  }
  else {
    unint64_t v40 = v39;
  }
  unsigned int v41 = a2[v40];
  unsigned int v42 = v41 - 15;
  if (v41 >= 0xF)
  {
    if (v40 <= 3) {
      uint64_t v43 = v40;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v40 < 4) {
          goto LABEL_51;
        }
        goto LABEL_55;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v40 < 4) {
LABEL_51:
        }
          unsigned int v41 = (v44 | (v42 << (8 * v40))) + 15;
        else {
LABEL_55:
        }
          unsigned int v41 = v44 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = ~v4;
  uint64_t v277 = ~v7;
  uint64_t v46 = ~v19;
  switch(v41)
  {
    case 1u:
      unsigned int v61 = a2[v22];
      unsigned int v62 = v61 - 3;
      if (v61 < 3)
      {
        uint64_t v64 = v272;
        uint64_t v65 = a1;
        uint64_t v67 = v265;
        size_t v66 = v267;
      }
      else
      {
        if (v22 <= 3) {
          uint64_t v63 = v22;
        }
        else {
          uint64_t v63 = 4;
        }
        uint64_t v64 = v272;
        uint64_t v65 = a1;
        uint64_t v67 = v265;
        size_t v66 = v267;
        switch(v63)
        {
          case 1:
            int v68 = *a2;
            goto LABEL_229;
          case 2:
            int v68 = *(unsigned __int16 *)a2;
            goto LABEL_229;
          case 3:
            int v68 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_229;
          case 4:
            int v68 = *(_DWORD *)a2;
LABEL_229:
            if (v22 < 4) {
              unsigned int v61 = (v68 | (v62 << (8 * v22))) + 3;
            }
            else {
              unsigned int v61 = v68 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v61 == 2)
      {
        uint64_t v268 = ~v20;
        uint64_t v273 = *(unsigned __int8 *)(v236 + 80);
        size_t v275 = v22;
        long long v231 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v64 + 48);
        unint64_t v232 = v40;
        if (v231(a2, 1, v67))
        {
          memcpy(v65, a2, v270);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v64 + 32))(v65, a2, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v67);
        }
        uint64_t v233 = (void *)(((unint64_t)v65 + v66) & v277);
        uint64_t v234 = (void *)((unint64_t)&a2[v66] & v277);
        if (v231((unsigned __int8 *)v234, 1, v67))
        {
          size_t v235 = v270;
          memcpy(v233, v234, v270);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v64 + 32))(v233, v234, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v233, 0, 1, v67);
          size_t v235 = v270;
        }
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v236 + 32))(((unint64_t)v233 + v235 + v273) & v268, ((unint64_t)v234 + v235 + v273) & v268, v237);
        char v230 = 2;
        unint64_t v40 = v232;
        size_t v229 = v275;
      }
      else
      {
        size_t v229 = v22;
        if (v61 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v64 + 32))(v65, a2, v67);
          char v230 = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v264 + 32))(v65, a2, v263);
          char v230 = 0;
        }
      }
      *((unsigned char *)v65 + v229) = v230;
      char v162 = 1;
      goto LABEL_199;
    case 2u:
      uint64_t v244 = ~v26;
      uint64_t v246 = v26;
      size_t v242 = v28;
      uint64_t v251 = v25;
      uint64_t v254 = v23;
      uint64_t v69 = ~v19;
      unint64_t v248 = v40;
      long long v70 = *((_OWORD *)a2 + 11);
      uint64_t v65 = a1;
      a1[10] = *((_OWORD *)a2 + 10);
      a1[11] = v70;
      long long v71 = *((_OWORD *)a2 + 13);
      a1[12] = *((_OWORD *)a2 + 12);
      a1[13] = v71;
      long long v72 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v72;
      long long v73 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v73;
      long long v74 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v74;
      long long v75 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v75;
      long long v76 = *((_OWORD *)a2 + 1);
      uint64_t v77 = ((unint64_t)a1 + v4 + 224) & v45;
      *a1 = *(_OWORD *)a2;
      a1[1] = v76;
      uint64_t v78 = (unint64_t)&a2[v4 + 224] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v77, v78, v263);
      *(unsigned char *)(v77 + v262) = *(unsigned char *)(v78 + v262);
      uint64_t v79 = (void *)((v77 + v262 + v7 + 1) & v277);
      uint64_t v80 = (const void *)((v78 + v262 + v7 + 1) & v277);
      size_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v81(v80, 1, v265))
      {
        size_t v82 = v270;
        memcpy(v79, v80, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v79, v80, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v79, 0, 1, v265);
        size_t v82 = v270;
      }
      unint64_t v165 = (void *)(((unint64_t)v79 + v267) & v277);
      uint64_t v166 = (const void *)(((unint64_t)v80 + v267) & v277);
      if (v81(v166, 1, v265))
      {
        memcpy(v165, v166, v82);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v165, v166, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v165, 0, 1, v265);
      }
      uint64_t v185 = (void *)(((unint64_t)v165 + v267) & v277);
      size_t v186 = (const void *)(((unint64_t)v166 + v267) & v277);
      if (v81(v186, 1, v265))
      {
        memcpy(v185, v186, v82);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v185, v186, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v185, 0, 1, v265);
      }
      long long v201 = (void *)(((unint64_t)v185 + v257) & v69);
      long long v202 = (const void *)(((unint64_t)v186 + v257) & v69);
      long long v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48);
      if (v203(v202, 1, v260))
      {
        size_t v204 = v16;
        memcpy(v201, v202, v16);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 32))(v201, v202, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v201, 0, 1, v260);
        size_t v204 = v16;
      }
      uint64_t v208 = (void *)(((unint64_t)v201 + v249) & v69);
      size_t v209 = (const void *)(((unint64_t)v202 + v249) & v69);
      if (v203(v209, 1, v260))
      {
        memcpy(v208, v209, v204);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 32))(v208, v209, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v208, 0, 1, v260);
      }
      long long v212 = (void *)(((unint64_t)v208 + v204 + v246) & v244);
      long long v213 = (const void *)(((unint64_t)v209 + v204 + v246) & v244);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v251 + 48))(v213, 1, v254))
      {
        memcpy(v212, v213, v242);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v251 + 32))(v212, v213, v254);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v251 + 56))(v212, 0, 1, v254);
      }
      char v162 = 2;
      goto LABEL_198;
    case 3u:
      uint64_t v83 = v19;
      unint64_t v248 = v40;
      long long v84 = *((_OWORD *)a2 + 1);
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      a1[1] = v84;
      long long v85 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v85;
      size_t v86 = (void *)(((unint64_t)a1 + v7 + 64) & v277);
      uint64_t v87 = (const void *)((unint64_t)&a2[v7 + 64] & v277);
      uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v88(v87, 1, v265))
      {
        memcpy(v86, v87, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v86, v87, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v86, 0, 1, v265);
      }
      unint64_t v167 = (void *)(((unint64_t)v86 + v267) & v277);
      uint64_t v168 = (char *)(((unint64_t)v87 + v267) & v277);
      if (v88(v168, 1, v265))
      {
        size_t v169 = v270;
        memcpy(v167, v168, v270);
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v272 + 32))(v167, v168, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v167, 0, 1, v265);
        size_t v169 = v270;
      }
      unint64_t v187 = &v168[v169];
      long long v188 = (void *)(((unint64_t)v167 + v169 + v83) & v46);
      long long v189 = (const void *)((unint64_t)&v187[v83] & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v189, 1, v260))
      {
        memcpy(v188, v189, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 32))(v188, v189, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v188, 0, 1, v260);
      }
      char v162 = 3;
      goto LABEL_198;
    case 4u:
      unint64_t v248 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 32))(a1, a2, v263);
      unsigned int v89 = (void *)(((unint64_t)a1 + v253) & v277);
      uint64_t v90 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v91 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v91(v90, 1, v265))
      {
        size_t v92 = v10;
        memcpy(v89, v90, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v89, v90, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v89, 0, 1, v265);
        size_t v92 = v10;
      }
      size_t v170 = (void *)(((((unint64_t)a1 + v253) | v7) + v92) & v277);
      unint64_t v171 = (const void *)((((unint64_t)&a2[v253] | v7) + v92) & v277);
      if (v91(v171, 1, v265))
      {
        memcpy(v170, v171, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v170, v171, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v170, 0, 1, v265);
      }
      long long v190 = (void *)(((unint64_t)v170 + v267) & v277);
      long long v191 = (const void *)(((unint64_t)v171 + v267) & v277);
      if (v91(v191, 1, v265))
      {
        memcpy(v190, v191, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v190, v191, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v190, 0, 1, v265);
      }
      char v162 = 4;
      goto LABEL_198;
    case 5u:
      uint64_t v131 = v7 + 24;
      unint64_t v132 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 32))(a1, a2, v263);
      size_t v133 = (void *)(((unint64_t)a1 + v253) & v277);
      size_t v134 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v135 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v135(v134, 1, v265))
      {
        size_t v136 = v10;
        memcpy(v133, v134, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v133, v134, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v133, 0, 1, v265);
        size_t v136 = v10;
      }
      *((unsigned char *)v133 + v136) = *((unsigned char *)v134 + v136);
      unint64_t v215 = ((unint64_t)v133 + v136) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v216 = ((unint64_t)v134 + v136) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v215 + 8) = *(_OWORD *)(v216 + 8);
      size_t v217 = (void *)((v131 + v215) & v277);
      long long v218 = (const void *)((v131 + v216) & v277);
      if (v135(v218, 1, v265))
      {
        memcpy(v217, v218, v136);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v217, v218, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v217, 0, 1, v265);
      }
      char v162 = 5;
      unint64_t v40 = v132;
      goto LABEL_199;
    case 6u:
      unint64_t v137 = v40;
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v138 = ((unint64_t)a1 + v4 + 24) & v45;
      uint64_t v139 = (unint64_t)&a2[v4 + 24] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v138, v139, v263);
      size_t v140 = (void *)((v138 + v262 + v7) & v277);
      int v141 = (const void *)((v139 + v262 + v7) & v277);
      unint64_t v142 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v142(v141, 1, v265))
      {
        size_t v143 = v10;
        memcpy(v140, v141, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v140, v141, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v140, 0, 1, v265);
        size_t v143 = v10;
      }
      long long v219 = (void *)(((unint64_t)v140 + v267) & v277);
      long long v220 = (const void *)(((unint64_t)v141 + v267) & v277);
      if (v142(v220, 1, v265))
      {
        memcpy(v219, v220, v143);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v219, v220, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v219, 0, 1, v265);
      }
      char v162 = 6;
      unint64_t v40 = v137;
      goto LABEL_199;
    case 7u:
      uint64_t v93 = v7 + 24;
      unint64_t v94 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 32))(a1, a2, v263);
      size_t v95 = (void *)(((unint64_t)a1 + v253) & v277);
      size_t v96 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v97 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v97(v96, 1, v265))
      {
        size_t v98 = v10;
        memcpy(v95, v96, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v95, v96, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v95, 0, 1, v265);
        size_t v98 = v10;
      }
      *((unsigned char *)v95 + v98) = *((unsigned char *)v96 + v98);
      unint64_t v172 = ((unint64_t)v95 + v98) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v173 = ((unint64_t)v96 + v98) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v172 + 8) = *(_OWORD *)(v173 + 8);
      uint64_t v174 = (void *)((v93 + v172) & v277);
      size_t v175 = (const void *)((v93 + v173) & v277);
      if (v97(v175, 1, v265))
      {
        memcpy(v174, v175, v98);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v174, v175, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v174, 0, 1, v265);
      }
      char v162 = 7;
      unint64_t v40 = v94;
      goto LABEL_199;
    case 8u:
      unint64_t v144 = v40;
      long long v145 = *((_OWORD *)a2 + 5);
      uint64_t v65 = a1;
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v145;
      *((void *)a1 + 12) = *((void *)a2 + 12);
      long long v146 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v146;
      long long v147 = *((_OWORD *)a2 + 3);
      uint64_t v148 = ((unint64_t)a1 + v4 + 104) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v147;
      uint64_t v149 = (unint64_t)&a2[v4 + 104] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v148, v149, v263);
      long long v150 = (void *)((v148 + v262 + v7) & v277);
      long long v151 = (const void *)((v149 + v262 + v7) & v277);
      long long v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v152(v151, 1, v265))
      {
        size_t v153 = v10;
        memcpy(v150, v151, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v150, v151, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v150, 0, 1, v265);
        size_t v153 = v10;
      }
      uint64_t v221 = (void *)(((unint64_t)v150 + v267) & v277);
      uint64_t v222 = (const void *)(((unint64_t)v151 + v267) & v277);
      if (v152(v222, 1, v265))
      {
        memcpy(v221, v222, v153);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v221, v222, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v221, 0, 1, v265);
      }
      unint64_t v225 = (void *)(((unint64_t)v221 + v267) & v277);
      long long v226 = (const void *)(((unint64_t)v222 + v267) & v277);
      if (v152(v226, 1, v265))
      {
        memcpy(v225, v226, v153);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v225, v226, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v225, 0, 1, v265);
      }
      char v162 = 8;
      unint64_t v40 = v144;
      goto LABEL_199;
    case 9u:
      uint64_t v255 = ~v19;
      long long v99 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v99;
      long long v100 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v100;
      long long v101 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v101;
      long long v102 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v102;
      long long v103 = *((_OWORD *)a2 + 1);
      uint64_t v104 = ((unint64_t)a1 + v4 + 160) & v45;
      *a1 = *(_OWORD *)a2;
      a1[1] = v103;
      uint64_t v105 = (unint64_t)&a2[v4 + 160] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v104, v105, v263);
      uint64_t v106 = (void *)((v104 + v262 + v7) & v277);
      uint64_t v107 = (const void *)((v105 + v262 + v7) & v277);
      unint64_t v108 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v108(v107, 1, v265))
      {
        size_t v109 = v270;
        memcpy(v106, v107, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v106, v107, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v106, 0, 1, v265);
        size_t v109 = v270;
      }
      unint64_t v176 = (void *)(((unint64_t)v106 + v267) & v277);
      long long v177 = (const void *)(((unint64_t)v107 + v267) & v277);
      uint64_t v65 = a1;
      if (v108(v177, 1, v265))
      {
        memcpy(v176, v177, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v176, v177, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v176, 0, 1, v265);
      }
      long long v192 = (void *)(((unint64_t)v176 + v267) & v277);
      uint64_t v193 = (const void *)(((unint64_t)v177 + v267) & v277);
      if (v108(v193, 1, v265))
      {
        memcpy(v192, v193, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v192, v193, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v192, 0, 1, v265);
      }
      uint64_t v205 = (void *)(((unint64_t)v192 + v267) & v277);
      uint64_t v206 = (const void *)(((unint64_t)v193 + v267) & v277);
      unint64_t v207 = v40;
      if (v108(v206, 1, v265))
      {
        memcpy(v205, v206, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v205, v206, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v205, 0, 1, v265);
      }
      unint64_t v210 = (void *)(((unint64_t)v205 + v257) & v255);
      long long v211 = (const void *)(((unint64_t)v206 + v257) & v255);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v211, 1, v260))
      {
        memcpy(v210, v211, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 32))(v210, v211, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v210, 0, 1, v260);
      }
      char v162 = 9;
      unint64_t v40 = v207;
      goto LABEL_199;
    case 0xAu:
      unint64_t v154 = v40;
      long long v155 = *((_OWORD *)a2 + 1);
      uint64_t v65 = a1;
      *a1 = *(_OWORD *)a2;
      a1[1] = v155;
      a1[2] = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      uint64_t v156 = ((unint64_t)a1 + v4 + 56) & v45;
      uint64_t v157 = (unint64_t)&a2[v4 + 56] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v156, v157, v263);
      long long v158 = (void *)((v156 + v262 + v7) & v277);
      long long v159 = (const void *)((v157 + v262 + v7) & v277);
      long long v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v160(v159, 1, v265))
      {
        size_t v161 = v10;
        memcpy(v158, v159, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v158, v159, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v158, 0, 1, v265);
        size_t v161 = v10;
      }
      uint64_t v223 = (void *)(((unint64_t)v158 + v267) & v277);
      size_t v224 = (const void *)(((unint64_t)v159 + v267) & v277);
      if (v160(v224, 1, v265))
      {
        memcpy(v223, v224, v161);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v223, v224, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v223, 0, 1, v265);
      }
      long long v227 = (void *)(((unint64_t)v223 + v267) & v277);
      long long v228 = (const void *)(((unint64_t)v224 + v267) & v277);
      if (v160(v228, 1, v265))
      {
        memcpy(v227, v228, v161);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v227, v228, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v227, 0, 1, v265);
      }
      char v162 = 10;
      unint64_t v40 = v154;
      goto LABEL_199;
    case 0xBu:
      unint64_t v259 = v29;
      size_t v261 = v22 + 1;
      uint64_t v256 = ~v19;
      long long v110 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v110;
      long long v111 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v111;
      uint64_t v112 = ((unint64_t)a1 + v4 + 64) & v45;
      uint64_t v113 = (unint64_t)&a2[v4 + 64] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v112, v113, v263);
      int v114 = (void *)((v112 + v262 + v7) & v277);
      uint64_t v115 = (const void *)((v113 + v262 + v7) & v277);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48))(v115, 1, v265))
      {
        size_t v116 = v270;
        memcpy(v114, v115, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v114, v115, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v114, 0, 1, v265);
        size_t v116 = v270;
      }
      *((unsigned char *)v114 + v116) = *((unsigned char *)v115 + v116);
      size_t v178 = ((v250 + ((v257 + ((v267 + (((v247 | v7) + v116) & v277)) & v277)) & v256)) & v256) + __n;
      if (v261 > v178) {
        size_t v178 = v261;
      }
      if (v259 > v178) {
        size_t v178 = v259;
      }
      if (v30 > v178) {
        size_t v178 = v30;
      }
      if (v243 > v178) {
        size_t v178 = v243;
      }
      if (v245 > v178) {
        size_t v178 = v245;
      }
      if (v241 > v178) {
        size_t v178 = v241;
      }
      if (v245 > v178) {
        size_t v178 = v245;
      }
      if (v240 > v178) {
        size_t v178 = v240;
      }
      if (v239 > v178) {
        size_t v178 = v239;
      }
      if (v35 > v178) {
        size_t v178 = v35;
      }
      if (v238 > v178) {
        size_t v178 = v238;
      }
      if (v37 > v178) {
        size_t v178 = v37;
      }
      if (v27 > v178) {
        size_t v178 = v27;
      }
      if (v32 <= v178) {
        unint64_t v40 = v178;
      }
      else {
        unint64_t v40 = v32;
      }
      char v162 = 11;
      uint64_t v65 = a1;
      goto LABEL_199;
    case 0xCu:
      unint64_t v117 = v40;
      long long v118 = *((_OWORD *)a2 + 5);
      uint64_t v65 = a1;
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v118;
      long long v119 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v119;
      long long v120 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v120;
      long long v121 = *((_OWORD *)a2 + 3);
      uint64_t v122 = ((unint64_t)a1 + v4 + 128) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v121;
      uint64_t v123 = (unint64_t)&a2[v4 + 128] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v122, v123, v263);
      long long v124 = (void *)((v122 + v262 + v7) & v277);
      long long v125 = (const void *)((v123 + v262 + v7) & v277);
      long long v126 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v126(v125, 1, v265))
      {
        size_t v127 = v10;
        memcpy(v124, v125, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v124, v125, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v124, 0, 1, v265);
        size_t v127 = v10;
      }
      size_t v179 = (void *)(((unint64_t)v124 + v267) & v277);
      unint64_t v180 = (const void *)(((unint64_t)v125 + v267) & v277);
      if (v126(v180, 1, v265))
      {
        memcpy(v179, v180, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v179, v180, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v179, 0, 1, v265);
      }
      uint64_t v194 = (void *)(((unint64_t)v179 + v267) & v277);
      uint64_t v195 = (const void *)(((unint64_t)v180 + v267) & v277);
      if (v126(v195, 1, v265))
      {
        memcpy(v194, v195, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v194, v195, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v194, 0, 1, v265);
      }
      char v162 = 12;
      unint64_t v40 = v117;
      goto LABEL_199;
    case 0xDu:
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *))(v25 + 32))(a1, a2);
      char v162 = 13;
      goto LABEL_199;
    case 0xEu:
      unint64_t v248 = v40;
      uint64_t v65 = a1;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v264 + 32))(a1, a2, v263);
      long long v128 = (void *)(((unint64_t)a1 + v253) & v277);
      uint64_t v129 = (const void *)((unint64_t)&a2[v253] & v277);
      uint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v130(v129, 1, v265))
      {
        memcpy(v128, v129, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v128, v129, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v128, 0, 1, v265);
      }
      size_t v181 = (void *)(((((unint64_t)a1 + v253) | v7) + v10) & v277);
      unint64_t v182 = (const void *)((((unint64_t)&a2[v253] | v7) + v10) & v277);
      if (v130(v182, 1, v265))
      {
        memcpy(v181, v182, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v181, v182, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v181, 0, 1, v265);
      }
      char v162 = 14;
      goto LABEL_198;
    default:
      uint64_t v47 = ~v19;
      unint64_t v248 = v40;
      long long v48 = *((_OWORD *)a2 + 13);
      a1[12] = *((_OWORD *)a2 + 12);
      a1[13] = v48;
      a1[14] = *((_OWORD *)a2 + 14);
      *((void *)a1 + 30) = *((void *)a2 + 30);
      long long v49 = *((_OWORD *)a2 + 9);
      a1[8] = *((_OWORD *)a2 + 8);
      a1[9] = v49;
      long long v50 = *((_OWORD *)a2 + 11);
      a1[10] = *((_OWORD *)a2 + 10);
      a1[11] = v50;
      long long v51 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v51;
      long long v52 = *((_OWORD *)a2 + 7);
      a1[6] = *((_OWORD *)a2 + 6);
      a1[7] = v52;
      long long v53 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v53;
      long long v54 = *((_OWORD *)a2 + 3);
      uint64_t v55 = ((unint64_t)a1 + v4 + 248) & v45;
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v54;
      uint64_t v56 = (unint64_t)&a2[v4 + 248] & v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v55, v56, v263);
      *(unsigned char *)(v55 + v262) = *(unsigned char *)(v56 + v262);
      uint64_t v57 = (void *)((v55 + v262 + v7 + 1) & v277);
      uint64_t v58 = (const void *)((v56 + v262 + v7 + 1) & v277);
      size_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v272 + 48);
      if (v59(v58, 1, v265))
      {
        size_t v60 = v270;
        memcpy(v57, v58, v270);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v57, v58, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v57, 0, 1, v265);
        size_t v60 = v270;
      }
      long long v163 = (void *)(((unint64_t)v57 + v267) & v277);
      size_t v164 = (const void *)(((unint64_t)v58 + v267) & v277);
      uint64_t v65 = a1;
      if (v59(v164, 1, v265))
      {
        memcpy(v163, v164, v60);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v163, v164, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v163, 0, 1, v265);
      }
      uint64_t v183 = (void *)(((unint64_t)v163 + v267) & v277);
      uint64_t v184 = (const void *)(((unint64_t)v164 + v267) & v277);
      if (v59(v184, 1, v265))
      {
        memcpy(v183, v184, v60);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v272 + 32))(v183, v184, v265);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v272 + 56))(v183, 0, 1, v265);
      }
      unint64_t v196 = ((unint64_t)v183 + v257) & v47;
      unint64_t v197 = ((unint64_t)v184 + v257) & v47;
      long long v198 = *(void (**)(unint64_t, unint64_t, uint64_t))(v258 + 32);
      v198(v196, v197, v260);
      long long v199 = (void *)((v250 + v196) & v47);
      long long v200 = (const void *)((v250 + v197) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v258 + 48))(v200, 1, v260))
      {
        memcpy(v199, v200, v16);
      }
      else
      {
        v198((unint64_t)v199, (unint64_t)v200, v260);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v199, 0, 1, v260);
      }
      char v162 = 0;
LABEL_198:
      unint64_t v40 = v248;
LABEL_199:
      *((unsigned char *)v65 + v40) = v162;
      return v65;
  }
}

unsigned __int8 *sub_24ECFE70C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v339 = a3[3];
    uint64_t v340 = *(void *)(v339 - 8);
    uint64_t v4 = *(unsigned __int8 *)(v340 + 80);
    size_t v5 = *(void *)(v340 + 64);
    uint64_t v341 = sub_24EE55880();
    uint64_t v7 = *(void *)(v341 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v5 + v8;
    unint64_t v338 = v3;
    uint64_t v348 = v5 + v8 + 1;
    uint64_t v316 = v348 + ((v4 + 248) & ~v4);
    uint64_t v344 = v7;
    size_t v10 = *(void *)(v7 + 64);
    int v300 = *(_DWORD *)(v7 + 84);
    if (v300) {
      size_t v11 = *(void *)(*(void *)(v341 - 8) + 64);
    }
    else {
      size_t v11 = v10 + 1;
    }
    size_t v12 = v11 + v8;
    uint64_t v315 = a3[2];
    uint64_t v13 = *(void *)(v315 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    size_t v15 = v11 + v14;
    uint64_t v16 = *(void *)(v13 + 64);
    uint64_t v333 = v16 + v14;
    uint64_t v314 = v13;
    if (*(_DWORD *)(v13 + 84)) {
      size_t v17 = *(void *)(*(void *)(v315 - 8) + 64);
    }
    else {
      size_t v17 = v16 + 1;
    }
    unint64_t v330 = ((v16 + v14 + ((v11 + v14 + ((v11 + v8 + ((v11 + v8 + (v316 & ~v8)) & ~v8)) & ~v8)) & ~v14)) & ~v14) + v17;
    size_t v317 = v5;
    size_t v301 = *(void *)(*(void *)(v341 - 8) + 64);
    if (v10 > v5) {
      size_t v5 = *(void *)(*(void *)(v341 - 8) + 64);
    }
    uint64_t v19 = sub_24EE55960();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v298 = v20;
    uint64_t v299 = v19;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = v4;
    uint64_t v23 = *(void *)(v20 + 64);
    size_t v18 = v12 & ~v8;
    if (((v11 + v21 + v18) & ~v21) + v23 <= v5) {
      uint64_t v24 = v5;
    }
    else {
      uint64_t v24 = ((v11 + v21 + v18) & ~v21) + v23;
    }
    size_t v306 = v17 + v14;
    uint64_t v25 = a3[4];
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
    unint64_t v29 = *(void *)(v26 + 64);
    if (*(_DWORD *)(v26 + 84)) {
      size_t v30 = *(void *)(v26 + 64);
    }
    else {
      size_t v30 = v29 + 1;
    }
    unint64_t v31 = v30
        + ((v17
          + v28
          + ((v17 + v14 + ((v15 + ((v12 + ((v12 + ((v348 + ((v4 + 224) & ~v4)) & ~v8)) & ~v8)) & ~v8)) & ~v14)) & ~v14)) & ~v28);
    unint64_t v32 = v17 + ((v15 + ((v12 + ((v8 + 64) & ~v8)) & ~v8)) & ~v14);
    size_t v33 = (v9 & ~v8) + v11;
    unint64_t v34 = ((v33 + v8) & ~v8) + v11;
    uint64_t v310 = v8 + 24;
    unint64_t v35 = ((v8 + 24 + (v33 & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v11;
    size_t v336 = v17;
    size_t v337 = v11 + v14;
    uint64_t v332 = v14;
    uint64_t v36 = (v15 + ((v12 + ((v12 + ((v12 + ((v9 + ((v4 + 160) & ~v4)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v14;
    uint64_t v3 = v338;
    unint64_t v37 = v36 + v17;
    size_t v38 = ((v9 + ((v4 + 64) & ~v4)) & ~v8) + v11;
    uint64_t v313 = v9;
    size_t v349 = v11 + v8;
    size_t v343 = v11;
    unint64_t v39 = v330;
    unint64_t v326 = v35;
    if (v35 > v330) {
      unint64_t v39 = v35;
    }
    size_t v318 = v24 + 1;
    if (v39 <= v24 + 1) {
      unint64_t v39 = v24 + 1;
    }
    unint64_t v327 = v32;
    unint64_t v328 = v31;
    if (v39 <= v31) {
      unint64_t v39 = v31;
    }
    if (v39 <= v32) {
      unint64_t v39 = v32;
    }
    size_t v324 = ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11;
    unint64_t v325 = ((v34 + v8) & ~v8) + v11;
    if (v39 <= v325) {
      unint64_t v39 = ((v34 + v8) & ~v8) + v11;
    }
    if (v39 <= ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11) {
      unint64_t v39 = ((v12 + ((v9 + ((v4 + 24) & ~v4)) & ~v8)) & ~v8) + v11;
    }
    unint64_t v322 = v37;
    unint64_t v323 = ((v12 + ((v12 + ((v9 + ((v4 + 104) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v39 <= v323) {
      unint64_t v39 = ((v12 + ((v12 + ((v9 + ((v4 + 104) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    if (v39 <= v37) {
      unint64_t v39 = v37;
    }
    size_t v320 = v38 + 1;
    unint64_t v321 = ((v12 + ((v12 + ((v9 + ((v4 + 56) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v39 <= v321) {
      unint64_t v39 = ((v12 + ((v12 + ((v9 + ((v4 + 56) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    if (v39 <= v38 + 1) {
      unint64_t v40 = v38 + 1;
    }
    else {
      unint64_t v40 = v39;
    }
    unint64_t v319 = ((v12 + ((v12 + ((v9 + ((v4 + 128) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    if (v40 <= v319) {
      unint64_t v40 = ((v12 + ((v12 + ((v9 + ((v4 + 128) & ~v4)) & ~v8)) & ~v8)) & ~v8) + v11;
    }
    size_t v329 = v34;
    size_t v331 = v29;
    if (v40 <= v34) {
      unint64_t v40 = v34;
    }
    if (v40 <= v29) {
      unint64_t v41 = v29;
    }
    else {
      unint64_t v41 = v40;
    }
    unsigned int v42 = v338[v41];
    unsigned int v43 = v42 - 15;
    if (v42 < 0xF)
    {
      uint64_t v45 = a2;
    }
    else
    {
      if (v41 <= 3) {
        uint64_t v44 = v41;
      }
      else {
        uint64_t v44 = 4;
      }
      uint64_t v45 = a2;
      switch(v44)
      {
        case 1:
          int v46 = *v338;
          if (v41 < 4) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 2:
          int v46 = *(unsigned __int16 *)v338;
          if (v41 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          int v46 = *(unsigned __int16 *)v338 | (v338[2] << 16);
          if (v41 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 4:
          int v46 = *(_DWORD *)v338;
          if (v41 < 4) {
LABEL_57:
          }
            v46 |= v43 << (8 * v41);
LABEL_58:
          unsigned int v42 = v46 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v47 = ~v4;
    uint64_t v48 = ~v8;
    uint64_t v49 = ~v332;
    size_t __n = v30;
    uint64_t v296 = ~v21;
    uint64_t v304 = v24;
    uint64_t v305 = ~v28;
    uint64_t v308 = v27;
    uint64_t v309 = v25;
    uint64_t v307 = v28;
    uint64_t v311 = ~v4;
    uint64_t v312 = v4;
    uint64_t v297 = *(unsigned __int8 *)(v298 + 80);
    switch(v42)
    {
      case 1u:
        unsigned int v62 = v338[v24];
        unsigned int v63 = v62 - 3;
        if (v62 < 3)
        {
          uint64_t v65 = v344;
        }
        else
        {
          if (v24 <= 3) {
            uint64_t v64 = v24;
          }
          else {
            uint64_t v64 = 4;
          }
          uint64_t v65 = v344;
          switch(v64)
          {
            case 1:
              int v66 = *v338;
              goto LABEL_138;
            case 2:
              int v66 = *(unsigned __int16 *)v338;
              goto LABEL_138;
            case 3:
              int v66 = *(unsigned __int16 *)v338 | (v338[2] << 16);
              goto LABEL_138;
            case 4:
              int v66 = *(_DWORD *)v338;
LABEL_138:
              if (v24 < 4) {
                unsigned int v62 = (v66 | (v63 << (8 * v24))) + 3;
              }
              else {
                unsigned int v62 = v66 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v62 == 2)
        {
          uint64_t v107 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v65 + 48);
          if (!v107(v338, 1, v341)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v65 + 8))(v338, v341);
          }
          unint64_t v108 = (unint64_t)&v338[v349] & v48;
          if (!v107((unsigned __int8 *)v108, 1, v341)) {
            (*(void (**)(unint64_t, uint64_t))(v344 + 8))(v108, v341);
          }
          (*(void (**)(unint64_t, uint64_t))(v298 + 8))((v108 + v343 + v297) & v296, v299);
          break;
        }
        if (v62 == 1)
        {
          uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v65 + 8);
          uint64_t v106 = v338;
          goto LABEL_133;
        }
        uint64_t v25 = v339;
        uint64_t v103 = v340;
        goto LABEL_150;
      case 2u:
        uint64_t v67 = (unint64_t)&v338[v4 + 224] & v47;
        (*(void (**)(unint64_t, uint64_t))(v340 + 8))((unint64_t)&v338[v22 + 224] & v47, v339);
        uint64_t v68 = (v317 + v8 + v67 + 1) & v48;
        uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48);
        if (!v69(v68, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v68, v341);
        }
        uint64_t v70 = (v349 + v68) & v48;
        if (!v69(v70, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v70, v341);
        }
        uint64_t v71 = (v349 + v70) & v48;
        if (!v69(v71, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v71, v341);
        }
        size_t v72 = (v337 + v71) & v49;
        long long v73 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v314 + 48);
        if (!v73(v72, 1, v315)) {
          (*(void (**)(size_t, uint64_t))(v314 + 8))(v72, v315);
        }
        size_t v74 = (v306 + v72) & v49;
        if (!v73(v74, 1, v315)) {
          (*(void (**)(size_t, uint64_t))(v314 + 8))(v74, v315);
        }
        size_t v75 = (v74 + v336 + v307) & v305;
        uint64_t v45 = a2;
        if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v308 + 48))(v75, 1, v309)) {
          break;
        }
        uint64_t v77 = v308;
        uint64_t v76 = v309;
        goto LABEL_112;
      case 3u:
        uint64_t v78 = (unint64_t)&v338[v8 + 64] & v48;
        uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48);
        if (!v79(v78, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v78, v341);
        }
        uint64_t v80 = (v349 + v78) & v48;
        if (!v79(v80, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v80, v341);
        }
        size_t v81 = v80 + v343 + v332;
        goto LABEL_110;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v340 + 8))(v338, v339);
        unint64_t v82 = (unint64_t)&v338[v9];
        uint64_t v83 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v344 + 48);
        uint64_t v84 = v341;
        if (!v83(v82 & v48, 1, v341)) {
          (*(void (**)(unint64_t, uint64_t))(v344 + 8))(v82 & v48, v341);
        }
        size_t v85 = ((v82 | v8) + v343) & v48;
        if (!v83(v85, 1, v341)) {
          (*(void (**)(size_t, uint64_t))(v344 + 8))(v85, v341);
        }
        size_t v86 = v349 + v85;
        goto LABEL_131;
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v340 + 8))(v338, v339);
        unint64_t v50 = (unint64_t)&v338[v9] & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v344 + 48);
        uint64_t v52 = v341;
        if (!v51((unint64_t)&v338[v313] & v48, 1, v341)) {
          (*(void (**)(unint64_t, uint64_t))(v344 + 8))(v50, v341);
        }
        size_t v53 = v310 + ((v343 + v50) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_125;
      case 6u:
        uint64_t v87 = (unint64_t)&v338[v4 + 24] & v47;
        (*(void (**)(unint64_t, uint64_t))(v340 + 8))((unint64_t)&v338[v22 + 24] & v47, v339);
        uint64_t v88 = (v87 + v317 + v8) & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v344 + 48);
        uint64_t v52 = v341;
        unsigned int v89 = v51(v88, 1, v341);
        goto LABEL_122;
      case 8u:
        uint64_t v90 = (uint64_t)&v338[v4 + 104];
        goto LABEL_119;
      case 9u:
        uint64_t v91 = (unint64_t)&v338[v4 + 160] & v47;
        (*(void (**)(unint64_t, uint64_t))(v340 + 8))((unint64_t)&v338[v22 + 160] & v47, v339);
        uint64_t v92 = (v91 + v317 + v8) & v48;
        uint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48);
        if (!v93(v92, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v92, v341);
        }
        uint64_t v94 = (v349 + v92) & v48;
        if (!v93(v94, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v94, v341);
        }
        size_t v95 = (v349 + v94) & v48;
        if (!v93(v95, 1, v341)) {
          (*(void (**)(size_t, uint64_t))(v344 + 8))(v95, v341);
        }
        size_t v96 = (v349 + v95) & v48;
        if (!v93(v96, 1, v341)) {
          (*(void (**)(size_t, uint64_t))(v344 + 8))(v96, v341);
        }
        size_t v81 = v337 + v96;
LABEL_110:
        size_t v75 = v81 & v49;
        if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v314 + 48))(v81 & v49, 1, v315)) {
          break;
        }
        uint64_t v77 = v314;
        uint64_t v76 = v315;
LABEL_112:
        (*(void (**)(size_t, uint64_t))(v77 + 8))(v75, v76);
        break;
      case 0xAu:
        uint64_t v90 = (uint64_t)&v338[v4 + 56];
        goto LABEL_119;
      case 0xBu:
        uint64_t v97 = (unint64_t)&v338[v4 + 64] & v47;
        (*(void (**)(unint64_t, uint64_t))(v340 + 8))((unint64_t)&v338[v22 + 64] & v47, v339);
        uint64_t v98 = (v97 + v317 + v8) & v48;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48))(v98, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v98, v341);
        }
        size_t v99 = v301;
        if (!v300) {
          break;
        }
        goto LABEL_153;
      case 0xCu:
        uint64_t v90 = (uint64_t)&v338[v4 + 128];
LABEL_119:
        uint64_t v100 = v90 & v47;
        (*(void (**)(uint64_t, uint64_t))(v340 + 8))(v90 & v47, v339);
        uint64_t v101 = (v100 + v317 + v8) & v48;
        long long v51 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v344 + 48);
        uint64_t v52 = v341;
        if (!v51(v101, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v101, v341);
        }
        uint64_t v88 = (v349 + v101) & v48;
        unsigned int v89 = v51(v88, 1, v341);
LABEL_122:
        if (!v89) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v88, v52);
        }
        size_t v53 = v349 + v88;
LABEL_125:
        long long v102 = (unsigned __int8 *)(v53 & v48);
        if (!v51(v53 & v48, 1, v52)) {
          goto LABEL_132;
        }
        break;
      case 0xDu:
        uint64_t v103 = v27;
LABEL_150:
        uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v103 + 8);
        uint64_t v106 = v338;
        goto LABEL_151;
      case 0xEu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v340 + 8))(v338, v339);
        unint64_t v104 = (unint64_t)&v338[v9];
        uint64_t v83 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v344 + 48);
        uint64_t v84 = v341;
        if (!v83(v104 & v48, 1, v341)) {
          (*(void (**)(unint64_t, uint64_t))(v344 + 8))(v104 & v48, v341);
        }
        size_t v86 = (v104 | v8) + v343;
LABEL_131:
        long long v102 = (unsigned __int8 *)(v86 & v48);
        uint64_t v3 = v338;
        if (!v83(v86 & v48, 1, v84))
        {
LABEL_132:
          uint64_t v105 = *(void (**)(unsigned __int8 *, uint64_t))(v344 + 8);
          uint64_t v106 = v102;
LABEL_133:
          uint64_t v25 = v341;
LABEL_151:
          v105(v106, v25);
        }
        break;
      default:
        uint64_t v54 = (unint64_t)&v338[v4 + 248] & v47;
        (*(void (**)(unint64_t, uint64_t))(v340 + 8))((unint64_t)&v338[v22 + 248] & v47, v339);
        uint64_t v55 = (v317 + v8 + v54 + 1) & v48;
        uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48);
        if (!v56(v55, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v55, v341);
        }
        uint64_t v57 = (v349 + v55) & v48;
        if (!v56(v57, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v57, v341);
        }
        uint64_t v58 = (v349 + v57) & v48;
        if (!v56(v58, 1, v341)) {
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v58, v341);
        }
        size_t v59 = (v337 + v58) & v49;
        size_t v60 = *(void (**)(size_t, uint64_t))(v314 + 8);
        v60(v59, v315);
        uint64_t v61 = (v333 + v59) & v49;
        uint64_t v45 = a2;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v314 + 48))(v61, 1, v315)) {
          v60(v61, v315);
        }
        break;
    }
    size_t v99 = v343;
LABEL_153:
    size_t v109 = ((v333 + ((v337 + ((v349 + (((v316 | v8) + v99) & v48)) & v48)) & v49)) & v49) + v336;
    if (v318 > v109) {
      size_t v109 = v318;
    }
    if (v328 > v109) {
      size_t v109 = v328;
    }
    if (v327 > v109) {
      size_t v109 = v327;
    }
    if (v325 > v109) {
      size_t v109 = v325;
    }
    if (v326 > v109) {
      size_t v109 = v326;
    }
    if (v324 > v109) {
      size_t v109 = v324;
    }
    if (v326 > v109) {
      size_t v109 = v326;
    }
    if (v323 > v109) {
      size_t v109 = v323;
    }
    if (v322 > v109) {
      size_t v109 = v322;
    }
    if (v321 > v109) {
      size_t v109 = v321;
    }
    if (v320 > v109) {
      size_t v109 = v320;
    }
    if (v319 > v109) {
      size_t v109 = v319;
    }
    if (v331 > v109) {
      size_t v109 = v331;
    }
    if (v329 > v109) {
      size_t v109 = v329;
    }
    unsigned int v110 = v45[v109];
    unsigned int v111 = v110 - 15;
    if (v110 < 0xF)
    {
      uint64_t v113 = v344;
    }
    else
    {
      if (v41 <= 3) {
        uint64_t v112 = v41;
      }
      else {
        uint64_t v112 = 4;
      }
      uint64_t v113 = v344;
      switch(v112)
      {
        case 1:
          int v114 = *v45;
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 2:
          int v114 = *(unsigned __int16 *)v45;
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 3:
          int v114 = *(unsigned __int16 *)v45 | (v45[2] << 16);
          if (v41 < 4) {
            goto LABEL_190;
          }
          goto LABEL_194;
        case 4:
          int v114 = *(_DWORD *)v45;
          if (v41 < 4) {
LABEL_190:
          }
            unsigned int v110 = (v114 | (v111 << (8 * v41))) + 15;
          else {
LABEL_194:
          }
            unsigned int v110 = v114 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v335 = ~v8;
    switch(v110)
    {
      case 1u:
        uint64_t v131 = v304;
        unsigned int v132 = v45[v304];
        unsigned int v133 = v132 - 3;
        if (v132 < 3)
        {
          uint64_t v135 = v341;
          size_t v136 = v343;
        }
        else
        {
          if (v304 <= 3) {
            uint64_t v134 = v304;
          }
          else {
            uint64_t v134 = 4;
          }
          uint64_t v135 = v341;
          size_t v136 = v343;
          switch(v134)
          {
            case 1:
              int v137 = *v45;
              goto LABEL_366;
            case 2:
              int v137 = *(unsigned __int16 *)v45;
              goto LABEL_366;
            case 3:
              int v137 = *(unsigned __int16 *)v45 | (v45[2] << 16);
              goto LABEL_366;
            case 4:
              int v137 = *(_DWORD *)v45;
LABEL_366:
              if (v304 < 4) {
                unsigned int v132 = (v137 | (v133 << (8 * v304))) + 3;
              }
              else {
                unsigned int v132 = v137 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v132 == 2)
        {
          unint64_t v289 = v41;
          unint64_t v290 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v113 + 48);
          if (v290(v45, 1, v135))
          {
            memcpy(v3, v45, v136);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 32))(v3, v45, v135);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v113 + 56))(v3, 0, 1, v135);
          }
          uint64_t v291 = v48;
          unint64_t v292 = (void *)((unint64_t)&v3[v349] & v48);
          size_t v293 = (void *)((unint64_t)&v45[v349] & v291);
          if (v290((unsigned __int8 *)v293, 1, v135))
          {
            memcpy(v292, v293, v136);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v113 + 32))(v292, v293, v135);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v292, 0, 1, v135);
          }
          unint64_t v41 = v289;
          uint64_t v131 = v304;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v298 + 32))(((unint64_t)v292 + v136 + v297) & v296, ((unint64_t)v293 + v136 + v297) & v296, v299);
          char v288 = 2;
        }
        else if (v132 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 32))(v3, v45, v135);
          char v288 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v340 + 32))(v3, v45, v339);
          char v288 = 0;
        }
        v3[v131] = v288;
        char v220 = 1;
        goto LABEL_381;
      case 2u:
        unint64_t v138 = v41;
        long long v139 = *((_OWORD *)v45 + 11);
        *((_OWORD *)v3 + 10) = *((_OWORD *)v45 + 10);
        *((_OWORD *)v3 + 11) = v139;
        long long v140 = *((_OWORD *)v45 + 13);
        *((_OWORD *)v3 + 12) = *((_OWORD *)v45 + 12);
        *((_OWORD *)v3 + 13) = v140;
        long long v141 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v141;
        long long v142 = *((_OWORD *)v45 + 9);
        *((_OWORD *)v3 + 8) = *((_OWORD *)v45 + 8);
        *((_OWORD *)v3 + 9) = v142;
        long long v143 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v143;
        long long v144 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v144;
        long long v145 = *((_OWORD *)v45 + 1);
        long long v146 = v3;
        uint64_t v147 = (unint64_t)&v3[v312 + 224] & v311;
        *(_OWORD *)long long v146 = *(_OWORD *)v45;
        *((_OWORD *)v146 + 1) = v145;
        uint64_t v148 = (unint64_t)&v45[v312 + 224] & v311;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v340 + 32))(v147, v148, v339);
        *(unsigned char *)(v147 + v317) = *(unsigned char *)(v148 + v317);
        uint64_t v149 = (void *)((v147 + v317 + v8 + 1) & v48);
        long long v150 = (const void *)((v148 + v317 + v8 + 1) & v48);
        long long v151 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v344 + 48);
        if (v151(v150, 1, v341))
        {
          memcpy(v149, v150, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v344 + 32))(v149, v150, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v344 + 56))(v149, 0, 1, v341);
        }
        long long v228 = (void *)(((unint64_t)v149 + v349) & v335);
        size_t v229 = (const void *)(((unint64_t)v150 + v349) & v335);
        if (v151(v229, 1, v341))
        {
          memcpy(v228, v229, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v344 + 32))(v228, v229, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v344 + 56))(v228, 0, 1, v341);
        }
        size_t v257 = (void *)(((unint64_t)v228 + v349) & v335);
        uint64_t v258 = (const void *)(((unint64_t)v229 + v349) & v335);
        if (v151(v258, 1, v341))
        {
          memcpy(v257, v258, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v344 + 32))(v257, v258, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v344 + 56))(v257, 0, 1, v341);
        }
        unint64_t v276 = (void *)(((unint64_t)v257 + v337) & v49);
        uint64_t v277 = (const void *)(((unint64_t)v258 + v337) & v49);
        unint64_t v278 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48);
        if (v278(v277, 1, v315))
        {
          memcpy(v276, v277, v336);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v314 + 32))(v276, v277, v315);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v276, 0, 1, v315);
        }
        uint64_t v3 = v338;
        unint64_t v281 = (void *)(((unint64_t)v276 + v306) & v49);
        uint64_t v282 = (const void *)(((unint64_t)v277 + v306) & v49);
        if (v278(v282, 1, v315))
        {
          size_t v283 = v336;
          memcpy(v281, v282, v336);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v314 + 32))(v281, v282, v315);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v281, 0, 1, v315);
          size_t v283 = v336;
        }
        unint64_t v286 = (void *)(((unint64_t)v281 + v283 + v307) & v305);
        char v287 = (const void *)(((unint64_t)v282 + v283 + v307) & v305);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v308 + 48))(v287, 1, v309))
        {
          memcpy(v286, v287, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v308 + 32))(v286, v287, v309);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v308 + 56))(v286, 0, 1, v309);
        }
        char v271 = 2;
        goto LABEL_362;
      case 3u:
        unint64_t v345 = v41;
        long long v152 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v152;
        long long v153 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v153;
        unint64_t v154 = (void *)((unint64_t)&v3[v8 + 64] & v48);
        long long v155 = (const void *)((unint64_t)&v45[v8 + 64] & v48);
        uint64_t v156 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v156(v155, 1, v341))
        {
          size_t v157 = v343;
          memcpy(v154, v155, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v154, v155, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v154, 0, 1, v341);
          size_t v157 = v343;
        }
        char v230 = (void *)(((unint64_t)v154 + v349) & v48);
        long long v231 = (const void *)(((unint64_t)v155 + v349) & v48);
        if (v156(v231, 1, v341))
        {
          memcpy(v230, v231, v157);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v230, v231, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v230, 0, 1, v341);
        }
        unint64_t v259 = (void *)(((unint64_t)v230 + v157 + v332) & v49);
        uint64_t v260 = (const void *)(((unint64_t)v231 + v157 + v332) & v49);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48))(v260, 1, v315))
        {
          memcpy(v259, v260, v336);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v314 + 32))(v259, v260, v315);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v259, 0, 1, v315);
        }
        uint64_t v3 = v338;
        v338[v345] = 3;
        return v3;
      case 4u:
        unint64_t v346 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v340 + 32))(v3, v45, v339);
        unint64_t v158 = (unint64_t)&v3[v313];
        long long v159 = (void *)(v158 & v48);
        unint64_t v160 = (unint64_t)&v45[v313];
        size_t v161 = (const void *)((unint64_t)&v45[v313] & ~v8);
        char v162 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v162(v161, 1, v341))
        {
          size_t v163 = v343;
          memcpy(v159, v161, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v159, v161, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v159, 0, 1, v341);
          size_t v163 = v343;
        }
        unint64_t v232 = (void *)(((v158 | v8) + v163) & v335);
        uint64_t v233 = (const void *)(((v160 | v8) + v163) & v335);
        if (v162(v233, 1, v341))
        {
          memcpy(v232, v233, v163);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v232, v233, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v232, 0, 1, v341);
        }
        uint64_t v3 = v338;
        size_t v261 = (void *)(((unint64_t)v232 + v349) & v335);
        size_t v262 = (const void *)(((unint64_t)v233 + v349) & v335);
        if (v162(v262, 1, v341))
        {
          memcpy(v261, v262, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v261, v262, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v261, 0, 1, v341);
        }
        unint64_t v138 = v346;
        char v271 = 4;
        goto LABEL_362;
      case 5u:
        unint64_t v164 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v340 + 32))(v3, v45, v339);
        unint64_t v165 = (void *)((unint64_t)&v3[v313] & v48);
        uint64_t v166 = (const void *)((unint64_t)&v45[v313] & ~v8);
        unint64_t v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v167(v166, 1, v341))
        {
          size_t v168 = v343;
          memcpy(v165, v166, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v165, v166, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v165, 0, 1, v341);
          size_t v168 = v343;
        }
        *((unsigned char *)v165 + v168) = *((unsigned char *)v166 + v168);
        unint64_t v234 = ((unint64_t)v165 + v168) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v235 = ((unint64_t)v166 + v168) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v234 + 8) = *(_OWORD *)(v235 + 8);
        uint64_t v236 = (void *)((v310 + v234) & v335);
        uint64_t v237 = (const void *)((v310 + v235) & v335);
        if (v167(v237, 1, v341))
        {
          memcpy(v236, v237, v168);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v236, v237, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v236, 0, 1, v341);
        }
        v3[v164] = 5;
        return v3;
      case 6u:
        unint64_t v169 = v41;
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((void *)v3 + 2) = *((void *)v45 + 2);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v340 + 32))((unint64_t)&v3[v312 + 24] & v311, (unint64_t)&v45[v312 + 24] & v311, v339);
        size_t v170 = (void *)((((unint64_t)&v3[v312 + 24] & v311) + v317 + v8) & ~v8);
        unint64_t v171 = (const void *)((((unint64_t)&v45[v312 + 24] & v311) + v317 + v8) & ~v8);
        unint64_t v172 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v172(v171, 1, v341))
        {
          size_t v173 = v343;
          memcpy(v170, v171, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v170, v171, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v170, 0, 1, v341);
          size_t v173 = v343;
        }
        size_t v238 = (void *)(((unint64_t)v170 + v349) & v335);
        unint64_t v239 = (const void *)(((unint64_t)v171 + v349) & v335);
        if (v172(v239, 1, v341))
        {
          memcpy(v238, v239, v173);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v238, v239, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v238, 0, 1, v341);
        }
        v3[v169] = 6;
        return v3;
      case 7u:
        unint64_t v174 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v340 + 32))(v3, v45, v339);
        size_t v175 = (void *)((unint64_t)&v3[v313] & v48);
        unint64_t v176 = (const void *)((unint64_t)&v45[v313] & ~v8);
        long long v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v177(v176, 1, v341))
        {
          size_t v178 = v343;
          memcpy(v175, v176, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v175, v176, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v175, 0, 1, v341);
          size_t v178 = v343;
        }
        *((unsigned char *)v175 + v178) = *((unsigned char *)v176 + v178);
        unint64_t v240 = ((unint64_t)v175 + v178) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v241 = ((unint64_t)v176 + v178) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v240 + 8) = *(_OWORD *)(v241 + 8);
        size_t v242 = (void *)((v310 + v240) & v335);
        size_t v243 = (const void *)((v310 + v241) & v335);
        if (v177(v243, 1, v341))
        {
          memcpy(v242, v243, v178);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v242, v243, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v242, 0, 1, v341);
        }
        v3[v174] = 7;
        return v3;
      case 8u:
        unint64_t v179 = v41;
        long long v180 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v180;
        *((void *)v3 + 12) = *((void *)v45 + 12);
        long long v181 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v181;
        long long v182 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v182;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v340 + 32))((unint64_t)&v3[v312 + 104] & v311, (unint64_t)&v45[v312 + 104] & v311, v339);
        uint64_t v183 = (void *)((((unint64_t)&v3[v312 + 104] & v311) + v317 + v8) & ~v8);
        uint64_t v184 = (const void *)((((unint64_t)&v45[v312 + 104] & v311) + v317 + v8) & ~v8);
        uint64_t v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v185(v184, 1, v341))
        {
          size_t v186 = v343;
          memcpy(v183, v184, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v183, v184, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v183, 0, 1, v341);
          size_t v186 = v343;
        }
        uint64_t v244 = (void *)(((unint64_t)v183 + v349) & v335);
        unint64_t v245 = (const void *)(((unint64_t)v184 + v349) & v335);
        if (v185(v245, 1, v341))
        {
          memcpy(v244, v245, v186);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v244, v245, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v244, 0, 1, v341);
        }
        uint64_t v263 = (void *)(((unint64_t)v244 + v349) & v335);
        uint64_t v264 = (const void *)(((unint64_t)v245 + v349) & v335);
        if (v185(v264, 1, v341))
        {
          memcpy(v263, v264, v186);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v263, v264, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v263, 0, 1, v341);
        }
        v3[v179] = 8;
        return v3;
      case 9u:
        uint64_t v303 = ~v332;
        unint64_t v187 = v41;
        long long v188 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v188;
        long long v189 = *((_OWORD *)v45 + 9);
        *((_OWORD *)v3 + 8) = *((_OWORD *)v45 + 8);
        *((_OWORD *)v3 + 9) = v189;
        long long v190 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v190;
        long long v191 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v191;
        long long v192 = *((_OWORD *)v45 + 1);
        uint64_t v193 = v3;
        uint64_t v194 = (unint64_t)&v3[v312 + 160] & v311;
        *(_OWORD *)uint64_t v193 = *(_OWORD *)v45;
        *((_OWORD *)v193 + 1) = v192;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v340 + 32))(v194, (unint64_t)&v45[v312 + 160] & v311, v339);
        uint64_t v195 = (void *)((v194 + v317 + v8) & ~v8);
        unint64_t v196 = (const void *)((((unint64_t)&v45[v312 + 160] & v311) + v317 + v8) & ~v8);
        unint64_t v197 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v197(v196, 1, v341))
        {
          size_t v198 = v343;
          memcpy(v195, v196, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v195, v196, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v195, 0, 1, v341);
          size_t v198 = v343;
        }
        uint64_t v246 = (void *)(((unint64_t)v195 + v349) & v335);
        uint64_t v247 = (const void *)(((unint64_t)v196 + v349) & v335);
        if (v197(v247, 1, v341))
        {
          memcpy(v246, v247, v198);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v246, v247, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v246, 0, 1, v341);
        }
        uint64_t v265 = (void *)(((unint64_t)v246 + v349) & v335);
        size_t v266 = (const void *)(((unint64_t)v247 + v349) & v335);
        if (v197(v266, 1, v341))
        {
          memcpy(v265, v266, v198);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v265, v266, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v265, 0, 1, v341);
        }
        uint64_t v279 = (void *)(((unint64_t)v265 + v349) & v335);
        int v280 = (const void *)(((unint64_t)v266 + v349) & v335);
        if (v197(v280, 1, v341))
        {
          memcpy(v279, v280, v198);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v279, v280, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v279, 0, 1, v341);
        }
        uint64_t v284 = (void *)(((unint64_t)v279 + v337) & v303);
        uint64_t v285 = (const void *)(((unint64_t)v280 + v337) & v303);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48))(v285, 1, v315))
        {
          memcpy(v284, v285, v336);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v314 + 32))(v284, v285, v315);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v284, 0, 1, v315);
        }
        uint64_t v3 = v338;
        v338[v187] = 9;
        return v3;
      case 0xAu:
        unint64_t v199 = v41;
        long long v200 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v200;
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((void *)v3 + 6) = *((void *)v45 + 6);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v340 + 32))((unint64_t)&v3[v312 + 56] & v311, (unint64_t)&v45[v312 + 56] & v311, v339);
        long long v201 = (void *)((((unint64_t)&v3[v312 + 56] & v311) + v317 + v8) & ~v8);
        long long v202 = (const void *)((((unint64_t)&v45[v312 + 56] & v311) + v317 + v8) & ~v8);
        long long v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v203(v202, 1, v341))
        {
          size_t v204 = v343;
          memcpy(v201, v202, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v201, v202, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v201, 0, 1, v341);
          size_t v204 = v343;
        }
        unint64_t v248 = (void *)(((unint64_t)v201 + v349) & v335);
        size_t v249 = (const void *)(((unint64_t)v202 + v349) & v335);
        if (v203(v249, 1, v341))
        {
          memcpy(v248, v249, v204);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v248, v249, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v248, 0, 1, v341);
        }
        size_t v267 = (void *)(((unint64_t)v248 + v349) & v335);
        uint64_t v268 = (const void *)(((unint64_t)v249 + v349) & v335);
        if (v203(v268, 1, v341))
        {
          memcpy(v267, v268, v204);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v267, v268, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v267, 0, 1, v341);
        }
        v3[v199] = 10;
        return v3;
      case 0xBu:
        long long v205 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v205;
        long long v206 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v206;
        uint64_t v207 = (unint64_t)&v3[v312 + 64] & v311;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v340 + 32))(v207, (unint64_t)&v45[v312 + 64] & v311, v339);
        uint64_t v208 = (void *)((v207 + v317 + v8) & v48);
        size_t v209 = (const void *)((((unint64_t)&v45[v312 + 64] & v311) + v317 + v8) & v48);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48))(v209, 1, v341))
        {
          size_t v210 = v343;
          memcpy(v208, v209, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v208, v209, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v208, 0, 1, v341);
          size_t v210 = v343;
        }
        *((unsigned char *)v208 + v210) = *((unsigned char *)v209 + v210);
        size_t v250 = ((v333 + ((v337 + ((v349 + (((v316 | v8) + v210) & v48)) & v48)) & ~v332)) & ~v332) + v336;
        if (v318 > v250) {
          size_t v250 = v318;
        }
        if (v328 > v250) {
          size_t v250 = v328;
        }
        if (v327 > v250) {
          size_t v250 = v327;
        }
        if (v325 > v250) {
          size_t v250 = v325;
        }
        if (v326 > v250) {
          size_t v250 = v326;
        }
        if (v324 > v250) {
          size_t v250 = v324;
        }
        if (v326 > v250) {
          size_t v250 = v326;
        }
        if (v323 > v250) {
          size_t v250 = v323;
        }
        if (v322 > v250) {
          size_t v250 = v322;
        }
        if (v321 > v250) {
          size_t v250 = v321;
        }
        if (v320 > v250) {
          size_t v250 = v320;
        }
        if (v319 > v250) {
          size_t v250 = v319;
        }
        if (v331 > v250) {
          size_t v250 = v331;
        }
        if (v329 > v250) {
          size_t v250 = v329;
        }
        uint64_t v3 = v338;
        v338[v250] = 11;
        return v3;
      case 0xCu:
        unint64_t v211 = v41;
        long long v212 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v212;
        long long v213 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v213;
        long long v214 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v214;
        long long v215 = *((_OWORD *)v45 + 3);
        *((_OWORD *)v3 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v3 + 3) = v215;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v340 + 32))((unint64_t)&v3[v312 + 128] & v311, (unint64_t)&v45[v312 + 128] & v311, v339);
        unint64_t v216 = (void *)((((unint64_t)&v3[v312 + 128] & v311) + v317 + v8) & ~v8);
        size_t v217 = (const void *)((((unint64_t)&v45[v312 + 128] & v311) + v317 + v8) & ~v8);
        long long v218 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v218(v217, 1, v341))
        {
          size_t v219 = v343;
          memcpy(v216, v217, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v216, v217, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v216, 0, 1, v341);
          size_t v219 = v343;
        }
        uint64_t v251 = (void *)(((unint64_t)v216 + v349) & v335);
        unint64_t v252 = (const void *)(((unint64_t)v217 + v349) & v335);
        if (v218(v252, 1, v341))
        {
          memcpy(v251, v252, v219);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v251, v252, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v251, 0, 1, v341);
        }
        uint64_t v269 = (void *)(((unint64_t)v251 + v349) & v335);
        size_t v270 = (const void *)(((unint64_t)v252 + v349) & v335);
        if (v218(v270, 1, v341))
        {
          memcpy(v269, v270, v219);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v269, v270, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v269, 0, 1, v341);
        }
        v3[v211] = 12;
        return v3;
      case 0xDu:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v308 + 32))(v3, v45, v309);
        char v220 = 13;
LABEL_381:
        v3[v41] = v220;
        return v3;
      case 0xEu:
        unint64_t v347 = v41;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v340 + 32))(v3, v45, v339);
        unint64_t v221 = (unint64_t)&v3[v313];
        uint64_t v222 = (void *)(v221 & v48);
        uint64_t v223 = (const void *)((unint64_t)&v45[v313] & ~v8);
        size_t v224 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
        if (v224(v223, 1, v341))
        {
          size_t v225 = v343;
          memcpy(v222, v223, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v222, v223, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v222, 0, 1, v341);
          size_t v225 = v343;
        }
        size_t v253 = (void *)(((v221 | v8) + v225) & v335);
        uint64_t v254 = (const void *)((((unint64_t)&v45[v313] | v8) + v225) & v335);
        if (v224(v254, 1, v341))
        {
          memcpy(v253, v254, v225);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v253, v254, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v253, 0, 1, v341);
        }
        uint64_t v3 = v338;
        unint64_t v138 = v347;
        char v271 = 14;
LABEL_362:
        v3[v138] = v271;
        break;
      default:
        uint64_t v302 = ~v332;
        uint64_t v115 = v113;
        unint64_t v116 = v41;
        long long v117 = *((_OWORD *)v45 + 13);
        *((_OWORD *)v3 + 12) = *((_OWORD *)v45 + 12);
        *((_OWORD *)v3 + 13) = v117;
        *((_OWORD *)v3 + 14) = *((_OWORD *)v45 + 14);
        *((void *)v3 + 30) = *((void *)v45 + 30);
        long long v118 = *((_OWORD *)v45 + 9);
        *((_OWORD *)v3 + 8) = *((_OWORD *)v45 + 8);
        *((_OWORD *)v3 + 9) = v118;
        long long v119 = *((_OWORD *)v45 + 11);
        *((_OWORD *)v3 + 10) = *((_OWORD *)v45 + 10);
        *((_OWORD *)v3 + 11) = v119;
        long long v120 = *((_OWORD *)v45 + 5);
        *((_OWORD *)v3 + 4) = *((_OWORD *)v45 + 4);
        *((_OWORD *)v3 + 5) = v120;
        long long v121 = *((_OWORD *)v45 + 7);
        *((_OWORD *)v3 + 6) = *((_OWORD *)v45 + 6);
        *((_OWORD *)v3 + 7) = v121;
        long long v122 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v45;
        *((_OWORD *)v3 + 1) = v122;
        long long v123 = *((_OWORD *)v45 + 3);
        long long v124 = v3;
        uint64_t v125 = (unint64_t)&v3[v312 + 248] & v311;
        *((_OWORD *)v124 + 2) = *((_OWORD *)v45 + 2);
        *((_OWORD *)v124 + 3) = v123;
        uint64_t v126 = (unint64_t)&v45[v312 + 248] & v311;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v340 + 32))(v125, v126, v339);
        *(unsigned char *)(v125 + v317) = *(unsigned char *)(v126 + v317);
        size_t v127 = (void *)((v125 + v317 + v8 + 1) & v48);
        long long v128 = (const void *)((v126 + v317 + v8 + 1) & v48);
        uint64_t v129 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48);
        if (v129(v128, 1, v341))
        {
          size_t v130 = v343;
          memcpy(v127, v128, v343);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v115 + 32))(v127, v128, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v127, 0, 1, v341);
          size_t v130 = v343;
        }
        long long v226 = (void *)(((unint64_t)v127 + v349) & v335);
        long long v227 = (const void *)(((unint64_t)v128 + v349) & v335);
        if (v129(v227, 1, v341))
        {
          memcpy(v226, v227, v130);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v344 + 32))(v226, v227, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v344 + 56))(v226, 0, 1, v341);
        }
        uint64_t v255 = (void *)(((unint64_t)v226 + v349) & v335);
        uint64_t v256 = (const void *)(((unint64_t)v227 + v349) & v335);
        if (v129(v256, 1, v341))
        {
          memcpy(v255, v256, v130);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v344 + 32))(v255, v256, v341);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v344 + 56))(v255, 0, 1, v341);
        }
        unint64_t v272 = ((unint64_t)v255 + v337) & v302;
        uint64_t v273 = *(void (**)(unint64_t, unint64_t, uint64_t))(v314 + 32);
        v273(v272, ((unint64_t)v256 + v337) & v302, v315);
        int v274 = (void *)((v333 + v272) & v302);
        size_t v275 = (const void *)((v333 + (((unint64_t)v256 + v337) & v302)) & v302);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48))(v275, 1, v315))
        {
          memcpy(v274, v275, v336);
        }
        else
        {
          v273((unint64_t)v274, (unint64_t)v275, v315);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v274, 0, 1, v315);
        }
        uint64_t v3 = v338;
        v338[v116] = 0;
        break;
    }
  }
  return v3;
}

uint64_t sub_24ED01894(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80);
  unint64_t v5 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v6 = *(void *)(sub_24EE55880() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = v5 + v7 + 1;
  uint64_t v51 = (v9 + ((v4 + 248) & ~v4)) & ~v7;
  int v50 = *(_DWORD *)(v6 + 84);
  unint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  int v14 = *(_DWORD *)(v11 + 84);
  if (v10 > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v15 = *(void *)(sub_24EE55960() - 8);
  uint64_t v16 = *(void *)(a3[4] - 8);
  if (v50) {
    unint64_t v17 = v10;
  }
  else {
    unint64_t v17 = v10 + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = *(void *)(v15 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v16 + 80);
  int v21 = *(_DWORD *)(v16 + 84);
  unint64_t v22 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v23 = v17 + v7;
  uint64_t v24 = v17 + v12;
  if (v14) {
    uint64_t v25 = v13;
  }
  else {
    uint64_t v25 = v13 + 1;
  }
  unint64_t v26 = (((v23 & ~v7) + v17 + v18) & ~v18) + v19;
  if (v26 <= v5) {
    unint64_t v26 = v5;
  }
  if (v26 + 1 > ((v13 + v12 + ((v17 + v12 + ((v17 + v7 + ((v17 + v7 + v51) & ~v7)) & ~v7)) & ~v12)) & ~v12) + v25) {
    unint64_t v27 = v26 + 1;
  }
  else {
    unint64_t v27 = ((v13 + v12 + ((v17 + v12 + ((v17 + v7 + ((v17 + v7 + v51) & ~v7)) & ~v7)) & ~v12)) & ~v12) + v25;
  }
  uint64_t v28 = v8 & ~v7;
  uint64_t v30 = (v8 + ((v4 + 64) & ~v4)) & ~v7;
  uint64_t v31 = (((v25 + v12 + ((v24 + ((v23 + ((v23 + ((v9 + ((v4 + 224) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v12)) & ~v12)
       + v25
       + v20) & ~v20;
  if (v21) {
    unint64_t v32 = *(void *)(*(void *)(a3[4] - 8) + 64);
  }
  else {
    unint64_t v32 = v22 + 1;
  }
  unint64_t v33 = v32 + v31;
  if (v33 <= v27) {
    unint64_t v33 = v27;
  }
  unint64_t v34 = v25 + ((v24 + ((v23 + ((v7 + 64) & ~v7)) & ~v7)) & ~v12);
  if (v34 <= v33) {
    unint64_t v34 = v33;
  }
  unint64_t v35 = ((v28 + v17 + v7) & ~v7) + v17;
  if (((v35 + v7) & ~v7) + v17 > v34) {
    unint64_t v34 = ((v35 + v7) & ~v7) + v17;
  }
  unint64_t v36 = ((v7 + ((v28 + v17) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v17;
  if (v36 > v34) {
    unint64_t v34 = ((v7 + ((v28 + v17) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v17;
  }
  unint64_t v37 = ((v23 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v17;
  if (v37 <= v34) {
    unint64_t v37 = v34;
  }
  if (v36 > v37) {
    unint64_t v37 = ((v7 + ((v28 + v17) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v17;
  }
  unint64_t v38 = ((v23 + ((v23 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v17;
  if (v38 <= v37) {
    unint64_t v38 = v37;
  }
  unint64_t v39 = ((v24 + ((v23 + ((v23 + ((v23 + ((v8 + ((v4 + 160) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v12) + v25;
  if (v39 <= v38) {
    unint64_t v39 = v38;
  }
  uint64_t v29 = (v8 + ((v4 + 56) & ~v4)) & ~v7;
  if (((v23 + ((v23 + v29) & ~v7)) & ~v7) + v17 > v39) {
    unint64_t v39 = ((v23 + ((v23 + v29) & ~v7)) & ~v7) + v17;
  }
  if (v30 + v17 + 1 > v39) {
    unint64_t v39 = v30 + v17 + 1;
  }
  unint64_t v40 = ((v23 + ((v23 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v17;
  if (v40 <= v39) {
    unint64_t v40 = v39;
  }
  if (v22 > v40) {
    unint64_t v40 = *(void *)(*(void *)(a3[4] - 8) + 64);
  }
  if (v35 <= v40) {
    unint64_t v41 = v40;
  }
  else {
    unint64_t v41 = v35;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_63;
  }
  unint64_t v42 = v41 + 1;
  char v43 = 8 * (v41 + 1);
  if ((v41 + 1) <= 3)
  {
    unsigned int v46 = ((a2 + ~(-1 << v43) - 241) >> v43) + 1;
    if (HIWORD(v46))
    {
      int v44 = *(_DWORD *)((char *)a1 + v42);
      if (!v44) {
        goto LABEL_63;
      }
      goto LABEL_55;
    }
    if (v46 > 0xFF)
    {
      int v44 = *(unsigned __int16 *)((char *)a1 + v42);
      if (!*(unsigned __int16 *)((char *)a1 + v42)) {
        goto LABEL_63;
      }
      goto LABEL_55;
    }
    if (v46 < 2)
    {
LABEL_63:
      unsigned int v48 = *((unsigned __int8 *)a1 + v41);
      if (v48 >= 0xF) {
        return (v48 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v44 = *((unsigned __int8 *)a1 + v42);
  if (!*((unsigned char *)a1 + v42)) {
    goto LABEL_63;
  }
LABEL_55:
  int v47 = (v44 - 1) << v43;
  if (v42 > 3) {
    int v47 = 0;
  }
  if (v42)
  {
    if (v42 > 3) {
      LODWORD(v42) = 4;
    }
    switch((int)v42)
    {
      case 2:
        LODWORD(v42) = *a1;
        break;
      case 3:
        LODWORD(v42) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v42) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v42) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v42 | v47) + 242;
}

void sub_24ED01DE4(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80);
  unint64_t v6 = *(void *)(*(void *)(a4[3] - 8) + 64);
  uint64_t v7 = *(void *)(sub_24EE55880() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = v6 + v8 + 1;
  uint64_t v50 = (v10 + ((v5 + 248) & ~v5)) & ~v8;
  int v49 = *(_DWORD *)(v7 + 84);
  unint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = *(void *)(a4[2] - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  int v15 = *(_DWORD *)(v12 + 84);
  if (v11 > v6) {
    unint64_t v6 = *(void *)(v7 + 64);
  }
  uint64_t v16 = *(void *)(sub_24EE55960() - 8);
  uint64_t v17 = *(void *)(a4[4] - 8);
  if (v49) {
    unint64_t v18 = v11;
  }
  else {
    unint64_t v18 = v11 + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = *(void *)(v16 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v17 + 80);
  int v22 = *(_DWORD *)(v17 + 84);
  unint64_t v23 = *(void *)(*(void *)(a4[4] - 8) + 64);
  uint64_t v24 = v18 + v8;
  uint64_t v25 = v18 + v13;
  if (v15) {
    uint64_t v26 = v14;
  }
  else {
    uint64_t v26 = v14 + 1;
  }
  unint64_t v27 = (((v24 & ~v8) + v18 + v19) & ~v19) + v20;
  if (v27 <= v6) {
    unint64_t v27 = v6;
  }
  if (v27 + 1 > ((v14 + v13 + ((v18 + v13 + ((v18 + v8 + ((v18 + v8 + v50) & ~v8)) & ~v8)) & ~v13)) & ~v13) + v26) {
    unint64_t v28 = v27 + 1;
  }
  else {
    unint64_t v28 = ((v14 + v13 + ((v18 + v13 + ((v18 + v8 + ((v18 + v8 + v50) & ~v8)) & ~v8)) & ~v13)) & ~v13) + v26;
  }
  uint64_t v29 = v9 & ~v8;
  uint64_t v31 = (v9 + ((v5 + 64) & ~v5)) & ~v8;
  uint64_t v32 = (((v26 + v13 + ((v25 + ((v24 + ((v24 + ((v10 + ((v5 + 224) & ~v5)) & ~v8)) & ~v8)) & ~v8)) & ~v13)) & ~v13)
       + v26
       + v21) & ~v21;
  if (v22) {
    unint64_t v33 = *(void *)(*(void *)(a4[4] - 8) + 64);
  }
  else {
    unint64_t v33 = v23 + 1;
  }
  unint64_t v34 = v33 + v32;
  if (v34 <= v28) {
    unint64_t v34 = v28;
  }
  unint64_t v35 = v26 + ((v25 + ((v24 + ((v8 + 64) & ~v8)) & ~v8)) & ~v13);
  if (v35 <= v34) {
    unint64_t v35 = v34;
  }
  unint64_t v36 = ((v29 + v18 + v8) & ~v8) + v18;
  if (((v36 + v8) & ~v8) + v18 > v35) {
    unint64_t v35 = ((v36 + v8) & ~v8) + v18;
  }
  unint64_t v37 = ((v8 + ((v29 + v18) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v18;
  if (v37 > v35) {
    unint64_t v35 = ((v8 + ((v29 + v18) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v18;
  }
  unint64_t v38 = ((v24 + ((v9 + ((v5 + 24) & ~v5)) & ~v8)) & ~v8) + v18;
  if (v38 <= v35) {
    unint64_t v38 = v35;
  }
  if (v37 > v38) {
    unint64_t v38 = ((v8 + ((v29 + v18) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v18;
  }
  unint64_t v39 = ((v24 + ((v24 + ((v9 + ((v5 + 104) & ~v5)) & ~v8)) & ~v8)) & ~v8) + v18;
  if (v39 <= v38) {
    unint64_t v39 = v38;
  }
  unint64_t v40 = ((v25 + ((v24 + ((v24 + ((v24 + ((v9 + ((v5 + 160) & ~v5)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v13) + v26;
  if (v40 <= v39) {
    unint64_t v40 = v39;
  }
  uint64_t v30 = (v9 + ((v5 + 56) & ~v5)) & ~v8;
  if (((v24 + ((v24 + v30) & ~v8)) & ~v8) + v18 > v40) {
    unint64_t v40 = ((v24 + ((v24 + v30) & ~v8)) & ~v8) + v18;
  }
  if (v31 + v18 + 1 > v40) {
    unint64_t v40 = v31 + v18 + 1;
  }
  unint64_t v41 = ((v24 + ((v24 + ((v9 + ((v5 + 128) & ~v5)) & ~v8)) & ~v8)) & ~v8) + v18;
  if (v41 <= v40) {
    unint64_t v41 = v40;
  }
  if (v23 > v41) {
    unint64_t v41 = *(void *)(*(void *)(a4[4] - 8) + 64);
  }
  if (v36 > v41) {
    unint64_t v41 = v36;
  }
  size_t v42 = v41 + 1;
  if (a3 < 0xF2)
  {
    int v44 = 0;
    char v43 = a1;
  }
  else
  {
    char v43 = a1;
    if (v42 <= 3)
    {
      unsigned int v47 = ((a3 + ~(-1 << (8 * v42)) - 241) >> (8 * v42)) + 1;
      if (HIWORD(v47))
      {
        int v44 = 4;
      }
      else if (v47 >= 0x100)
      {
        int v44 = 2;
      }
      else
      {
        int v44 = v47 > 1;
      }
    }
    else
    {
      int v44 = 1;
    }
  }
  if (a2 > 0xF1)
  {
    unsigned int v45 = a2 - 242;
    if (v42 < 4)
    {
      int v46 = (v45 >> (8 * v42)) + 1;
      if (v41 != -1)
      {
        int v48 = v45 & ~(-1 << (8 * v42));
        bzero(v43, v42);
        if (v42 == 3)
        {
          *(_WORD *)char v43 = v48;
          v43[2] = BYTE2(v48);
        }
        else if (v42 == 2)
        {
          *(_WORD *)char v43 = v48;
        }
        else
        {
          *char v43 = v48;
        }
      }
    }
    else
    {
      bzero(v43, v41 + 1);
      *(_DWORD *)char v43 = v45;
      int v46 = 1;
    }
    switch(v44)
    {
      case 1:
        v43[v42] = v46;
        break;
      case 2:
        *(_WORD *)&v43[v42] = v46;
        break;
      case 3:
LABEL_74:
        __break(1u);
        JUMPOUT(0x24ED023A4);
      case 4:
        *(_DWORD *)&v43[v42] = v46;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v44)
    {
      case 1:
        v43[v42] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_63;
      case 2:
        *(_WORD *)&v43[v42] = 0;
        goto LABEL_62;
      case 3:
        goto LABEL_74;
      case 4:
        *(_DWORD *)&v43[v42] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_63;
      default:
LABEL_62:
        if (a2) {
LABEL_63:
        }
          v43[v41] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24ED023CC(unsigned __int8 *a1, void *a2)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80);
  unint64_t v4 = *(void *)(*(void *)(a2[3] - 8) + 64);
  uint64_t v5 = *(void *)(sub_24EE55880() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v33 = v4 + v6 + 1;
  unint64_t v8 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v9 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v9 = v8 + 1;
  }
  uint64_t v10 = v9 + v6;
  uint64_t v11 = *(void *)(a2[2] - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  unint64_t v34 = ((v14 + v12 + ((v9 + v12 + ((v9 + v6 + ((v9 + v6 + ((v33 + ((v3 + 248) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v12)) & ~v12)
      + v15;
  if (v8 > v4) {
    unint64_t v4 = v8;
  }
  uint64_t v16 = *(void *)(sub_24EE55960() - 8);
  unint64_t v17 = (((v10 & ~v6) + v9 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
      + *(void *)(v16 + 64);
  if (v17 <= v4) {
    unint64_t v18 = v4;
  }
  else {
    unint64_t v18 = v17;
  }
  uint64_t v19 = *(void *)(a2[4] - 8);
  unint64_t v20 = (((v15 + v12 + ((v13 + ((v10 + ((v10 + ((v33 + ((v3 + 224) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v12)) & ~v12)
       + v15
       + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = *(void *)(v19 + 64);
  if (*(_DWORD *)(v19 + 84)) {
    unint64_t v22 = v21;
  }
  else {
    unint64_t v22 = v21 + 1;
  }
  unint64_t v23 = v22 + v20;
  unint64_t v24 = (v7 & ~v6) + v9;
  unint64_t v25 = ((v24 + v6) & ~v6) + v9;
  unint64_t v26 = ((v6 + (v24 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v6) + v9;
  unint64_t v27 = ((v7 + ((v3 + 64) & ~v3)) & ~v6) + v9;
  if (v26 <= v34) {
    unint64_t v26 = v34;
  }
  if (v26 <= v18 + 1) {
    unint64_t v28 = v18 + 1;
  }
  else {
    unint64_t v28 = v26;
  }
  if (v28 <= v23) {
    unint64_t v28 = v23;
  }
  if (v28 <= v15 + ((v13 + ((v10 + ((v6 + 64) & ~v6)) & ~v6)) & (unint64_t)~v12)) {
    unint64_t v28 = v15 + ((v13 + ((v10 + ((v6 + 64) & ~v6)) & ~v6)) & ~v12);
  }
  if (v28 <= ((v25 + v6) & ~v6) + v9) {
    unint64_t v28 = ((v25 + v6) & ~v6) + v9;
  }
  if (v28 <= ((v10 + ((v7 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v9) {
    unint64_t v28 = ((v10 + ((v7 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v9;
  }
  if (v28 <= ((v10 + ((v10 + ((v7 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9) {
    unint64_t v28 = ((v10 + ((v10 + ((v7 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9;
  }
  if (v28 <= ((v13 + ((v10 + ((v10 + ((v10 + ((v7 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & (unint64_t)~v12)
            + v15)
    unint64_t v28 = ((v13 + ((v10 + ((v10 + ((v10 + ((v7 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v12) + v15;
  if (v28 <= ((v10 + ((v10 + ((v7 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9) {
    unint64_t v28 = ((v10 + ((v10 + ((v7 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9;
  }
  if (v28 <= v27 + 1) {
    unint64_t v28 = v27 + 1;
  }
  if (v28 <= ((v10 + ((v10 + ((v7 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9) {
    unint64_t v28 = ((v10 + ((v10 + ((v7 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v9;
  }
  if (v28 <= v25) {
    unint64_t v28 = v25;
  }
  if (v28 > v21) {
    unint64_t v21 = v28;
  }
  uint64_t result = a1[v21];
  if (result >= 0xF)
  {
    if (v21 <= 3) {
      uint64_t v30 = v21;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *a1;
        if (v21 < 4) {
          goto LABEL_52;
        }
        goto LABEL_54;
      case 2:
        int v31 = *(unsigned __int16 *)a1;
        if (v21 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_52;
      case 3:
        int v31 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v21 < 4) {
          goto LABEL_52;
        }
        goto LABEL_54;
      case 4:
        int v31 = *(_DWORD *)a1;
        if (v21 < 4) {
LABEL_52:
        }
          uint64_t result = (v31 | ((result - 15) << (8 * v21))) + 15;
        else {
LABEL_54:
        }
          uint64_t result = (v31 + 15);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24ED028A8(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80);
  unint64_t v5 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v6 = *(void *)(sub_24EE55880() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v36 = v5 + v7 + 1;
  unint64_t v9 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    unint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v10 = v9 + 1;
  }
  uint64_t v11 = v10 + v7;
  uint64_t v12 = *(void *)(a3[2] - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  unint64_t v16 = ((v14 + v13 + ((v10 + v13 + ((v10 + v7 + ((v10 + v7 + ((v36 + ((v4 + 248) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13)
      + v15;
  if (v9 > v5) {
    unint64_t v5 = v9;
  }
  uint64_t v17 = *(void *)(sub_24EE55960() - 8);
  unint64_t v18 = (((v11 & ~v7) + v10 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
      + *(void *)(v17 + 64);
  if (v18 <= v5) {
    unint64_t v18 = v5;
  }
  if (v18 + 1 > v16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = v16;
  }
  uint64_t v20 = *(void *)(a3[4] - 8);
  uint64_t v34 = v10 + v13;
  unint64_t v21 = (((v15 + v13 + ((v10 + v13 + ((v11 + ((v11 + ((v36 + ((v4 + 224) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v13)) & ~v13)
       + v15
       + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  size_t v22 = *(void *)(v20 + 64);
  if (*(_DWORD *)(v20 + 84)) {
    size_t v23 = v22;
  }
  else {
    size_t v23 = v22 + 1;
  }
  unint64_t v24 = v23 + v21;
  if (v24 > v19) {
    unint64_t v19 = v24;
  }
  unint64_t v25 = v15 + ((v34 + ((v11 + ((v7 + 64) & ~v7)) & ~v7)) & ~v13);
  if (v25 <= v19) {
    unint64_t v25 = v19;
  }
  unint64_t v26 = (v8 & ~v7) + v10;
  size_t v27 = ((v26 + v7) & ~v7) + v10;
  if (((v27 + v7) & ~v7) + v10 > v25) {
    unint64_t v25 = ((v27 + v7) & ~v7) + v10;
  }
  unint64_t v28 = ((v7 + (v26 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v10;
  if (v28 > v25) {
    unint64_t v25 = v28;
  }
  if (((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10 > v25) {
    unint64_t v25 = ((v11 + ((v8 + ((v4 + 24) & ~v4)) & ~v7)) & ~v7) + v10;
  }
  if (v28 > v25) {
    unint64_t v25 = v28;
  }
  if (((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10 > v25) {
    unint64_t v25 = ((v11 + ((v11 + ((v8 + ((v4 + 104) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (((v34 + ((v11 + ((v11 + ((v11 + ((v8 + ((v4 + 160) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & (unint64_t)~v13)
     + v15 > v25)
    unint64_t v25 = ((v34 + ((v11 + ((v11 + ((v11 + ((v8 + ((v4 + 160) & ~v4)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v13) + v15;
  if (((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10 > v25) {
    unint64_t v25 = ((v11 + ((v11 + ((v8 + ((v4 + 56) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  unint64_t v29 = ((v8 + ((v4 + 64) & ~v4)) & ~v7) + v10;
  if (v29 + 1 > v25) {
    unint64_t v25 = v29 + 1;
  }
  if (((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10 > v25) {
    unint64_t v25 = ((v11 + ((v11 + ((v8 + ((v4 + 128) & ~v4)) & ~v7)) & ~v7)) & ~v7) + v10;
  }
  if (v22 <= v25) {
    size_t v22 = v25;
  }
  if (v27 <= v22) {
    size_t v30 = v22;
  }
  else {
    size_t v30 = v27;
  }
  if (a2 > 0xE)
  {
    if (v30 <= 3) {
      char v31 = ((a2 - 15) >> (8 * v30)) + 15;
    }
    else {
      char v31 = 15;
    }
    if (v30 <= 3) {
      int v32 = (a2 - 15) & ~(-1 << (8 * v30));
    }
    else {
      int v32 = a2 - 15;
    }
    a1[v30] = v31;
    if (v30 >= 4) {
      int v33 = 4;
    }
    else {
      int v33 = v30;
    }
    bzero(a1, v30);
    switch(v33)
    {
      case 2:
        *(_WORD *)a1 = v32;
        break;
      case 3:
        *(_WORD *)a1 = v32;
        a1[2] = BYTE2(v32);
        break;
      case 4:
        *(_DWORD *)a1 = v32;
        break;
      default:
        *a1 = v32;
        break;
    }
  }
  else
  {
    a1[v30] = a2;
  }
}

void sub_24ED02DA0()
{
  if (!qword_26B1DB9F8)
  {
    sub_24EE55880();
    unint64_t v0 = sub_24EE57430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1DB9F8);
    }
  }
}

uint64_t sub_24ED02DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24ED02E00(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24ED02E90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED02F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

uint64_t sub_24ED02F84(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24ED03014(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED030E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VerticalStackCardLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24ED0319C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED03268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

unsigned char *sub_24ED0329C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED03368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_24ED03390(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED0345CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_24ED03484(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED03550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24ED03578(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ED03614);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CanvasSectionDensityFactor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24ED036CC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED03798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24ED037C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED037DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED037F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03814()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03830()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED0384C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03868()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03884()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED038A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED038BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED038D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED038F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03910()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED0392C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03948()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03964()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03980()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED0399C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED039B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED039D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED039F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A28()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A44()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A60()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03A98()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03AB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03AD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03AEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B08()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B24()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B40()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B78()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03B94()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03BB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03BCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03BE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C04()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C20()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C58()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C74()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03C90()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03CAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03CC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03CE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED03D00()
{
  return 8;
}

uint64_t sub_24ED03D08()
{
  return 15;
}

uint64_t sub_24ED03D10()
{
  return 9;
}

uint64_t sub_24ED03D18()
{
  return 4;
}

uint64_t sub_24ED03D20()
{
  return 3;
}

void sub_24ED03D3C()
{
  xmmword_269977F90 = 0uLL;
}

double sub_24ED03D4C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_26B1DD248 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_269977F90;
  *a1 = xmmword_269977F90;
  return result;
}

uint64_t sub_24ED03DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_24ED03EAC();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double sub_24ED03E0C()
{
  sub_24ED03E48();
  sub_24EE56060();
  return v1;
}

unint64_t sub_24ED03E48()
{
  unint64_t result = qword_26B1DD250;
  if (!qword_26B1DD250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD250);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerSize()
{
  return &type metadata for ContainerSize;
}

unint64_t sub_24ED03EAC()
{
  unint64_t result = qword_269965400[0];
  if (!qword_269965400[0])
  {
    type metadata accessor for CGSize(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269965400);
  }
  return result;
}

void sub_24ED03F04()
{
  sub_24EC96368();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_24ED03FF0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 57) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v8];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v18 = v8;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v16 = v19 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = v8 + 1;
    uint64_t v21 = ~v11;
    if (v16 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v22 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v22 = 0;
    }
    *((unsigned char *)a1 + v8) = v22;
    unint64_t v23 = ((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = (unint64_t)&a2[v20 + 7] & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    uint64_t v25 = *(void *)(v24 + 16);
    *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
    *(void *)(v23 + 16) = v25;
    unint64_t v26 = ((unint64_t)a1 + v20 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (unint64_t)&a2[v20 + 39] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = *(void *)(v27 + 8);
    *(void *)unint64_t v26 = *(void *)v27;
    *(void *)(v26 + 8) = v28;
    *(unsigned char *)(v26 + 16) = *(unsigned char *)(v27 + 16);
    uint64_t v29 = v27 + v11;
    uint64_t v30 = (v26 + v11 + 17) & v21;
    uint64_t v31 = (v29 + 17) & v21;
    int v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v32(v30, v31, v9);
  }
  return a1;
}

uint64_t sub_24ED042C0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55D70();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = *(void *)(*(void *)(a2 + 24) - 8);
  unsigned int v12 = *(uint64_t (**)(unint64_t))(v11 + 8);
  unint64_t v13 = (((unint64_t)&a1[v5 + 40] & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return v12(v13);
}

void *sub_24ED04470(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v13 = 0;
  }
  *((unsigned char *)a1 + v7) = v13;
  uint64_t v14 = (char *)a1 + v7 + 1;
  uint64_t v15 = &a2[v7 + 1];
  unint64_t v16 = (unint64_t)(v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (unint64_t)(v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  uint64_t v18 = *(void *)(v17 + 16);
  *(unsigned char *)(v16 + 24) = *(unsigned char *)(v17 + 24);
  *(void *)(v16 + 16) = v18;
  unint64_t v19 = (unint64_t)(v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)(v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)unint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v22 = *(void *)(a3 + 24);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = (v25 + 17 + v19) & ~v25;
  uint64_t v27 = (v25 + 17 + v20) & ~v25;
  swift_retain();
  swift_retain();
  swift_retain();
  v24(v26, v27, v22);
  return a1;
}

unsigned __int8 *sub_24ED04698(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 1;
  unint64_t v19 = &a1[v18];
  unint64_t v20 = &a2[v18];
  unint64_t v21 = (unint64_t)&a1[v18 + 7] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (unint64_t)&a2[v18 + 7] & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  swift_retain();
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  uint64_t v23 = *(void *)(v22 + 16);
  *(unsigned char *)(v21 + 24) = *(unsigned char *)(v22 + 24);
  *(void *)(v21 + 16) = v23;
  unint64_t v24 = (unint64_t)(v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (unint64_t)(v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_retain();
  swift_release();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  uint64_t v27 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 24))((*(unsigned __int8 *)(v27 + 80) + 17 + v24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(unsigned __int8 *)(v27 + 80) + 17 + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

void *sub_24ED049F8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v13;
  unsigned int v14 = (char *)a1 + v7 + 1;
  uint64_t v15 = &a2[v7 + 1];
  int v16 = (_OWORD *)((unint64_t)(v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (long long *)((unint64_t)(v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v18 = *v17;
  *(_OWORD *)((char *)v16 + 9) = *(long long *)((char *)v17 + 9);
  _OWORD *v16 = v18;
  unint64_t v19 = (unint64_t)(v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)(v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 32))((*(unsigned __int8 *)(v21 + 80) + 17 + v19) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 17 + v20) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

unsigned __int8 *sub_24ED04BDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 1;
  unint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  unint64_t v22 = (unint64_t)&a1[v19 + 7] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (unint64_t)(v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v22 = *(void *)v23;
  swift_release();
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  swift_release();
  uint64_t v24 = *(void *)(v23 + 16);
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 16) = v24;
  unint64_t v25 = (unint64_t)(v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (unint64_t)(v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  swift_release();
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  uint64_t v27 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(unsigned __int8 *)(v27 + 80) + 17 + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(unsigned __int8 *)(v27 + 80) + 17 + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_24ED04F18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v11) {
    goto LABEL_27;
  }
  unint64_t v12 = (((v7 & 0xFFFFFFFFFFFFFFF8) + v10 + 57) & ~v10) + *(void *)(v8 + 64);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((a2 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_27:
      if ((v9 & 0x80000000) != 0)
      {
        uint64_t v21 = *(uint64_t (**)(unint64_t))(v8 + 48);
        return v21(((((unint64_t)a1 + v7 + 40) & 0xFFFFFFFFFFFFFFF8) + v10 + 17) & ~v10);
      }
      else
      {
        unint64_t v20 = *(void *)((((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v20 >= 0xFFFFFFFF) {
          LODWORD(v20) = -1;
        }
        return (v20 + 1);
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v18 = v12;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v11 + (v19 | v17) + 1;
}

void sub_24ED0514C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  size_t v14 = (((v9 & 0xFFFFFFFFFFFFFFF8) + v12 + 57) & ~v12) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v16 = ~v13 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24ED05408);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        unint64_t v20 = &a1[v9];
        if ((v11 & 0x80000000) != 0)
        {
          unint64_t v22 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v22((((unint64_t)(v20 + 40) & 0xFFFFFFFFFFFFFFF8) + v12 + 17) & ~v12, a2);
        }
        else
        {
          unint64_t v21 = (unint64_t)(v20 + 8) & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v21 + 8) = 0;
            *(void *)(v21 + 16) = 0;
            *(unsigned char *)(v21 + 24) = 0;
            *(void *)unint64_t v21 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v21 + 8) = (a2 - 1);
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for HeightReader()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED05448()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED0548C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654B0);
  MEMORY[0x25334D320](&v2, v0);
  return v2;
}

uint64_t sub_24ED054F0()
{
  return sub_24EE56C70();
}

uint64_t sub_24ED0555C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  swift_storeEnumTagMultiPayload();
  int v17 = (int *)type metadata accessor for HeightReader();
  unsigned int v18 = (uint64_t *)((char *)a9 + v17[14]);
  void *v18 = a7;
  v18[1] = a8;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))((char *)a9 + v17[16], a5, a11);
  *((unsigned char *)a9 + v17[15]) = a6;
  unint64_t v20 = (char *)a9 + v17[13];
  *(void *)unint64_t v20 = a1;
  *((void *)v20 + 1) = a2;
  *((void *)v20 + 2) = a3;
  v20[24] = a4 & 1;
  return result;
}

uint64_t sub_24ED0567C(uint64_t a1, double a2)
{
  if (*(unsigned char *)(v2 + *(int *)(a1 + 60)) != 1) {
    return 0;
  }
  double v4 = COERCE_DOUBLE(sub_24ED0548C());
  if (v5) {
    double v4 = 0.0;
  }
  if (v4 <= a2) {
    double v4 = a2;
  }
  return *(void *)&v4;
}

uint64_t sub_24ED056E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v91 = *(void *)(*(void *)(a1 + 24) - 8);
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t v90 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v2;
  uint64_t v87 = *(void *)(v2 - 8);
  uint64_t v88 = *(void *)(v87 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v98 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EE55D70();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v81 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v79 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v7);
  unsigned int v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE330);
  uint64_t v12 = sub_24EE55DD0();
  uint64_t v85 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v94 = (char *)&v65 - v13;
  uint64_t v14 = *(void *)(v4 + 32);
  uint64_t v15 = sub_24EC8C218(&qword_26B1DE328, &qword_26B1DE330);
  uint64_t v108 = v14;
  uint64_t v109 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_24ED08B6C((unint64_t *)&qword_2699649E8, MEMORY[0x263F18D80]);
  uint64_t v104 = v12;
  uint64_t v105 = v6;
  uint64_t v18 = v12;
  uint64_t v72 = v12;
  uint64_t v71 = v6;
  uint64_t v106 = WitnessTable;
  uint64_t v107 = v17;
  uint64_t v74 = WitnessTable;
  uint64_t v73 = v17;
  uint64_t v19 = MEMORY[0x263F1B270];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = OpaqueTypeMetadata2;
  uint64_t v86 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v97 = (char *)&v65 - v21;
  uint64_t v104 = v18;
  uint64_t v105 = v6;
  uint64_t v106 = WitnessTable;
  uint64_t v107 = v17;
  uint64_t v82 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v4;
  uint64_t v22 = *(void *)(*(void *)(v4 + 40) + 24);
  uint64_t v93 = *(void *)(v4 + 40);
  uint64_t v23 = v93;
  uint64_t v76 = *(void *)(v22 + 8);
  uint64_t v24 = v95;
  uint64_t v104 = OpaqueTypeMetadata2;
  uint64_t v105 = v95;
  uint64_t v106 = OpaqueTypeConformance2;
  uint64_t v107 = v76;
  uint64_t v83 = swift_getOpaqueTypeMetadata2();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v83);
  size_t v75 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v80 = (char *)&v65 - v28;
  uint64_t v29 = v96;
  (*(void (**)(uint64_t))(v96 + *(int *)(v4 + 56)))(v27);
  uint64_t v99 = v9;
  uint64_t v100 = v24;
  uint64_t v101 = v14;
  uint64_t v102 = v23;
  uint64_t v103 = v29;
  sub_24EE56DA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE0A0);
  sub_24EC8C218(&qword_26B1DE098, &qword_26B1DE0A0);
  uint64_t v30 = v14;
  uint64_t v70 = v14;
  sub_24EE566D0();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v79 + 8);
  uint64_t v32 = v9;
  uint64_t v69 = v9;
  v31(v11, v9);
  uint64_t v33 = v81;
  sub_24EE187B4(v81);
  uint64_t v34 = v87;
  uint64_t v79 = *(void *)(v87 + 16);
  unint64_t v35 = v98;
  uint64_t v36 = v66;
  ((void (*)(char *, uint64_t, uint64_t))v79)(v98, v29, v66);
  uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
  v88 += (v37 + 48) & ~v37;
  uint64_t v38 = (v37 + 48) & ~v37;
  uint64_t v68 = v38;
  uint64_t v67 = v37 | 7;
  unint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v95;
  *((void *)v39 + 2) = v32;
  *((void *)v39 + 3) = v40;
  uint64_t v41 = v93;
  *((void *)v39 + 4) = v30;
  *((void *)v39 + 5) = v41;
  size_t v42 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v43 = v36;
  v42(&v39[v38], v35, v36);
  uint64_t v44 = v72;
  uint64_t v45 = v71;
  int v46 = v94;
  sub_24EE56A30();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v33, v45);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v46, v44);
  uint64_t v47 = v43;
  uint64_t v48 = v96;
  uint64_t v49 = v96 + *(int *)(v43 + 64);
  uint64_t v50 = v91;
  uint64_t v51 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v49, v40);
  uint64_t v52 = v98;
  ((void (*)(char *, uint64_t, uint64_t))v79)(v98, v48, v47);
  size_t v53 = (char *)swift_allocObject();
  *((void *)v53 + 2) = v69;
  *((void *)v53 + 3) = v40;
  uint64_t v54 = v40;
  uint64_t v55 = v93;
  *((void *)v53 + 4) = v70;
  *((void *)v53 + 5) = v55;
  v42(&v53[v68], v52, v47);
  uint64_t v56 = v75;
  uint64_t v57 = v78;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v59 = v76;
  size_t v60 = v97;
  sub_24EE56A30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v54);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v60, v57);
  uint64_t v104 = v57;
  uint64_t v105 = v54;
  uint64_t v106 = v58;
  uint64_t v107 = v59;
  swift_getOpaqueTypeConformance2();
  uint64_t v61 = v80;
  uint64_t v62 = v83;
  sub_24EC90894(v56);
  unsigned int v63 = *(void (**)(char *, uint64_t))(v84 + 8);
  v63(v56, v62);
  sub_24EC90894(v61);
  return ((uint64_t (*)(char *, uint64_t))v63)(v61, v62);
}

uint64_t sub_24ED06054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  unint64_t v20 = a6;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v11 = type metadata accessor for HeightReader();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v19 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v19 - v13, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unsigned int v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, v11);
  uint64_t v18 = v20;
  char *v20 = sub_24ED08408;
  v18[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v16;
  return result;
}

uint64_t sub_24ED061B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  uint64_t v55 = a7;
  uint64_t v51 = sub_24EE55CB0() - 8;
  MEMORY[0x270FA5388](v51);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EE57250();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24EE55C30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v43 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v18 = type metadata accessor for HeightReader();
  uint64_t v42 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE198);
  MEMORY[0x270FA5388](v56);
  uint64_t v44 = (uint64_t *)((char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_24EE56AB0();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v50(v22, v62, v18);
  uint64_t v24 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v61, v15);
  uint64_t v25 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v26 = (v25 + 48) & ~v25;
  uint64_t v47 = v26;
  uint64_t v48 = v25 | 7;
  uint64_t v49 = v26 + v20;
  unint64_t v27 = (v26 + v20 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  uint64_t v29 = v58;
  *((void *)v28 + 2) = v57;
  *((void *)v28 + 3) = v29;
  uint64_t v30 = v60;
  *((void *)v28 + 4) = v59;
  *((void *)v28 + 5) = v30;
  uint64_t v31 = &v28[v26];
  int v46 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v32 = v42;
  v46(v31, v22, v42);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v28[v27], v43, v24);
  uint64_t v33 = v52;
  sub_24EE57230();
  uint64_t v35 = v53;
  uint64_t v34 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v12[*(int *)(v51 + 28)], v33, v54);
  *(void *)uint64_t v12 = &unk_2699654D0;
  *((void *)v12 + 1) = v28;
  uint64_t v36 = v44;
  sub_24ED08940((uint64_t)v12, (uint64_t)v44 + *(int *)(v56 + 36));
  *uint64_t v36 = v45;
  swift_retain();
  sub_24ED089A4((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
  swift_release();
  sub_24EE55C00();
  uint64_t v63 = v37;
  v50(v22, v62, v32);
  uint64_t v38 = (char *)swift_allocObject();
  uint64_t v39 = v58;
  *((void *)v38 + 2) = v57;
  *((void *)v38 + 3) = v39;
  uint64_t v40 = v60;
  *((void *)v38 + 4) = v59;
  *((void *)v38 + 5) = v40;
  v46(&v38[v47], v22, v32);
  sub_24ED08AC0();
  sub_24EC96BA0();
  sub_24EE56A20();
  swift_release();
  return sub_24EC88758((uint64_t)v36, &qword_26B1DE198);
}

uint64_t sub_24ED066AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  uint64_t v7 = sub_24EE575F0();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  sub_24EE57220();
  v6[15] = sub_24EE57210();
  uint64_t v9 = sub_24EE57200();
  v6[16] = v9;
  v6[17] = v8;
  return MEMORY[0x270FA2498](sub_24ED067A8, v9, v8);
}

uint64_t sub_24ED067A8()
{
  uint64_t v1 = sub_24EE578E0();
  uint64_t v3 = v2;
  sub_24EE575E0();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2699654A8 + dword_2699654A8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24ED06888;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24ED06888()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[14];
  uint64_t v5 = v2[13];
  uint64_t v6 = v2[12];
  if (v0)
  {
    MEMORY[0x25334E370](v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[16];
    uint64_t v8 = v3[17];
    uint64_t v9 = sub_24ED08D24;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[16];
    uint64_t v8 = v3[17];
    uint64_t v9 = sub_24ED06A1C;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_24ED06A1C()
{
  long long v6 = *(_OWORD *)(v0 + 80);
  long long v7 = *(_OWORD *)(v0 + 64);
  swift_release();
  sub_24EE55C00();
  double v2 = v1;
  *(_OWORD *)(v0 + 16) = v7;
  *(_OWORD *)(v0 + 32) = v6;
  uint64_t v3 = type metadata accessor for HeightReader();
  sub_24ED0567C(v3, v2);
  sub_24ED054F0();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24ED06AEC(uint64_t a1, double *a2)
{
  double v2 = *a2;
  uint64_t v3 = type metadata accessor for HeightReader();
  sub_24ED0567C(v3, v2);
  return sub_24ED054F0();
}

uint64_t sub_24ED06B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  uint64_t v9 = sub_24EE575F0();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  sub_24EE57220();
  v8[14] = sub_24EE57210();
  uint64_t v11 = sub_24EE57200();
  v8[15] = v11;
  v8[16] = v10;
  return MEMORY[0x270FA2498](sub_24ED06C48, v11, v10);
}

uint64_t sub_24ED06C48()
{
  uint64_t v1 = sub_24EE578E0();
  uint64_t v3 = v2;
  sub_24EE575E0();
  long long v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2699654A8 + dword_2699654A8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24ED06D28;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24ED06D28()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[12];
  uint64_t v6 = v2[11];
  if (v0)
  {
    MEMORY[0x25334E370](v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[15];
    uint64_t v8 = v3[16];
    uint64_t v9 = sub_24ED08D20;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[15];
    uint64_t v8 = v3[16];
    uint64_t v9 = sub_24ED06EBC;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_24ED06EBC()
{
  long long v3 = *(_OWORD *)(v0 + 72);
  long long v4 = *(_OWORD *)(v0 + 56);
  swift_release();
  *(_OWORD *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 32) = v3;
  type metadata accessor for HeightReader();
  sub_24ED054F0();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24ED06F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE57250();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24EE57240();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24EC88758(a1, &qword_26B1DE530);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24EE57200();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24ED07114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a5;
  uint64_t v27 = a7;
  uint64_t v25 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v10 = type metadata accessor for HeightReader();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE530);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EE57250();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  sub_24EE57220();
  uint64_t v18 = sub_24EE57210();
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = MEMORY[0x263F8F500];
  *((void *)v20 + 2) = v18;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = a2;
  *((void *)v20 + 5) = a3;
  uint64_t v22 = v26;
  *((void *)v20 + 6) = v25;
  *((void *)v20 + 7) = v22;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v19], v13, v10);
  sub_24ED06F68((uint64_t)v16, v27, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_24ED0731C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  uint64_t v9 = sub_24EE575F0();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  sub_24EE57220();
  v8[14] = sub_24EE57210();
  uint64_t v11 = sub_24EE57200();
  v8[15] = v11;
  v8[16] = v10;
  return MEMORY[0x270FA2498](sub_24ED07418, v11, v10);
}

uint64_t sub_24ED07418()
{
  uint64_t v1 = sub_24EE578E0();
  uint64_t v3 = v2;
  sub_24EE575E0();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2699654A8 + dword_2699654A8);
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *long long v4 = v0;
  v4[1] = sub_24ED074F8;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24ED074F8()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[12];
  uint64_t v6 = v2[11];
  if (v0) {
    MEMORY[0x25334E370](v0);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v7 = v3[15];
  uint64_t v8 = v3[16];
  return MEMORY[0x270FA2498](sub_24ED08D20, v7, v8);
}

uint64_t sub_24ED07690@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_24ED06054(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24ED076A4()
{
  return sub_24ED076E8((uint64_t)&unk_27008FFC8, (uint64_t)&unk_2699654C0);
}

uint64_t sub_24ED076C8()
{
  return sub_24ED076E8((uint64_t)&unk_27008FF78, (uint64_t)&unk_269965490);
}

uint64_t sub_24ED076E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for HeightReader() - 8);
  return sub_24ED07114((uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v5, v6, v7, v8, a1, a2);
}

uint64_t sub_24ED0779C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  uint64_t v8 = *(void *)(type metadata accessor for HeightReader() - 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  v2[6] = v12;
  void *v12 = v2;
  v12[1] = sub_24ED08D28;
  return sub_24ED0731C(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_24ED078C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_24EE575D0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_24ED079C4, 0, 0);
}

uint64_t sub_24ED079C4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_24EE575F0();
  uint64_t v5 = sub_24ED08B6C(&qword_26B1DE5B0, MEMORY[0x263F8F710]);
  sub_24EE57810();
  sub_24ED08B6C(&qword_26B1DE5A8, MEMORY[0x263F8F6D8]);
  sub_24EE57600();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24ED07B64;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_24ED07B64()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24ED07D20, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_24ED07D20()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24ED07D8C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24ED07E68;
  return v6(a1);
}

uint64_t sub_24ED07E68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24ED07F60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24ED07F98(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24ED08050;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269965498 + dword_269965498);
  return v6(a1, v4);
}

uint64_t sub_24ED08050()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t objectdestroy_6Tm()
{
  long long v5 = *(_OWORD *)(v0 + 40);
  uint64_t v1 = type metadata accessor for HeightReader();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2 + *(int *)(v1 + 64));
  return swift_deallocObject();
}

uint64_t sub_24ED082E0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  uint64_t v8 = *(void *)(type metadata accessor for HeightReader() - 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  v2[6] = v12;
  void *v12 = v2;
  v12[1] = sub_24ED08D28;
  return sub_24ED06B4C(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_24ED08408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for HeightReader() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return sub_24ED061B4(a1, v10, v5, v6, v7, v8, a2);
}

uint64_t sub_24ED084C4()
{
  long long v9 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = type metadata accessor for HeightReader();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_24EE55C30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(v9 - 8) + 8))(v0 + v2 + *(int *)(v1 + 64));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_24ED086E0()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  uint64_t v6 = *(void *)(type metadata accessor for HeightReader() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_24EE55C30() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = (uint64_t)v0 + v7;
  uint64_t v12 = (uint64_t)v0 + (v10 & ~v9);
  uint64_t v13 = (void *)swift_task_alloc();
  v1[6] = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_24ED0884C;
  return sub_24ED066AC(v11, v12, v3, v2, v4, v5);
}

uint64_t sub_24ED0884C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24ED08940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED089A4(uint64_t a1)
{
  uint64_t v2 = sub_24EE55CB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24ED08A04(uint64_t a1, double *a2)
{
  type metadata accessor for HeightReader();
  return sub_24ED06AEC(a1, a2);
}

unint64_t sub_24ED08AC0()
{
  unint64_t result = qword_26B1DE190;
  if (!qword_26B1DE190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE198);
    sub_24ED08B6C(&qword_26B1DE080, MEMORY[0x263F189F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE190);
  }
  return result;
}

uint64_t sub_24ED08B6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED08BBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED08D2C()
{
  uint64_t result = sub_24EE57430();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24ED08DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    uint64_t v11 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    uint64_t v13 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v11;
    v13[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24ED08F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return swift_release();
}

char *sub_24ED0900C(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v13 = v12 + 7;
  unint64_t v14 = (unint64_t)&a1[v13];
  uint64_t v15 = (uint64_t *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = (void *)(v14 & 0xFFFFFFFFFFFFFFF8);
  void *v18 = v17;
  v18[1] = v16;
  swift_retain();
  return a1;
}

void *sub_24ED09134(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = v13 + 7;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24ED092E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_24ED0940C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24ED095B8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ED09740);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_27:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v19 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    return (v19 + 1);
  }
  else
  {
    unsigned int v18 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v18 >= 2) {
      return v18 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_24ED09754(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  size_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v11;
  }
  size_t v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 < a3)
  {
    unsigned int v13 = a3 - v10;
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v6 = v15;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v16 = a2 - v10;
    }
    else {
      int v16 = 1;
    }
    if (((v11 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v17 = ~v10 + a2;
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v16;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v12] = v16;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x24ED099DCLL);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v9 < 0x7FFFFFFF)
        {
          uint64_t v21 = (void *)((unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v21 = a2 ^ 0x80000000;
            v21[1] = 0;
          }
          else
          {
            *uint64_t v21 = a2 - 1;
          }
        }
        else if (v9 >= a2)
        {
          uint64_t v22 = *(void (**)(void))(v7 + 56);
          v22();
        }
        else
        {
          if (v11 <= 3) {
            int v18 = ~(-1 << (8 * v11));
          }
          else {
            int v18 = -1;
          }
          if (v11)
          {
            int v19 = v18 & (~v9 + a2);
            if (v11 <= 3) {
              int v20 = v11;
            }
            else {
              int v20 = 4;
            }
            bzero(a1, v11);
            switch(v20)
            {
              case 2:
                *(_WORD *)a1 = v19;
                break;
              case 3:
                *(_WORD *)a1 = v19;
                a1[2] = BYTE2(v19);
                break;
              case 4:
                *(_DWORD *)a1 = v19;
                break;
              default:
                *a1 = v19;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CanvasContextMenu()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED09A2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED09A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v58 = a1;
  uint64_t v62 = a3;
  swift_getWitnessTable();
  uint64_t v6 = sub_24EE562F0();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v46 - v10;
  uint64_t v50 = *(void *)(*(void *)(a2 + 24) - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v12;
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v51 = (char *)&v46 - v17;
  uint64_t v57 = a2;
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = sub_24EE57430();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v46 - v22;
  uint64_t v24 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v56 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24EE56240();
  uint64_t v60 = *(void *)(v26 - 8);
  uint64_t v61 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v59 = (char *)&v46 - v27;
  uint64_t v28 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v4, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v30 = v53;
    sub_24EC90894(v58);
    uint64_t v31 = (uint64_t)v52;
    sub_24EC90894(v30);
    uint64_t v32 = *(void *)(v57 + 40);
    uint64_t v69 = WitnessTable;
    uint64_t v70 = v32;
    swift_getWitnessTable();
    uint64_t v33 = v59;
    sub_24EC909C8(v31, v13, v6);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v34(v31, v6);
    v34((uint64_t)v30, v6);
  }
  else
  {
    uint64_t v47 = v24;
    uint64_t v35 = v56;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v56, v23, v18);
    uint64_t v36 = v57;
    uint64_t v37 = v48;
    (*(void (**)(char *))(v28 + *(int *)(v57 + 52)))(v35);
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v39 = v49;
    MEMORY[0x25334D0C0](v37, v6, v49, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v39);
    uint64_t v58 = *(void *)(v36 + 40);
    uint64_t v63 = v38;
    uint64_t v64 = v58;
    swift_getWitnessTable();
    uint64_t v40 = v51;
    sub_24EC90894(v16);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v54 + 8);
    v41(v16, v13);
    sub_24EC90894(v40);
    uint64_t v33 = v59;
    sub_24EC908D0((uint64_t)v16, v13);
    v41(v16, v13);
    uint64_t v42 = v40;
    uint64_t v32 = v58;
    v41(v42, v13);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v56, v18);
  }
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v67 = v43;
  uint64_t v68 = v32;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = v43;
  uint64_t v44 = v61;
  swift_getWitnessTable();
  sub_24EC90894(v33);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v33, v44);
}

uint64_t sub_24ED0A178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for CanvasContextMenu();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 52));
  void *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t sub_24ED0A238()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED0A354@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v14 = *((void *)a1 + 2);
  char v15 = *((unsigned char *)a1 + 24);
  long long v26 = a1[2];
  long long v27 = *a1;
  uint64_t v16 = *((void *)a1 + 6);
  uint64_t v17 = *((void *)a1 + 7);
  char v18 = *a7;
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (int *)type metadata accessor for TallCardView();
  uint64_t v20 = (uint64_t *)((char *)a9 + v19[9]);
  sub_24EE56B30();
  void *v20 = v31;
  v20[1] = v32;
  uint64_t v21 = (char *)a9 + v19[10];
  *(_OWORD *)uint64_t v21 = v27;
  *((void *)v21 + 2) = v14;
  v21[24] = v15;
  *((_OWORD *)v21 + 2) = v26;
  *((void *)v21 + 6) = v16;
  *((void *)v21 + 7) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))((char *)a9 + v19[11], a2, a10);
  uint64_t v22 = (uint64_t *)((char *)a9 + v19[12]);
  void *v22 = a3;
  v22[1] = a4;
  v22[2] = a5;
  v22[3] = a6;
  *((unsigned char *)a9 + v19[13]) = v18;
  uint64_t v23 = (char *)a9 + v19[14];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a8, v24);
}

double TallCardViewLayout.artworkAspectRatio.getter()
{
  return *(double *)v0;
}

double TallCardViewLayout.artworkCornerRadius.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t TallCardViewLayout.isAccessibilityLayout.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

double TallCardViewLayout.minimumTitleHeight.getter()
{
  return *(double *)(v0 + 32);
}

double TallCardViewLayout.overlayHeightRatio.getter()
{
  return *(double *)(v0 + 40);
}

double TallCardViewLayout.titleHorizontalPadding.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t TallCardViewLayout.titleLineLimit.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TallCardViewLayout.init(artworkAspectRatio:artworkCornerRadius:isAccessibilityLayout:minimumTitleHeight:overlayHeightRatio:titleHorizontalPadding:titleLineLimit:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(unsigned char *)(a3 + 24) = result;
  *(double *)(a3 + 32) = a7;
  *(double *)(a3 + 40) = a8;
  *(double *)(a3 + 48) = a9;
  *(void *)(a3 + 56) = a2;
  return result;
}

unint64_t sub_24ED0A56C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x6E694C656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24ED0A63C()
{
  return sub_24ED0A56C(*v0);
}

uint64_t sub_24ED0A644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED102FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ED0A66C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24ED0A678(uint64_t a1)
{
  unint64_t v2 = sub_24ED0E2C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED0A6B4(uint64_t a1)
{
  unint64_t v2 = sub_24ED0E2C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TallCardViewLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  int v16 = *((unsigned __int8 *)v1 + 24);
  uint64_t v12 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED0E2C4();
  sub_24EE578D0();
  v15[0] = v8;
  v15[1] = v9;
  char v17 = 0;
  type metadata accessor for CGSize(0);
  sub_24ED1093C(&qword_26B1DE588, type metadata accessor for CGSize);
  sub_24EE577B0();
  if (!v2)
  {
    v15[0] = v10;
    char v17 = 1;
    sub_24ECB1664();
    sub_24EE577B0();
    LOBYTE(v15[0]) = 2;
    sub_24EE57780();
    v15[0] = v12;
    char v17 = 3;
    sub_24EE577B0();
    v15[0] = v11;
    char v17 = 4;
    sub_24EE577B0();
    v15[0] = v13;
    char v17 = 5;
    sub_24EE577B0();
    LOBYTE(v15[0]) = 6;
    sub_24EE577A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TallCardViewLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED0E2C4();
  sub_24EE578C0();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    char v19 = 0;
    sub_24ED1093C(&qword_269964948, type metadata accessor for CGSize);
    sub_24EE57710();
    uint64_t v9 = v18[0];
    uint64_t v10 = v18[1];
    char v19 = 1;
    sub_24ECB1F14();
    sub_24EE57710();
    uint64_t v11 = v18[0];
    LOBYTE(v18[0]) = 2;
    char v12 = sub_24EE576E0();
    char v19 = 3;
    sub_24EE57710();
    uint64_t v13 = v18[0];
    char v19 = 4;
    sub_24EE57710();
    uint64_t v14 = v18[0];
    char v19 = 5;
    sub_24EE57710();
    uint64_t v16 = v18[0];
    LOBYTE(v18[0]) = 6;
    uint64_t v17 = sub_24EE57700();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(unsigned char *)(a2 + 24) = v12 & 1;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED0AD28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TallCardViewLayout.init(from:)(a1, a2);
}

uint64_t sub_24ED0AD40(void *a1)
{
  return TallCardViewLayout.encode(to:)(a1);
}

uint64_t TallCardViewLayout.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t TallCardViewLayout.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED0AE60()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED0AED8()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED0AF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v69 = *(void *)(a1 - 8);
  uint64_t v71 = *(void *)(v69 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v68 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = *(void *)(v3 + 16);
  uint64_t v4 = v3;
  uint64_t v66 = v3;
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v5 = sub_24EE55DD0();
  uint64_t v6 = sub_24EE55DA0();
  uint64_t v67 = *(void *)(v4 + 24);
  uint64_t v91 = v67;
  uint64_t v92 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v89 = WitnessTable;
  uint64_t v90 = v8;
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v10 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  uint64_t v85 = v5;
  uint64_t v86 = (ValueMetadata *)v6;
  uint64_t v87 = v9;
  unint64_t v88 = v10;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1C8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE148);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE310);
  uint64_t v11 = sub_24EE55DD0();
  uint64_t v12 = sub_24EC8C218(&qword_26B1DE308, &qword_26B1DE310);
  uint64_t v83 = WitnessTable;
  uint64_t v84 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v85 = v11;
  uint64_t v86 = (ValueMetadata *)v6;
  uint64_t v87 = v13;
  unint64_t v88 = v10;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  uint64_t v14 = sub_24EE56240();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v85 = v11;
  uint64_t v86 = (ValueMetadata *)v6;
  uint64_t v87 = v13;
  unint64_t v88 = v10;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = v8;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v79 = v15;
  uint64_t v80 = v16;
  uint64_t v58 = v14;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v17 = sub_24EE56BA0();
  uint64_t v59 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)&v54 - v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v54 = v19;
  unint64_t v55 = sub_24ED105C8();
  uint64_t v85 = v17;
  uint64_t v86 = &type metadata for ActionCardButtonStyle;
  uint64_t v87 = v19;
  unint64_t v88 = v55;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v22 = (char *)&v54 - v21;
  sub_24EE56430();
  uint64_t v63 = OpaqueTypeMetadata2;
  uint64_t v65 = sub_24EE55DD0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v60 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v25 = MEMORY[0x270FA5388](v24);
  uint64_t v61 = (char *)&v54 - v26;
  uint64_t v27 = v69;
  uint64_t v28 = v68;
  uint64_t v29 = v72;
  uint64_t v30 = v66;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v69 + 16))(v68, v72, v66, v25);
  unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v70;
  uint64_t v34 = v67;
  *(void *)(v32 + 16) = v70;
  *(void *)(v32 + 24) = v34;
  uint64_t v35 = v28;
  uint64_t v36 = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v31, v35, v30);
  uint64_t v74 = v33;
  uint64_t v75 = v34;
  unint64_t v37 = v55;
  uint64_t v38 = v22;
  uint64_t v76 = v29;
  uint64_t v39 = v56;
  sub_24EE56B90();
  sub_24EE56730();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v17);
  uint64_t v40 = (uint64_t *)(v29 + *(int *)(v30 + 48));
  uint64_t v41 = v40[2];
  uint64_t v42 = v40[3];
  if (v42)
  {
    char v43 = v41 & 1;
    uint64_t v44 = *v40;
    uint64_t v45 = v40[1];
  }
  else
  {
    uint64_t v44 = 0;
    char v43 = 0;
    uint64_t v45 = 0xE000000000000000;
  }
  sub_24EC8BFE0(*v40, v40[1], v41, v42);
  uint64_t v85 = v17;
  uint64_t v86 = &type metadata for ActionCardButtonStyle;
  uint64_t v87 = v36;
  unint64_t v88 = v37;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v47 = v60;
  uint64_t v48 = v63;
  sub_24EE56850();
  sub_24EC8AAA0(v44, v45, v43);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v48);
  uint64_t v49 = sub_24ED1093C((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v77 = v46;
  uint64_t v78 = v49;
  uint64_t v50 = v65;
  swift_getWitnessTable();
  uint64_t v51 = v61;
  sub_24EC90894(v47);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v64 + 8);
  v52(v47, v50);
  sub_24EC90894(v51);
  return ((uint64_t (*)(char *, uint64_t))v52)(v51, v50);
}

uint64_t sub_24ED0B878()
{
  return sub_24EE55A40();
}

uint64_t sub_24ED0B8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v39 = a1;
  uint64_t v42 = a4;
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE310);
  uint64_t v5 = sub_24EE55DD0();
  uint64_t v6 = sub_24EE55DA0();
  uint64_t v64 = a3;
  uint64_t v65 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v62 = WitnessTable;
  uint64_t v63 = sub_24EC8C218(&qword_26B1DE308, &qword_26B1DE310);
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v9 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  uint64_t v47 = v5;
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  uint64_t v45 = v8;
  uint64_t v60 = v8;
  uint64_t v61 = v9;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v38 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v37 = (char *)&v37 - v14;
  uint64_t v15 = sub_24EE55DD0();
  uint64_t v16 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v16;
  uint64_t v43 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v58 = v15;
  uint64_t v59 = v6;
  uint64_t v46 = v6;
  uint64_t v60 = v17;
  uint64_t v61 = v9;
  uint64_t v44 = v9;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1C8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE148);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v18 = v39;
  uint64_t v19 = sub_24EE56C30();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  __n128 v25 = (char *)&v37 - v24;
  uint64_t v26 = sub_24EE56240();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v37 - v28;
  uint64_t v30 = type metadata accessor for TallCardView();
  if (*(unsigned char *)(v18 + *(int *)(v30 + 40) + 24) == 1)
  {
    sub_24ED0C0AC(v30);
    swift_getWitnessTable();
    sub_24EC90894(v22);
    unint64_t v31 = *(void (**)(char *, uint64_t))(v20 + 8);
    v31(v22, v19);
    sub_24EC90894(v25);
    uint64_t v58 = v47;
    uint64_t v59 = v46;
    uint64_t v60 = v45;
    uint64_t v61 = v44;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v49 = v43;
    swift_getWitnessTable();
    sub_24EC908D0((uint64_t)v22, v19);
    v31(v22, v19);
    v31(v25, v19);
  }
  else
  {
    sub_24ED0C42C(v30, (uint64_t)v12);
    uint64_t v58 = v47;
    uint64_t v59 = v46;
    uint64_t v60 = v45;
    uint64_t v61 = v44;
    uint64_t v54 = swift_getOpaqueTypeConformance2();
    uint64_t v55 = v43;
    swift_getWitnessTable();
    uint64_t v32 = v37;
    sub_24EC90894(v12);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v38 + 8);
    v33(v12, v10);
    sub_24EC90894(v32);
    swift_getWitnessTable();
    sub_24EC909C8((uint64_t)v12, v19, v10);
    v33(v12, v10);
    v33(v32, v10);
  }
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v58 = v47;
  uint64_t v59 = v46;
  uint64_t v60 = v45;
  uint64_t v61 = v44;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = v43;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v50 = v34;
  uint64_t v51 = v35;
  swift_getWitnessTable();
  sub_24EC90894(v29);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_24ED0C0AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v4 = sub_24EE55DD0();
  uint64_t v5 = sub_24EE55DA0();
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v6 = v26;
  uint64_t v27 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v20 = v4;
  uint64_t v21 = v5;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1C8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE148);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v7 = sub_24EE56C30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v16[-v12];
  sub_24EE56140();
  uint64_t v17 = v3;
  uint64_t v18 = v6;
  uint64_t v19 = v1;
  sub_24EE56C20();
  swift_getWitnessTable();
  sub_24EC90894(v11);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_24EC90894(v13);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v13, v7);
}

uint64_t sub_24ED0C42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v66 = a2;
  uint64_t v65 = sub_24EE55E90();
  MEMORY[0x270FA5388](v65);
  uint64_t v64 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EE55DA0();
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v61 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void *)(a1 + 16);
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v59 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v47 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE310);
  uint64_t v11 = sub_24EE55DD0();
  uint64_t v60 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v47 - v12;
  uint64_t v78 = *(void *)(a1 + 24);
  uint64_t v13 = v78;
  uint64_t v79 = MEMORY[0x263F198F8];
  uint64_t v63 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = WitnessTable;
  uint64_t v15 = sub_24EC8C218(&qword_26B1DE308, &qword_26B1DE310);
  uint64_t v76 = WitnessTable;
  uint64_t v77 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v49 = v16;
  uint64_t v48 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  uint64_t v72 = v11;
  uint64_t v73 = v6;
  uint64_t v74 = v16;
  uint64_t v75 = v48;
  uint64_t v55 = MEMORY[0x263F1A988];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v18 = (char *)&v47 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v19 = sub_24EE55DD0();
  uint64_t v58 = *(void *)(v19 - 8);
  uint64_t v20 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v19);
  uint64_t v51 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v56 = (char *)&v47 - v22;
  uint64_t v23 = v54;
  sub_24EE56710();
  uint64_t v67 = v23;
  uint64_t v68 = v13;
  uint64_t v69 = v3;
  sub_24EE56DA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE1F8);
  sub_24ED10A2C(&qword_26B1DE1F0, &qword_26B1DE1F8, (void (*)(void))sub_24ED10A04);
  uint64_t v24 = v52;
  sub_24EE569B0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v8);
  uint64_t v25 = v61;
  sub_24EE55F10();
  uint64_t v26 = v6;
  uint64_t v27 = v49;
  uint64_t v28 = v48;
  uint64_t v29 = v24;
  sub_24EE56750();
  uint64_t v30 = v26;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v29, v11);
  unint64_t v31 = v64;
  uint64_t v32 = &v64[*(int *)(v65 + 20)];
  uint64_t v33 = *MEMORY[0x263F19860];
  uint64_t v34 = sub_24EE560D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #8.0 }
  *unint64_t v31 = _Q0;
  uint64_t v72 = v11;
  uint64_t v73 = v30;
  uint64_t v74 = v27;
  uint64_t v75 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_24ED1093C(&qword_26B1DE300, MEMORY[0x263F19048]);
  uint64_t v41 = v51;
  uint64_t v42 = OpaqueTypeMetadata2;
  sub_24EE56A50();
  sub_24ECB9178((uint64_t)v31);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v42);
  uint64_t v43 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v70 = OpaqueTypeConformance2;
  uint64_t v71 = v43;
  swift_getWitnessTable();
  uint64_t v44 = v56;
  sub_24EC90894(v41);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v58 + 8);
  v45(v41, v19);
  sub_24EC90894(v44);
  return ((uint64_t (*)(char *, uint64_t))v45)(v44, v19);
}

uint64_t sub_24ED0CBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE090);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE0F8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE1F8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v7 = 1;
  sub_24ED0CE8C(a1, &v7[*(int *)(v5 + 52)]);
  type metadata accessor for TallCardView();
  sub_24EE56DA0();
  sub_24EE55ED0();
  sub_24EC884D4((uint64_t)v7, (uint64_t)v10, &qword_26B1DE090);
  uint64_t v14 = &v10[*(int *)(v8 + 36)];
  long long v15 = v21[5];
  *((_OWORD *)v14 + 4) = v21[4];
  *((_OWORD *)v14 + 5) = v15;
  *((_OWORD *)v14 + 6) = v21[6];
  long long v16 = v21[1];
  *(_OWORD *)uint64_t v14 = v21[0];
  *((_OWORD *)v14 + 1) = v16;
  long long v17 = v21[3];
  *((_OWORD *)v14 + 2) = v21[2];
  *((_OWORD *)v14 + 3) = v17;
  sub_24EC88758((uint64_t)v7, &qword_26B1DE090);
  uint64_t v18 = sub_24EE56DA0();
  sub_24EDCCD70(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, INFINITY, 0, v18, v19);
  sub_24EC88758((uint64_t)v10, &qword_26B1DE0F8);
  return sub_24ED10C70((uint64_t)v13, a2, &qword_26B1DE1F8);
}

uint64_t sub_24ED0CE8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE3B8) - 8;
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_24EE56D50();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v63 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EE565B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE2D0) - 8;
  MEMORY[0x270FA5388](v61);
  uint64_t v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE2D8) - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v65);
  uint64_t v67 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v62 = (uint64_t)&v51 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (uint64_t)&v51 - v14;
  uint64_t v15 = type metadata accessor for TallCardView();
  long long v16 = (uint64_t *)(a1 + *(int *)(v15 + 48));
  uint64_t v18 = *v16;
  uint64_t v54 = v16[1];
  uint64_t v17 = v54;
  uint64_t v55 = v18;
  uint64_t v19 = v16[2];
  uint64_t v52 = v16[3];
  uint64_t v20 = v52;
  uint64_t v53 = v19;
  uint64_t v59 = a1 + *(int *)(v15 + 40);
  uint64_t v58 = *(void *)(v59 + 56);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v57 = swift_getKeyPath();
  sub_24EC8BFE0(v18, v17, v19, v20);
  sub_24EE565D0();
  sub_24EE56590();
  sub_24EE565A0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1A680], v5);
  uint64_t v21 = sub_24EE565C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = swift_getKeyPath();
  LOBYTE(v5) = sub_24EE564D0();
  sub_24EE55AD0();
  char v99 = 0;
  char v95 = 0;
  uint64_t v24 = v54;
  uint64_t v23 = v55;
  uint64_t v75 = v55;
  uint64_t v76 = v54;
  uint64_t v25 = v52;
  LOBYTE(v20) = v53;
  uint64_t v77 = v53;
  uint64_t v78 = v52;
  uint64_t v79 = KeyPath;
  uint64_t v80 = v58;
  char v81 = 0;
  *(_DWORD *)uint64_t v82 = *(_DWORD *)v98;
  *(_DWORD *)&v82[3] = *(_DWORD *)&v98[3];
  uint64_t v83 = v57;
  char v84 = 1;
  *(_DWORD *)&v85[3] = *(_DWORD *)&v97[3];
  *(_DWORD *)uint64_t v85 = *(_DWORD *)v97;
  uint64_t v86 = v22;
  uint64_t v87 = v21;
  char v88 = v5;
  *(_DWORD *)&v89[3] = *(_DWORD *)&v96[3];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v96;
  uint64_t v90 = v26;
  uint64_t v91 = v27;
  uint64_t v92 = v28;
  uint64_t v93 = v29;
  char v94 = 0;
  sub_24EE56DA0();
  sub_24EDCCDCC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v100, 0.0, 1, INFINITY, 0);
  sub_24ECB9668(v23, v24, v20, v25);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = sub_24EE56DA0();
  uint64_t v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE730);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24EE5C950;
  sub_24EE56AC0();
  uint64_t v34 = sub_24EE56AD0();
  swift_release();
  *(void *)(v33 + 32) = v34;
  sub_24EE56AC0();
  uint64_t v35 = sub_24EE56AD0();
  swift_release();
  *(void *)(v33 + 40) = v35;
  *(void *)&v102[0] = v33;
  sub_24EE57150();
  uint64_t v36 = *(void *)&v102[0];
  sub_24EE56E50();
  sub_24EE56E60();
  MEMORY[0x25334D3C0](v36);
  sub_24EE55D20();
  v102[12] = v100[12];
  v102[13] = v100[13];
  v102[14] = v100[14];
  v102[8] = v100[8];
  v102[9] = v100[9];
  v102[10] = v100[10];
  v102[11] = v100[11];
  v102[4] = v100[4];
  v102[5] = v100[5];
  v102[6] = v100[6];
  v102[7] = v100[7];
  v102[0] = v100[0];
  v102[1] = v100[1];
  v102[2] = v100[2];
  v102[3] = v100[3];
  *(void *)&v102[15] = v101;
  *((void *)&v102[15] + 1) = v72;
  v102[16] = v73;
  v102[17] = v74;
  *(void *)&v102[18] = v30;
  *((void *)&v102[18] + 1) = v32;
  unint64_t v37 = v63;
  sub_24EE56D40();
  LOBYTE(v36) = sub_24EE564E0();
  uint64_t v38 = v66;
  uint64_t v40 = v68;
  uint64_t v39 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v69, v37, v68);
  *(unsigned char *)(v39 + *(int *)(v70 + 44)) = v36;
  uint64_t v41 = v60;
  sub_24EC884D4(v39, (uint64_t)&v60[*(int *)(v61 + 44)], &qword_26B1DE3B8);
  memcpy(v41, v102, 0x130uLL);
  sub_24ED10B80((uint64_t *)v102);
  sub_24EC88758(v39, &qword_26B1DE3B8);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v40);
  sub_24ED10BF8((uint64_t *)v102);
  if (*(double *)(v59 + 40) > 0.0) {
    double v42 = *(double *)(v59 + 40);
  }
  else {
    double v42 = 0.0;
  }
  uint64_t v43 = v62;
  sub_24EC884D4((uint64_t)v41, v62, &qword_26B1DE2D0);
  uint64_t v44 = v43 + *(int *)(v65 + 44);
  *(double *)uint64_t v44 = v42;
  *(unsigned char *)(v44 + 8) = 0;
  sub_24EC88758((uint64_t)v41, &qword_26B1DE2D0);
  uint64_t v45 = v64;
  sub_24ED10C70(v43, v64, &qword_26B1DE2D8);
  uint64_t v46 = v67;
  sub_24EC884D4(v45, v67, &qword_26B1DE2D8);
  uint64_t v47 = v71;
  *uint64_t v71 = 0;
  *((unsigned char *)v47 + 8) = 1;
  uint64_t v48 = v47;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE478);
  sub_24EC884D4(v46, (uint64_t)v48 + *(int *)(v49 + 48), &qword_26B1DE2D8);
  sub_24EC88758(v45, &qword_26B1DE2D8);
  return sub_24EC88758(v46, &qword_26B1DE2D8);
}

uint64_t sub_24ED0D640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v7 = sub_24EE55DD0();
  uint64_t v8 = sub_24EE55DA0();
  v40[4] = a3;
  v40[5] = MEMORY[0x263F198F8];
  v40[2] = swift_getWitnessTable();
  v40[3] = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1C8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v9 = sub_24EE56BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  sub_24EE560C0();
  sub_24EE56BB0();
  uint64_t v25 = swift_getWitnessTable();
  sub_24EC90894(v13);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v13, v9);
  long long v16 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TallCardView() + 48));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = v16[2];
  uint64_t v20 = v16[3];
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  uint64_t v34 = v17;
  uint64_t v35 = v18;
  uint64_t WitnessTable = v19;
  uint64_t v37 = v20;
  uint64_t v38 = KeyPath;
  char v39 = 0;
  v40[0] = v13;
  v40[1] = &v34;
  sub_24EC8BFE0(v17, v18, v19, v20);
  sub_24EC8BFE0(v17, v18, v19, v20);
  swift_retain();
  v33[0] = v9;
  v33[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE148);
  uint64_t v31 = v25;
  unint64_t v32 = sub_24ED1089C();
  sub_24EDCC8A0((uint64_t)v40, 2uLL, (uint64_t)v33);
  sub_24ECB9668(v17, v18, v19, v20);
  swift_release();
  uint64_t v22 = (uint64_t (*)(char *, uint64_t))v26;
  v26(v15, v9);
  sub_24ECB9668(v34, v35, WitnessTable, v37);
  swift_release();
  return v22(v13, v9);
}

uint64_t sub_24ED0DA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v66 = a3;
  uint64_t v4 = sub_24EE55DA0();
  uint64_t v51 = v4;
  uint64_t v65 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v64 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_24EE55E90();
  MEMORY[0x270FA5388](v59);
  uint64_t v56 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EE55DD0();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v47 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v62 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v47 - v11;
  v71[6] = a2;
  v71[7] = MEMORY[0x263F198F8];
  uint64_t v63 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  v71[4] = WitnessTable;
  v71[5] = v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v50 = v14;
  uint64_t v49 = sub_24ED1093C(&qword_26B1DE0C8, MEMORY[0x263F18DF8]);
  *(void *)&long long v72 = v10;
  *((void *)&v72 + 1) = v4;
  *(void *)&long long v73 = v14;
  *((void *)&v73 + 1) = v49;
  uint64_t v55 = MEMORY[0x263F1A988];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v47 = (char *)&v47 - v15;
  uint64_t v16 = sub_24EE55DD0();
  uint64_t v58 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v48 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v54 = (char *)&v47 - v19;
  type metadata accessor for TallCardView();
  sub_24EE56710();
  uint64_t v20 = v56;
  uint64_t v21 = &v56[*(int *)(v59 + 20)];
  uint64_t v22 = *MEMORY[0x263F19860];
  uint64_t v23 = sub_24EE560D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #8.0 }
  _OWORD *v20 = _Q0;
  uint64_t v29 = (uint64_t)v20;
  sub_24ED1093C(&qword_26B1DE300, MEMORY[0x263F19048]);
  uint64_t v30 = v53;
  sub_24EE56A50();
  sub_24ECB9178(v29);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v7);
  uint64_t v31 = v64;
  sub_24EE55F10();
  unint64_t v32 = v47;
  uint64_t v34 = v50;
  uint64_t v33 = v51;
  uint64_t v35 = v49;
  sub_24EE56750();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v10);
  sub_24EE56DA0();
  *(void *)&long long v72 = v10;
  *((void *)&v72 + 1) = v33;
  *(void *)&long long v73 = v34;
  *((void *)&v73 + 1) = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = OpaqueTypeMetadata2;
  uint64_t v38 = v48;
  sub_24EE56980();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v37);
  v71[2] = OpaqueTypeConformance2;
  v71[3] = MEMORY[0x263F19100];
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v54;
  sub_24EC90894(v38);
  uint64_t v41 = v58;
  double v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  v42(v38, v16);
  uint64_t v43 = sub_24EE56DA0();
  __n128 v45 = sub_24EDCCFA8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v72, 0.0, 1, 0.0, 1, v43, v44, 0, 1);
  (*(void (**)(char *, char *, uint64_t, __n128))(v41 + 16))(v38, v40, v16, v45);
  v70[4] = v76;
  v70[5] = v77;
  v70[6] = v78;
  v70[7] = v79;
  v70[0] = v72;
  v70[1] = v73;
  v70[2] = v74;
  v70[3] = v75;
  v71[0] = v38;
  v71[1] = v70;
  v69[0] = v16;
  v69[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE1C8);
  uint64_t v67 = v39;
  unint64_t v68 = sub_24ED10984();
  sub_24EDCC8A0((uint64_t)v71, 2uLL, (uint64_t)v69);
  v42(v40, v16);
  return ((uint64_t (*)(char *, uint64_t))v42)(v38, v16);
}

BOOL _s15FitnessCanvasUI18TallCardViewLayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  BOOL v5 = *(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16);
  if (v5
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40)
    && *(double *)(a1 + 48) == *(double *)(a2 + 48))
  {
    return *(void *)(a1 + 56) == *(void *)(a2 + 56);
  }
  return result;
}

unint64_t sub_24ED0E2C4()
{
  unint64_t result = qword_26B1DD940;
  if (!qword_26B1DD940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD940);
  }
  return result;
}

unint64_t sub_24ED0E31C()
{
  unint64_t result = qword_2699654E0;
  if (!qword_2699654E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699654E0);
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TallCardViewLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TallCardViewLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TallCardViewLayout()
{
  return &type metadata for TallCardViewLayout;
}

void sub_24ED0E43C()
{
  sub_24EC96368();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_24EC8B890();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_24ED0E56C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v45 = sub_24EE55D70();
  uint64_t v6 = *(void *)(v45 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v45 - 8) + 64);
  }
  uint64_t v46 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v46 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unsigned int v15 = v14 | *(_DWORD *)(v6 + 80) & 0xF8 | v9;
  if (((v14
       + ((v11 + ((v10 + (((v7 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 64) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
       + 33) & ~v14)
     + *(void *)(v13 + 64) > 0x18
    || ((*(_DWORD *)(v13 + 80) | *(_DWORD *)(v6 + 80) | v9) & 0x100000) != 0
    || v15 > 7)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v19 = a2[v7];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v21 = v7;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          if (v7 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          if (v7 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v7 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v22 = *(_DWORD *)a2;
          if (v7 < 4) {
LABEL_23:
          }
            unsigned int v19 = (v22 | (v20 << (8 * v7))) + 2;
          else {
LABEL_25:
          }
            unsigned int v19 = v22 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v43 = *(void *)(v12 - 8);
    uint64_t v44 = v12;
    uint64_t v23 = v7 + 1;
    unint64_t v24 = ~(unint64_t)v9;
    if (v19 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v45);
      char v25 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v25 = 0;
    }
    *((unsigned char *)a1 + v7) = v25;
    uint64_t v26 = (void *)(((unint64_t)a1 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)((unint64_t)&a2[v23 + 7] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    v26[1] = v27[1];
    uint64_t v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (long long *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v30 = *v29;
    long long v31 = v29[1];
    long long v32 = v29[3];
    v28[2] = v29[2];
    v28[3] = v32;
    *uint64_t v28 = v30;
    v28[1] = v31;
    uint64_t v33 = ((unint64_t)v28 + v10 + 64) & v24;
    uint64_t v34 = ((unint64_t)v29 + v10 + 64) & v24;
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    swift_retain();
    v35(v33, v34, v46);
    unint64_t v36 = (v11 + v33) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v11 + v34) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v37 + 24) < 0xFFFFFFFFuLL)
    {
      long long v41 = *(_OWORD *)(v37 + 16);
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
      *(_OWORD *)(v36 + 16) = v41;
    }
    else
    {
      uint64_t v38 = *(void *)v37;
      uint64_t v39 = *(void *)(v37 + 8);
      char v40 = *(unsigned char *)(v37 + 16);
      sub_24EC8A97C(*(void *)v37, v39, v40);
      *(void *)unint64_t v36 = v38;
      *(void *)(v36 + 8) = v39;
      *(unsigned char *)(v36 + 16) = v40;
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v36 + 32) = *(unsigned char *)(v37 + 32);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))((v36 + v14 + 33) & ~v14, (v37 + v14 + 33) & ~v14, v44);
  }
  return a1;
}

uint64_t sub_24ED0E94C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55D70();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  swift_release();
  unint64_t v11 = (((unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = v12 + 8;
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v14);
  unint64_t v15 = (*(void *)(v13 + 56) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(unint64_t, uint64_t))(v17 + 8);
  uint64_t v19 = v16;
  unint64_t v20 = (v15 + *(unsigned __int8 *)(v17 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  return v18(v20, v19);
}

void *sub_24ED0EB70(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = (void *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (void *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  unint64_t v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (long long *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = *v16;
  long long v18 = v16[1];
  long long v19 = v16[3];
  void v15[2] = v16[2];
  v15[3] = v19;
  *unint64_t v15 = v17;
  v15[1] = v18;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  uint64_t v23 = v21 + 16;
  uint64_t v24 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = ((unint64_t)v15 + v24 + 64) & ~v24;
  uint64_t v26 = ((unint64_t)v16 + v24 + 64) & ~v24;
  swift_retain();
  v22(v25, v26, v20);
  uint64_t v27 = *(void *)(v23 + 48) + 7;
  unint64_t v28 = (v27 + v25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v27 + v26) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v29 + 24) < 0xFFFFFFFFuLL)
  {
    long long v33 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v33;
  }
  else
  {
    uint64_t v30 = *(void *)v29;
    uint64_t v31 = *(void *)(v29 + 8);
    char v32 = *(unsigned char *)(v29 + 16);
    sub_24EC8A97C(*(void *)v29, v31, v32);
    *(void *)unint64_t v28 = v30;
    *(void *)(v28 + 8) = v31;
    *(unsigned char *)(v28 + 16) = v32;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v28 + 32) = *(unsigned char *)(v29 + 32);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v35 + 16))((v28 + *(unsigned __int8 *)(v35 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), (v29 + *(unsigned __int8 *)(v35 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), v34);
  return a1;
}

unsigned __int8 *sub_24ED0EE40(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 8;
  long long v19 = (void *)((unint64_t)&a1[v18] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((unint64_t)&a2[v18] & 0xFFFFFFFFFFFFFFF8);
  *long long v19 = *v20;
  v19[1] = v20[1];
  swift_retain();
  swift_release();
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(unsigned char *)(v21 + 24) = *(unsigned char *)(v22 + 24);
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(void *)(v21 + 40) = *(void *)(v22 + 40);
  *(void *)(v21 + 48) = *(void *)(v22 + 48);
  *(void *)(v21 + 56) = *(void *)(v22 + 56);
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v24 = v23 + 24;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = (v25 + 64 + v21) & ~v25;
  uint64_t v27 = (v25 + 64 + v22) & ~v25;
  (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v26, v27);
  uint64_t v28 = *(void *)(v24 + 40) + 7;
  unint64_t v29 = (v28 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v28 + v27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = *(void *)(v30 + 24);
  if (*(void *)(v29 + 24) < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      uint64_t v38 = *(void *)v30;
      uint64_t v39 = *(void *)(v30 + 8);
      char v40 = *(unsigned char *)(v30 + 16);
      sub_24EC8A97C(*(void *)v30, v39, v40);
      *(void *)unint64_t v29 = v38;
      *(void *)(v29 + 8) = v39;
      *(unsigned char *)(v29 + 16) = v40;
      *(void *)(v29 + 24) = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_46;
    }
LABEL_45:
    long long v41 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v41;
    goto LABEL_46;
  }
  if (v31 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v29, *(void *)(v29 + 8), *(unsigned char *)(v29 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v32 = *(void *)v30;
  uint64_t v33 = *(void *)(v30 + 8);
  char v34 = *(unsigned char *)(v30 + 16);
  sub_24EC8A97C(*(void *)v30, v33, v34);
  uint64_t v35 = *(void *)v29;
  uint64_t v36 = *(void *)(v29 + 8);
  char v37 = *(unsigned char *)(v29 + 16);
  *(void *)unint64_t v29 = v32;
  *(void *)(v29 + 8) = v33;
  *(unsigned char *)(v29 + 16) = v34;
  sub_24EC8AAA0(v35, v36, v37);
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_46:
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v43 = *(void *)(v42 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 24))((v29 + *(unsigned __int8 *)(v43 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), (v30 + *(unsigned __int8 *)(v43 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), v42);
  return a1;
}

void *sub_24ED0F2CC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  unsigned int v13 = (_OWORD *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v14 = (_OWORD *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v13 = *v14;
  uint64_t v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v16 = (long long *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = *v16;
  long long v18 = v16[1];
  long long v19 = v16[3];
  void v15[2] = v16[2];
  v15[3] = v19;
  *uint64_t v15 = v17;
  v15[1] = v18;
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = v20 + 32;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = ((unint64_t)v15 + v22 + 64) & ~v22;
  uint64_t v24 = ((unint64_t)v16 + v22 + 64) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v23, v24);
  uint64_t v25 = *(void *)(v21 + 32) + 7;
  unint64_t v26 = (v25 + v23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + v24) & 0xFFFFFFFFFFFFFFF8;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v30 + 32))((v26 + *(unsigned __int8 *)(v30 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (v27 + *(unsigned __int8 *)(v30 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), v29);
  return a1;
}

unsigned __int8 *sub_24ED0F538(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 8;
  uint64_t v20 = (void *)((unint64_t)&a1[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((unint64_t)&a2[v19] & 0xFFFFFFFFFFFFFFF8);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_release();
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = v24 + 40;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v26 + 64 + v22) & ~v26;
  uint64_t v28 = (v26 + 64 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v27, v28);
  uint64_t v29 = *(void *)(v25 + 24) + 7;
  unint64_t v30 = (v29 + v27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v29 + v28) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v30 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_44;
  }
  if (*(void *)(v31 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v30, *(void *)(v30 + 8), *(unsigned char *)(v30 + 16));
    swift_bridgeObjectRelease();
LABEL_44:
    long long v36 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v36;
    goto LABEL_45;
  }
  char v32 = *(unsigned char *)(v31 + 16);
  uint64_t v33 = *(void *)v30;
  uint64_t v34 = *(void *)(v30 + 8);
  char v35 = *(unsigned char *)(v30 + 16);
  *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
  *(unsigned char *)(v30 + 16) = v32;
  sub_24EC8AAA0(v33, v34, v35);
  *(void *)(v30 + 24) = *(void *)(v31 + 24);
  swift_bridgeObjectRelease();
LABEL_45:
  *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v38 + 40))((v30 + *(unsigned __int8 *)(v38 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), (v31 + *(unsigned __int8 *)(v38 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), v37);
  return a1;
}

uint64_t sub_24ED0F964(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  if (v10 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v15 = v10;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(v9 + 64) + 7;
  uint64_t v18 = v14 + 33;
  if (a2 > v16)
  {
    unint64_t v19 = ((v18
          + ((v17 + ((v13 + (((v7 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 64) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
        + *(void *)(*(void *)(v11 - 8) + 64);
    char v20 = 8 * v19;
    if (v19 > 3) {
      goto LABEL_13;
    }
    unsigned int v23 = ((a2 - v16 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v23 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v23 >= 2)
    {
LABEL_13:
      int v21 = *((unsigned __int8 *)a1 + v19);
      if (!*((unsigned char *)a1 + v19)) {
        goto LABEL_31;
      }
LABEL_21:
      int v24 = (v21 - 1) << v20;
      if (v19 > 3) {
        int v24 = 0;
      }
      if (v19)
      {
        if (v19 <= 3) {
          int v25 = v19;
        }
        else {
          int v25 = 4;
        }
        switch(v25)
        {
          case 2:
            int v26 = *a1;
            break;
          case 3:
            int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v26 = *(_DWORD *)a1;
            break;
          default:
            int v26 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v26 = 0;
      }
      int v29 = v16 + (v26 | v24);
      return (v29 + 1);
    }
  }
LABEL_31:
  unint64_t v27 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (v15 <= 0x7FFFFFFE)
  {
    unint64_t v28 = *(void *)(v27 + 8);
    if (v28 >= 0xFFFFFFFF) {
      LODWORD(v28) = -1;
    }
    int v29 = v28 - 1;
    if (v29 < 0) {
      int v29 = -1;
    }
    return (v29 + 1);
  }
  unint64_t v30 = (((v27 + 23) & 0xFFFFFFFFFFFFFFF8) + v13 + 64) & ~v13;
  if (v10 == v16)
  {
    unint64_t v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
    return v31(v30, v10, v8);
  }
  else
  {
    unint64_t v32 = (v18 + ((v17 + v30) & 0xFFFFFFFFFFFFFFF8)) & ~v14;
    uint64_t v33 = *(uint64_t (**)(unint64_t))(v12 + 48);
    return v33(v32);
  }
}

void sub_24ED0FCAC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v33 = v11;
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  if (v12 <= *(_DWORD *)(v14 + 84)) {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v17 = v12;
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = v17;
  }
  uint64_t v19 = *(void *)(v11 + 64) + 7;
  uint64_t v20 = v16 + 33;
  size_t v21 = ((v16
        + 33
        + ((v19 + ((v15 + (((v9 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 64) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)
      + *(void *)(*(void *)(v13 - 8) + 64);
  if (a3 <= v18)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v26 = ((a3 - v18 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v26))
    {
      int v22 = 4;
    }
    else if (v26 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v26 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v18 < a2)
  {
    unsigned int v23 = ~v18 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v21)
      {
        int v27 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *(_WORD *)a1 = v27;
          a1[2] = BYTE2(v27);
        }
        else if (v21 == 2)
        {
          *(_WORD *)a1 = v27;
        }
        else
        {
          *a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v21] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v24;
        return;
      case 3:
        goto LABEL_51;
      case 4:
        *(_DWORD *)&a1[v21] = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v16;
  switch(v22)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_51:
      __break(1u);
      JUMPOUT(0x24ED1006CLL);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        unint64_t v28 = (void *)((unint64_t)&a1[v9 + 8] & 0xFFFFFFFFFFFFFFF8);
        if (v17 > 0x7FFFFFFE)
        {
          unint64_t v29 = ((((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) + v15 + 64) & ~v15;
          if (v12 == v18)
          {
            unint64_t v30 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
            v30(v29, a2, v12, v10);
          }
          else
          {
            unint64_t v31 = (v20 + ((v19 + v29) & 0xFFFFFFFFFFFFFFF8)) & v25;
            unint64_t v32 = *(void (**)(unint64_t, uint64_t))(v14 + 56);
            v32(v31, a2);
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *unint64_t v28 = (a2 - 0x7FFFFFFF);
          v28[1] = 0;
        }
        else
        {
          v28[1] = a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TallCardView()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for TallCardViewLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED10178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TallCardViewLayout.CodingKeys()
{
  return &type metadata for TallCardViewLayout.CodingKeys;
}

unint64_t sub_24ED101B4()
{
  unint64_t result = qword_2699654E8;
  if (!qword_2699654E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699654E8);
  }
  return result;
}

uint64_t sub_24ED10208()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24ED10250()
{
  unint64_t result = qword_26B1DD950;
  if (!qword_26B1DD950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD950);
  }
  return result;
}

unint64_t sub_24ED102A8()
{
  unint64_t result = qword_26B1DD948;
  if (!qword_26B1DD948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD948);
  }
  return result;
}

uint64_t sub_24ED102FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C0D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EE7C5E0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C600 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C620 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C640 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EE7C660 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E694C656C746974 && a2 == 0xEE0074696D694C65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_24ED105C8()
{
  unint64_t result = qword_26B1DDCE8[0];
  if (!qword_26B1DDCE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DDCE8);
  }
  return result;
}

uint64_t sub_24ED1061C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (int *)type metadata accessor for TallCardView();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24EE55D70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v2[11], v1);
  uint64_t v6 = v4 + v2[12];
  if (*(void *)(v6 + 24))
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v4 + v2[14];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_24ED107EC()
{
  type metadata accessor for TallCardView();
  return sub_24ED0B878();
}

uint64_t sub_24ED10870@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED0B8B8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED1087C@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED0D640(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED10888@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED0DA8C(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

unint64_t sub_24ED1089C()
{
  unint64_t result = qword_26B1DE140;
  if (!qword_26B1DE140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE148);
    sub_24ECB95FC();
    sub_24EC8C218(&qword_26B1DE3D0, &qword_26B1DE3D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE140);
  }
  return result;
}

uint64_t sub_24ED1093C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ED10984()
{
  unint64_t result = qword_26B1DE1C0;
  if (!qword_26B1DE1C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE1C0);
  }
  return result;
}

uint64_t sub_24ED109F8@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED0CBB8(*(void *)(v1 + 32), a1);
}

uint64_t sub_24ED10A04()
{
  return sub_24ED10A2C(&qword_26B1DE0F0, &qword_26B1DE0F8, (void (*)(void))sub_24ED10AAC);
}

uint64_t sub_24ED10A2C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ED10AAC()
{
  unint64_t result = qword_26B1DE088;
  if (!qword_26B1DE088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE090);
    sub_24EC8C218(&qword_26B1DE068, &qword_26B1DE070);
    sub_24EC8C218(&qword_26B1DE4B0, &qword_26B1DE4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE088);
  }
  return result;
}

uint64_t *sub_24ED10B80(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_24ED10BF8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24ED10C70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24ED10CDC()
{
  return swift_getWitnessTable();
}

unint64_t sub_24ED11128(void *a1)
{
  __n128 v2 = MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v5 + 16))(v4, v2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v17 = 0x746469576C6C7566;
      uint64_t v18 = type metadata accessor for FullWidthItemDescriptor();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v4, v18);
      break;
    case 2:
      unint64_t v17 = 0x746469576C6C7566;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 112, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton customView ");
      uint64_t v19 = a1[3];
      char v81 = &type metadata for FullWidthStageViewLayout;
      uint64_t v82 = v19;
      uint64_t v83 = &type metadata for FullWidthStageViewStyle;
      char v84 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v85 = (uint64_t)v84;
      uint64_t v86 = v84;
      uint64_t v87 = sub_24EE57430();
      uint64_t v88 = v87;
      uint64_t v89 = sub_24EE57430();
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v80 = &v4[TupleTypeMetadata[12]];
      uint64_t v21 = (uint64_t)&v4[TupleTypeMetadata[20]];
      uint64_t v22 = (uint64_t)&v4[TupleTypeMetadata[24]];
      uint64_t v23 = (uint64_t)&v4[TupleTypeMetadata[28]];
      int v24 = &v4[TupleTypeMetadata[32]];
      uint64_t v25 = &v4[TupleTypeMetadata[36]];
      unsigned int v26 = &v4[TupleTypeMetadata[40]];
      uint64_t v27 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      uint64_t v28 = sub_24EE57430();
      unint64_t v29 = *(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8);
      v29(v25, v28);
      v29(v24, v28);
      sub_24EC90738(v23);
      sub_24EC90738(v22);
      sub_24EC90738(v21);
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v80, v19);
      break;
    case 3:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout title description actionButton ");
      char v81 = &type metadata for InfoActionCardViewLayout;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v83 = (ValueMetadata *)v82;
      char v84 = (ValueMetadata *)sub_24EE57430();
      unint64_t v30 = (int *)swift_getTupleTypeMetadata();
      uint64_t v31 = (uint64_t)&v4[v30[12]];
      uint64_t v32 = (uint64_t)&v4[v30[16]];
      uint64_t v33 = &v4[v30[20]];
      uint64_t v34 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      sub_24EC90738(v32);
      sub_24EC90738(v31);
      unint64_t v17 = 0x697463416F666E69;
      break;
    case 4:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "artwork footnote subtitle title ");
      char v35 = (ValueMetadata *)a1[3];
      char v81 = v35;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v83 = (ValueMetadata *)v82;
      char v84 = (ValueMetadata *)v82;
      long long v36 = (int *)swift_getTupleTypeMetadata();
      uint64_t v37 = (uint64_t)&v4[v36[12]];
      uint64_t v38 = (uint64_t)&v4[v36[16]];
      sub_24EC90738((uint64_t)&v4[v36[20]]);
      sub_24EC90738(v38);
      sub_24EC90738(v37);
      (*((void (**)(char *, ValueMetadata *))v35[-1].Description + 1))(v4, v35);
      unint64_t v17 = 0x697242656772616CLL;
      break;
    case 5:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "artwork caption displayStyle layout title ");
      uint64_t v39 = (ValueMetadata *)a1[3];
      char v81 = v39;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v83 = &type metadata for DynamicBrickDisplayStyle;
      char v84 = &type metadata for DynamicBrickViewLayout;
      uint64_t v85 = v82;
      uint64_t v40 = swift_getTupleTypeMetadata();
      uint64_t v41 = (uint64_t)&v4[*(int *)(v40 + 48)];
      sub_24EC90738((uint64_t)&v4[*(int *)(v40 + 96)]);
      sub_24EC90738(v41);
      (*((void (**)(char *, ValueMetadata *))v39[-1].Description + 1))(v4, v39);
      unint64_t v17 = 0xD000000000000012;
      break;
    case 6:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout artwork title subtitle ");
      uint64_t v42 = a1[3];
      char v81 = &type metadata for MonogramVerticalStackViewLayout;
      uint64_t v82 = v42;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = v83;
      uint64_t v43 = (int *)swift_getTupleTypeMetadata();
      uint64_t v44 = &v4[v43[12]];
      uint64_t v45 = (uint64_t)&v4[v43[16]];
      sub_24EC90738((uint64_t)&v4[v43[20]]);
      sub_24EC90738(v45);
      (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v44, v42);
      unint64_t v17 = 0xD000000000000015;
      break;
    case 7:
      unint64_t v17 = 0xD000000000000011;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "artwork caption displayStyle layout title ");
      uint64_t v46 = (ValueMetadata *)a1[3];
      char v81 = v46;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v83 = &type metadata for DynamicBrickDisplayStyle;
      char v84 = &type metadata for DynamicBrickViewLayout;
      uint64_t v85 = v82;
      uint64_t v47 = swift_getTupleTypeMetadata();
      uint64_t v48 = (uint64_t)&v4[*(int *)(v47 + 48)];
      sub_24EC90738((uint64_t)&v4[*(int *)(v47 + 96)]);
      sub_24EC90738(v48);
      (*((void (**)(char *, ValueMetadata *))v46[-1].Description + 1))(v4, v46);
      break;
    case 8:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout artwork title subtitle caption ");
      uint64_t v49 = a1[3];
      char v81 = &type metadata for StandardCardViewLayout;
      uint64_t v82 = v49;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = v83;
      uint64_t v85 = (uint64_t)v83;
      uint64_t v50 = (int *)swift_getTupleTypeMetadata();
      uint64_t v51 = &v4[v50[12]];
      uint64_t v52 = (uint64_t)&v4[v50[16]];
      uint64_t v53 = (uint64_t)&v4[v50[20]];
      sub_24EC90738((uint64_t)&v4[v50[24]]);
      sub_24EC90738(v53);
      sub_24EC90738(v52);
      (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v51, v49);
      unint64_t v17 = 0x647261646E617473;
      break;
    case 9:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 80, "layout artwork title subtitle caption groupTitle accessoryView ");
      uint64_t v54 = a1[3];
      char v81 = &type metadata for StandardHorizontalStackViewLayout;
      uint64_t v82 = v54;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = v83;
      uint64_t v85 = (uint64_t)v83;
      uint64_t v86 = v83;
      uint64_t v87 = sub_24EE57430();
      uint64_t v55 = (int *)swift_getTupleTypeMetadata();
      uint64_t v56 = &v4[v55[12]];
      uint64_t v57 = (uint64_t)&v4[v55[16]];
      uint64_t v58 = (uint64_t)&v4[v55[20]];
      uint64_t v59 = (uint64_t)&v4[v55[24]];
      uint64_t v60 = (uint64_t)&v4[v55[28]];
      uint64_t v61 = &v4[v55[32]];
      uint64_t v62 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
      sub_24EC90738(v60);
      sub_24EC90738(v59);
      sub_24EC90738(v58);
      sub_24EC90738(v57);
      (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v56, v54);
      unint64_t v17 = 0xD000000000000017;
      break;
    case 10:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout artwork title subtitle caption ");
      uint64_t v63 = a1[3];
      char v81 = &type metadata for StandardVerticalStackViewLayout;
      uint64_t v82 = v63;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = v83;
      uint64_t v85 = (uint64_t)v83;
      uint64_t v64 = (int *)swift_getTupleTypeMetadata();
      uint64_t v65 = &v4[v64[12]];
      uint64_t v66 = (uint64_t)&v4[v64[16]];
      uint64_t v67 = (uint64_t)&v4[v64[20]];
      sub_24EC90738((uint64_t)&v4[v64[24]]);
      sub_24EC90738(v67);
      sub_24EC90738(v66);
      (*(void (**)(char *, uint64_t))(*(void *)(v63 - 8) + 8))(v65, v63);
      unint64_t v17 = 0xD000000000000015;
      break;
    case 11:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout artwork title overlay ");
      uint64_t v68 = a1[3];
      char v81 = &type metadata for TallCardViewLayout;
      uint64_t v82 = v68;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = &type metadata for Overlay;
      uint64_t v69 = swift_getTupleTypeMetadata();
      uint64_t v70 = &v4[*(int *)(v69 + 48)];
      sub_24EC90738((uint64_t)&v4[*(int *)(v69 + 64)]);
      (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v70, v68);
      unint64_t v17 = 0x647261436C6C6174;
      break;
    case 12:
      unint64_t v17 = 0xD000000000000011;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 48, "layout artwork title subtitle caption ");
      uint64_t v71 = a1[3];
      char v81 = &type metadata for VerticalStackCardLayout;
      uint64_t v82 = v71;
      uint64_t v83 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      char v84 = v83;
      uint64_t v85 = (uint64_t)v83;
      long long v72 = (int *)swift_getTupleTypeMetadata();
      long long v73 = &v4[v72[12]];
      uint64_t v74 = (uint64_t)&v4[v72[16]];
      uint64_t v75 = (uint64_t)&v4[v72[20]];
      sub_24EC90738((uint64_t)&v4[v72[24]]);
      sub_24EC90738(v75);
      sub_24EC90738(v74);
      (*(void (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8))(v73, v71);
      break;
    case 13:
      (*(void (**)(char *))(*(void *)(a1[4] - 8) + 8))(v4);
      unint64_t v17 = 0x6C69754277656976;
      break;
    case 14:
      uint64_t v77 = a1[3];
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v79 = (uint64_t)&v4[*(int *)(TupleTypeMetadata3 + 48)];
      sub_24EC90738((uint64_t)&v4[*(int *)(TupleTypeMetadata3 + 64)]);
      sub_24EC90738(v79);
      (*(void (**)(char *, uint64_t))(*(void *)(v77 - 8) + 8))(v4, v77);
      unint64_t v17 = 0x6369724265646977;
      break;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v80 - 96, "layout artwork style title subtitle caption primaryActionButton secondaryActionButton ");
      uint64_t v7 = a1[3];
      char v81 = &type metadata for ActionCardViewLayout;
      uint64_t v82 = v7;
      uint64_t v83 = &type metadata for ActionCardViewStyle;
      char v84 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DB9F0);
      uint64_t v85 = (uint64_t)v84;
      uint64_t v8 = a1[2];
      uint64_t v86 = v84;
      uint64_t v87 = v8;
      uint64_t v88 = sub_24EE57430();
      uint64_t v9 = (int *)swift_getTupleTypeMetadata();
      uint64_t v10 = &v4[v9[12]];
      uint64_t v11 = (uint64_t)&v4[v9[20]];
      uint64_t v12 = (uint64_t)&v4[v9[24]];
      uint64_t v13 = (uint64_t)&v4[v9[28]];
      uint64_t v14 = &v4[v9[32]];
      uint64_t v15 = &v4[v9[36]];
      uint64_t v16 = sub_24EE57430();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v14, v8);
      sub_24EC90738(v13);
      sub_24EC90738(v12);
      sub_24EC90738(v11);
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v10, v7);
      unint64_t v17 = 0x61436E6F69746361;
      break;
  }
  return v17;
}

uint64_t VerticalGridView.init(header:items:footer:metrics:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  char v65 = *a3;
  long long v66 = *a5;
  uint64_t v36 = *((void *)a5 + 2);
  uint64_t v37 = *((void *)a5 + 3);
  uint64_t v38 = a6[1];
  uint64_t v68 = a6[2];
  uint64_t v69 = *a6;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t v39 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a9, a1, v39);
  uint64_t v40 = (int *)type metadata accessor for VerticalGridView();
  *(void *)(a9 + v40[61]) = a2;
  *(unsigned char *)(a9 + v40[62]) = v65;
  uint64_t v41 = a9 + v40[63];
  uint64_t v42 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v41, a4, v42);
  uint64_t v43 = a9 + v40[64];
  *(_OWORD *)uint64_t v43 = v66;
  *(void *)(v43 + 16) = v36;
  *(void *)(v43 + 24) = v37;
  uint64_t v44 = a9 + v40[72];
  uint64_t v45 = type metadata accessor for EquatableViewModifierBuilder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v44, a14, v45);
  uint64_t v46 = (void *)(a9 + v40[65]);
  void *v46 = v69;
  v46[1] = v38;
  v46[2] = v68;
  *(unsigned char *)(a9 + v40[66]) = a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a35 - 8) + 32))(a9 + v40[67], a8, a35);
  uint64_t v47 = a9 + v40[68];
  uint64_t v48 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v47, a10, v48);
  uint64_t v49 = a9 + v40[69];
  uint64_t v50 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v49, a11, v50);
  uint64_t v51 = a9 + v40[70];
  uint64_t v52 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v51, a12, v52);
  uint64_t v53 = a9 + v40[74];
  swift_getTupleTypeMetadata2();
  uint64_t v54 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v53, a15, v54);
  uint64_t v55 = a9 + v40[73];
  uint64_t v56 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(v55, a16, v56);
  uint64_t v57 = a9 + v40[71];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v58 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v57, a13, v58);
  uint64_t v59 = a9 + v40[77];
  sub_24EE55A60();
  uint64_t v60 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 32))(v59, a19, v60);
  sub_24ED12C80(a17, a9 + v40[75]);
  sub_24ED12C80(a18, a9 + v40[76]);
  uint64_t v61 = a9 + v40[78];
  uint64_t v62 = sub_24EE55940();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v61, a20, v62);
}

uint64_t type metadata accessor for VerticalGridView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED12C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED12CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v356 = a2;
  uint64_t v335 = a1;
  uint64_t v304 = a4;
  uint64_t v371 = *(void *)(a3 + 64);
  uint64_t v5 = v371;
  uint64_t v6 = sub_24EE57430();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v302 = (char *)v255 - v7;
  uint64_t v364 = *(void *)(a3 + 72);
  uint64_t v8 = v364;
  uint64_t v365 = *(void *)(a3 + 232);
  uint64_t v370 = *(char **)(a3 + 144);
  uint64_t v9 = v370;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v350 = *(void *)(a3 + 184);
  *(void *)&long long v425 = v5;
  *((void *)&v425 + 1) = v8;
  *(void *)&unsigned long long v426 = AssociatedConformanceWitness;
  *((void *)&v426 + 1) = v350;
  uint64_t v312 = type metadata accessor for CanvasContextMenu();
  uint64_t v303 = *(void *)(v312 - 8);
  MEMORY[0x270FA5388](v312);
  uint64_t v300 = (uint64_t)v255 - v10;
  uint64_t v360 = *(void *)(a3 + 16);
  uint64_t v295 = sub_24EE57430();
  unint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = *(void *)(a3 + 152);
  uint64_t v13 = sub_24EE559E0();
  uint64_t v298 = *(void *)(v13 - 8);
  uint64_t v299 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v325 = (uint64_t)v255 - v14;
  uint64_t v355 = *(void *)(a3 + 136);
  uint64_t v366 = *(void *)(a3 + 80);
  uint64_t v357 = *(void *)(a3 + 192);
  uint64_t v15 = sub_24EE559E0();
  uint64_t v296 = *(void *)(v15 - 8);
  uint64_t v297 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v328 = (uint64_t)v255 - v16;
  uint64_t v17 = *(void *)(a3 + 32);
  uint64_t v374 = *(void *)(a3 + 56);
  uint64_t v363 = *(void *)(a3 + 176);
  uint64_t v330 = sub_24EE559E0();
  uint64_t v329 = *(void *)(v330 - 8);
  MEMORY[0x270FA5388](v330);
  uint64_t v324 = (uint64_t)v255 - v18;
  unint64_t v372 = *(void *)(a3 + 48);
  uint64_t v373 = *(void *)(a3 + 168);
  uint64_t v362 = v17;
  uint64_t v327 = sub_24EE559E0();
  uint64_t v326 = *(void *)(v327 - 8);
  MEMORY[0x270FA5388](v327);
  uint64_t v320 = (uint64_t)v255 - v19;
  uint64_t v20 = *(void *)(a3 + 40);
  uint64_t v21 = *(void *)(a3 + 160);
  uint64_t v323 = sub_24EE559E0();
  uint64_t v322 = *(void *)(v323 - 8);
  MEMORY[0x270FA5388](v323);
  uint64_t v319 = (uint64_t)v255 - v22;
  uint64_t v353 = *(void *)(a3 + 128);
  uint64_t v321 = *(void *)(v353 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v318 = (uint64_t)v255 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v331 = *((void *)v9 - 1);
  uint64_t v351 = *(void *)(v331 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v332 = (char *)v255 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = *(void **)(a3 - 8);
  uint64_t v345 = v369[8];
  MEMORY[0x270FA5388](v27);
  uint64_t v348 = (char *)v255 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = sub_24EE55940();
  uint64_t v354 = *(void *)(v349 - 8);
  MEMORY[0x270FA5388](v349);
  uint64_t v333 = (char *)v255 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v293 = *(void *)(v30 - 8);
  uint64_t v294 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v334 = (uint64_t)v255 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v20;
  *(void *)&long long v425 = v20;
  *((void *)&v425 + 1) = v11;
  unint64_t v358 = v11;
  *(void *)&unsigned long long v426 = v11;
  *((void *)&v426 + 1) = v21;
  uint64_t v367 = v21;
  uint64_t v368 = v12;
  uint64_t v427 = v12;
  uint64_t v428 = v12;
  uint64_t v33 = type metadata accessor for ActionCardView();
  unint64_t v346 = (void *)v33;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v425 = v33;
  *((void *)&v425 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v317 = sub_24EE56430();
  uint64_t v34 = v32;
  sub_24EE55DD0();
  uint64_t v35 = sub_24EE55DD0();
  unint64_t v347 = (void (*)(void, void, void))sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v437 = v21;
  uint64_t v438 = v347;
  uint64_t v36 = MEMORY[0x263F18E48];
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v435 = v37;
  uint64_t v436 = MEMORY[0x263F198F8];
  uint64_t v343 = v36;
  uint64_t v342 = v35;
  uint64_t v341 = swift_getWitnessTable();
  *(void *)&long long v425 = v35;
  *((void *)&v425 + 1) = v341;
  uint64_t v305 = (void (*)(char *, __n128))MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v38 = sub_24EE55DD0();
  uint64_t v309 = v38;
  uint64_t v433 = v37;
  uint64_t v434 = MEMORY[0x263F18860];
  uint64_t v308 = swift_getWitnessTable();
  *(void *)&long long v425 = v38;
  *((void *)&v425 + 1) = v308;
  swift_getOpaqueTypeMetadata2();
  uint64_t v307 = (void (*)(char *, uint64_t))sub_24EE56240();
  uint64_t v338 = sub_24EE56B10();
  uint64_t v310 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v339 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v340 = (void (*)(char *, char *, uint64_t))sub_24EE56240();
  uint64_t v278 = sub_24EE56240();
  OpaqueTypeMetadata2 = *(void *)(a3 + 224);
  uint64_t v39 = v34;
  unint64_t v40 = v358;
  *(void *)&long long v425 = v34;
  *((void *)&v425 + 1) = v358;
  *(void *)&unsigned long long v426 = v358;
  *((void *)&v426 + 1) = v366;
  uint64_t v41 = v367;
  uint64_t v427 = v353;
  uint64_t v428 = v367;
  uint64_t v429 = v368;
  uint64_t v430 = v368;
  uint64_t v431 = v357;
  uint64_t v432 = OpaqueTypeMetadata2;
  uint64_t v42 = type metadata accessor for FullWidthStageView();
  uint64_t v337 = v42;
  uint64_t v336 = swift_getWitnessTable();
  *(void *)&long long v425 = v42;
  *((void *)&v425 + 1) = v336;
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for InfoActionCardView();
  uint64_t v285 = v43;
  uint64_t v284 = swift_getWitnessTable();
  *(void *)&long long v425 = v43;
  *((void *)&v425 + 1) = v284;
  swift_getOpaqueTypeMetadata2();
  uint64_t v283 = sub_24EE56240();
  uint64_t v264 = sub_24EE56240();
  uint64_t v44 = v39;
  *(void *)&long long v425 = v39;
  *((void *)&v425 + 1) = v372;
  *(void *)&unsigned long long v426 = v374;
  *((void *)&v426 + 1) = v41;
  uint64_t v45 = v41;
  uint64_t v427 = v373;
  uint64_t v428 = v363;
  uint64_t v46 = type metadata accessor for LargeBrickView();
  uint64_t v282 = (char *)v46;
  uint64_t v281 = swift_getWitnessTable();
  *(void *)&long long v425 = v46;
  *((void *)&v425 + 1) = v281;
  swift_getOpaqueTypeMetadata2();
  uint64_t v47 = type metadata accessor for DynamicBrickView();
  uint64_t v280 = v47;
  uint64_t v279 = swift_getWitnessTable();
  *(void *)&long long v425 = v47;
  *((void *)&v425 + 1) = v279;
  swift_getOpaqueTypeMetadata2();
  uint64_t v271 = sub_24EE56240();
  uint64_t v48 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v277 = v48;
  uint64_t v276 = swift_getWitnessTable();
  *(void *)&long long v425 = v48;
  *((void *)&v425 + 1) = v276;
  swift_getOpaqueTypeMetadata2();
  uint64_t v274 = sub_24EE56240();
  uint64_t v275 = sub_24EE56240();
  v255[1] = sub_24EE56240();
  uint64_t v49 = type metadata accessor for StandardCardView();
  uint64_t v273 = v49;
  uint64_t v272 = swift_getWitnessTable();
  *(void *)&long long v425 = v49;
  *((void *)&v425 + 1) = v272;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v425 = v44;
  *((void *)&v425 + 1) = v40;
  unsigned long long v426 = __PAIR128__(v368, v45);
  uint64_t v50 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v270 = v50;
  uint64_t v269 = swift_getWitnessTable();
  *(void *)&long long v425 = v50;
  *((void *)&v425 + 1) = v269;
  swift_getOpaqueTypeMetadata2();
  v255[4] = sub_24EE56240();
  uint64_t v51 = type metadata accessor for StandardVerticalStackView();
  uint64_t v268 = v51;
  uint64_t v267 = swift_getWitnessTable();
  *(void *)&long long v425 = v51;
  *((void *)&v425 + 1) = v267;
  swift_getOpaqueTypeMetadata2();
  uint64_t v52 = type metadata accessor for TallCardView();
  uint64_t v266 = v52;
  uint64_t v265 = swift_getWitnessTable();
  *(void *)&long long v425 = v52;
  *((void *)&v425 + 1) = v265;
  swift_getOpaqueTypeMetadata2();
  uint64_t v263 = sub_24EE56240();
  v255[2] = sub_24EE56240();
  uint64_t v359 = v44;
  uint64_t v53 = type metadata accessor for VerticalStackCard();
  uint64_t v262 = v53;
  uint64_t v261 = swift_getWitnessTable();
  *(void *)&long long v425 = v53;
  *((void *)&v425 + 1) = v261;
  swift_getOpaqueTypeMetadata2();
  v255[3] = sub_24EE56240();
  uint64_t v54 = type metadata accessor for WideBrickView();
  uint64_t v257 = v54;
  uint64_t v256 = swift_getWitnessTable();
  *(void *)&long long v425 = v54;
  *((void *)&v425 + 1) = v256;
  swift_getOpaqueTypeMetadata2();
  v255[5] = sub_24EE56240();
  v255[6] = sub_24EE56240();
  uint64_t v258 = sub_24EE56240();
  uint64_t v259 = sub_24EE56B10();
  uint64_t v260 = sub_24EE55DD0();
  uint64_t v313 = sub_24EE56240();
  uint64_t v287 = *(void *)(v313 - 8);
  MEMORY[0x270FA5388](v313);
  uint64_t v314 = (uint64_t)v255 - v55;
  uint64_t v315 = sub_24EE55DD0();
  uint64_t v290 = *(void *)(v315 - 8);
  MEMORY[0x270FA5388](v315);
  uint64_t v316 = (char *)v255 - v56;
  uint64_t v317 = sub_24EE55DD0();
  uint64_t v291 = *(void *)(v317 - 8);
  MEMORY[0x270FA5388](v317);
  char v288 = (char *)v255 - v57;
  uint64_t v311 = sub_24EE55DD0();
  uint64_t v292 = *(void *)(v311 - 8);
  MEMORY[0x270FA5388](v311);
  unint64_t v289 = (char *)v255 - v58;
  *(void *)&long long v425 = v346;
  *((void *)&v425 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v342;
  *((void *)&v425 + 1) = v341;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v309;
  *((void *)&v425 + 1) = v308;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v423 = v60;
  uint64_t v424 = v61;
  uint64_t v62 = MEMORY[0x263F19B40];
  uint64_t v422 = swift_getWitnessTable();
  uint64_t v420 = swift_getWitnessTable();
  uint64_t v421 = MEMORY[0x263F18C10];
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v418 = v63;
  uint64_t v419 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v416 = v65;
  uint64_t v417 = v66;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v414 = OpaqueTypeConformance2;
  uint64_t v415 = v67;
  uint64_t v68 = swift_getWitnessTable();
  *(void *)&long long v425 = v337;
  *((void *)&v425 + 1) = v336;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v285;
  *((void *)&v425 + 1) = v284;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v412 = v69;
  uint64_t v413 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v410 = v68;
  uint64_t v411 = v71;
  uint64_t v72 = swift_getWitnessTable();
  *(void *)&long long v425 = v282;
  *((void *)&v425 + 1) = v281;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v280;
  *((void *)&v425 + 1) = v279;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v408 = v73;
  uint64_t v409 = v74;
  uint64_t v75 = swift_getWitnessTable();
  *(void *)&long long v425 = v277;
  *((void *)&v425 + 1) = v276;
  uint64_t v406 = swift_getOpaqueTypeConformance2();
  uint64_t v407 = v74;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v404 = v75;
  uint64_t v405 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v402 = v72;
  uint64_t v403 = v77;
  uint64_t v78 = swift_getWitnessTable();
  *(void *)&long long v425 = v273;
  *((void *)&v425 + 1) = v272;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v270;
  *((void *)&v425 + 1) = v269;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v400 = v79;
  uint64_t v401 = v80;
  uint64_t v81 = swift_getWitnessTable();
  *(void *)&long long v425 = v268;
  *((void *)&v425 + 1) = v267;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v425 = v266;
  *((void *)&v425 + 1) = v265;
  uint64_t v83 = swift_getOpaqueTypeConformance2();
  uint64_t v398 = v82;
  uint64_t v399 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v396 = v81;
  uint64_t v397 = v84;
  uint64_t v85 = swift_getWitnessTable();
  *(void *)&long long v425 = v262;
  *((void *)&v425 + 1) = v261;
  uint64_t v394 = swift_getOpaqueTypeConformance2();
  uint64_t v395 = v357;
  uint64_t v86 = swift_getWitnessTable();
  *(void *)&long long v425 = v257;
  *((void *)&v425 + 1) = v256;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v392 = v86;
  uint64_t v393 = v87;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v390 = v85;
  uint64_t v391 = v88;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v388 = v78;
  uint64_t v389 = v89;
  uint64_t v286 = v62;
  uint64_t v387 = swift_getWitnessTable();
  uint64_t v385 = swift_getWitnessTable();
  uint64_t v386 = v347;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v383 = MEMORY[0x263F1BA00];
  uint64_t v384 = v90;
  uint64_t v277 = swift_getWitnessTable();
  uint64_t v91 = MEMORY[0x263F1A240];
  uint64_t v381 = v277;
  uint64_t v382 = MEMORY[0x263F1A240];
  uint64_t v278 = swift_getWitnessTable();
  uint64_t v379 = v278;
  uint64_t v380 = v91;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v280 = v92;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v377 = v92;
  uint64_t v378 = v93;
  uint64_t v94 = v311;
  uint64_t v281 = swift_getWitnessTable();
  *(void *)&long long v425 = v94;
  *((void *)&v425 + 1) = v281;
  uint64_t v284 = MEMORY[0x263F882B0];
  swift_getOpaqueTypeMetadata2();
  uint64_t v283 = sub_24EE56240();
  uint64_t v285 = *(void *)(v283 - 8);
  MEMORY[0x270FA5388](v283);
  uint64_t v279 = (uint64_t)v255 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v97 = MEMORY[0x270FA5388](v96);
  uint64_t v282 = (char *)v255 - v98;
  uint64_t v99 = v361;
  uint64_t v100 = v361 + *(int *)(a3 + 312);
  uint64_t v305 = *(void (**)(char *, __n128))(v354 + 16);
  uint64_t v309 = v100;
  uint64_t v310 = v354 + 16;
  v305(v333, v97);
  uint64_t v101 = v369;
  uint64_t v102 = (void (*)(void, void, void))v369[2];
  unint64_t v346 = v369 + 2;
  unint64_t v347 = v102;
  uint64_t v103 = v348;
  v102(v348, v99, a3);
  unint64_t v104 = v331;
  uint64_t v105 = v370;
  (*(void (**)(char *, uint64_t, char *))(v331 + 16))(v332, v335, v370);
  uint64_t v106 = *((unsigned __int8 *)v101 + 80);
  uint64_t v107 = (v106 + 240) & ~v106;
  uint64_t v276 = v107 + v345;
  uint64_t v341 = v107;
  uint64_t v345 = v106 | 7;
  unint64_t v108 = (v276 + *(unsigned __int8 *)(v104 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  uint64_t v109 = (char *)swift_allocObject();
  unint64_t v110 = v358;
  *((void *)v109 + 2) = v360;
  *((void *)v109 + 3) = v110;
  uint64_t v111 = v359;
  *((void *)v109 + 4) = v362;
  *((void *)v109 + 5) = v111;
  uint64_t v112 = v374;
  *((void *)v109 + 6) = v372;
  *((void *)v109 + 7) = v112;
  uint64_t v113 = v364;
  *((void *)v109 + 8) = v371;
  *((void *)v109 + 9) = v113;
  uint64_t v114 = a3;
  uint64_t v116 = *(void *)(a3 + 96);
  uint64_t v338 = *(void *)(a3 + 88);
  uint64_t v115 = v338;
  uint64_t v351 = v116;
  *((void *)v109 + 10) = v366;
  *((void *)v109 + 11) = v115;
  uint64_t v118 = *(void *)(a3 + 112);
  uint64_t WitnessTable = *(void *)(a3 + 104);
  uint64_t v117 = WitnessTable;
  uint64_t v343 = v118;
  *((void *)v109 + 12) = v116;
  *((void *)v109 + 13) = v117;
  uint64_t v337 = *(void *)(a3 + 120);
  uint64_t v119 = v337;
  *((void *)v109 + 14) = v118;
  *((void *)v109 + 15) = v119;
  uint64_t v120 = v353;
  uint64_t v121 = v355;
  *((void *)v109 + 16) = v353;
  *((void *)v109 + 17) = v121;
  uint64_t v122 = v368;
  *((void *)v109 + 18) = v105;
  *((void *)v109 + 19) = v122;
  uint64_t v123 = v373;
  *((void *)v109 + 20) = v367;
  *((void *)v109 + 21) = v123;
  uint64_t v124 = v350;
  *((void *)v109 + 22) = v363;
  *((void *)v109 + 23) = v124;
  uint64_t v126 = *(void *)(a3 + 208);
  uint64_t v342 = *(void *)(a3 + 200);
  uint64_t v125 = v342;
  uint64_t v339 = v126;
  *((void *)v109 + 24) = v357;
  *((void *)v109 + 25) = v125;
  uint64_t v336 = *(void *)(a3 + 216);
  uint64_t v127 = v336;
  *((void *)v109 + 26) = v126;
  *((void *)v109 + 27) = v127;
  uint64_t v128 = v365;
  *((void *)v109 + 28) = OpaqueTypeMetadata2;
  *((void *)v109 + 29) = v128;
  uint64_t v129 = (void (*)(char *, char *, uint64_t))v369[4];
  v369 += 4;
  uint64_t v340 = v129;
  v129(&v109[v107], v103, a3);
  (*(void (**)(char *, char *, char *))(v104 + 32))(&v109[v108], v332, v105);
  uint64_t v308 = sub_24ED24750((unint64_t *)&qword_26B1DBA10, MEMORY[0x263F07508]);
  size_t v130 = v333;
  uint64_t v131 = v349;
  sub_24EE55A30();
  swift_release();
  unsigned int v132 = *(void (**)(char *, uint64_t))(v354 + 8);
  v354 += 8;
  uint64_t v307 = v132;
  v132(v130, v131);
  uint64_t v133 = v361;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v321 + 16))(v318, v361 + *(int *)(v114 + 268), v120);
  uint64_t v134 = v114;
  uint64_t v135 = *(int *)(v114 + 256);
  uint64_t v136 = v133;
  int v137 = (long long *)(v133 + v135);
  unsigned long long v138 = v137[1];
  long long v425 = *v137;
  unsigned long long v426 = v138;
  uint64_t v139 = v134;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v322 + 16))(v319, v136 + *(int *)(v134 + 272), v323);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v326 + 16))(v320, v136 + *(int *)(v139 + 276), v327);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v329 + 16))(v324, v136 + *(int *)(v139 + 280), v330);
  long long v140 = v130;
  ((void (*)(char *, uint64_t, uint64_t))v305)(v130, v309, v131);
  long long v141 = v103;
  v347(v103, v136, v139);
  unint64_t v142 = (v276 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v331 = v142 + 8;
  uint64_t v332 = (char *)v142;
  long long v143 = (void *)swift_allocObject();
  unint64_t v144 = v358;
  v143[2] = v360;
  v143[3] = v144;
  uint64_t v145 = v359;
  v143[4] = v362;
  v143[5] = v145;
  uint64_t v146 = v374;
  v143[6] = v372;
  v143[7] = v146;
  uint64_t v147 = v364;
  v143[8] = v371;
  v143[9] = v147;
  uint64_t v148 = v366;
  uint64_t v149 = v338;
  v143[10] = v366;
  v143[11] = v149;
  uint64_t v150 = WitnessTable;
  v143[12] = v351;
  v143[13] = v150;
  uint64_t v151 = v337;
  v143[14] = v343;
  v143[15] = v151;
  uint64_t v152 = v355;
  v143[16] = v120;
  v143[17] = v152;
  uint64_t v153 = v368;
  v143[18] = v370;
  v143[19] = v153;
  uint64_t v154 = v373;
  v143[20] = v367;
  v143[21] = v154;
  uint64_t v155 = v350;
  v143[22] = v363;
  v143[23] = v155;
  uint64_t v156 = v357;
  uint64_t v157 = v342;
  v143[24] = v357;
  v143[25] = v157;
  uint64_t v158 = v336;
  v143[26] = v339;
  v143[27] = v158;
  long long v159 = (char *)v143 + v341;
  uint64_t v160 = v365;
  v143[28] = OpaqueTypeMetadata2;
  v143[29] = v160;
  size_t v161 = v141;
  char v162 = v141;
  uint64_t v163 = v139;
  uint64_t v306 = v139;
  v340(v159, v161, v139);
  *(void *)((char *)v143 + v142) = v356;
  unint64_t v164 = v140;
  uint64_t v165 = v148;
  uint64_t v166 = v349;
  sub_24EE559C0();
  swift_release();
  v307(v164, v166);
  ((void (*)(char *, uint64_t, uint64_t))v305)(v164, v309, v166);
  v347(v162, v361, v163);
  uint64_t v167 = swift_allocObject();
  unint64_t v168 = v358;
  *(void *)(v167 + 16) = v360;
  *(void *)(v167 + 24) = v168;
  uint64_t v169 = v359;
  *(void *)(v167 + 32) = v362;
  *(void *)(v167 + 40) = v169;
  uint64_t v170 = v374;
  *(void *)(v167 + 48) = v372;
  *(void *)(v167 + 56) = v170;
  uint64_t v171 = v364;
  *(void *)(v167 + 64) = v371;
  *(void *)(v167 + 72) = v171;
  uint64_t v172 = v338;
  *(void *)(v167 + 80) = v165;
  *(void *)(v167 + 88) = v172;
  uint64_t v173 = WitnessTable;
  *(void *)(v167 + 96) = v351;
  *(void *)(v167 + 104) = v173;
  uint64_t v174 = v337;
  *(void *)(v167 + 112) = v343;
  *(void *)(v167 + 120) = v174;
  *(void *)(v167 + 128) = v353;
  *(void *)(v167 + 136) = v152;
  uint64_t v175 = v368;
  *(void *)(v167 + 144) = v370;
  *(void *)(v167 + 152) = v175;
  uint64_t v176 = v373;
  *(void *)(v167 + 160) = v367;
  *(void *)(v167 + 168) = v176;
  uint64_t v177 = v363;
  uint64_t v178 = v350;
  *(void *)(v167 + 176) = v363;
  *(void *)(v167 + 184) = v178;
  uint64_t v179 = v156;
  uint64_t v180 = v342;
  *(void *)(v167 + 192) = v156;
  *(void *)(v167 + 200) = v180;
  uint64_t v181 = v336;
  *(void *)(v167 + 208) = v339;
  *(void *)(v167 + 216) = v181;
  long long v182 = (char *)(v167 + v341);
  uint64_t v183 = OpaqueTypeMetadata2;
  uint64_t v184 = v365;
  *(void *)(v167 + 224) = OpaqueTypeMetadata2;
  *(void *)(v167 + 232) = v184;
  v340(v182, v348, v306);
  *(void *)&v332[v167] = v356;
  uint64_t v185 = v333;
  uint64_t v186 = v349;
  sub_24EE559C0();
  swift_release();
  v307(v185, v186);
  uint64_t v253 = v179;
  uint64_t v254 = v175;
  uint64_t v252 = v177;
  uint64_t v251 = v183;
  unint64_t v249 = v168;
  uint64_t v250 = v184;
  uint64_t v187 = v353;
  uint64_t v188 = v318;
  uint64_t v189 = v319;
  uint64_t v190 = v320;
  uint64_t v191 = v324;
  uint64_t v192 = v328;
  uint64_t v193 = v325;
  sub_24EC9D2CC(v334, v318, (uint64_t *)&v425, v319, v320, v324, v328, v325, v314, (uint64_t)v370, v353, v359, v372, v374, v366, v249, v250, v251, v367,
    v373,
    v252,
    v253,
    v254);
  (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v193, v299);
  (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v192, v297);
  (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v191, v330);
  (*(void (**)(uint64_t, uint64_t))(v326 + 8))(v190, v327);
  (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v189, v323);
  (*(void (**)(uint64_t, uint64_t))(v321 + 8))(v188, v187);
  (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v334, v294);
  uint64_t v194 = v348;
  uint64_t v195 = v306;
  v347(v348, v361, v306);
  uint64_t v196 = swift_allocObject();
  unint64_t v197 = v358;
  *(void *)(v196 + 16) = v360;
  *(void *)(v196 + 24) = v197;
  uint64_t v198 = v359;
  *(void *)(v196 + 32) = v362;
  *(void *)(v196 + 40) = v198;
  uint64_t v199 = v374;
  *(void *)(v196 + 48) = v372;
  *(void *)(v196 + 56) = v199;
  uint64_t v200 = v364;
  *(void *)(v196 + 64) = v371;
  *(void *)(v196 + 72) = v200;
  uint64_t v201 = v338;
  *(void *)(v196 + 80) = v366;
  *(void *)(v196 + 88) = v201;
  uint64_t v202 = WitnessTable;
  *(void *)(v196 + 96) = v351;
  *(void *)(v196 + 104) = v202;
  uint64_t v203 = v337;
  *(void *)(v196 + 112) = v343;
  *(void *)(v196 + 120) = v203;
  uint64_t v204 = v355;
  *(void *)(v196 + 128) = v187;
  *(void *)(v196 + 136) = v204;
  uint64_t v205 = v368;
  *(void *)(v196 + 144) = v370;
  *(void *)(v196 + 152) = v205;
  uint64_t v206 = v373;
  *(void *)(v196 + 160) = v367;
  *(void *)(v196 + 168) = v206;
  uint64_t v207 = v350;
  *(void *)(v196 + 176) = v363;
  *(void *)(v196 + 184) = v207;
  uint64_t v208 = v342;
  *(void *)(v196 + 192) = v357;
  *(void *)(v196 + 200) = v208;
  uint64_t v209 = v336;
  *(void *)(v196 + 208) = v339;
  *(void *)(v196 + 216) = v209;
  size_t v210 = (char *)(v196 + v341);
  uint64_t v211 = v365;
  *(void *)(v196 + 224) = OpaqueTypeMetadata2;
  *(void *)(v196 + 232) = v211;
  v340(v210, v194, v195);
  *(void *)&v332[v196] = v356;
  uint64_t v212 = v313;
  uint64_t v213 = v314;
  sub_24EE56A10();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v213, v212);
  v347(v194, v361, v195);
  uint64_t v214 = swift_allocObject();
  unint64_t v215 = v358;
  *(void *)(v214 + 16) = v360;
  *(void *)(v214 + 24) = v215;
  uint64_t v216 = v359;
  *(void *)(v214 + 32) = v362;
  *(void *)(v214 + 40) = v216;
  uint64_t v217 = v374;
  *(void *)(v214 + 48) = v372;
  *(void *)(v214 + 56) = v217;
  uint64_t v218 = v364;
  *(void *)(v214 + 64) = v371;
  *(void *)(v214 + 72) = v218;
  *(void *)(v214 + 80) = v366;
  *(void *)(v214 + 88) = v201;
  uint64_t v219 = WitnessTable;
  *(void *)(v214 + 96) = v351;
  *(void *)(v214 + 104) = v219;
  *(void *)(v214 + 112) = v343;
  *(void *)(v214 + 120) = v203;
  uint64_t v220 = v355;
  *(void *)(v214 + 128) = v353;
  *(void *)(v214 + 136) = v220;
  unint64_t v221 = v370;
  uint64_t v222 = v368;
  *(void *)(v214 + 144) = v370;
  *(void *)(v214 + 152) = v222;
  uint64_t v223 = v373;
  *(void *)(v214 + 160) = v367;
  *(void *)(v214 + 168) = v223;
  *(void *)(v214 + 176) = v363;
  *(void *)(v214 + 184) = v207;
  uint64_t v224 = v342;
  *(void *)(v214 + 192) = v357;
  *(void *)(v214 + 200) = v224;
  *(void *)(v214 + 208) = v339;
  *(void *)(v214 + 216) = v209;
  size_t v225 = (char *)(v214 + v341);
  uint64_t v226 = v365;
  *(void *)(v214 + 224) = OpaqueTypeMetadata2;
  *(void *)(v214 + 232) = v226;
  uint64_t v227 = v195;
  v340(v225, v348, v195);
  *(void *)&v332[v214] = v356;
  long long v228 = v288;
  uint64_t v229 = v315;
  char v230 = v316;
  sub_24EE56770();
  swift_release();
  (*(void (**)(char *, uint64_t))(v290 + 8))(v230, v229);
  uint64_t v231 = (uint64_t)v302;
  uint64_t v232 = v335;
  (*(void (**)(char *, uint64_t))(v226 + 168))(v221, v226);
  uint64_t v233 = v227;
  uint64_t v234 = v361;
  unint64_t v235 = (uint64_t *)(v361 + *(int *)(v227 + 288));
  uint64_t v236 = v300;
  sub_24ED0A178(v231, *v235, v235[1], v300);
  swift_retain();
  uint64_t v237 = v289;
  uint64_t v238 = v317;
  uint64_t v239 = v312;
  MEMORY[0x25334D0C0](v236, v317, v312, v280);
  (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v236, v239);
  (*(void (**)(char *, uint64_t))(v291 + 8))(v228, v238);
  uint64_t v240 = v234 + *(int *)(v233 + 252);
  uint64_t v241 = v281;
  uint64_t v242 = v279;
  uint64_t v243 = v232;
  uint64_t v244 = v311;
  sub_24ED7F0A4(v243, v240, v356, v311, v279, v351, v337, v355, v370, v281, v336, v365);
  (*(void (**)(char *, uint64_t))(v292 + 8))(v237, v244);
  *(void *)&long long v425 = v244;
  *((void *)&v425 + 1) = v241;
  uint64_t v375 = swift_getOpaqueTypeConformance2();
  uint64_t v376 = v241;
  uint64_t v245 = v283;
  swift_getWitnessTable();
  uint64_t v246 = v282;
  sub_24EC90894(v242);
  uint64_t v247 = *(void (**)(uint64_t, uint64_t))(v285 + 8);
  v247(v242, v245);
  sub_24EC90894(v246);
  return ((uint64_t (*)(char *, uint64_t))v247)(v246, v245);
}

uint64_t sub_24ED14F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, long long a19, long long a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v51 = a8;
  uint64_t v48 = a7;
  uint64_t v46 = a6;
  uint64_t v45 = a5;
  uint64_t v43 = a4;
  uint64_t v41 = a3;
  v35[1] = a2;
  uint64_t v53 = a1;
  uint64_t v49 = a23;
  uint64_t v40 = a16;
  uint64_t v52 = a22;
  uint64_t v50 = a21;
  long long v47 = a20;
  long long v44 = a19;
  long long v42 = a18;
  long long v39 = a17;
  long long v38 = a13;
  long long v37 = a12;
  v35[0] = *(void *)(a11 - 8);
  long long v36 = a9;
  MEMORY[0x270FA5388](a1);
  uint64_t v24 = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EE55A60();
  uint64_t v26 = sub_24EE57430();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v35 - v28;
  uint64_t v54 = v41;
  uint64_t v55 = v43;
  uint64_t v56 = v45;
  uint64_t v57 = v46;
  uint64_t v58 = v48;
  uint64_t v59 = v51;
  long long v60 = v36;
  uint64_t v61 = a10;
  uint64_t v62 = a11;
  uint64_t v30 = v40;
  long long v63 = v37;
  long long v64 = v38;
  uint64_t v65 = a14;
  uint64_t v66 = a15;
  uint64_t v31 = v49;
  long long v68 = v39;
  long long v69 = v42;
  long long v70 = v44;
  long long v71 = v47;
  uint64_t v67 = v40;
  uint64_t v72 = v50;
  uint64_t v73 = v52;
  uint64_t v74 = v49;
  uint64_t v32 = type metadata accessor for VerticalGridView();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v53 + *(int *)(v32 + 308), v26);
  uint64_t v33 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v25) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v31 + 152))(v30, v31);
    sub_24EE55A50();
    (*(void (**)(char *, uint64_t))(v35[0] + 8))(v24, a11);
    uint64_t v27 = v33;
    uint64_t v26 = v25;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_24ED15340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, long long a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,long long a24,uint64_t a25)
{
  uint64_t v51 = a8;
  uint64_t v50 = a7;
  uint64_t v48 = a6;
  uint64_t v47 = a5;
  uint64_t v45 = a4;
  uint64_t v57 = a3;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v58 = a9;
  uint64_t v54 = a25;
  long long v53 = a24;
  long long v52 = a23;
  uint64_t v59 = a22;
  uint64_t v49 = a21;
  uint64_t v46 = a20;
  long long v44 = a19;
  long long v43 = a18;
  uint64_t v42 = a16;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v28 = (char *)&v39 - v27;
  uint64_t v29 = *(void *)(a12 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v39 - v34;
  uint64_t v60 = v45;
  uint64_t v61 = v47;
  uint64_t v62 = v48;
  uint64_t v63 = v50;
  uint64_t v64 = v51;
  long long v65 = v39;
  uint64_t v66 = a11;
  uint64_t v67 = a12;
  long long v68 = v40;
  long long v69 = v41;
  uint64_t v70 = a15;
  uint64_t v71 = v42;
  uint64_t v72 = a17;
  long long v73 = v43;
  long long v74 = v44;
  uint64_t v75 = v46;
  uint64_t v76 = v49;
  long long v78 = v52;
  long long v79 = v53;
  uint64_t v77 = v59;
  uint64_t v80 = v54;
  type metadata accessor for VerticalGridView();
  sub_24EE559E0();
  long long v36 = (void (*)(char *))sub_24EE559D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a17 - 8) + 16))(v28, v56, a17);
  *(void *)&v28[*(int *)(TupleTypeMetadata2 + 48)] = v57;
  v36(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, TupleTypeMetadata2);
  sub_24EC90894(v32);
  long long v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v37(v32, a12);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v35, a12);
}

uint64_t sub_24ED15778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, long long a19, long long a20,long long a21,uint64_t a22,uint64_t a23)
{
  uint64_t v51 = a8;
  uint64_t v49 = a7;
  uint64_t v47 = a6;
  uint64_t v58 = a3;
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v59 = a9;
  uint64_t v54 = a23;
  uint64_t v53 = a22;
  long long v52 = a21;
  long long v50 = a20;
  long long v48 = a19;
  long long v46 = a18;
  uint64_t v45 = a16;
  long long v44 = a14;
  long long v43 = a13;
  long long v42 = a12;
  long long v41 = a11;
  long long v40 = a10;
  uint64_t v25 = sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v55 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v28 = (char *)&v40 - v27;
  uint64_t v29 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v40 - v34;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v62 = v47;
  uint64_t v63 = v49;
  uint64_t v64 = v51;
  long long v65 = v40;
  long long v66 = v41;
  long long v67 = v42;
  long long v68 = v43;
  long long v69 = v44;
  uint64_t v70 = a15;
  uint64_t v71 = v45;
  uint64_t v72 = a17;
  long long v73 = v46;
  long long v74 = v48;
  long long v75 = v50;
  long long v76 = v52;
  uint64_t v77 = v53;
  uint64_t v78 = v54;
  type metadata accessor for VerticalGridView();
  sub_24EE559E0();
  long long v36 = (void (*)(char *))sub_24EE559D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v28, v57, v25);
  long long v37 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
  *(void *)long long v37 = v58;
  v37[8] = 0;
  v36(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, TupleTypeMetadata2);
  sub_24EC90894(v32);
  long long v38 = *(void (**)(char *, uint64_t))(v29 + 8);
  v38(v32, a5);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v38)(v35, a5);
}

uint64_t sub_24ED15BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20)
{
  uint64_t v35 = a2;
  long long v45 = a18;
  long long v44 = a17;
  long long v43 = a16;
  long long v42 = a15;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a12;
  long long v38 = a11;
  long long v37 = a10;
  long long v36 = a9;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v51 = a8;
  long long v52 = a9;
  long long v53 = a10;
  long long v54 = a11;
  long long v55 = a12;
  long long v56 = a13;
  long long v57 = a14;
  long long v58 = a15;
  long long v59 = a16;
  long long v60 = a17;
  long long v61 = a18;
  uint64_t v62 = a19;
  uint64_t v63 = a20;
  uint64_t v30 = type metadata accessor for VerticalGridView();
  sub_24ED25FB4(a1 + *(int *)(v30 + 300), (uint64_t)v29);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1) {
    return sub_24ED2601C((uint64_t)v29);
  }
  uint64_t v46 = v35;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
}

uint64_t sub_24ED15E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20)
{
  uint64_t v35 = a2;
  long long v45 = a18;
  long long v44 = a17;
  long long v43 = a16;
  long long v42 = a15;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a12;
  long long v38 = a11;
  long long v37 = a10;
  long long v36 = a9;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v51 = a8;
  long long v52 = a9;
  long long v53 = a10;
  long long v54 = a11;
  long long v55 = a12;
  long long v56 = a13;
  long long v57 = a14;
  long long v58 = a15;
  long long v59 = a16;
  long long v60 = a17;
  long long v61 = a18;
  uint64_t v62 = a19;
  uint64_t v63 = a20;
  uint64_t v30 = type metadata accessor for VerticalGridView();
  sub_24ED25FB4(a1 + *(int *)(v30 + 304), (uint64_t)v29);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1) {
    return sub_24ED2601C((uint64_t)v29);
  }
  uint64_t v46 = v35;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
}

uint64_t VerticalGridView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v3 = a1[3];
  uint64_t v101 = a1[14];
  uint64_t v4 = a1[19];
  uint64_t v102 = a1[26];
  uint64_t v205 = v3;
  uint64_t v206 = v101;
  uint64_t v207 = v4;
  uint64_t v208 = v102;
  uint64_t v98 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v99 = sub_24EE55DD0();
  uint64_t v100 = sub_24EE56240();
  uint64_t v97 = sub_24EE57430();
  uint64_t v113 = a1[29];
  uint64_t v94 = *(void *)(v113 + 32);
  uint64_t v107 = a1[18];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v92 = sub_24EE571B0();
  uint64_t v5 = a1[20];
  uint64_t v205 = a1[5];
  uint64_t v108 = v205;
  uint64_t v207 = v3;
  uint64_t v208 = v5;
  uint64_t v6 = v5;
  uint64_t v110 = v5;
  uint64_t AssociatedConformanceWitness = v4;
  uint64_t v210 = v4;
  uint64_t v82 = type metadata accessor for ActionCardView();
  uint64_t WitnessTable = swift_getWitnessTable();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v85 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v7 = sub_24EE55DD0();
  uint64_t v87 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v219 = v6;
  uint64_t v220 = v87;
  uint64_t v8 = MEMORY[0x263F18E48];
  uint64_t v217 = swift_getWitnessTable();
  uint64_t v218 = MEMORY[0x263F198F8];
  uint64_t v106 = v8;
  uint64_t v80 = v7;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v69 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v74 = sub_24EE55DD0();
  uint64_t v215 = v217;
  uint64_t v216 = MEMORY[0x263F18860];
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v205 = v74;
  uint64_t v206 = v72;
  swift_getOpaqueTypeMetadata2();
  uint64_t v70 = sub_24EE56240();
  uint64_t v76 = sub_24EE56B10();
  uint64_t v75 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v77 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v78 = sub_24EE56240();
  uint64_t v63 = sub_24EE56240();
  uint64_t v109 = a1[10];
  uint64_t v95 = a1[16];
  OpaqueTypeMetadata2 = a1[24];
  uint64_t v96 = a1[28];
  uint64_t v207 = v3;
  uint64_t v208 = v109;
  uint64_t AssociatedConformanceWitness = v95;
  uint64_t v210 = v110;
  uint64_t v211 = v4;
  uint64_t v212 = v4;
  uint64_t v111 = v4;
  uint64_t v213 = OpaqueTypeMetadata2;
  uint64_t v214 = v96;
  uint64_t v73 = type metadata accessor for FullWidthStageView();
  uint64_t v71 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v86 = v3;
  uint64_t v68 = type metadata accessor for InfoActionCardView();
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v205 = v68;
  uint64_t v206 = v67;
  swift_getOpaqueTypeMetadata2();
  uint64_t v66 = sub_24EE56240();
  uint64_t v47 = sub_24EE56240();
  uint64_t v105 = a1;
  uint64_t v9 = a1[7];
  uint64_t v88 = a1[6];
  uint64_t v89 = v9;
  uint64_t v10 = a1[21];
  uint64_t v90 = a1[22];
  uint64_t v91 = v10;
  uint64_t AssociatedConformanceWitness = v10;
  uint64_t v210 = v90;
  uint64_t v65 = type metadata accessor for LargeBrickView();
  uint64_t v64 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v62 = type metadata accessor for DynamicBrickView();
  uint64_t v61 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v54 = sub_24EE56240();
  uint64_t v60 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v59 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v57 = sub_24EE56240();
  uint64_t v58 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v56 = type metadata accessor for StandardCardView();
  uint64_t v55 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v207 = v110;
  uint64_t v208 = v4;
  uint64_t v53 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v52 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v35[4] = sub_24EE56240();
  uint64_t v51 = type metadata accessor for StandardVerticalStackView();
  uint64_t v50 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v49 = type metadata accessor for TallCardView();
  uint64_t v48 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v46 = sub_24EE56240();
  void v35[2] = sub_24EE56240();
  uint64_t v44 = type metadata accessor for VerticalStackCard();
  uint64_t v43 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v35[3] = sub_24EE56240();
  uint64_t v37 = type metadata accessor for WideBrickView();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v205 = v37;
  uint64_t v206 = v36;
  swift_getOpaqueTypeMetadata2();
  v35[5] = sub_24EE56240();
  v35[6] = sub_24EE56240();
  uint64_t v38 = sub_24EE56240();
  uint64_t v39 = sub_24EE56B10();
  uint64_t v41 = sub_24EE55DD0();
  uint64_t v42 = sub_24EE56240();
  uint64_t v45 = sub_24EE55DD0();
  v35[1] = sub_24EE55DD0();
  uint64_t v11 = a1[8];
  uint64_t v83 = a1[9];
  uint64_t v84 = v11;
  swift_getAssociatedConformanceWitness();
  uint64_t v85 = a1[23];
  v35[7] = type metadata accessor for CanvasContextMenu();
  uint64_t v40 = sub_24EE55DD0();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v203 = swift_getOpaqueTypeConformance2();
  uint64_t v204 = swift_getOpaqueTypeConformance2();
  uint64_t v202 = swift_getWitnessTable();
  uint64_t v200 = swift_getWitnessTable();
  uint64_t v201 = MEMORY[0x263F18C10];
  uint64_t v198 = swift_getWitnessTable();
  uint64_t v199 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v82 = MEMORY[0x263F1B6E0];
  uint64_t v196 = v13;
  uint64_t v197 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v194 = OpaqueTypeConformance2;
  uint64_t v195 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v192 = swift_getOpaqueTypeConformance2();
  uint64_t v193 = swift_getOpaqueTypeConformance2();
  uint64_t v190 = v14;
  uint64_t v191 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v188 = swift_getOpaqueTypeConformance2();
  uint64_t v189 = swift_getOpaqueTypeConformance2();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v186 = swift_getOpaqueTypeConformance2();
  uint64_t v187 = v189;
  uint64_t v184 = v16;
  uint64_t v185 = swift_getWitnessTable();
  uint64_t v182 = v15;
  uint64_t v183 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v180 = swift_getOpaqueTypeConformance2();
  uint64_t v181 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v178 = swift_getOpaqueTypeConformance2();
  uint64_t v179 = swift_getOpaqueTypeConformance2();
  uint64_t v176 = v18;
  uint64_t v177 = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v174 = swift_getOpaqueTypeConformance2();
  uint64_t v175 = OpaqueTypeMetadata2;
  uint64_t v172 = swift_getWitnessTable();
  uint64_t v173 = swift_getOpaqueTypeConformance2();
  uint64_t v170 = v19;
  uint64_t v171 = swift_getWitnessTable();
  uint64_t v168 = v17;
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v167 = swift_getWitnessTable();
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v166 = v87;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v163 = MEMORY[0x263F1BA00];
  uint64_t v164 = v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = MEMORY[0x263F1A240];
  uint64_t v161 = v21;
  uint64_t v162 = MEMORY[0x263F1A240];
  uint64_t v159 = swift_getWitnessTable();
  uint64_t v160 = v22;
  uint64_t v157 = swift_getWitnessTable();
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v207 = sub_24EE56240();
  uint64_t v208 = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  uint64_t v205 = v40;
  uint64_t v206 = v23;
  uint64_t v155 = swift_getOpaqueTypeConformance2();
  uint64_t v156 = v23;
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v154 = v153;
  uint64_t v152 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE56E10();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE370);
  sub_24EE56CF0();
  unint64_t v24 = sub_24ED17434();
  uint64_t v150 = swift_getWitnessTable();
  uint64_t v151 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  unint64_t v148 = v24;
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v147 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v146 = MEMORY[0x263F18C10];
  uint64_t v142 = v25;
  uint64_t v143 = swift_getWitnessTable();
  unint64_t v144 = sub_24ED174A8();
  swift_getWitnessTable();
  uint64_t v26 = sub_24EE56C30();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)v35 - v31;
  sub_24EE56140();
  uint64_t v114 = v105[2];
  uint64_t v115 = v86;
  uint64_t v116 = v105[4];
  uint64_t v117 = v108;
  uint64_t v118 = v88;
  uint64_t v119 = v89;
  uint64_t v120 = v84;
  uint64_t v121 = v83;
  uint64_t v122 = v109;
  long long v123 = *(_OWORD *)(v105 + 11);
  uint64_t v124 = v105[13];
  uint64_t v125 = v101;
  uint64_t v126 = v105[15];
  uint64_t v127 = v95;
  uint64_t v128 = v105[17];
  uint64_t v129 = v107;
  uint64_t v130 = v111;
  uint64_t v131 = v110;
  uint64_t v132 = v91;
  uint64_t v133 = v90;
  uint64_t v134 = v85;
  uint64_t v135 = OpaqueTypeMetadata2;
  uint64_t v136 = v105[25];
  uint64_t v137 = v102;
  uint64_t v138 = v105[27];
  uint64_t v139 = v96;
  uint64_t v140 = v113;
  uint64_t v141 = v103;
  sub_24EE56C20();
  swift_getWitnessTable();
  sub_24EC90894(v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
  v33(v29, v26);
  sub_24EC90894(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, v26);
}

unint64_t sub_24ED17434()
{
  unint64_t result = qword_26B1DE1B0;
  if (!qword_26B1DE1B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE1B0);
  }
  return result;
}

unint64_t sub_24ED174A8()
{
  unint64_t result = qword_26B1DE368;
  if (!qword_26B1DE368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE370);
    sub_24EC885A8(&qword_26B1DE2C0, &qword_26B1DE2C8, (void (*)(void))sub_24EC88580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE368);
  }
  return result;
}

uint64_t sub_24ED17548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v141 = a8;
  uint64_t v143 = a7;
  uint64_t v137 = a6;
  uint64_t v121 = a4;
  uint64_t v118 = a2;
  uint64_t v123 = a1;
  uint64_t v127 = a9;
  uint64_t v119 = a13;
  uint64_t v117 = a12;
  uint64_t v136 = a23;
  uint64_t v134 = a22;
  uint64_t v122 = a28;
  uint64_t v138 = a29;
  uint64_t v135 = a24;
  uint64_t v142 = a25;
  uint64_t v115 = a16;
  uint64_t v133 = a17;
  uint64_t v132 = a10;
  uint64_t v140 = a11;
  uint64_t v116 = a18;
  uint64_t v139 = a19;
  uint64_t v131 = a30;
  uint64_t v120 = a26;
  uint64_t v114 = a27;
  uint64_t v113 = a14;
  uint64_t v112 = a15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v227 = a3;
  uint64_t v228 = a15;
  uint64_t v229 = a20;
  uint64_t v230 = a27;
  uint64_t v124 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v125 = sub_24EE55DD0();
  uint64_t v126 = sub_24EE56240();
  uint64_t v130 = sub_24EE57430();
  uint64_t v111 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v109 = (char *)sub_24EE571B0();
  uint64_t v129 = a5;
  uint64_t v104 = (char *)type metadata accessor for ActionCardView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56430();
  sub_24EE55DD0();
  sub_24EE55DD0();
  uint64_t v108 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v241 = a21;
  uint64_t v242 = v108;
  uint64_t v32 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v240 = MEMORY[0x263F198F8];
  uint64_t v128 = v32;
  swift_getWitnessTable();
  uint64_t v90 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v93 = sub_24EE55DD0();
  uint64_t v237 = WitnessTable;
  uint64_t v238 = MEMORY[0x263F18860];
  uint64_t v92 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v91 = sub_24EE56240();
  uint64_t v96 = sub_24EE56B10();
  uint64_t v95 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v99 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v100 = sub_24EE56240();
  uint64_t v82 = sub_24EE56240();
  uint64_t v233 = a20;
  uint64_t v234 = a20;
  uint64_t v235 = a25;
  uint64_t v236 = a29;
  uint64_t v98 = type metadata accessor for FullWidthStageView();
  uint64_t v97 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v106 = a3;
  uint64_t v107 = a20;
  uint64_t v89 = type metadata accessor for InfoActionCardView();
  uint64_t v88 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v87 = sub_24EE56240();
  uint64_t v68 = sub_24EE56240();
  uint64_t v232 = a23;
  uint64_t v86 = type metadata accessor for LargeBrickView();
  uint64_t v85 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v84 = type metadata accessor for DynamicBrickView();
  uint64_t v83 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v75 = sub_24EE56240();
  uint64_t v81 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v80 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v78 = sub_24EE56240();
  uint64_t v79 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v77 = type metadata accessor for StandardCardView();
  uint64_t v76 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v74 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v73 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[2] = sub_24EE56240();
  uint64_t v72 = type metadata accessor for StandardVerticalStackView();
  uint64_t v71 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v70 = type metadata accessor for TallCardView();
  uint64_t v69 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v67 = sub_24EE56240();
  v62[0] = sub_24EE56240();
  uint64_t v105 = a21;
  uint64_t v66 = type metadata accessor for VerticalStackCard();
  uint64_t v65 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[1] = sub_24EE56240();
  type metadata accessor for WideBrickView();
  v62[6] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[3] = sub_24EE56240();
  v62[5] = sub_24EE56240();
  v62[8] = sub_24EE56240();
  v62[9] = sub_24EE56B10();
  v62[10] = sub_24EE55DD0();
  uint64_t v64 = sub_24EE56240();
  uint64_t v94 = sub_24EE55DD0();
  v62[4] = sub_24EE55DD0();
  swift_getAssociatedConformanceWitness();
  v62[7] = type metadata accessor for CanvasContextMenu();
  uint64_t v63 = sub_24EE55DD0();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v225 = swift_getOpaqueTypeConformance2();
  uint64_t v226 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = MEMORY[0x263F19B40];
  uint64_t v224 = swift_getWitnessTable();
  uint64_t v222 = swift_getWitnessTable();
  uint64_t v223 = MEMORY[0x263F18C10];
  uint64_t v220 = swift_getWitnessTable();
  uint64_t v221 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v218 = swift_getWitnessTable();
  uint64_t v219 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v216 = OpaqueTypeConformance2;
  uint64_t v217 = swift_getWitnessTable();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v214 = swift_getOpaqueTypeConformance2();
  uint64_t v215 = swift_getOpaqueTypeConformance2();
  uint64_t v212 = v35;
  uint64_t v213 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v210 = swift_getOpaqueTypeConformance2();
  uint64_t v211 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v208 = swift_getOpaqueTypeConformance2();
  uint64_t v209 = v211;
  uint64_t v206 = v37;
  uint64_t v207 = swift_getWitnessTable();
  uint64_t v204 = v36;
  uint64_t v205 = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v202 = swift_getOpaqueTypeConformance2();
  uint64_t v203 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v200 = swift_getOpaqueTypeConformance2();
  uint64_t v201 = swift_getOpaqueTypeConformance2();
  uint64_t v198 = v39;
  uint64_t v199 = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v196 = swift_getOpaqueTypeConformance2();
  uint64_t v197 = a25;
  uint64_t v194 = swift_getWitnessTable();
  uint64_t v195 = swift_getOpaqueTypeConformance2();
  uint64_t v192 = v40;
  uint64_t v193 = swift_getWitnessTable();
  uint64_t v190 = v38;
  uint64_t v191 = swift_getWitnessTable();
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v187 = swift_getWitnessTable();
  uint64_t v188 = v108;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v185 = MEMORY[0x263F1BA00];
  uint64_t v186 = v41;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = MEMORY[0x263F1A240];
  uint64_t v183 = v42;
  uint64_t v184 = MEMORY[0x263F1A240];
  uint64_t v181 = swift_getWitnessTable();
  uint64_t v182 = v43;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v180 = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v229 = sub_24EE56240();
  uint64_t v230 = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  uint64_t v227 = v63;
  uint64_t v228 = v44;
  uint64_t v177 = swift_getOpaqueTypeConformance2();
  uint64_t v178 = v44;
  uint64_t v103 = v34;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v176 = v175;
  v174[42] = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v102 = sub_24EE56E10();
  uint64_t v101 = sub_24EE55DD0();
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE370);
  uint64_t v45 = sub_24EE56CF0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t AssociatedTypeWitness = v45;
  uint64_t v111 = v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v104 = (char *)v62 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v109 = (char *)v62 - v49;
  v174[2] = v118;
  v174[3] = v106;
  v174[4] = v121;
  v174[5] = v129;
  v174[6] = v137;
  v174[7] = v143;
  v174[8] = v141;
  v174[9] = v132;
  v174[10] = v140;
  v174[11] = v117;
  v174[12] = v119;
  v174[13] = v113;
  v174[14] = v112;
  v174[15] = v115;
  v174[16] = v133;
  v174[17] = v116;
  v174[18] = v139;
  v174[19] = v107;
  v174[20] = v105;
  v174[21] = v134;
  v174[22] = v136;
  v174[23] = v135;
  v174[24] = v142;
  v174[25] = v120;
  v174[26] = v114;
  v174[27] = v122;
  v174[28] = v138;
  v174[29] = v131;
  v174[30] = v123;
  v173[2] = v118;
  v173[3] = v106;
  v173[4] = v121;
  v173[5] = v129;
  v173[6] = v137;
  v173[7] = v143;
  v173[8] = v141;
  v173[9] = v132;
  v173[10] = v140;
  v173[11] = v117;
  v173[12] = v119;
  v173[13] = v113;
  v173[14] = v112;
  v173[15] = v115;
  v173[16] = v133;
  v173[17] = v116;
  v173[18] = v139;
  v173[19] = v107;
  v173[20] = v105;
  v173[21] = v134;
  v173[22] = v136;
  v173[23] = v135;
  v173[24] = v142;
  v173[25] = v120;
  v173[26] = v114;
  v173[27] = v122;
  v173[28] = v138;
  v173[29] = v131;
  v173[30] = v123;
  uint64_t v144 = v118;
  uint64_t v145 = v106;
  uint64_t v146 = v121;
  uint64_t v147 = v129;
  uint64_t v148 = v137;
  uint64_t v149 = v143;
  uint64_t v150 = v141;
  uint64_t v151 = v132;
  uint64_t v152 = v140;
  uint64_t v153 = v117;
  uint64_t v154 = v119;
  uint64_t v155 = v113;
  uint64_t v156 = v112;
  uint64_t v157 = v115;
  uint64_t v158 = v133;
  uint64_t v159 = v116;
  uint64_t v160 = v139;
  uint64_t v161 = v107;
  uint64_t v162 = v105;
  uint64_t v163 = v134;
  uint64_t v164 = v136;
  uint64_t v165 = v135;
  uint64_t v166 = v142;
  uint64_t v167 = v120;
  uint64_t v168 = v114;
  uint64_t v169 = v122;
  uint64_t v170 = v138;
  uint64_t v171 = v131;
  uint64_t v172 = v123;
  unint64_t v50 = sub_24ED17434();
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  v174[40] = v51;
  v174[41] = v52;
  uint64_t v53 = swift_getWitnessTable();
  v174[38] = v50;
  v174[39] = v53;
  v174[37] = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  v174[35] = swift_getWitnessTable();
  v174[36] = MEMORY[0x263F18C10];
  uint64_t v60 = swift_getWitnessTable();
  unint64_t v61 = sub_24ED174A8();
  uint64_t v55 = v104;
  sub_24EDF0758((uint64_t)sub_24ED24468, (uint64_t)v174, (uint64_t)sub_24ED24480, (uint64_t)v173, (void (*)(uint64_t))sub_24ED24498);
  v174[32] = v54;
  v174[33] = v60;
  v174[34] = v61;
  uint64_t v56 = AssociatedTypeWitness;
  swift_getWitnessTable();
  uint64_t v57 = v109;
  sub_24EC90894(v55);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v111 + 8);
  v58(v55, v56);
  sub_24EC90894(v57);
  return ((uint64_t (*)(char *, uint64_t))v58)(v57, v56);
}

uint64_t sub_24ED189D4()
{
  return sub_24ED246D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED17548);
}

uint64_t sub_24ED189EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED18A60@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v220 = a8;
  uint64_t v229 = a7;
  uint64_t v227 = a6;
  uint64_t v217 = a4;
  uint64_t v215 = a2;
  uint64_t v206 = a1;
  v150[2] = a9;
  uint64_t v207 = a30;
  uint64_t v208 = a29;
  uint64_t v205 = a28;
  uint64_t v204 = a27;
  uint64_t v203 = a26;
  uint64_t v222 = a25;
  uint64_t v221 = a24;
  uint64_t v228 = a23;
  uint64_t v226 = a22;
  uint64_t v231 = a19;
  uint64_t v214 = a18;
  uint64_t v224 = a17;
  uint64_t v213 = a16;
  uint64_t v212 = a15;
  uint64_t v211 = a14;
  uint64_t v210 = a13;
  uint64_t v209 = a12;
  uint64_t v230 = a11;
  uint64_t v223 = a10;
  uint64_t v32 = sub_24EE562D0();
  MEMORY[0x270FA5388](v32 - 8);
  v150[1] = (char *)v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v200 = sub_24EE571B0();
  uint64_t v234 = a5;
  uint64_t v225 = a3;
  uint64_t v235 = a3;
  uint64_t v236 = (uint64_t)a3;
  uint64_t v237 = a21;
  uint64_t v238 = a20;
  uint64_t v239 = a20;
  uint64_t v34 = type metadata accessor for ActionCardView();
  uint64_t v198 = v34;
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  uint64_t v234 = (char *)v34;
  uint64_t v235 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v187 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v35 = sub_24EE55DD0();
  uint64_t v199 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v319 = a21;
  uint64_t v320 = v199;
  uint64_t v36 = (char *)MEMORY[0x263F18E48];
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v317 = v37;
  uint64_t v318 = MEMORY[0x263F198F8];
  uint64_t v195 = (char *)v35;
  uint64_t v196 = v36;
  uint64_t v194 = swift_getWitnessTable();
  uint64_t v234 = (char *)v35;
  uint64_t v235 = (char *)v194;
  uint64_t v183 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v38 = sub_24EE55DD0();
  uint64_t v186 = v38;
  uint64_t v315 = v37;
  uint64_t v316 = MEMORY[0x263F18860];
  uint64_t v185 = swift_getWitnessTable();
  uint64_t v234 = (char *)v38;
  uint64_t v235 = (char *)v185;
  swift_getOpaqueTypeMetadata2();
  uint64_t v184 = sub_24EE56240();
  uint64_t v189 = sub_24EE56B10();
  uint64_t v188 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v192 = (void *)sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v193 = sub_24EE56240();
  uint64_t v175 = sub_24EE56240();
  uint64_t v234 = a5;
  uint64_t v39 = v225;
  uint64_t v235 = v225;
  uint64_t v236 = (uint64_t)v225;
  uint64_t v237 = v230;
  uint64_t v238 = v224;
  uint64_t v239 = a21;
  uint64_t v240 = (char *)a20;
  uint64_t v241 = (char *)a20;
  uint64_t v242 = v222;
  uint64_t v243 = v208;
  uint64_t v40 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v40;
  uint64_t v190 = swift_getWitnessTable();
  uint64_t v234 = (char *)v40;
  uint64_t v235 = (char *)v190;
  swift_getOpaqueTypeMetadata2();
  uint64_t v216 = a20;
  uint64_t v41 = type metadata accessor for InfoActionCardView();
  uint64_t v182 = v41;
  uint64_t v181 = swift_getWitnessTable();
  uint64_t v234 = (char *)v41;
  uint64_t v235 = (char *)v181;
  swift_getOpaqueTypeMetadata2();
  uint64_t v180 = sub_24EE56240();
  uint64_t v161 = sub_24EE56240();
  uint64_t v234 = a5;
  uint64_t v235 = v227;
  uint64_t v236 = v229;
  uint64_t v237 = a21;
  uint64_t v238 = v226;
  uint64_t v239 = v228;
  uint64_t v42 = type metadata accessor for LargeBrickView();
  uint64_t v179 = v42;
  uint64_t v178 = swift_getWitnessTable();
  uint64_t v234 = (char *)v42;
  uint64_t v235 = (char *)v178;
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for DynamicBrickView();
  uint64_t v177 = v43;
  uint64_t v176 = swift_getWitnessTable();
  uint64_t v234 = (char *)v43;
  uint64_t v235 = (char *)v176;
  swift_getOpaqueTypeMetadata2();
  uint64_t v168 = sub_24EE56240();
  uint64_t v44 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v174 = v44;
  uint64_t v173 = swift_getWitnessTable();
  uint64_t v234 = (char *)v44;
  uint64_t v235 = (char *)v173;
  swift_getOpaqueTypeMetadata2();
  uint64_t v171 = sub_24EE56240();
  uint64_t v172 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v45 = type metadata accessor for StandardCardView();
  uint64_t v170 = v45;
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v234 = (char *)v45;
  uint64_t v235 = (char *)v169;
  swift_getOpaqueTypeMetadata2();
  uint64_t v234 = a5;
  uint64_t v235 = v39;
  uint64_t v236 = a21;
  uint64_t v237 = a20;
  uint64_t v46 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v167 = v46;
  uint64_t v166 = swift_getWitnessTable();
  uint64_t v234 = (char *)v46;
  uint64_t v235 = (char *)v166;
  swift_getOpaqueTypeMetadata2();
  v150[5] = sub_24EE56240();
  uint64_t v47 = type metadata accessor for StandardVerticalStackView();
  uint64_t v165 = v47;
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v234 = (char *)v47;
  uint64_t v235 = (char *)v164;
  swift_getOpaqueTypeMetadata2();
  uint64_t v48 = type metadata accessor for TallCardView();
  uint64_t v163 = v48;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v234 = (char *)v48;
  uint64_t v235 = (char *)v162;
  swift_getOpaqueTypeMetadata2();
  uint64_t v160 = sub_24EE56240();
  v150[3] = sub_24EE56240();
  uint64_t v219 = (uint64_t)a5;
  uint64_t v218 = a21;
  uint64_t v49 = type metadata accessor for VerticalStackCard();
  uint64_t v159 = v49;
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v234 = (char *)v49;
  uint64_t v235 = (char *)v158;
  swift_getOpaqueTypeMetadata2();
  v150[4] = sub_24EE56240();
  uint64_t v50 = type metadata accessor for WideBrickView();
  uint64_t v151 = swift_getWitnessTable();
  uint64_t v234 = (char *)v50;
  uint64_t v235 = (char *)v151;
  swift_getOpaqueTypeMetadata2();
  v150[6] = sub_24EE56240();
  v150[8] = sub_24EE56240();
  uint64_t v153 = sub_24EE56240();
  uint64_t v154 = sub_24EE56B10();
  uint64_t v155 = sub_24EE55DD0();
  uint64_t v157 = sub_24EE56240();
  uint64_t v187 = sub_24EE55DD0();
  v150[7] = sub_24EE55DD0();
  uint64_t v51 = v220;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v234 = v51;
  uint64_t v235 = v223;
  uint64_t v236 = AssociatedConformanceWitness;
  uint64_t v237 = v221;
  uint64_t v152 = type metadata accessor for CanvasContextMenu();
  uint64_t v156 = sub_24EE55DD0();
  uint64_t v234 = (char *)v198;
  uint64_t v235 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = v195;
  uint64_t v235 = (char *)v194;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = (char *)v186;
  uint64_t v235 = (char *)v185;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  uint64_t v313 = v54;
  uint64_t v314 = v55;
  uint64_t v312 = swift_getWitnessTable();
  uint64_t v310 = swift_getWitnessTable();
  uint64_t v311 = MEMORY[0x263F18C10];
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v308 = v56;
  uint64_t v309 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v306 = v58;
  uint64_t v307 = v59;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v304 = OpaqueTypeConformance2;
  uint64_t v305 = v60;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v234 = (char *)OpaqueTypeMetadata2;
  uint64_t v235 = (char *)v190;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = (char *)v182;
  uint64_t v235 = (char *)v181;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v302 = v62;
  uint64_t v303 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v300 = v61;
  uint64_t v301 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v234 = (char *)v179;
  uint64_t v235 = (char *)v178;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = (char *)v177;
  uint64_t v235 = (char *)v176;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v298 = v66;
  uint64_t v299 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v234 = (char *)v174;
  uint64_t v235 = (char *)v173;
  uint64_t v296 = swift_getOpaqueTypeConformance2();
  uint64_t v297 = v67;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v294 = v68;
  uint64_t v295 = v69;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v292 = v65;
  uint64_t v293 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v234 = (char *)v170;
  uint64_t v235 = (char *)v169;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = (char *)v167;
  uint64_t v235 = (char *)v166;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v290 = v72;
  uint64_t v291 = v73;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v234 = (char *)v165;
  uint64_t v235 = (char *)v164;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v234 = (char *)v163;
  uint64_t v235 = (char *)v162;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  uint64_t v288 = v75;
  uint64_t v289 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v286 = v74;
  uint64_t v287 = v77;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v234 = (char *)v159;
  uint64_t v235 = (char *)v158;
  uint64_t v284 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v222;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v234 = (char *)v50;
  uint64_t v235 = (char *)v151;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v282 = v79;
  uint64_t v283 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v280 = v78;
  uint64_t v281 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v278 = v71;
  uint64_t v279 = v82;
  uint64_t v277 = swift_getWitnessTable();
  uint64_t v275 = swift_getWitnessTable();
  uint64_t v276 = v199;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v273 = MEMORY[0x263F1BA00];
  uint64_t v274 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v85 = MEMORY[0x263F1A240];
  uint64_t v271 = v84;
  uint64_t v272 = MEMORY[0x263F1A240];
  uint64_t v269 = swift_getWitnessTable();
  uint64_t v270 = v85;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v267 = v86;
  uint64_t v268 = v87;
  uint64_t v88 = v156;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v234 = (char *)v88;
  uint64_t v235 = (char *)v89;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v90 = sub_24EE56240();
  uint64_t v91 = v200;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v93 = AssociatedTypeWitness;
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v234 = (char *)v91;
  uint64_t v235 = (char *)v93;
  uint64_t v236 = v90;
  uint64_t v237 = v92;
  uint64_t v238 = v94;
  uint64_t v95 = sub_24EE56CB0();
  uint64_t v234 = (char *)v88;
  uint64_t v235 = (char *)v89;
  uint64_t v265 = swift_getOpaqueTypeConformance2();
  uint64_t v266 = v89;
  uint64_t v263 = swift_getWitnessTable();
  uint64_t v264 = v263;
  uint64_t v262 = swift_getWitnessTable();
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v202 = v95;
  uint64_t v194 = v96;
  uint64_t v97 = sub_24EE56E10();
  uint64_t v198 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v195 = (char *)v150 - v98;
  uint64_t v199 = v99;
  uint64_t v100 = sub_24EE55DD0();
  uint64_t v200 = *(void *)(v100 - 8);
  uint64_t AssociatedTypeWitness = v100;
  MEMORY[0x270FA5388](v100);
  uint64_t v196 = (char *)v150 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v102);
  uint64_t WitnessTable = (char *)v150 - v103;
  uint64_t v234 = v215;
  uint64_t v235 = v225;
  uint64_t v236 = v217;
  uint64_t v237 = v219;
  uint64_t v238 = (uint64_t)v227;
  uint64_t v239 = v229;
  uint64_t v104 = v220;
  uint64_t v240 = v220;
  uint64_t v241 = v223;
  uint64_t v242 = v230;
  uint64_t v243 = v209;
  uint64_t v244 = v210;
  uint64_t v245 = v211;
  uint64_t v246 = v212;
  uint64_t v247 = v213;
  uint64_t v248 = v224;
  uint64_t v249 = v214;
  uint64_t v250 = v231;
  uint64_t v251 = v216;
  uint64_t v252 = v218;
  uint64_t v253 = v226;
  uint64_t v254 = v228;
  uint64_t v105 = v221;
  uint64_t v255 = v221;
  uint64_t v106 = v222;
  uint64_t v256 = v222;
  uint64_t v107 = v203;
  uint64_t v257 = v203;
  uint64_t v108 = v204;
  uint64_t v258 = v204;
  uint64_t v109 = v205;
  uint64_t v259 = v205;
  uint64_t v110 = v208;
  uint64_t v260 = v208;
  uint64_t v111 = v207;
  uint64_t v261 = v207;
  uint64_t result = type metadata accessor for VerticalGridView();
  uint64_t v113 = (uint64_t *)(v206 + *(int *)(result + 260));
  double v114 = ceil((double)*v113 / (double)v113[2]);
  if ((~*(void *)&v114 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v114 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v114 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (((uint64_t)v114 & 0x8000000000000000) == 0)
  {
    uint64_t v192 = v150;
    MEMORY[0x270FA5388](result);
    uint64_t v115 = v225;
    v150[-30] = v215;
    v150[-29] = v115;
    uint64_t v116 = v219;
    v150[-28] = v217;
    v150[-27] = v116;
    uint64_t v117 = v229;
    v150[-26] = v227;
    v150[-25] = v117;
    uint64_t v118 = v223;
    v150[-24] = v104;
    v150[-23] = v118;
    uint64_t v119 = v209;
    v150[-22] = v230;
    v150[-21] = v119;
    uint64_t v120 = v211;
    v150[-20] = v210;
    v150[-19] = v120;
    uint64_t v121 = v213;
    v150[-18] = v212;
    v150[-17] = v121;
    uint64_t v122 = v214;
    v150[-16] = v224;
    v150[-15] = v122;
    uint64_t v123 = v216;
    v150[-14] = v231;
    v150[-13] = v123;
    uint64_t v124 = v226;
    v150[-12] = v218;
    v150[-11] = v124;
    v150[-10] = v228;
    v150[-9] = v105;
    v150[-8] = v106;
    v150[-7] = v107;
    v150[-6] = v108;
    v150[-5] = v109;
    v150[-4] = v110;
    v150[-3] = v111;
    uint64_t v149 = v125;
    uint64_t v193 = v126;
    sub_24EDF055C((void (*)(uint64_t *))sub_24ED24654, (uint64_t)&v150[-32], 0, v127);
    OpaqueTypeMetadata2 = v128;
    uint64_t v129 = sub_24EE56140();
    uint64_t v192 = v150;
    uint64_t v190 = v113[1];
    MEMORY[0x270FA5388](v129);
    uint64_t v130 = v225;
    v150[-30] = v215;
    v150[-29] = v130;
    uint64_t v131 = v219;
    v150[-28] = v217;
    v150[-27] = v131;
    uint64_t v132 = v229;
    v150[-26] = v227;
    v150[-25] = v132;
    uint64_t v133 = v223;
    v150[-24] = v220;
    v150[-23] = v133;
    uint64_t v134 = v209;
    v150[-22] = v230;
    v150[-21] = v134;
    uint64_t v135 = v211;
    v150[-20] = v210;
    v150[-19] = v135;
    uint64_t v136 = v213;
    v150[-18] = v212;
    v150[-17] = v136;
    uint64_t v137 = v214;
    v150[-16] = v224;
    v150[-15] = v137;
    uint64_t v138 = v216;
    v150[-14] = v231;
    v150[-13] = v138;
    uint64_t v139 = v226;
    v150[-12] = v218;
    v150[-11] = v139;
    uint64_t v140 = v221;
    v150[-10] = v228;
    v150[-9] = v140;
    v150[-8] = v106;
    v150[-7] = v107;
    v150[-6] = v108;
    v150[-5] = v109;
    v150[-4] = v110;
    v150[-3] = v111;
    uint64_t v141 = v194;
    sub_24ED1CEC8();
    uint64_t v149 = v141;
    uint64_t v142 = v195;
    sub_24EE56E00();
    uint64_t v143 = v199;
    uint64_t v144 = swift_getWitnessTable();
    uint64_t v145 = v196;
    sub_24EE569D0();
    (*(void (**)(char *, uint64_t))(v198 + 8))(v142, v143);
    uint64_t v232 = v144;
    uint64_t v233 = MEMORY[0x263F18C10];
    uint64_t v146 = AssociatedTypeWitness;
    swift_getWitnessTable();
    uint64_t v147 = WitnessTable;
    sub_24EC90894(v145);
    uint64_t v148 = *(void (**)(char *, uint64_t))(v200 + 8);
    v148(v145, v146);
    sub_24EC90894(v147);
    return ((uint64_t (*)(char *, uint64_t))v148)(v147, v146);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_24ED1A0B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20)
{
  uint64_t v41 = a1;
  uint64_t v42 = a8;
  long long v40 = a18;
  long long v39 = a17;
  long long v38 = a16;
  long long v37 = a15;
  long long v36 = a14;
  long long v35 = a13;
  long long v34 = a12;
  long long v33 = a11;
  long long v32 = a10;
  long long v31 = a9;
  uint64_t v26 = sub_24EE56D10();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (long long *)((char *)&v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v28 = xmmword_24EE5CD10;
  (*(void (**)(_OWORD *, void))(v29 + 104))(v28, *MEMORY[0x263F1B8C8]);
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v48 = a7;
  long long v49 = v31;
  long long v50 = v32;
  long long v51 = v33;
  long long v52 = v34;
  long long v53 = v35;
  long long v54 = v36;
  long long v55 = v37;
  long long v56 = v38;
  long long v57 = v39;
  long long v58 = v40;
  uint64_t v59 = a19;
  uint64_t v60 = a20;
  type metadata accessor for VerticalGridView();
  sub_24EE56D60();
  return sub_24EE56D30();
}

uint64_t sub_24ED1A33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v196 = a8;
  uint64_t v205 = a7;
  uint64_t v203 = a6;
  uint64_t v188 = a4;
  uint64_t v187 = a2;
  uint64_t v180 = a1;
  uint64_t v192 = a9;
  uint64_t v207 = a29;
  uint64_t v191 = a28;
  uint64_t v190 = a27;
  uint64_t v189 = a26;
  uint64_t v210 = a25;
  uint64_t v206 = a24;
  uint64_t v204 = a23;
  uint64_t v202 = a22;
  uint64_t v186 = a18;
  uint64_t v201 = a17;
  uint64_t v185 = a16;
  uint64_t v184 = a15;
  uint64_t v183 = a14;
  uint64_t v182 = a13;
  uint64_t v181 = a12;
  uint64_t v209 = a11;
  uint64_t v200 = a10;
  uint64_t v271 = a2;
  uint64_t v272 = a3;
  uint64_t v273 = a4;
  uint64_t v274 = a5;
  uint64_t v275 = a6;
  uint64_t v276 = a7;
  uint64_t v277 = a8;
  uint64_t v278 = a10;
  uint64_t v279 = a11;
  uint64_t v280 = a12;
  uint64_t v281 = a13;
  uint64_t v282 = a14;
  uint64_t v283 = a15;
  uint64_t v284 = a16;
  uint64_t v285 = a17;
  uint64_t v286 = a18;
  uint64_t v287 = a19;
  uint64_t v211 = a19;
  uint64_t v288 = a20;
  uint64_t v289 = a21;
  uint64_t v290 = a22;
  uint64_t v291 = a23;
  uint64_t v292 = a24;
  uint64_t v293 = a25;
  uint64_t v294 = a26;
  uint64_t v295 = a27;
  uint64_t v296 = a28;
  uint64_t v297 = a29;
  uint64_t v298 = a30;
  uint64_t v199 = a30;
  uint64_t v198 = type metadata accessor for VerticalGridView();
  uint64_t v178 = *(void *)(v198 - 8);
  uint64_t v179 = *(void *)(v178 + 64);
  MEMORY[0x270FA5388](v198);
  uint64_t v177 = (char *)v126 - v32;
  uint64_t v208 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v176 = sub_24EE571B0();
  uint64_t v195 = a5;
  uint64_t v271 = a5;
  uint64_t v272 = a3;
  uint64_t v273 = a3;
  uint64_t v274 = a21;
  uint64_t v275 = a20;
  uint64_t v276 = a20;
  uint64_t v33 = type metadata accessor for ActionCardView();
  uint64_t v171 = v33;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v271 = v33;
  uint64_t v272 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v193 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v34 = sub_24EE55DD0();
  uint64_t v175 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v269 = a21;
  uint64_t v270 = v175;
  uint64_t v35 = MEMORY[0x263F18E48];
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v267 = v36;
  uint64_t v268 = MEMORY[0x263F198F8];
  uint64_t v194 = v35;
  uint64_t v169 = v34;
  uint64_t v168 = swift_getWitnessTable();
  uint64_t v271 = v34;
  uint64_t v272 = v168;
  uint64_t v158 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v37 = sub_24EE55DD0();
  uint64_t v161 = v37;
  uint64_t v265 = v36;
  uint64_t v266 = MEMORY[0x263F18860];
  uint64_t v160 = swift_getWitnessTable();
  uint64_t v271 = v37;
  uint64_t v272 = v160;
  swift_getOpaqueTypeMetadata2();
  uint64_t v159 = sub_24EE56240();
  uint64_t v163 = sub_24EE56B10();
  uint64_t v162 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v166 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v167 = sub_24EE56240();
  uint64_t v150 = sub_24EE56240();
  uint64_t v38 = v195;
  uint64_t v271 = v195;
  uint64_t v272 = a3;
  uint64_t v273 = a3;
  uint64_t v274 = v209;
  uint64_t v275 = v201;
  uint64_t v276 = a21;
  uint64_t v277 = a20;
  uint64_t v278 = a20;
  uint64_t v279 = v210;
  uint64_t v280 = v207;
  uint64_t v39 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v39;
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v271 = v39;
  uint64_t v272 = v164;
  swift_getOpaqueTypeMetadata2();
  uint64_t v173 = a3;
  uint64_t v174 = a20;
  uint64_t v40 = type metadata accessor for InfoActionCardView();
  uint64_t v157 = v40;
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v271 = v40;
  uint64_t v272 = v156;
  swift_getOpaqueTypeMetadata2();
  uint64_t v155 = sub_24EE56240();
  uint64_t v136 = sub_24EE56240();
  uint64_t v41 = v38;
  uint64_t v271 = v38;
  uint64_t v272 = v203;
  uint64_t v273 = v205;
  uint64_t v274 = a21;
  uint64_t v275 = v202;
  uint64_t v276 = v204;
  uint64_t v42 = type metadata accessor for LargeBrickView();
  uint64_t v154 = v42;
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v271 = v42;
  uint64_t v272 = v153;
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for DynamicBrickView();
  uint64_t v152 = v43;
  uint64_t v151 = swift_getWitnessTable();
  uint64_t v271 = v43;
  uint64_t v272 = v151;
  swift_getOpaqueTypeMetadata2();
  uint64_t v143 = sub_24EE56240();
  uint64_t v44 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v149 = v44;
  uint64_t v148 = swift_getWitnessTable();
  uint64_t v271 = v44;
  uint64_t v272 = v148;
  swift_getOpaqueTypeMetadata2();
  uint64_t v146 = sub_24EE56240();
  uint64_t v147 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v45 = type metadata accessor for StandardCardView();
  uint64_t v145 = v45;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v271 = v45;
  uint64_t v272 = v144;
  swift_getOpaqueTypeMetadata2();
  uint64_t v271 = v41;
  uint64_t v272 = a3;
  uint64_t v273 = a21;
  uint64_t v274 = a20;
  uint64_t v46 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v142 = v46;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v271 = v46;
  uint64_t v272 = v141;
  swift_getOpaqueTypeMetadata2();
  v126[3] = sub_24EE56240();
  uint64_t v47 = type metadata accessor for StandardVerticalStackView();
  uint64_t v140 = v47;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v271 = v47;
  uint64_t v272 = v139;
  swift_getOpaqueTypeMetadata2();
  uint64_t v48 = type metadata accessor for TallCardView();
  uint64_t v138 = v48;
  uint64_t v137 = swift_getWitnessTable();
  uint64_t v271 = v48;
  uint64_t v272 = v137;
  swift_getOpaqueTypeMetadata2();
  uint64_t v135 = sub_24EE56240();
  v126[1] = sub_24EE56240();
  uint64_t v172 = a21;
  uint64_t v49 = type metadata accessor for VerticalStackCard();
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v271 = v49;
  uint64_t v272 = v133;
  swift_getOpaqueTypeMetadata2();
  v126[2] = sub_24EE56240();
  uint64_t v50 = type metadata accessor for WideBrickView();
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v271 = v50;
  uint64_t v272 = v127;
  swift_getOpaqueTypeMetadata2();
  v126[4] = sub_24EE56240();
  v126[6] = sub_24EE56240();
  uint64_t v129 = sub_24EE56240();
  uint64_t v130 = sub_24EE56B10();
  uint64_t v131 = sub_24EE55DD0();
  uint64_t v132 = sub_24EE56240();
  uint64_t v134 = sub_24EE55DD0();
  v126[5] = sub_24EE55DD0();
  uint64_t v51 = v196;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v271 = v51;
  uint64_t v272 = v200;
  uint64_t v273 = AssociatedConformanceWitness;
  uint64_t v274 = v206;
  uint64_t v128 = type metadata accessor for CanvasContextMenu();
  uint64_t v193 = sub_24EE55DD0();
  uint64_t v271 = v171;
  uint64_t v272 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v169;
  uint64_t v272 = v168;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v161;
  uint64_t v272 = v160;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  uint64_t v263 = v54;
  uint64_t v264 = v55;
  uint64_t v262 = swift_getWitnessTable();
  uint64_t v260 = swift_getWitnessTable();
  uint64_t v261 = MEMORY[0x263F18C10];
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v258 = v56;
  uint64_t v259 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v256 = v58;
  uint64_t v257 = v59;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v254 = OpaqueTypeConformance2;
  uint64_t v255 = v60;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v271 = OpaqueTypeMetadata2;
  uint64_t v272 = v164;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v157;
  uint64_t v272 = v156;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v252 = v62;
  uint64_t v253 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v250 = v61;
  uint64_t v251 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v271 = v154;
  uint64_t v272 = v153;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v152;
  uint64_t v272 = v151;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v248 = v66;
  uint64_t v249 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v271 = v149;
  uint64_t v272 = v148;
  uint64_t v246 = swift_getOpaqueTypeConformance2();
  uint64_t v247 = v67;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v244 = v68;
  uint64_t v245 = v69;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v242 = v65;
  uint64_t v243 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v271 = v145;
  uint64_t v272 = v144;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v142;
  uint64_t v272 = v141;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v240 = v72;
  uint64_t v241 = v73;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v271 = v140;
  uint64_t v272 = v139;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v271 = v138;
  uint64_t v272 = v137;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  uint64_t v238 = v75;
  uint64_t v239 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v236 = v74;
  uint64_t v237 = v77;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v271 = v49;
  uint64_t v272 = v133;
  uint64_t v234 = swift_getOpaqueTypeConformance2();
  uint64_t v235 = v210;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v271 = v50;
  uint64_t v272 = v127;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v232 = v79;
  uint64_t v233 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v230 = v78;
  uint64_t v231 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v228 = v71;
  uint64_t v229 = v82;
  uint64_t v227 = swift_getWitnessTable();
  uint64_t v225 = swift_getWitnessTable();
  uint64_t v226 = v175;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v223 = MEMORY[0x263F1BA00];
  uint64_t v224 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v85 = MEMORY[0x263F1A240];
  uint64_t v221 = v84;
  uint64_t v222 = MEMORY[0x263F1A240];
  uint64_t v219 = swift_getWitnessTable();
  uint64_t v220 = v85;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v217 = v86;
  uint64_t v218 = v87;
  uint64_t v88 = v193;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v271 = v88;
  uint64_t v272 = v175;
  uint64_t v171 = MEMORY[0x263F882B0];
  swift_getOpaqueTypeMetadata2();
  uint64_t WitnessTable = sub_24EE56240();
  uint64_t v89 = sub_24EE56240();
  uint64_t v169 = v89;
  uint64_t v90 = v176;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = v211;
  uint64_t v93 = AssociatedTypeWitness;
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v271 = v90;
  uint64_t v272 = v93;
  uint64_t v273 = v89;
  uint64_t v274 = v91;
  uint64_t v275 = v94;
  uint64_t v95 = sub_24EE56CB0();
  uint64_t v194 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v97 = (char *)v126 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v99 = MEMORY[0x270FA5388](v98);
  uint64_t v101 = (char *)v126 - v100;
  uint64_t v176 = *(void *)(v180 + *(int *)(v198 + 244));
  uint64_t v103 = v177;
  uint64_t v102 = v178;
  (*(void (**)(char *, __n128))(v178 + 16))(v177, v99);
  unint64_t v104 = (*(unsigned __int8 *)(v102 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  uint64_t v105 = (char *)swift_allocObject();
  uint64_t v106 = v173;
  *((void *)v105 + 2) = v187;
  *((void *)v105 + 3) = v106;
  uint64_t v107 = v195;
  *((void *)v105 + 4) = v188;
  *((void *)v105 + 5) = v107;
  uint64_t v108 = v205;
  *((void *)v105 + 6) = v203;
  *((void *)v105 + 7) = v108;
  uint64_t v109 = v200;
  *((void *)v105 + 8) = v196;
  *((void *)v105 + 9) = v109;
  uint64_t v110 = v181;
  *((void *)v105 + 10) = v209;
  *((void *)v105 + 11) = v110;
  uint64_t v111 = v183;
  *((void *)v105 + 12) = v182;
  *((void *)v105 + 13) = v111;
  uint64_t v112 = v185;
  *((void *)v105 + 14) = v184;
  *((void *)v105 + 15) = v112;
  uint64_t v113 = v186;
  *((void *)v105 + 16) = v201;
  *((void *)v105 + 17) = v113;
  uint64_t v114 = v174;
  *((void *)v105 + 18) = v92;
  *((void *)v105 + 19) = v114;
  uint64_t v115 = v202;
  *((void *)v105 + 20) = v172;
  *((void *)v105 + 21) = v115;
  uint64_t v116 = v206;
  *((void *)v105 + 22) = v204;
  *((void *)v105 + 23) = v116;
  uint64_t v117 = v189;
  *((void *)v105 + 24) = v210;
  *((void *)v105 + 25) = v117;
  uint64_t v118 = v191;
  *((void *)v105 + 26) = v190;
  *((void *)v105 + 27) = v118;
  uint64_t v119 = v199;
  *((void *)v105 + 28) = v207;
  *((void *)v105 + 29) = v119;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(&v105[v104], v103, v198);
  uint64_t v120 = v176;
  swift_bridgeObjectRetain();
  uint64_t v271 = v193;
  uint64_t v121 = v175;
  uint64_t v272 = v175;
  uint64_t v215 = swift_getOpaqueTypeConformance2();
  uint64_t v216 = v121;
  uint64_t v213 = swift_getWitnessTable();
  uint64_t v214 = v213;
  uint64_t v122 = v169;
  uint64_t v123 = swift_getWitnessTable();
  sub_24ED6CF10(v120, (uint64_t)sub_24ED2479C, (uint64_t)v105, AssociatedTypeWitness, v122, v211, v123, *(void *)(v119 + 24), v208);
  uint64_t v212 = v123;
  swift_getWitnessTable();
  sub_24EC90894(v97);
  uint64_t v124 = *(void (**)(char *, uint64_t))(v194 + 8);
  v124(v97, v95);
  sub_24EC90894(v101);
  return ((uint64_t (*)(char *, uint64_t))v124)(v101, v95);
}

uint64_t sub_24ED1B6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v138 = a8;
  uint64_t v122 = a6;
  uint64_t v119 = a4;
  uint64_t v140 = a3;
  uint64_t v139 = a2;
  uint64_t v125 = a1;
  uint64_t v126 = a9;
  uint64_t v141 = a32;
  uint64_t v124 = a29;
  uint64_t v123 = a28;
  uint64_t v144 = a21;
  uint64_t v121 = a20;
  uint64_t v118 = a17;
  uint64_t v117 = a16;
  uint64_t v116 = a15;
  uint64_t v115 = a14;
  uint64_t v136 = a25;
  uint64_t v137 = a24;
  uint64_t v128 = a11;
  uint64_t v132 = a10;
  uint64_t v120 = a30;
  uint64_t v133 = a31;
  uint64_t v134 = a26;
  uint64_t v143 = a27;
  uint64_t v114 = a18;
  uint64_t v135 = a19;
  uint64_t v129 = a5;
  uint64_t v131 = a12;
  uint64_t v142 = a13;
  type metadata accessor for ActionCardView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v33 = sub_24EE55DD0();
  uint64_t v127 = (char *)sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v233 = a23;
  uint64_t v234 = v127;
  uint64_t v34 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v232 = MEMORY[0x263F198F8];
  uint64_t v130 = v34;
  uint64_t v108 = v33;
  uint64_t v107 = (char *)swift_getWitnessTable();
  v99[38] = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v100 = (char *)sub_24EE55DD0();
  uint64_t v229 = WitnessTable;
  uint64_t v230 = MEMORY[0x263F18860];
  v99[40] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[39] = sub_24EE56240();
  uint64_t v102 = sub_24EE56B10();
  uint64_t v101 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v105 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v106 = sub_24EE56240();
  v99[30] = sub_24EE56240();
  uint64_t v159 = a22;
  uint64_t v160 = a22;
  uint64_t v161 = a27;
  uint64_t v162 = a31;
  uint64_t v104 = type metadata accessor for FullWidthStageView();
  uint64_t v103 = (char *)swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v112 = a22;
  v99[37] = type metadata accessor for InfoActionCardView();
  v99[36] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[35] = sub_24EE56240();
  v99[16] = sub_24EE56240();
  uint64_t v157 = a24;
  uint64_t v158 = a25;
  v99[34] = type metadata accessor for LargeBrickView();
  v99[33] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[32] = type metadata accessor for DynamicBrickView();
  v99[31] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[23] = sub_24EE56240();
  v99[29] = type metadata accessor for MonogramVerticalStackView();
  v99[28] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[26] = sub_24EE56240();
  v99[27] = sub_24EE56240();
  v99[1] = sub_24EE56240();
  v99[25] = type metadata accessor for StandardCardView();
  v99[24] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[22] = type metadata accessor for StandardHorizontalStackView();
  v99[21] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[4] = sub_24EE56240();
  v99[20] = type metadata accessor for StandardVerticalStackView();
  v99[19] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[18] = type metadata accessor for TallCardView();
  v99[17] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[15] = sub_24EE56240();
  v99[2] = sub_24EE56240();
  uint64_t v110 = a7;
  uint64_t v111 = a23;
  type metadata accessor for VerticalStackCard();
  v99[14] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[3] = sub_24EE56240();
  type metadata accessor for WideBrickView();
  v99[8] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v99[5] = sub_24EE56240();
  v99[7] = sub_24EE56240();
  v99[10] = sub_24EE56240();
  v99[11] = sub_24EE56B10();
  v99[12] = sub_24EE55DD0();
  v99[13] = sub_24EE56240();
  v99[41] = sub_24EE55DD0();
  v99[6] = sub_24EE55DD0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v156 = a26;
  v99[9] = type metadata accessor for CanvasContextMenu();
  uint64_t v35 = sub_24EE55DD0();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v227 = swift_getOpaqueTypeConformance2();
  uint64_t v228 = swift_getOpaqueTypeConformance2();
  uint64_t v226 = swift_getWitnessTable();
  uint64_t v224 = swift_getWitnessTable();
  uint64_t v225 = MEMORY[0x263F18C10];
  uint64_t v222 = swift_getWitnessTable();
  uint64_t v223 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v220 = swift_getWitnessTable();
  uint64_t v221 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v218 = OpaqueTypeConformance2;
  uint64_t v219 = swift_getWitnessTable();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v216 = swift_getOpaqueTypeConformance2();
  uint64_t v217 = swift_getOpaqueTypeConformance2();
  uint64_t v214 = v37;
  uint64_t v215 = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v212 = swift_getOpaqueTypeConformance2();
  uint64_t v213 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v210 = swift_getOpaqueTypeConformance2();
  uint64_t v211 = v213;
  uint64_t v208 = v39;
  uint64_t v209 = swift_getWitnessTable();
  uint64_t v206 = v38;
  uint64_t v207 = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v204 = swift_getOpaqueTypeConformance2();
  uint64_t v205 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v202 = swift_getOpaqueTypeConformance2();
  uint64_t v203 = swift_getOpaqueTypeConformance2();
  uint64_t v200 = v41;
  uint64_t v201 = swift_getWitnessTable();
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v198 = swift_getOpaqueTypeConformance2();
  uint64_t v199 = a27;
  uint64_t v196 = swift_getWitnessTable();
  uint64_t v197 = swift_getOpaqueTypeConformance2();
  uint64_t v194 = v42;
  uint64_t v195 = swift_getWitnessTable();
  uint64_t v192 = v40;
  uint64_t v193 = swift_getWitnessTable();
  uint64_t v191 = swift_getWitnessTable();
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v190 = v127;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v187 = MEMORY[0x263F1BA00];
  uint64_t v188 = v43;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = MEMORY[0x263F1A240];
  uint64_t v185 = v44;
  uint64_t v186 = MEMORY[0x263F1A240];
  uint64_t v183 = swift_getWitnessTable();
  uint64_t v184 = v45;
  uint64_t v181 = swift_getWitnessTable();
  uint64_t v182 = swift_getWitnessTable();
  uint64_t v153 = v35;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v154 = v109;
  swift_getOpaqueTypeMetadata2();
  uint64_t v113 = v35;
  uint64_t v46 = sub_24EE56240();
  uint64_t v108 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v106 = (uint64_t)v99 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v107 = (char *)v99 - v49;
  uint64_t v50 = v144;
  uint64_t v51 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v100 = (char *)v99 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v101 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v57 = (char *)v99 - v56;
  uint64_t v58 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v127 = (char *)v99 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  uint64_t v63 = (char *)v99 - v62;
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = (char *)v99 - v65;
  uint64_t v102 = v46;
  uint64_t v67 = sub_24EE56240();
  uint64_t v104 = *(void *)(v67 - 8);
  uint64_t v105 = v67;
  __n128 v68 = MEMORY[0x270FA5388](v67);
  uint64_t v103 = (char *)v99 - v69;
  uint64_t v130 = v51;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v51 + 16))(v66, v139, v50, v68);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v66, 0, 1, v50);
  uint64_t v153 = v119;
  uint64_t v154 = v129;
  uint64_t AssociatedConformanceWitness = v122;
  uint64_t v156 = v110;
  uint64_t v157 = (uint64_t)v138;
  uint64_t v158 = v132;
  uint64_t v159 = v128;
  uint64_t v160 = v131;
  uint64_t v161 = v142;
  uint64_t v162 = v115;
  uint64_t v163 = v116;
  uint64_t v164 = v117;
  uint64_t v165 = v118;
  uint64_t v166 = v114;
  uint64_t v167 = v135;
  uint64_t v168 = v121;
  uint64_t v169 = v50;
  uint64_t v170 = v112;
  uint64_t v171 = v111;
  uint64_t v172 = v137;
  uint64_t v173 = v136;
  uint64_t v174 = v134;
  uint64_t v175 = v143;
  uint64_t v176 = v123;
  uint64_t v177 = v124;
  uint64_t v178 = v120;
  uint64_t v179 = v133;
  uint64_t v180 = v141;
  uint64_t v142 = type metadata accessor for VerticalGridView();
  uint64_t v153 = *(void *)(v140 + *(int *)(v142 + 244));
  sub_24EE571B0();
  swift_getWitnessTable();
  sub_24EE57010();
  uint64_t v137 = TupleTypeMetadata2;
  uint64_t v70 = v57;
  uint64_t v71 = &v57[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v72 = v58;
  uint64_t v73 = *(void (**)(void))(v58 + 16);
  uint64_t v74 = v70;
  v73();
  uint64_t v138 = v71;
  uint64_t v75 = v71;
  uint64_t v76 = v54;
  ((void (*)(char *, char *, uint64_t))v73)(v75, v63, v54);
  uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
  uint64_t v143 = (uint64_t)v74;
  if (v77(v74, 1, v144) != 1)
  {
    uint64_t v81 = v63;
    uint64_t v136 = v72;
    uint64_t v82 = v76;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v127, v143, v76);
    uint64_t v83 = v138;
    uint64_t v84 = v144;
    if (v77(v138, 1, v144) != 1)
    {
      uint64_t v86 = v130;
      uint64_t v87 = v100;
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v100, v83, v84);
      char v88 = sub_24EE57040();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v86 + 8);
      v89(v87, v84);
      uint64_t v90 = *(void (**)(char *, uint64_t))(v136 + 8);
      v90(v81, v82);
      v90(v66, v82);
      v89(v127, v84);
      v90((char *)v143, v82);
      uint64_t v80 = v103;
      if (v88) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v91 = v106;
      sub_24ED12CE8(v139, v125, v142, v106);
      uint64_t v92 = v113;
      uint64_t v153 = v113;
      uint64_t v93 = v109;
      uint64_t v154 = v109;
      uint64_t v151 = swift_getOpaqueTypeConformance2();
      uint64_t v152 = v93;
      uint64_t v94 = v102;
      swift_getWitnessTable();
      uint64_t v95 = v107;
      sub_24EC90894(v91);
      uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
      v96(v91, v94);
      sub_24EC90894(v95);
      sub_24EC909C8(v91, v94, v94);
      goto LABEL_10;
    }
    uint64_t v85 = *(void (**)(char *, uint64_t))(v136 + 8);
    v85(v81, v82);
    v85(v66, v82);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v127, v84);
    uint64_t v80 = v103;
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v143, v137);
    goto LABEL_9;
  }
  uint64_t v78 = *(void (**)(char *, uint64_t))(v72 + 8);
  v78(v63, v76);
  v78(v66, v76);
  unsigned int v79 = v77(v138, 1, v144);
  uint64_t v80 = v103;
  if (v79 != 1) {
    goto LABEL_6;
  }
  v78((char *)v143, v76);
LABEL_8:
  uint64_t v91 = v106;
  sub_24ED12CE8(v139, v125, v142, v106);
  uint64_t v92 = v113;
  uint64_t v153 = v113;
  uint64_t v93 = v109;
  uint64_t v154 = v109;
  uint64_t v145 = swift_getOpaqueTypeConformance2();
  uint64_t v146 = v93;
  uint64_t v94 = v102;
  swift_getWitnessTable();
  uint64_t v95 = v107;
  sub_24EC90894(v91);
  uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
  v96(v91, v94);
  sub_24EC90894(v95);
  sub_24EC908D0(v91, v94);
LABEL_10:
  v96(v91, v94);
  v96((uint64_t)v95, v94);
  uint64_t v153 = v92;
  uint64_t v154 = v93;
  uint64_t v149 = swift_getOpaqueTypeConformance2();
  uint64_t v150 = v93;
  uint64_t v147 = swift_getWitnessTable();
  uint64_t v148 = v147;
  uint64_t v97 = v105;
  swift_getWitnessTable();
  sub_24EC90894(v80);
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v80, v97);
}

uint64_t sub_24ED1CEC8()
{
  return sub_24EE57910();
}

uint64_t sub_24ED1CF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v149 = a1;
  uint64_t v162 = a9;
  uint64_t v148 = a14;
  *(void *)&long long v177 = a2;
  *((void *)&v177 + 1) = a3;
  uint64_t v132 = a4;
  *(void *)&long long v178 = a4;
  uint64_t v134 = a5;
  *((void *)&v178 + 1) = a5;
  uint64_t v136 = a6;
  uint64_t v179 = a6;
  uint64_t v138 = a7;
  uint64_t v180 = a7;
  uint64_t v140 = a8;
  uint64_t v181 = a8;
  uint64_t v119 = a10;
  uint64_t v182 = a10;
  uint64_t v121 = a11;
  uint64_t v183 = a11;
  uint64_t v123 = a12;
  uint64_t v124 = a13;
  uint64_t v184 = a12;
  uint64_t v185 = a13;
  uint64_t v186 = a14;
  uint64_t v187 = a15;
  uint64_t v126 = a16;
  uint64_t v188 = a16;
  uint64_t v128 = a17;
  uint64_t v189 = a17;
  uint64_t v130 = a18;
  uint64_t v190 = a18;
  uint64_t v191 = a19;
  uint64_t v192 = a20;
  uint64_t v133 = a21;
  uint64_t v193 = a21;
  uint64_t v135 = a22;
  uint64_t v194 = a22;
  uint64_t v137 = a23;
  uint64_t v195 = a23;
  uint64_t v139 = a24;
  uint64_t v196 = a24;
  uint64_t v141 = a25;
  uint64_t v197 = a25;
  uint64_t v198 = a26;
  uint64_t v199 = a27;
  uint64_t v143 = a28;
  uint64_t v144 = a29;
  uint64_t v200 = a28;
  uint64_t v201 = a29;
  uint64_t v202 = a30;
  uint64_t v145 = type metadata accessor for VerticalGridView();
  uint64_t v118 = *(void *)(v145 - 8);
  uint64_t v116 = *(void *)(v118 + 64);
  MEMORY[0x270FA5388](v145);
  uint64_t v117 = (char *)&v111 - v32;
  uint64_t v151 = sub_24EE55940();
  uint64_t v122 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v150 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_24EE559E0();
  uint64_t v127 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v120 = (char *)&v111 - v34;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v156 = a27;
  uint64_t v157 = a3;
  *(void *)&long long v177 = a3;
  uint64_t v152 = a15;
  *((void *)&v177 + 1) = a15;
  uint64_t v147 = a20;
  *(void *)&long long v178 = a20;
  *((void *)&v178 + 1) = a27;
  uint64_t v35 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v160 = v35;
  uint64_t v161 = sub_24EE55DD0();
  uint64_t v36 = sub_24EE56240();
  uint64_t v155 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v125 = (uint64_t)&v111 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v111 - v39;
  uint64_t v146 = a30;
  uint64_t v131 = a19;
  uint64_t v41 = v148;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v115 = a2;
  *(void *)&long long v177 = a2;
  *((void *)&v177 + 1) = v41;
  *(void *)&long long v178 = AssociatedConformanceWitness;
  uint64_t v142 = a26;
  *((void *)&v178 + 1) = a26;
  uint64_t v43 = type metadata accessor for CanvasSectionHeader();
  uint64_t v44 = sub_24EE57430();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (char *)&v111 - v46;
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v111 - v50;
  uint64_t v163 = v36;
  uint64_t v159 = sub_24EE57430();
  uint64_t v154 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  uint64_t v153 = (char *)&v111 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v54 = MEMORY[0x270FA5388](v53);
  uint64_t v158 = (uint64_t)&v111 - v55;
  uint64_t v56 = v149;
  (*(void (**)(char *, __n128))(v45 + 16))(v47, v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v47, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
    uint64_t v57 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v153, 1, 1, v163);
    unint64_t v58 = sub_24ED17434();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v60 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
    uint64_t v175 = WitnessTable;
    uint64_t v176 = v60;
    uint64_t v61 = swift_getWitnessTable();
    unint64_t v173 = v58;
    uint64_t v174 = v61;
    swift_getWitnessTable();
    uint64_t v62 = v158;
    sub_24ED6076C(v57, v158);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
    uint64_t v64 = v57;
  }
  else
  {
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v113 = v51;
    v65(v51, v47, v43);
    uint64_t v114 = v40;
    uint64_t v66 = (int *)v145;
    uint64_t v67 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v150, v56 + *(int *)(v145 + 312), v151);
    uint64_t v111 = v43;
    uint64_t v112 = v48;
    uint64_t v69 = v117;
    uint64_t v68 = v118;
    (*(void (**)(char *, uint64_t, int *))(v118 + 16))(v117, v56, v66);
    unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v71 = (char *)swift_allocObject();
    uint64_t v72 = v157;
    *((void *)v71 + 2) = v115;
    *((void *)v71 + 3) = v72;
    uint64_t v73 = v134;
    *((void *)v71 + 4) = v132;
    *((void *)v71 + 5) = v73;
    uint64_t v74 = v138;
    *((void *)v71 + 6) = v136;
    *((void *)v71 + 7) = v74;
    uint64_t v75 = v119;
    *((void *)v71 + 8) = v140;
    *((void *)v71 + 9) = v75;
    uint64_t v76 = v123;
    *((void *)v71 + 10) = v121;
    *((void *)v71 + 11) = v76;
    *((void *)v71 + 12) = v124;
    *((void *)v71 + 13) = v41;
    uint64_t v77 = v126;
    *((void *)v71 + 14) = v152;
    *((void *)v71 + 15) = v77;
    uint64_t v78 = v130;
    *((void *)v71 + 16) = v128;
    *((void *)v71 + 17) = v78;
    uint64_t v79 = v147;
    *((void *)v71 + 18) = v131;
    *((void *)v71 + 19) = v79;
    uint64_t v80 = v135;
    *((void *)v71 + 20) = v133;
    *((void *)v71 + 21) = v80;
    uint64_t v81 = v139;
    *((void *)v71 + 22) = v137;
    *((void *)v71 + 23) = v81;
    uint64_t v82 = v142;
    *((void *)v71 + 24) = v141;
    *((void *)v71 + 25) = v82;
    uint64_t v83 = v143;
    *((void *)v71 + 26) = v156;
    *((void *)v71 + 27) = v83;
    uint64_t v84 = v146;
    *((void *)v71 + 28) = v144;
    *((void *)v71 + 29) = v84;
    (*(void (**)(char *, char *, int *))(v68 + 32))(&v71[v70], v69, v66);
    sub_24ED24750((unint64_t *)&qword_26B1DBA10, MEMORY[0x263F07508]);
    uint64_t v85 = (uint64_t)v120;
    uint64_t v86 = v150;
    uint64_t v87 = v157;
    uint64_t v88 = v151;
    sub_24EE559C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v86, v88);
    uint64_t v89 = v56 + v66[73];
    uint64_t v90 = (long long *)(v56 + v66[64]);
    long long v91 = v90[1];
    long long v177 = *v90;
    long long v178 = v91;
    int v92 = *(unsigned __int8 *)(v56 + v66[66]);
    uint64_t v93 = v125;
    uint64_t v94 = v111;
    uint64_t v95 = v113;
    sub_24EE5364C(v85, v89, (double *)&v177, v92, v111, v87, v152, v79, v125, v156);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v85, v129);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v95, v94);
    unint64_t v96 = sub_24ED17434();
    uint64_t v97 = swift_getWitnessTable();
    uint64_t v98 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
    uint64_t v166 = v97;
    uint64_t v167 = v98;
    uint64_t v99 = swift_getWitnessTable();
    unint64_t v164 = v96;
    uint64_t v165 = v99;
    uint64_t v100 = v163;
    swift_getWitnessTable();
    uint64_t v101 = v114;
    sub_24EC90894(v93);
    uint64_t v102 = v155;
    uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v103(v93, v100);
    uint64_t v104 = (uint64_t)v153;
    sub_24EC90894(v101);
    v103((uint64_t)v101, v100);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v104, 0, 1, v100);
    uint64_t v62 = v158;
    sub_24ED6076C(v104, v158);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
    uint64_t v64 = v104;
  }
  uint64_t v105 = v159;
  v63(v64, v159);
  unint64_t v106 = sub_24ED17434();
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  uint64_t v171 = v107;
  uint64_t v172 = v108;
  uint64_t v109 = swift_getWitnessTable();
  unint64_t v169 = v106;
  uint64_t v170 = v109;
  uint64_t v168 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EC90894(v62);
  return ((uint64_t (*)(uint64_t, uint64_t))v63)(v62, v105);
}

uint64_t sub_24ED1DB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, long long a11, long long a12, long long a13, uint64_t a14, uint64_t a15, long long a16, long long a17, long long a18, long long a19, uint64_t a20,void (*a21)(void))
{
  uint64_t v57 = a7;
  uint64_t v55 = a6;
  uint64_t v53 = a5;
  uint64_t v50 = a4;
  uint64_t v63 = a1;
  uint64_t v64 = a8;
  uint64_t v60 = a21;
  uint64_t v58 = a20;
  long long v56 = a19;
  long long v54 = a18;
  long long v52 = a17;
  long long v49 = a16;
  long long v48 = a13;
  long long v47 = a12;
  long long v46 = a11;
  long long v45 = a10;
  long long v44 = a9;
  uint64_t v23 = sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  uint64_t v59 = v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v62 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v26 = (char *)v43 - v25;
  uint64_t v51 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v43 - v28;
  uint64_t v61 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v43 - v34;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v67 = v50;
  uint64_t v68 = v53;
  uint64_t v69 = v55;
  uint64_t v70 = v57;
  long long v71 = v44;
  long long v72 = v45;
  long long v73 = v46;
  long long v74 = v47;
  long long v75 = v48;
  uint64_t v76 = a14;
  uint64_t v77 = a15;
  v43[1] = a15;
  long long v78 = v49;
  long long v79 = v52;
  long long v80 = v54;
  long long v81 = v56;
  uint64_t v82 = v58;
  uint64_t v83 = v60;
  type metadata accessor for VerticalGridView();
  uint64_t v36 = TupleTypeMetadata2;
  sub_24EE559E0();
  uint64_t v60 = (void (*)(void))sub_24EE559D0();
  uint64_t v37 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v29, v63, a2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v29, 0, 1, a2);
  uint64_t v38 = v51;
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v26, v29, v59);
  uint64_t v40 = &v26[*(int *)(v36 + 48)];
  *(void *)uint64_t v40 = 0;
  v40[8] = 1;
  v60(v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v36);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
  sub_24EC90894(v32);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v61 + 8);
  v41(v32, a3);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v41)(v35, a3);
}

uint64_t sub_24ED1E080@<X0>(unsigned char *a1@<X8>)
{
  return sub_24EC8801C(a1);
}

uint64_t sub_24ED1E140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 304);
}

void sub_24ED1E148()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  sub_24EE57430();
  if (v0 <= 0x3F)
  {
    sub_24EE57430();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_24EE559E0();
        if (v3 <= 0x3F)
        {
          sub_24EE559E0();
          if (v4 <= 0x3F)
          {
            sub_24EE559E0();
            if (v5 <= 0x3F)
            {
              sub_24EE57430();
              __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
              swift_getTupleTypeMetadata2();
              sub_24EE559E0();
              if (v6 <= 0x3F)
              {
                type metadata accessor for EquatableViewModifierBuilder();
                if (v7 <= 0x3F)
                {
                  sub_24EE559E0();
                  if (v8 <= 0x3F)
                  {
                    swift_getTupleTypeMetadata2();
                    sub_24EE559E0();
                    if (v9 <= 0x3F)
                    {
                      sub_24ED232F8();
                      if (v10 <= 0x3F)
                      {
                        sub_24EE55A60();
                        sub_24EE57430();
                        if (v11 <= 0x3F)
                        {
                          sub_24EE55940();
                          if (v12 <= 0x3F) {
                            swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_24ED1E5E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = *(void *)(a3 + 104);
    swift_getAssociatedConformanceWitness();
    uint64_t v9 = type metadata accessor for CanvasSectionHeader();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = sub_24EE57430();
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_24EE55880();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = *(int *)(v9 + 52);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))((char *)a2 + v14, 1, v8))
      {
        uint64_t v18 = sub_24EE57430();
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v16, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v8);
      }
      uint64_t v19 = *(int *)(v9 + 56);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))((char *)a2 + v19, 1, v7))
      {
        uint64_t v23 = sub_24EE57430();
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v20, v21, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v7);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v24 = *(int *)(a3 + 248);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 244)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 244));
    *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v25 = *(int *)(a3 + 252);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)(a3 + 120);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      uint64_t v31 = sub_24EE57430();
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v32 = *(int *)(a3 + 256);
    uint64_t v33 = (_OWORD *)((char *)a1 + v32);
    uint64_t v34 = (_OWORD *)((char *)a2 + v32);
    long long v35 = v34[1];
    _OWORD *v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = *(int *)(a3 + 260);
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((void *)v37 + 2) = *((void *)v38 + 2);
    *((unsigned char *)a1 + *(int *)(a3 + 264)) = *((unsigned char *)a2 + *(int *)(a3 + 264));
    (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 16))((char *)a1 + *(int *)(a3 + 268), (char *)a2 + *(int *)(a3 + 268));
    uint64_t v39 = *(int *)(a3 + 272);
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = *(int *)(a3 + 276);
    long long v44 = (char *)a1 + v43;
    long long v45 = (char *)a2 + v43;
    uint64_t v46 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = *(int *)(a3 + 280);
    long long v48 = (char *)a1 + v47;
    long long v49 = (char *)a2 + v47;
    uint64_t v50 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = *(int *)(a3 + 284);
    long long v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    sub_24EE57430();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
    swift_getTupleTypeMetadata2();
    uint64_t v54 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = *(int *)(a3 + 288);
    long long v56 = (uint64_t *)((char *)a1 + v55);
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = *(uint64_t *)((char *)a2 + v55 + 8);
    *long long v56 = *(uint64_t *)((char *)a2 + v55);
    v56[1] = v58;
    uint64_t v59 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
    uint64_t v60 = (char *)v56 + v59;
    uint64_t v61 = &v57[v59];
    uint64_t v62 = sub_24EE55A00();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
    swift_retain();
    v63(v60, v61, v62);
    uint64_t v64 = *(int *)(a3 + 292);
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
    uint64_t v68 = *(int *)(a3 + 296);
    uint64_t v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    swift_getTupleTypeMetadata2();
    uint64_t v71 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    uint64_t v72 = *(int *)(a3 + 300);
    long long v73 = (char *)a1 + v72;
    long long v74 = (char *)a2 + v72;
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    if (v77(v74, 1, v75))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    uint64_t v79 = *(int *)(a3 + 304);
    long long v80 = (char *)a1 + v79;
    long long v81 = (char *)a2 + v79;
    if (v77((char *)a2 + v79, 1, v75))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v80, v81, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v80, 0, 1, v75);
    }
    uint64_t v83 = *(int *)(a3 + 308);
    uint64_t v84 = (char *)a1 + v83;
    uint64_t v85 = (char *)a2 + v83;
    uint64_t v86 = sub_24EE55A60();
    uint64_t v87 = *(void *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
    {
      uint64_t v88 = sub_24EE57430();
      memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v89 = *(int *)(a3 + 312);
    uint64_t v90 = (char *)a1 + v89;
    long long v91 = (char *)a2 + v89;
    uint64_t v92 = sub_24EE55940();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
  }
  return a1;
}

uint64_t sub_24ED1F034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    uint64_t v8 = a1 + *(int *)(v6 + 52);
    uint64_t v9 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v5);
    }
    uint64_t v10 = a1 + *(int *)(v6 + 56);
    uint64_t v11 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v4);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(a2 + 252);
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a2 + 128) - 8) + 8))(a1 + *(int *)(a2 + 268));
  uint64_t v15 = a1 + *(int *)(a2 + 272);
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + *(int *)(a2 + 276);
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + *(int *)(a2 + 280);
  uint64_t v20 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + *(int *)(a2 + 284);
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + *(int *)(a2 + 288);
  swift_release();
  uint64_t v24 = v23 + *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v25 = sub_24EE55A00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = a1 + *(int *)(a2 + 292);
  uint64_t v27 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = a1 + *(int *)(a2 + 296);
  swift_getTupleTypeMetadata2();
  uint64_t v29 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = a1 + *(int *)(a2 + 300);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (!v33(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v34 = a1 + *(int *)(a2 + 304);
  if (!v33(v34, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
  }
  uint64_t v35 = a1 + *(int *)(a2 + 308);
  uint64_t v36 = sub_24EE55A60();
  uint64_t v37 = *(void *)(v36 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v38 = a1 + *(int *)(a2 + 312);
  uint64_t v39 = sub_24EE55940();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
}

char *sub_24ED1F6D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = sub_24EE57430();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    uint64_t v12 = *(int *)(v8 + 52);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v12], 1, v7))
    {
      uint64_t v16 = sub_24EE57430();
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(v8 + 56);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v17], 1, v6))
    {
      uint64_t v21 = sub_24EE57430();
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  uint64_t v22 = *(int *)(a3 + 248);
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  a1[v22] = a2[v22];
  uint64_t v23 = *(int *)(a3 + 252);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)(a3 + 120);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    uint64_t v29 = sub_24EE57430();
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v30 = *(int *)(a3 + 256);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  uint64_t v34 = *(int *)(a3 + 260);
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *((void *)v35 + 2) = *((void *)v36 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 16))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v37 = *(int *)(a3 + 272);
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = *(int *)(a3 + 276);
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  uint64_t v45 = *(int *)(a3 + 280);
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = *(int *)(a3 + 284);
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v52 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  uint64_t v53 = *(int *)(a3 + 288);
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = *(void *)&a2[v53 + 8];
  *(void *)uint64_t v54 = *(void *)&a2[v53];
  *((void *)v54 + 1) = v56;
  uint64_t v57 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v58 = &v54[v57];
  uint64_t v59 = &v55[v57];
  uint64_t v60 = sub_24EE55A00();
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
  swift_retain();
  v61(v58, v59, v60);
  uint64_t v62 = *(int *)(a3 + 292);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v65 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
  uint64_t v66 = *(int *)(a3 + 296);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  swift_getTupleTypeMetadata2();
  uint64_t v69 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
  uint64_t v70 = *(int *)(a3 + 300);
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  if (v75(v72, 1, v73))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  uint64_t v77 = *(int *)(a3 + 304);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  if (v75(&a2[v77], 1, v73))
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v78, v79, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v73);
  }
  uint64_t v81 = *(int *)(a3 + 308);
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = sub_24EE55A60();
  uint64_t v85 = *(void *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
  {
    uint64_t v86 = sub_24EE57430();
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  uint64_t v87 = *(int *)(a3 + 312);
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
  return a1;
}

char *sub_24ED200D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v8);
      goto LABEL_7;
    }
    uint64_t v22 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
    uint64_t v23 = *(int *)(v8 + 52);
    uint64_t v24 = &a2[v23];
    uint64_t v116 = *(void *)(v7 - 8);
    uint64_t v25 = *(uint64_t (**)(void))(v116 + 48);
    uint64_t v118 = &a1[v23];
    int v26 = v25();
    int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v24, 1, v7);
    if (v26)
    {
      if (v27)
      {
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v118;
LABEL_48:
        memcpy(v29, v24, v28);
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v118, v24, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v118, 0, 1, v7);
    }
    else
    {
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v7);
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v118;
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v118, v24, v7);
    }
LABEL_51:
    uint64_t v110 = *(int *)(v8 + 56);
    uint64_t v111 = &a2[v110];
    uint64_t v112 = *(void *)(v6 - 8);
    uint64_t v113 = *(uint64_t (**)(void))(v112 + 48);
    __src = &a1[v110];
    int v114 = v113();
    int v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v113)(v111, 1, v6);
    if (v114)
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(__src, v111, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(__src, 0, 1, v6);
        goto LABEL_17;
      }
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v111;
    }
    else
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 24))(__src, v111, v6);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(__src, v6);
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v111;
    }
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    goto LABEL_8;
  }
  uint64_t v13 = sub_24EE55880();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
  uint64_t v14 = *(int *)(v8 + 52);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v7))
  {
    uint64_t v18 = sub_24EE57430();
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v16, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v7);
  }
  uint64_t v30 = *(int *)(v8 + 56);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v6))
  {
    uint64_t v34 = sub_24EE57430();
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v6);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
LABEL_17:
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 248)] = a2[*(int *)(a3 + 248)];
  uint64_t v35 = *(int *)(a3 + 252);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)(a3 + 120);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(&a1[v35], 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_22:
    uint64_t v43 = sub_24EE57430();
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_23:
  uint64_t v44 = *(int *)(a3 + 256);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  *((void *)v45 + 2) = *((void *)v46 + 2);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  uint64_t v47 = *(int *)(a3 + 260);
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  *((void *)v48 + 2) = *((void *)v49 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 24))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v50 = *(int *)(a3 + 272);
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
  uint64_t v54 = *(int *)(a3 + 276);
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
  uint64_t v58 = *(int *)(a3 + 280);
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  uint64_t v61 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  uint64_t v62 = *(int *)(a3 + 284);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v65 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = *(int *)(a3 + 288);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = *(void *)&a2[v66 + 8];
  *(void *)uint64_t v67 = *(void *)&a2[v66];
  *((void *)v67 + 1) = v69;
  swift_retain();
  swift_release();
  uint64_t v70 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  uint64_t v73 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  uint64_t v74 = *(int *)(a3 + 292);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 24))(v75, v76, v77);
  uint64_t v78 = *(int *)(a3 + 296);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = *(int *)(a3 + 300);
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  LODWORD(v64) = v87(v83, 1, v85);
  int v88 = v87(v84, 1, v85);
  if (v64)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
LABEL_28:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v83, v84, v85);
LABEL_29:
  uint64_t v90 = *(int *)(a3 + 304);
  long long v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = v87(&a1[v90], 1, v85);
  int v94 = v87(v92, 1, v85);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v91, v92, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v91, 0, 1, v85);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v85);
LABEL_34:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v91, v92, v85);
LABEL_35:
  uint64_t v96 = *(int *)(a3 + 308);
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = sub_24EE55A60();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  int v102 = v101(v97, 1, v99);
  int v103 = v101(v98, 1, v99);
  if (!v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 24))(v97, v98, v99);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v99);
    goto LABEL_40;
  }
  if (v103)
  {
LABEL_40:
    uint64_t v104 = sub_24EE57430();
    memcpy(v97, v98, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v97, v98, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
LABEL_41:
  uint64_t v105 = *(int *)(a3 + 312);
  unint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  uint64_t v108 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 24))(v106, v107, v108);
  return a1;
}

char *sub_24ED20F9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = sub_24EE57430();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    uint64_t v12 = *(int *)(v8 + 52);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v12], 1, v7))
    {
      uint64_t v16 = sub_24EE57430();
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(v8 + 56);
    uint64_t v18 = &a1[v17];
    size_t v19 = &a2[v17];
    uint64_t v20 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v17], 1, v6))
    {
      uint64_t v21 = sub_24EE57430();
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  uint64_t v22 = *(int *)(a3 + 248);
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  a1[v22] = a2[v22];
  uint64_t v23 = *(int *)(a3 + 252);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)(a3 + 120);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&a2[v23], 1, v26))
  {
    uint64_t v28 = sub_24EE57430();
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = *(int *)(a3 + 256);
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  uint64_t v33 = *(int *)(a3 + 260);
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((void *)v34 + 2) = *((void *)v35 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 32))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v36 = *(int *)(a3 + 272);
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = *(int *)(a3 + 276);
  int v41 = &a1[v40];
  int v42 = &a2[v40];
  uint64_t v43 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  uint64_t v44 = *(int *)(a3 + 280);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
  uint64_t v48 = *(int *)(a3 + 284);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v51 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  uint64_t v52 = *(int *)(a3 + 288);
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  uint64_t v55 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v56 = &v53[v55];
  uint64_t v57 = &v54[v55];
  uint64_t v58 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = *(int *)(a3 + 292);
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  uint64_t v62 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = *(int *)(a3 + 296);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  uint64_t v67 = *(int *)(a3 + 300);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  if (v72(v69, 1, v70))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v74 = *(int *)(a3 + 304);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  if (v72(&a2[v74], 1, v70))
  {
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v75, v76, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v75, 0, 1, v70);
  }
  uint64_t v78 = *(int *)(a3 + 308);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  uint64_t v81 = sub_24EE55A60();
  uint64_t v82 = *(void *)(v81 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
  {
    uint64_t v83 = sub_24EE57430();
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v79, v80, v81);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  uint64_t v84 = *(int *)(a3 + 312);
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  uint64_t v87 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
  return a1;
}

char *sub_24ED21984(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v8);
      goto LABEL_7;
    }
    uint64_t v22 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
    uint64_t v23 = *(int *)(v8 + 52);
    uint64_t v24 = &a2[v23];
    uint64_t v116 = *(void *)(v7 - 8);
    uint64_t v25 = *(uint64_t (**)(void))(v116 + 48);
    uint64_t v118 = &a1[v23];
    int v26 = v25();
    int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v24, 1, v7);
    if (v26)
    {
      if (v27)
      {
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v118;
LABEL_48:
        memcpy(v29, v24, v28);
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v118, v24, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v118, 0, 1, v7);
    }
    else
    {
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v7);
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v118;
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v116 + 40))(v118, v24, v7);
    }
LABEL_51:
    uint64_t v110 = *(int *)(v8 + 56);
    uint64_t v111 = &a2[v110];
    uint64_t v112 = *(void *)(v6 - 8);
    uint64_t v113 = *(uint64_t (**)(void))(v112 + 48);
    __src = &a1[v110];
    int v114 = v113();
    int v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v113)(v111, 1, v6);
    if (v114)
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 32))(__src, v111, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(__src, 0, 1, v6);
        goto LABEL_17;
      }
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v111;
    }
    else
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 40))(__src, v111, v6);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(__src, v6);
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v111;
    }
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    goto LABEL_8;
  }
  uint64_t v13 = sub_24EE55880();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  uint64_t v14 = *(int *)(v8 + 52);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v7))
  {
    uint64_t v18 = sub_24EE57430();
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v16, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v7);
  }
  uint64_t v30 = *(int *)(v8 + 56);
  uint64_t v31 = &a1[v30];
  long long v32 = &a2[v30];
  uint64_t v33 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v6))
  {
    uint64_t v34 = sub_24EE57430();
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v6);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
LABEL_17:
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(a3 + 252);
  a1[*(int *)(a3 + 248)] = a2[*(int *)(a3 + 248)];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)(a3 + 120);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(&a1[v35], 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_22:
    uint64_t v43 = sub_24EE57430();
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
LABEL_23:
  uint64_t v44 = *(int *)(a3 + 256);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  long long v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  uint64_t v48 = *(int *)(a3 + 260);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  *((void *)v49 + 2) = *((void *)v50 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 40))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v51 = *(int *)(a3 + 272);
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = *(int *)(a3 + 276);
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  uint64_t v58 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = *(int *)(a3 + 280);
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  uint64_t v62 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = *(int *)(a3 + 284);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  uint64_t v67 = *(int *)(a3 + 288);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  *(_OWORD *)&a1[v67] = *(_OWORD *)&a2[v67];
  swift_release();
  uint64_t v70 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v71 = &v68[v70];
  uint64_t v72 = &v69[v70];
  uint64_t v73 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 40))(v71, v72, v73);
  uint64_t v74 = *(int *)(a3 + 292);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
  uint64_t v78 = *(int *)(a3 + 296);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 40))(v79, v80, v81);
  uint64_t v82 = *(int *)(a3 + 300);
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  LODWORD(v65) = v87(v83, 1, v85);
  int v88 = v87(v84, 1, v85);
  if (v65)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v84, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
LABEL_28:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_29:
  uint64_t v90 = *(int *)(a3 + 304);
  long long v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = v87(&a1[v90], 1, v85);
  int v94 = v87(v92, 1, v85);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v91, v92, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v91, 0, 1, v85);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v85);
LABEL_34:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v91, v92, v85);
LABEL_35:
  uint64_t v96 = *(int *)(a3 + 308);
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = sub_24EE55A60();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  int v102 = v101(v97, 1, v99);
  int v103 = v101(v98, 1, v99);
  if (!v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v97, v98, v99);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v99);
    goto LABEL_40;
  }
  if (v103)
  {
LABEL_40:
    uint64_t v104 = sub_24EE57430();
    memcpy(v97, v98, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
LABEL_41:
  uint64_t v105 = *(int *)(a3 + 312);
  unint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  uint64_t v108 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 40))(v106, v107, v108);
  return a1;
}

uint64_t sub_24ED22820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24ED22834);
}

uint64_t sub_24ED22834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t v6 = sub_24EE57430();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 244));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
  else
  {
    uint64_t v10 = sub_24EE57430();
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 - 8);
      uint64_t v13 = *(int *)(a3 + 252);
    }
    else
    {
      uint64_t v11 = *(void *)(a3 + 128);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
      {
        uint64_t v12 = *(void *)(*(void *)(a3 + 128) - 8);
        uint64_t v13 = *(int *)(a3 + 268);
      }
      else
      {
        uint64_t v14 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
        {
          uint64_t v11 = v14;
          uint64_t v12 = *(void *)(v14 - 8);
          uint64_t v13 = *(int *)(a3 + 272);
        }
        else
        {
          uint64_t v15 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
          {
            uint64_t v11 = v15;
            uint64_t v12 = *(void *)(v15 - 8);
            uint64_t v13 = *(int *)(a3 + 276);
          }
          else
          {
            uint64_t v16 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
            {
              uint64_t v11 = v16;
              uint64_t v12 = *(void *)(v16 - 8);
              uint64_t v13 = *(int *)(a3 + 280);
            }
            else
            {
              sub_24EE57430();
              __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
              swift_getTupleTypeMetadata2();
              uint64_t v17 = sub_24EE559E0();
              if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
              {
                uint64_t v11 = v17;
                uint64_t v12 = *(void *)(v17 - 8);
                uint64_t v13 = *(int *)(a3 + 284);
              }
              else
              {
                uint64_t v18 = type metadata accessor for EquatableViewModifierBuilder();
                if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
                {
                  uint64_t v11 = v18;
                  uint64_t v12 = *(void *)(v18 - 8);
                  uint64_t v13 = *(int *)(a3 + 288);
                }
                else
                {
                  uint64_t v19 = sub_24EE559E0();
                  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
                  {
                    uint64_t v11 = v19;
                    uint64_t v12 = *(void *)(v19 - 8);
                    uint64_t v13 = *(int *)(a3 + 292);
                  }
                  else
                  {
                    swift_getTupleTypeMetadata2();
                    uint64_t v20 = sub_24EE559E0();
                    if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
                    {
                      uint64_t v11 = v20;
                      uint64_t v12 = *(void *)(v20 - 8);
                      uint64_t v13 = *(int *)(a3 + 296);
                    }
                    else
                    {
                      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                      if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
                      {
                        uint64_t v11 = v21;
                        uint64_t v12 = *(void *)(v21 - 8);
                        uint64_t v13 = *(int *)(a3 + 300);
                      }
                      else
                      {
                        sub_24EE55A60();
                        uint64_t v22 = sub_24EE57430();
                        if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a2)
                        {
                          uint64_t v23 = sub_24EE55940();
                          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(a1 + *(int *)(a3 + 312), a2, v23);
                        }
                        uint64_t v11 = v22;
                        uint64_t v12 = *(void *)(v22 - 8);
                        uint64_t v13 = *(int *)(a3 + 308);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v13, a2, v11);
  }
}

uint64_t sub_24ED22D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24ED22D9C);
}

uint64_t sub_24ED22D9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t result = sub_24EE57430();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 244)) = (a2 - 1);
    return result;
  }
  uint64_t v10 = sub_24EE57430();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a3)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(int *)(a4 + 252);
  }
  else
  {
    uint64_t v11 = *(void *)(a4 + 128);
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a3)
    {
      uint64_t v12 = *(void *)(*(void *)(a4 + 128) - 8);
      uint64_t v13 = *(int *)(a4 + 268);
    }
    else
    {
      uint64_t v14 = sub_24EE559E0();
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
      {
        uint64_t v11 = v14;
        uint64_t v12 = *(void *)(v14 - 8);
        uint64_t v13 = *(int *)(a4 + 272);
      }
      else
      {
        uint64_t v15 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
        {
          uint64_t v11 = v15;
          uint64_t v12 = *(void *)(v15 - 8);
          uint64_t v13 = *(int *)(a4 + 276);
        }
        else
        {
          uint64_t v16 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
          {
            uint64_t v11 = v16;
            uint64_t v12 = *(void *)(v16 - 8);
            uint64_t v13 = *(int *)(a4 + 280);
          }
          else
          {
            sub_24EE57430();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
            swift_getTupleTypeMetadata2();
            uint64_t v17 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
            {
              uint64_t v11 = v17;
              uint64_t v12 = *(void *)(v17 - 8);
              uint64_t v13 = *(int *)(a4 + 284);
            }
            else
            {
              uint64_t v18 = type metadata accessor for EquatableViewModifierBuilder();
              if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
              {
                uint64_t v11 = v18;
                uint64_t v12 = *(void *)(v18 - 8);
                uint64_t v13 = *(int *)(a4 + 288);
              }
              else
              {
                uint64_t v19 = sub_24EE559E0();
                if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
                {
                  uint64_t v11 = v19;
                  uint64_t v12 = *(void *)(v19 - 8);
                  uint64_t v13 = *(int *)(a4 + 292);
                }
                else
                {
                  swift_getTupleTypeMetadata2();
                  uint64_t v20 = sub_24EE559E0();
                  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
                  {
                    uint64_t v11 = v20;
                    uint64_t v12 = *(void *)(v20 - 8);
                    uint64_t v13 = *(int *)(a4 + 296);
                  }
                  else
                  {
                    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                    if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
                    {
                      uint64_t v11 = v21;
                      uint64_t v12 = *(void *)(v21 - 8);
                      uint64_t v13 = *(int *)(a4 + 300);
                    }
                    else
                    {
                      sub_24EE55A60();
                      uint64_t v22 = sub_24EE57430();
                      if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a3)
                      {
                        uint64_t v23 = sub_24EE55940();
                        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8)
                                                                                             + 56))(a1 + *(int *)(a4 + 312), a2, a2, v23);
                      }
                      uint64_t v11 = v22;
                      uint64_t v12 = *(void *)(v22 - 8);
                      uint64_t v13 = *(int *)(a4 + 308);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1 + v13, a2, a2, v11);
}

void sub_24ED232F8()
{
  if (!qword_269965500[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699654F8);
    unint64_t v0 = sub_24EE57430();
    if (!v1) {
      atomic_store(v0, qword_269965500);
    }
  }
}

uint64_t sub_24ED23354()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED24468()
{
  return sub_24ED246D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED18A60);
}

uint64_t sub_24ED24480()
{
  return sub_24ED246D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED1CF48);
}

uint64_t sub_24ED24498()
{
  return sub_24ED246D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED1E080);
}

uint64_t sub_24ED244B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = v2[3];
  uint64_t v40 = v2[2];
  uint64_t v37 = v2[5];
  uint64_t v38 = v2[4];
  uint64_t v35 = v2[7];
  uint64_t v36 = v2[6];
  uint64_t v33 = v2[9];
  uint64_t v34 = v2[8];
  uint64_t v31 = v2[11];
  uint64_t v32 = v2[10];
  uint64_t v29 = v2[13];
  uint64_t v30 = v2[12];
  uint64_t v27 = v2[15];
  uint64_t v28 = v2[14];
  uint64_t v25 = v2[17];
  uint64_t v26 = v2[16];
  uint64_t v23 = v2[19];
  uint64_t v24 = v2[18];
  uint64_t v3 = v2[21];
  uint64_t v22 = v2[20];
  uint64_t v4 = v2[22];
  uint64_t v5 = v2[23];
  uint64_t v6 = v2[24];
  uint64_t v7 = v2[25];
  uint64_t v9 = v2[26];
  uint64_t v8 = v2[27];
  uint64_t v11 = v2[28];
  uint64_t v10 = (void (*)(void))v2[29];
  type metadata accessor for VerticalGridView();
  *(void *)&long long v21 = v9;
  *((void *)&v21 + 1) = v8;
  *(void *)&long long v20 = v6;
  *((void *)&v20 + 1) = v7;
  *(void *)&long long v19 = v4;
  *((void *)&v19 + 1) = v5;
  *(void *)&long long v18 = v22;
  *((void *)&v18 + 1) = v3;
  *(void *)&long long v17 = v26;
  *((void *)&v17 + 1) = v25;
  *(void *)&long long v16 = v28;
  *((void *)&v16 + 1) = v27;
  *(void *)&long long v15 = v30;
  *((void *)&v15 + 1) = v29;
  *(void *)&long long v14 = v32;
  *((void *)&v14 + 1) = v31;
  *(void *)&long long v13 = v34;
  *((void *)&v13 + 1) = v33;
  return sub_24ED1DB40(a1, v40, v39, v38, v37, v36, v35, a2, v13, v14, v15, v16, v17, v24, v23, v18, v19, v20, v21,
           v11,
           v10);
}

uint64_t sub_24ED24654@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED1A0B0(*(void *)(v1 + 240), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(_OWORD *)(v1 + 64), *(_OWORD *)(v1 + 80), *(_OWORD *)(v1 + 96), *(_OWORD *)(v1 + 112), *(_OWORD *)(v1 + 128), *(_OWORD *)(v1 + 144), *(_OWORD *)(v1 + 160), *(_OWORD *)(v1 + 176), *(_OWORD *)(v1 + 192), *(_OWORD *)(v1 + 208), *(void *)(v1 + 224),
           *(void *)(v1 + 232));
}

uint64_t sub_24ED246BC()
{
  return sub_24ED246D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED1A33C);
}

uint64_t sub_24ED246D4(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[30], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19],
           v1[20],
           v1[21],
           v1[22],
           v1[23],
           v1[24],
           v1[25],
           v1[26],
           v1[27],
           v1[28],
           v1[29]);
}

uint64_t sub_24ED24750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED2479C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = v3[3];
  uint64_t v33 = v3[2];
  uint64_t v30 = v3[5];
  uint64_t v31 = v3[4];
  uint64_t v28 = v3[7];
  uint64_t v29 = (char *)v3[6];
  uint64_t v26 = v3[9];
  uint64_t v27 = v3[8];
  uint64_t v24 = v3[11];
  uint64_t v25 = v3[10];
  uint64_t v22 = v3[13];
  uint64_t v23 = v3[12];
  uint64_t v20 = v3[15];
  uint64_t v21 = v3[14];
  uint64_t v18 = v3[17];
  uint64_t v19 = v3[16];
  uint64_t v16 = v3[19];
  uint64_t v17 = v3[18];
  uint64_t v4 = v3[21];
  uint64_t v15 = v3[20];
  uint64_t v5 = v3[22];
  uint64_t v6 = v3[23];
  uint64_t v7 = v3[24];
  uint64_t v8 = v3[25];
  uint64_t v9 = v3[26];
  uint64_t v10 = v3[27];
  uint64_t v12 = v3[28];
  uint64_t v11 = v3[29];
  uint64_t v13 = *(void *)(type metadata accessor for VerticalGridView() - 8);
  return sub_24ED1B6BC(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v33, v32, v31, v30, v29, a3, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19,
           v18,
           v17,
           v16,
           v15,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10,
           v12,
           v11);
}

uint64_t sub_24ED2494C()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 13);
  uint64_t v3 = *((void *)v0 + 15);
  uint64_t v4 = *((void *)v0 + 18);
  uint64_t v41 = *((void *)v0 + 16);
  uint64_t v5 = (int *)type metadata accessor for VerticalGridView();
  uint64_t v45 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v43 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v44 = (v45 + 240) & ~v45;
  uint64_t v6 = &v0[v44];
  uint64_t v47 = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(&v0[v44], 1, v7))
  {
    uint64_t v8 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    uint64_t v9 = &v6[*(int *)(v7 + 52)];
    uint64_t v10 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v2)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v2);
    }
    uint64_t v11 = &v6[*(int *)(v7 + 56)];
    uint64_t v12 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = &v6[v5[63]];
  uint64_t v14 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v3);
  }
  (*(void (**)(char *))(*(void *)(v41 - 8) + 8))(&v6[v5[67]]);
  uint64_t v15 = &v6[v5[68]];
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = &v6[v5[69]];
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = &v6[v5[70]];
  uint64_t v20 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = &v6[v5[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = &v6[v5[72]];
  swift_release();
  uint64_t v24 = &v23[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v25 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = &v6[v5[73]];
  uint64_t v27 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = &v6[v5[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v29 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = &v6[v5[75]];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (!v33(v30, 1, v31)) {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v34 = &v6[v5[76]];
  if (!v33(v34, 1, v31)) {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  }
  uint64_t v35 = &v6[v5[77]];
  uint64_t v36 = sub_24EE55A60();
  uint64_t v37 = *(void *)(v36 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v38 = &v6[v5[78]];
  uint64_t v39 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v46 + 8))(&v0[(v44 + v43 + v42) & ~v42], v47);
  return swift_deallocObject();
}

uint64_t sub_24ED251B8()
{
  uint64_t v37 = v0[3];
  uint64_t v38 = v0[2];
  uint64_t v35 = v0[5];
  uint64_t v36 = v0[4];
  uint64_t v33 = v0[7];
  uint64_t v34 = v0[6];
  uint64_t v31 = v0[9];
  uint64_t v32 = v0[8];
  uint64_t v29 = v0[11];
  uint64_t v30 = v0[10];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[12];
  uint64_t v25 = v0[15];
  uint64_t v26 = v0[14];
  uint64_t v23 = v0[17];
  uint64_t v24 = v0[16];
  uint64_t v1 = v0[18];
  uint64_t v21 = v0[20];
  uint64_t v22 = v0[19];
  uint64_t v20 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v9 = v0[29];
  uint64_t v10 = *(void *)(type metadata accessor for VerticalGridView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  *((void *)&v19 + 1) = v6;
  *((void *)&v18 + 1) = v4;
  *(void *)&long long v19 = v5;
  *((void *)&v17 + 1) = v2;
  *(void *)&long long v18 = v3;
  *((void *)&v16 + 1) = v21;
  *(void *)&long long v17 = v20;
  *(void *)&long long v16 = v22;
  *(void *)&long long v15 = v26;
  *((void *)&v15 + 1) = v25;
  *(void *)&long long v14 = v28;
  *((void *)&v14 + 1) = v27;
  *(void *)&long long v13 = v32;
  *((void *)&v13 + 1) = v31;
  return sub_24ED14F38((uint64_t)v0 + v11, (uint64_t)v0+ ((v11 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v38, v37, v36, v35, v34, v33, v13, v30, v29, v14, v15, v24, v23, v1, v16, v17,
           v18,
           v19,
           v7,
           v8,
           v9);
}

uint64_t sub_24ED253A8(uint64_t a1)
{
  return sub_24ED253DC(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED15340);
}

uint64_t sub_24ED253C4(uint64_t a1)
{
  return sub_24ED253DC(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED15778);
}

uint64_t sub_24ED253DC(uint64_t a1, uint64_t (*a2)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v32 = *((void *)v2 + 3);
  uint64_t v33 = *((void *)v2 + 2);
  uint64_t v30 = *((void *)v2 + 5);
  uint64_t v31 = *((void *)v2 + 4);
  uint64_t v28 = *((void *)v2 + 7);
  uint64_t v29 = *((void *)v2 + 6);
  uint64_t v26 = *((void *)v2 + 9);
  uint64_t v27 = *((void *)v2 + 8);
  uint64_t v24 = *((void *)v2 + 11);
  uint64_t v25 = *((void *)v2 + 10);
  uint64_t v22 = *((void *)v2 + 13);
  uint64_t v23 = *((void *)v2 + 12);
  uint64_t v20 = *((void *)v2 + 15);
  uint64_t v21 = *((void *)v2 + 14);
  uint64_t v18 = *((void *)v2 + 17);
  uint64_t v19 = *((void *)v2 + 16);
  uint64_t v16 = *((void *)v2 + 19);
  uint64_t v17 = *((void *)v2 + 18);
  uint64_t v3 = *((void *)v2 + 21);
  uint64_t v15 = *((void *)v2 + 20);
  uint64_t v4 = *((void *)v2 + 22);
  uint64_t v5 = *((void *)v2 + 23);
  uint64_t v6 = *((void *)v2 + 24);
  uint64_t v7 = *((void *)v2 + 25);
  uint64_t v8 = *((void *)v2 + 26);
  uint64_t v9 = *((void *)v2 + 27);
  uint64_t v11 = *((void *)v2 + 28);
  uint64_t v10 = *((void *)v2 + 29);
  uint64_t v12 = *(void *)(type metadata accessor for VerticalGridView() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return a2(a1, &v2[v13], *(void *)&v2[(*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8], v33, v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18,
           v17,
           v16,
           v15,
           v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v11,
           v10);
}

uint64_t sub_24ED255C0()
{
  return sub_24ED25DE8((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED15BA8);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for VerticalGridView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    uint64_t v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[67]]);
  long long v14 = &v5[v4[68]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[69]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[70]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = &v5[v4[72]];
  swift_release();
  uint64_t v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = &v5[v4[73]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v5[v4[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = &v5[v4[75]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  uint64_t v33 = &v5[v4[76]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  uint64_t v34 = &v5[v4[77]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  uint64_t v37 = &v5[v4[78]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  return swift_deallocObject();
}

uint64_t sub_24ED25DD0()
{
  return sub_24ED25DE8((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED15E44);
}

uint64_t sub_24ED25DE8(uint64_t (*a1)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v32 = *((void *)v1 + 2);
  uint64_t v30 = *((void *)v1 + 4);
  uint64_t v31 = *((void *)v1 + 3);
  uint64_t v28 = *((void *)v1 + 6);
  uint64_t v29 = *((void *)v1 + 5);
  uint64_t v26 = *((void *)v1 + 8);
  uint64_t v27 = *((void *)v1 + 7);
  uint64_t v24 = *((void *)v1 + 10);
  uint64_t v25 = *((void *)v1 + 9);
  uint64_t v22 = *((void *)v1 + 12);
  uint64_t v23 = *((void *)v1 + 11);
  uint64_t v20 = *((void *)v1 + 14);
  uint64_t v21 = *((void *)v1 + 13);
  uint64_t v18 = *((void *)v1 + 16);
  uint64_t v19 = *((void *)v1 + 15);
  uint64_t v16 = *((void *)v1 + 18);
  uint64_t v17 = *((void *)v1 + 17);
  uint64_t v2 = *((void *)v1 + 21);
  uint64_t v14 = *((void *)v1 + 20);
  uint64_t v15 = *((void *)v1 + 19);
  uint64_t v3 = *((void *)v1 + 22);
  uint64_t v4 = *((void *)v1 + 23);
  uint64_t v5 = *((void *)v1 + 24);
  uint64_t v6 = *((void *)v1 + 25);
  uint64_t v7 = *((void *)v1 + 26);
  uint64_t v8 = *((void *)v1 + 27);
  uint64_t v9 = *((void *)v1 + 28);
  uint64_t v10 = *((void *)v1 + 29);
  uint64_t v11 = *(void *)(type metadata accessor for VerticalGridView() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a1(&v1[v12], *(void *)&v1[(*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8], v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16,
           v15,
           v14,
           v2,
           v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10);
}

uint64_t sub_24ED25FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED2601C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HGrid.init(maxRowCount:alignment:spacing:items:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(double *)(a7 + 24) = a8;
  *(double *)(a7 + 32) = a9;
  *(void *)(a7 + 40) = a4;
  *(void *)(a7 + 48) = a5;
  *(void *)(a7 + 56) = a6;
  return result;
}

uint64_t sub_24ED26094(uint64_t a1)
{
  long long v3 = v1[1];
  v24[0] = *v1;
  v24[1] = v3;
  long long v4 = v1[3];
  long long v25 = v1[2];
  long long v26 = v4;
  uint64_t v19 = *((void *)&v25 + 1);
  uint64_t v5 = *(void *)(a1 + 16);
  sub_24EE571B0();
  swift_getWitnessTable();
  if (sub_24EE573C0())
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v19 = v5;
    long long v20 = *(_OWORD *)(a1 + 24);
    uint64_t v21 = v6;
    type metadata accessor for HGrid.Row();
    return sub_24EE57170();
  }
  uint64_t result = MEMORY[0x25334D850](*((void *)&v25 + 1), v5);
  uint64_t v8 = *(void *)&v24[0];
  if (*(uint64_t *)&v24[0] >= result) {
    uint64_t v8 = result;
  }
  double v9 = ceil((double)result / (double)v8);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v8 < 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v22 = 0;
  uint64_t v23 = v8;
  MEMORY[0x270FA5388](result);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  void v18[2] = v5;
  v18[3] = v10;
  uint64_t v12 = *(void *)(a1 + 40);
  v18[4] = v11;
  v18[5] = v12;
  v18[6] = v13;
  v18[7] = v24;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965688);
  uint64_t v19 = v5;
  *(void *)&long long v20 = v10;
  *((void *)&v20 + 1) = v11;
  uint64_t v21 = v12;
  uint64_t v15 = type metadata accessor for HGrid.Row();
  uint64_t v16 = sub_24ED280CC(&qword_269965690, &qword_269965688);
  return sub_24EDC57CC((void (*)(char *, char *))sub_24ED28028, (uint64_t)v18, v14, v15, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
}

uint64_t *sub_24ED262A8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v9 = *result;
  uint64_t v10 = *result * a2;
  if ((unsigned __int128)(*result * (__int128)a2) >> 64 != v10 >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = v10 + a2;
  if (__OFADD__(v10, a2))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v12 = (char *)(v11 - 1);
  if (__OFSUB__(v11, 1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = (uint64_t *)MEMORY[0x25334D850](*(void *)(a3 + 40), a4);
  uint64_t v18 = (char *)result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if ((uint64_t)v18 >= (uint64_t)v12) {
    uint64_t v18 = v12;
  }
  if ((uint64_t)v18 >= v10)
  {
    v24[1] = v24;
    v24[6] = v10;
    v24[7] = v18;
    MEMORY[0x270FA5388](result);
    v23[2] = a4;
    v23[3] = a5;
    v23[4] = a6;
    v23[5] = a7;
    v23[6] = a3;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE4E0);
    _OWORD v24[2] = a4;
    v24[3] = a5;
    void v24[4] = a6;
    v24[5] = a7;
    uint64_t v20 = type metadata accessor for HGrid.RowItem();
    uint64_t v21 = sub_24ED280CC(&qword_269965698, &qword_26B1DE4E0);
    uint64_t result = (uint64_t *)sub_24EDC57CC((void (*)(char *, char *))sub_24ED280A4, (uint64_t)v23, v19, v20, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
    *a8 = v9;
    a8[1] = result;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24ED26438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v14;
  sub_24EE571F0();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a6, v13, a2);
  v17[0] = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  uint64_t result = type metadata accessor for HGrid.RowItem();
  *(void *)(a6 + *(int *)(result + 52)) = v15;
  return result;
}

uint64_t HGrid.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  type metadata accessor for HGrid.Row();
  uint64_t v6 = sub_24EE571B0();
  uint64_t v22 = v2;
  type metadata accessor for HGrid.RowItem();
  sub_24EE571B0();
  swift_getAssociatedTypeWitness();
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  uint64_t v31 = v5;
  uint64_t v7 = v5;
  swift_getWitnessTable();
  uint64_t v8 = sub_24EE56CD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v32 = v6;
  *((void *)&v32 + 1) = MEMORY[0x263F8D6C8];
  *(void *)&long long v33 = v8;
  *((void *)&v33 + 1) = WitnessTable;
  *(void *)&long long v34 = MEMORY[0x263F8D6D8];
  sub_24EE56CB0();
  uint64_t v30 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_24EE565F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v21 - v15;
  long long v17 = v23[1];
  long long v32 = *v23;
  long long v33 = v17;
  long long v18 = v23[3];
  long long v34 = v23[2];
  long long v35 = v18;
  uint64_t v25 = v3;
  uint64_t v26 = v22;
  uint64_t v27 = v4;
  uint64_t v28 = v7;
  uint64_t v29 = &v32;
  sub_24EE565E0();
  swift_getWitnessTable();
  sub_24EC90894(v13);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  sub_24EC90894(v16);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t type metadata accessor for HGrid.Row()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for HGrid.RowItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED268C8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a6;
  type metadata accessor for HGrid.Row();
  uint64_t v30 = sub_24EE571B0();
  type metadata accessor for HGrid.RowItem();
  sub_24EE571B0();
  swift_getAssociatedTypeWitness();
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  uint64_t v44 = a5;
  uint64_t v28 = MEMORY[0x263F1B7D8];
  swift_getWitnessTable();
  *(void *)&long long v26 = sub_24EE56CD0();
  *((void *)&v26 + 1) = swift_getWitnessTable();
  *(void *)&long long v40 = v30;
  *((void *)&v40 + 1) = MEMORY[0x263F8D6C8];
  long long v41 = v26;
  *(void *)&long long v42 = MEMORY[0x263F8D6D8];
  uint64_t v11 = sub_24EE56CB0();
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - v15;
  long long v17 = a1[1];
  long long v40 = *a1;
  long long v41 = v17;
  long long v18 = a1[3];
  long long v42 = a1[2];
  long long v43 = v18;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v19 = type metadata accessor for HGrid();
  *(void *)&long long v40 = sub_24ED26094(v19);
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  *(void *)(v20 + 32) = a4;
  *(void *)(v20 + 40) = a5;
  long long v21 = a1[1];
  *(_OWORD *)(v20 + 48) = *a1;
  *(_OWORD *)(v20 + 64) = v21;
  long long v22 = a1[3];
  *(_OWORD *)(v20 + 80) = a1[2];
  *(_OWORD *)(v20 + 96) = v22;
  sub_24ED27F7C((uint64_t)a1);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56CA0();
  uint64_t v35 = WitnessTable;
  swift_getWitnessTable();
  sub_24EC90894(v13);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v13, v11);
  sub_24EC90894(v16);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, v11);
}

uint64_t sub_24ED26C78@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED268C8(*(long long **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24ED26C88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a7;
  type metadata accessor for HGrid.RowItem();
  uint64_t v34 = sub_24EE571B0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  uint64_t v33 = a6;
  swift_getWitnessTable();
  uint64_t v11 = sub_24EE56CD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v22 - v16;
  uint64_t v18 = *v23;
  uint64_t v19 = v23[1];
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  uint64_t v32 = v24;
  sub_24EE56CC0();
  swift_getWitnessTable();
  sub_24EC90894(v14);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  sub_24EC90894(v17);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

uint64_t sub_24ED26F10@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v26[0] = a1;
  uint64_t v30 = a7;
  type metadata accessor for HGrid.RowItem();
  uint64_t v29 = sub_24EE571B0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = v29;
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v38 = a4;
  uint64_t v39 = WitnessTable;
  uint64_t v40 = AssociatedConformanceWitness;
  uint64_t v14 = sub_24EE56CB0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v26 - v19;
  uint64_t v36 = a1;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  v26[1] = swift_getKeyPath();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  *(void *)(v21 + 32) = a5;
  *(void *)(v21 + 40) = a6;
  long long v22 = a2[1];
  *(_OWORD *)(v21 + 48) = *a2;
  *(_OWORD *)(v21 + 64) = v22;
  long long v23 = a2[3];
  *(_OWORD *)(v21 + 80) = a2[2];
  *(_OWORD *)(v21 + 96) = v23;
  swift_bridgeObjectRetain();
  sub_24ED27F7C((uint64_t)a2);
  sub_24EE56CA0();
  uint64_t v35 = a6;
  swift_getWitnessTable();
  sub_24EC90894(v17);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v17, v14);
  sub_24EC90894(v20);
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, v14);
}

uint64_t sub_24ED271C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v13 = *(void (**)(uint64_t, void))(v12 + 48);
  v21[0] = v14;
  v21[1] = v15;
  v21[2] = v16;
  v21[3] = v17;
  uint64_t v18 = type metadata accessor for HGrid.RowItem();
  v13(a1, *(void *)(a1 + *(int *)(v18 + 52)));
  sub_24EC90894(v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, a4);
  sub_24EC90894(v11);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, a4);
}

uint64_t sub_24ED27328()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED27370()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24ED273AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_24ED27408(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24ED27490(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  swift_release();
  return a1;
}

uint64_t sub_24ED274F0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24ED27538(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HGrid()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED275A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED27788()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24ED27824(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_24ED2791C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24ED27948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24ED279C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24ED27A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24ED27ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24ED27B38(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ED27C4CLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_24ED27C60(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24ED27E0CLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

void *initializeBufferWithCopyOfBuffer for Symbol(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Symbol()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for Symbol(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Symbol(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Symbol(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Symbol(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24ED27F6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24ED26C88(a1, (uint64_t)(v2 + 6), v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_24ED27F7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24ED27FB4@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED26F10(*(void *)(v1 + 56), *(_OWORD **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24ED27FC8()
{
  return sub_24EE57520();
}

uint64_t sub_24ED27FFC()
{
  return 32;
}

__n128 sub_24ED28008(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24ED28018(uint64_t a1)
{
  return sub_24ED271C4(a1, v1 + 48, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_24ED28028@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_24ED262A8(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_24ED28050()
{
  unint64_t result = qword_26B1DE4C8;
  if (!qword_26B1DE4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE4C8);
  }
  return result;
}

uint64_t sub_24ED280A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24ED26438(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_24ED280CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_24ED28050();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_24ED2813C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 264);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_24ED337A8(*(void *)v2, v4, v5);
  double v6 = sub_24EE187F4(v3, v4, v5);
  sub_24ED32A64(v3, v4, v5);
  return v6;
}

uint64_t sub_24ED281B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699656C8);
  sub_24EE56B40();
  return v1;
}

uint64_t sub_24ED28204()
{
  return sub_24EE56B50();
}

uint64_t sub_24ED28254()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699656C8);
  sub_24EE56B60();
  return v1;
}

uint64_t sub_24ED282A4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699656D0);
  sub_24EE56B40();
  return v1;
}

uint64_t sub_24ED282FC()
{
  return sub_24EE56B50();
}

uint64_t sub_24ED28358()
{
  sub_24EE571B0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_24EE57580();
  uint64_t v0 = MEMORY[0x25334D850]();
  swift_bridgeObjectRelease();
  return v0;
}

double sub_24ED2843C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 192);
  type metadata accessor for CanvasLayout();
  double v5 = sub_24ED2813C(a1);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v4 + 56))(v3, v4, v5);
  double result = 0.0;
  if (v6) {
    return sub_24ED2813C(a1) * (*(double *)(v1 + *(int *)(a1 + 224) + 8) / *(double *)(v1 + *(int *)(a1 + 224))) * 0.2;
  }
  return result;
}

uint64_t CarouselView.init(items:metrics:layout:aspectRatio:pageControlSpacing:actionButtonViewBuilder:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:viewDescriptorBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  *a9 = 0;
  uint64_t v21 = (int *)type metadata accessor for CarouselView();
  long long v22 = (char *)a9 + v21[66];
  *(void *)long long v22 = swift_getKeyPath();
  *((void *)v22 + 1) = 0;
  v22[16] = 0;
  uint64_t v23 = v21[67];
  sub_24EE56B30();
  *(_OWORD *)((char *)a9 + v23) = a17;
  uint64_t v24 = (char *)a9 + v21[68];
  sub_24EE56B30();
  *uint64_t v24 = a17;
  *((void *)v24 + 1) = *((void *)&a17 + 1);
  uint64_t v25 = (char *)a9 + v21[69];
  sub_24EE56B30();
  char *v25 = a17;
  *((void *)v25 + 1) = *((void *)&a17 + 1);
  a9[1] = a1;
  uint64_t v26 = (char *)a9 + v21[54];
  uint64_t v27 = sub_24EE57430();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a2, v27);
  uint64_t v28 = (char *)a9 + v21[55];
  uint64_t v29 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a3, v29);
  uint64_t v30 = (char *)a9 + v21[70];
  uint64_t v31 = sub_24EE55940();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, a16, v31);
  uint64_t v32 = (double *)((char *)a9 + v21[56]);
  *uint64_t v32 = a10;
  v32[1] = a11;
  *(double *)((char *)a9 + v21[57]) = a12;
  uint64_t v33 = (char *)a9 + v21[58];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v34 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v33, a4, v34);
  uint64_t v35 = (char *)a9 + v21[59];
  uint64_t v36 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a5, v36);
  uint64_t v37 = (char *)a9 + v21[60];
  uint64_t v38 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v37, a6, v38);
  uint64_t v39 = (char *)a9 + v21[61];
  uint64_t v40 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v39, a7, v40);
  long long v41 = (char *)a9 + v21[62];
  swift_getTupleTypeMetadata3();
  uint64_t v42 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v41, a8, v42);
  long long v43 = (char *)a9 + v21[65];
  sub_24EE55A60();
  uint64_t v44 = sub_24EE57430();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v43, a15, v44);
  sub_24ED12C80(a13, (uint64_t)a9 + v21[63]);
  return sub_24ED12C80(a14, (uint64_t)a9 + v21[64]);
}

uint64_t type metadata accessor for CarouselView()
{
  return swift_getGenericMetadata();
}

uint64_t CarouselView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v153 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __n128 v5 = MEMORY[0x270FA5388](a1);
  char v6 = (char *)v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v3 + 16))(v6, v5);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t v150 = v8;
  *(void *)(v8 + 16) = *(void *)(a1 + 16);
  long long v154 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v8 + 24) = v154;
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v128 = *(void *)(a1 + 48);
  uint64_t v9 = v128;
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 48) = v9;
  long long v127 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v8 + 56) = v127;
  int64x2_t v138 = *(int64x2_t *)(a1 + 72);
  *(int64x2_t *)(v8 + 72) = v138;
  *(void *)(v8 + 88) = *(void *)(a1 + 88);
  int64x2_t v11 = *(int64x2_t *)(a1 + 112);
  long long v152 = *(_OWORD *)(a1 + 96);
  int64x2_t v160 = v11;
  *(_OWORD *)(v8 + 96) = v152;
  *(int64x2_t *)(v8 + 112) = v11;
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 136);
  *(void *)(v8 + 128) = v13;
  *(void *)(v8 + 136) = v12;
  uint64_t v149 = v13;
  uint64_t v15 = *(void *)(a1 + 144);
  uint64_t v14 = *(void *)(a1 + 152);
  *(void *)(v8 + 144) = v15;
  *(void *)(v8 + 152) = v14;
  uint64_t v125 = *(void *)(a1 + 160);
  uint64_t v126 = v14;
  uint64_t v157 = *(void *)(a1 + 168);
  uint64_t v16 = v157;
  *(void *)(v8 + 160) = v125;
  *(void *)(v8 + 168) = v16;
  long long v151 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v8 + 176) = v151;
  uint64_t v17 = *(void *)(a1 + 200);
  uint64_t v159 = *(void *)(a1 + 192);
  *(void *)(v8 + 192) = v159;
  *(void *)(v8 + 200) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, v6, a1);
  uint64_t v148 = *(void *)(v17 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v147 = sub_24EE571B0();
  int64x2_t v137 = vdupq_lane_s64(v154, 0);
  uint64_t v131 = v154;
  int64x2_t v223 = v137;
  uint64_t v222 = v10;
  v224.i64[0] = v15;
  v224.i64[1] = v12;
  uint64_t v225 = v12;
  uint64_t v18 = type metadata accessor for ActionCardView();
  uint64_t v144 = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v222 = v18;
  v223.i64[0] = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v158 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v19 = sub_24EE55DD0();
  uint64_t v145 = sub_24ED386D4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v234 = v15;
  uint64_t v235 = v145;
  uint64_t v20 = MEMORY[0x263F18E48];
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v232 = v21;
  uint64_t v233 = MEMORY[0x263F198F8];
  uint64_t v156 = v20;
  uint64_t v142 = v19;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v222 = v19;
  v223.i64[0] = v141;
  uint64_t v155 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v22 = sub_24EE55DD0();
  uint64_t v134 = v22;
  uint64_t v230 = v21;
  uint64_t v231 = MEMORY[0x263F18860];
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v222 = v22;
  v223.i64[0] = v133;
  swift_getOpaqueTypeMetadata2();
  uint64_t v132 = sub_24EE56240();
  uint64_t v136 = sub_24EE56B10();
  uint64_t v135 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v139 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v140 = sub_24EE56240();
  uint64_t v124 = sub_24EE56240();
  int64x2_t v223 = v137;
  uint64_t v112 = v138.i64[0];
  int64x2_t v224 = vzip1q_s64(v138, v160);
  uint64_t v222 = v10;
  uint64_t v225 = v15;
  uint64_t v226 = v12;
  uint64_t v227 = v12;
  uint64_t v228 = v157;
  uint64_t v229 = v159;
  uint64_t v23 = type metadata accessor for FullWidthStageView();
  v138.i64[0] = v23;
  v137.i64[0] = swift_getWitnessTable();
  uint64_t v222 = v23;
  v223.i64[0] = v137.i64[0];
  swift_getOpaqueTypeMetadata2();
  uint64_t v24 = type metadata accessor for InfoActionCardView();
  uint64_t v131 = v24;
  OpaqueTypeMetadata2 = swift_getWitnessTable();
  uint64_t v222 = v24;
  v223.i64[0] = OpaqueTypeMetadata2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v129 = sub_24EE56240();
  uint64_t v111 = sub_24EE56240();
  uint64_t v222 = v10;
  v223.i64[0] = v128;
  v223.i64[1] = v127;
  v224.i64[0] = v15;
  v224.i64[1] = v126;
  uint64_t v225 = v125;
  uint64_t v25 = type metadata accessor for LargeBrickView();
  uint64_t v128 = v25;
  *(void *)&long long v127 = swift_getWitnessTable();
  uint64_t v222 = v25;
  v223.i64[0] = v127;
  swift_getOpaqueTypeMetadata2();
  uint64_t v26 = type metadata accessor for DynamicBrickView();
  uint64_t v126 = v26;
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v222 = v26;
  v223.i64[0] = v125;
  swift_getOpaqueTypeMetadata2();
  uint64_t v117 = sub_24EE56240();
  uint64_t v27 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v123 = v27;
  uint64_t v122 = swift_getWitnessTable();
  uint64_t v222 = v27;
  v223.i64[0] = v122;
  swift_getOpaqueTypeMetadata2();
  uint64_t v120 = sub_24EE56240();
  uint64_t v121 = sub_24EE56240();
  v102[0] = sub_24EE56240();
  uint64_t v28 = type metadata accessor for StandardCardView();
  uint64_t v119 = v28;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v222 = v28;
  v223.i64[0] = v118;
  swift_getOpaqueTypeMetadata2();
  uint64_t v222 = v10;
  v223.i64[0] = v154;
  v223.i64[1] = v15;
  v224.i64[0] = v12;
  uint64_t v29 = type metadata accessor for StandardHorizontalStackView();
  *(void *)&long long v154 = v29;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v222 = v29;
  v223.i64[0] = v116;
  swift_getOpaqueTypeMetadata2();
  v102[3] = sub_24EE56240();
  uint64_t v30 = type metadata accessor for StandardVerticalStackView();
  uint64_t v115 = v30;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v222 = v30;
  v223.i64[0] = v114;
  swift_getOpaqueTypeMetadata2();
  uint64_t v31 = type metadata accessor for TallCardView();
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v222 = v31;
  v223.i64[0] = v113;
  swift_getOpaqueTypeMetadata2();
  uint64_t v110 = sub_24EE56240();
  v102[1] = sub_24EE56240();
  uint64_t v32 = type metadata accessor for VerticalStackCard();
  uint64_t v108 = swift_getWitnessTable();
  uint64_t v222 = v32;
  v223.i64[0] = v108;
  swift_getOpaqueTypeMetadata2();
  v102[2] = sub_24EE56240();
  uint64_t v33 = type metadata accessor for WideBrickView();
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v222 = v33;
  v223.i64[0] = v103;
  swift_getOpaqueTypeMetadata2();
  v102[4] = sub_24EE56240();
  v102[5] = sub_24EE56240();
  uint64_t v104 = sub_24EE56240();
  uint64_t v105 = sub_24EE56B10();
  uint64_t v106 = sub_24EE55DD0();
  uint64_t v107 = sub_24EE56240();
  uint64_t v109 = sub_24EE55DD0();
  uint64_t v112 = sub_24EE55DD0();
  uint64_t v222 = v144;
  v223.i64[0] = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v142;
  v223.i64[0] = v141;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v134;
  v223.i64[0] = v133;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v220 = v35;
  uint64_t v221 = v36;
  uint64_t v219 = swift_getWitnessTable();
  uint64_t v217 = swift_getWitnessTable();
  uint64_t v218 = MEMORY[0x263F18C10];
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v215 = v37;
  uint64_t v216 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v213 = v39;
  uint64_t v214 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v211 = OpaqueTypeConformance2;
  uint64_t v212 = v41;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v222 = v138.i64[0];
  v223.i64[0] = v137.i64[0];
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v131;
  v223.i64[0] = OpaqueTypeMetadata2;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v209 = v43;
  uint64_t v210 = v44;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v207 = v42;
  uint64_t v208 = v45;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v222 = v128;
  v223.i64[0] = v127;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v126;
  v223.i64[0] = v125;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v205 = v47;
  uint64_t v206 = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v222 = v123;
  v223.i64[0] = v122;
  uint64_t v203 = swift_getOpaqueTypeConformance2();
  uint64_t v204 = v48;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v201 = v49;
  uint64_t v202 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v199 = v46;
  uint64_t v200 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v222 = v119;
  v223.i64[0] = v118;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v154;
  v223.i64[0] = v116;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v197 = v53;
  uint64_t v198 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v222 = v115;
  v223.i64[0] = v114;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v31;
  v223.i64[0] = v113;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v195 = v56;
  uint64_t v196 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v193 = v55;
  uint64_t v194 = v58;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v222 = v32;
  v223.i64[0] = v108;
  uint64_t v191 = swift_getOpaqueTypeConformance2();
  uint64_t v192 = v157;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v222 = v33;
  v223.i64[0] = v103;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v189 = v60;
  uint64_t v190 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v187 = v59;
  uint64_t v188 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v185 = v52;
  uint64_t v186 = v63;
  uint64_t v184 = swift_getWitnessTable();
  uint64_t v182 = swift_getWitnessTable();
  uint64_t v64 = v145;
  uint64_t v183 = v145;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v180 = MEMORY[0x263F1BA00];
  uint64_t v181 = v65;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = MEMORY[0x263F1A240];
  uint64_t v178 = v66;
  uint64_t v179 = MEMORY[0x263F1A240];
  uint64_t v176 = swift_getWitnessTable();
  uint64_t v177 = v67;
  uint64_t v68 = v112;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v222 = v68;
  v223.i64[0] = v69;
  swift_getOpaqueTypeMetadata2();
  uint64_t v70 = sub_24EE55DD0();
  uint64_t v222 = v68;
  v223.i64[0] = v69;
  uint64_t v174 = swift_getOpaqueTypeConformance2();
  uint64_t v175 = v64;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v222 = v70;
  v223.i64[0] = v71;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v72 = sub_24EE55DD0();
  uint64_t v222 = v70;
  v223.i64[0] = v71;
  uint64_t v172 = swift_getOpaqueTypeConformance2();
  uint64_t v173 = v71;
  uint64_t v170 = swift_getWitnessTable();
  uint64_t v171 = MEMORY[0x263F198F8];
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v222 = v72;
  v223.i64[0] = v73;
  swift_getOpaqueTypeMetadata2();
  uint64_t v74 = sub_24EE56240();
  uint64_t v75 = v147;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v77 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v222 = v75;
  v223.i64[0] = v77;
  v223.i64[1] = v74;
  v224.i64[0] = v76;
  v224.i64[1] = AssociatedConformanceWitness;
  sub_24EE56CB0();
  uint64_t v222 = v72;
  v223.i64[0] = v73;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = MEMORY[0x263F1BA00];
  uint64_t v169 = v79;
  uint64_t v167 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getWitnessTable();
  sub_24EE55B20();
  uint64_t v80 = sub_24EE55DD0();
  uint64_t v81 = sub_24EE56400();
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v166 = MEMORY[0x263F1A450];
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v222 = v80;
  v223.i64[0] = v81;
  uint64_t v83 = MEMORY[0x263F1A2D0];
  v223.i64[1] = v82;
  v224.i64[0] = MEMORY[0x263F1A2D0];
  uint64_t v84 = swift_getOpaqueTypeMetadata2();
  uint64_t v222 = v80;
  v223.i64[0] = v81;
  v223.i64[1] = v82;
  v224.i64[0] = v83;
  uint64_t v85 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v84;
  uint64_t v86 = MEMORY[0x263F8D6C8];
  v223.i64[0] = MEMORY[0x263F8D6C8];
  uint64_t v87 = MEMORY[0x263F8D6E8];
  v223.i64[1] = v85;
  v224.i64[0] = MEMORY[0x263F8D6E8];
  uint64_t v88 = swift_getOpaqueTypeMetadata2();
  uint64_t v222 = v152;
  v223.i64[0] = v160.i64[0];
  v223.i64[1] = v151;
  v224.i64[0] = v159;
  uint64_t v89 = type metadata accessor for CanvasLayout();
  uint64_t v222 = v84;
  v223.i64[0] = v86;
  v223.i64[1] = v85;
  v224.i64[0] = v87;
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v222 = v88;
  v223.i64[0] = v89;
  v223.i64[1] = v90;
  v224.i64[0] = v91;
  uint64_t v92 = swift_getOpaqueTypeMetadata2();
  uint64_t v222 = v88;
  v223.i64[0] = v89;
  v223.i64[1] = v90;
  v224.i64[0] = v91;
  uint64_t v93 = swift_getOpaqueTypeConformance2();
  unint64_t v94 = sub_24EC96BA0();
  uint64_t v95 = MEMORY[0x263F8EF38];
  uint64_t v222 = v92;
  v223.i64[0] = MEMORY[0x263F8EF38];
  v223.i64[1] = v93;
  v224.i64[0] = v94;
  uint64_t v96 = swift_getOpaqueTypeMetadata2();
  uint64_t v222 = v92;
  v223.i64[0] = v95;
  v223.i64[1] = v93;
  v224.i64[0] = v94;
  uint64_t v97 = swift_getOpaqueTypeConformance2();
  uint64_t v222 = v96;
  v223.i64[0] = v97;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656A0);
  sub_24EE55DD0();
  uint64_t v222 = v96;
  v223.i64[0] = v97;
  uint64_t v98 = swift_getOpaqueTypeConformance2();
  uint64_t v99 = sub_24EC8C218(&qword_2699656A8, &qword_2699656A0);
  uint64_t v163 = v98;
  uint64_t v164 = v99;
  swift_getWitnessTable();
  uint64_t v161 = sub_24EE55EA0();
  uint64_t v162 = v100;
  sub_24EE55EB0();
  swift_getWitnessTable();
  sub_24EC90894(&v161);
  swift_release();
  uint64_t v161 = v222;
  uint64_t v162 = v223.i64[0];
  sub_24EC90894(&v161);
  return swift_release();
}

uint64_t sub_24ED29E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, unint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27)
{
  uint64_t v320 = a8;
  uint64_t v335 = a7;
  uint64_t v337 = a6;
  uint64_t v330 = a5;
  unint64_t v331 = a4;
  uint64_t v329 = a3;
  uint64_t v314 = a2;
  uint64_t v302 = a1;
  uint64_t v292 = a9;
  uint64_t v334 = a23;
  uint64_t v332 = a22;
  uint64_t v336 = a21;
  unint64_t v328 = a20;
  unint64_t v333 = a19;
  uint64_t v325 = a18;
  unint64_t v312 = a13;
  uint64_t v316 = a12;
  unint64_t v327 = a11;
  unint64_t v315 = a10;
  uint64_t v324 = a27;
  uint64_t v323 = a25;
  uint64_t v317 = a17;
  uint64_t v326 = a16;
  uint64_t v322 = a15;
  uint64_t v453 = a14;
  uint64_t v321 = a14;
  uint64_t v454 = a16;
  uint64_t v455 = a24;
  uint64_t v318 = a24;
  unint64_t v456 = a26;
  unint64_t v319 = a26;
  uint64_t v309 = type metadata accessor for CanvasLayout();
  uint64_t v303 = *(void *)(v309 - 8);
  MEMORY[0x270FA5388](v309);
  uint64_t v291 = (char *)v246 - v27;
  uint64_t v301 = sub_24EE55E20();
  uint64_t v311 = *(void **)(v301 - 8);
  uint64_t v304 = (void (*)(char *, char *, uint64_t))v311[8];
  MEMORY[0x270FA5388](v301);
  uint64_t v300 = (char *)v246 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v453 = v329;
  uint64_t v454 = v331;
  uint64_t v455 = v330;
  unint64_t v456 = v337;
  uint64_t v457 = (uint64_t)v335;
  uint64_t v458 = v320;
  unint64_t v459 = a10;
  unint64_t v460 = a11;
  uint64_t v461 = a12;
  unint64_t v462 = a13;
  uint64_t v463 = a14;
  uint64_t v464 = a15;
  uint64_t v29 = (uint64_t)v326;
  long long v465 = v326;
  uint64_t v466 = a17;
  uint64_t v467 = v325;
  uint64_t v30 = v333;
  unint64_t v468 = v333;
  unint64_t v31 = v328;
  unint64_t v469 = v328;
  uint64_t v470 = v336;
  uint64_t v471 = v332;
  uint64_t v32 = v334;
  uint64_t v472 = v334;
  uint64_t v473 = a24;
  uint64_t v474 = v323;
  unint64_t v475 = a26;
  uint64_t v33 = v324;
  uint64_t v476 = v324;
  uint64_t v310 = type metadata accessor for CarouselView();
  uint64_t v313 = *(void *)(v310 - 8);
  uint64_t v294 = *(void *)(v313 + 64);
  MEMORY[0x270FA5388](v310);
  uint64_t v299 = (char *)v246 - v34;
  uint64_t v307 = (char *)sub_24EE56400();
  uint64_t v293 = *((void *)v307 - 1);
  MEMORY[0x270FA5388](v307);
  uint64_t v290 = (char *)v246 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = *(char **)(v33 + 32);
  uint64_t AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v296 = (char *)sub_24EE571B0();
  uint64_t v453 = v337;
  uint64_t v454 = v331;
  uint64_t v455 = (uint64_t)v331;
  unint64_t v456 = v31;
  uint64_t v457 = v30;
  uint64_t v458 = v30;
  uint64_t v36 = type metadata accessor for ActionCardView();
  uint64_t v289 = v36;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v453 = v36;
  uint64_t v454 = (char *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v306 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v37 = sub_24EE55DD0();
  uint64_t v295 = (char *)sub_24ED386D4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  unint64_t v451 = v31;
  unint64_t v38 = v31;
  uint64_t v452 = v295;
  uint64_t v39 = MEMORY[0x263F18E48];
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v449 = v40;
  uint64_t v450 = MEMORY[0x263F198F8];
  uint64_t v308 = v39;
  uint64_t v287 = v37;
  uint64_t v286 = swift_getWitnessTable();
  uint64_t v453 = v37;
  uint64_t v454 = (char *)v286;
  uint64_t v305 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v41 = sub_24EE55DD0();
  uint64_t v279 = v41;
  uint64_t v447 = v40;
  uint64_t v448 = MEMORY[0x263F18860];
  uint64_t v278 = swift_getWitnessTable();
  uint64_t v453 = v41;
  uint64_t v454 = (char *)v278;
  swift_getOpaqueTypeMetadata2();
  uint64_t v277 = (char *)sub_24EE56240();
  uint64_t v281 = sub_24EE56B10();
  uint64_t v280 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v284 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v285 = (char *)sub_24EE56240();
  uint64_t v269 = sub_24EE56240();
  uint64_t v42 = v337;
  uint64_t v453 = v337;
  uint64_t v43 = v331;
  uint64_t v454 = v331;
  uint64_t v455 = (uint64_t)v331;
  unint64_t v456 = v327;
  uint64_t v457 = v29;
  unint64_t v44 = v38;
  uint64_t v458 = v38;
  unint64_t v45 = v333;
  unint64_t v459 = v333;
  unint64_t v460 = v333;
  uint64_t v461 = v32;
  unint64_t v462 = v319;
  uint64_t v46 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v46;
  uint64_t v282 = (char *)swift_getWitnessTable();
  uint64_t v453 = v46;
  uint64_t v454 = v282;
  swift_getOpaqueTypeMetadata2();
  uint64_t v47 = v43;
  uint64_t v48 = type metadata accessor for InfoActionCardView();
  uint64_t v276 = v48;
  uint64_t v275 = swift_getWitnessTable();
  uint64_t v453 = v48;
  uint64_t v454 = (char *)v275;
  swift_getOpaqueTypeMetadata2();
  uint64_t v274 = sub_24EE56240();
  uint64_t v255 = sub_24EE56240();
  uint64_t v49 = v42;
  uint64_t v453 = v42;
  uint64_t v454 = v335;
  uint64_t v455 = v320;
  uint64_t v50 = v44;
  unint64_t v456 = v44;
  uint64_t v457 = v336;
  uint64_t v458 = v332;
  uint64_t v51 = type metadata accessor for LargeBrickView();
  uint64_t v273 = v51;
  uint64_t v272 = swift_getWitnessTable();
  uint64_t v453 = v51;
  uint64_t v454 = (char *)v272;
  swift_getOpaqueTypeMetadata2();
  uint64_t v52 = type metadata accessor for DynamicBrickView();
  uint64_t v271 = v52;
  uint64_t v270 = swift_getWitnessTable();
  uint64_t v453 = v52;
  uint64_t v454 = (char *)v270;
  swift_getOpaqueTypeMetadata2();
  uint64_t v262 = sub_24EE56240();
  uint64_t v53 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v268 = v53;
  uint64_t v267 = swift_getWitnessTable();
  uint64_t v453 = v53;
  uint64_t v454 = (char *)v267;
  swift_getOpaqueTypeMetadata2();
  uint64_t v265 = (char *)sub_24EE56240();
  uint64_t v266 = sub_24EE56240();
  v246[1] = sub_24EE56240();
  uint64_t v54 = type metadata accessor for StandardCardView();
  uint64_t v264 = v54;
  uint64_t v263 = swift_getWitnessTable();
  uint64_t v453 = v54;
  uint64_t v454 = (char *)v263;
  swift_getOpaqueTypeMetadata2();
  uint64_t v453 = v49;
  uint64_t v454 = v47;
  uint64_t v455 = v50;
  unint64_t v456 = v45;
  uint64_t v55 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v261 = v55;
  uint64_t v260 = swift_getWitnessTable();
  uint64_t v453 = v55;
  uint64_t v454 = (char *)v260;
  swift_getOpaqueTypeMetadata2();
  v246[4] = sub_24EE56240();
  uint64_t v56 = type metadata accessor for StandardVerticalStackView();
  uint64_t v259 = v56;
  uint64_t v258 = swift_getWitnessTable();
  uint64_t v453 = v56;
  uint64_t v454 = (char *)v258;
  swift_getOpaqueTypeMetadata2();
  uint64_t v57 = type metadata accessor for TallCardView();
  uint64_t v257 = swift_getWitnessTable();
  uint64_t v453 = v57;
  uint64_t v454 = (char *)v257;
  swift_getOpaqueTypeMetadata2();
  uint64_t v254 = sub_24EE56240();
  v246[2] = sub_24EE56240();
  uint64_t v58 = type metadata accessor for VerticalStackCard();
  uint64_t v252 = swift_getWitnessTable();
  uint64_t v453 = v58;
  uint64_t v454 = (char *)v252;
  swift_getOpaqueTypeMetadata2();
  v246[3] = sub_24EE56240();
  uint64_t v59 = type metadata accessor for WideBrickView();
  uint64_t v247 = swift_getWitnessTable();
  uint64_t v453 = v59;
  uint64_t v454 = (char *)v247;
  swift_getOpaqueTypeMetadata2();
  v246[5] = sub_24EE56240();
  v246[6] = sub_24EE56240();
  uint64_t v248 = sub_24EE56240();
  uint64_t v249 = sub_24EE56B10();
  uint64_t v250 = sub_24EE55DD0();
  uint64_t v251 = sub_24EE56240();
  uint64_t v253 = sub_24EE55DD0();
  uint64_t v256 = sub_24EE55DD0();
  uint64_t v453 = v289;
  uint64_t v454 = (char *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v287;
  uint64_t v454 = (char *)v286;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v279;
  uint64_t v454 = (char *)v278;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v445 = v61;
  uint64_t v446 = v62;
  uint64_t v444 = swift_getWitnessTable();
  uint64_t v442 = swift_getWitnessTable();
  uint64_t v443 = MEMORY[0x263F18C10];
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v440 = v63;
  uint64_t v441 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v438 = v65;
  uint64_t v439 = v66;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v436 = OpaqueTypeConformance2;
  uint64_t v437 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v453 = OpaqueTypeMetadata2;
  uint64_t v454 = v282;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v276;
  uint64_t v454 = (char *)v275;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v434 = v69;
  uint64_t v435 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v432 = v68;
  uint64_t v433 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v453 = v273;
  uint64_t v454 = (char *)v272;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v271;
  uint64_t v454 = (char *)v270;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v430 = v73;
  uint64_t v431 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v453 = v268;
  uint64_t v454 = (char *)v267;
  uint64_t v428 = swift_getOpaqueTypeConformance2();
  uint64_t v429 = v74;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v426 = v75;
  uint64_t v427 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v424 = v72;
  uint64_t v425 = v77;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v453 = v264;
  uint64_t v454 = (char *)v263;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v261;
  uint64_t v454 = (char *)v260;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v422 = v79;
  uint64_t v423 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v453 = v259;
  uint64_t v454 = (char *)v258;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v57;
  uint64_t v454 = (char *)v257;
  uint64_t v83 = swift_getOpaqueTypeConformance2();
  uint64_t v420 = v82;
  uint64_t v421 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v418 = v81;
  uint64_t v419 = v84;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v453 = v58;
  uint64_t v454 = (char *)v252;
  uint64_t v416 = swift_getOpaqueTypeConformance2();
  uint64_t v417 = v334;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v453 = v59;
  uint64_t v454 = (char *)v247;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v414 = v86;
  uint64_t v415 = v87;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v412 = v85;
  uint64_t v413 = v88;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v410 = v78;
  uint64_t v411 = v89;
  uint64_t v409 = swift_getWitnessTable();
  uint64_t v407 = swift_getWitnessTable();
  uint64_t v90 = v295;
  uint64_t v408 = v295;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v405 = MEMORY[0x263F1BA00];
  uint64_t v406 = v91;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v93 = MEMORY[0x263F1A240];
  uint64_t v403 = v92;
  uint64_t v404 = MEMORY[0x263F1A240];
  uint64_t v401 = swift_getWitnessTable();
  uint64_t v402 = v93;
  uint64_t v94 = v256;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v453 = v94;
  uint64_t v454 = (char *)v95;
  swift_getOpaqueTypeMetadata2();
  uint64_t v96 = sub_24EE55DD0();
  uint64_t v453 = v94;
  uint64_t v454 = (char *)v95;
  uint64_t v399 = swift_getOpaqueTypeConformance2();
  uint64_t v400 = v90;
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v453 = v96;
  uint64_t v454 = (char *)v97;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v98 = sub_24EE55DD0();
  uint64_t v453 = v96;
  uint64_t v454 = (char *)v97;
  uint64_t v397 = swift_getOpaqueTypeConformance2();
  uint64_t v398 = v97;
  uint64_t v395 = swift_getWitnessTable();
  uint64_t v396 = MEMORY[0x263F198F8];
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v453 = v98;
  uint64_t v454 = (char *)v99;
  swift_getOpaqueTypeMetadata2();
  uint64_t v100 = sub_24EE56240();
  uint64_t v101 = v296;
  uint64_t v102 = swift_getWitnessTable();
  uint64_t v103 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v453 = (uint64_t)v101;
  uint64_t v454 = v103;
  uint64_t v455 = v100;
  unint64_t v456 = v102;
  uint64_t v457 = AssociatedConformanceWitness;
  sub_24EE56CB0();
  uint64_t v453 = v98;
  uint64_t v454 = (char *)v99;
  uint64_t v105 = swift_getOpaqueTypeConformance2();
  uint64_t v393 = MEMORY[0x263F1BA00];
  uint64_t v394 = v105;
  uint64_t v392 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v267 = sub_24EE56BC0();
  uint64_t v266 = swift_getWitnessTable();
  uint64_t v106 = sub_24EE55B20();
  uint64_t v305 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v108 = (char *)v246 - v107;
  uint64_t v109 = sub_24EE55DD0();
  uint64_t v306 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v265 = (char *)v246 - v110;
  uint64_t v264 = swift_getWitnessTable();
  uint64_t v390 = v264;
  uint64_t v391 = MEMORY[0x263F1A450];
  uint64_t v111 = swift_getWitnessTable();
  uint64_t v453 = v109;
  uint64_t v112 = v307;
  uint64_t v454 = v307;
  uint64_t v455 = v111;
  uint64_t v113 = v111;
  uint64_t v263 = v111;
  unint64_t v456 = MEMORY[0x263F1A2D0];
  unint64_t v114 = MEMORY[0x263F1A2D0];
  uint64_t v115 = swift_getOpaqueTypeMetadata2();
  uint64_t v274 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v295 = (char *)v246 - v116;
  uint64_t v453 = v109;
  uint64_t v454 = v112;
  uint64_t v455 = v113;
  unint64_t v456 = v114;
  uint64_t v117 = swift_getOpaqueTypeConformance2();
  uint64_t v118 = v115;
  uint64_t v268 = v115;
  uint64_t v453 = v115;
  uint64_t v119 = (char *)MEMORY[0x263F8D6C8];
  uint64_t v454 = (char *)MEMORY[0x263F8D6C8];
  uint64_t v455 = v117;
  uint64_t v120 = v117;
  uint64_t v269 = v117;
  unint64_t v456 = MEMORY[0x263F8D6E8];
  unint64_t v121 = MEMORY[0x263F8D6E8];
  uint64_t v122 = swift_getOpaqueTypeMetadata2();
  uint64_t v278 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v296 = (char *)v246 - v123;
  uint64_t v453 = v118;
  uint64_t v454 = v119;
  uint64_t v455 = v120;
  unint64_t v456 = v121;
  uint64_t v124 = swift_getOpaqueTypeConformance2();
  uint64_t v125 = v309;
  uint64_t v126 = swift_getWitnessTable();
  uint64_t v453 = v122;
  uint64_t v270 = v122;
  uint64_t v271 = v126;
  uint64_t v454 = (char *)v125;
  uint64_t v455 = v124;
  uint64_t v127 = v124;
  uint64_t v272 = v124;
  unint64_t v456 = v126;
  uint64_t v128 = v126;
  uint64_t v129 = swift_getOpaqueTypeMetadata2();
  uint64_t v281 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t AssociatedTypeWitness = (char *)v246 - v130;
  uint64_t v453 = v122;
  uint64_t v454 = (char *)v125;
  uint64_t v455 = v127;
  unint64_t v456 = v128;
  uint64_t v131 = swift_getOpaqueTypeConformance2();
  unint64_t v132 = sub_24EC96BA0();
  uint64_t v453 = v129;
  uint64_t v133 = v129;
  uint64_t v275 = v129;
  uint64_t v276 = v131;
  uint64_t v454 = (char *)MEMORY[0x263F8EF38];
  uint64_t v134 = (char *)MEMORY[0x263F8EF38];
  uint64_t v455 = v131;
  unint64_t v456 = v132;
  uint64_t v273 = v132;
  uint64_t v135 = swift_getOpaqueTypeMetadata2();
  uint64_t v279 = v135;
  OpaqueTypeMetadata2 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v298 = (char *)v246 - v136;
  uint64_t v453 = v133;
  uint64_t v454 = v134;
  uint64_t v455 = v131;
  unint64_t v456 = v132;
  uint64_t v280 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v135;
  uint64_t v454 = (char *)v280;
  uint64_t v286 = MEMORY[0x263F1AE10];
  uint64_t v284 = swift_getOpaqueTypeMetadata2();
  uint64_t WitnessTable = *(void *)(v284 - 8);
  MEMORY[0x270FA5388](v284);
  uint64_t v277 = (char *)v246 - v137;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656A0);
  uint64_t v287 = sub_24EE55DD0();
  uint64_t v289 = *(void *)(v287 - 8);
  MEMORY[0x270FA5388](v287);
  uint64_t v282 = (char *)v246 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v139);
  uint64_t v285 = (char *)v246 - v140;
  sub_24EE56490();
  uint64_t v363 = v329;
  uint64_t v364 = v331;
  uint64_t v365 = v330;
  uint64_t v366 = v337;
  uint64_t v367 = v335;
  uint64_t v141 = v320;
  uint64_t v368 = v320;
  unint64_t v369 = v315;
  unint64_t v370 = v327;
  uint64_t v371 = v316;
  unint64_t v372 = v312;
  uint64_t v373 = v321;
  uint64_t v374 = v322;
  uint64_t v375 = v326;
  uint64_t v376 = v317;
  uint64_t v377 = v325;
  unint64_t v378 = v333;
  unint64_t v379 = v328;
  uint64_t v380 = v336;
  uint64_t v381 = v332;
  uint64_t v382 = v334;
  uint64_t v383 = v318;
  uint64_t v384 = v323;
  unint64_t v385 = v319;
  uint64_t v386 = v324;
  uint64_t v142 = v314;
  uint64_t v387 = v314;
  sub_24EE55B30();
  sub_24EE564D0();
  sub_24EE55E00();
  uint64_t v143 = v265;
  sub_24EE56810();
  (*(void (**)(char *, uint64_t))(v305 + 8))(v108, v106);
  uint64_t v144 = v290;
  sub_24EE563F0();
  uint64_t v145 = v307;
  sub_24EE568D0();
  (*(void (**)(char *, char *))(v293 + 8))(v144, v145);
  (*(void (**)(char *, uint64_t))(v306 + 8))(v143, v109);
  uint64_t v146 = v310;
  uint64_t v453 = sub_24ED281B8();
  uint64_t v147 = v313;
  uint64_t v148 = *(char **)(v313 + 16);
  uint64_t v306 = v313 + 16;
  uint64_t v307 = v148;
  uint64_t v149 = v299;
  ((void (*)(char *, uint64_t, uint64_t))v148)(v299, v142, v146);
  uint64_t v150 = v311;
  uint64_t v290 = (char *)v311[2];
  long long v152 = v300;
  uint64_t v151 = v301;
  ((void (*)(char *, uint64_t, uint64_t))v290)(v300, v302, v301);
  uint64_t v153 = *(unsigned __int8 *)(v147 + 80);
  uint64_t v154 = (v153 + 208) & ~v153;
  uint64_t v305 = v154;
  uint64_t v155 = v153 | 7;
  uint64_t v293 = v153 | 7;
  v294 += v154;
  uint64_t v156 = *((unsigned __int8 *)v150 + 80);
  uint64_t v157 = (char *)((v294 + v156) & ~v156);
  uint64_t v265 = v157;
  uint64_t v266 = v155 | v156;
  uint64_t v267 = (uint64_t)v304 + (void)v157;
  uint64_t v158 = swift_allocObject();
  uint64_t v159 = v331;
  *(void *)(v158 + 16) = v329;
  *(void *)(v158 + 24) = v159;
  uint64_t v160 = v337;
  *(void *)(v158 + 32) = v330;
  *(void *)(v158 + 40) = v160;
  *(void *)(v158 + 48) = v335;
  *(void *)(v158 + 56) = v141;
  unint64_t v161 = v327;
  *(void *)(v158 + 64) = v315;
  *(void *)(v158 + 72) = v161;
  unint64_t v162 = v312;
  *(void *)(v158 + 80) = v316;
  *(void *)(v158 + 88) = v162;
  uint64_t v163 = v322;
  *(void *)(v158 + 96) = v321;
  *(void *)(v158 + 104) = v163;
  uint64_t v164 = v317;
  *(void *)(v158 + 112) = v326;
  *(void *)(v158 + 120) = v164;
  unint64_t v165 = v333;
  *(void *)(v158 + 128) = v325;
  *(void *)(v158 + 136) = v165;
  uint64_t v166 = v336;
  *(void *)(v158 + 144) = v328;
  *(void *)(v158 + 152) = v166;
  uint64_t v167 = v334;
  *(void *)(v158 + 160) = v332;
  *(void *)(v158 + 168) = v167;
  uint64_t v168 = v323;
  *(void *)(v158 + 176) = v318;
  *(void *)(v158 + 184) = v168;
  uint64_t v169 = v324;
  *(void *)(v158 + 192) = v319;
  *(void *)(v158 + 200) = v169;
  uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v147 + 32);
  uint64_t v313 = v147 + 32;
  uint64_t v304 = v170;
  uint64_t v171 = v310;
  v170((char *)(v158 + v154), v149, v310);
  uint64_t v172 = &v157[v158];
  uint64_t v173 = (void (*)(char *, char *, uint64_t))v311[4];
  v311 += 4;
  v173(v172, v152, v151);
  uint64_t v174 = v295;
  uint64_t v175 = v268;
  sub_24EE56A20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v274 + 8))(v174, v175);
  uint64_t v176 = v171;
  uint64_t v177 = v314;
  uint64_t v178 = v291;
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v291, v314 + *(int *)(v171 + 220), v309);
  ((void (*)(char *, uint64_t, uint64_t))v307)(v149, v177, v171);
  uint64_t v179 = v152;
  uint64_t v180 = v301;
  ((void (*)(char *, uint64_t, uint64_t))v290)(v179, v302, v301);
  uint64_t v181 = swift_allocObject();
  uint64_t v182 = v331;
  *(void *)(v181 + 16) = v329;
  *(void *)(v181 + 24) = v182;
  uint64_t v183 = v337;
  *(void *)(v181 + 32) = v330;
  *(void *)(v181 + 40) = v183;
  uint64_t v184 = v320;
  *(void *)(v181 + 48) = v335;
  *(void *)(v181 + 56) = v184;
  unint64_t v185 = v327;
  *(void *)(v181 + 64) = v315;
  *(void *)(v181 + 72) = v185;
  uint64_t v186 = v316;
  unint64_t v187 = v312;
  *(void *)(v181 + 80) = v316;
  *(void *)(v181 + 88) = v187;
  uint64_t v188 = v322;
  *(void *)(v181 + 96) = v321;
  *(void *)(v181 + 104) = v188;
  uint64_t v189 = v317;
  *(void *)(v181 + 112) = v326;
  *(void *)(v181 + 120) = v189;
  unint64_t v190 = v333;
  *(void *)(v181 + 128) = v325;
  *(void *)(v181 + 136) = v190;
  uint64_t v191 = v336;
  *(void *)(v181 + 144) = v328;
  *(void *)(v181 + 152) = v191;
  uint64_t v192 = v334;
  *(void *)(v181 + 160) = v332;
  *(void *)(v181 + 168) = v192;
  uint64_t v193 = v323;
  *(void *)(v181 + 176) = v318;
  *(void *)(v181 + 184) = v193;
  uint64_t v194 = (char *)(v181 + v305);
  uint64_t v195 = v324;
  *(void *)(v181 + 192) = v319;
  *(void *)(v181 + 200) = v195;
  v304(v194, v149, v176);
  v173(&v265[v181], v300, v180);
  uint64_t v196 = v178;
  uint64_t v197 = v270;
  uint64_t v198 = v309;
  uint64_t v199 = v296;
  sub_24EE56A20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v303 + 8))(v196, v198);
  (*(void (**)(char *, uint64_t))(v278 + 8))(v199, v197);
  uint64_t v200 = v149;
  uint64_t v201 = v176;
  ((void (*)(char *, uint64_t, uint64_t))v307)(v149, v314, v176);
  uint64_t v202 = (void *)swift_allocObject();
  uint64_t v203 = v331;
  v202[2] = v329;
  v202[3] = v203;
  uint64_t v204 = v337;
  v202[4] = v330;
  v202[5] = v204;
  v202[6] = v335;
  v202[7] = v184;
  unint64_t v205 = v315;
  unint64_t v206 = v327;
  v202[8] = v315;
  v202[9] = v206;
  unint64_t v207 = v312;
  v202[10] = v186;
  v202[11] = v207;
  uint64_t v208 = v322;
  v202[12] = v321;
  v202[13] = v208;
  uint64_t v209 = v317;
  v202[14] = v326;
  v202[15] = v209;
  unint64_t v210 = v333;
  v202[16] = v325;
  v202[17] = v210;
  uint64_t v211 = v336;
  v202[18] = v328;
  v202[19] = v211;
  uint64_t v212 = v334;
  v202[20] = v332;
  v202[21] = v212;
  uint64_t v213 = v323;
  v202[22] = v318;
  v202[23] = v213;
  uint64_t v214 = (char *)v202 + v305;
  uint64_t v215 = v324;
  v202[24] = v319;
  v202[25] = v215;
  uint64_t v216 = v201;
  v304(v214, v200, v201);
  uint64_t v217 = AssociatedTypeWitness;
  uint64_t v218 = v275;
  sub_24EE56930();
  swift_release();
  (*(void (**)(char *, uint64_t))(v281 + 8))(v217, v218);
  uint64_t v219 = v299;
  ((void (*)(char *, uint64_t, uint64_t))v307)(v299, v314, v216);
  uint64_t v220 = (void *)swift_allocObject();
  v220[2] = v329;
  v220[3] = v203;
  uint64_t v221 = v337;
  v220[4] = v330;
  v220[5] = v221;
  uint64_t v222 = v320;
  v220[6] = v335;
  v220[7] = v222;
  v220[8] = v205;
  unint64_t v223 = v327;
  uint64_t v224 = v316;
  v220[9] = v327;
  v220[10] = v224;
  uint64_t v225 = v321;
  v220[11] = v207;
  v220[12] = v225;
  uint64_t v226 = v326;
  v220[13] = v322;
  v220[14] = v226;
  uint64_t v227 = v325;
  v220[15] = v209;
  v220[16] = v227;
  unint64_t v228 = v328;
  v220[17] = v333;
  v220[18] = v228;
  uint64_t v229 = v332;
  v220[19] = v336;
  v220[20] = v229;
  uint64_t v230 = v318;
  v220[21] = v334;
  v220[22] = v230;
  v220[23] = v213;
  uint64_t v231 = (char *)v220 + v305;
  unint64_t v232 = v319;
  uint64_t v233 = v324;
  v220[24] = v319;
  v220[25] = v233;
  v304(v231, v219, v310);
  uint64_t v234 = v277;
  uint64_t v236 = v279;
  uint64_t v235 = v280;
  uint64_t v237 = v298;
  sub_24EE568A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(OpaqueTypeMetadata2 + 8))(v237, v236);
  sub_24EE56D90();
  uint64_t v338 = v329;
  uint64_t v339 = v331;
  uint64_t v340 = v330;
  uint64_t v341 = v337;
  uint64_t v342 = v335;
  uint64_t v343 = v320;
  unint64_t v344 = v315;
  unint64_t v345 = v223;
  uint64_t v346 = v316;
  unint64_t v347 = v312;
  uint64_t v348 = v321;
  uint64_t v349 = v322;
  uint64_t v350 = v326;
  uint64_t v351 = v317;
  uint64_t v352 = v227;
  unint64_t v353 = v333;
  unint64_t v354 = v328;
  uint64_t v355 = v336;
  uint64_t v356 = v332;
  uint64_t v357 = v334;
  uint64_t v358 = v318;
  uint64_t v359 = v323;
  unint64_t v360 = v232;
  uint64_t v361 = v233;
  uint64_t v362 = v314;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699656B0);
  uint64_t v453 = v236;
  uint64_t v454 = (char *)v235;
  uint64_t v238 = swift_getOpaqueTypeConformance2();
  sub_24ED3838C();
  uint64_t v239 = v282;
  uint64_t v240 = v284;
  sub_24EE569B0();
  (*(void (**)(char *, uint64_t))(WitnessTable + 8))(v234, v240);
  uint64_t v241 = sub_24EC8C218(&qword_2699656A8, &qword_2699656A0);
  uint64_t v388 = v238;
  uint64_t v389 = v241;
  uint64_t v242 = v287;
  swift_getWitnessTable();
  uint64_t v243 = v285;
  sub_24EC90894(v239);
  uint64_t v244 = *(void (**)(char *, uint64_t))(v289 + 8);
  v244(v239, v242);
  sub_24EC90894(v243);
  return ((uint64_t (*)(char *, uint64_t))v244)(v243, v242);
}