uint64_t sub_24ED2C224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  void v53[51];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t AssociatedTypeWitness;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t AssociatedConformanceWitness;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t WitnessTable;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  v71 = a8;
  v82 = a7;
  v81 = a6;
  v68 = a4;
  v64 = a2;
  v72 = a1;
  v73 = a9;
  v67 = a13;
  v65 = a12;
  v80 = a21;
  v79 = a20;
  v70 = a24;
  v78 = a25;
  v69 = a23;
  v84 = a22;
  v63 = a14;
  v77 = a15;
  v61 = a11;
  v83 = a10;
  v62 = a16;
  v59 = a17;
  v66 = a26;
  v60 = *(void *)(a26 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  v57 = sub_24EE571B0();
  v75 = a5;
  type metadata accessor for ActionCardView();
  v53[49] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[47] = sub_24EE56430();
  sub_24EE55DD0();
  v28 = sub_24EE55DD0();
  v56 = sub_24ED386D4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  v179 = a19;
  v180 = v56;
  v29 = MEMORY[0x263F18E48];
  WitnessTable = swift_getWitnessTable();
  v178 = MEMORY[0x263F198F8];
  v53[48] = v29;
  v53[46] = v28;
  v53[45] = swift_getWitnessTable();
  v74 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  v53[38] = sub_24EE55DD0();
  v175 = WitnessTable;
  v176 = MEMORY[0x263F18860];
  v53[37] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[36] = sub_24EE56240();
  v53[40] = sub_24EE56B10();
  v53[39] = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  v53[43] = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  v53[44] = sub_24EE56240();
  v53[28] = sub_24EE56240();
  v171 = a18;
  v172 = a18;
  v76 = a18;
  v173 = a22;
  v174 = a25;
  v53[42] = type metadata accessor for FullWidthStageView();
  v53[41] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v55 = a3;
  v53[35] = type metadata accessor for InfoActionCardView();
  v53[34] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[33] = sub_24EE56240();
  sub_24EE56240();
  v170 = a21;
  v53[32] = type metadata accessor for LargeBrickView();
  v53[31] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[30] = type metadata accessor for DynamicBrickView();
  v53[29] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[21] = sub_24EE56240();
  v53[27] = type metadata accessor for MonogramVerticalStackView();
  v53[26] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[24] = sub_24EE56240();
  v53[25] = sub_24EE56240();
  sub_24EE56240();
  v53[23] = type metadata accessor for StandardCardView();
  v53[22] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[20] = type metadata accessor for StandardHorizontalStackView();
  v53[19] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[2] = sub_24EE56240();
  v53[18] = type metadata accessor for StandardVerticalStackView();
  v53[17] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[16] = type metadata accessor for TallCardView();
  v53[15] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[13] = sub_24EE56240();
  v53[0] = sub_24EE56240();
  v54 = a19;
  v53[11] = type metadata accessor for VerticalStackCard();
  v53[10] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[1] = sub_24EE56240();
  type metadata accessor for WideBrickView();
  v53[5] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v53[3] = sub_24EE56240();
  v53[4] = sub_24EE56240();
  v53[6] = sub_24EE56240();
  v53[7] = sub_24EE56B10();
  v53[8] = sub_24EE55DD0();
  v53[9] = sub_24EE56240();
  v53[12] = sub_24EE55DD0();
  v53[14] = sub_24EE55DD0();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v163 = swift_getOpaqueTypeConformance2();
  v164 = swift_getOpaqueTypeConformance2();
  v162 = swift_getWitnessTable();
  v53[50] = MEMORY[0x263F1B488];
  v160 = swift_getWitnessTable();
  v161 = MEMORY[0x263F18C10];
  v158 = swift_getWitnessTable();
  v159 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  v156 = swift_getWitnessTable();
  v157 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  v154 = OpaqueTypeConformance2;
  v155 = swift_getWitnessTable();
  v31 = swift_getWitnessTable();
  v152 = swift_getOpaqueTypeConformance2();
  v153 = swift_getOpaqueTypeConformance2();
  v150 = v31;
  v151 = swift_getWitnessTable();
  v32 = swift_getWitnessTable();
  v148 = swift_getOpaqueTypeConformance2();
  v149 = swift_getOpaqueTypeConformance2();
  v33 = swift_getWitnessTable();
  v146 = swift_getOpaqueTypeConformance2();
  v147 = v149;
  v144 = v33;
  v145 = swift_getWitnessTable();
  v142 = v32;
  v143 = swift_getWitnessTable();
  v34 = swift_getWitnessTable();
  v140 = swift_getOpaqueTypeConformance2();
  v141 = swift_getOpaqueTypeConformance2();
  v35 = swift_getWitnessTable();
  v138 = swift_getOpaqueTypeConformance2();
  v139 = swift_getOpaqueTypeConformance2();
  v136 = v35;
  v137 = swift_getWitnessTable();
  v36 = swift_getWitnessTable();
  v134 = swift_getOpaqueTypeConformance2();
  v135 = a22;
  v132 = swift_getWitnessTable();
  v133 = swift_getOpaqueTypeConformance2();
  v130 = v36;
  v131 = swift_getWitnessTable();
  v128 = v34;
  v129 = swift_getWitnessTable();
  v127 = swift_getWitnessTable();
  v125 = swift_getWitnessTable();
  v126 = v56;
  v37 = swift_getWitnessTable();
  v123 = MEMORY[0x263F1BA00];
  v124 = v37;
  v38 = swift_getWitnessTable();
  v39 = MEMORY[0x263F1A240];
  v121 = v38;
  v122 = MEMORY[0x263F1A240];
  v119 = swift_getWitnessTable();
  v120 = v39;
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  v117 = swift_getOpaqueTypeConformance2();
  v118 = v56;
  v40 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  v41 = sub_24EE55DD0();
  v115 = swift_getOpaqueTypeConformance2();
  v116 = v40;
  v113 = swift_getWitnessTable();
  v114 = MEMORY[0x263F198F8];
  v42 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v167 = sub_24EE56240();
  v168 = swift_getWitnessTable();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  v165 = v41;
  v166 = v42;
  v43 = swift_getOpaqueTypeConformance2();
  v111 = MEMORY[0x263F1BA00];
  v112 = v43;
  v110 = swift_getWitnessTable();
  swift_getWitnessTable();
  v44 = sub_24EE56BC0();
  v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  v47 = (char *)v53 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  v50 = (char *)v53 - v49;
  sub_24EE560B0();
  v85 = v64;
  v86 = v55;
  v87 = v68;
  v88 = v75;
  v89 = v81;
  v90 = v82;
  v91 = v71;
  v92 = v83;
  v93 = v61;
  v94 = v65;
  v95 = v67;
  v96 = v63;
  v97 = v77;
  v98 = v62;
  v99 = a17;
  v100 = v76;
  v101 = v54;
  v102 = v79;
  v103 = v80;
  v104 = v84;
  v105 = v69;
  v106 = v70;
  v107 = v78;
  v108 = v66;
  v109 = v72;
  sub_24EE56BB0();
  swift_getWitnessTable();
  sub_24EC90894(v47);
  v51 = *(void (**)(char *, uint64_t))(v45 + 8);
  v51(v47, v44);
  sub_24EC90894(v50);
  return ((uint64_t (*)(char *, uint64_t))v51)(v50, v44);
}

uint64_t sub_24ED2D3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v185 = a8;
  uint64_t v198 = a7;
  uint64_t v196 = a6;
  uint64_t v184 = a4;
  uint64_t v183 = a2;
  uint64_t v177 = a1;
  uint64_t v188 = a9;
  uint64_t v194 = a25;
  uint64_t v187 = a24;
  uint64_t v186 = a23;
  uint64_t v202 = a22;
  uint64_t v197 = a21;
  uint64_t v195 = a20;
  uint64_t v182 = a16;
  uint64_t v193 = a15;
  uint64_t v181 = a14;
  uint64_t v180 = a13;
  uint64_t v179 = a12;
  uint64_t v178 = a11;
  uint64_t v201 = a10;
  uint64_t v264 = a2;
  uint64_t v265 = a3;
  uint64_t v266 = a4;
  uint64_t v267 = a5;
  uint64_t v268 = a6;
  uint64_t v269 = a7;
  uint64_t v270 = a8;
  uint64_t v271 = a10;
  uint64_t v272 = a11;
  uint64_t v273 = a12;
  uint64_t v274 = a13;
  uint64_t v275 = a14;
  uint64_t v276 = a15;
  uint64_t v277 = a16;
  uint64_t v278 = a17;
  uint64_t v192 = a17;
  uint64_t v279 = a18;
  uint64_t v280 = a19;
  uint64_t v281 = a20;
  uint64_t v282 = a21;
  uint64_t v283 = a22;
  uint64_t v284 = a23;
  uint64_t v285 = a24;
  uint64_t v286 = a25;
  uint64_t v287 = a26;
  uint64_t v176 = a26;
  uint64_t v175 = type metadata accessor for CarouselView();
  uint64_t v173 = *(void *)(v175 - 8);
  uint64_t v174 = *(void *)(v173 + 64);
  MEMORY[0x270FA5388](v175);
  v172 = (char *)v122 - v28;
  uint64_t v199 = *(void *)(a26 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  v171 = (char *)sub_24EE571B0();
  uint64_t v189 = a5;
  uint64_t v264 = a5;
  uint64_t v265 = a3;
  uint64_t v266 = a3;
  uint64_t v267 = a19;
  uint64_t v268 = a18;
  uint64_t v269 = a18;
  uint64_t v29 = type metadata accessor for ActionCardView();
  uint64_t v166 = v29;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v264 = v29;
  uint64_t v265 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v190 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v30 = sub_24EE55DD0();
  uint64_t v170 = sub_24ED386D4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v262 = a19;
  uint64_t v263 = v170;
  uint64_t v31 = MEMORY[0x263F18E48];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v260 = v32;
  uint64_t v261 = MEMORY[0x263F198F8];
  uint64_t v163 = v30;
  uint64_t v164 = v31;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v264 = v30;
  uint64_t v265 = v162;
  uint64_t v200 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v33 = sub_24EE55DD0();
  uint64_t v155 = v33;
  uint64_t v258 = v32;
  uint64_t v259 = MEMORY[0x263F18860];
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v264 = v33;
  uint64_t v265 = v154;
  swift_getOpaqueTypeMetadata2();
  uint64_t v153 = sub_24EE56240();
  uint64_t v157 = sub_24EE56B10();
  uint64_t v156 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v160 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v161 = sub_24EE56240();
  uint64_t v145 = sub_24EE56240();
  uint64_t v34 = v189;
  uint64_t v264 = v189;
  uint64_t v265 = a3;
  uint64_t v266 = a3;
  uint64_t v267 = v201;
  uint64_t v268 = v193;
  uint64_t v269 = a19;
  uint64_t v270 = a18;
  uint64_t v271 = a18;
  uint64_t v272 = v202;
  uint64_t v273 = v194;
  uint64_t v35 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v35;
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v264 = v35;
  uint64_t v265 = v158;
  swift_getOpaqueTypeMetadata2();
  uint64_t v168 = a3;
  uint64_t v169 = a18;
  uint64_t v36 = type metadata accessor for InfoActionCardView();
  uint64_t v152 = v36;
  uint64_t v151 = swift_getWitnessTable();
  uint64_t v264 = v36;
  uint64_t v265 = v151;
  swift_getOpaqueTypeMetadata2();
  uint64_t v150 = sub_24EE56240();
  uint64_t v131 = sub_24EE56240();
  uint64_t v37 = v34;
  uint64_t v264 = v34;
  uint64_t v265 = v196;
  uint64_t v266 = v198;
  uint64_t v267 = a19;
  uint64_t v268 = v195;
  uint64_t v269 = v197;
  uint64_t v38 = type metadata accessor for LargeBrickView();
  uint64_t v149 = v38;
  uint64_t v148 = swift_getWitnessTable();
  uint64_t v264 = v38;
  uint64_t v265 = v148;
  swift_getOpaqueTypeMetadata2();
  uint64_t v39 = type metadata accessor for DynamicBrickView();
  uint64_t v147 = v39;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v264 = v39;
  uint64_t v265 = v146;
  swift_getOpaqueTypeMetadata2();
  uint64_t v138 = sub_24EE56240();
  uint64_t v40 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v144 = v40;
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v264 = v40;
  uint64_t v265 = v143;
  swift_getOpaqueTypeMetadata2();
  uint64_t v141 = sub_24EE56240();
  uint64_t v142 = sub_24EE56240();
  v122[0] = sub_24EE56240();
  uint64_t v41 = type metadata accessor for StandardCardView();
  uint64_t v140 = v41;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v264 = v41;
  uint64_t v265 = v139;
  swift_getOpaqueTypeMetadata2();
  uint64_t v264 = v37;
  uint64_t v265 = a3;
  uint64_t v266 = a19;
  uint64_t v267 = a18;
  uint64_t v42 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v137 = v42;
  uint64_t v136 = swift_getWitnessTable();
  uint64_t v264 = v42;
  uint64_t v265 = v136;
  swift_getOpaqueTypeMetadata2();
  v122[3] = sub_24EE56240();
  uint64_t v43 = type metadata accessor for StandardVerticalStackView();
  uint64_t v135 = v43;
  uint64_t v134 = swift_getWitnessTable();
  uint64_t v264 = v43;
  uint64_t v265 = v134;
  swift_getOpaqueTypeMetadata2();
  uint64_t v44 = type metadata accessor for TallCardView();
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v264 = v44;
  uint64_t v265 = v133;
  swift_getOpaqueTypeMetadata2();
  uint64_t v130 = sub_24EE56240();
  v122[1] = sub_24EE56240();
  uint64_t v167 = a19;
  uint64_t v45 = type metadata accessor for VerticalStackCard();
  uint64_t v128 = swift_getWitnessTable();
  uint64_t v264 = v45;
  uint64_t v265 = v128;
  swift_getOpaqueTypeMetadata2();
  v122[2] = sub_24EE56240();
  uint64_t v46 = type metadata accessor for WideBrickView();
  uint64_t v123 = swift_getWitnessTable();
  uint64_t v264 = v46;
  uint64_t v265 = v123;
  swift_getOpaqueTypeMetadata2();
  v122[4] = sub_24EE56240();
  v122[5] = sub_24EE56240();
  uint64_t v124 = sub_24EE56240();
  uint64_t v125 = sub_24EE56B10();
  uint64_t v126 = sub_24EE55DD0();
  uint64_t v127 = sub_24EE56240();
  uint64_t v129 = sub_24EE55DD0();
  uint64_t v132 = sub_24EE55DD0();
  uint64_t v264 = v166;
  uint64_t v265 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v163;
  uint64_t v265 = v162;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v155;
  uint64_t v265 = v154;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  uint64_t v256 = v48;
  uint64_t v257 = v49;
  uint64_t v255 = swift_getWitnessTable();
  uint64_t v166 = MEMORY[0x263F1B488];
  uint64_t v253 = swift_getWitnessTable();
  uint64_t v254 = MEMORY[0x263F18C10];
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v251 = v50;
  uint64_t v252 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v249 = v52;
  uint64_t v250 = v53;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v247 = OpaqueTypeConformance2;
  uint64_t v248 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v264 = OpaqueTypeMetadata2;
  uint64_t v265 = v158;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v152;
  uint64_t v265 = v151;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v245 = v56;
  uint64_t v246 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v243 = v55;
  uint64_t v244 = v58;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v264 = v149;
  uint64_t v265 = v148;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v147;
  uint64_t v265 = v146;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v241 = v60;
  uint64_t v242 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v264 = v144;
  uint64_t v265 = v143;
  uint64_t v239 = swift_getOpaqueTypeConformance2();
  uint64_t v240 = v61;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v237 = v62;
  uint64_t v238 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v235 = v59;
  uint64_t v236 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v264 = v140;
  uint64_t v265 = v139;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v137;
  uint64_t v265 = v136;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v233 = v66;
  uint64_t v234 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v264 = v135;
  uint64_t v265 = v134;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v264 = v44;
  uint64_t v265 = v133;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v231 = v69;
  uint64_t v232 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v229 = v68;
  uint64_t v230 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v264 = v45;
  uint64_t v265 = v128;
  uint64_t v227 = swift_getOpaqueTypeConformance2();
  uint64_t v228 = v202;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v264 = v46;
  uint64_t v265 = v123;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v225 = v73;
  uint64_t v226 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v223 = v72;
  uint64_t v224 = v75;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v221 = v65;
  uint64_t v222 = v76;
  uint64_t v220 = swift_getWitnessTable();
  uint64_t v218 = swift_getWitnessTable();
  uint64_t v77 = v170;
  uint64_t v219 = v170;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v216 = MEMORY[0x263F1BA00];
  uint64_t v217 = v78;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v80 = MEMORY[0x263F1A240];
  uint64_t v214 = v79;
  uint64_t v215 = MEMORY[0x263F1A240];
  uint64_t v212 = swift_getWitnessTable();
  uint64_t v213 = v80;
  uint64_t v81 = v132;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v264 = v81;
  uint64_t v265 = v82;
  swift_getOpaqueTypeMetadata2();
  uint64_t v83 = sub_24EE55DD0();
  uint64_t v264 = v81;
  uint64_t v265 = v82;
  uint64_t v210 = swift_getOpaqueTypeConformance2();
  uint64_t v211 = v77;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v264 = v83;
  uint64_t v265 = v84;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v85 = sub_24EE55DD0();
  uint64_t v264 = v83;
  uint64_t v265 = v84;
  uint64_t v208 = swift_getOpaqueTypeConformance2();
  uint64_t v209 = v84;
  uint64_t v206 = swift_getWitnessTable();
  uint64_t v207 = MEMORY[0x263F198F8];
  uint64_t v170 = v85;
  uint64_t v166 = swift_getWitnessTable();
  uint64_t v264 = v85;
  uint64_t v265 = v166;
  swift_getOpaqueTypeMetadata2();
  uint64_t v86 = sub_24EE56240();
  uint64_t WitnessTable = v86;
  v87 = v171;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = v192;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v264 = (uint64_t)v87;
  uint64_t v265 = v90;
  uint64_t v266 = v86;
  uint64_t v267 = v88;
  uint64_t v268 = AssociatedConformanceWitness;
  uint64_t v92 = sub_24EE56CB0();
  uint64_t v190 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  v94 = (char *)v122 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v96 = MEMORY[0x270FA5388](v95);
  v171 = (char *)v122 - v97;
  uint64_t v164 = *(void *)(v177 + 8);
  v99 = v172;
  uint64_t v98 = v173;
  uint64_t v100 = v175;
  (*(void (**)(char *, __n128))(v173 + 16))(v172, v96);
  unint64_t v101 = (*(unsigned __int8 *)(v98 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  v102 = (char *)swift_allocObject();
  uint64_t v103 = v168;
  *((void *)v102 + 2) = v183;
  *((void *)v102 + 3) = v103;
  uint64_t v104 = v189;
  *((void *)v102 + 4) = v184;
  *((void *)v102 + 5) = v104;
  uint64_t v105 = v198;
  *((void *)v102 + 6) = v196;
  *((void *)v102 + 7) = v105;
  uint64_t v106 = v201;
  *((void *)v102 + 8) = v185;
  *((void *)v102 + 9) = v106;
  uint64_t v107 = v179;
  *((void *)v102 + 10) = v178;
  *((void *)v102 + 11) = v107;
  uint64_t v108 = v181;
  *((void *)v102 + 12) = v180;
  *((void *)v102 + 13) = v108;
  uint64_t v109 = v182;
  *((void *)v102 + 14) = v193;
  *((void *)v102 + 15) = v109;
  uint64_t v110 = v169;
  *((void *)v102 + 16) = v89;
  *((void *)v102 + 17) = v110;
  uint64_t v111 = v195;
  *((void *)v102 + 18) = v167;
  *((void *)v102 + 19) = v111;
  uint64_t v112 = v202;
  *((void *)v102 + 20) = v197;
  *((void *)v102 + 21) = v112;
  uint64_t v113 = v187;
  *((void *)v102 + 22) = v186;
  *((void *)v102 + 23) = v113;
  uint64_t v114 = v176;
  *((void *)v102 + 24) = v194;
  *((void *)v102 + 25) = v114;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v102[v101], v99, v100);
  uint64_t v115 = v164;
  swift_bridgeObjectRetain();
  uint64_t v264 = v170;
  uint64_t v265 = v166;
  uint64_t v116 = swift_getOpaqueTypeConformance2();
  uint64_t v204 = MEMORY[0x263F1BA00];
  uint64_t v205 = v116;
  uint64_t v117 = WitnessTable;
  uint64_t v118 = swift_getWitnessTable();
  sub_24ED6CF10(v115, (uint64_t)sub_24ED3855C, (uint64_t)v102, AssociatedTypeWitness, v117, v192, v118, *(void *)(v114 + 24), v199);
  uint64_t v203 = v118;
  swift_getWitnessTable();
  v119 = v171;
  sub_24EC90894(v94);
  v120 = *(void (**)(char *, uint64_t))(v190 + 8);
  v120(v94, v92);
  sub_24EC90894(v119);
  return ((uint64_t (*)(char *, uint64_t))v120)(v119, v92);
}

uint64_t sub_24ED2E76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v437 = a8;
  uint64_t v426 = a7;
  unint64_t v435 = a5;
  uint64_t v423 = a4;
  uint64_t v415 = a3;
  uint64_t v413 = a2;
  uint64_t v412 = a1;
  uint64_t v400 = a9;
  uint64_t v434 = a28;
  uint64_t v438 = a27;
  uint64_t v421 = a26;
  uint64_t v419 = a25;
  uint64_t v439 = a24;
  uint64_t v436 = a22;
  uint64_t v425 = a21;
  uint64_t v433 = a20;
  v417 = (char *)a19;
  uint64_t v429 = a18;
  uint64_t v432 = a17;
  uint64_t v428 = a16;
  uint64_t v418 = a15;
  uint64_t v420 = a14;
  uint64_t v422 = a13;
  uint64_t v430 = a11;
  uint64_t v29 = sub_24EE56120();
  uint64_t v333 = *(void *)(v29 - 8);
  uint64_t v334 = v29;
  MEMORY[0x270FA5388](v29);
  v332 = (char *)&v318 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = sub_24EE57430();
  uint64_t v31 = sub_24EE559E0();
  uint64_t v330 = *(void *)(v31 - 8);
  uint64_t v331 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v398 = (uint64_t)&v318 - v32;
  uint64_t v431 = a12;
  uint64_t v33 = sub_24EE559E0();
  uint64_t v328 = *(void *)(v33 - 8);
  uint64_t v329 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v397 = (uint64_t)&v318 - v34;
  uint64_t v424 = a10;
  uint64_t v427 = a23;
  uint64_t v396 = sub_24EE559E0();
  uint64_t v395 = *(void *)(v396 - 8);
  MEMORY[0x270FA5388](v396);
  uint64_t v394 = (uint64_t)&v318 - v35;
  uint64_t v36 = v437;
  uint64_t v37 = v436;
  uint64_t v393 = sub_24EE559E0();
  uint64_t v392 = *(void *)(v393 - 8);
  MEMORY[0x270FA5388](v393);
  uint64_t v391 = (uint64_t)&v318 - v38;
  uint64_t v39 = v426;
  uint64_t v40 = v425;
  uint64_t v390 = sub_24EE559E0();
  uint64_t v389 = *(void *)(v390 - 8);
  MEMORY[0x270FA5388](v390);
  uint64_t v387 = (uint64_t)&v318 - v41;
  uint64_t v388 = *(void *)(v432 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v386 = (uint64_t)&v318 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v404 = *((void *)v417 - 1);
  MEMORY[0x270FA5388](v44);
  uint64_t v324 = v45;
  v399 = (char *)&v318 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v501 = v423;
  unint64_t v46 = v435;
  *((void *)&v501 + 1) = v435;
  uint64_t v414 = a6;
  *(void *)&long long v502 = a6;
  *((void *)&v502 + 1) = v39;
  uint64_t v503 = v36;
  uint64_t v504 = a10;
  uint64_t v505 = v430;
  uint64_t v506 = a12;
  uint64_t v507 = v422;
  uint64_t v508 = v420;
  uint64_t v509 = v418;
  uint64_t v510 = v428;
  uint64_t v511 = v47;
  uint64_t v512 = v429;
  uint64_t v513 = v48;
  uint64_t v49 = v433;
  uint64_t v514 = v433;
  uint64_t v515 = v40;
  uint64_t v516 = v37;
  uint64_t v517 = a23;
  uint64_t v518 = v439;
  uint64_t v519 = v419;
  uint64_t v520 = v421;
  uint64_t v521 = v438;
  uint64_t v522 = v434;
  uint64_t v411 = type metadata accessor for CarouselView();
  uint64_t v416 = *(void *)(v411 - 8);
  uint64_t v323 = *(void *)(v416 + 64);
  MEMORY[0x270FA5388](v411);
  v403 = (char *)&v318 - v50;
  uint64_t v409 = sub_24EE55940();
  uint64_t v410 = *(void *)(v409 - 8);
  MEMORY[0x270FA5388](v409);
  v408 = (char *)&v318 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v325 = *(void *)(v52 - 8);
  uint64_t v326 = v52;
  MEMORY[0x270FA5388](v52);
  uint64_t v385 = (uint64_t)&v318 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v501 = v39;
  *((void *)&v501 + 1) = v46;
  *(void *)&long long v502 = v46;
  *((void *)&v502 + 1) = v40;
  uint64_t v503 = v49;
  uint64_t v504 = v49;
  uint64_t v54 = type metadata accessor for ActionCardView();
  uint64_t v382 = v54;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v501 = v54;
  *((void *)&v501 + 1) = WitnessTable;
  swift_getOpaqueTypeMetadata2();
  v407 = (void (*)(char *, uint64_t, uint64_t))sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v55 = sub_24EE55DD0();
  v401 = (void (*)(void, void, void))sub_24ED386D4((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v499 = v40;
  v500 = v401;
  uint64_t v56 = MEMORY[0x263F18E48];
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v497 = v57;
  uint64_t v498 = MEMORY[0x263F198F8];
  uint64_t v406 = v56;
  uint64_t v380 = v55;
  v379 = (char *)swift_getWitnessTable();
  *(void *)&long long v501 = v55;
  *((void *)&v501 + 1) = v379;
  uint64_t v405 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v58 = sub_24EE55DD0();
  uint64_t v372 = v58;
  uint64_t v495 = v57;
  uint64_t v496 = MEMORY[0x263F18860];
  uint64_t v371 = swift_getWitnessTable();
  *(void *)&long long v501 = v58;
  *((void *)&v501 + 1) = v371;
  swift_getOpaqueTypeMetadata2();
  v370 = (char *)sub_24EE56240();
  uint64_t v374 = sub_24EE56B10();
  uint64_t v373 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v377 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v378 = sub_24EE56240();
  uint64_t v362 = sub_24EE56240();
  *(void *)&long long v501 = v39;
  unint64_t v59 = v435;
  *((void *)&v501 + 1) = v435;
  *(void *)&long long v502 = v435;
  *((void *)&v502 + 1) = v431;
  uint64_t v503 = v432;
  uint64_t v504 = v40;
  uint64_t v60 = v433;
  uint64_t v505 = v433;
  uint64_t v506 = v433;
  uint64_t v507 = v439;
  uint64_t v508 = v438;
  uint64_t v61 = type metadata accessor for FullWidthStageView();
  uint64_t v376 = v61;
  uint64_t v375 = swift_getWitnessTable();
  *(void *)&long long v501 = v61;
  *((void *)&v501 + 1) = v375;
  swift_getOpaqueTypeMetadata2();
  uint64_t v62 = type metadata accessor for InfoActionCardView();
  v369 = (char *)v62;
  uint64_t v368 = swift_getWitnessTable();
  *(void *)&long long v501 = v62;
  *((void *)&v501 + 1) = v368;
  swift_getOpaqueTypeMetadata2();
  uint64_t v367 = sub_24EE56240();
  uint64_t v348 = sub_24EE56240();
  *(void *)&long long v501 = v39;
  *((void *)&v501 + 1) = v437;
  *(void *)&long long v502 = v424;
  *((void *)&v502 + 1) = v40;
  uint64_t v503 = v436;
  uint64_t v504 = v427;
  uint64_t v63 = type metadata accessor for LargeBrickView();
  uint64_t v366 = v63;
  uint64_t v365 = swift_getWitnessTable();
  *(void *)&long long v501 = v63;
  *((void *)&v501 + 1) = v365;
  swift_getOpaqueTypeMetadata2();
  uint64_t v64 = type metadata accessor for DynamicBrickView();
  uint64_t v364 = v64;
  v363 = (char *)swift_getWitnessTable();
  *(void *)&long long v501 = v64;
  *((void *)&v501 + 1) = v363;
  swift_getOpaqueTypeMetadata2();
  uint64_t v355 = sub_24EE56240();
  uint64_t v65 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v361 = v65;
  v360 = (char *)swift_getWitnessTable();
  *(void *)&long long v501 = v65;
  *((void *)&v501 + 1) = v360;
  swift_getOpaqueTypeMetadata2();
  uint64_t v358 = sub_24EE56240();
  uint64_t v359 = sub_24EE56240();
  uint64_t v335 = sub_24EE56240();
  uint64_t v66 = type metadata accessor for StandardCardView();
  uint64_t v357 = v66;
  uint64_t v356 = swift_getWitnessTable();
  *(void *)&long long v501 = v66;
  *((void *)&v501 + 1) = v356;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v501 = v39;
  *((void *)&v501 + 1) = v59;
  *(void *)&long long v502 = v40;
  *((void *)&v502 + 1) = v60;
  uint64_t v67 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v354 = v67;
  v353 = (void (*)(char *))swift_getWitnessTable();
  *(void *)&long long v501 = v67;
  *((void *)&v501 + 1) = v353;
  swift_getOpaqueTypeMetadata2();
  uint64_t v338 = sub_24EE56240();
  uint64_t v68 = type metadata accessor for StandardVerticalStackView();
  v352 = (void (*)(char *, uint64_t))v68;
  uint64_t v351 = swift_getWitnessTable();
  *(void *)&long long v501 = v68;
  *((void *)&v501 + 1) = v351;
  swift_getOpaqueTypeMetadata2();
  uint64_t v69 = type metadata accessor for TallCardView();
  uint64_t v350 = v69;
  uint64_t v349 = swift_getWitnessTable();
  *(void *)&long long v501 = v69;
  *((void *)&v501 + 1) = v349;
  swift_getOpaqueTypeMetadata2();
  uint64_t v347 = sub_24EE56240();
  uint64_t v336 = sub_24EE56240();
  uint64_t v70 = type metadata accessor for VerticalStackCard();
  v346 = (void (*)(char *, uint64_t, char *))swift_getWitnessTable();
  *(void *)&long long v501 = v70;
  *((void *)&v501 + 1) = v346;
  swift_getOpaqueTypeMetadata2();
  uint64_t v337 = sub_24EE56240();
  uint64_t v71 = type metadata accessor for WideBrickView();
  uint64_t v342 = v71;
  v341 = (void (*)(char *, char *, char *))swift_getWitnessTable();
  *(void *)&long long v501 = v71;
  *((void *)&v501 + 1) = v341;
  swift_getOpaqueTypeMetadata2();
  uint64_t v339 = sub_24EE56240();
  uint64_t v340 = sub_24EE56240();
  uint64_t v343 = sub_24EE56240();
  uint64_t v344 = sub_24EE56B10();
  uint64_t v345 = sub_24EE55DD0();
  uint64_t v402 = sub_24EE56240();
  uint64_t v319 = *(void *)(v402 - 8);
  MEMORY[0x270FA5388](v402);
  uint64_t v383 = (uint64_t)&v318 - v72;
  uint64_t v73 = sub_24EE55DD0();
  uint64_t v320 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  v384 = (char *)&v318 - v74;
  uint64_t v75 = sub_24EE55DD0();
  uint64_t v322 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  v321 = (char *)&v318 - v76;
  *(void *)&long long v501 = v382;
  *((void *)&v501 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v380;
  *((void *)&v501 + 1) = v379;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v372;
  *((void *)&v501 + 1) = v371;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v493 = v78;
  uint64_t v494 = v79;
  uint64_t v492 = swift_getWitnessTable();
  uint64_t v490 = swift_getWitnessTable();
  uint64_t v491 = MEMORY[0x263F18C10];
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v81 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v488 = v80;
  uint64_t v489 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v83 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v486 = v82;
  uint64_t v487 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v484 = OpaqueTypeConformance2;
  uint64_t v485 = v84;
  uint64_t v85 = swift_getWitnessTable();
  *(void *)&long long v501 = v376;
  *((void *)&v501 + 1) = v375;
  uint64_t v86 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v369;
  *((void *)&v501 + 1) = v368;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v482 = v86;
  uint64_t v483 = v87;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v480 = v85;
  uint64_t v481 = v88;
  uint64_t v89 = swift_getWitnessTable();
  *(void *)&long long v501 = v366;
  *((void *)&v501 + 1) = v365;
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v364;
  *((void *)&v501 + 1) = v363;
  uint64_t v91 = swift_getOpaqueTypeConformance2();
  uint64_t v478 = v90;
  uint64_t v479 = v91;
  uint64_t v92 = swift_getWitnessTable();
  *(void *)&long long v501 = v361;
  *((void *)&v501 + 1) = v360;
  uint64_t v476 = swift_getOpaqueTypeConformance2();
  uint64_t v477 = v91;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v474 = v92;
  uint64_t v475 = v93;
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v472 = v89;
  uint64_t v473 = v94;
  uint64_t v95 = swift_getWitnessTable();
  *(void *)&long long v501 = v357;
  *((void *)&v501 + 1) = v356;
  uint64_t v96 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v354;
  *((void *)&v501 + 1) = v353;
  uint64_t v97 = swift_getOpaqueTypeConformance2();
  uint64_t v470 = v96;
  uint64_t v471 = v97;
  uint64_t v98 = swift_getWitnessTable();
  *(void *)&long long v501 = v352;
  *((void *)&v501 + 1) = v351;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v501 = v350;
  *((void *)&v501 + 1) = v349;
  uint64_t v100 = swift_getOpaqueTypeConformance2();
  uint64_t v468 = v99;
  uint64_t v469 = v100;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v466 = v98;
  uint64_t v467 = v101;
  uint64_t v102 = swift_getWitnessTable();
  *(void *)&long long v501 = v70;
  *((void *)&v501 + 1) = v346;
  uint64_t v464 = swift_getOpaqueTypeConformance2();
  uint64_t v465 = v439;
  uint64_t v103 = swift_getWitnessTable();
  *(void *)&long long v501 = v342;
  *((void *)&v501 + 1) = v341;
  uint64_t v104 = swift_getOpaqueTypeConformance2();
  uint64_t v462 = v103;
  uint64_t v463 = v104;
  uint64_t v105 = swift_getWitnessTable();
  uint64_t v460 = v102;
  uint64_t v461 = v105;
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v458 = v95;
  uint64_t v459 = v106;
  uint64_t v457 = swift_getWitnessTable();
  uint64_t v455 = swift_getWitnessTable();
  uint64_t v107 = v401;
  v456 = v401;
  uint64_t v108 = swift_getWitnessTable();
  uint64_t v453 = MEMORY[0x263F1BA00];
  uint64_t v454 = v108;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v110 = MEMORY[0x263F1A240];
  uint64_t v356 = v109;
  uint64_t v451 = v109;
  uint64_t v452 = MEMORY[0x263F1A240];
  uint64_t v374 = v73;
  uint64_t v357 = swift_getWitnessTable();
  uint64_t v449 = v357;
  uint64_t v450 = v110;
  uint64_t v111 = swift_getWitnessTable();
  *(void *)&long long v501 = v75;
  *((void *)&v501 + 1) = v111;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v371 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  v369 = (char *)&v318 - v113;
  uint64_t v372 = v114;
  uint64_t v115 = sub_24EE55DD0();
  uint64_t v373 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v370 = (char *)&v318 - v116;
  uint64_t v375 = v75;
  *(void *)&long long v501 = v75;
  uint64_t v368 = v111;
  *((void *)&v501 + 1) = v111;
  uint64_t v359 = swift_getOpaqueTypeConformance2();
  uint64_t v447 = v359;
  v448 = v107;
  uint64_t v117 = swift_getWitnessTable();
  *(void *)&long long v501 = v115;
  *((void *)&v501 + 1) = v117;
  swift_getOpaqueTypeMetadata2();
  uint64_t v118 = sub_24EE56240();
  uint64_t v365 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v362 = (uint64_t)&v318 - v119;
  uint64_t v120 = sub_24EE55DD0();
  uint64_t v366 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  v363 = (char *)&v318 - v121;
  *(void *)&long long v501 = v115;
  *((void *)&v501 + 1) = v117;
  uint64_t v445 = swift_getOpaqueTypeConformance2();
  uint64_t v361 = v117;
  uint64_t v446 = v117;
  uint64_t v367 = v118;
  uint64_t v358 = swift_getWitnessTable();
  uint64_t v443 = v358;
  uint64_t v444 = MEMORY[0x263F198F8];
  uint64_t v122 = swift_getWitnessTable();
  uint64_t v123 = v120;
  *(void *)&long long v501 = v120;
  *((void *)&v501 + 1) = v122;
  uint64_t v124 = swift_getOpaqueTypeMetadata2();
  uint64_t v364 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v360 = (char *)&v318 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v126);
  uint64_t v128 = (char *)&v318 - v127;
  uint64_t v380 = v129;
  uint64_t v130 = sub_24EE56240();
  uint64_t WitnessTable = *(void *)(v130 - 8);
  uint64_t v382 = v130;
  __n128 v131 = MEMORY[0x270FA5388](v130);
  v379 = (char *)&v318 - v132;
  uint64_t v133 = (uint64_t)v417;
  uint64_t v134 = (*(uint64_t (**)(__n128))(v434 + 184))(v131);
  LOBYTE(v117) = sub_24ED418EC(3u, v134);
  swift_bridgeObjectRelease();
  if (v117)
  {
    *(void *)&long long v501 = v123;
    *((void *)&v501 + 1) = v122;
    uint64_t v135 = swift_getOpaqueTypeConformance2();
    uint64_t v136 = v379;
    sub_24EC908D0(v135, MEMORY[0x263F1BA08]);
  }
  else
  {
    uint64_t v348 = (uint64_t)v128;
    uint64_t v349 = v122;
    uint64_t v137 = v411;
    uint64_t v138 = v415;
    uint64_t v139 = v415 + *(int *)(v411 + 280);
    v353 = *(void (**)(char *))(v410 + 16);
    uint64_t v354 = v139;
    uint64_t v355 = v410 + 16;
    uint64_t v350 = v123;
    v353(v408);
    uint64_t v140 = v416;
    v407 = *(void (**)(char *, uint64_t, uint64_t))(v416 + 16);
    uint64_t v406 = v416 + 16;
    uint64_t v347 = v115;
    uint64_t v141 = v403;
    v407(v403, v138, v137);
    uint64_t v142 = v404;
    uint64_t v143 = *(void (**)(char *, uint64_t, char *))(v404 + 16);
    uint64_t v345 = v404 + 16;
    v346 = v143;
    uint64_t v144 = v399;
    v143(v399, v413, (char *)v133);
    uint64_t v145 = *(unsigned __int8 *)(v140 + 80);
    uint64_t v146 = (v145 + 208) & ~v145;
    uint64_t v378 = v146 + v323;
    uint64_t v405 = v146;
    uint64_t v147 = v145 | 7;
    uint64_t v376 = v145 | 7;
    uint64_t v148 = *(unsigned __int8 *)(v142 + 80);
    uint64_t v149 = (v146 + v323 + v148) & ~v148;
    uint64_t v342 = v149;
    uint64_t v343 = v147 | v148;
    uint64_t v344 = v149 + v324;
    uint64_t v150 = (char *)swift_allocObject();
    unint64_t v151 = v435;
    *((void *)v150 + 2) = v423;
    *((void *)v150 + 3) = v151;
    uint64_t v152 = v426;
    *((void *)v150 + 4) = v414;
    *((void *)v150 + 5) = v152;
    uint64_t v153 = v424;
    *((void *)v150 + 6) = v437;
    *((void *)v150 + 7) = v153;
    uint64_t v154 = v431;
    *((void *)v150 + 8) = v430;
    *((void *)v150 + 9) = v154;
    uint64_t v155 = v420;
    *((void *)v150 + 10) = v422;
    *((void *)v150 + 11) = v155;
    uint64_t v156 = v428;
    *((void *)v150 + 12) = v418;
    *((void *)v150 + 13) = v156;
    uint64_t v157 = v429;
    *((void *)v150 + 14) = v432;
    *((void *)v150 + 15) = v157;
    uint64_t v158 = v433;
    *((void *)v150 + 16) = v133;
    *((void *)v150 + 17) = v158;
    uint64_t v159 = v436;
    *((void *)v150 + 18) = v425;
    *((void *)v150 + 19) = v159;
    uint64_t v160 = v439;
    *((void *)v150 + 20) = v427;
    *((void *)v150 + 21) = v160;
    uint64_t v161 = v421;
    *((void *)v150 + 22) = v419;
    *((void *)v150 + 23) = v161;
    uint64_t v162 = v434;
    *((void *)v150 + 24) = v438;
    *((void *)v150 + 25) = v162;
    uint64_t v163 = *(void (**)(void, void, void))(v140 + 32);
    uint64_t v416 = v140 + 32;
    v401 = v163;
    uint64_t v164 = v141;
    v165 = (int *)v411;
    v163(&v150[v146], v164, v411);
    uint64_t v166 = *(void (**)(char *, char *, char *))(v142 + 32);
    uint64_t v404 = v142 + 32;
    v341 = v166;
    v166(&v150[v149], v144, (char *)v133);
    uint64_t v351 = sub_24ED386D4((unint64_t *)&qword_26B1DBA10, MEMORY[0x263F07508]);
    uint64_t v167 = v408;
    uint64_t v168 = v409;
    sub_24EE55A30();
    swift_release();
    v352 = *(void (**)(char *, uint64_t))(v410 + 8);
    v410 += 8;
    v352(v167, v168);
    uint64_t v169 = v415;
    uint64_t v170 = v415 + v165[55];
    uint64_t v171 = v418;
    *(void *)&long long v501 = v418;
    uint64_t v172 = v432;
    *((void *)&v501 + 1) = v432;
    uint64_t v173 = v419;
    *(void *)&long long v502 = v419;
    *((void *)&v502 + 1) = v438;
    uint64_t v174 = v170 + *(int *)(type metadata accessor for CanvasLayout() + 68);
    uint64_t v175 = v172;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v388 + 16))(v386, v174, v172);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v389 + 16))(v387, v169 + v165[59], v390);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v392 + 16))(v391, v169 + v165[60], v393);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v395 + 16))(v394, v169 + v165[61], v396);
    ((void (*)(char *, uint64_t, uint64_t))v353)(v167, v354, v168);
    uint64_t v176 = v403;
    v407(v403, v169, (uint64_t)v165);
    unint64_t v177 = (v378 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v377 = v177 + 8;
    uint64_t v378 = v177;
    uint64_t v178 = (void *)swift_allocObject();
    unint64_t v179 = v435;
    v178[2] = v423;
    v178[3] = v179;
    uint64_t v180 = v426;
    v178[4] = v414;
    v178[5] = v180;
    uint64_t v181 = v424;
    v178[6] = v437;
    v178[7] = v181;
    uint64_t v182 = v431;
    v178[8] = v430;
    v178[9] = v182;
    uint64_t v183 = v420;
    v178[10] = v422;
    v178[11] = v183;
    uint64_t v184 = v428;
    v178[12] = v171;
    v178[13] = v184;
    uint64_t v185 = v429;
    v178[14] = v175;
    v178[15] = v185;
    uint64_t v186 = v433;
    v178[16] = v417;
    v178[17] = v186;
    uint64_t v187 = v436;
    v178[18] = v425;
    v178[19] = v187;
    uint64_t v188 = v439;
    v178[20] = v427;
    v178[21] = v188;
    uint64_t v189 = v421;
    v178[22] = v173;
    v178[23] = v189;
    uint64_t v190 = (char *)v178 + v405;
    uint64_t v191 = v434;
    v178[24] = v438;
    v178[25] = v191;
    uint64_t v192 = v176;
    uint64_t v193 = v176;
    uint64_t v194 = v165;
    v401(v190, v192, v165);
    *(void *)((char *)v178 + v177) = v412;
    uint64_t v195 = v408;
    uint64_t v196 = v182;
    uint64_t v197 = v409;
    sub_24EE559C0();
    swift_release();
    v352(v195, v197);
    ((void (*)(char *, uint64_t, uint64_t))v353)(v195, v354, v197);
    v407(v193, v415, (uint64_t)v194);
    uint64_t v198 = (void *)swift_allocObject();
    unint64_t v199 = v435;
    v198[2] = v423;
    v198[3] = v199;
    uint64_t v200 = v426;
    v198[4] = v414;
    v198[5] = v200;
    uint64_t v201 = v424;
    v198[6] = v437;
    v198[7] = v201;
    v198[8] = v430;
    v198[9] = v196;
    uint64_t v202 = v420;
    v198[10] = v422;
    v198[11] = v202;
    uint64_t v203 = v428;
    v198[12] = v418;
    v198[13] = v203;
    uint64_t v204 = v429;
    v198[14] = v432;
    v198[15] = v204;
    uint64_t v205 = v433;
    v198[16] = v417;
    v198[17] = v205;
    uint64_t v206 = v436;
    v198[18] = v425;
    v198[19] = v206;
    uint64_t v207 = v439;
    v198[20] = v427;
    v198[21] = v207;
    uint64_t v208 = v421;
    v198[22] = v419;
    v198[23] = v208;
    uint64_t v209 = (char *)v198 + v405;
    uint64_t v210 = v434;
    v198[24] = v438;
    v198[25] = v210;
    v401(v209, v193, v194);
    *(void *)((char *)v198 + v378) = v412;
    uint64_t v211 = v408;
    uint64_t v212 = v409;
    sub_24EE559C0();
    swift_release();
    v352(v211, v212);
    uint64_t v213 = v436;
    uint64_t v214 = v425;
    uint64_t v215 = v432;
    uint64_t v216 = v426;
    unint64_t v217 = v437;
    uint64_t v218 = v424;
    uint64_t v219 = v431;
    unint64_t v220 = v435;
    uint64_t v221 = v434;
    sub_24EE2E070(&v501);
    v442[0] = v501;
    v442[1] = v502;
    uint64_t v317 = v213;
    uint64_t v316 = v214;
    uint64_t v314 = v219;
    unint64_t v315 = v220;
    unint64_t v312 = v217;
    uint64_t v313 = v218;
    uint64_t v310 = v215;
    uint64_t v311 = v216;
    uint64_t v222 = (uint64_t)v417;
    uint64_t v223 = v385;
    uint64_t v224 = v386;
    uint64_t v225 = v387;
    uint64_t v226 = v391;
    uint64_t v227 = v394;
    uint64_t v228 = v397;
    uint64_t v229 = v398;
    sub_24EC9D2CC(v385, v386, (uint64_t *)v442, v387, v391, v394, v397, v398, v383, (uint64_t)v417, v310, v311, v312, v313, v314, v315, v221, v438, v316,
      v317,
      v427,
      v439,
      v433);
    (*(void (**)(uint64_t, uint64_t))(v330 + 8))(v229, v331);
    (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v228, v329);
    (*(void (**)(uint64_t, uint64_t))(v395 + 8))(v227, v396);
    (*(void (**)(uint64_t, uint64_t))(v392 + 8))(v226, v393);
    (*(void (**)(uint64_t, uint64_t))(v389 + 8))(v225, v390);
    uint64_t v230 = v224;
    uint64_t v231 = v432;
    (*(void (**)(uint64_t, uint64_t))(v388 + 8))(v230, v432);
    (*(void (**)(uint64_t, uint64_t))(v325 + 8))(v223, v326);
    uint64_t v232 = v403;
    uint64_t v233 = v411;
    v407(v403, v415, v411);
    uint64_t v234 = (void *)swift_allocObject();
    uint64_t v235 = v423;
    unint64_t v236 = v435;
    v234[2] = v423;
    v234[3] = v236;
    uint64_t v237 = v414;
    uint64_t v238 = v426;
    v234[4] = v414;
    v234[5] = v238;
    uint64_t v239 = v424;
    v234[6] = v437;
    v234[7] = v239;
    uint64_t v240 = v431;
    v234[8] = v430;
    v234[9] = v240;
    uint64_t v241 = v422;
    uint64_t v242 = v420;
    v234[10] = v422;
    v234[11] = v242;
    uint64_t v243 = v428;
    v234[12] = v418;
    v234[13] = v243;
    uint64_t v244 = v429;
    v234[14] = v231;
    v234[15] = v244;
    uint64_t v245 = v433;
    v234[16] = v222;
    v234[17] = v245;
    uint64_t v246 = v436;
    v234[18] = v425;
    v234[19] = v246;
    uint64_t v247 = v439;
    v234[20] = v427;
    v234[21] = v247;
    uint64_t v248 = v421;
    v234[22] = v419;
    v234[23] = v248;
    uint64_t v249 = v405;
    uint64_t v250 = (char *)v234 + v405;
    uint64_t v251 = v434;
    v234[24] = v438;
    v234[25] = v251;
    uint64_t v252 = v232;
    uint64_t v253 = (void (*)(char *, char *, uint64_t))v401;
    v401(v250, v232, v233);
    *(void *)((char *)v234 + v378) = v412;
    uint64_t v254 = v402;
    uint64_t v255 = v383;
    sub_24EE56A10();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v255, v254);
    uint64_t v256 = v252;
    uint64_t v257 = v252;
    uint64_t v258 = v415;
    uint64_t v259 = v411;
    v407(v257, v415, v411);
    uint64_t v260 = (void *)swift_allocObject();
    unint64_t v261 = v435;
    v260[2] = v235;
    v260[3] = v261;
    uint64_t v262 = v426;
    v260[4] = v237;
    v260[5] = v262;
    uint64_t v263 = v424;
    v260[6] = v437;
    v260[7] = v263;
    uint64_t v264 = v431;
    v260[8] = v430;
    v260[9] = v264;
    v260[10] = v241;
    uint64_t v265 = v420;
    uint64_t v266 = v418;
    v260[11] = v420;
    v260[12] = v266;
    uint64_t v267 = v432;
    v260[13] = v428;
    v260[14] = v267;
    uint64_t v268 = v417;
    v260[15] = v429;
    v260[16] = v268;
    uint64_t v269 = v425;
    v260[17] = v433;
    v260[18] = v269;
    uint64_t v270 = v427;
    v260[19] = v436;
    v260[20] = v270;
    uint64_t v271 = v419;
    v260[21] = v439;
    v260[22] = v271;
    v260[23] = v421;
    uint64_t v272 = (char *)v260 + v249;
    uint64_t v273 = v434;
    v260[24] = v438;
    v260[25] = v273;
    uint64_t v274 = v256;
    v253(v272, v256, v259);
    *(void *)((char *)v260 + v378) = v412;
    uint64_t v275 = v321;
    uint64_t v276 = v374;
    uint64_t v277 = v384;
    sub_24EE56770();
    swift_release();
    (*(void (**)(char *, uint64_t))(v320 + 8))(v277, v276);
    uint64_t v278 = v411;
    v407(v274, v258, v411);
    uint64_t v279 = v399;
    v346(v399, v413, v268);
    uint64_t v280 = (char *)swift_allocObject();
    unint64_t v281 = v435;
    *((void *)v280 + 2) = v423;
    *((void *)v280 + 3) = v281;
    uint64_t v282 = v426;
    *((void *)v280 + 4) = v414;
    *((void *)v280 + 5) = v282;
    uint64_t v283 = v424;
    *((void *)v280 + 6) = v437;
    *((void *)v280 + 7) = v283;
    uint64_t v284 = v431;
    *((void *)v280 + 8) = v430;
    *((void *)v280 + 9) = v284;
    *((void *)v280 + 10) = v422;
    *((void *)v280 + 11) = v265;
    uint64_t v285 = v428;
    *((void *)v280 + 12) = v418;
    *((void *)v280 + 13) = v285;
    uint64_t v286 = v429;
    *((void *)v280 + 14) = v432;
    *((void *)v280 + 15) = v286;
    uint64_t v287 = v433;
    *((void *)v280 + 16) = v268;
    *((void *)v280 + 17) = v287;
    uint64_t v288 = v436;
    *((void *)v280 + 18) = v425;
    *((void *)v280 + 19) = v288;
    uint64_t v289 = v439;
    *((void *)v280 + 20) = v427;
    *((void *)v280 + 21) = v289;
    uint64_t v290 = v421;
    *((void *)v280 + 22) = v419;
    *((void *)v280 + 23) = v290;
    v291 = &v280[v405];
    *((void *)v280 + 24) = v438;
    *((void *)v280 + 25) = v273;
    uint64_t v292 = v278;
    v401(v291, v274, v278);
    v341(&v280[v342], v279, v268);
    v293 = v369;
    uint64_t v294 = v375;
    sub_24EE567B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v322 + 8))(v275, v294);
    v295 = v332;
    sub_24EE56100();
    v296 = v370;
    uint64_t v297 = v372;
    sub_24EE568E0();
    (*(void (**)(char *, uint64_t))(v333 + 8))(v295, v334);
    (*(void (**)(char *, uint64_t))(v371 + 8))(v293, v297);
    uint64_t v298 = v362;
    uint64_t v299 = v347;
    sub_24ED7F0A4(v413, v415 + *(int *)(v292 + 216), v412, v347, v362, v420, v428, v429, v268, v361, v290, v434);
    (*(void (**)(char *, uint64_t))(v373 + 8))(v296, v299);
    uint64_t v122 = v349;
    v300 = v363;
    uint64_t v301 = v367;
    sub_24EE56710();
    (*(void (**)(uint64_t, uint64_t))(v365 + 8))(v298, v301);
    sub_24EE56490();
    sub_24EE56DA0();
    uint64_t v302 = (uint64_t)v360;
    uint64_t v303 = v350;
    sub_24EE56900();
    (*(void (**)(char *, uint64_t))(v366 + 8))(v300, v303);
    uint64_t v123 = v303;
    *(void *)&long long v501 = v303;
    *((void *)&v501 + 1) = v122;
    swift_getOpaqueTypeConformance2();
    uint64_t v304 = v348;
    uint64_t v305 = v380;
    sub_24EC90894(v302);
    v306 = *(void (**)(uint64_t, uint64_t))(v364 + 8);
    v306(v302, v305);
    sub_24EC90894(v304);
    uint64_t v136 = v379;
    sub_24EC909C8(v302, MEMORY[0x263F1BA08], v305);
    v306(v302, v305);
    v306(v304, v305);
  }
  *(void *)&long long v501 = v123;
  *((void *)&v501 + 1) = v122;
  uint64_t v307 = swift_getOpaqueTypeConformance2();
  uint64_t v440 = MEMORY[0x263F1BA00];
  uint64_t v441 = v307;
  uint64_t v308 = v382;
  swift_getWitnessTable();
  sub_24EC90894(v136);
  return (*(uint64_t (**)(char *, uint64_t))(WitnessTable + 8))(v136, v308);
}

uint64_t sub_24ED31094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(void)@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, long long a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v67 = a8;
  uint64_t v65 = a7;
  uint64_t v63 = a6;
  uint64_t v60 = a5;
  uint64_t v57 = a4;
  uint64_t v72 = a3;
  uint64_t v69 = a2;
  uint64_t v71 = a1;
  uint64_t v73 = a9;
  uint64_t v66 = a21;
  long long v64 = a20;
  long long v62 = a19;
  uint64_t v53 = a11;
  uint64_t v51 = a10;
  uint64_t v54 = a13;
  uint64_t v61 = a26;
  uint64_t v56 = a25;
  uint64_t v58 = a24;
  uint64_t v55 = a23;
  uint64_t v52 = a16;
  uint64_t v49 = a14;
  uint64_t v74 = a15;
  uint64_t v75 = a17;
  uint64_t v76 = a23;
  uint64_t v77 = a25;
  uint64_t v47 = a18;
  uint64_t v50 = type metadata accessor for CanvasLayout();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v70 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v28 = (char *)&v46 - v27;
  uint64_t v29 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v46 - v31;
  uint64_t v68 = *(void *)(a12 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v46 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  unint64_t v59 = (char *)&v46 - v37;
  uint64_t v74 = v57;
  uint64_t v75 = v60;
  uint64_t v76 = v63;
  uint64_t v77 = v65;
  uint64_t v78 = v67;
  uint64_t v79 = v51;
  uint64_t v80 = v53;
  uint64_t v81 = a12;
  uint64_t v82 = v54;
  uint64_t v83 = v49;
  uint64_t v84 = a15;
  uint64_t v85 = v52;
  uint64_t v86 = a17;
  uint64_t v87 = a18;
  long long v88 = v62;
  long long v89 = v64;
  uint64_t v90 = v66;
  uint64_t v91 = a22;
  uint64_t v48 = a22;
  uint64_t v92 = v55;
  uint64_t v93 = v58;
  uint64_t v94 = v56;
  uint64_t v95 = v61;
  uint64_t v38 = type metadata accessor for CarouselView();
  uint64_t v39 = v69;
  sub_24EE559E0();
  uint64_t v67 = (void (*)(void))sub_24EE559D0();
  uint64_t v40 = v39 + *(int *)(v38 + 220);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  uint64_t v42 = v50;
  v41(v32, v40, v50);
  (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 16))(v28, v71);
  *(void *)&v28[*(int *)(TupleTypeMetadata3 + 48)] = v72;
  v41(&v28[*(int *)(TupleTypeMetadata3 + 64)], (uint64_t)v32, v42);
  v67(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v28, TupleTypeMetadata3);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v42);
  uint64_t v43 = v59;
  sub_24EC90894(v35);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v68 + 8);
  v44(v35, a12);
  sub_24EC90894(v43);
  return ((uint64_t (*)(char *, uint64_t))v44)(v43, a12);
}

uint64_t sub_24ED31600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, long long a19, uint64_t a20,uint64_t a21)
{
  uint64_t v48 = a8;
  uint64_t v46 = a7;
  uint64_t v44 = a6;
  uint64_t v54 = a3;
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v55 = a9;
  uint64_t v50 = a21;
  uint64_t v49 = a20;
  long long v47 = a19;
  long long v45 = a18;
  long long v43 = a17;
  uint64_t v42 = a15;
  long long v41 = a13;
  long long v40 = a12;
  long long v39 = a11;
  long long v38 = a10;
  uint64_t v23 = sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v51 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v26 = (char *)&v38 - v25;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v38 - v32;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v58 = v44;
  uint64_t v59 = v46;
  uint64_t v60 = v48;
  long long v61 = v38;
  long long v62 = v39;
  long long v63 = v40;
  long long v64 = v41;
  uint64_t v65 = a14;
  uint64_t v66 = v42;
  uint64_t v67 = a16;
  long long v68 = v43;
  long long v69 = v45;
  long long v70 = v47;
  uint64_t v71 = v49;
  uint64_t v72 = v50;
  type metadata accessor for CarouselView();
  sub_24EE559E0();
  uint64_t v34 = (void (*)(char *))sub_24EE559D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v53, v23);
  uint64_t v35 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
  *(void *)uint64_t v35 = v54;
  v35[8] = 0;
  v34(v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, TupleTypeMetadata2);
  sub_24EC90894(v30);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v30, a5);
  sub_24EC90894(v33);
  return ((uint64_t (*)(char *, uint64_t))v36)(v33, a5);
}

uint64_t sub_24ED319F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, uint64_t a17, uint64_t a18)
{
  uint64_t v33 = a2;
  long long v41 = a16;
  long long v40 = a15;
  long long v39 = a14;
  long long v38 = a13;
  long long v37 = a12;
  long long v36 = a11;
  long long v35 = a10;
  long long v34 = a9;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  long long v48 = a9;
  long long v49 = a10;
  long long v50 = a11;
  long long v51 = a12;
  long long v52 = a13;
  long long v53 = a14;
  long long v54 = a15;
  long long v55 = a16;
  uint64_t v56 = a17;
  uint64_t v57 = a18;
  uint64_t v28 = type metadata accessor for CarouselView();
  sub_24ED25FB4(a1 + *(int *)(v28 + 252), (uint64_t)v27);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1) {
    return sub_24ED2601C((uint64_t)v27);
  }
  uint64_t v42 = v33;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v27, v29);
}

uint64_t sub_24ED31C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, uint64_t a17, uint64_t a18)
{
  uint64_t v33 = a2;
  long long v41 = a16;
  long long v40 = a15;
  long long v39 = a14;
  long long v38 = a13;
  long long v37 = a12;
  long long v36 = a11;
  long long v35 = a10;
  long long v34 = a9;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  long long v48 = a9;
  long long v49 = a10;
  long long v50 = a11;
  long long v51 = a12;
  long long v52 = a13;
  long long v53 = a14;
  long long v54 = a15;
  long long v55 = a16;
  uint64_t v56 = a17;
  uint64_t v57 = a18;
  uint64_t v28 = type metadata accessor for CarouselView();
  sub_24ED25FB4(a1 + *(int *)(v28 + 256), (uint64_t)v27);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) == 1) {
    return sub_24ED2601C((uint64_t)v27);
  }
  uint64_t v42 = v33;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v27, v29);
}

uint64_t sub_24ED31EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v46 = a8;
  uint64_t v44 = a7;
  uint64_t v42 = a6;
  uint64_t v40 = a5;
  uint64_t v38 = a4;
  uint64_t v36 = a3;
  v32[1] = a2;
  uint64_t v47 = a1;
  uint64_t v41 = a21;
  uint64_t v45 = a20;
  uint64_t v43 = a19;
  long long v39 = a18;
  long long v37 = a17;
  long long v35 = a16;
  long long v34 = a13;
  long long v33 = a12;
  v32[0] = *(void *)(a11 - 8);
  MEMORY[0x270FA5388](a1);
  v22 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24EE55A60();
  uint64_t v24 = sub_24EE57430();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v32 - v26;
  uint64_t v48 = v36;
  uint64_t v49 = v38;
  uint64_t v50 = v40;
  uint64_t v51 = v42;
  uint64_t v52 = v44;
  uint64_t v53 = v46;
  uint64_t v54 = a9;
  uint64_t v55 = a10;
  uint64_t v56 = a11;
  long long v57 = v33;
  long long v58 = v34;
  uint64_t v59 = a14;
  uint64_t v60 = a15;
  uint64_t v28 = v41;
  long long v61 = v35;
  long long v62 = v37;
  long long v63 = v39;
  uint64_t v64 = v43;
  uint64_t v65 = v45;
  uint64_t v66 = v41;
  uint64_t v29 = type metadata accessor for CarouselView();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v47 + *(int *)(v29 + 260), v24);
  uint64_t v30 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v23) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v28 + 152))(a15, v28);
    sub_24EE55A50();
    (*(void (**)(char *, uint64_t))(v32[0] + 8))(v22, a11);
    uint64_t v25 = v30;
    uint64_t v24 = v23;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
}

uint64_t sub_24ED3224C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v40 = a4;
  uint64_t v48 = a3;
  long long v47 = a18;
  long long v46 = a17;
  long long v45 = a16;
  long long v44 = a12;
  long long v43 = a11;
  long long v42 = a10;
  long long v41 = a9;
  uint64_t v37 = *(void *)(a21 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v36 = (char *)&v33 - v25;
  uint64_t v35 = *(void *)(a15 - 8);
  MEMORY[0x270FA5388](v26);
  long long v34 = (char *)&v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v51 = a5;
  *((void *)&v51 + 1) = a6;
  uint64_t v52 = a7;
  uint64_t v53 = a8;
  long long v54 = v41;
  long long v55 = v42;
  long long v56 = v43;
  long long v57 = v44;
  uint64_t v58 = a13;
  uint64_t v59 = a14;
  long long v61 = v45;
  long long v62 = v46;
  long long v63 = v47;
  uint64_t v60 = a15;
  uint64_t v64 = a19;
  uint64_t v65 = a20;
  uint64_t v28 = v48;
  uint64_t v66 = a21;
  type metadata accessor for CarouselView();
  uint64_t result = sub_24ED282A4();
  if ((result & 1) == 0)
  {
    *(void *)&long long v50 = *(void *)(v28 + 8);
    sub_24EE571B0();
    swift_getWitnessTable();
    sub_24EE57350();
    long long v50 = v51;
    uint64_t v49 = sub_24ED281B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269965688);
    uint64_t result = sub_24EE573E0();
    if (result)
    {
      sub_24ED281B8();
      uint64_t v30 = v34;
      sub_24EE571F0();
      uint64_t v31 = v36;
      sub_24EE57520();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v30, a15);
      uint64_t v32 = AssociatedTypeWitness;
      swift_getAssociatedConformanceWitness();
      sub_24EE55E10();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v32);
    }
  }
  return result;
}

double sub_24ED3263C@<D0>(double *a1@<X8>)
{
  sub_24EE55D50();
  double v3 = v2;
  sub_24EE55D40();
  double result = v3 / v4;
  *a1 = result;
  return result;
}

uint64_t sub_24ED3267C(uint64_t a1, double *a2)
{
  double v2 = *a2;
  type metadata accessor for CarouselView();
  uint64_t result = sub_24ED282A4();
  if (result)
  {
    double v4 = round(v2);
    if ((~*(void *)&v4 & 0x7FF0000000000000) != 0)
    {
      if (v4 > -9.22337204e18)
      {
        if (v4 < 9.22337204e18) {
          return sub_24ED28204();
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_24ED32770()
{
  return sub_24ED282FC();
}

uint64_t sub_24ED32834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CarouselView();
  uint64_t v3 = sub_24ED28358();
  uint64_t v4 = sub_24ED28254();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v9 = sub_24EE56500();
  sub_24ED2843C(v2);
  uint64_t result = sub_24EE55AD0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

double sub_24ED32928@<D0>(_OWORD *a1@<X8>)
{
  sub_24ED03E48();
  sub_24EE56060();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_24ED32978@<D0>(_OWORD *a1@<X8>)
{
  sub_24ED03E48();
  sub_24EE56060();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24ED329C8()
{
  return sub_24EE56070();
}

uint64_t sub_24ED32A14()
{
  return sub_24EE56070();
}

uint64_t sub_24ED32A64(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24ED32A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = (char *)v2[3];
  uint64_t v28 = v2[2];
  uint64_t v25 = v2[5];
  uint64_t v26 = v2[4];
  uint64_t v23 = v2[7];
  uint64_t v24 = (char *)v2[6];
  unint64_t v21 = v2[9];
  unint64_t v22 = v2[8];
  unint64_t v19 = v2[11];
  uint64_t v20 = v2[10];
  uint64_t v17 = v2[13];
  uint64_t v18 = v2[12];
  uint64_t v15 = v2[15];
  v16 = (char *)v2[14];
  unint64_t v3 = v2[17];
  uint64_t v14 = v2[16];
  unint64_t v4 = v2[18];
  uint64_t v5 = v2[19];
  uint64_t v6 = v2[20];
  uint64_t v7 = v2[21];
  uint64_t v8 = v2[22];
  uint64_t v9 = v2[23];
  unint64_t v10 = v2[24];
  uint64_t v11 = v2[25];
  uint64_t v12 = *(void *)(type metadata accessor for CarouselView() - 8);
  return sub_24ED29E84(a1, (uint64_t)v2 + ((*(unsigned __int8 *)(v12 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v28, v27, v26, v25, v24, v23, a2, v22, v21, v20, v19, v18, v17, v16, v15, v14, v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10,
           v11);
}

uint64_t sub_24ED32BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED32C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 272);
}

uint64_t sub_24ED32C48()
{
  uint64_t v0 = sub_24EE57430();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for CanvasLayout();
    if (v2 <= 0x3F)
    {
      sub_24EE57430();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
      swift_getTupleTypeMetadata2();
      uint64_t v3 = sub_24EE559E0();
      if (v4 > 0x3F) {
        return v3;
      }
      uint64_t v3 = sub_24EE559E0();
      if (v5 > 0x3F) {
        return v3;
      }
      uint64_t v3 = sub_24EE559E0();
      if (v6 > 0x3F) {
        return v3;
      }
      uint64_t v3 = sub_24EE559E0();
      if (v7 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeMetadata3();
        uint64_t v0 = sub_24EE559E0();
        if (v8 <= 0x3F)
        {
          sub_24ED232F8();
          uint64_t v0 = v9;
          if (v10 <= 0x3F)
          {
            sub_24EE55A60();
            uint64_t v0 = sub_24EE57430();
            if (v11 <= 0x3F)
            {
              uint64_t v0 = sub_24EE55940();
              if (v12 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return v0;
}

void *sub_24ED33034(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 216);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)(a3 + 104);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_24EE57430();
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 220);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)((char *)a2 + v16);
    *(_OWORD *)(v17 + 8) = *(_OWORD *)((char *)a2 + v16 + 8);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)((char *)a2 + v16 + 24);
    v17[40] = *((unsigned char *)a2 + v16 + 40);
    uint64_t v19 = *(void *)((char *)a2 + v16 + 56);
    *((void *)v17 + 6) = *(void *)((char *)a2 + v16 + 48);
    *((void *)v17 + 7) = v19;
    uint64_t v20 = *(void *)(a3 + 112);
    swift_bridgeObjectRetain();
    uint64_t v21 = type metadata accessor for CanvasLayout();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(&v17[*(int *)(v21 + 68)], &v18[*(int *)(v21 + 68)], v20);
    uint64_t v22 = *(int *)(a3 + 228);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 224)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 224));
    *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
    uint64_t v23 = *(int *)(a3 + 232);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    sub_24EE57430();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
    swift_getTupleTypeMetadata2();
    uint64_t v26 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = *(int *)(a3 + 236);
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = *(int *)(a3 + 240);
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = *(int *)(a3 + 244);
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = *(int *)(a3 + 248);
    uint64_t v40 = (char *)a1 + v39;
    long long v41 = (char *)a2 + v39;
    swift_getTupleTypeMetadata3();
    uint64_t v42 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = *(int *)(a3 + 252);
    long long v44 = (char *)a1 + v43;
    long long v45 = (char *)a2 + v43;
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    if (v48(v45, 1, v46))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    uint64_t v50 = *(int *)(a3 + 256);
    long long v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v48((char *)a2 + v50, 1, v46))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v51, v52, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v51, 0, 1, v46);
    }
    uint64_t v54 = *(int *)(a3 + 260);
    long long v55 = (char *)a1 + v54;
    long long v56 = (char *)a2 + v54;
    uint64_t v57 = sub_24EE55A60();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = sub_24EE57430();
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v60 = *(int *)(a3 + 264);
    long long v61 = (char *)a1 + v60;
    long long v62 = (char *)a2 + v60;
    uint64_t v63 = *(void *)v62;
    uint64_t v64 = *((void *)v62 + 1);
    char v65 = v62[16];
    sub_24ED337A8(*(void *)v62, v64, v65);
    *(void *)long long v61 = v63;
    *((void *)v61 + 1) = v64;
    v61[16] = v65;
    uint64_t v66 = *(int *)(a3 + 268);
    uint64_t v67 = (void *)((char *)a1 + v66);
    long long v68 = (void *)((char *)a2 + v66);
    uint64_t v69 = v68[1];
    *uint64_t v67 = *v68;
    v67[1] = v69;
    uint64_t v70 = *(int *)(a3 + 272);
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    *uint64_t v71 = *v72;
    *((void *)v71 + 1) = *((void *)v72 + 1);
    uint64_t v73 = *(int *)(a3 + 276);
    uint64_t v74 = (char *)a1 + v73;
    uint64_t v75 = (char *)a2 + v73;
    *uint64_t v74 = *v75;
    *((void *)v74 + 1) = *((void *)v75 + 1);
    uint64_t v76 = *(int *)(a3 + 280);
    uint64_t v77 = (char *)a1 + v76;
    uint64_t v78 = (char *)a2 + v76;
    uint64_t v79 = sub_24EE55940();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v80(v77, v78, v79);
  }
  return a1;
}

uint64_t sub_24ED337A8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24ED337B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 216);
  uint64_t v5 = *(void *)(a2 + 104);
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 220);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  uint64_t v9 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7 + *(int *)(v9 + 68), v8);
  uint64_t v10 = a1 + *(int *)(a2 + 232);
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + *(int *)(a2 + 236);
  uint64_t v13 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = a1 + *(int *)(a2 + 240);
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = a1 + *(int *)(a2 + 244);
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = a1 + *(int *)(a2 + 248);
  swift_getTupleTypeMetadata3();
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + *(int *)(a2 + 252);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (!v23(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v24 = a1 + *(int *)(a2 + 256);
  if (!v23(v24, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v25 = a1 + *(int *)(a2 + 260);
  uint64_t v26 = sub_24EE55A60();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  sub_24ED32A64(*(void *)(a1 + *(int *)(a2 + 264)), *(void *)(a1 + *(int *)(a2 + 264) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 264) + 16));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = a1 + *(int *)(a2 + 280);
  uint64_t v29 = sub_24EE55940();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
}

void *sub_24ED33C94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 216);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)(a3 + 104);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_24EE57430();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 220);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)uint64_t v15 = *(void *)((char *)a2 + v14);
  *(_OWORD *)(v15 + 8) = *(_OWORD *)((char *)a2 + v14 + 8);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)((char *)a2 + v14 + 24);
  v15[40] = *((unsigned char *)a2 + v14 + 40);
  uint64_t v17 = *(void *)((char *)a2 + v14 + 56);
  *((void *)v15 + 6) = *(void *)((char *)a2 + v14 + 48);
  *((void *)v15 + 7) = v17;
  uint64_t v18 = *(void *)(a3 + 112);
  swift_bridgeObjectRetain();
  uint64_t v19 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(&v15[*(int *)(v19 + 68)], &v16[*(int *)(v19 + 68)], v18);
  uint64_t v20 = *(int *)(a3 + 228);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 224)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 224));
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = *(int *)(a3 + 232);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 236);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = *(int *)(a3 + 240);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  uint64_t v33 = *(int *)(a3 + 244);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = *(int *)(a3 + 248);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  swift_getTupleTypeMetadata3();
  uint64_t v40 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = *(int *)(a3 + 252);
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v46(v43, 1, v44))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v48 = *(int *)(a3 + 256);
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  if (v46((char *)a2 + v48, 1, v44))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v49, v50, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v44);
  }
  uint64_t v52 = *(int *)(a3 + 260);
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = sub_24EE55A60();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = sub_24EE57430();
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  uint64_t v58 = *(int *)(a3 + 264);
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = *(void *)v60;
  uint64_t v62 = *((void *)v60 + 1);
  char v63 = v60[16];
  sub_24ED337A8(*(void *)v60, v62, v63);
  *(void *)uint64_t v59 = v61;
  *((void *)v59 + 1) = v62;
  v59[16] = v63;
  uint64_t v64 = *(int *)(a3 + 268);
  char v65 = (void *)((char *)a1 + v64);
  uint64_t v66 = (void *)((char *)a2 + v64);
  uint64_t v67 = v66[1];
  *char v65 = *v66;
  v65[1] = v67;
  uint64_t v68 = *(int *)(a3 + 272);
  uint64_t v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  *uint64_t v69 = *v70;
  *((void *)v69 + 1) = *((void *)v70 + 1);
  uint64_t v71 = *(int *)(a3 + 276);
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  *uint64_t v72 = *v73;
  *((void *)v72 + 1) = *((void *)v73 + 1);
  uint64_t v74 = *(int *)(a3 + 280);
  uint64_t v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = sub_24EE55940();
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v78(v75, v76, v77);
  return a1;
}

char *sub_24ED343B8(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 216);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)(a3 + 104);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(&a1[v6], 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_24EE57430();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 220);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)((char *)a2 + v15);
  *((void *)v16 + 1) = *(void *)((char *)a2 + v15 + 8);
  *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
  *((void *)v16 + 3) = *(void *)((char *)a2 + v15 + 24);
  *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
  v16[40] = *((unsigned char *)a2 + v15 + 40);
  *((void *)v16 + 6) = *(void *)((char *)a2 + v15 + 48);
  *((void *)v16 + 7) = *(void *)((char *)a2 + v15 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a3 + 112);
  uint64_t v19 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(&v16[*(int *)(v19 + 68)], &v17[*(int *)(v19 + 68)], v18);
  uint64_t v20 = *(int *)(a3 + 224);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (void *)((char *)a2 + v20);
  *(void *)uint64_t v21 = *v22;
  *((void *)v21 + 1) = v22[1];
  *(void *)&a1[*(int *)(a3 + 228)] = *(void *)((char *)a2 + *(int *)(a3 + 228));
  uint64_t v23 = *(int *)(a3 + 232);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 236);
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = *(int *)(a3 + 240);
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 244);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = *(int *)(a3 + 248);
  uint64_t v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  swift_getTupleTypeMetadata3();
  uint64_t v42 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = *(int *)(a3 + 252);
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  LODWORD(v17) = v48(v44, 1, v46);
  int v49 = v48(v45, 1, v46);
  if (v17)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_12:
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_13:
  uint64_t v51 = *(int *)(a3 + 256);
  uint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  int v54 = v48(&a1[v51], 1, v46);
  int v55 = v48(v53, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v52, v53, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v52, 0, 1, v46);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v52, v46);
LABEL_18:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v52, v53, v46);
LABEL_19:
  uint64_t v57 = *(int *)(a3 + 260);
  uint64_t v58 = &a1[v57];
  uint64_t v59 = (char *)a2 + v57;
  uint64_t v60 = sub_24EE55A60();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v58, v59, v60);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_24;
  }
  if (v64)
  {
LABEL_24:
    uint64_t v65 = sub_24EE57430();
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_25:
  uint64_t v66 = *(int *)(a3 + 264);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = *(void *)v68;
  uint64_t v70 = *((void *)v68 + 1);
  char v71 = v68[16];
  sub_24ED337A8(*(void *)v68, v70, v71);
  uint64_t v72 = *(void *)v67;
  uint64_t v73 = *((void *)v67 + 1);
  char v74 = v67[16];
  *(void *)uint64_t v67 = v69;
  *((void *)v67 + 1) = v70;
  v67[16] = v71;
  sub_24ED32A64(v72, v73, v74);
  uint64_t v75 = *(int *)(a3 + 268);
  uint64_t v76 = &a1[v75];
  uint64_t v77 = (void *)((char *)a2 + v75);
  *(void *)uint64_t v76 = *v77;
  *((void *)v76 + 1) = v77[1];
  swift_retain();
  swift_release();
  uint64_t v78 = *(int *)(a3 + 272);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = (char *)a2 + v78;
  *uint64_t v79 = *v80;
  *((void *)v79 + 1) = *((void *)v80 + 1);
  swift_retain();
  swift_release();
  uint64_t v81 = *(int *)(a3 + 276);
  uint64_t v82 = &a1[v81];
  uint64_t v83 = (char *)a2 + v81;
  *uint64_t v82 = *v83;
  *((void *)v82 + 1) = *((void *)v83 + 1);
  swift_retain();
  swift_release();
  uint64_t v84 = *(int *)(a3 + 280);
  uint64_t v85 = &a1[v84];
  uint64_t v86 = (char *)a2 + v84;
  uint64_t v87 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
  return a1;
}

_OWORD *sub_24ED34CB0(_OWORD *a1, char *a2, uint64_t a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = *(int *)(a3 + 216);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = *(void *)(a3 + 104);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v6], 1, v9))
  {
    uint64_t v11 = sub_24EE57430();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 220);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  *(void *)int v13 = *(void *)&a2[v12];
  *(_OWORD *)(v13 + 8) = *(_OWORD *)&a2[v12 + 8];
  *(_OWORD *)(v13 + 24) = *(_OWORD *)&a2[v12 + 24];
  v13[40] = a2[v12 + 40];
  *((_OWORD *)v13 + 3) = *(_OWORD *)&a2[v12 + 48];
  uint64_t v15 = *(void *)(a3 + 112);
  uint64_t v16 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(&v13[*(int *)(v16 + 68)], &v14[*(int *)(v16 + 68)], v15);
  uint64_t v17 = *(int *)(a3 + 228);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 224)) = *(_OWORD *)&a2[*(int *)(a3 + 224)];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  uint64_t v18 = *(int *)(a3 + 232);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = *(int *)(a3 + 236);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 240);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = *(int *)(a3 + 244);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  uint64_t v34 = *(int *)(a3 + 248);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = &a2[v34];
  swift_getTupleTypeMetadata3();
  uint64_t v37 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  uint64_t v38 = *(int *)(a3 + 252);
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  if (v43(v40, 1, v41))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  uint64_t v45 = *(int *)(a3 + 256);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = &a2[v45];
  if (v43(&a2[v45], 1, v41))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v46, v47, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v46, 0, 1, v41);
  }
  uint64_t v49 = *(int *)(a3 + 260);
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = &a2[v49];
  uint64_t v52 = sub_24EE55A60();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = sub_24EE57430();
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  uint64_t v55 = *(int *)(a3 + 264);
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = &a2[v55];
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  uint64_t v58 = *(int *)(a3 + 268);
  long long v59 = *(_OWORD *)&a2[v58];
  v56[16] = v57[16];
  *(_OWORD *)((char *)a1 + v58) = v59;
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 272)) = *(_OWORD *)&a2[*(int *)(a3 + 272)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 276)) = *(_OWORD *)&a2[*(int *)(a3 + 276)];
  uint64_t v60 = *(int *)(a3 + 280);
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = &a2[v60];
  uint64_t v63 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
  return a1;
}

char *sub_24ED35378(char *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 216);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)(a3 + 104);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(&a1[v7], 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_24EE57430();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 220);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *(void *)((char *)a2 + v16 + 32);
  v17[40] = *((unsigned char *)a2 + v16 + 40);
  *((void *)v17 + 6) = *(void *)((char *)a2 + v16 + 48);
  *((void *)v17 + 7) = *(void *)((char *)a2 + v16 + 56);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a3 + 112);
  uint64_t v21 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(&v17[*(int *)(v21 + 68)], &v18[*(int *)(v21 + 68)], v20);
  uint64_t v22 = *(int *)(a3 + 228);
  *(_OWORD *)&a1[*(int *)(a3 + 224)] = *(_OWORD *)((char *)a2 + *(int *)(a3 + 224));
  *(void *)&a1[v22] = *(void *)((char *)a2 + v22);
  uint64_t v23 = *(int *)(a3 + 232);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = *(int *)(a3 + 236);
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = *(int *)(a3 + 240);
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 244);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = *(int *)(a3 + 248);
  uint64_t v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  swift_getTupleTypeMetadata3();
  uint64_t v42 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = *(int *)(a3 + 252);
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  LODWORD(v18) = v48(v44, 1, v46);
  int v49 = v48(v45, 1, v46);
  if (v18)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_12:
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
LABEL_13:
  uint64_t v51 = *(int *)(a3 + 256);
  uint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  int v54 = v48(&a1[v51], 1, v46);
  int v55 = v48(v53, 1, v46);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v52, v53, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v52, 0, 1, v46);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v52, v46);
LABEL_18:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v52, v53, v46);
LABEL_19:
  uint64_t v57 = *(int *)(a3 + 260);
  uint64_t v58 = &a1[v57];
  long long v59 = (char *)a2 + v57;
  uint64_t v60 = sub_24EE55A60();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_24;
  }
  if (v64)
  {
LABEL_24:
    uint64_t v65 = sub_24EE57430();
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_25:
  uint64_t v66 = *(int *)(a3 + 264);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = (char *)a2 + v66;
  char v69 = v68[16];
  uint64_t v70 = *(void *)v67;
  uint64_t v71 = *((void *)v67 + 1);
  char v72 = v67[16];
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  v67[16] = v69;
  sub_24ED32A64(v70, v71, v72);
  uint64_t v73 = *(int *)(a3 + 268);
  char v74 = &a1[v73];
  uint64_t v75 = (void *)((char *)a2 + v73);
  uint64_t v77 = *v75;
  uint64_t v76 = v75[1];
  *(void *)char v74 = v77;
  *((void *)v74 + 1) = v76;
  swift_release();
  uint64_t v78 = *(int *)(a3 + 272);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = (char *)a2 + v78;
  *uint64_t v79 = *v80;
  *((void *)v79 + 1) = *((void *)v80 + 1);
  swift_release();
  uint64_t v81 = *(int *)(a3 + 276);
  uint64_t v82 = &a1[v81];
  uint64_t v83 = (char *)a2 + v81;
  *uint64_t v82 = *v83;
  *((void *)v82 + 1) = *((void *)v83 + 1);
  swift_release();
  uint64_t v84 = *(int *)(a3 + 280);
  uint64_t v85 = &a1[v84];
  uint64_t v86 = (char *)a2 + v84;
  uint64_t v87 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
  return a1;
}

uint64_t sub_24ED35BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24ED35C10);
}

uint64_t sub_24ED35C10(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EE57430();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + a3[54];
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for CanvasLayout();
      if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
      {
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)(v13 - 8);
        uint64_t v16 = a3[55];
      }
      else
      {
        sub_24EE57430();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
        swift_getTupleTypeMetadata2();
        uint64_t v17 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
        {
          uint64_t v14 = v17;
          uint64_t v15 = *(void *)(v17 - 8);
          uint64_t v16 = a3[58];
        }
        else
        {
          uint64_t v18 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
          {
            uint64_t v14 = v18;
            uint64_t v15 = *(void *)(v18 - 8);
            uint64_t v16 = a3[59];
          }
          else
          {
            uint64_t v19 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
            {
              uint64_t v14 = v19;
              uint64_t v15 = *(void *)(v19 - 8);
              uint64_t v16 = a3[60];
            }
            else
            {
              uint64_t v20 = sub_24EE559E0();
              if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
              {
                uint64_t v14 = v20;
                uint64_t v15 = *(void *)(v20 - 8);
                uint64_t v16 = a3[61];
              }
              else
              {
                type metadata accessor for CanvasLayout();
                swift_getTupleTypeMetadata3();
                uint64_t v21 = sub_24EE559E0();
                if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
                {
                  uint64_t v14 = v21;
                  uint64_t v15 = *(void *)(v21 - 8);
                  uint64_t v16 = a3[62];
                }
                else
                {
                  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
                  {
                    uint64_t v14 = v22;
                    uint64_t v15 = *(void *)(v22 - 8);
                    uint64_t v16 = a3[63];
                  }
                  else
                  {
                    sub_24EE55A60();
                    uint64_t v23 = sub_24EE57430();
                    if (*(_DWORD *)(*(void *)(v23 - 8) + 84) != a2)
                    {
                      uint64_t v24 = sub_24EE55940();
                      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(a1 + a3[70], a2, v24);
                    }
                    uint64_t v14 = v23;
                    uint64_t v15 = *(void *)(v23 - 8);
                    uint64_t v16 = a3[65];
                  }
                }
              }
            }
          }
        }
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1 + v16, a2, v14);
    }
  }
}

uint64_t sub_24ED360A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24ED360B8);
}

uint64_t sub_24ED360B8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_24EE57430();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5 + a4[54];
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for CanvasLayout();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      uint64_t v16 = a4[55];
    }
    else
    {
      sub_24EE57430();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
      swift_getTupleTypeMetadata2();
      uint64_t v17 = sub_24EE559E0();
      if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
      {
        uint64_t v14 = v17;
        uint64_t v15 = *(void *)(v17 - 8);
        uint64_t v16 = a4[58];
      }
      else
      {
        uint64_t v18 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
        {
          uint64_t v14 = v18;
          uint64_t v15 = *(void *)(v18 - 8);
          uint64_t v16 = a4[59];
        }
        else
        {
          uint64_t v19 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
          {
            uint64_t v14 = v19;
            uint64_t v15 = *(void *)(v19 - 8);
            uint64_t v16 = a4[60];
          }
          else
          {
            uint64_t v20 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
            {
              uint64_t v14 = v20;
              uint64_t v15 = *(void *)(v20 - 8);
              uint64_t v16 = a4[61];
            }
            else
            {
              type metadata accessor for CanvasLayout();
              swift_getTupleTypeMetadata3();
              uint64_t v21 = sub_24EE559E0();
              if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
              {
                uint64_t v14 = v21;
                uint64_t v15 = *(void *)(v21 - 8);
                uint64_t v16 = a4[62];
              }
              else
              {
                uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
                {
                  uint64_t v14 = v22;
                  uint64_t v15 = *(void *)(v22 - 8);
                  uint64_t v16 = a4[63];
                }
                else
                {
                  sub_24EE55A60();
                  uint64_t v23 = sub_24EE57430();
                  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) != a3)
                  {
                    uint64_t v24 = sub_24EE55940();
                    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5 + a4[70], a2, a2, v24);
                  }
                  uint64_t v14 = v23;
                  uint64_t v15 = *(void *)(v23 - 8);
                  uint64_t v16 = a4[65];
                }
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v5 + v16, a2, a2, v14);
  }
}

uint64_t sub_24ED3655C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED377BC()
{
  return sub_24ED384E8((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED2C224);
}

uint64_t sub_24ED377D8(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = v2[3];
  uint64_t v38 = v2[2];
  uint64_t v35 = v2[5];
  uint64_t v36 = v2[4];
  uint64_t v33 = v2[7];
  uint64_t v34 = v2[6];
  uint64_t v31 = v2[9];
  uint64_t v32 = v2[8];
  uint64_t v29 = v2[11];
  uint64_t v30 = v2[10];
  uint64_t v27 = v2[13];
  uint64_t v28 = v2[12];
  uint64_t v25 = v2[15];
  uint64_t v26 = v2[14];
  uint64_t v23 = v2[17];
  uint64_t v24 = v2[16];
  uint64_t v3 = v2[19];
  uint64_t v22 = v2[18];
  uint64_t v4 = v2[20];
  uint64_t v5 = v2[21];
  uint64_t v6 = v2[22];
  uint64_t v7 = v2[23];
  uint64_t v8 = v2[24];
  uint64_t v9 = v2[25];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_24EE55E20() - 8);
  *((void *)&v21 + 1) = v6;
  *((void *)&v20 + 1) = v4;
  *(void *)&long long v21 = v5;
  *((void *)&v19 + 1) = v22;
  *(void *)&long long v20 = v3;
  *(void *)&long long v19 = v23;
  *(void *)&long long v18 = v28;
  *((void *)&v18 + 1) = v27;
  *(void *)&long long v17 = v30;
  *((void *)&v17 + 1) = v29;
  *(void *)&long long v16 = v32;
  *((void *)&v16 + 1) = v31;
  *(void *)&long long v15 = v34;
  *((void *)&v15 + 1) = v33;
  return sub_24ED3224C(a1, a2, (uint64_t)v2 + v11, (uint64_t)v2+ ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v38, v37, v36, v35, v15, v16, v17, v18, v26, v25, v24, v19, v20, v21,
           v7,
           v8,
           v9);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = (int *)type metadata accessor for CarouselView();
  uint64_t v34 = *(unsigned __int8 *)(*((void *)v3 - 1) + 80);
  uint64_t v32 = *(void *)(*((void *)v3 - 1) + 64);
  uint64_t v4 = sub_24EE55E20();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  uint64_t v31 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v33 = (v34 + 208) & ~v34;
  uint64_t v5 = v0 + v33;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v33 + v3[54];
  uint64_t v7 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v1);
  }
  uint64_t v8 = v5 + v3[55];
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v8 + *(int *)(v9 + 68), v2);
  uint64_t v10 = v5 + v3[58];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v5 + v3[59];
  uint64_t v13 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v3[60];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v5 + v3[61];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v5 + v3[62];
  swift_getTupleTypeMetadata3();
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = v5 + v3[63];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (!v23(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v24 = v5 + v3[64];
  if (!v23(v24, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v25 = v5 + v3[65];
  uint64_t v26 = sub_24EE55A60();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  sub_24ED32A64(*(void *)(v5 + v3[66]), *(void *)(v5 + v3[66] + 8), *(unsigned char *)(v5 + v3[66] + 16));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = v5 + v3[70];
  uint64_t v29 = sub_24EE55940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v0 + ((v33 + v32 + v31) & ~v31), v36);
  return swift_deallocObject();
}

uint64_t sub_24ED3803C(uint64_t a1, double *a2)
{
  return sub_24ED3267C(a1, a2);
}

uint64_t sub_24ED381A8()
{
  return sub_24ED32770();
}

uint64_t sub_24ED38324@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED32834(a1);
}

unint64_t sub_24ED3838C()
{
  unint64_t result = qword_2699656B8;
  if (!qword_2699656B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656B0);
    sub_24ED38408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699656B8);
  }
  return result;
}

unint64_t sub_24ED38408()
{
  unint64_t result = qword_2699656C0;
  if (!qword_2699656C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699656C0);
  }
  return result;
}

BOOL sub_24ED3845C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(v0 + 200) + 184))(*(void *)(v0 + 128));
  BOOL v2 = sub_24ED418EC(3u, v1);
  swift_bridgeObjectRelease();
  return !v2;
}

uint64_t sub_24ED384D0()
{
  return sub_24ED384E8((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED2D3D8);
}

uint64_t sub_24ED384E8(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[26], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19],
           v1[20],
           v1[21],
           v1[22],
           v1[23],
           v1[24],
           v1[25]);
}

uint64_t sub_24ED3855C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v28 = v3[3];
  uint64_t v29 = v3[2];
  uint64_t v26 = v3[5];
  uint64_t v27 = v3[4];
  uint64_t v24 = v3[7];
  unint64_t v25 = v3[6];
  uint64_t v22 = v3[9];
  uint64_t v23 = v3[8];
  uint64_t v20 = v3[11];
  uint64_t v21 = v3[10];
  uint64_t v18 = v3[13];
  uint64_t v19 = v3[12];
  uint64_t v16 = v3[15];
  uint64_t v17 = v3[14];
  uint64_t v4 = v3[17];
  uint64_t v15 = v3[16];
  uint64_t v5 = v3[18];
  uint64_t v6 = v3[19];
  uint64_t v7 = v3[20];
  uint64_t v8 = v3[21];
  uint64_t v9 = v3[22];
  uint64_t v10 = v3[23];
  uint64_t v11 = v3[24];
  uint64_t v12 = v3[25];
  uint64_t v13 = *(void *)(type metadata accessor for CarouselView() - 8);
  return sub_24ED2E76C(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v29, v28, v27, v26, v25, a3, v24, v23, v22, v21, v20, v19, v18, v17, v16, v15,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10,
           v11,
           v12);
}

uint64_t sub_24ED386D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED38720(uint64_t a1)
{
  return sub_24ED38754(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED31094);
}

uint64_t sub_24ED3873C(uint64_t a1)
{
  return sub_24ED38754(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED31600);
}

uint64_t sub_24ED38754(uint64_t a1, uint64_t (*a2)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v28 = *((void *)v2 + 3);
  uint64_t v29 = *((void *)v2 + 2);
  uint64_t v26 = *((void *)v2 + 5);
  uint64_t v27 = *((void *)v2 + 4);
  uint64_t v24 = *((void *)v2 + 7);
  uint64_t v25 = *((void *)v2 + 6);
  uint64_t v22 = *((void *)v2 + 9);
  uint64_t v23 = *((void *)v2 + 8);
  uint64_t v20 = *((void *)v2 + 11);
  uint64_t v21 = *((void *)v2 + 10);
  uint64_t v18 = *((void *)v2 + 13);
  uint64_t v19 = *((void *)v2 + 12);
  uint64_t v16 = *((void *)v2 + 15);
  uint64_t v17 = *((void *)v2 + 14);
  uint64_t v3 = *((void *)v2 + 17);
  uint64_t v15 = *((void *)v2 + 16);
  uint64_t v4 = *((void *)v2 + 18);
  uint64_t v5 = *((void *)v2 + 19);
  uint64_t v6 = *((void *)v2 + 20);
  uint64_t v7 = *((void *)v2 + 21);
  uint64_t v8 = *((void *)v2 + 22);
  uint64_t v9 = *((void *)v2 + 23);
  uint64_t v10 = *((void *)v2 + 24);
  uint64_t v11 = *((void *)v2 + 25);
  uint64_t v12 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return a2(a1, &v2[v13], *(void *)&v2[(*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8], v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16, v15, v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10,
           v11);
}

uint64_t sub_24ED388F8()
{
  return sub_24ED38F30((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED319F0);
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = (int *)type metadata accessor for CarouselView();
  uint64_t v30 = *(unsigned __int8 *)(*((void *)v3 - 1) + 80);
  uint64_t v4 = v0 + ((v30 + 208) & ~v30);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + v3[54];
  uint64_t v6 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v1);
  }
  uint64_t v7 = v4 + v3[55];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for CanvasLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v7 + *(int *)(v8 + 68), v2);
  uint64_t v9 = v4 + v3[58];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v4 + v3[59];
  uint64_t v12 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v4 + v3[60];
  uint64_t v14 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v4 + v3[61];
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v4 + v3[62];
  swift_getTupleTypeMetadata3();
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v4 + v3[63];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  uint64_t v23 = v4 + v3[64];
  if (!v22(v23, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  }
  uint64_t v24 = v4 + v3[65];
  uint64_t v25 = sub_24EE55A60();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  sub_24ED32A64(*(void *)(v4 + v3[66]), *(void *)(v4 + v3[66] + 8), *(unsigned char *)(v4 + v3[66] + 16));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v27 = v4 + v3[70];
  uint64_t v28 = sub_24EE55940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  return swift_deallocObject();
}

uint64_t sub_24ED38F18()
{
  return sub_24ED38F30((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED31C48);
}

uint64_t sub_24ED38F30(uint64_t (*a1)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v28 = *((void *)v1 + 2);
  uint64_t v26 = *((void *)v1 + 4);
  uint64_t v27 = *((void *)v1 + 3);
  uint64_t v24 = *((void *)v1 + 6);
  uint64_t v25 = *((void *)v1 + 5);
  uint64_t v22 = *((void *)v1 + 8);
  uint64_t v23 = *((void *)v1 + 7);
  uint64_t v20 = *((void *)v1 + 10);
  uint64_t v21 = *((void *)v1 + 9);
  uint64_t v18 = *((void *)v1 + 12);
  uint64_t v19 = *((void *)v1 + 11);
  uint64_t v16 = *((void *)v1 + 14);
  uint64_t v17 = *((void *)v1 + 13);
  uint64_t v2 = *((void *)v1 + 17);
  uint64_t v14 = *((void *)v1 + 16);
  uint64_t v15 = *((void *)v1 + 15);
  uint64_t v4 = *((void *)v1 + 18);
  uint64_t v3 = *((void *)v1 + 19);
  uint64_t v5 = *((void *)v1 + 20);
  uint64_t v6 = *((void *)v1 + 21);
  uint64_t v7 = *((void *)v1 + 22);
  uint64_t v8 = *((void *)v1 + 23);
  uint64_t v9 = *((void *)v1 + 24);
  uint64_t v10 = *((void *)v1 + 25);
  uint64_t v11 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a1(&v1[v12], *(void *)&v1[(*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8], v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16, v15, v14, v2, v4,
           v3,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10);
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v1 = *((void *)v0 + 13);
  uint64_t v2 = *((void *)v0 + 14);
  uint64_t v3 = *((void *)v0 + 16);
  uint64_t v4 = (int *)type metadata accessor for CarouselView();
  uint64_t v34 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v32 = *(void *)(*((void *)v4 - 1) + 64);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  uint64_t v31 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v33 = (v34 + 208) & ~v34;
  uint64_t v5 = &v0[v33];
  swift_bridgeObjectRelease();
  uint64_t v6 = &v0[v33 + v4[54]];
  uint64_t v7 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v1);
  }
  uint64_t v8 = &v5[v4[55]];
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for CanvasLayout();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(&v8[*(int *)(v9 + 68)], v2);
  uint64_t v10 = &v5[v4[58]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  unint64_t v12 = &v5[v4[59]];
  uint64_t v13 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = &v5[v4[60]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[61]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[62]];
  swift_getTupleTypeMetadata3();
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[63]];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (!v23(v20, 1, v21)) {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v24 = &v5[v4[64]];
  if (!v23(v24, 1, v21)) {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v25 = &v5[v4[65]];
  uint64_t v26 = sub_24EE55A60();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
  }
  sub_24ED32A64(*(void *)&v5[v4[66]], *(void *)&v5[v4[66] + 8], v5[v4[66] + 16]);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = &v5[v4[70]];
  uint64_t v29 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v35 + 8))(&v0[(v33 + v32 + v31) & ~v31], v36);
  return swift_deallocObject();
}

uint64_t sub_24ED39730()
{
  uint64_t v31 = v0[3];
  uint64_t v32 = v0[2];
  uint64_t v29 = v0[5];
  uint64_t v30 = v0[4];
  uint64_t v27 = v0[7];
  uint64_t v28 = v0[6];
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[8];
  uint64_t v23 = v0[11];
  uint64_t v24 = v0[10];
  uint64_t v21 = v0[13];
  uint64_t v22 = v0[12];
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[14];
  uint64_t v1 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v8 = v0[24];
  uint64_t v9 = v0[25];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 208) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  *((void *)&v17 + 1) = v6;
  *((void *)&v16 + 1) = v4;
  *(void *)&long long v17 = v5;
  *((void *)&v15 + 1) = v2;
  *(void *)&long long v16 = v3;
  *(void *)&long long v15 = v18;
  *((void *)&v14 + 1) = v20;
  *((void *)&v13 + 1) = v22;
  *(void *)&long long v14 = v21;
  *(void *)&long long v13 = v23;
  return sub_24ED31EA0((uint64_t)v0 + v11, (uint64_t)v0+ ((v11 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v32, v31, v30, v29, v28, v27, v26, v25, v24, v13, v14, v19, v1, v15, v16, v17,
           v7,
           v8,
           v9);
}

double static ContentMargins.zero.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double ContentMargins.bottom.getter()
{
  return *(double *)v0;
}

double ContentMargins.leading.getter()
{
  return *(double *)(v0 + 8);
}

double ContentMargins.top.getter()
{
  return *(double *)(v0 + 16);
}

double ContentMargins.trailing.getter()
{
  return *(double *)(v0 + 24);
}

void ContentMargins.init(top:leading:bottom:trailing:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a4;
  a1[1] = a3;
  a1[2] = a2;
  a1[3] = a5;
}

uint64_t sub_24ED3991C()
{
  uint64_t result = 0x6D6F74746F62;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696461656CLL;
      break;
    case 2:
      uint64_t result = 7368564;
      break;
    case 3:
      uint64_t result = 0x676E696C69617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ED399A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED3A334(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED399C8(uint64_t a1)
{
  unint64_t v2 = sub_24ED39C4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED39A04(uint64_t a1)
{
  unint64_t v2 = sub_24ED39C4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ContentMargins.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE630);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED39C4C();
  sub_24EE578D0();
  uint64_t v14 = v9;
  HIBYTE(v13) = 0;
  sub_24ECB1664();
  sub_24EE577B0();
  if (!v2)
  {
    uint64_t v14 = v8;
    HIBYTE(v13) = 1;
    sub_24EE577B0();
    uint64_t v14 = v11;
    HIBYTE(v13) = 2;
    sub_24EE577B0();
    uint64_t v14 = v10;
    HIBYTE(v13) = 3;
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24ED39C4C()
{
  unint64_t result = qword_26B1DD360;
  if (!qword_26B1DD360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD360);
  }
  return result;
}

uint64_t ContentMargins.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699656D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED39C4C();
  sub_24EE578C0();
  if (!v2)
  {
    HIBYTE(v14) = 0;
    sub_24ECB1F14();
    sub_24EE57710();
    uint64_t v9 = v15;
    HIBYTE(v14) = 1;
    sub_24EE57710();
    uint64_t v10 = v15;
    HIBYTE(v14) = 2;
    sub_24EE57710();
    uint64_t v12 = v15;
    HIBYTE(v14) = 3;
    sub_24EE57710();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED39EFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ContentMargins.init(from:)(a1, a2);
}

uint64_t sub_24ED39F14(void *a1)
{
  return ContentMargins.encode(to:)(a1);
}

uint64_t ContentMargins.hash(into:)()
{
  return sub_24EE578A0();
}

uint64_t ContentMargins.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED39FE8()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED3A038()
{
  return sub_24EE578B0();
}

BOOL _s15FitnessCanvasUI14ContentMarginsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

unint64_t sub_24ED3A0C4()
{
  unint64_t result = qword_2699656E0;
  if (!qword_2699656E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699656E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentMargins()
{
  return &type metadata for ContentMargins;
}

unsigned char *storeEnumTagSinglePayload for ContentMargins.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED3A1F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentMargins.CodingKeys()
{
  return &type metadata for ContentMargins.CodingKeys;
}

unint64_t sub_24ED3A230()
{
  unint64_t result = qword_2699656E8;
  if (!qword_2699656E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699656E8);
  }
  return result;
}

unint64_t sub_24ED3A288()
{
  unint64_t result = qword_26B1DD370;
  if (!qword_26B1DD370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD370);
  }
  return result;
}

unint64_t sub_24ED3A2E0()
{
  unint64_t result = qword_26B1DD368;
  if (!qword_26B1DD368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD368);
  }
  return result;
}

uint64_t sub_24ED3A334(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t DescriptionView.init(text:lineLimit:sheetTitle:locale:supplementaryView:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19 = (int *)type metadata accessor for DescriptionView();
  uint64_t v20 = (uint64_t *)(a9 + v19[9]);
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (void *)(a9 + v19[10]);
  uint64_t v22 = sub_24ED3A758();
  *uint64_t v21 = v23;
  v21[1] = v24;
  v21[2] = v22;
  uint64_t v25 = (void *)(a9 + v19[11]);
  uint64_t v26 = sub_24ED3A758();
  *uint64_t v25 = v27;
  v25[1] = v28;
  v25[2] = v26;
  uint64_t v29 = a9 + v19[12];
  sub_24EE56B30();
  *(unsigned char *)uint64_t v29 = v39;
  *(void *)(v29 + 8) = v40;
  *(void *)a9 = a3;
  *(unsigned char *)(a9 + 8) = a4 & 1;
  uint64_t v30 = (void *)(a9 + v19[13]);
  *uint64_t v30 = a1;
  v30[1] = a2;
  uint64_t v31 = (void *)(a9 + v19[14]);
  *uint64_t v31 = a5;
  v31[1] = a6;
  uint64_t v32 = a9 + v19[15];
  uint64_t v33 = sub_24EE55960();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v32, a7, v33);
  uint64_t v35 = (void *)(a9 + v19[16]);
  *uint64_t v35 = a8;
  v35[1] = a10;
  uint64_t v36 = (void *)(a9 + v19[17]);
  *uint64_t v36 = a11;
  v36[1] = a12;
  return result;
}

uint64_t type metadata accessor for DescriptionView()
{
  return __swift_instantiateGenericMetadata();
}

double sub_24ED3A6A4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE460);
  sub_24EE56B40();
  return v1;
}

uint64_t sub_24ED3A6FC()
{
  return sub_24EE56B50();
}

uint64_t sub_24ED3A758()
{
  type metadata accessor for CGSize(0);
  sub_24EE56B30();
  return v1;
}

double sub_24ED3A798()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE460);
  sub_24EE56B40();
  return v1;
}

uint64_t sub_24ED3A7F0()
{
  return sub_24EE56B50();
}

uint64_t sub_24ED3A84C()
{
  return sub_24EE56B50();
}

uint64_t sub_24ED3A8A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699656D0);
  sub_24EE56B60();
  return v1;
}

uint64_t DescriptionView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v18 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  uint64_t v13 = MEMORY[0x263F1BAD0];
  swift_getWitnessTable();
  sub_24EE56C30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE3F8);
  sub_24EE55DD0();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F0);
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F8);
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = MEMORY[0x263F19100];
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = MEMORY[0x263F190E0];
  uint64_t v32 = swift_getWitnessTable();
  unint64_t v33 = sub_24ED3FDC8();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = sub_24EC8C218(&qword_269965708, &qword_2699656F0);
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = sub_24EC8C218(&qword_269965710, &qword_2699656F8);
  swift_getWitnessTable();
  sub_24EE56210();
  uint64_t v15 = sub_24EE55DD0();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965718);
  sub_24EE55D30();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EE55B20();
  swift_getWitnessTable();
  sub_24ECB082C();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965720);
  swift_getOpaqueTypeConformance2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965728);
  sub_24EC8C218(&qword_269965730, &qword_269965728);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v14;
  uint64_t v23 = sub_24EE55DF0();
  unint64_t v24 = sub_24ED3FE1C();
  uint64_t v25 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v3 = sub_24EE56C50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_24EE56150();
  sub_24EE56090();
  uint64_t v10 = *(void *)(v16 + 24);
  uint64_t v19 = v2;
  uint64_t v20 = v10;
  uint64_t v21 = v17;
  sub_24EE56C40();
  swift_getWitnessTable();
  sub_24EC90894(v6);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  sub_24EC90894(v9);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
}

uint64_t sub_24ED3B0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v158 = a3;
  uint64_t v156 = a1;
  uint64_t v144 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965718);
  MEMORY[0x270FA5388](v5);
  uint64_t v143 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EE55D30();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v154 = (char *)sub_24EE56C30();
  uint64_t v146 = a2;
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  uint64_t v7 = sub_24EE55DD0();
  uint64_t v155 = MEMORY[0x263F1B6E0];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v172 = MEMORY[0x263F18C10];
  uint64_t v153 = MEMORY[0x263F18E48];
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v167 = v7;
  uint64_t v168 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v167 = v7;
  uint64_t v168 = v8;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v167 = OpaqueTypeMetadata2;
  uint64_t v168 = OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v167 = OpaqueTypeMetadata2;
  uint64_t v168 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v11 = sub_24EE55B20();
  uint64_t v12 = swift_getWitnessTable();
  unint64_t v13 = sub_24ECB082C();
  uint64_t v14 = MEMORY[0x263F8D310];
  uint64_t v167 = v11;
  uint64_t v168 = MEMORY[0x263F8D310];
  unint64_t v169 = v12;
  unint64_t v170 = v13;
  uint64_t v15 = swift_getOpaqueTypeMetadata2();
  uint64_t v167 = v11;
  uint64_t v168 = v14;
  unint64_t v169 = v12;
  unint64_t v170 = v13;
  uint64_t v16 = swift_getOpaqueTypeConformance2();
  uint64_t v167 = v15;
  uint64_t v168 = v16;
  uint64_t v17 = swift_getOpaqueTypeMetadata2();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965720);
  uint64_t v167 = v15;
  uint64_t v168 = v16;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965728);
  uint64_t v21 = sub_24EC8C218(&qword_269965730, &qword_269965728);
  uint64_t v167 = v20;
  uint64_t v168 = v21;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v167 = v17;
  uint64_t v168 = v18;
  unint64_t v169 = v19;
  unint64_t v170 = v22;
  swift_getOpaqueTypeMetadata2();
  uint64_t v167 = v17;
  uint64_t v168 = v18;
  unint64_t v169 = v19;
  unint64_t v170 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = sub_24EE55DF0();
  unint64_t v24 = sub_24ED3FE1C();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v150 = v23;
  uint64_t v151 = v5;
  uint64_t v167 = v5;
  uint64_t v168 = v23;
  uint64_t v148 = v25;
  unint64_t v149 = v24;
  unint64_t v169 = v24;
  unint64_t v170 = v25;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v116 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v114 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v115 = (char *)&v113 - v29;
  uint64_t v117 = v30;
  uint64_t v121 = sub_24EE57430();
  uint64_t v118 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v120 = (char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v119 = (char *)&v113 - v33;
  uint64_t v135 = type metadata accessor for DescriptionView();
  uint64_t v157 = *(void *)(v135 - 8);
  uint64_t v141 = *(void *)(v157 + 64);
  MEMORY[0x270FA5388](v135);
  uint64_t v145 = (char *)&v113 - v34;
  uint64_t v35 = swift_checkMetadataState();
  uint64_t v133 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v130 = (char *)&v113 - v36;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE3F8);
  __n128 v131 = (void *)sub_24EE55DD0();
  uint64_t v136 = *(v131 - 1);
  MEMORY[0x270FA5388](v131);
  uint64_t v129 = (char *)&v113 - v37;
  uint64_t v137 = sub_24EE55DD0();
  uint64_t v139 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v152 = (char *)&v113 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F0);
  uint64_t v138 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F8);
  uint64_t v123 = sub_24EE55DD0();
  uint64_t v140 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v134 = (uint64_t)&v113 - v39;
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  sub_24EE55DD0();
  uint64_t v40 = sub_24EE55DD0();
  uint64_t v41 = swift_getWitnessTable();
  v166[20] = v41;
  v166[21] = MEMORY[0x263F19100];
  v166[18] = swift_getWitnessTable();
  v166[19] = MEMORY[0x263F190E0];
  uint64_t v42 = swift_getWitnessTable();
  unint64_t v43 = sub_24ED3FDC8();
  v166[16] = v42;
  v166[17] = v43;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v132 = MEMORY[0x263F19B18];
  uint64_t v127 = sub_24EC8C218(&qword_269965708, &qword_2699656F0);
  v166[14] = v44;
  v166[15] = v127;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v124 = sub_24EC8C218(&qword_269965710, &qword_2699656F8);
  v166[12] = v45;
  v166[13] = v124;
  uint64_t v126 = v40;
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v128 = sub_24EE56210();
  uint64_t v155 = sub_24EE55DD0();
  uint64_t v147 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v142 = (char *)&v113 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v122 = (char *)&v113 - v48;
  MEMORY[0x270FA5388](v49);
  uint64_t v154 = (char *)&v113 - v50;
  uint64_t v51 = v130;
  uint64_t v52 = v135;
  uint64_t v53 = v156;
  sub_24ED3C2D0(v135);
  int v54 = v129;
  sub_24EE56A80();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v51, v35);
  sub_24EE56DB0();
  uint64_t v55 = sub_24EC8C218(&qword_26B1DE3F0, &qword_26B1DE3F8);
  v166[10] = v41;
  v166[11] = v55;
  uint64_t v111 = v131;
  uint64_t v112 = swift_getWitnessTable();
  sub_24EE56980();
  (*(void (**)(char *, void *))(v136 + 8))(v54, v111);
  uint64_t v56 = v157;
  uint64_t v57 = *(void **)(v157 + 16);
  uint64_t v58 = v145;
  uint64_t v59 = v52;
  uint64_t v133 = v157 + 16;
  __n128 v131 = v57;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v145, v53, v52);
  uint64_t v60 = *(unsigned __int8 *)(v56 + 80);
  uint64_t v61 = (v60 + 32) & ~v60;
  uint64_t v129 = (char *)(v60 | 7);
  uint64_t v130 = (char *)(v61 + v141);
  uint64_t v62 = swift_allocObject();
  uint64_t v63 = v146;
  uint64_t v64 = v158;
  *(void *)(v62 + 16) = v146;
  *(void *)(v62 + 24) = v64;
  uint64_t v136 = v61;
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 32);
  uint64_t v157 = v56 + 32;
  uint64_t v113 = v65;
  v65(v62 + v61, v58, v59);
  v166[8] = v112;
  v166[9] = MEMORY[0x263F19100];
  uint64_t v66 = v137;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = v134;
  char v69 = v152;
  sub_24EE04644((uint64_t)sub_24ED41574, v62, v67, v134);
  swift_release();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v69, v66);
  uint64_t v70 = v63;
  uint64_t v71 = v59;
  uint64_t v159 = v70;
  uint64_t v160 = v64;
  uint64_t v72 = v156;
  uint64_t v161 = v156;
  sub_24EE56DA0();
  v166[6] = v67;
  v166[7] = v127;
  v166[4] = swift_getWitnessTable();
  v166[5] = v124;
  uint64_t v73 = v123;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v75 = v122;
  sub_24EE566D0();
  (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v68, v73);
  uint64_t v76 = swift_getWitnessTable();
  v166[2] = v74;
  v166[3] = v76;
  uint64_t v77 = v155;
  uint64_t v78 = swift_getWitnessTable();
  sub_24EC90894(v75);
  uint64_t v79 = v147 + 8;
  uint64_t v80 = *(void (**)(char *, uint64_t))(v147 + 8);
  v80(v75, v77);
  double v81 = sub_24ED3A798();
  double v83 = v82;
  double v84 = sub_24ED3A6A4();
  uint64_t v152 = (char *)v80;
  uint64_t v153 = v79;
  uint64_t v141 = v78;
  if (v81 == v84 && v83 == v85)
  {
    uint64_t v86 = v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v120, 1, 1, v117);
    uint64_t v167 = v151;
    uint64_t v168 = v150;
    unint64_t v169 = v149;
    unint64_t v170 = v148;
    swift_getOpaqueTypeConformance2();
    uint64_t v87 = v119;
    uint64_t v88 = (uint64_t)v119;
    uint64_t v89 = (uint64_t)v86;
  }
  else
  {
    sub_24ED3CC40(v59, v143);
    sub_24ED3A8A8();
    uint64_t v90 = v145;
    ((void (*)(char *, uint64_t, uint64_t))v131)(v145, v72, v71);
    uint64_t v91 = swift_allocObject();
    uint64_t v92 = v158;
    *(void *)(v91 + 16) = v146;
    *(void *)(v91 + 24) = v92;
    v113(v91 + v136, v90, v71);
    uint64_t v93 = swift_checkMetadataState();
    unint64_t v94 = v148;
    unint64_t v95 = v149;
    uint64_t v96 = v114;
    uint64_t v97 = v151;
    uint64_t v98 = v143;
    sub_24EE56990();
    swift_release();
    swift_release();
    swift_release();
    sub_24EC88758(v98, &qword_269965718);
    uint64_t v167 = v97;
    uint64_t v168 = v93;
    unint64_t v169 = v95;
    unint64_t v170 = v94;
    swift_getOpaqueTypeConformance2();
    uint64_t v99 = v115;
    uint64_t v100 = v117;
    sub_24EC90894(v96);
    uint64_t v101 = v116;
    uint64_t v102 = *(void (**)(char *, uint64_t))(v116 + 8);
    v102(v96, v100);
    uint64_t v86 = v120;
    sub_24EC90894(v99);
    v102(v99, v100);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v86, 0, 1, v100);
    uint64_t v87 = v119;
    uint64_t v88 = (uint64_t)v119;
    uint64_t v89 = (uint64_t)v86;
  }
  sub_24ED6076C(v89, v88);
  uint64_t v103 = v118;
  uint64_t v104 = *(void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v105 = v121;
  v104(v86, v121);
  uint64_t v106 = v142;
  uint64_t v107 = v154;
  uint64_t v108 = v155;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v142, v154, v155);
  v166[0] = v106;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v86, v87, v105);
  v166[1] = v86;
  v165[0] = v108;
  v165[1] = v105;
  uint64_t v163 = v141;
  uint64_t v167 = v151;
  uint64_t v168 = v150;
  unint64_t v169 = v149;
  unint64_t v170 = v148;
  uint64_t v162 = swift_getOpaqueTypeConformance2();
  uint64_t v164 = swift_getWitnessTable();
  sub_24EDCC8A0((uint64_t)v166, 2uLL, (uint64_t)v165);
  v104(v87, v105);
  uint64_t v109 = (uint64_t (*)(char *, uint64_t))v152;
  ((void (*)(char *, uint64_t))v152)(v107, v108);
  v104(v86, v105);
  return v109(v106, v108);
}

uint64_t sub_24ED3C2D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v4 = sub_24EE56C30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v14[-v9];
  sub_24EE56140();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v15 = v3;
  uint64_t v16 = v11;
  uint64_t v17 = v1;
  sub_24EE56C20();
  swift_getWitnessTable();
  sub_24EC90894(v7);
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  sub_24EC90894(v10);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_24ED3C4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v42 = a1;
  uint64_t v59 = a4;
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for DescriptionView();
  uint64_t v43 = v4;
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](v4);
  int v54 = (char *)&v41 - v5;
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v6 = sub_24EE56C30();
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_24EE55DD0();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_24EE55DD0();
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v49 = sub_24EE55DD0();
  uint64_t v52 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v44 = (char *)&v41 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F0);
  uint64_t v51 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699656F8);
  uint64_t v16 = sub_24EE55DD0();
  uint64_t v53 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v45 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v50 = (char *)&v41 - v19;
  sub_24ED3C2D0(v4);
  sub_24EE56DB0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56980();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v6);
  uint64_t v68 = WitnessTable;
  uint64_t v69 = MEMORY[0x263F19100];
  uint64_t v20 = swift_getWitnessTable();
  sub_24EE56A60();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v9);
  uint64_t v66 = v20;
  uint64_t v67 = MEMORY[0x263F190E0];
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = v44;
  sub_24EE569A0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v12);
  unint64_t v24 = v54;
  uint64_t v23 = v55;
  uint64_t v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v42, v43);
  uint64_t v26 = v23;
  unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v58;
  *(void *)(v28 + 16) = v57;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v28 + v27, v24, v25);
  unint64_t v30 = sub_24ED3FDC8();
  uint64_t v64 = v21;
  unint64_t v65 = v30;
  uint64_t v31 = v49;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v45;
  sub_24EE04644((uint64_t)sub_24ED41844, v28, v32, v45);
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v31);
  uint64_t v34 = sub_24EC8C218(&qword_269965708, &qword_2699656F0);
  uint64_t v62 = v32;
  uint64_t v63 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = sub_24EC8C218(&qword_269965710, &qword_2699656F8);
  uint64_t v60 = v35;
  uint64_t v61 = v36;
  swift_getWitnessTable();
  uint64_t v37 = v50;
  sub_24EC90894(v33);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v38(v33, v16);
  sub_24EC90894(v37);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, v16);
}

uint64_t sub_24ED3CC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_24EE560C0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965768);
  sub_24ED3F064(v2, *(void *)(a1 + 16), *(void *)(a1 + 24), a2 + *(int *)(v5 + 44));
  uint64_t v6 = sub_24EE56DA0();
  uint64_t v8 = v7;
  uint64_t v9 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269965718) + 36);
  sub_24ED3F74C(v2, v9);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269965758);
  uint64_t v11 = (uint64_t *)(v9 + *(int *)(result + 36));
  *uint64_t v11 = v6;
  v11[1] = v8;
  return result;
}

uint64_t sub_24ED3CD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v20[1] = a4;
  sub_24EE55D30();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE55DD0();
  v20[12] = swift_getWitnessTable();
  v20[13] = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EE55B20();
  swift_getWitnessTable();
  sub_24ECB082C();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965720);
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965728);
  sub_24EC8C218(&qword_269965730, &qword_269965728);
  uint64_t v10 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  v20[8] = OpaqueTypeMetadata2;
  v20[9] = v8;
  v20[10] = OpaqueTypeConformance2;
  v20[11] = v10;
  swift_getOpaqueTypeConformance2();
  uint64_t v11 = sub_24EE55DF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v20 - v16;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a1;
  sub_24EE55DE0();
  swift_getWitnessTable();
  sub_24EC90894(v14);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  sub_24EC90894(v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v11);
}

uint64_t sub_24ED3D1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v71 = a1;
  uint64_t v74 = a4;
  uint64_t v73 = sub_24EE56080();
  uint64_t v70 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = a2;
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  uint64_t v6 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v87 = MEMORY[0x263F18C10];
  uint64_t v7 = swift_getWitnessTable();
  uint64_t v82 = v6;
  uint64_t v83 = v7;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v82 = v6;
  uint64_t v83 = v7;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = OpaqueTypeMetadata2;
  uint64_t v83 = OpaqueTypeConformance2;
  uint64_t v67 = swift_getOpaqueTypeMetadata2();
  uint64_t v82 = OpaqueTypeMetadata2;
  uint64_t v83 = OpaqueTypeConformance2;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v10 = sub_24EE55B20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_24ECB082C();
  uint64_t v82 = v10;
  uint64_t v83 = MEMORY[0x263F8D310];
  uint64_t v16 = MEMORY[0x263F8D310];
  uint64_t v84 = v14;
  unint64_t v85 = v15;
  uint64_t v63 = v14;
  unint64_t v17 = v15;
  unint64_t v62 = v15;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v64 = (char *)&v52 - v19;
  uint64_t v82 = v10;
  uint64_t v83 = v16;
  uint64_t v84 = v14;
  unint64_t v85 = v17;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = v18;
  uint64_t v82 = v18;
  uint64_t v83 = v20;
  uint64_t v21 = v20;
  uint64_t v59 = v20;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = v22;
  uint64_t v65 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v52 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965720);
  uint64_t v56 = v25;
  uint64_t v82 = v18;
  uint64_t v83 = v21;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965728);
  uint64_t v28 = sub_24EC8C218(&qword_269965730, &qword_269965728);
  uint64_t v82 = v27;
  uint64_t v83 = v28;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = v22;
  uint64_t v83 = v25;
  uint64_t v84 = v26;
  unint64_t v85 = v54;
  uint64_t v60 = MEMORY[0x263F1B228];
  uint64_t v29 = swift_getOpaqueTypeMetadata2();
  uint64_t v61 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v52 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v53 = (char *)&v52 - v32;
  sub_24EE564B0();
  uint64_t v33 = v69;
  uint64_t v79 = v69;
  uint64_t v80 = v75;
  uint64_t v34 = v71;
  uint64_t v81 = v71;
  sub_24EE55B30();
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(type metadata accessor for DescriptionView() + 56));
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v82 = v37;
  uint64_t v83 = v36;
  uint64_t v38 = v64;
  sub_24EE56820();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v39 = v70;
  uint64_t v40 = v72;
  uint64_t v41 = v73;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v72, *MEMORY[0x263F19698], v73);
  uint64_t v42 = v24;
  uint64_t v43 = v58;
  sub_24ECCA184();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v38, v43);
  uint64_t v76 = v33;
  uint64_t v77 = v75;
  uint64_t v78 = v34;
  uint64_t v44 = v52;
  uint64_t v45 = v57;
  uint64_t v46 = v56;
  uint64_t v47 = v55;
  uint64_t v48 = v54;
  sub_24EE569F0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v45);
  uint64_t v82 = v45;
  uint64_t v83 = v46;
  uint64_t v84 = v47;
  unint64_t v85 = v48;
  swift_getOpaqueTypeConformance2();
  uint64_t v49 = v53;
  sub_24EC90894(v44);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v61 + 8);
  v50(v44, v29);
  sub_24EC90894(v49);
  return ((uint64_t (*)(char *, uint64_t))v50)(v49, v29);
}

uint64_t sub_24ED3DA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = a3;
  uint64_t v49 = a4;
  uint64_t v5 = sub_24EE563C0();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EE56280();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a2;
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  v33[1] = swift_getWitnessTable();
  uint64_t v9 = sub_24EE56C30();
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = sub_24EE55DD0();
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v33 - v13;
  v33[0] = swift_getWitnessTable();
  uint64_t v55 = v33[0];
  uint64_t v56 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = v12;
  uint64_t v54 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v40 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v18 = (char *)v33 - v17;
  uint64_t v53 = v12;
  uint64_t v54 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = OpaqueTypeMetadata2;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v37 = OpaqueTypeConformance2;
  uint64_t v20 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v38 = (char *)v33 - v24;
  sub_24EE56140();
  uint64_t v50 = v34;
  uint64_t v51 = v44;
  uint64_t v52 = v43;
  uint64_t v25 = v41;
  sub_24EE56C20();
  sub_24EE564E0();
  sub_24EE569E0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
  uint64_t v26 = v42;
  sub_24EE56270();
  sub_24EE564B0();
  uint64_t v44 = v18;
  sub_24EE568C0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v46);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v12);
  sub_24EE563B0();
  LOBYTE(v12) = sub_24EE564B0();
  unsigned __int8 v27 = sub_24EE56490();
  sub_24EE564A0();
  sub_24EE564A0();
  if (sub_24EE564A0() != v12) {
    sub_24EE564A0();
  }
  sub_24EE564A0();
  if (sub_24EE564A0() != v27) {
    sub_24EE564A0();
  }
  uint64_t v28 = v37;
  uint64_t v29 = v44;
  sub_24EE56830();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v48);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, OpaqueTypeMetadata2);
  uint64_t v53 = OpaqueTypeMetadata2;
  uint64_t v54 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v38;
  sub_24EC90894(v22);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v39 + 8);
  v31(v22, v20);
  sub_24EC90894(v30);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v20);
}

uint64_t sub_24ED3E194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v32 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v27 - v8;
  uint64_t v10 = v9;
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v11 = sub_24EE56C30();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v12 = v27;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v28 = a3;
  uint64_t v18 = type metadata accessor for DescriptionView();
  sub_24ED3C2D0(v18);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EC90894(v14);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v19 = v30(v14, v11);
  uint64_t v20 = *(void (**)(uint64_t))(a1 + *(int *)(v18 + 64));
  uint64_t v21 = v31;
  v20(v19);
  uint64_t v22 = v33;
  sub_24EC90894(v21);
  uint64_t v23 = v32;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v32 + 8);
  v24(v21, v10);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v14, v17, v11);
  v38[0] = v14;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v21, v22, v10);
  v38[1] = v21;
  v37[0] = v11;
  v37[1] = v10;
  uint64_t v35 = WitnessTable;
  uint64_t v36 = v28;
  sub_24EDCC8A0((uint64_t)v38, 2uLL, (uint64_t)v37);
  v24(v22, v10);
  uint64_t v25 = v30;
  v30(v17, v11);
  v24(v21, v10);
  return v25(v14, v11);
}

uint64_t sub_24ED3E4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE562C0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965728);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24EE562B0();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE470);
  sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  sub_24EE55B50();
  uint64_t v11 = sub_24EC8C218(&qword_269965730, &qword_269965728);
  MEMORY[0x25334C9A0](v10, v7, v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24ED3E6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DescriptionView();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v14[-v9];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v7 + 16))(&v14[-v9], a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  return sub_24EE56B90();
}

uint64_t sub_24ED3E854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE55960();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EE57060();
  MEMORY[0x270FA5388](v8 - 8);
  sub_24EE57050();
  if (qword_2699648E0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_269977F80;
  uint64_t v10 = type metadata accessor for DescriptionView();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v10 + 60), v4);
  id v11 = v9;
  v26[1] = sub_24EE57080();
  v26[2] = v12;
  sub_24ECB082C();
  uint64_t v13 = sub_24EE56670();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v18 = sub_24EE56640();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  sub_24EC8AAA0(v13, v15, v17);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v22 & 1;
  *(void *)(a2 + 24) = v24;
  return result;
}

uint64_t sub_24ED3EA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v68 = a1;
  uint64_t v70 = a4;
  uint64_t v61 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)&v57 - v9;
  uint64_t v67 = sub_24EE57430();
  uint64_t v63 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v64 = (char *)&v57 - v12;
  uint64_t v13 = sub_24EE565B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a2;
  uint64_t v66 = a3;
  uint64_t v17 = type metadata accessor for DescriptionView();
  uint64_t v18 = (*(uint64_t (**)(void))(v6 + *(int *)(v17 + 52)))();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_24EE56560();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F1A680], v13);
  sub_24EE565C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v23 = sub_24EE56650();
  uint64_t v25 = v24;
  LOBYTE(v16) = v26;
  swift_release();
  LOBYTE(v6) = v16 & 1;
  sub_24EC8AAA0(v18, v20, v22);
  swift_bridgeObjectRelease();
  LODWORD(v75) = sub_24EE56330();
  uint64_t v27 = sub_24EE56610();
  uint64_t v29 = v28;
  int v60 = v30;
  uint64_t v32 = v31;
  uint64_t v33 = v68;
  sub_24EC8AAA0(v23, v25, v6);
  swift_bridgeObjectRelease();
  double v34 = sub_24ED3A798();
  double v36 = v35;
  double v37 = sub_24ED3A6A4();
  uint64_t v69 = v29;
  if (v34 == v37 && v36 == v38)
  {
    uint64_t v39 = v27;
    uint64_t v40 = v58;
    (*(void (**)(void))(v33 + *(int *)(v17 + 64)))();
    uint64_t v41 = v59;
    uint64_t v42 = v62;
    uint64_t v43 = v66;
    sub_24EC90894(v40);
    uint64_t v44 = v61;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v61 + 8);
    v45(v40, v42);
    uint64_t v46 = v65;
    sub_24EC90894(v41);
    v45(v41, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v42);
    uint64_t v47 = v64;
    uint64_t v48 = (uint64_t)v64;
    uint64_t v49 = (uint64_t)v46;
  }
  else
  {
    uint64_t v39 = v27;
    uint64_t v46 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v65, 1, 1, v62);
    uint64_t v47 = v64;
    uint64_t v48 = (uint64_t)v64;
    uint64_t v49 = (uint64_t)v46;
    uint64_t v43 = v66;
  }
  sub_24ED6076C(v49, v48);
  uint64_t v50 = v63;
  uint64_t v51 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v52 = v67;
  v51(v46, v67);
  uint64_t v53 = v50;
  char v54 = v60 & 1;
  uint64_t v55 = v69;
  uint64_t v75 = v39;
  uint64_t v76 = v69;
  char v77 = v60 & 1;
  uint64_t v78 = v32;
  v79[0] = &v75;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v46, v47, v52);
  v79[1] = v46;
  sub_24EC8A97C(v39, v55, v54);
  swift_bridgeObjectRetain();
  v74[0] = MEMORY[0x263F1A830];
  v74[1] = v52;
  uint64_t v71 = v43;
  uint64_t v72 = MEMORY[0x263F1A820];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EDCC8A0((uint64_t)v79, 2uLL, (uint64_t)v74);
  v51(v47, v52);
  sub_24EC8AAA0(v39, v55, v54);
  swift_bridgeObjectRelease();
  v51(v46, v52);
  sub_24EC8AAA0(v75, v76, v77);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24ED3F064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v29 = a1;
  uint64_t v6 = type metadata accessor for DescriptionView();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE470);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  double v37 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  double v36 = (char *)&v28 - v14;
  sub_24EE56DA0();
  sub_24EE55BF0();
  uint64_t v35 = v43;
  int v34 = v44;
  uint64_t v33 = v45;
  int v32 = v46;
  uint64_t v31 = v47;
  uint64_t v30 = v48;
  uint64_t v15 = a1;
  uint64_t v16 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v38;
  uint64_t v20 = v39;
  *(void *)(v18 + 16) = v38;
  *(void *)(v18 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v9, v16);
  uint64_t v40 = v19;
  uint64_t v41 = v20;
  uint64_t v42 = v29;
  char v21 = v36;
  sub_24EE56B90();
  char v22 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v23 = v37;
  v22(v37, v21, v10);
  *(void *)a4 = 0;
  *(unsigned char *)(a4 + 8) = 1;
  *(void *)(a4 + 16) = v35;
  *(unsigned char *)(a4 + 24) = v34;
  *(void *)(a4 + 32) = v33;
  *(unsigned char *)(a4 + 40) = v32;
  uint64_t v24 = v30;
  *(void *)(a4 + 48) = v31;
  *(void *)(a4 + 56) = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965778);
  v22((char *)(a4 + *(int *)(v25 + 48)), v23, v10);
  char v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v21, v10);
  return ((uint64_t (*)(char *, uint64_t))v26)(v23, v10);
}

uint64_t sub_24ED3F3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v36[1] = a2;
  uint64_t v37 = a1;
  uint64_t v4 = sub_24EE565B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EE55960();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EE57060();
  MEMORY[0x270FA5388](v12 - 8);
  sub_24EE57050();
  if (qword_2699648E0 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_269977F80;
  uint64_t v14 = type metadata accessor for DescriptionView();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v37 + *(int *)(v14 + 60), v8);
  id v15 = v13;
  uint64_t v38 = sub_24EE57080();
  uint64_t v39 = v16;
  sub_24ECB082C();
  uint64_t v17 = sub_24EE56670();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_24EE56560();
  sub_24EE56570();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1A680], v4);
  sub_24EE565C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v22 = sub_24EE56650();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  char v27 = v26 & 1;
  sub_24EC8AAA0(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_24EE56AC0();
  uint64_t v28 = sub_24EE56610();
  uint64_t v30 = v29;
  char v32 = v31;
  uint64_t v34 = v33;
  sub_24EC8AAA0(v22, v24, v27);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v28;
  *(void *)(a3 + 8) = v30;
  *(unsigned char *)(a3 + 16) = v32 & 1;
  *(void *)(a3 + 24) = v34;
  return result;
}

uint64_t sub_24ED3F74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE55EC0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EE56DD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24EE560C0();
  sub_24ED3F99C(a1, (uint64_t)&v27);
  uint64_t v11 = v27;
  long long v25 = v28;
  uint64_t v12 = v29;
  uint64_t v13 = v30;
  uint64_t v14 = v31;
  char v15 = v32;
  uint64_t v16 = v33;
  int v24 = v34;
  uint64_t v17 = v37;
  uint64_t v22 = v36;
  uint64_t v23 = v35;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B970], v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965770);
  sub_24ED416E0((uint64_t)v6, a2 + *(int *)(v18 + 36));
  *(void *)a2 = v26;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 32) = v25;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v14;
  *(unsigned char *)(a2 + 72) = v15;
  *(void *)(a2 + 80) = v16;
  *(unsigned char *)(a2 + 88) = v24;
  uint64_t v19 = v22;
  *(void *)(a2 + 96) = v23;
  *(void *)(a2 + 104) = v19;
  *(void *)(a2 + 112) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24ED41744((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_24ED3F99C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE55D90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE730);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24EE5C950;
  *(void *)(v11 + 32) = sub_24EE56AB0();
  *(void *)(v11 + 40) = sub_24EE56AA0();
  uint64_t v34 = v11;
  sub_24EE57150();
  uint64_t v28 = v34;
  uint64_t v27 = type metadata accessor for DescriptionView();
  *(void *)&long long v29 = a1;
  sub_24EE18A10((uint64_t)v10);
  uint64_t v12 = *MEMORY[0x263F18DC8];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  LOBYTE(v11) = sub_24EE55D80();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v10, v4);
  if (v11) {
    sub_24EE56E80();
  }
  else {
    sub_24EE56E90();
  }
  sub_24EE18A10((uint64_t)v10);
  v13(v7, v12, v4);
  char v15 = sub_24EE55D80();
  v14(v7, v4);
  v14(v10, v4);
  if (v15) {
    sub_24EE56E90();
  }
  else {
    sub_24EE56E80();
  }
  MEMORY[0x25334D3C0](v28);
  sub_24EE55D20();
  uint64_t v16 = v30;
  long long v29 = v31;
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  sub_24EE56DA0();
  sub_24EE55BF0();
  uint64_t v19 = v34;
  char v20 = v35;
  uint64_t v21 = v36;
  char v22 = v37;
  uint64_t v23 = v38;
  uint64_t v24 = v39;
  uint64_t v25 = sub_24EE56AC0();
  *(void *)a2 = v16;
  double result = *(double *)&v29;
  *(_OWORD *)(a2 + 8) = v29;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v21;
  *(unsigned char *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v23;
  *(void *)(a2 + 80) = v24;
  *(void *)(a2 + 88) = v25;
  return result;
}

uint64_t sub_24ED3FCB4()
{
  return sub_24EE55F60();
}

uint64_t sub_24ED3FCD8()
{
  return sub_24EE55F60();
}

uint64_t sub_24ED3FCFC(uint64_t a1)
{
  uint64_t v2 = sub_24EE55D90();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24EE55F70();
}

unint64_t sub_24ED3FDC8()
{
  unint64_t result = qword_269965700;
  if (!qword_269965700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965700);
  }
  return result;
}

unint64_t sub_24ED3FE1C()
{
  unint64_t result = qword_269965738;
  if (!qword_269965738)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965718);
    sub_24EC8C218(&qword_269965740, &qword_269965748);
    sub_24EC8C218(&qword_269965750, &qword_269965758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965738);
  }
  return result;
}

uint64_t sub_24ED3FEE0@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3B0F0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED3FEEC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24ED3FF30()
{
  sub_24ED40EA8();
  if (v0 <= 0x3F)
  {
    sub_24EE55960();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24ED40034(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24EE55D90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[10];
    uint64_t v13 = a3[11];
    uint64_t v14 = v4 + v12;
    uint64_t v15 = (uint64_t)a2 + v12;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    uint64_t v16 = v4 + v13;
    uint64_t v17 = (uint64_t)a2 + v13;
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    uint64_t v18 = a3[12];
    uint64_t v19 = a3[13];
    uint64_t v20 = v4 + v18;
    uint64_t v21 = (uint64_t)a2 + v18;
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    char v22 = (void *)(v4 + v19);
    uint64_t v23 = (uint64_t *)((char *)a2 + v19);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[14];
    uint64_t v26 = a3[15];
    uint64_t v27 = (void *)(v4 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v41 = v4 + v26;
    uint64_t v42 = (uint64_t)a2 + v26;
    uint64_t v30 = sub_24EE55960();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v40(v41, v42, v30);
    uint64_t v31 = a3[16];
    uint64_t v32 = a3[17];
    uint64_t v33 = (void *)(v4 + v31);
    uint64_t v34 = (uint64_t *)((char *)a2 + v31);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = (void *)(v4 + v32);
    char v37 = (uint64_t *)((char *)a2 + v32);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24ED40294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24EE55D90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 60);
  uint64_t v7 = sub_24EE55960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_24ED403E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_24EE55D90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  uint64_t v16 = a3[12];
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  uint64_t v20 = (void *)(a1 + v17);
  uint64_t v21 = (void *)(a2 + v17);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[14];
  uint64_t v24 = a3[15];
  uint64_t v25 = (void *)(a1 + v23);
  uint64_t v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v39 = a1 + v24;
  uint64_t v40 = a2 + v24;
  uint64_t v28 = sub_24EE55960();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v38(v39, v40, v28);
  uint64_t v29 = a3[16];
  uint64_t v30 = a3[17];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (void *)(a1 + v30);
  uint64_t v35 = (void *)(a2 + v30);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24ED405FC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    sub_24EC88758(a1 + v7, &qword_269964B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24EE55D90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  swift_retain();
  swift_release();
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  uint64_t v24 = a3[14];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[15];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t)a2 + v27;
  uint64_t v30 = sub_24EE55960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[16];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = a3[17];
  uint64_t v36 = (void *)(a1 + v35);
  char v37 = (uint64_t *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24ED40864(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_24EE55D90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = a3[11];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = (long long *)(a2 + v11);
  long long v15 = *v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v13 = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_24EE55960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  return a1;
}

uint64_t sub_24ED409FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = a3[9];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_24EC88758(a1 + v6, &qword_269964B48);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24EE55D90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  swift_release();
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_release();
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  uint64_t v20 = a3[14];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[15];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_24EE55960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  swift_release();
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  swift_release();
  return a1;
}

uint64_t sub_24ED40C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24ED40C2C);
}

uint64_t sub_24ED40C2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965760);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[9];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[13]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_24EE55960();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[15];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_24ED40D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24ED40D74);
}

uint64_t sub_24ED40D74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269965760);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[9];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[13]) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_24EE55960();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[15];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_24ED40EA8()
{
  if (!qword_26B1DE040)
  {
    sub_24EE55D90();
    unint64_t v0 = sub_24EE55B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1DE040);
    }
  }
}

uint64_t sub_24ED40F00()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED41574(double a1, double a2)
{
  return sub_24ED4185C((uint64_t (*)(double, double))sub_24ED3A7F0, a1, a2);
}

uint64_t sub_24ED4158C@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3C4CC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED4159C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for DescriptionView() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_24ED3CD10(v6, v3, v4, a1);
}

uint64_t sub_24ED41628@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3D1F4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED41634@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3DA98(*(void *)(v1 + 32), *(void *)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_24ED41640()
{
  return sub_24ED3E4F8(v0[4], v0[2], v0[3]);
}

uint64_t sub_24ED4164C()
{
  return sub_24ED3E6D4(v0[4], v0[2], v0[3]);
}

uint64_t sub_24ED4165C()
{
  return sub_24ED3A84C();
}

uint64_t sub_24ED416C8@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3E854(*(void *)(v1 + 32), a1);
}

uint64_t sub_24ED416D4@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3E194(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED416E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED41744(uint64_t a1)
{
  uint64_t v2 = sub_24EE55EC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24ED417A4()
{
  uint64_t v1 = type metadata accessor for DescriptionView();
  (*(void (**)(void))(v0
                    + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))
                    + *(int *)(v1 + 68)))();
  return sub_24ED3A84C();
}

uint64_t sub_24ED41834@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3F3C4(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

uint64_t sub_24ED41844(double a1, double a2)
{
  return sub_24ED4185C((uint64_t (*)(double, double))sub_24ED3A6FC, a1, a2);
}

uint64_t sub_24ED4185C(uint64_t (*a1)(double, double), double a2, double a3)
{
  return a1(a2, a3);
}

uint64_t sub_24ED418E0@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED3EA74(v1[4], v1[2], v1[3], a1);
}

BOOL sub_24ED418EC(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_24EE57870();
  sub_24EE57880();
  uint64_t v4 = sub_24EE578B0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_24ED419DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char *a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(void, void), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31)
{
  uint64_t v543 = a7;
  uint64_t v544 = a8;
  uint64_t v542 = a6;
  uint64_t v530 = a5;
  uint64_t v553 = a4;
  uint64_t v551 = a2;
  uint64_t v552 = a3;
  uint64_t v596 = a1;
  uint64_t v591 = a9;
  uint64_t v611 = a31;
  unint64_t v635 = a30;
  uint64_t v612 = a29;
  unint64_t v619 = a28;
  uint64_t v631 = a27;
  unint64_t v632 = a26;
  uint64_t v626 = a25;
  unint64_t v625 = a24;
  uint64_t v606 = a23;
  uint64_t v617 = a22;
  uint64_t WitnessTable = a21;
  uint64_t v618 = a20;
  uint64_t v629 = a19;
  uint64_t v627 = a18;
  v633 = a17;
  uint64_t v628 = a16;
  uint64_t v620 = a15;
  uint64_t v608 = a14;
  uint64_t v575 = a11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v616 = swift_getAssociatedTypeWitness();
  uint64_t v623 = swift_getAssociatedTypeWitness();
  uint64_t v622 = swift_getAssociatedTypeWitness();
  uint64_t v615 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v630 = swift_getAssociatedTypeWitness();
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v600 = v31;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v614 = v32;
  uint64_t v613 = swift_getAssociatedConformanceWitness();
  uint64_t v621 = v33;
  uint64_t v603 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v719 = AssociatedTypeWitness;
  *((void *)&v719 + 1) = a19;
  uint64_t v34 = v616;
  *(void *)&long long v720 = v616;
  *((void *)&v720 + 1) = a16;
  v721 = a17;
  uint64_t v722 = a18;
  uint64_t v723 = v623;
  uint64_t v724 = a20;
  uint64_t v725 = a21;
  uint64_t v726 = v622;
  uint64_t v727 = v615;
  uint64_t v728 = v31;
  uint64_t v729 = a22;
  uint64_t v730 = v32;
  uint64_t v731 = a15;
  unint64_t v732 = v630;
  uint64_t v733 = v33;
  unint64_t v734 = a28;
  uint64_t v735 = a25;
  unint64_t v736 = a26;
  uint64_t v737 = a27;
  uint64_t v738 = a29;
  unint64_t v739 = a30;
  uint64_t v35 = AssociatedConformanceWitness;
  uint64_t v740 = AssociatedConformanceWitness;
  uint64_t v741 = a31;
  uint64_t v742 = v613;
  unint64_t v743 = a24;
  uint64_t v744 = v603;
  uint64_t v36 = type metadata accessor for OrthogonalView();
  uint64_t v513 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v497 = (uint64_t)&v488 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v505 = (char *)&v488 - v39;
  *(void *)&long long v719 = AssociatedTypeWitness;
  *((void *)&v719 + 1) = a19;
  *(void *)&long long v720 = v34;
  *((void *)&v720 + 1) = a16;
  v721 = v633;
  uint64_t v40 = v627;
  uint64_t v722 = v627;
  uint64_t v723 = v623;
  uint64_t v724 = v618;
  uint64_t v725 = WitnessTable;
  uint64_t v726 = v622;
  uint64_t v41 = v615;
  uint64_t v727 = v615;
  uint64_t v728 = v600;
  uint64_t v729 = v617;
  uint64_t v730 = v614;
  uint64_t v731 = a15;
  unint64_t v732 = v630;
  uint64_t v733 = v621;
  unint64_t v734 = a28;
  uint64_t v42 = v626;
  uint64_t v735 = v626;
  unint64_t v736 = v632;
  uint64_t v737 = v631;
  uint64_t v43 = v612;
  uint64_t v738 = v612;
  unint64_t v739 = v635;
  uint64_t v740 = v35;
  uint64_t v741 = a31;
  uint64_t v742 = v613;
  unint64_t v743 = v625;
  uint64_t v44 = v603;
  uint64_t v744 = v603;
  uint64_t v45 = type metadata accessor for ListView();
  uint64_t v605 = v36;
  uint64_t v610 = sub_24EE56240();
  uint64_t v511 = *(void *)(v610 - 8);
  MEMORY[0x270FA5388](v610);
  uint64_t v510 = (char *)&v488 - v46;
  uint64_t v594 = v45;
  uint64_t v524 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v503 = (uint64_t)&v488 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v512 = (char *)&v488 - v50;
  *(void *)&long long v719 = AssociatedTypeWitness;
  *((void *)&v719 + 1) = v629;
  *(void *)&long long v720 = v616;
  *((void *)&v720 + 1) = v628;
  v721 = v633;
  uint64_t v722 = v40;
  uint64_t v723 = v623;
  uint64_t v724 = v618;
  uint64_t v725 = WitnessTable;
  uint64_t v726 = v622;
  uint64_t v727 = v41;
  uint64_t v51 = v600;
  uint64_t v728 = v600;
  uint64_t v729 = v617;
  uint64_t v730 = v614;
  uint64_t v731 = v620;
  unint64_t v732 = v630;
  uint64_t v733 = v621;
  unint64_t v734 = v619;
  uint64_t v735 = v42;
  unint64_t v736 = v632;
  uint64_t v737 = v631;
  uint64_t v738 = v43;
  unint64_t v739 = v635;
  uint64_t v740 = AssociatedConformanceWitness;
  uint64_t v741 = v611;
  uint64_t v742 = v613;
  unint64_t v743 = v625;
  uint64_t v744 = v44;
  uint64_t v607 = type metadata accessor for VerticalGridView();
  uint64_t v494 = *(void *)(v607 - 8);
  MEMORY[0x270FA5388](v607);
  uint64_t v493 = (uint64_t)&v488 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v492 = (char *)&v488 - v54;
  uint64_t v55 = sub_24EE559E0();
  uint64_t v522 = *(void *)(v55 - 8);
  uint64_t v523 = v55;
  MEMORY[0x270FA5388](v55);
  uint64_t v566 = (uint64_t)&v488 - v56;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v57 = WitnessTable;
  uint64_t v58 = sub_24EE559E0();
  MEMORY[0x270FA5388](v58 - 8);
  uint64_t v565 = (uint64_t)&v488 - v59;
  uint64_t v60 = v623;
  uint64_t v61 = type metadata accessor for EquatableViewModifierBuilder();
  uint64_t v514 = *(void *)(v61 - 8);
  uint64_t v515 = v61;
  MEMORY[0x270FA5388](v61);
  uint64_t v563 = (uint64_t)&v488 - v62;
  uint64_t v63 = v620;
  uint64_t v520 = *(void *)(v620 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v567 = (uint64_t)&v488 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v44;
  uint64_t v67 = v621;
  uint64_t v68 = AssociatedTypeWitness;
  uint64_t v69 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v719 = v68;
  *((void *)&v719 + 1) = v51;
  *(void *)&long long v720 = v69;
  uint64_t v70 = AssociatedConformanceWitness;
  *((void *)&v720 + 1) = AssociatedConformanceWitness;
  type metadata accessor for CanvasSectionHeader();
  uint64_t v71 = sub_24EE57430();
  MEMORY[0x270FA5388](v71 - 8);
  uint64_t v564 = (uint64_t)&v488 - v72;
  *(void *)&long long v719 = v68;
  *((void *)&v719 + 1) = v629;
  uint64_t v73 = v616;
  *(void *)&long long v720 = v616;
  *((void *)&v720 + 1) = v628;
  v721 = v633;
  uint64_t v722 = v627;
  uint64_t v723 = v60;
  uint64_t v724 = v618;
  uint64_t v725 = v57;
  uint64_t v726 = v622;
  uint64_t v727 = v615;
  uint64_t v728 = v51;
  uint64_t v729 = v617;
  uint64_t v74 = v614;
  uint64_t v730 = v614;
  uint64_t v731 = v63;
  unint64_t v732 = v630;
  uint64_t v733 = v67;
  unint64_t v75 = v619;
  unint64_t v734 = v619;
  uint64_t v735 = v626;
  unint64_t v736 = v632;
  uint64_t v737 = v631;
  uint64_t v738 = v612;
  unint64_t v739 = v635;
  uint64_t v740 = v70;
  uint64_t v741 = v611;
  uint64_t v742 = v613;
  unint64_t v743 = v625;
  uint64_t v744 = v66;
  uint64_t v76 = type metadata accessor for HorizontalGridView();
  uint64_t v491 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v490 = (uint64_t)&v488 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v78);
  uint64_t v489 = (char *)&v488 - v79;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v81 = swift_getAssociatedConformanceWitness();
  uint64_t v82 = type metadata accessor for CanvasHorizontalGridLayout();
  uint64_t v501 = *(void *)(v82 - 8);
  uint64_t v502 = v82;
  MEMORY[0x270FA5388](v82);
  v500 = (char *)&v488 - v83;
  uint64_t v595 = v76;
  uint64_t v84 = sub_24EE56240();
  uint64_t v499 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v498 = (char *)&v488 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v86);
  uint64_t v509 = (char *)&v488 - v87;
  uint64_t v569 = type metadata accessor for CanvasGridAxis();
  uint64_t v568 = *(void *)(v569 - 8);
  MEMORY[0x270FA5388](v569);
  v562 = (char *)&v488 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v89);
  uint64_t v506 = (char *)&v488 - v90;
  *(void *)&long long v719 = AssociatedTypeWitness;
  *((void *)&v719 + 1) = v629;
  *(void *)&long long v720 = v73;
  *((void *)&v720 + 1) = v628;
  v721 = v633;
  uint64_t v722 = v627;
  uint64_t v723 = v623;
  uint64_t v724 = WitnessTable;
  uint64_t v725 = v622;
  uint64_t v726 = v615;
  uint64_t v727 = v80;
  uint64_t v593 = v80;
  uint64_t v728 = v74;
  uint64_t v91 = v620;
  uint64_t v729 = v620;
  unint64_t v92 = v630;
  uint64_t v730 = v630;
  uint64_t v731 = v621;
  unint64_t v732 = v75;
  uint64_t v733 = v626;
  unint64_t v734 = v632;
  uint64_t v735 = v631;
  unint64_t v736 = v635;
  uint64_t v737 = v81;
  uint64_t v93 = v81;
  uint64_t v592 = v81;
  uint64_t v738 = v613;
  unint64_t v94 = v625;
  unint64_t v739 = v625;
  uint64_t v740 = v66;
  uint64_t v95 = type metadata accessor for CarouselView();
  uint64_t v602 = v84;
  uint64_t v96 = sub_24EE56240();
  uint64_t v508 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v507 = (char *)&v488 - v97;
  uint64_t v598 = v98;
  uint64_t v99 = sub_24EE56240();
  uint64_t v532 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  v531 = (char *)&v488 - v100;
  uint64_t v557 = sub_24EE55940();
  uint64_t v546 = *(void *)(v557 - 8);
  MEMORY[0x270FA5388](v557);
  v550 = (char *)&v488 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v545 = sub_24EE55A60();
  uint64_t v102 = sub_24EE57430();
  MEMORY[0x270FA5388](v102 - 8);
  v549 = (char *)&v488 - v103;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v104 - 8);
  v548 = (char *)&v488 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v106);
  v547 = (char *)&v488 - v107;
  *(void *)&long long v719 = v80;
  *((void *)&v719 + 1) = v91;
  *(void *)&long long v720 = v93;
  *((void *)&v720 + 1) = v94;
  uint64_t v108 = type metadata accessor for CanvasLayout();
  unint64_t v109 = v92;
  uint64_t v597 = v108;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v111 = WitnessTable;
  uint64_t v574 = sub_24EE559E0();
  uint64_t v541 = *(void *)(v574 - 8);
  uint64_t v519 = *(void *)(v541 + 64);
  MEMORY[0x270FA5388](v574);
  uint64_t v570 = (uint64_t)&v488 - v112;
  uint64_t v113 = sub_24EE559E0();
  uint64_t v114 = *(void *)(v113 - 8);
  uint64_t v539 = v113;
  uint64_t v540 = v114;
  MEMORY[0x270FA5388](v113);
  uint64_t v581 = (uint64_t)&v488 - v115;
  uint64_t v116 = sub_24EE559E0();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v537 = v116;
  uint64_t v538 = v117;
  MEMORY[0x270FA5388](v116);
  uint64_t v580 = (uint64_t)&v488 - v118;
  uint64_t v119 = sub_24EE559E0();
  uint64_t v120 = *(void *)(v119 - 8);
  uint64_t v533 = v119;
  uint64_t v534 = v120;
  MEMORY[0x270FA5388](v119);
  uint64_t v579 = (uint64_t)&v488 - v121;
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v122 = sub_24EE559E0();
  uint64_t v123 = *(void *)(v122 - 8);
  uint64_t v535 = v122;
  uint64_t v536 = v123;
  MEMORY[0x270FA5388](v122);
  uint64_t v578 = (uint64_t)&v488 - v124;
  uint64_t v573 = *(void *)(v108 - 8);
  uint64_t v518 = *(void *)(v573 + 64);
  MEMORY[0x270FA5388](v125);
  uint64_t v576 = (uint64_t)&v488 - v126;
  uint64_t v127 = sub_24EE57430();
  MEMORY[0x270FA5388](v127 - 8);
  uint64_t v577 = (uint64_t)&v488 - v128;
  uint64_t v601 = v95;
  uint64_t v496 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v495 = (uint64_t *)((char *)&v488 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v131);
  uint64_t v504 = (char *)&v488 - v132;
  uint64_t v604 = v99;
  uint64_t v133 = sub_24EE56240();
  uint64_t v561 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  v560 = (char *)&v488 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v135);
  v556 = (char *)&v488 - v136;
  uint64_t v529 = TupleTypeMetadata3;
  uint64_t v526 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](v137);
  v525 = (char *)&v488 - v138;
  uint64_t v528 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v139);
  v527 = (char *)&v488 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v141);
  v554 = (char *)&v488 - v142;
  unint64_t v143 = v109;
  uint64_t v555 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v144);
  v572 = (char *)&v488 - v145;
  uint64_t v146 = sub_24EE56240();
  uint64_t v559 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  v558 = (char *)&v488 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v148);
  v585 = (char *)&v488 - v149;
  uint64_t v586 = v150;
  uint64_t v590 = v133;
  uint64_t v589 = sub_24EE56240();
  uint64_t v588 = *(void *)(v589 - 8);
  MEMORY[0x270FA5388](v589);
  v587 = (char *)&v488 - v151;
  uint64_t v152 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v719 = v593;
  *((void *)&v719 + 1) = v143;
  *(void *)&long long v720 = v592;
  *((void *)&v720 + 1) = v152;
  uint64_t v153 = type metadata accessor for CanvasSectionLayout();
  uint64_t v154 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  v571 = (char *)&v488 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v156);
  uint64_t v158 = (char *)&v488 - v157;
  __n128 v160 = MEMORY[0x270FA5388](v159);
  uint64_t v162 = (uint64_t)&v488 - v161;
  uint64_t v163 = v606;
  uint64_t v164 = *(void (**)(void, void, __n128))(v606 + 160);
  uint64_t v165 = v608;
  uint64_t v583 = v606 + 160;
  v582 = (void (*)(uint64_t, uint64_t))v164;
  v164(v608, v606, v160);
  CanvasLayout.densityFactor<A>(for:)(v162, v597, v630, v152, (uint64_t *)&v719);
  uint64_t v166 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
  uint64_t v584 = v153;
  v166(v162, v153);
  uint64_t v167 = *((void *)&v719 + 1);
  uint64_t v516 = v719;
  uint64_t v517 = v720;
  uint64_t v168 = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 200))(v165, v163);
  LOBYTE(v162) = sub_24ED4675C(v168);
  swift_bridgeObjectRelease();
  if (v162)
  {
    v582(v608, v606);
    uint64_t v169 = v584;
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v171 = v555;
      uint64_t v172 = v572;
      unint64_t v173 = v630;
      (*(void (**)(char *, char *, uint64_t))(v555 + 32))(v572, v158, v630);
      uint64_t v174 = (void (*)(char *))sub_24EE559D0();
      uint64_t v175 = v525;
      (*(void (**)(char *, char *, unint64_t))(v171 + 16))(v525, v172, v173);
      uint64_t v176 = v529;
      *(void *)&v175[*(int *)(v529 + 48)] = 0;
      (*(void (**)(char *, uint64_t, uint64_t))(v573 + 16))(&v175[*(int *)(v176 + 64)], v596, v597);
      uint64_t v177 = (uint64_t)v527;
      v174(v175);
      swift_release();
      (*(void (**)(char *, uint64_t))(v526 + 8))(v175, v176);
      uint64_t v178 = v554;
      uint64_t v179 = WitnessTable;
      sub_24EC90894(v177);
      uint64_t v180 = *(void (**)(uint64_t, uint64_t))(v528 + 8);
      v180(v177, v179);
      sub_24EC90894(v178);
      uint64_t v181 = v585;
      sub_24EC908D0(v177, v179);
      v180(v177, v179);
      v180((uint64_t)v178, v179);
      (*(void (**)(char *, unint64_t))(v171 + 8))(v572, v173);
    }
    else
    {
      uint64_t v181 = v585;
      sub_24EC909C8(EnumCaseMultiPayload, WitnessTable, MEMORY[0x263F1BA08]);
      v166((uint64_t)v158, v169);
    }
    unint64_t v222 = v635;
    unint64_t v646 = v635;
    uint64_t v647 = MEMORY[0x263F1BA00];
    uint64_t v223 = v586;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v224 = (uint64_t)v558;
    sub_24EC90894(v181);
    uint64_t v225 = swift_getWitnessTable();
    uint64_t v226 = swift_getWitnessTable();
    uint64_t v227 = swift_getWitnessTable();
    uint64_t v644 = v226;
    uint64_t v645 = v227;
    uint64_t v228 = swift_getWitnessTable();
    uint64_t v642 = v225;
    uint64_t v643 = v228;
    uint64_t v229 = swift_getWitnessTable();
    uint64_t v230 = swift_getWitnessTable();
    uint64_t v231 = swift_getWitnessTable();
    uint64_t v640 = v230;
    uint64_t v641 = v231;
    uint64_t v232 = swift_getWitnessTable();
    uint64_t v638 = v229;
    uint64_t v639 = v232;
    uint64_t v636 = swift_getWitnessTable();
    unint64_t v637 = v222;
    swift_getWitnessTable();
    uint64_t v233 = v587;
    sub_24EC908D0(v224, v223);
    uint64_t v234 = *(void (**)(uint64_t, uint64_t))(v559 + 8);
    v234(v224, v223);
    uint64_t v235 = v585;
    uint64_t v236 = v223;
  }
  else
  {
    v585 = a12;
    uint64_t v559 = a10;
    uint64_t v182 = (double *)v571;
    uint64_t v183 = v608;
    uint64_t v184 = v606;
    v582(v608, v606);
    int v185 = swift_getEnumCaseMultiPayload();
    uint64_t v186 = v182;
    uint64_t v187 = v569;
    uint64_t v188 = v568;
    uint64_t v189 = v562;
    switch(v185)
    {
      case 1:
        (*(void (**)(uint64_t, uint64_t))(v184 + 168))(v183, v184);
        uint64_t v592 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 184))(v183, v184);
        (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v184 + 176))(&v684, v183, v184);
        char v683 = v684;
        (*(void (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184);
        uint64_t v309 = v596;
        long long v310 = *(_OWORD *)(v596 + 24);
        long long v719 = *(_OWORD *)(v596 + 8);
        long long v720 = v310;
        uint64_t v680 = v516;
        uint64_t v681 = v167;
        uint64_t v682 = v517;
        uint64_t v311 = v597;
        uint64_t v312 = v596 + *(int *)(v597 + 68);
        uint64_t v313 = *(void (**)(uint64_t, uint64_t, uint64_t))(v520 + 16);
        LODWORD(v599) = *(unsigned __int8 *)(v596 + 40);
        v313(v567, v312, v620);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v534 + 16))(v579, v530, v533);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v538 + 16))(v580, v542, v537);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v540 + 16))(v581, v543, v539);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v536 + 16))(v578, v544, v535);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v514 + 16))(v563, v559, v515);
        uint64_t v314 = v541;
        uint64_t v315 = v574;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v541 + 16))(v570, v575, v574);
        uint64_t v316 = v573;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v573 + 16))(v576, v309, v311);
        unint64_t v317 = (*(unsigned __int8 *)(v314 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v314 + 80);
        unint64_t v318 = (v519 + *(unsigned __int8 *)(v316 + 80) + v317) & ~(unint64_t)*(unsigned __int8 *)(v316 + 80);
        uint64_t v319 = (void *)swift_allocObject();
        v558 = a13;
        uint64_t v320 = v319;
        uint64_t v321 = v620;
        v319[2] = v608;
        v319[3] = v321;
        uint64_t v322 = v633;
        v319[4] = v628;
        v319[5] = v322;
        uint64_t v323 = v629;
        v319[6] = v627;
        v319[7] = v323;
        uint64_t v324 = WitnessTable;
        v319[8] = v618;
        v319[9] = v324;
        v319[10] = v617;
        v319[11] = v184;
        uint64_t v325 = v626;
        v319[12] = v625;
        v319[13] = v325;
        uint64_t v326 = v631;
        v319[14] = v632;
        v319[15] = v326;
        uint64_t v327 = v612;
        v319[16] = v619;
        v319[17] = v327;
        uint64_t v328 = v611;
        v319[18] = v635;
        v319[19] = v328;
        (*(void (**)(char *, uint64_t, uint64_t))(v314 + 32))((char *)v319 + v317, v570, v315);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v316 + 32))((unint64_t)v320 + v318, v576, v597);
        sub_24ED467E4();
        uint64_t v329 = v557;
        sub_24EE559C0();
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v522 + 16))(v566, v585, v523);
        uint64_t v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
        uint64_t v331 = *(void *)(v330 - 8);
        v332 = *(void (**)(char *, uint64_t, uint64_t))(v331 + 16);
        uint64_t v333 = (uint64_t)v547;
        v332(v547, v551, v330);
        uint64_t v334 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v331 + 56);
        v334(v333, 0, 1, v330);
        uint64_t v335 = (uint64_t)v548;
        v332(v548, v552, v330);
        uint64_t v336 = v594;
        v334(v335, 0, 1, v330);
        uint64_t v337 = v545;
        uint64_t v338 = *(void *)(v545 - 8);
        uint64_t v339 = (uint64_t)v549;
        (*(void (**)(char *, uint64_t, uint64_t))(v338 + 16))(v549, v553, v545);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v338 + 56))(v339, 0, 1, v337);
        uint64_t v340 = v550;
        (*(void (**)(char *, char *, uint64_t))(v546 + 16))(v550, v558, v329);
        uint64_t v485 = (uint64_t)v340;
        uint64_t v341 = v497;
        OrthogonalView.init(header:items:footer:metrics:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)(v564, v592, &v683, v577, &v719, &v680, v599, v567, v497, v579, v580, v581, v578, v563, v565, v566, v333, v335, v339,
          v485,
          AssociatedTypeWitness,
          v629,
          v616,
          v628,
          (uint64_t)v633,
          v627,
          v623,
          v618,
          WitnessTable,
          v622,
          v615,
          v600,
          v617,
          v614,
          v620);
        uint64_t v342 = v605;
        uint64_t v343 = swift_getWitnessTable();
        uint64_t v344 = v505;
        sub_24EC90894(v341);
        uint64_t v345 = v513 + 8;
        v346 = *(void (**)(uint64_t, uint64_t))(v513 + 8);
        v346(v341, v342);
        v633 = v346;
        uint64_t v513 = v345;
        sub_24EC90894(v344);
        uint64_t v347 = swift_getWitnessTable();
        uint64_t v348 = (uint64_t)v510;
        sub_24EC909C8(v341, v336, v342);
        v346(v341, v342);
        uint64_t v349 = swift_getWitnessTable();
        uint64_t v350 = swift_getWitnessTable();
        uint64_t v351 = swift_getWitnessTable();
        uint64_t v678 = v350;
        uint64_t v679 = v351;
        uint64_t v352 = swift_getWitnessTable();
        uint64_t v676 = v349;
        uint64_t v677 = v352;
        uint64_t v353 = v598;
        uint64_t v354 = swift_getWitnessTable();
        uint64_t v674 = v347;
        uint64_t v675 = v343;
        uint64_t v355 = v610;
        uint64_t v356 = swift_getWitnessTable();
        uint64_t v357 = (uint64_t)v531;
        sub_24EC909C8(v348, v353, v355);
        (*(void (**)(uint64_t, uint64_t))(v511 + 8))(v348, v355);
        uint64_t v672 = v354;
        uint64_t v673 = v356;
        uint64_t v358 = v604;
        swift_getWitnessTable();
        uint64_t v221 = v556;
        sub_24EC908D0(v357, v358);
        (*(void (**)(uint64_t, uint64_t))(v532 + 8))(v357, v358);
        uint64_t v287 = v505;
        uint64_t v288 = v342;
        goto LABEL_11;
      case 2:
        (*(void (**)(uint64_t, uint64_t))(v184 + 168))(v183, v184);
        uint64_t v592 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 184))(v183, v184);
        (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v184 + 176))(&v684, v183, v184);
        char v683 = v684;
        (*(void (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184);
        uint64_t v237 = v596;
        long long v238 = *(_OWORD *)(v596 + 24);
        long long v719 = *(_OWORD *)(v596 + 8);
        long long v720 = v238;
        uint64_t v680 = v516;
        uint64_t v681 = v167;
        uint64_t v682 = v517;
        uint64_t v239 = v597;
        uint64_t v240 = v596 + *(int *)(v597 + 68);
        uint64_t v241 = *(void (**)(uint64_t, uint64_t, uint64_t))(v520 + 16);
        LODWORD(v599) = *(unsigned __int8 *)(v596 + 40);
        v241(v567, v240, v620);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v534 + 16))(v579, v530, v533);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v538 + 16))(v580, v542, v537);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v540 + 16))(v581, v543, v539);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v536 + 16))(v578, v544, v535);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v514 + 16))(v563, v559, v515);
        uint64_t v242 = v541;
        uint64_t v243 = v574;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v541 + 16))(v570, v575, v574);
        uint64_t v244 = v573;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v573 + 16))(v576, v237, v239);
        unint64_t v245 = (*(unsigned __int8 *)(v242 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80);
        unint64_t v246 = (v519 + *(unsigned __int8 *)(v244 + 80) + v245) & ~(unint64_t)*(unsigned __int8 *)(v244 + 80);
        uint64_t v247 = (void *)swift_allocObject();
        v558 = a13;
        uint64_t v248 = v247;
        uint64_t v249 = v620;
        v247[2] = v608;
        v247[3] = v249;
        uint64_t v250 = v633;
        v247[4] = v628;
        v247[5] = v250;
        uint64_t v251 = v629;
        v247[6] = v627;
        v247[7] = v251;
        uint64_t v252 = WitnessTable;
        v247[8] = v618;
        v247[9] = v252;
        v247[10] = v617;
        v247[11] = v184;
        uint64_t v253 = v626;
        v247[12] = v625;
        v247[13] = v253;
        uint64_t v254 = v631;
        v247[14] = v632;
        v247[15] = v254;
        uint64_t v255 = v612;
        v247[16] = v619;
        v247[17] = v255;
        uint64_t v256 = v611;
        v247[18] = v635;
        v247[19] = v256;
        (*(void (**)(char *, uint64_t, uint64_t))(v242 + 32))((char *)v247 + v245, v570, v243);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v244 + 32))((unint64_t)v248 + v246, v576, v597);
        sub_24ED467E4();
        uint64_t v257 = v557;
        sub_24EE559C0();
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v522 + 16))(v566, v585, v523);
        uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
        uint64_t v259 = *(void *)(v258 - 8);
        uint64_t v260 = *(void (**)(char *, uint64_t, uint64_t))(v259 + 16);
        uint64_t v261 = (uint64_t)v547;
        v260(v547, v551, v258);
        uint64_t v262 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v259 + 56);
        v262(v261, 0, 1, v258);
        uint64_t v263 = (uint64_t)v548;
        v260(v548, v552, v258);
        uint64_t v264 = v594;
        v262(v263, 0, 1, v258);
        uint64_t v265 = v545;
        uint64_t v266 = *(void *)(v545 - 8);
        uint64_t v267 = (uint64_t)v549;
        (*(void (**)(char *, uint64_t, uint64_t))(v266 + 16))(v549, v553, v545);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v266 + 56))(v267, 0, 1, v265);
        uint64_t v268 = v550;
        (*(void (**)(char *, char *, uint64_t))(v546 + 16))(v550, v558, v257);
        uint64_t v484 = (uint64_t)v268;
        uint64_t v269 = v503;
        ListView.init(header:items:footer:metrics:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)(v564, v592, &v683, v577, &v719, &v680, v599, v567, v503, v579, v580, v581, v578, v563, v565, v566, v261, v263, v267,
          v484,
          AssociatedTypeWitness,
          v629,
          v616,
          v628,
          (uint64_t)v633,
          v627,
          v623,
          v618,
          WitnessTable,
          v622,
          v615,
          v600,
          v617,
          v614,
          v620);
        uint64_t v270 = v264;
        uint64_t v271 = swift_getWitnessTable();
        uint64_t v272 = v512;
        sub_24EC90894(v269);
        uint64_t v273 = v524 + 8;
        uint64_t v274 = *(void (**)(uint64_t, uint64_t))(v524 + 8);
        v274(v269, v270);
        v633 = v274;
        uint64_t v524 = v273;
        sub_24EC90894(v272);
        uint64_t v275 = swift_getWitnessTable();
        uint64_t v276 = (uint64_t)v510;
        sub_24EC908D0(v269, v270);
        v274(v269, v270);
        uint64_t v277 = swift_getWitnessTable();
        uint64_t v278 = swift_getWitnessTable();
        uint64_t v279 = swift_getWitnessTable();
        uint64_t v670 = v278;
        uint64_t v671 = v279;
        uint64_t v280 = swift_getWitnessTable();
        uint64_t v668 = v277;
        uint64_t v669 = v280;
        uint64_t v281 = v598;
        uint64_t v282 = swift_getWitnessTable();
        uint64_t v666 = v271;
        uint64_t v667 = v275;
        uint64_t v283 = v610;
        uint64_t v284 = swift_getWitnessTable();
        uint64_t v285 = (uint64_t)v531;
        sub_24EC909C8(v276, v281, v283);
        (*(void (**)(uint64_t, uint64_t))(v511 + 8))(v276, v283);
        uint64_t v664 = v282;
        uint64_t v665 = v284;
        uint64_t v286 = v604;
        swift_getWitnessTable();
        uint64_t v221 = v556;
        sub_24EC908D0(v285, v286);
        (*(void (**)(uint64_t, uint64_t))(v532 + 8))(v285, v286);
        uint64_t v287 = v512;
        uint64_t v288 = v594;
LABEL_11:
        v633(v287, v288);
        (*(void (**)(char *, uint64_t))(*(void *)(v593 - 8) + 8))(v571, v593);
        goto LABEL_12;
      case 3:
        v558 = a13;
        uint64_t v385 = v506;
        (*(void (**)(char *, double *, uint64_t))(v568 + 32))(v506, v182, v569);
        (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v189, v385, v187);
        int v386 = swift_getEnumCaseMultiPayload();
        uint64_t v387 = v596;
        uint64_t v388 = v530;
        uint64_t v390 = v514;
        uint64_t v389 = v515;
        if (v386 == 1)
        {
          uint64_t v391 = v189;
          uint64_t v392 = v502;
          (*(void (**)(char *, char *, uint64_t))(v501 + 32))(v500, v391, v502);
          (*(void (**)(uint64_t, uint64_t))(v184 + 168))(v183, v184);
          uint64_t v593 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 184))(v183, v184);
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v184 + 176))(&v684, v183, v184);
          char v683 = v684;
          (*(void (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184);
          uint64_t v599 = CanvasHorizontalGridLayout.rowCount.getter(v392);
          long long v393 = *(_OWORD *)(v387 + 24);
          long long v719 = *(_OWORD *)(v387 + 8);
          long long v720 = v393;
          uint64_t v680 = v516;
          uint64_t v681 = v167;
          uint64_t v682 = v517;
          uint64_t v394 = v597;
          uint64_t v395 = v387 + *(int *)(v597 + 68);
          uint64_t v396 = *(void (**)(uint64_t, uint64_t, uint64_t))(v520 + 16);
          LODWORD(v592) = *(unsigned __int8 *)(v387 + 40);
          v396(v567, v395, v620);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v534 + 16))(v579, v388, v533);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v538 + 16))(v580, v542, v537);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v540 + 16))(v581, v543, v539);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v536 + 16))(v578, v544, v535);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v390 + 16))(v563, v559, v389);
          uint64_t v397 = v541;
          uint64_t v398 = v570;
          uint64_t v399 = v574;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v541 + 16))(v570, v575, v574);
          uint64_t v400 = v573;
          uint64_t v401 = v387;
          uint64_t v402 = v394;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v573 + 16))(v576, v401, v394);
          unint64_t v403 = (*(unsigned __int8 *)(v397 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v397 + 80);
          unint64_t v404 = (v519 + *(unsigned __int8 *)(v400 + 80) + v403) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80);
          uint64_t v405 = (char *)swift_allocObject();
          uint64_t v406 = v620;
          *((void *)v405 + 2) = v608;
          *((void *)v405 + 3) = v406;
          v407 = v633;
          *((void *)v405 + 4) = v628;
          *((void *)v405 + 5) = v407;
          uint64_t v408 = v629;
          *((void *)v405 + 6) = v627;
          *((void *)v405 + 7) = v408;
          uint64_t v409 = WitnessTable;
          *((void *)v405 + 8) = v618;
          *((void *)v405 + 9) = v409;
          *((void *)v405 + 10) = v617;
          *((void *)v405 + 11) = v184;
          uint64_t v410 = v626;
          *((void *)v405 + 12) = v625;
          *((void *)v405 + 13) = v410;
          uint64_t v411 = v631;
          *((void *)v405 + 14) = v632;
          *((void *)v405 + 15) = v411;
          uint64_t v412 = v612;
          *((void *)v405 + 16) = v619;
          *((void *)v405 + 17) = v412;
          uint64_t v413 = v611;
          *((void *)v405 + 18) = v635;
          *((void *)v405 + 19) = v413;
          (*(void (**)(char *, uint64_t, uint64_t))(v397 + 32))(&v405[v403], v398, v399);
          (*(void (**)(char *, uint64_t, uint64_t))(v400 + 32))(&v405[v404], v576, v402);
          sub_24ED467E4();
          uint64_t v414 = WitnessTable;
          sub_24EE559C0();
          swift_release();
          (*(void (**)(uint64_t, char *, uint64_t))(v522 + 16))(v566, v585, v523);
          uint64_t v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
          uint64_t v416 = *(void *)(v415 - 8);
          v417 = *(void (**)(char *, uint64_t, uint64_t))(v416 + 16);
          uint64_t v418 = (uint64_t)v547;
          v417(v547, v551, v415);
          uint64_t v419 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v416 + 56);
          v419(v418, 0, 1, v415);
          uint64_t v420 = (uint64_t)v548;
          v417(v548, v552, v415);
          v419(v420, 0, 1, v415);
          uint64_t v421 = v414;
          uint64_t v422 = v545;
          uint64_t v423 = *(void *)(v545 - 8);
          uint64_t v424 = (uint64_t)v549;
          (*(void (**)(char *, uint64_t, uint64_t))(v423 + 16))(v549, v553, v545);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v423 + 56))(v424, 0, 1, v422);
          uint64_t v425 = (uint64_t)v550;
          (*(void (**)(char *, char *, uint64_t))(v546 + 16))(v550, v558, v557);
          uint64_t v426 = v490;
          HorizontalGridView.init(header:items:footer:metrics:rowCount:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)(v564, v593, &v683, v577, v599, &v719, &v680, v592, v490, v567, v579, v580, v581, v578, v563, v565, v566, v418, v420,
            v424,
            v425,
            AssociatedTypeWitness,
            v629,
            v616,
            v628,
            (uint64_t)v633,
            v627,
            v623,
            v618,
            v421,
            v622,
            v615,
            v600,
            v617,
            v614,
            v620);
          uint64_t v427 = v595;
          swift_getWitnessTable();
          uint64_t v428 = v489;
          sub_24EC90894(v426);
          uint64_t v429 = *(void (**)(uint64_t, uint64_t))(v491 + 8);
          v429(v426, v427);
          sub_24EC90894(v428);
          swift_getWitnessTable();
          uint64_t v430 = v509;
          sub_24EC908D0(v426, v427);
          v429(v426, v427);
          v429((uint64_t)v428, v427);
          (*(void (**)(char *, uint64_t))(v501 + 8))(v500, v502);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v184 + 168))(v183, v184);
          uint64_t v593 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 184))(v183, v184);
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v184 + 176))(&v684, v183, v184);
          char v683 = v684;
          (*(void (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184);
          long long v431 = *(_OWORD *)(v387 + 24);
          long long v719 = *(_OWORD *)(v387 + 8);
          long long v720 = v431;
          uint64_t v680 = v516;
          uint64_t v681 = v167;
          uint64_t v682 = v517;
          uint64_t v432 = v389;
          uint64_t v433 = v597;
          uint64_t v434 = v387 + *(int *)(v597 + 68);
          unint64_t v435 = *(void (**)(uint64_t, uint64_t, uint64_t))(v520 + 16);
          LODWORD(v599) = *(unsigned __int8 *)(v387 + 40);
          v435(v567, v434, v620);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v534 + 16))(v579, v388, v533);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v538 + 16))(v580, v542, v537);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v540 + 16))(v581, v543, v539);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v536 + 16))(v578, v544, v535);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v390 + 16))(v563, v559, v432);
          uint64_t v436 = v541;
          uint64_t v437 = v570;
          uint64_t v438 = v574;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v541 + 16))(v570, v575, v574);
          uint64_t v439 = v573;
          uint64_t v440 = v387;
          uint64_t v441 = v433;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v573 + 16))(v576, v440, v433);
          unint64_t v442 = (*(unsigned __int8 *)(v436 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v436 + 80);
          unint64_t v443 = (v519 + *(unsigned __int8 *)(v439 + 80) + v442) & ~(unint64_t)*(unsigned __int8 *)(v439 + 80);
          uint64_t v444 = (char *)swift_allocObject();
          uint64_t v445 = v620;
          *((void *)v444 + 2) = v608;
          *((void *)v444 + 3) = v445;
          uint64_t v446 = v633;
          *((void *)v444 + 4) = v628;
          *((void *)v444 + 5) = v446;
          uint64_t v447 = v629;
          *((void *)v444 + 6) = v627;
          *((void *)v444 + 7) = v447;
          uint64_t v448 = WitnessTable;
          *((void *)v444 + 8) = v618;
          *((void *)v444 + 9) = v448;
          *((void *)v444 + 10) = v617;
          *((void *)v444 + 11) = v184;
          uint64_t v449 = v626;
          *((void *)v444 + 12) = v625;
          *((void *)v444 + 13) = v449;
          uint64_t v450 = v631;
          *((void *)v444 + 14) = v632;
          *((void *)v444 + 15) = v450;
          uint64_t v451 = v612;
          *((void *)v444 + 16) = v619;
          *((void *)v444 + 17) = v451;
          uint64_t v452 = v611;
          *((void *)v444 + 18) = v635;
          *((void *)v444 + 19) = v452;
          (*(void (**)(char *, uint64_t, uint64_t))(v436 + 32))(&v444[v442], v437, v438);
          (*(void (**)(char *, uint64_t, uint64_t))(v439 + 32))(&v444[v443], v576, v441);
          sub_24ED467E4();
          uint64_t v453 = WitnessTable;
          sub_24EE559C0();
          swift_release();
          (*(void (**)(uint64_t, char *, uint64_t))(v522 + 16))(v566, v585, v523);
          uint64_t v454 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
          uint64_t v455 = *(void *)(v454 - 8);
          v456 = *(void (**)(char *, uint64_t, uint64_t))(v455 + 16);
          uint64_t v457 = (uint64_t)v547;
          v456(v547, v551, v454);
          uint64_t v458 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v455 + 56);
          v458(v457, 0, 1, v454);
          uint64_t v459 = (uint64_t)v548;
          v456(v548, v552, v454);
          v458(v459, 0, 1, v454);
          uint64_t v460 = v545;
          uint64_t v461 = *(void *)(v545 - 8);
          uint64_t v462 = (uint64_t)v549;
          (*(void (**)(char *, uint64_t, uint64_t))(v461 + 16))(v549, v553, v545);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v461 + 56))(v462, 0, 1, v460);
          uint64_t v463 = (uint64_t)v550;
          (*(void (**)(char *, char *, uint64_t))(v546 + 16))(v550, v558, v557);
          uint64_t v464 = v493;
          VerticalGridView.init(header:items:footer:metrics:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)(v564, v593, &v683, v577, &v719, &v680, v599, v567, v493, v579, v580, v581, v578, v563, v565, v566, v457, v459, v462,
            v463,
            AssociatedTypeWitness,
            v629,
            v616,
            v628,
            (uint64_t)v633,
            v627,
            v623,
            v618,
            v453,
            v622,
            v615,
            v600,
            v617,
            v614,
            v620);
          uint64_t v465 = v607;
          swift_getWitnessTable();
          uint64_t v466 = v492;
          sub_24EC90894(v464);
          uint64_t v467 = *(void (**)(uint64_t, uint64_t))(v494 + 8);
          v467(v464, v465);
          sub_24EC90894(v466);
          uint64_t v468 = v595;
          swift_getWitnessTable();
          uint64_t v430 = v509;
          sub_24EC909C8(v464, v468, v465);
          v467(v464, v465);
          v467((uint64_t)v466, v465);
          (*(void (**)(char *, uint64_t))(v568 + 8))(v562, v569);
        }
        uint64_t v469 = swift_getWitnessTable();
        uint64_t v470 = swift_getWitnessTable();
        uint64_t v662 = v469;
        uint64_t v663 = v470;
        uint64_t v471 = v602;
        uint64_t v472 = swift_getWitnessTable();
        uint64_t v473 = (uint64_t)v498;
        sub_24EC90894(v430);
        uint64_t v474 = v601;
        uint64_t v475 = swift_getWitnessTable();
        uint64_t v476 = (uint64_t)v507;
        sub_24EC909C8(v473, v474, v471);
        v633 = *(void (**)(void, void))(v499 + 8);
        v633(v473, v471);
        uint64_t v660 = v475;
        uint64_t v661 = v472;
        uint64_t v477 = v598;
        uint64_t v478 = swift_getWitnessTable();
        uint64_t v479 = swift_getWitnessTable();
        uint64_t v480 = swift_getWitnessTable();
        uint64_t v658 = v479;
        uint64_t v659 = v480;
        uint64_t v481 = swift_getWitnessTable();
        uint64_t v482 = (uint64_t)v531;
        sub_24EC908D0(v476, v477);
        (*(void (**)(uint64_t, uint64_t))(v508 + 8))(v476, v477);
        uint64_t v656 = v478;
        uint64_t v657 = v481;
        uint64_t v483 = v604;
        swift_getWitnessTable();
        uint64_t v221 = v556;
        sub_24EC908D0(v482, v483);
        (*(void (**)(uint64_t, uint64_t))(v532 + 8))(v482, v483);
        v633(v509, v471);
        (*(void (**)(char *, uint64_t))(v568 + 8))(v506, v569);
        uint64_t v359 = MEMORY[0x263F1BA00];
        goto LABEL_13;
      case 4:
        uint64_t v289 = v555;
        uint64_t v290 = v572;
        unint64_t v291 = v630;
        (*(void (**)(char *, double *, uint64_t))(v555 + 32))(v572, v186, v630);
        uint64_t v292 = (void (*)(char *))sub_24EE559D0();
        v293 = v525;
        (*(void (**)(char *, char *, unint64_t))(v289 + 16))(v525, v290, v291);
        uint64_t v294 = v529;
        *(void *)&v293[*(int *)(v529 + 48)] = 0;
        (*(void (**)(char *, uint64_t, uint64_t))(v573 + 16))(&v293[*(int *)(v294 + 64)], v596, v597);
        uint64_t v295 = (uint64_t)v527;
        v292(v293);
        swift_release();
        (*(void (**)(char *, uint64_t))(v526 + 8))(v293, v294);
        v296 = v554;
        uint64_t v297 = WitnessTable;
        sub_24EC90894(v295);
        v633 = *(void (**)(void, void))(v528 + 8);
        v633(v295, v297);
        sub_24EC90894(v296);
        uint64_t v298 = swift_getWitnessTable();
        uint64_t v299 = swift_getWitnessTable();
        uint64_t v300 = swift_getWitnessTable();
        uint64_t v717 = v299;
        uint64_t v718 = v300;
        uint64_t v301 = swift_getWitnessTable();
        uint64_t v715 = v298;
        uint64_t v716 = v301;
        uint64_t v302 = swift_getWitnessTable();
        uint64_t v303 = swift_getWitnessTable();
        uint64_t v304 = swift_getWitnessTable();
        uint64_t v713 = v303;
        uint64_t v714 = v304;
        uint64_t v305 = swift_getWitnessTable();
        uint64_t v711 = v302;
        uint64_t v712 = v305;
        uint64_t v306 = v604;
        swift_getWitnessTable();
        uint64_t v221 = v556;
        sub_24EC909C8(v295, v306, v297);
        uint64_t v307 = v295;
        uint64_t v308 = (void (*)(char *, uint64_t))v633;
        v633(v307, v297);
        v308(v554, v297);
        (*(void (**)(char *, uint64_t))(v555 + 8))(v572, v630);
        goto LABEL_12;
      default:
        double v190 = *v182;
        double v191 = v182[1];
        uint64_t v618 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 184))(v183, v184);
        (*(void (**)(uint64_t, uint64_t))(v184 + 192))(v183, v184);
        uint64_t v192 = (double *)v596;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v573 + 16))(v576, v596, v597);
        double v193 = *v192;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v536 + 16))(v578, v544, v535);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v534 + 16))(v579, v530, v533);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v538 + 16))(v580, v542, v537);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v540 + 16))(v581, v543, v539);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v541 + 16))(v570, v575, v574);
        uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
        uint64_t v195 = *(void *)(v194 - 8);
        uint64_t v196 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
        uint64_t v197 = (uint64_t)v547;
        v196(v547, v551, v194);
        uint64_t v198 = v550;
        unint64_t v199 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v195 + 56);
        v199(v197, 0, 1, v194);
        uint64_t v200 = (uint64_t)v548;
        v196(v548, v552, v194);
        v199(v200, 0, 1, v194);
        uint64_t v201 = v545;
        uint64_t v202 = *(void *)(v545 - 8);
        uint64_t v203 = (uint64_t)v549;
        (*(void (**)(char *, uint64_t, uint64_t))(v202 + 16))(v549, v553, v545);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v202 + 56))(v203, 0, 1, v201);
        (*(void (**)(char *, char *, uint64_t))(v546 + 16))(v198, a13, v557);
        *((void *)&v487 + 1) = v629;
        uint64_t v486 = (uint64_t)v198;
        *(void *)&long long v487 = AssociatedTypeWitness;
        uint64_t v204 = v495;
        CarouselView.init(items:metrics:layout:aspectRatio:pageControlSpacing:actionButtonViewBuilder:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:viewDescriptorBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)(v618, v577, v576, v578, v579, v580, v581, v570, v495, v190, v191, v193, v197, v200, v203, v486, v487);
        uint64_t v205 = v601;
        uint64_t v206 = swift_getWitnessTable();
        uint64_t v207 = v504;
        sub_24EC90894(v204);
        uint64_t v208 = *(void (**)(void *, uint64_t))(v496 + 8);
        v208(v204, v205);
        uint64_t v209 = v208;
        v633 = (void (*)(void, void))v208;
        sub_24EC90894(v207);
        uint64_t v210 = swift_getWitnessTable();
        uint64_t v211 = swift_getWitnessTable();
        uint64_t v654 = v210;
        uint64_t v655 = v211;
        uint64_t v212 = swift_getWitnessTable();
        uint64_t v213 = (uint64_t)v507;
        sub_24EC908D0((uint64_t)v204, v205);
        v209(v204, v205);
        uint64_t v652 = v206;
        uint64_t v653 = v212;
        uint64_t v214 = v598;
        uint64_t v215 = swift_getWitnessTable();
        uint64_t v216 = swift_getWitnessTable();
        uint64_t v217 = swift_getWitnessTable();
        uint64_t v650 = v216;
        uint64_t v651 = v217;
        uint64_t v218 = swift_getWitnessTable();
        uint64_t v219 = (uint64_t)v531;
        sub_24EC908D0(v213, v214);
        (*(void (**)(uint64_t, uint64_t))(v508 + 8))(v213, v214);
        uint64_t v648 = v215;
        uint64_t v649 = v218;
        uint64_t v220 = v604;
        swift_getWitnessTable();
        uint64_t v221 = v556;
        sub_24EC908D0(v219, v220);
        (*(void (**)(uint64_t, uint64_t))(v532 + 8))(v219, v220);
        v633(v504, v205);
LABEL_12:
        uint64_t v359 = MEMORY[0x263F1BA00];
LABEL_13:
        uint64_t v360 = swift_getWitnessTable();
        uint64_t v361 = swift_getWitnessTable();
        uint64_t v362 = swift_getWitnessTable();
        uint64_t v709 = v361;
        uint64_t v710 = v362;
        uint64_t v363 = swift_getWitnessTable();
        uint64_t v707 = v360;
        uint64_t v708 = v363;
        uint64_t v364 = swift_getWitnessTable();
        uint64_t v365 = swift_getWitnessTable();
        uint64_t v366 = swift_getWitnessTable();
        uint64_t v705 = v365;
        uint64_t v706 = v366;
        uint64_t v367 = swift_getWitnessTable();
        uint64_t v703 = v364;
        uint64_t v704 = v367;
        uint64_t v701 = swift_getWitnessTable();
        unint64_t v368 = v635;
        unint64_t v702 = v635;
        uint64_t v369 = v590;
        swift_getWitnessTable();
        uint64_t v370 = (uint64_t)v560;
        sub_24EC90894(v221);
        unint64_t v699 = v368;
        uint64_t v700 = v359;
        uint64_t v371 = v586;
        swift_getWitnessTable();
        uint64_t v233 = v587;
        sub_24EC909C8(v370, v371, v369);
        uint64_t v234 = *(void (**)(uint64_t, uint64_t))(v561 + 8);
        v234(v370, v369);
        uint64_t v235 = v221;
        uint64_t v236 = v369;
        break;
    }
  }
  v234((uint64_t)v235, v236);
  unint64_t v372 = v635;
  unint64_t v697 = v635;
  uint64_t v698 = MEMORY[0x263F1BA00];
  uint64_t v373 = swift_getWitnessTable();
  uint64_t v374 = swift_getWitnessTable();
  uint64_t v375 = swift_getWitnessTable();
  uint64_t v376 = swift_getWitnessTable();
  uint64_t v695 = v375;
  uint64_t v696 = v376;
  uint64_t v377 = swift_getWitnessTable();
  uint64_t v693 = v374;
  uint64_t v694 = v377;
  uint64_t v378 = swift_getWitnessTable();
  uint64_t v379 = swift_getWitnessTable();
  uint64_t v380 = swift_getWitnessTable();
  uint64_t v691 = v379;
  uint64_t v692 = v380;
  uint64_t v381 = swift_getWitnessTable();
  uint64_t v689 = v378;
  uint64_t v690 = v381;
  uint64_t v687 = swift_getWitnessTable();
  unint64_t v688 = v372;
  uint64_t v382 = swift_getWitnessTable();
  uint64_t v685 = v373;
  uint64_t v686 = v382;
  uint64_t v383 = v589;
  swift_getWitnessTable();
  sub_24EC90894(v233);
  return (*(uint64_t (**)(char *, uint64_t))(v588 + 8))(v233, v383);
}

uint64_t sub_24ED46418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v38 = a4;
  uint64_t v34 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v40 = a3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v42 = a10;
  uint64_t v18 = type metadata accessor for CanvasLayout();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v35 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v21 = (char *)&v32 - v20;
  uint64_t v22 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v32 - v27;
  sub_24EE559E0();
  uint64_t v33 = (void (*)(char *))sub_24EE559D0();
  uint64_t v29 = *(void *)(v36 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  (*(void (**)(char *))(*(void *)(AssociatedTypeWitness - 8) + 16))(v21);
  *(void *)&v21[*(int *)(TupleTypeMetadata3 + 48)] = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(&v21[*(int *)(TupleTypeMetadata3 + 64)], v37, v18);
  v33(v21);
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, TupleTypeMetadata3);
  sub_24EC90894(v25);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  v30(v25, a7);
  sub_24EC90894(v28);
  return ((uint64_t (*)(char *, uint64_t))v30)(v28, a7);
}

uint64_t sub_24ED4675C(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  sub_24EE57870();
  sub_24EE57880();
  unint64_t v2 = sub_24EE578B0() & ~(-1 << *(unsigned char *)(a1 + 32));
  return (*(void *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v2) & 1;
}

unint64_t sub_24ED467E4()
{
  unint64_t result = qword_26B1DBA10;
  if (!qword_26B1DBA10)
  {
    sub_24EE55940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DBA10);
  }
  return result;
}

uint64_t sub_24ED46840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 88);
  uint64_t v14 = *(void *)(v2 + 80);
  uint64_t v15 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(v2 + 96);
  long long v12 = *(_OWORD *)(v2 + 120);
  long long v13 = *(_OWORD *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 144);
  uint64_t v11 = *(void *)(v2 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasLayout();
  swift_getTupleTypeMetadata3();
  uint64_t v9 = *(void *)(sub_24EE559E0() - 8);
  return sub_24ED46418(a1, v2+ ((((*(unsigned __int8 *)(v9 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 64)+ *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), v3, a2, v16, v15, v4, v14, v5, v6, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, v7);
}

uint64_t CanvasItemDescriptor.init(identifier:content:contextMenu:metrics:redactionReasons:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, uint64_t a7)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a6, a1, a7);
  uint64_t v8 = (int *)type metadata accessor for CanvasItemDescriptor();
  uint64_t v9 = a6 + v8[33];
  uint64_t v10 = type metadata accessor for CanvasItemContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  uint64_t v11 = a6 + v8[34];
  uint64_t v12 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  uint64_t v13 = a6 + v8[35];
  uint64_t v14 = sub_24EE57430();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *(void *)(a6 + v8[36]) = a5;
  return result;
}

uint64_t type metadata accessor for CanvasItemDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t CanvasItemDescriptor.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 132);
  uint64_t v5 = type metadata accessor for CanvasItemContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t CanvasItemDescriptor.contextMenu.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 136);
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CanvasItemDescriptor.metrics.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 140);
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CanvasItemDescriptor.redactionReasons.getter(uint64_t a1)
{
  sub_24ED48EF8(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24ED46DF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D747865746E6F63 && a2 == 0xEB00000000756E65 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C4C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_24ED47034(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x4D747865746E6F63;
      break;
    case 3:
      unint64_t result = 0x7363697274656DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24ED470F4(char *a1, char *a2)
{
  return sub_24EC97258(*a1, *a2);
}

uint64_t sub_24ED47148()
{
  return sub_24EC974A4();
}

uint64_t sub_24ED47198()
{
  return sub_24EC97268();
}

uint64_t sub_24ED471E0()
{
  return sub_24EE578B0();
}

unint64_t sub_24ED47248()
{
  return sub_24ED47034(*v0);
}

uint64_t sub_24ED47298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED46DF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED472F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EC996F4();
  *a1 = result;
  return result;
}

uint64_t sub_24ED47344(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED47398(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t _s15FitnessCanvasUI0B14ItemDescriptorV10identifierq1_vg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2);
}

uint64_t sub_24ED47434(uint64_t a1)
{
  sub_24ED48EF8(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CanvasItemDescriptor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 120);
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  uint64_t v24 = v6;
  uint64_t v37 = v6;
  uint64_t v38 = v32;
  v22[1] = v8;
  uint64_t v39 = v8;
  uint64_t v40 = v7;
  uint64_t v28 = v7;
  uint64_t v27 = v9;
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  uint64_t v26 = v10;
  long long v13 = *(_OWORD *)(a2 + 80);
  long long v31 = *(_OWORD *)(a2 + 96);
  long long v23 = v13;
  long long v43 = v13;
  long long v44 = v31;
  v22[0] = v12;
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  uint64_t v25 = v11;
  type metadata accessor for CanvasItemDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v14 = sub_24EE577C0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v22 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v14;
  uint64_t v19 = v33;
  sub_24EE578D0();
  LOBYTE(v35) = 0;
  uint64_t v20 = v34;
  sub_24EE577B0();
  if (!v20)
  {
    char v47 = 1;
    uint64_t v35 = v30;
    uint64_t v36 = v29;
    uint64_t v37 = v28;
    uint64_t v38 = v27;
    uint64_t v39 = v26;
    uint64_t v40 = v25;
    type metadata accessor for CanvasItemContent();
    swift_getWitnessTable();
    sub_24EE577B0();
    LOBYTE(v35) = 2;
    sub_24EE57760();
    LOBYTE(v35) = 3;
    sub_24EE57760();
    uint64_t v35 = *(void *)(v19 + *(int *)(a2 + 144));
    char v47 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE538);
    sub_24ED48F70(&qword_26B1DE540, (void (*)(void))sub_24ED48F1C);
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v18);
}

uint64_t CanvasItemDescriptor.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v73 = a6;
  uint64_t v79 = (void *)a1;
  uint64_t v53 = a9;
  uint64_t v80 = a15;
  uint64_t v77 = a13;
  uint64_t v78 = a14;
  uint64_t v75 = a12;
  uint64_t v76 = a16;
  uint64_t v74 = a11;
  uint64_t v58 = sub_24EE57430();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v54 = (char *)&v52 - v22;
  uint64_t v56 = sub_24EE57430();
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v64 = (char *)&v52 - v23;
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v70 = a3;
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v68 = a7;
  uint64_t v24 = a8;
  uint64_t v69 = a8;
  uint64_t v71 = a10;
  uint64_t v25 = v76;
  uint64_t v85 = a10;
  uint64_t v86 = v76;
  uint64_t v60 = type metadata accessor for CanvasItemContent();
  uint64_t v55 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v63 = (char *)&v52 - v26;
  uint64_t v61 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v66 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v29 = v73;
  uint64_t v85 = v73;
  uint64_t v86 = a7;
  uint64_t v87 = v24;
  uint64_t v88 = a10;
  uint64_t v30 = v74;
  uint64_t v31 = v75;
  uint64_t v89 = v74;
  uint64_t v90 = v75;
  uint64_t v91 = v77;
  unint64_t v92 = v78;
  uint64_t v93 = v80;
  uint64_t v94 = v25;
  type metadata accessor for CanvasItemDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v67 = sub_24EE57730();
  uint64_t v62 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v33 = (char *)&v52 - v32;
  uint64_t v81 = a2;
  uint64_t v82 = v70;
  uint64_t v65 = a4;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v70 = a5;
  uint64_t v85 = v29;
  uint64_t v86 = v68;
  uint64_t v87 = v69;
  uint64_t v88 = v71;
  uint64_t v89 = v30;
  uint64_t v90 = v31;
  uint64_t v34 = v79;
  uint64_t v91 = v77;
  unint64_t v92 = v78;
  uint64_t v93 = v80;
  uint64_t v94 = v76;
  uint64_t v35 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v52 - v37;
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  uint64_t v78 = v33;
  uint64_t v39 = v72;
  sub_24EE578C0();
  if (v39) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  }
  uint64_t v40 = v63;
  uint64_t v72 = v36;
  uint64_t v41 = v64;
  uint64_t v77 = v38;
  LOBYTE(v81) = 0;
  uint64_t v42 = v70;
  sub_24EE57710();
  uint64_t v76 = v35;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v77, v66, v42);
  LOBYTE(v81) = 1;
  uint64_t v43 = v60;
  swift_getWitnessTable();
  long long v44 = v40;
  sub_24EE57710();
  uint64_t v45 = v76;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v77[*(int *)(v76 + 132)], v44, v43);
  LOBYTE(v81) = 2;
  sub_24EE576C0();
  uint64_t v46 = v45;
  uint64_t v47 = *(int *)(v45 + 136);
  uint64_t v48 = v77;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v77[v47], v41, v56);
  LOBYTE(v81) = 3;
  uint64_t v49 = v54;
  sub_24EE576C0();
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v48[*(int *)(v46 + 140)], v49, v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE538);
  char v95 = 4;
  sub_24ED48F70(&qword_269965780, (void (*)(void))sub_24ED48FE0);
  sub_24EE57710();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v78, v67);
  *(void *)&v48[*(int *)(v46 + 144)] = v81;
  uint64_t v50 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v53, v48, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v48, v46);
}

uint64_t sub_24ED481F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CanvasItemDescriptor.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 64), a3, *(void *)(a2 + 72), *(void *)(a2 + 80), *(void *)(a2 + 88), *(char **)(a2 + 96), *(char **)(a2 + 104), *(void *)(a2 + 112), *(void *)(a2 + 120));
}

uint64_t sub_24ED48240(void *a1, uint64_t a2)
{
  return CanvasItemDescriptor.encode(to:)(a1, a2);
}

uint64_t CanvasItemDescriptor.hash(into:)(uint64_t a1, uint64_t a2)
{
  sub_24EE57000();
  uint64_t v5 = (void *)type metadata accessor for CanvasItemContent();
  CanvasItemContent.hash(into:)(a1, v5);
  sub_24EE57430();
  sub_24EE57440();
  sub_24EE57430();
  sub_24EE57440();
  uint64_t v6 = *(void *)(v2 + *(int *)(a2 + 144));
  swift_bridgeObjectRetain();
  sub_24ECC2B90(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t static CanvasItemDescriptor.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v114 = a4;
  uint64_t v115 = a8;
  uint64_t v113 = a3;
  uint64_t v117 = a2;
  uint64_t v105 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v97 = (char *)v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v99 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v23 = (char *)v91 - v22;
  uint64_t v104 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v98 = (char *)v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v108 = (char *)v91 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v103 = (char *)v91 - v29;
  uint64_t v111 = *((void *)a5 - 1);
  MEMORY[0x270FA5388](v30);
  uint64_t v100 = (char *)v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = a5;
  uint64_t v32 = sub_24EE57430();
  uint64_t v112 = swift_getTupleTypeMetadata2();
  uint64_t v102 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  unint64_t v109 = (char *)v91 - v33;
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v101 = (char *)v91 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v110 = (char *)v91 - v38;
  MEMORY[0x270FA5388](v39);
  uint64_t v107 = (char *)v91 - v40;
  uint64_t v41 = v117;
  if ((sub_24EE57040() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v95 = v32;
  uint64_t v96 = v34;
  uint64_t v93 = v23;
  uint64_t v94 = v21;
  uint64_t v42 = v113;
  uint64_t v43 = v114;
  uint64_t v118 = v113;
  uint64_t v119 = v114;
  uint64_t v120 = v116;
  uint64_t v121 = a6;
  uint64_t v92 = a7;
  uint64_t v44 = v115;
  uint64_t v122 = a7;
  uint64_t v123 = v115;
  uint64_t v124 = a9;
  uint64_t v125 = a10;
  v91[2] = a11;
  uint64_t v126 = a11;
  uint64_t v127 = a12;
  uint64_t v128 = a13;
  uint64_t v129 = a14;
  v91[1] = a15;
  uint64_t v130 = a15;
  uint64_t v131 = a16;
  uint64_t v45 = type metadata accessor for CanvasItemDescriptor();
  if ((static CanvasItemContent.== infix(_:_:)(a1 + *(int *)(v45 + 132), v41 + *(int *)(v45 + 132), v42, v43, v44, a9, a10, a16) & 1) == 0)goto LABEL_16; {
  uint64_t v46 = *(int *)(v45 + 136);
  }
  uint64_t v114 = a1;
  uint64_t v47 = a1 + v46;
  uint64_t v48 = v45;
  uint64_t v49 = v96;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
  uint64_t v51 = v107;
  uint64_t v52 = v95;
  v50(v107, v47, v95);
  uint64_t v53 = v41 + *(int *)(v48 + 136);
  uint64_t v54 = v110;
  v50(v110, v53, v52);
  uint64_t v55 = v109;
  uint64_t v56 = &v109[*(int *)(v112 + 48)];
  v50(v109, (uint64_t)v51, v52);
  uint64_t v115 = (uint64_t)v56;
  v50(v56, (uint64_t)v54, v52);
  uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v111 + 48);
  if (v57((uint64_t)v55, 1, v116) != 1)
  {
    uint64_t v61 = v101;
    v50(v101, (uint64_t)v55, v52);
    uint64_t v62 = v115;
    int v63 = v57(v115, 1, v116);
    uint64_t v60 = v108;
    if (v63 != 1)
    {
      uint64_t v65 = v111;
      uint64_t v66 = v100;
      uint64_t v67 = v116;
      (*(void (**)(char *, uint64_t, char *))(v111 + 32))(v100, v62, v116);
      LODWORD(v115) = sub_24EE57040();
      uint64_t v68 = *(void (**)(char *, char *))(v65 + 8);
      v68(v66, v67);
      uint64_t v69 = *(void (**)(char *, uint64_t))(v96 + 8);
      v69(v110, v52);
      v69(v51, v52);
      v68(v61, v67);
      v69(v109, v52);
      if ((v115 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_10;
    }
    uint64_t v64 = *(void (**)(char *, uint64_t))(v96 + 8);
    v64(v110, v52);
    v64(v51, v52);
    (*(void (**)(char *, char *))(v111 + 8))(v61, v116);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v112);
    goto LABEL_16;
  }
  uint64_t v58 = *(void (**)(char *, uint64_t))(v49 + 8);
  v58(v54, v52);
  v58(v51, v52);
  int v59 = v57(v115, 1, v116);
  uint64_t v60 = v108;
  if (v59 != 1) {
    goto LABEL_8;
  }
  v58(v55, v52);
LABEL_10:
  uint64_t v70 = v114 + *(int *)(v48 + 140);
  uint64_t v71 = v48;
  uint64_t v72 = v104;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
  uint64_t v74 = v103;
  uint64_t v75 = v94;
  v73(v103, v70, v94);
  uint64_t v115 = v71;
  v73(v60, v117 + *(int *)(v71 + 140), v75);
  uint64_t v76 = v93;
  uint64_t v77 = &v93[*(int *)(TupleTypeMetadata2 + 48)];
  v73(v93, (uint64_t)v74, v75);
  uint64_t v116 = v77;
  v73(v77, (uint64_t)v60, v75);
  uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
  uint64_t v79 = v92;
  if (v78(v76, 1, v92) == 1)
  {
    uint64_t v80 = *(void (**)(char *, uint64_t))(v72 + 8);
    v80(v60, v75);
    v80(v74, v75);
    if (v78(v116, 1, v79) == 1)
    {
      v80(v76, v75);
LABEL_19:
      char v84 = sub_24ECC277C(*(void *)(v114 + *(int *)(v115 + 144)), *(void *)(v117 + *(int *)(v115 + 144)));
      return v84 & 1;
    }
    goto LABEL_15;
  }
  uint64_t v81 = v98;
  v73(v98, (uint64_t)v76, v75);
  uint64_t v82 = v116;
  if (v78(v116, 1, v79) == 1)
  {
    uint64_t v83 = *(void (**)(char *, uint64_t))(v104 + 8);
    v83(v108, v75);
    v83(v103, v75);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v81, v79);
LABEL_15:
    (*(void (**)(char *, uint64_t))(v99 + 8))(v76, TupleTypeMetadata2);
    goto LABEL_16;
  }
  uint64_t v86 = v105;
  uint64_t v87 = v97;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v97, v82, v79);
  char v88 = sub_24EE57040();
  uint64_t v89 = *(void (**)(char *, uint64_t))(v86 + 8);
  v89(v87, v79);
  uint64_t v90 = *(void (**)(char *, uint64_t))(v104 + 8);
  v90(v108, v75);
  v90(v103, v75);
  v89(v81, v79);
  v90(v76, v75);
  if (v88) {
    goto LABEL_19;
  }
LABEL_16:
  char v84 = 0;
  return v84 & 1;
}

uint64_t CanvasItemDescriptor.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  CanvasItemDescriptor.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ED48E68(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  CanvasItemDescriptor.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ED48EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CanvasItemDescriptor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(char **)(a3 + 32), *(void *)(a3 + 40), *(void *)(a3 + 48), *(void *)(a3 + 56), *(void *)(a3 + 64), *(void *)(a3 + 72), *(void *)(a3 + 80), *(void *)(a3 + 88), *(void *)(a3 + 96), *(void *)(a3 + 104), *(void *)(a3 + 112), *(void *)(a3 + 120)) & 1;
}

uint64_t sub_24ED48EF8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 144));
}

uint64_t type metadata accessor for CanvasItemDescriptor.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ED48F1C()
{
  unint64_t result = qword_26B1DCE60;
  if (!qword_26B1DCE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE60);
  }
  return result;
}

uint64_t sub_24ED48F70(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE538);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ED48FE0()
{
  unint64_t result = qword_269965788;
  if (!qword_269965788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965788);
  }
  return result;
}

uint64_t sub_24ED49034(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 64);
}

uint64_t sub_24ED4903C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 72);
}

uint64_t sub_24ED49044(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 80);
}

uint64_t sub_24ED4904C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_24ED49054(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_24ED4905C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_24ED49064(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_24ED4906C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_24ED49074(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_24ED49114()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of CanvasItemDescriptorProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CanvasItemDescriptorProtocol.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of CanvasItemDescriptorProtocol.contextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of CanvasItemDescriptorProtocol.metrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of CanvasItemDescriptorProtocol.redactionReasons.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t sub_24ED49194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 136);
}

uint64_t sub_24ED4919C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CanvasItemContent();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24EE57430();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_24EE57430();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_24ED49310(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v320 = a3[5];
  uint64_t v355 = *(void *)(v320 - 8);
  uint64_t v326 = *(void *)(v355 + 64);
  uint64_t v315 = a3[3];
  uint64_t v351 = *(void *)(v315 - 8);
  uint64_t v316 = v351;
  int v338 = *(_DWORD *)(v351 + 80);
  uint64_t v4 = v338;
  uint64_t v317 = sub_24EE55880();
  uint64_t v5 = *(void *)(v317 - 8);
  int v336 = *(_DWORD *)(v5 + 80);
  uint64_t v6 = v336;
  uint64_t v313 = a3[2];
  uint64_t v345 = *(void *)(v313 - 8);
  uint64_t v357 = v345;
  int v334 = *(_DWORD *)(v345 + 80);
  uint64_t v7 = sub_24EE55960();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v284 = v8;
  uint64_t v285 = v7;
  unint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v310 = a3[7];
  uint64_t v10 = *(void *)(v310 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v304 = v338 + 248;
  unint64_t v12 = *(void *)(v351 + 64);
  unint64_t v13 = v12 + v336;
  uint64_t v306 = v13 + 1 + ((v4 + 248) & ~v4);
  uint64_t v352 = v5;
  unint64_t v14 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v15 = *(void *)(v5 + 64);
  }
  else {
    size_t v15 = v14 + 1;
  }
  size_t v16 = v15 + v336;
  size_t v17 = v15 + v334;
  uint64_t v18 = *(void *)(v345 + 64);
  uint64_t v312 = v18 + v334;
  if (*(_DWORD *)(v345 + 84)) {
    size_t v19 = *(void *)(v345 + 64);
  }
  else {
    size_t v19 = v18 + 1;
  }
  unint64_t v20 = ((v18
        + v334
        + ((v15
          + v334
          + ((v15
            + v336
            + ((v15 + v336 + (v306 & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)) & ~(unint64_t)v334)
      + v19;
  unint64_t v311 = v12;
  if (v14 <= v12) {
    unint64_t v21 = v12;
  }
  else {
    unint64_t v21 = v14;
  }
  size_t v283 = v15 + v9;
  uint64_t v325 = *(_DWORD *)(v8 + 80);
  unint64_t v22 = ((v15 + v9 + (v16 & ~(unint64_t)v336)) & ~v9) + *(void *)(v8 + 64);
  if (v22 > v21) {
    unint64_t v21 = v22;
  }
  uint64_t v296 = v338 + 224;
  size_t v23 = v19 + v334;
  uint64_t v309 = *(void *)(v310 - 8);
  unint64_t v24 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v25 = *(void *)(v10 + 64);
  }
  else {
    size_t v25 = v24 + 1;
  }
  size_t v26 = v15 + (v13 & ~(unint64_t)v336);
  unint64_t v27 = ((v26 + v336) & ~(unint64_t)v336) + v15;
  uint64_t v307 = v336 + 24;
  unint64_t v28 = ((v307 + (v26 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v336) + v15;
  uint64_t v287 = v338 + 24;
  uint64_t v288 = v338 + 104;
  uint64_t v291 = v338 + 160;
  size_t v314 = v15 + v334;
  uint64_t v346 = v334;
  unint64_t v29 = ((v17
        + ((v16
          + ((v16
            + ((v16
              + ((v13 + (v291 & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)
      + v19;
  uint64_t v286 = v338 + 56;
  uint64_t v290 = v338 + 64;
  unint64_t v30 = ((v13 + (v290 & ~(unint64_t)v338)) & ~(unint64_t)v336) + v15;
  unint64_t v300 = v28;
  unint64_t v301 = ((v17
         + ((v16 + ((v336 + 64) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)
       + v19;
  if (v28 <= v20) {
    unint64_t v28 = v20;
  }
  unint64_t v293 = v21 + 1;
  unint64_t v308 = v21;
  if (v28 <= v21 + 1) {
    unint64_t v28 = v21 + 1;
  }
  unint64_t v302 = ((v19
         + v11
         + ((v19
           + v334
           + ((v17
             + ((v16
               + ((v16
                 + ((v13 + 1 + ((v338 + 224) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)) & ~(unint64_t)v334)) & ~(unint64_t)v11)
       + v25;
  if (v28 <= v302) {
    unint64_t v28 = ((v19
  }
          + v11
          + ((v19
            + v334
            + ((v17
              + ((v16
                + ((v16
                  + ((v13 + 1 + ((v338 + 224) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)) & ~(unint64_t)v334)) & ~(unint64_t)v11)
        + v25;
  if (v28 <= ((v17
              + ((v16 + ((v336 + 64) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)
            + v19)
    unint64_t v28 = ((v17
          + ((v16 + ((v336 + 64) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)
        + v19;
  unint64_t v298 = ((v16
         + ((v13 + ((v338 + 24) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
       + v15;
  unint64_t v299 = ((v27 + v336) & ~(unint64_t)v336) + v15;
  if (v28 <= v299) {
    unint64_t v28 = ((v27 + v336) & ~(unint64_t)v336) + v15;
  }
  if (v28 <= ((v16
              + ((v13 + ((v338 + 24) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
            + v15)
    unint64_t v28 = ((v16
          + ((v13 + ((v338 + 24) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
        + v15;
  unint64_t v297 = ((v16
         + ((v16
           + ((v13 + ((v338 + 104) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
       + v15;
  if (v28 <= v297) {
    unint64_t v28 = ((v16
  }
          + ((v16
            + ((v13 + ((v338 + 104) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
        + v15;
  if (v28 <= v29) {
    unint64_t v28 = ((v17
  }
          + ((v16
            + ((v16
              + ((v16
                + ((v13 + ((v338 + 160) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v334)
        + v19;
  if (v28 <= ((v16
              + ((v16
                + ((v13 + ((v338 + 56) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
            + v15)
    unint64_t v28 = ((v16
          + ((v16
            + ((v13 + ((v338 + 56) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
        + v15;
  size_t v294 = v30 + 1;
  unint64_t v295 = ((v16
         + ((v16
           + ((v13 + ((v338 + 56) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
       + v15;
  if (v28 <= v30 + 1) {
    unint64_t v31 = v30 + 1;
  }
  else {
    unint64_t v31 = v28;
  }
  uint64_t v289 = v338 + 128;
  unint64_t v292 = ((v16
         + ((v16 + ((v13 + (v289 & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
       + v15;
  if (v31 <= v292) {
    unint64_t v31 = ((v16
  }
          + ((v16
            + ((v13 + ((v338 + 128) & ~(unint64_t)v338)) & ~(unint64_t)v336)) & ~(unint64_t)v336)) & ~(unint64_t)v336)
        + v15;
  size_t v303 = v27;
  if (v31 <= v27) {
    unint64_t v31 = v27;
  }
  size_t v305 = v24;
  if (v31 <= v24) {
    unint64_t v32 = v24;
  }
  else {
    unint64_t v32 = v31;
  }
  uint64_t v318 = a3[4];
  uint64_t v33 = *(void *)(v318 - 8);
  int v34 = *(_DWORD *)(v33 + 80);
  uint64_t v319 = v33;
  if (*(_DWORD *)(v33 + 84)) {
    uint64_t v35 = *(void *)(*(void *)(v318 - 8) + 64);
  }
  else {
    uint64_t v35 = *(void *)(*(void *)(v318 - 8) + 64) + 1;
  }
  uint64_t v36 = a3[6];
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v324 = v11;
  unint64_t v38 = v336 | (unint64_t)v338 | v334 | v9 | v11;
  if (*(_DWORD *)(v37 + 84)) {
    uint64_t v39 = *(void *)(v37 + 64);
  }
  else {
    uint64_t v39 = *(void *)(v37 + 64) + 1;
  }
  uint64_t v40 = v34;
  uint64_t v41 = *(_DWORD *)(v37 + 80);
  unint64_t v42 = v38 | v34 | *(_DWORD *)(v355 + 80) & 0xF8u | v41;
  if (v42 > 7
    || ((v336 | v338 | v334 | *(_DWORD *)(v284 + 80) | v11 | v34 | *(_DWORD *)(v37 + 80) | *(_DWORD *)(v355 + 80)) & 0x100000) != 0
    || (uint64_t v43 = (v38 | 7) + v326,
        ((v39
        + 7
        + ((v35 + v41 + ((v32 + v34 + 1 + (v43 & ~(v38 | 7))) & ~(unint64_t)v34)) & ~v41)) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    uint64_t v53 = *a2;
    *a1 = *a2;
    uint64_t v54 = (uint64_t *)(v53 + ((v42 + 16) & ~v42 & 0xFFFFFFFFFFFFFFF8));
    swift_retain();
  }
  else
  {
    uint64_t v276 = v336 + 64;
    unint64_t v277 = v29;
    size_t __n = v19;
    size_t v274 = v25;
    size_t v275 = v19 + v11;
    size_t v353 = v15 + v336;
    size_t v339 = v15;
    uint64_t v333 = v32 + v34 + 1;
    uint64_t v335 = v35 + v41;
    size_t v279 = v35;
    uint64_t v337 = v39 + 7;
    size_t v280 = v39;
    uint64_t v44 = *(void *)(a3[6] - 8);
    uint64_t v282 = v36;
    uint64_t v45 = ~(v38 | 7);
    uint64_t v46 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v355 + 16);
    size_t v356 = v32;
    v46(a1, a2, v320);
    uint64_t v47 = (_OWORD *)(((unint64_t)a1 + v43) & v45);
    uint64_t v48 = (unsigned __int8 *)(((unint64_t)a2 + v43) & v45);
    unsigned int v49 = v48[v356];
    unsigned int v50 = v49 - 15;
    if (v49 >= 0xF)
    {
      if (v356 <= 3) {
        uint64_t v51 = v356;
      }
      else {
        uint64_t v51 = 4;
      }
      switch(v51)
      {
        case 1:
          int v52 = *v48;
          if (v356 < 4) {
            goto LABEL_62;
          }
          goto LABEL_66;
        case 2:
          int v52 = *(unsigned __int16 *)v48;
          if (v356 < 4) {
            goto LABEL_62;
          }
          goto LABEL_66;
        case 3:
          int v52 = *(unsigned __int16 *)v48 | (v48[2] << 16);
          if (v356 < 4) {
            goto LABEL_62;
          }
          goto LABEL_66;
        case 4:
          int v52 = *(_DWORD *)v48;
          if (v356 < 4) {
LABEL_62:
          }
            unsigned int v49 = (v52 | (v50 << (8 * v356))) + 15;
          else {
LABEL_66:
          }
            unsigned int v49 = v52 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v281 = v44;
    uint64_t v55 = ~v4;
    uint64_t v56 = ~v6;
    uint64_t v57 = ~v346;
    uint64_t v58 = ~v324;
    uint64_t v59 = ~v41;
    switch(v49)
    {
      case 1u:
        unsigned int v78 = v48[v308];
        unsigned int v79 = v78 - 3;
        if (v78 < 3)
        {
          uint64_t v81 = v317;
        }
        else
        {
          if (v308 <= 3) {
            uint64_t v80 = v308;
          }
          else {
            uint64_t v80 = 4;
          }
          uint64_t v81 = v317;
          switch(v80)
          {
            case 1:
              int v82 = *v48;
              goto LABEL_253;
            case 2:
              int v82 = *(unsigned __int16 *)v48;
              goto LABEL_253;
            case 3:
              int v82 = *(unsigned __int16 *)v48 | (v48[2] << 16);
              goto LABEL_253;
            case 4:
              int v82 = *(_DWORD *)v48;
LABEL_253:
              if (v308 < 4) {
                unsigned int v78 = (v82 | (v79 << (8 * v308))) + 3;
              }
              else {
                unsigned int v78 = v82 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v78 == 2)
        {
          uint64_t v344 = ~v40;
          uint64_t v350 = v59;
          uint64_t v267 = v47;
          uint64_t v268 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v352 + 48);
          uint64_t v269 = v47;
          if (v268(v48, 1, v81))
          {
            memcpy(v267, v48, v339);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v352 + 16))(v267, v48, v81);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v267, 0, 1, v81);
          }
          uint64_t v270 = (void *)(((unint64_t)v269 + v353) & v56);
          uint64_t v271 = (void *)((unint64_t)&v48[v353] & v56);
          uint64_t v140 = v318;
          if (v268((unsigned __int8 *)v271, 1, v81))
          {
            memcpy(v270, v271, v339);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v352 + 16))(v270, v271, v81);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v270, 0, 1, v81);
          }
          uint64_t v190 = v319;
          uint64_t v59 = v350;
          uint64_t v139 = v281;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v284 + 16))(((unint64_t)v270 + v283) & ~v325, ((unint64_t)v271 + v283) & ~v325, v285);
          char v266 = 2;
          uint64_t v54 = a1;
          uint64_t v138 = v282;
          uint64_t v191 = v333;
          uint64_t v186 = v267;
          size_t v188 = v356;
          uint64_t v187 = v344;
        }
        else
        {
          if (v78 == 1)
          {
            uint64_t v186 = v47;
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v352 + 16))(v47, v48, v81);
            uint64_t v187 = ~v40;
            size_t v188 = v356;
            unint64_t v265 = v308;
            char v266 = 1;
            uint64_t v54 = a1;
            uint64_t v139 = v281;
            uint64_t v138 = v282;
            uint64_t v140 = v318;
            uint64_t v190 = v319;
            uint64_t v191 = v333;
            goto LABEL_268;
          }
          uint64_t v186 = v47;
          (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v316 + 16))(v47, v48, v315);
          char v266 = 0;
          uint64_t v54 = a1;
          uint64_t v139 = v281;
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          uint64_t v190 = v319;
          uint64_t v191 = v333;
          size_t v188 = v356;
          uint64_t v187 = ~v40;
        }
        unint64_t v265 = v308;
LABEL_268:
        v186[v265] = v266;
        char v189 = 1;
LABEL_242:
        v186[v188] = v189;
        uint64_t v260 = (void *)((unint64_t)&v186[v191] & v187);
        uint64_t v261 = (const void *)((unint64_t)&v48[v191] & v187);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v190 + 48))(v261, 1, v140))
        {
          memcpy(v260, v261, v279);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v190 + 16))(v260, v261, v140);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v190 + 56))(v260, 0, 1, v140);
        }
        uint64_t v262 = (void *)(((unint64_t)v260 + v335) & v59);
        uint64_t v263 = (const void *)(((unint64_t)v261 + v335) & v59);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48))(v263, 1, v138))
        {
          memcpy(v262, v263, v280);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v262, v263, v138);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v262, 0, 1, v138);
        }
        *(void *)(((unint64_t)v262 + v337) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v263 + v337) & 0xFFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v342 = ~v40;
        uint64_t v347 = v59;
        long long v83 = *((_OWORD *)v48 + 1);
        *uint64_t v47 = *(_OWORD *)v48;
        v47[1] = v83;
        long long v84 = *((_OWORD *)v48 + 2);
        long long v85 = *((_OWORD *)v48 + 3);
        long long v86 = *((_OWORD *)v48 + 5);
        v47[4] = *((_OWORD *)v48 + 4);
        v47[5] = v86;
        v47[2] = v84;
        v47[3] = v85;
        long long v87 = *((_OWORD *)v48 + 6);
        long long v88 = *((_OWORD *)v48 + 7);
        long long v89 = *((_OWORD *)v48 + 9);
        v47[8] = *((_OWORD *)v48 + 8);
        v47[9] = v89;
        v47[6] = v87;
        v47[7] = v88;
        long long v90 = *((_OWORD *)v48 + 10);
        long long v91 = *((_OWORD *)v48 + 11);
        long long v92 = *((_OWORD *)v48 + 13);
        v47[12] = *((_OWORD *)v48 + 12);
        v47[13] = v92;
        v47[10] = v90;
        v47[11] = v91;
        uint64_t v328 = v47;
        uint64_t v93 = ((unint64_t)v47 + v296) & v55;
        unint64_t v94 = (unint64_t)&v48[v296] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v93, v94, v315);
        unint64_t v95 = v94 + v311;
        *(unsigned char *)(v93 + v311) = *(unsigned char *)(v94 + v311);
        uint64_t v96 = (void *)((v6 + 1 + v93 + v311) & v56);
        uint64_t v97 = (const void *)((v6 + 1 + v95) & v56);
        uint64_t v98 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v98(v97, 1, v317))
        {
          memcpy(v96, v97, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v96, v97, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v96, 0, 1, v317);
        }
        uint64_t v195 = (void *)(((unint64_t)v96 + v353) & v56);
        uint64_t v196 = (const void *)(((unint64_t)v97 + v353) & v56);
        uint64_t v323 = v48;
        if (v98(v196, 1, v317))
        {
          memcpy(v195, v196, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v195, v196, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v195, 0, 1, v317);
        }
        uint64_t v218 = (void *)(((unint64_t)v195 + v353) & v56);
        uint64_t v219 = (const void *)(((unint64_t)v196 + v353) & v56);
        if (v98(v219, 1, v317))
        {
          memcpy(v218, v219, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v218, v219, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v218, 0, 1, v317);
        }
        uint64_t v190 = v319;
        uint64_t v59 = v347;
        uint64_t v232 = (void *)(((unint64_t)v218 + v314) & v57);
        uint64_t v233 = (const void *)(((unint64_t)v219 + v314) & v57);
        uint64_t v234 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v357 + 48);
        if (v234(v233, 1, v313))
        {
          size_t v235 = __n;
          memcpy(v232, v233, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v357 + 16))(v232, v233, v313);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v357 + 56))(v232, 0, 1, v313);
          size_t v235 = __n;
        }
        long long v238 = (void *)(((unint64_t)v232 + v23) & v57);
        uint64_t v239 = (const void *)(((unint64_t)v233 + v23) & v57);
        if (v234(v239, 1, v313))
        {
          memcpy(v238, v239, v235);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v357 + 16))(v238, v239, v313);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v357 + 56))(v238, 0, 1, v313);
        }
        uint64_t v138 = v282;
        uint64_t v242 = (void *)(((unint64_t)v238 + v275) & v58);
        uint64_t v243 = (const void *)(((unint64_t)v239 + v275) & v58);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v309 + 48))(v243, 1, v310))
        {
          memcpy(v242, v243, v274);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v309 + 16))(v242, v243, v310);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v309 + 56))(v242, 0, 1, v310);
        }
        char v189 = 2;
        uint64_t v54 = a1;
        uint64_t v140 = v318;
        uint64_t v186 = v328;
        uint64_t v191 = v333;
        uint64_t v48 = v323;
        size_t v188 = v356;
        goto LABEL_240;
      case 3u:
        uint64_t v341 = ~v40;
        long long v99 = *(_OWORD *)v48;
        long long v100 = *((_OWORD *)v48 + 1);
        long long v101 = *((_OWORD *)v48 + 3);
        v47[2] = *((_OWORD *)v48 + 2);
        v47[3] = v101;
        *uint64_t v47 = v99;
        v47[1] = v100;
        uint64_t v329 = v47;
        uint64_t v102 = (void *)(((unint64_t)v47 + v276) & v56);
        uint64_t v103 = v48;
        uint64_t v104 = (const void *)((unint64_t)&v48[v276] & v56);
        uint64_t v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v105(v104, 1, v317))
        {
          memcpy(v102, v104, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v102, v104, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v102, 0, 1, v317);
        }
        uint64_t v197 = ~v346;
        uint64_t v198 = (void *)(((unint64_t)v102 + v353) & v56);
        unint64_t v199 = (const void *)(((unint64_t)v104 + v353) & v56);
        if (v105(v199, 1, v317))
        {
          memcpy(v198, v199, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v198, v199, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v198, 0, 1, v317);
        }
        uint64_t v54 = a1;
        uint64_t v140 = v318;
        uint64_t v190 = v319;
        uint64_t v48 = v103;
        uint64_t v139 = v281;
        uint64_t v220 = (void *)(((unint64_t)v198 + v314) & v197);
        uint64_t v221 = (const void *)(((unint64_t)v199 + v314) & v197);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v357 + 48))(v221, 1, v313))
        {
          memcpy(v220, v221, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v357 + 16))(v220, v221, v313);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v357 + 56))(v220, 0, 1, v313);
        }
        char v189 = 3;
        goto LABEL_207;
      case 4u:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        uint64_t v106 = v47;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v316 + 16))(v47, v48, v315);
        uint64_t v330 = v106;
        uint64_t v107 = (void *)(((unint64_t)v106 + v13) & v56);
        uint64_t v108 = v48;
        unint64_t v109 = (const void *)((unint64_t)&v48[v13] & v56);
        uint64_t v110 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v110(v109, 1, v317))
        {
          memcpy(v107, v109, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v107, v109, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v107, 0, 1, v317);
        }
        uint64_t v200 = (void *)(((unint64_t)v107 + v353) & v56);
        uint64_t v201 = (const void *)(((unint64_t)v109 + v353) & v56);
        if (v110(v201, 1, v317))
        {
          size_t v202 = v339;
          memcpy(v200, v201, v339);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v200, v201, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v200, 0, 1, v317);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v202 = v339;
        }
        unint64_t v222 = (void *)(((unint64_t)v200 + v353) & v56);
        uint64_t v223 = (const void *)(((unint64_t)v201 + v353) & v56);
        if (v110(v223, 1, v317))
        {
          memcpy(v222, v223, v202);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v222, v223, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v222, 0, 1, v317);
        }
        char v189 = 4;
        goto LABEL_238;
      case 5u:
        uint64_t v343 = ~v40;
        uint64_t v349 = v59;
        uint64_t v157 = v47;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v316 + 16))(v47, v48, v315);
        v332 = v157;
        uint64_t v158 = (void *)(((unint64_t)v157 + v13) & v56);
        uint64_t v159 = (const void *)((unint64_t)&v48[v13] & v56);
        uint64_t v358 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v358(v159, 1, v317))
        {
          size_t v160 = v339;
          memcpy(v158, v159, v339);
          uint64_t v139 = v44;
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v158, v159, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v158, 0, 1, v317);
          uint64_t v139 = v44;
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v160 = v339;
        }
        *((unsigned char *)v158 + v160) = *((unsigned char *)v159 + v160);
        unint64_t v244 = ((unint64_t)v158 + v160) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v245 = ((unint64_t)v159 + v160) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v244 + 8) = *(_OWORD *)(v245 + 8);
        unint64_t v246 = (void *)((v307 + v244) & v56);
        uint64_t v247 = (const void *)((v307 + v245) & v56);
        if (v358(v247, 1, v317))
        {
          memcpy(v246, v247, v160);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v246, v247, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v246, 0, 1, v317);
        }
        char v189 = 5;
        uint64_t v54 = a1;
        uint64_t v190 = v319;
        uint64_t v186 = v332;
        uint64_t v191 = v333;
        size_t v188 = v356;
        goto LABEL_226;
      case 6u:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        long long v161 = *(_OWORD *)v48;
        *((void *)v47 + 2) = *((void *)v48 + 2);
        *uint64_t v47 = v161;
        uint64_t v330 = v47;
        uint64_t v162 = ((unint64_t)v47 + v287) & v55;
        uint64_t v108 = v48;
        unint64_t v163 = (unint64_t)&v48[v287] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v162, v163, v315);
        uint64_t v164 = (void *)((v13 + v162) & v56);
        uint64_t v165 = (const void *)((v13 + v163) & v56);
        uint64_t v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v166(v165, 1, v317))
        {
          size_t v167 = v339;
          memcpy(v164, v165, v339);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v164, v165, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v164, 0, 1, v317);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v167 = v339;
        }
        uint64_t v248 = (void *)(((unint64_t)v164 + v353) & v56);
        uint64_t v249 = (const void *)(((unint64_t)v165 + v353) & v56);
        if (v166(v249, 1, v317))
        {
          memcpy(v248, v249, v167);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v248, v249, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v248, 0, 1, v317);
        }
        char v189 = 6;
        goto LABEL_238;
      case 7u:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        uint64_t v111 = v47;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v316 + 16))(v47, v48, v315);
        uint64_t v330 = v111;
        uint64_t v112 = (void *)(((unint64_t)v111 + v13) & v56);
        uint64_t v113 = (const void *)((unint64_t)&v48[v13] & v56);
        uint64_t v114 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v114(v113, 1, v317))
        {
          size_t v115 = v339;
          memcpy(v112, v113, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v112, v113, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v112, 0, 1, v317);
          size_t v115 = v339;
        }
        *((unsigned char *)v112 + v115) = *((unsigned char *)v113 + v115);
        unint64_t v203 = ((unint64_t)v112 + v115) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v204 = ((unint64_t)v113 + v115) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v203 + 8) = *(_OWORD *)(v204 + 8);
        uint64_t v205 = (void *)((v307 + v203) & v56);
        uint64_t v206 = (const void *)((v307 + v204) & v56);
        uint64_t v138 = v282;
        uint64_t v140 = v318;
        if (v114(v206, 1, v317))
        {
          memcpy(v205, v206, v115);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v205, v206, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v205, 0, 1, v317);
        }
        char v189 = 7;
        uint64_t v54 = a1;
        uint64_t v190 = v319;
        uint64_t v191 = v333;
        goto LABEL_239;
      case 8u:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        long long v168 = *(_OWORD *)v48;
        long long v169 = *((_OWORD *)v48 + 2);
        v47[1] = *((_OWORD *)v48 + 1);
        v47[2] = v169;
        *uint64_t v47 = v168;
        long long v170 = *((_OWORD *)v48 + 3);
        long long v171 = *((_OWORD *)v48 + 4);
        long long v172 = *((_OWORD *)v48 + 5);
        *((void *)v47 + 12) = *((void *)v48 + 12);
        v47[4] = v171;
        v47[5] = v172;
        v47[3] = v170;
        uint64_t v330 = v47;
        uint64_t v173 = ((unint64_t)v47 + v288) & v55;
        uint64_t v108 = v48;
        unint64_t v174 = (unint64_t)&v48[v288] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v173, v174, v315);
        uint64_t v175 = (void *)((v13 + v173) & v56);
        uint64_t v176 = (const void *)((v13 + v174) & v56);
        uint64_t v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v177(v176, 1, v317))
        {
          memcpy(v175, v176, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v175, v176, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v175, 0, 1, v317);
        }
        uint64_t v250 = (void *)(((unint64_t)v175 + v353) & v56);
        uint64_t v251 = (const void *)(((unint64_t)v176 + v353) & v56);
        if (v177(v251, 1, v317))
        {
          size_t v252 = v339;
          memcpy(v250, v251, v339);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v250, v251, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v250, 0, 1, v317);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v252 = v339;
        }
        uint64_t v256 = (void *)(((unint64_t)v250 + v353) & v56);
        uint64_t v257 = (const void *)(((unint64_t)v251 + v353) & v56);
        if (v177(v257, 1, v317))
        {
          memcpy(v256, v257, v252);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v256, v257, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v256, 0, 1, v317);
        }
        char v189 = 8;
        goto LABEL_238;
      case 9u:
        uint64_t v341 = ~v40;
        long long v116 = *((_OWORD *)v48 + 1);
        *uint64_t v47 = *(_OWORD *)v48;
        v47[1] = v116;
        long long v117 = *((_OWORD *)v48 + 2);
        long long v118 = *((_OWORD *)v48 + 3);
        long long v119 = *((_OWORD *)v48 + 5);
        v47[4] = *((_OWORD *)v48 + 4);
        v47[5] = v119;
        v47[2] = v117;
        v47[3] = v118;
        long long v120 = *((_OWORD *)v48 + 6);
        long long v121 = *((_OWORD *)v48 + 7);
        long long v122 = *((_OWORD *)v48 + 9);
        v47[8] = *((_OWORD *)v48 + 8);
        v47[9] = v122;
        v47[6] = v120;
        v47[7] = v121;
        uint64_t v329 = v47;
        uint64_t v123 = ((unint64_t)v47 + v291) & v55;
        uint64_t v322 = v48;
        unint64_t v124 = (unint64_t)&v48[v291] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v123, v124, v315);
        uint64_t v125 = (void *)((v13 + v123) & v56);
        uint64_t v126 = (const void *)((v13 + v124) & v56);
        uint64_t v127 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v127(v126, 1, v317))
        {
          memcpy(v125, v126, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v125, v126, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v125, 0, 1, v317);
        }
        uint64_t v273 = ~v346;
        uint64_t v207 = (void *)(((unint64_t)v125 + v353) & v56);
        uint64_t v208 = (const void *)(((unint64_t)v126 + v353) & v56);
        if (v127(v208, 1, v317))
        {
          size_t v209 = v339;
          memcpy(v207, v208, v339);
          uint64_t v140 = v318;
          uint64_t v139 = v281;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v207, v208, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v207, 0, 1, v317);
          uint64_t v140 = v318;
          uint64_t v139 = v44;
          size_t v209 = v339;
        }
        uint64_t v224 = (void *)(((unint64_t)v207 + v353) & v56);
        uint64_t v225 = (const void *)(((unint64_t)v208 + v353) & v56);
        if (v127(v225, 1, v317))
        {
          memcpy(v224, v225, v209);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v224, v225, v317);
          size_t v209 = v339;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v224, 0, 1, v317);
        }
        uint64_t v236 = (void *)(((unint64_t)v224 + v353) & v56);
        uint64_t v237 = (const void *)(((unint64_t)v225 + v353) & v56);
        if (v127(v237, 1, v317))
        {
          memcpy(v236, v237, v209);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v236, v237, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v236, 0, 1, v317);
        }
        uint64_t v54 = a1;
        uint64_t v190 = v319;
        uint64_t v48 = v322;
        uint64_t v240 = (void *)(((unint64_t)v236 + v314) & v273);
        uint64_t v241 = (const void *)(((unint64_t)v237 + v314) & v273);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v357 + 48))(v241, 1, v313))
        {
          memcpy(v240, v241, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v357 + 16))(v240, v241, v313);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v357 + 56))(v240, 0, 1, v313);
        }
        char v189 = 9;
LABEL_207:
        uint64_t v186 = v329;
        uint64_t v191 = v333;
        size_t v188 = v356;
        goto LABEL_208;
      case 0xAu:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        long long v178 = *(_OWORD *)v48;
        long long v179 = *((_OWORD *)v48 + 1);
        long long v180 = *((_OWORD *)v48 + 2);
        *((void *)v47 + 6) = *((void *)v48 + 6);
        v47[1] = v179;
        v47[2] = v180;
        *uint64_t v47 = v178;
        uint64_t v330 = v47;
        uint64_t v181 = ((unint64_t)v47 + v286) & v55;
        uint64_t v108 = v48;
        unint64_t v182 = (unint64_t)&v48[v286] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v181, v182, v315);
        uint64_t v183 = (void *)((v13 + v181) & v56);
        uint64_t v184 = (const void *)((v13 + v182) & v56);
        int v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v185(v184, 1, v317))
        {
          memcpy(v183, v184, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v183, v184, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v183, 0, 1, v317);
        }
        uint64_t v253 = (void *)(((unint64_t)v183 + v353) & v56);
        uint64_t v254 = (const void *)(((unint64_t)v184 + v353) & v56);
        if (v185(v254, 1, v317))
        {
          size_t v255 = v339;
          memcpy(v253, v254, v339);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v253, v254, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v253, 0, 1, v317);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v255 = v339;
        }
        uint64_t v258 = (void *)(((unint64_t)v253 + v353) & v56);
        uint64_t v259 = (const void *)(((unint64_t)v254 + v353) & v56);
        if (v185(v259, 1, v317))
        {
          memcpy(v258, v259, v255);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v258, v259, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v258, 0, 1, v317);
        }
        char v189 = 10;
        goto LABEL_238;
      case 0xBu:
        uint64_t v272 = ~v346;
        uint64_t v343 = ~v40;
        uint64_t v349 = v59;
        long long v128 = *(_OWORD *)v48;
        long long v129 = *((_OWORD *)v48 + 1);
        long long v130 = *((_OWORD *)v48 + 3);
        v47[2] = *((_OWORD *)v48 + 2);
        v47[3] = v130;
        *uint64_t v47 = v128;
        v47[1] = v129;
        uint64_t v331 = v47;
        uint64_t v131 = v48;
        uint64_t v132 = ((unint64_t)v47 + v290) & v55;
        uint64_t v133 = v131;
        uint64_t v134 = (unint64_t)&v131[v290] & v55;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v316 + 16))(v132, v134, v315);
        uint64_t v135 = (void *)((v13 + v132) & v56);
        uint64_t v136 = (const void *)((v13 + v134) & v56);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48))(v136, 1, v317))
        {
          size_t v137 = v339;
          memcpy(v135, v136, v339);
          uint64_t v139 = v281;
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v135, v136, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v135, 0, 1, v317);
          uint64_t v139 = v44;
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v137 = v339;
        }
        *((unsigned char *)v135 + v137) = *((unsigned char *)v136 + v137);
        size_t v210 = ((v312 + ((v314 + ((v353 + (((v306 | v6) + v137) & v56)) & v56)) & v272)) & v272) + __n;
        if (v293 > v210) {
          size_t v210 = v293;
        }
        if (v302 > v210) {
          size_t v210 = v302;
        }
        if (v301 > v210) {
          size_t v210 = v301;
        }
        if (v299 > v210) {
          size_t v210 = v299;
        }
        if (v300 > v210) {
          size_t v210 = v300;
        }
        if (v298 > v210) {
          size_t v210 = v298;
        }
        if (v300 > v210) {
          size_t v210 = v300;
        }
        if (v297 > v210) {
          size_t v210 = v297;
        }
        if (v277 > v210) {
          size_t v210 = v277;
        }
        if (v295 > v210) {
          size_t v210 = v295;
        }
        if (v294 > v210) {
          size_t v210 = v294;
        }
        if (v292 > v210) {
          size_t v210 = v292;
        }
        if (v305 > v210) {
          size_t v210 = v305;
        }
        if (v303 <= v210) {
          size_t v188 = v210;
        }
        else {
          size_t v188 = v303;
        }
        char v189 = 11;
        uint64_t v54 = a1;
        uint64_t v190 = v319;
        uint64_t v186 = v331;
        uint64_t v191 = v333;
        uint64_t v48 = v133;
LABEL_226:
        uint64_t v187 = v343;
        uint64_t v59 = v349;
        goto LABEL_242;
      case 0xCu:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        long long v141 = *(_OWORD *)v48;
        long long v142 = *((_OWORD *)v48 + 1);
        long long v143 = *((_OWORD *)v48 + 3);
        v47[2] = *((_OWORD *)v48 + 2);
        v47[3] = v143;
        *uint64_t v47 = v141;
        v47[1] = v142;
        long long v144 = *((_OWORD *)v48 + 4);
        long long v145 = *((_OWORD *)v48 + 5);
        long long v146 = *((_OWORD *)v48 + 7);
        v47[6] = *((_OWORD *)v48 + 6);
        v47[7] = v146;
        v47[4] = v144;
        v47[5] = v145;
        uint64_t v330 = v47;
        uint64_t v147 = ((unint64_t)v47 + v289) & v55;
        uint64_t v108 = v48;
        unint64_t v148 = (unint64_t)&v48[v289] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v147, v148, v315);
        uint64_t v149 = (void *)((v13 + v147) & v56);
        uint64_t v150 = (const void *)((v13 + v148) & v56);
        uint64_t v151 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v151(v150, 1, v317))
        {
          memcpy(v149, v150, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v149, v150, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v149, 0, 1, v317);
        }
        uint64_t v211 = (void *)(((unint64_t)v149 + v353) & v56);
        uint64_t v212 = (const void *)(((unint64_t)v150 + v353) & v56);
        if (v151(v212, 1, v317))
        {
          size_t v213 = v339;
          memcpy(v211, v212, v339);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v211, v212, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v211, 0, 1, v317);
          uint64_t v138 = v282;
          uint64_t v140 = v318;
          size_t v213 = v339;
        }
        uint64_t v226 = (void *)(((unint64_t)v211 + v353) & v56);
        uint64_t v227 = (const void *)(((unint64_t)v212 + v353) & v56);
        if (v151(v227, 1, v317))
        {
          memcpy(v226, v227, v213);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v226, v227, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v226, 0, 1, v317);
        }
        char v189 = 12;
        goto LABEL_238;
      case 0xDu:
        uint64_t v186 = v47;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v309 + 16))(v47, v48, v310);
        uint64_t v187 = ~v40;
        size_t v188 = v356;
        char v189 = 13;
        uint64_t v54 = a1;
        uint64_t v138 = v282;
        uint64_t v140 = v318;
        uint64_t v190 = v319;
        uint64_t v191 = v333;
        goto LABEL_241;
      case 0xEu:
        uint64_t v342 = ~v40;
        uint64_t v348 = v59;
        uint64_t v152 = v47;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v316 + 16))(v47, v48, v315);
        uint64_t v330 = v152;
        uint64_t v153 = (void *)(((unint64_t)v152 + v13) & v56);
        uint64_t v108 = v48;
        uint64_t v154 = (const void *)((unint64_t)&v48[v13] & v56);
        uint64_t v155 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v155(v154, 1, v317))
        {
          size_t v156 = v339;
          memcpy(v153, v154, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v153, v154, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v153, 0, 1, v317);
          size_t v156 = v339;
        }
        uint64_t v214 = (void *)(((unint64_t)v153 + v353) & v56);
        uint64_t v215 = (const void *)(((unint64_t)v154 + v353) & v56);
        uint64_t v138 = v282;
        uint64_t v140 = v318;
        if (v155(v215, 1, v317))
        {
          memcpy(v214, v215, v156);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v214, v215, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v214, 0, 1, v317);
        }
        char v189 = 14;
LABEL_238:
        uint64_t v54 = a1;
        uint64_t v190 = v319;
        uint64_t v191 = v333;
        uint64_t v48 = v108;
LABEL_239:
        uint64_t v186 = v330;
        size_t v188 = v356;
        uint64_t v59 = v348;
LABEL_240:
        uint64_t v187 = v342;
LABEL_241:
        uint64_t v139 = v281;
        goto LABEL_242;
      default:
        uint64_t v341 = ~v40;
        long long v60 = *(_OWORD *)v48;
        long long v61 = *((_OWORD *)v48 + 1);
        long long v62 = *((_OWORD *)v48 + 3);
        v47[2] = *((_OWORD *)v48 + 2);
        v47[3] = v62;
        *uint64_t v47 = v60;
        v47[1] = v61;
        long long v63 = *((_OWORD *)v48 + 4);
        long long v64 = *((_OWORD *)v48 + 5);
        long long v65 = *((_OWORD *)v48 + 7);
        v47[6] = *((_OWORD *)v48 + 6);
        v47[7] = v65;
        v47[4] = v63;
        v47[5] = v64;
        long long v66 = *((_OWORD *)v48 + 8);
        long long v67 = *((_OWORD *)v48 + 9);
        long long v68 = *((_OWORD *)v48 + 11);
        v47[10] = *((_OWORD *)v48 + 10);
        v47[11] = v68;
        v47[8] = v66;
        v47[9] = v67;
        long long v69 = *((_OWORD *)v48 + 12);
        long long v70 = *((_OWORD *)v48 + 13);
        long long v71 = *((_OWORD *)v48 + 14);
        *((void *)v47 + 30) = *((void *)v48 + 30);
        v47[13] = v70;
        v47[14] = v71;
        v47[12] = v69;
        uint64_t v327 = v47;
        uint64_t v72 = ((unint64_t)v47 + v304) & v55;
        uint64_t v321 = v48;
        unint64_t v73 = (unint64_t)&v48[v304] & v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v316 + 16))(v72, v73, v315);
        *(unsigned char *)(v72 + v311) = *(unsigned char *)(v73 + v311);
        uint64_t v74 = v6 + 1;
        uint64_t v75 = (void *)((v6 + 1 + v72 + v311) & v56);
        uint64_t v76 = (const void *)((v74 + v73 + v311) & v56);
        uint64_t v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v352 + 48);
        if (v77(v76, 1, v317))
        {
          memcpy(v75, v76, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v75, v76, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v75, 0, 1, v317);
        }
        uint64_t v192 = ~v346;
        double v193 = (void *)(((unint64_t)v75 + v353) & v56);
        uint64_t v194 = (const void *)(((unint64_t)v76 + v353) & v56);
        if (v77(v194, 1, v317))
        {
          memcpy(v193, v194, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v193, v194, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v193, 0, 1, v317);
        }
        uint64_t v140 = v318;
        uint64_t v216 = (void *)(((unint64_t)v193 + v353) & v56);
        uint64_t v217 = (const void *)(((unint64_t)v194 + v353) & v56);
        uint64_t v139 = v281;
        if (v77(v217, 1, v317))
        {
          memcpy(v216, v217, v339);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v352 + 16))(v216, v217, v317);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v352 + 56))(v216, 0, 1, v317);
        }
        uint64_t v190 = v319;
        uint64_t v48 = v321;
        unint64_t v228 = ((unint64_t)v216 + v314) & v192;
        unint64_t v229 = ((unint64_t)v217 + v314) & v192;
        uint64_t v354 = *(void (**)(unint64_t, unint64_t, uint64_t))(v357 + 16);
        v354(v228, v229, v313);
        uint64_t v230 = (void *)((v312 + v228) & v192);
        uint64_t v231 = (const void *)((v312 + v229) & v192);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v357 + 48))(v231, 1, v313))
        {
          memcpy(v230, v231, __n);
        }
        else
        {
          v354((unint64_t)v230, (unint64_t)v231, v313);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v357 + 56))(v230, 0, 1, v313);
        }
        char v189 = 0;
        uint64_t v54 = a1;
        uint64_t v186 = v327;
        uint64_t v191 = v333;
        size_t v188 = v356;
LABEL_208:
        uint64_t v187 = v341;
        uint64_t v138 = v282;
        goto LABEL_242;
    }
  }
  return v54;
}

uint64_t sub_24ED4BCD8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[5] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v154 = *(void *)(v4 + 56) + a1;
  uint64_t v130 = a2[3];
  uint64_t v159 = *(void *)(v130 - 8);
  uint64_t v131 = v159;
  uint64_t v5 = *(unsigned __int8 *)(v159 + 80);
  uint64_t v153 = sub_24EE55880();
  uint64_t v6 = *(void *)(v153 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v128 = a2[2];
  uint64_t v149 = *(void *)(v128 - 8);
  uint64_t v8 = v149;
  uint64_t v9 = *(unsigned __int8 *)(v149 + 80);
  uint64_t v10 = sub_24EE55960();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v120 = v11;
  uint64_t v121 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v132 = a2;
  uint64_t v127 = a2[7];
  uint64_t v13 = *(void *)(v127 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v5 | v7 | v9 | v12 | v14 | 7;
  size_t v16 = (unsigned __int8 *)((v154 + v15) & ~v15);
  unint64_t v17 = *(void *)(v159 + 64);
  uint64_t v18 = v17 + v7;
  uint64_t v19 = v17 + v7 + 1;
  uint64_t v156 = v6;
  unint64_t v20 = *(void *)(v6 + 64);
  int v122 = *(_DWORD *)(v6 + 84);
  if (v122) {
    unint64_t v21 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v21 = v20 + 1;
  }
  uint64_t v22 = v21 + v7;
  uint64_t v23 = v21 + v9;
  uint64_t v24 = *(void *)(v149 + 64);
  uint64_t v133 = v24 + v9;
  uint64_t v129 = v149;
  if (*(_DWORD *)(v149 + 84)) {
    uint64_t v25 = *(void *)(v149 + 64);
  }
  else {
    uint64_t v25 = v24 + 1;
  }
  unint64_t v26 = ((v24 + v9 + ((v21 + v9 + ((v21 + v7 + ((v21 + v7 + ((v19 + ((v5 + 248) & ~v5)) & ~v7)) & ~v7)) & ~v7)) & ~v9)) & ~v9)
      + v25;
  if (v20 > v17) {
    unint64_t v17 = v20;
  }
  uint64_t v119 = v21 + v12;
  unint64_t v27 = ((v21 + v12 + (v22 & ~v7)) & ~v12) + *(void *)(v11 + 64);
  if (v27 <= v17) {
    unint64_t v27 = v17;
  }
  uint64_t v124 = v25 + v9;
  uint64_t v125 = v25 + v14;
  uint64_t v126 = *(void *)(v127 - 8);
  unint64_t v28 = *(void *)(v13 + 64);
  if (*(_DWORD *)(v13 + 84)) {
    unint64_t v29 = *(void *)(v13 + 64);
  }
  else {
    unint64_t v29 = v28 + 1;
  }
  unint64_t v30 = v29
      + ((v25
        + v14
        + ((v25 + v9 + ((v23 + ((v22 + ((v22 + ((v19 + ((v5 + 224) & ~v5)) & ~v7)) & ~v7)) & ~v7)) & ~v9)) & ~v9)) & ~v14);
  unint64_t v31 = ((v23 + ((v22 + ((v7 + 64) & ~v7)) & ~v7)) & ~v9) + v25;
  unint64_t v32 = v21 + (v18 & ~v7);
  unint64_t v33 = ((v32 + v7) & ~v7) + v21;
  unint64_t v34 = ((v7 + 24 + (v32 & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v21;
  uint64_t v134 = v21 + v9;
  unint64_t v35 = ((v23 + ((v22 + ((v22 + ((v22 + ((v18 + ((v5 + 160) & ~v5)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v9) + v25;
  unint64_t v36 = ((v18 + ((v5 + 64) & ~v5)) & ~v7) + v21;
  if (v34 > v26) {
    unint64_t v26 = v34;
  }
  if (v26 <= v27 + 1) {
    unint64_t v26 = v27 + 1;
  }
  if (v26 <= v30) {
    unint64_t v26 = v30;
  }
  if (v26 <= v31) {
    unint64_t v26 = v31;
  }
  if (v26 <= ((v33 + v7) & ~v7) + v21) {
    unint64_t v26 = ((v33 + v7) & ~v7) + v21;
  }
  if (v26 <= ((v22 + ((v18 + ((v5 + 24) & ~v5)) & ~v7)) & ~v7) + v21) {
    unint64_t v26 = ((v22 + ((v18 + ((v5 + 24) & ~v5)) & ~v7)) & ~v7) + v21;
  }
  unint64_t v141 = ((v22 + ((v22 + ((v18 + ((v5 + 104) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  if (v26 <= v141) {
    unint64_t v26 = ((v22 + ((v22 + ((v18 + ((v5 + 104) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  }
  if (v26 <= v35) {
    unint64_t v26 = v35;
  }
  unint64_t v139 = ((v22 + ((v22 + ((v18 + ((v5 + 56) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  if (v26 <= v139) {
    unint64_t v26 = ((v22 + ((v22 + ((v18 + ((v5 + 56) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  }
  unint64_t v137 = v27 + 1;
  unint64_t v138 = v36 + 1;
  if (v26 <= v36 + 1) {
    unint64_t v37 = v36 + 1;
  }
  else {
    unint64_t v37 = v26;
  }
  unint64_t v136 = ((v22 + ((v22 + ((v18 + ((v5 + 128) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  if (v37 <= v136) {
    unint64_t v37 = ((v22 + ((v22 + ((v18 + ((v5 + 128) & ~v5)) & ~v7)) & ~v7)) & ~v7) + v21;
  }
  if (v37 <= v33) {
    unint64_t v37 = v33;
  }
  if (v37 <= v28) {
    unint64_t v38 = v28;
  }
  else {
    unint64_t v38 = v37;
  }
  unsigned int v39 = v16[v38];
  unsigned int v40 = v39 - 15;
  if (v39 >= 0xF)
  {
    if (v38 <= 3) {
      uint64_t v41 = v38;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *v16;
        if (v38 < 4) {
          goto LABEL_54;
        }
        goto LABEL_55;
      case 2:
        int v42 = *(unsigned __int16 *)v16;
        if (v38 >= 4) {
          goto LABEL_55;
        }
        goto LABEL_54;
      case 3:
        int v42 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        if (v38 >= 4) {
          goto LABEL_55;
        }
        goto LABEL_54;
      case 4:
        int v42 = *(_DWORD *)v16;
        if (v38 < 4) {
LABEL_54:
        }
          v42 |= v40 << (8 * v38);
LABEL_55:
        unsigned int v39 = v42 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v43 = ~v5;
  uint64_t v160 = ~v7;
  uint64_t v155 = ~v9;
  uint64_t v44 = ~v12;
  uint64_t v151 = v19 + ((v5 + 248) & ~v5);
  uint64_t v152 = v16;
  unint64_t v148 = v28;
  uint64_t v150 = v25;
  unint64_t v146 = v30;
  unint64_t v147 = v33;
  unint64_t v145 = v31;
  unint64_t v143 = ((v33 + v7) & ~v7) + v21;
  unint64_t v144 = v34;
  unint64_t v142 = ((v22 + ((v18 + ((v5 + 24) & ~v5)) & ~v7)) & ~v7) + v21;
  unint64_t v140 = v35;
  switch(v39)
  {
    case 1u:
      unsigned int v62 = v16[v27];
      unsigned int v63 = v62 - 3;
      if (v62 < 3)
      {
        uint64_t v57 = v133;
        uint64_t v56 = v134;
        uint64_t v65 = v156;
      }
      else
      {
        if (v27 <= 3) {
          uint64_t v64 = v27;
        }
        else {
          uint64_t v64 = 4;
        }
        uint64_t v65 = v156;
        uint64_t v57 = v133;
        uint64_t v56 = v134;
        switch(v64)
        {
          case 1:
            int v66 = *v16;
            goto LABEL_127;
          case 2:
            int v66 = *(unsigned __int16 *)v16;
            goto LABEL_127;
          case 3:
            int v66 = *(unsigned __int16 *)v16 | (v16[2] << 16);
            goto LABEL_127;
          case 4:
            int v66 = *(_DWORD *)v16;
LABEL_127:
            if (v27 < 4) {
              unsigned int v62 = (v66 | (v63 << (8 * v27))) + 3;
            }
            else {
              unsigned int v62 = v66 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v62 == 2)
      {
        uint64_t v104 = v16;
        uint64_t v135 = *(unsigned int (**)(void))(v65 + 48);
        if (!v135()) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v65 + 8))(v104, v153);
        }
        unint64_t v105 = (unint64_t)&v104[v22] & v160;
        if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v135)(v105, 1, v153)) {
          (*(void (**)(unint64_t, uint64_t))(v65 + 8))(v105, v153);
        }
        (*(void (**)(unint64_t, uint64_t))(v120 + 8))((v119 + v105) & v44, v121);
      }
      else if (v62 == 1)
      {
        (*(void (**)(void))(v65 + 8))();
      }
      else
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v131 + 8))(v16, v130);
      }
      long long v61 = v132;
      break;
    case 2u:
      uint64_t v123 = ~v14;
      uint64_t v67 = (unint64_t)&v16[v5 + 224] & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v67, v130);
      uint64_t v68 = (v19 + v67) & v160;
      long long v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
      if (!v69(v68, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v68, v153);
      }
      uint64_t v70 = (v22 + v68) & v160;
      uint64_t v56 = v134;
      if (!v69(v70, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v70, v153);
      }
      uint64_t v71 = (v22 + v70) & v160;
      if (!v69(v71, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v71, v153);
      }
      uint64_t v72 = (v134 + v71) & v155;
      uint64_t v158 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      long long v61 = v132;
      uint64_t v57 = v133;
      if (!v158(v72, 1, v128)) {
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v72, v128);
      }
      uint64_t v73 = (v124 + v72) & v155;
      if (!v158(v73, 1, v128)) {
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v73, v128);
      }
      uint64_t v74 = v126;
      uint64_t v75 = (v125 + v73) & v123;
      uint64_t v76 = v127;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v75, 1, v127)) {
        goto LABEL_102;
      }
      break;
    case 3u:
      uint64_t v77 = (unint64_t)&v16[v7 + 64] & v160;
      unsigned int v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
      if (!v78(v77, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v77, v153);
      }
      uint64_t v79 = (v22 + v77) & v160;
      uint64_t v57 = v133;
      uint64_t v56 = v134;
      if (!v78(v79, 1, v153)) {
        goto LABEL_100;
      }
      goto LABEL_101;
    case 4u:
      uint64_t v80 = v16;
      (*(void (**)(void))(v131 + 8))();
      uint64_t v81 = &v80[v18];
      goto LABEL_110;
    case 5u:
    case 7u:
      uint64_t v45 = v16;
      (*(void (**)(void))(v131 + 8))();
      uint64_t v47 = v156;
      uint64_t v46 = ~v7;
      unint64_t v48 = (unint64_t)&v45[v18] & v160;
      unsigned int v49 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v156 + 48);
      uint64_t v50 = v153;
      if (!v49(v48, 1, v153)) {
        (*(void (**)(unint64_t, uint64_t))(v156 + 8))(v48, v153);
      }
      unint64_t v51 = v7 + 24 + ((v48 + v21) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_121;
    case 6u:
      uint64_t v82 = (unint64_t)&v16[v5 + 24] & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v82, v130);
      long long v83 = (unsigned __int8 *)(v18 + v82);
      goto LABEL_118;
    case 8u:
      uint64_t v84 = (uint64_t)&v16[v5 + 104];
      goto LABEL_109;
    case 9u:
      uint64_t v85 = (unint64_t)&v16[v5 + 160] & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v85, v130);
      uint64_t v86 = (v18 + v85) & v160;
      long long v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
      if (!v87(v86, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v86, v153);
      }
      uint64_t v88 = (v22 + v86) & v160;
      if (!v87(v88, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v88, v153);
      }
      uint64_t v89 = (v22 + v88) & v160;
      uint64_t v57 = v133;
      uint64_t v56 = v134;
      if (!v87(v89, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v89, v153);
      }
      uint64_t v79 = (v22 + v89) & v160;
      if (!v87(v79, 1, v153)) {
LABEL_100:
      }
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v79, v153);
LABEL_101:
      uint64_t v75 = (v56 + v79) & v155;
      uint64_t v76 = v128;
      uint64_t v74 = v129;
      long long v61 = v132;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v75, 1, v128)) {
LABEL_102:
      }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      break;
    case 0xAu:
      uint64_t v84 = (uint64_t)&v16[v5 + 56];
      goto LABEL_109;
    case 0xBu:
      uint64_t v90 = (unint64_t)&v16[v5 + 64] & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v90, v130);
      uint64_t v91 = (v18 + v90) & v160;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v91, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v91, v153);
      }
      long long v61 = v132;
      uint64_t v57 = v133;
      uint64_t v56 = v134;
      if (!v122) {
        break;
      }
      goto LABEL_141;
    case 0xCu:
      uint64_t v84 = (uint64_t)&v16[v5 + 128];
LABEL_109:
      uint64_t v92 = v84 & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v84 & v43, v130);
      uint64_t v81 = (unsigned __int8 *)(v18 + v92);
LABEL_110:
      unint64_t v93 = (unint64_t)v81 & v160;
      unint64_t v94 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v156 + 48);
      if (!v94((unint64_t)v81 & v160, 1, v153)) {
        (*(void (**)(unint64_t, uint64_t))(v156 + 8))(v93, v153);
      }
      uint64_t v95 = (v22 + v93) & v160;
      unsigned int v96 = v94(v95, 1, v153);
      uint64_t v97 = v153;
      uint64_t v56 = v134;
      long long v61 = v132;
      uint64_t v57 = v133;
      if (!v96)
      {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v95, v153);
        uint64_t v97 = v153;
      }
      uint64_t v98 = (v22 + v95) & v160;
      if (!v94(v98, 1, v97)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v98, v153);
      }
      break;
    case 0xDu:
      (*(void (**)(void))(v126 + 8))();
      long long v61 = v132;
      uint64_t v57 = v133;
      uint64_t v56 = v134;
      break;
    case 0xEu:
      long long v99 = v16;
      (*(void (**)(void))(v131 + 8))();
      long long v83 = &v99[v18];
LABEL_118:
      uint64_t v47 = v156;
      uint64_t v46 = ~v7;
      unint64_t v100 = (unint64_t)v83 & v160;
      unsigned int v49 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v156 + 48);
      uint64_t v50 = v153;
      if (!v49((unint64_t)v83 & v160, 1, v153)) {
        (*(void (**)(unint64_t, uint64_t))(v156 + 8))(v100, v153);
      }
      unint64_t v51 = v22 + v100;
LABEL_121:
      unint64_t v101 = v51 & v46;
      unsigned int v102 = v49(v51 & v46, 1, v50);
      long long v61 = v132;
      uint64_t v57 = v133;
      uint64_t v103 = v50;
      uint64_t v56 = v134;
      if (!v102) {
        (*(void (**)(unint64_t, uint64_t))(v47 + 8))(v101, v103);
      }
      break;
    default:
      uint64_t v52 = (unint64_t)&v16[v5 + 248] & v43;
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v52, v130);
      uint64_t v53 = (v19 + v52) & v160;
      uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
      if (!v54(v53, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v53, v153);
      }
      uint64_t v55 = (v22 + v53) & v160;
      uint64_t v57 = v133;
      uint64_t v56 = v134;
      if (!v54(v55, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v55, v153);
      }
      uint64_t v58 = (v22 + v55) & v160;
      if (!v54(v58, 1, v153)) {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v58, v153);
      }
      uint64_t v59 = (v134 + v58) & v155;
      uint64_t v157 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
      v157(v59, v128);
      uint64_t v60 = (v133 + v59) & v155;
      long long v61 = v132;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v60, 1, v128)) {
        v157(v60, v128);
      }
      break;
  }
  unint64_t v20 = v21;
LABEL_141:
  unint64_t v106 = ((v57 + ((v56 + ((v22 + (((v151 | v7) + v20) & v160)) & v160)) & v155)) & v155) + v150;
  if (v137 > v106) {
    unint64_t v106 = v137;
  }
  if (v146 > v106) {
    unint64_t v106 = v146;
  }
  if (v145 > v106) {
    unint64_t v106 = v145;
  }
  if (v143 > v106) {
    unint64_t v106 = v143;
  }
  if (v144 > v106) {
    unint64_t v106 = v144;
  }
  if (v142 > v106) {
    unint64_t v106 = v142;
  }
  if (v144 > v106) {
    unint64_t v106 = v144;
  }
  if (v141 > v106) {
    unint64_t v106 = v141;
  }
  if (v140 > v106) {
    unint64_t v106 = v140;
  }
  if (v139 > v106) {
    unint64_t v106 = v139;
  }
  if (v138 > v106) {
    unint64_t v106 = v138;
  }
  if (v136 > v106) {
    unint64_t v106 = v136;
  }
  unint64_t v107 = v148;
  if (v148 <= v106) {
    unint64_t v107 = v106;
  }
  uint64_t v108 = v61[4];
  uint64_t v109 = *(void *)(v108 - 8);
  if (v147 > v107) {
    unint64_t v107 = v147;
  }
  uint64_t v110 = *(void *)(v61[4] - 8);
  unint64_t v111 = (((unint64_t)v152 | 1) + *(unsigned __int8 *)(v109 + 80) + v107) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v109 + 48))(v111, 1, v108)) {
    (*(void (**)(unint64_t, uint64_t))(v110 + 8))(v111, v108);
  }
  int v112 = *(_DWORD *)(v110 + 84);
  uint64_t v113 = *(void *)(v110 + 64);
  uint64_t v114 = v61[6];
  uint64_t v115 = *(void *)(v114 - 8);
  uint64_t v116 = v113 + v111;
  if (!v112) {
    ++v116;
  }
  unint64_t v117 = (v116 + *(unsigned __int8 *)(v115 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v61[6] - 8) + 48))(v117, 1, v114))(*(void (**)(unint64_t, uint64_t))(v115 + 8))(v117, v114); {
  return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24ED4CF44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[5] - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v329 = *(void *)(v5 + 48);
  uint64_t v319 = a3[3];
  __dst = *(void **)(v319 - 8);
  uint64_t v6 = *((unsigned __int8 *)__dst + 80);
  uint64_t v322 = sub_24EE55880();
  uint64_t v325 = *(void *)(v322 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v325 + 80);
  uint64_t v315 = a3[2];
  uint64_t v331 = *(void *)(v315 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v331 + 80);
  uint64_t v9 = sub_24EE55960();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v289 = v10;
  size_t __n = v9;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v324 = a3;
  uint64_t v309 = a3[7];
  uint64_t v12 = *(void *)(v309 - 8);
  uint64_t v13 = v12;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v6 | v7 | v8 | v11 | v14 | 7;
  uint64_t v16 = v15 + v329;
  uint64_t v330 = a1;
  unint64_t v17 = (_OWORD *)((v16 + a1) & ~v15);
  uint64_t v18 = (unsigned __int8 *)((v16 + a2) & ~v15);
  unint64_t v19 = __dst[8];
  uint64_t v20 = v19 + v7;
  uint64_t v21 = v19 + v7 + 1;
  uint64_t v304 = v21 + ((v6 + 248) & ~v6);
  uint64_t v323 = v325;
  unint64_t v22 = *(void *)(v325 + 64);
  if (*(_DWORD *)(v325 + 84)) {
    size_t v23 = *(void *)(v325 + 64);
  }
  else {
    size_t v23 = v22 + 1;
  }
  uint64_t v24 = v23 + v8;
  uint64_t v25 = *(void *)(v331 + 64);
  uint64_t v312 = __dst[8];
  uint64_t v313 = v25 + v8;
  uint64_t v317 = v331;
  size_t v26 = v23 + v7;
  if (*(_DWORD *)(v331 + 84)) {
    size_t v27 = *(void *)(v331 + 64);
  }
  else {
    size_t v27 = v25 + 1;
  }
  unint64_t v28 = ((v25 + v8 + ((v23 + v8 + ((v23 + v7 + ((v23 + v7 + (v304 & ~v7)) & ~v7)) & ~v7)) & ~v8)) & ~v8) + v27;
  if (v22 <= v19) {
    size_t v29 = __dst[8];
  }
  else {
    size_t v29 = *(void *)(v325 + 64);
  }
  size_t v288 = v23 + v11;
  size_t v30 = ((v23 + v11 + (v26 & ~v7)) & ~v11) + *(void *)(v10 + 64);
  if (v30 <= v29) {
    size_t v31 = v29;
  }
  else {
    size_t v31 = v30;
  }
  uint64_t v32 = v27 + v8;
  uint64_t v33 = (v27
       + v14
       + ((v27 + v8 + ((v24 + ((v26 + ((v26 + ((v21 + ((v6 + 224) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v8)) & ~v8)) & ~v14;
  uint64_t v308 = *(void *)(v309 - 8);
  unint64_t v34 = *(void *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v35 = *(void *)(v12 + 64);
  }
  else {
    size_t v35 = v34 + 1;
  }
  unint64_t v36 = v33 + v35;
  size_t v37 = v23 + (v20 & ~v7);
  size_t v38 = ((v37 + v7) & ~v7) + v23;
  unint64_t v39 = ((v7 + 24 + (v37 & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v23;
  unint64_t v40 = ((v24 + ((v26 + ((v26 + ((v26 + ((v20 + ((v6 + 160) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v8) + v27;
  unint64_t v41 = ((v26 + ((v26 + ((v20 + ((v6 + 56) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  size_t v42 = ((v20 + ((v6 + 64) & ~v6)) & ~v7) + v23;
  size_t v300 = v39;
  if (v39 <= v28) {
    unint64_t v39 = v28;
  }
  size_t v296 = v31 + 1;
  size_t v306 = v31;
  if (v39 <= v31 + 1) {
    unint64_t v39 = v31 + 1;
  }
  unint64_t v326 = v36;
  if (v39 <= v36) {
    unint64_t v39 = v36;
  }
  unint64_t v302 = ((v24 + ((v26 + ((v7 + 64) & ~v7)) & ~v7)) & ~v8) + v27;
  if (v39 <= v302) {
    unint64_t v39 = ((v24 + ((v26 + ((v7 + 64) & ~v7)) & ~v7)) & ~v8) + v27;
  }
  size_t v298 = ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23;
  unint64_t v299 = ((v38 + v7) & ~v7) + v23;
  if (v39 <= v299) {
    unint64_t v39 = ((v38 + v7) & ~v7) + v23;
  }
  if (v39 <= ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23) {
    unint64_t v39 = ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23;
  }
  unint64_t v297 = ((v26 + ((v26 + ((v20 + ((v6 + 104) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  if (v39 <= v297) {
    unint64_t v39 = ((v26 + ((v26 + ((v20 + ((v6 + 104) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  if (v39 <= v40) {
    unint64_t v39 = ((v24 + ((v26 + ((v26 + ((v26 + ((v20 + ((v6 + 160) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v8) + v27;
  }
  if (v39 <= v41) {
    unint64_t v39 = ((v26 + ((v26 + ((v20 + ((v6 + 56) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  size_t v43 = v42 + 1;
  if (v39 <= v42 + 1) {
    unint64_t v44 = v42 + 1;
  }
  else {
    unint64_t v44 = v39;
  }
  size_t v335 = v23;
  unint64_t v45 = ((v26 + ((v26 + ((v20 + ((v6 + 128) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  if (v44 <= v45) {
    unint64_t v44 = ((v26 + ((v26 + ((v20 + ((v6 + 128) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  if (v44 <= v38) {
    unint64_t v44 = v38;
  }
  if (v44 <= v34) {
    unint64_t v46 = v34;
  }
  else {
    unint64_t v46 = v44;
  }
  unsigned int v47 = v18[v46];
  unsigned int v48 = v47 - 15;
  if (v47 >= 0xF)
  {
    if (v46 <= 3) {
      uint64_t v49 = v46;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *v18;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 2:
        int v50 = *(unsigned __int16 *)v18;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 3:
        int v50 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 4:
        int v50 = *(_DWORD *)v18;
        if (v46 < 4) {
LABEL_52:
        }
          unsigned int v47 = (v50 | (v48 << (8 * v46))) + 15;
        else {
LABEL_56:
        }
          unsigned int v47 = v50 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v51 = ~v6;
  uint64_t v337 = ~v7;
  uint64_t v52 = ~v8;
  uint64_t v53 = ~v11;
  switch(v47)
  {
    case 1u:
      unsigned int v73 = v18[v306];
      unsigned int v74 = v73 - 3;
      if (v73 < 3)
      {
        uint64_t v77 = v322;
        uint64_t v76 = v323;
      }
      else
      {
        if (v306 <= 3) {
          uint64_t v75 = v306;
        }
        else {
          uint64_t v75 = 4;
        }
        uint64_t v77 = v322;
        uint64_t v76 = v323;
        switch(v75)
        {
          case 1:
            int v78 = *v18;
            goto LABEL_251;
          case 2:
            int v78 = *(unsigned __int16 *)v18;
            goto LABEL_251;
          case 3:
            int v78 = *(unsigned __int16 *)v18 | (v18[2] << 16);
            goto LABEL_251;
          case 4:
            int v78 = *(_DWORD *)v18;
LABEL_251:
            if (v306 < 4) {
              unsigned int v73 = (v78 | (v74 << (8 * v306))) + 3;
            }
            else {
              unsigned int v73 = v78 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v73 == 2)
      {
        size_t v328 = v46;
        unint64_t v334 = v46;
        uint64_t v287 = v17;
        size_t v279 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v76 + 48);
        size_t v280 = v17;
        if (v279(v18, 1, v77))
        {
          memcpy(v287, v18, v335);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v76 + 16))(v287, v18, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v287, 0, 1, v77);
        }
        uint64_t v282 = (void *)(((unint64_t)v280 + v26) & v337);
        int v185 = v18;
        size_t v283 = (void *)((unint64_t)&v18[v26] & v337);
        uint64_t v139 = v330;
        uint64_t v191 = v324;
        if (v279((unsigned __int8 *)v283, 1, v77))
        {
          memcpy(v282, v283, v335);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v323 + 16))(v282, v283, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v282, 0, 1, v77);
        }
        (*(void (**)(unint64_t, unint64_t, size_t))(v289 + 16))(((unint64_t)v282 + v288) & v53, ((unint64_t)v283 + v288) & v53, __n);
        char v278 = 2;
        uint64_t v186 = v287;
        unint64_t v187 = v334;
        size_t v189 = v328;
      }
      else if (v73 == 1)
      {
        int v185 = v18;
        uint64_t v186 = v17;
        unint64_t v187 = v46;
        size_t v277 = v46;
        (*(void (**)(void))(v76 + 16))();
        size_t v189 = v277;
        char v278 = 1;
        uint64_t v139 = v330;
        uint64_t v191 = v324;
      }
      else
      {
        size_t v281 = v46;
        unint64_t v187 = v46;
        int v185 = v18;
        uint64_t v186 = v17;
        ((void (*)(void))__dst[2])();
        char v278 = 0;
        uint64_t v139 = v330;
        uint64_t v191 = v324;
        size_t v189 = v281;
      }
      v186[v306] = v278;
      char v190 = 1;
      goto LABEL_229;
    case 2u:
      uint64_t v303 = ~v14;
      uint64_t v305 = v32;
      size_t v314 = v27 + v14;
      size_t v301 = v35;
      uint64_t v79 = v52;
      uint64_t v80 = v24;
      size_t __nb = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v81 = *((_OWORD *)v18 + 1);
      *unint64_t v17 = *(_OWORD *)v18;
      v17[1] = v81;
      long long v82 = *((_OWORD *)v18 + 2);
      long long v83 = *((_OWORD *)v18 + 3);
      long long v84 = *((_OWORD *)v18 + 5);
      v17[4] = *((_OWORD *)v18 + 4);
      v17[5] = v84;
      v17[2] = v82;
      v17[3] = v83;
      long long v85 = *((_OWORD *)v18 + 6);
      long long v86 = *((_OWORD *)v18 + 7);
      long long v87 = *((_OWORD *)v18 + 9);
      v17[8] = *((_OWORD *)v18 + 8);
      v17[9] = v87;
      v17[6] = v85;
      v17[7] = v86;
      long long v88 = *((_OWORD *)v18 + 10);
      long long v89 = *((_OWORD *)v18 + 11);
      long long v90 = *((_OWORD *)v18 + 13);
      v17[12] = *((_OWORD *)v18 + 12);
      v17[13] = v90;
      v17[10] = v88;
      v17[11] = v89;
      uint64_t v284 = v17;
      uint64_t v91 = ((unint64_t)v17 + v6 + 224) & v51;
      uint64_t v307 = v18;
      uint64_t v92 = (unint64_t)&v18[v6 + 224] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v91, v92, v319);
      uint64_t v93 = v92 + v312;
      *(unsigned char *)(v91 + v312) = *(unsigned char *)(v92 + v312);
      unint64_t v94 = (void *)((v7 + 1 + v91 + v312) & v337);
      uint64_t v95 = (const void *)((v7 + 1 + v93) & v337);
      unsigned int v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v96(v95, 1, v322))
      {
        size_t v97 = v335;
        memcpy(v94, v95, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v94, v95, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v94, 0, 1, v322);
        size_t v97 = v335;
      }
      uint64_t v194 = (void *)(((unint64_t)v94 + v26) & v337);
      uint64_t v195 = (const void *)(((unint64_t)v95 + v26) & v337);
      if (v96(v195, 1, v322))
      {
        memcpy(v194, v195, v97);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v194, v195, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v194, 0, 1, v322);
      }
      uint64_t v215 = (void *)(((unint64_t)v194 + v26) & v337);
      uint64_t v216 = (const void *)(((unint64_t)v195 + v26) & v337);
      if (v96(v216, 1, v322))
      {
        memcpy(v215, v216, v97);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v215, v216, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v215, 0, 1, v322);
      }
      unint64_t v229 = (void *)(((unint64_t)v215 + v80) & v79);
      uint64_t v230 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48);
      if (v230(((unint64_t)v216 + v80) & v79, 1, v315))
      {
        memcpy(v229, (const void *)(((unint64_t)v216 + v80) & v79), __nb);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 16))(v229, ((unint64_t)v216 + v80) & v79, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v229, 0, 1, v315);
      }
      uint64_t v191 = v324;
      uint64_t v233 = (void *)(((unint64_t)v229 + v305) & v79);
      uint64_t v234 = (const void *)((v305 + (((unint64_t)v216 + v80) & v79)) & v79);
      if (v230((unint64_t)v234, 1, v315))
      {
        memcpy(v233, v234, __nb);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v317 + 16))(v233, v234, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v233, 0, 1, v315);
      }
      uint64_t v236 = (void *)(((unint64_t)v233 + v314) & v303);
      uint64_t v237 = (const void *)(((unint64_t)v234 + v314) & v303);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v308 + 48))(v237, 1, v309))
      {
        memcpy(v236, v237, v301);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v308 + 16))(v236, v237, v309);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v308 + 56))(v236, 0, 1, v309);
      }
      char v190 = 2;
      uint64_t v139 = v330;
      goto LABEL_200;
    case 3u:
      uint64_t v98 = v52;
      uint64_t v99 = v24;
      size_t __nc = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v100 = *(_OWORD *)v18;
      long long v101 = *((_OWORD *)v18 + 1);
      long long v102 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v102;
      *unint64_t v17 = v100;
      v17[1] = v101;
      uint64_t v284 = v17;
      uint64_t v103 = (void *)(((unint64_t)v17 + v7 + 64) & v337);
      uint64_t v307 = v18;
      uint64_t v104 = (const void *)((unint64_t)&v18[v7 + 64] & v337);
      unint64_t v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v105(v104, 1, v322))
      {
        memcpy(v103, v104, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v103, v104, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v103, 0, 1, v322);
      }
      uint64_t v196 = (void *)(((unint64_t)v103 + v26) & v337);
      uint64_t v197 = (const void *)(((unint64_t)v104 + v26) & v337);
      if (v105(v197, 1, v322))
      {
        memcpy(v196, v197, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v196, v197, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v196, 0, 1, v322);
      }
      uint64_t v139 = v330;
      uint64_t v217 = (void *)(((unint64_t)v196 + v99) & v98);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48))(((unint64_t)v197 + v99) & v98, 1, v315))
      {
        memcpy(v217, (const void *)(((unint64_t)v197 + v99) & v98), __nc);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 16))(v217, ((unint64_t)v197 + v99) & v98, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v217, 0, 1, v315);
      }
      char v190 = 3;
      goto LABEL_197;
    case 4u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      unint64_t v106 = v17;
      ((void (*)(void))__dst[2])();
      unint64_t v107 = v106;
      uint64_t v108 = (void *)(((unint64_t)v106 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v110 = (const void *)((unint64_t)&v18[v20] & v337);
      unint64_t v111 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v111(v110, 1, v322))
      {
        memcpy(v108, v110, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v108, v110, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v108, 0, 1, v322);
      }
      uint64_t v198 = (void *)(((unint64_t)v108 + v26) & v337);
      unint64_t v199 = (const void *)(((unint64_t)v110 + v26) & v337);
      uint64_t v139 = v330;
      if (v111(v199, 1, v322))
      {
        memcpy(v198, v199, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v198, v199, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v198, 0, 1, v322);
      }
      uint64_t v218 = (void *)(((unint64_t)v198 + v26) & v337);
      uint64_t v219 = (const void *)(((unint64_t)v199 + v26) & v337);
      if (v111(v219, 1, v322))
      {
        memcpy(v218, v219, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v218, v219, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v218, 0, 1, v322);
      }
      char v190 = 4;
      goto LABEL_227;
    case 5u:
      uint64_t v155 = v7 + 24;
      size_t v327 = v46;
      unint64_t v332 = v46;
      uint64_t v156 = v17;
      ((void (*)(void))__dst[2])();
      uint64_t v286 = v156;
      uint64_t v157 = (void *)((unint64_t)&v156[v20] & v337);
      uint64_t v158 = (const void *)((unint64_t)&v18[v20] & v337);
      uint64_t v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v159(v158, 1, v322))
      {
        size_t v160 = v335;
        memcpy(v157, v158, v335);
        uint64_t v139 = v330;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v157, v158, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v157, 0, 1, v322);
        uint64_t v139 = v330;
        size_t v160 = v335;
      }
      *((unsigned char *)v157 + v160) = *((unsigned char *)v158 + v160);
      unint64_t v238 = ((unint64_t)v157 + v160) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v239 = ((unint64_t)v158 + v160) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v238 + 8) = *(_OWORD *)(v239 + 8);
      uint64_t v240 = (void *)((v155 + v238) & v337);
      uint64_t v241 = (const void *)((v155 + v239) & v337);
      if (v159(v241, 1, v322))
      {
        memcpy(v240, v241, v160);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v240, v241, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v240, 0, 1, v322);
      }
      char v190 = 5;
      uint64_t v191 = v324;
      int v185 = v18;
      uint64_t v186 = v286;
      break;
    case 6u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v161 = *(_OWORD *)v18;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *unint64_t v17 = v161;
      unint64_t v107 = v17;
      uint64_t v162 = ((unint64_t)v17 + v6 + 24) & v51;
      uint64_t v109 = v18;
      uint64_t v163 = (unint64_t)&v18[v6 + 24] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v162, v163, v319);
      uint64_t v164 = (void *)((v20 + v162) & v337);
      uint64_t v165 = (const void *)((v20 + v163) & v337);
      uint64_t v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v166(v165, 1, v322))
      {
        memcpy(v164, v165, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v164, v165, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v164, 0, 1, v322);
      }
      uint64_t v139 = v330;
      uint64_t v242 = (void *)(((unint64_t)v164 + v26) & v337);
      uint64_t v243 = (const void *)(((unint64_t)v165 + v26) & v337);
      if (v166(v243, 1, v322))
      {
        memcpy(v242, v243, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v242, v243, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v242, 0, 1, v322);
      }
      char v190 = 6;
      goto LABEL_227;
    case 7u:
      uint64_t v112 = v7 + 24;
      size_t v327 = v46;
      unint64_t v332 = v46;
      uint64_t v113 = v17;
      ((void (*)(void))__dst[2])();
      unint64_t v107 = v113;
      uint64_t v114 = (void *)(((unint64_t)v113 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v115 = (const void *)((unint64_t)&v18[v20] & v337);
      uint64_t v116 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v116(v115, 1, v322))
      {
        size_t v117 = v335;
        memcpy(v114, v115, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v114, v115, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v114, 0, 1, v322);
        size_t v117 = v335;
      }
      *((unsigned char *)v114 + v117) = *((unsigned char *)v115 + v117);
      unint64_t v200 = ((unint64_t)v114 + v117) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v201 = ((unint64_t)v115 + v117) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v200 + 8) = *(_OWORD *)(v201 + 8);
      size_t v202 = (void *)((v112 + v200) & v337);
      unint64_t v203 = (const void *)((v112 + v201) & v337);
      unsigned int v204 = v116(v203, 1, v322);
      size_t v205 = v117;
      uint64_t v139 = v330;
      if (v204)
      {
        memcpy(v202, v203, v205);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v202, v203, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v202, 0, 1, v322);
      }
      char v190 = 7;
      goto LABEL_227;
    case 8u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v167 = *(_OWORD *)v18;
      long long v168 = *((_OWORD *)v18 + 2);
      v17[1] = *((_OWORD *)v18 + 1);
      v17[2] = v168;
      *unint64_t v17 = v167;
      long long v169 = *((_OWORD *)v18 + 3);
      long long v170 = *((_OWORD *)v18 + 4);
      long long v171 = *((_OWORD *)v18 + 5);
      *((void *)v17 + 12) = *((void *)v18 + 12);
      v17[4] = v170;
      v17[5] = v171;
      v17[3] = v169;
      unint64_t v107 = v17;
      uint64_t v172 = ((unint64_t)v17 + v6 + 104) & v51;
      uint64_t v109 = v18;
      uint64_t v173 = (unint64_t)&v18[v6 + 104] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v172, v173, v319);
      unint64_t v174 = (void *)((v20 + v172) & v337);
      uint64_t v175 = (const void *)((v20 + v173) & v337);
      uint64_t v176 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v176(v175, 1, v322))
      {
        memcpy(v174, v175, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v174, v175, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v174, 0, 1, v322);
      }
      uint64_t v139 = v330;
      unint64_t v244 = (void *)(((unint64_t)v174 + v26) & v337);
      unint64_t v245 = (const void *)(((unint64_t)v175 + v26) & v337);
      if (v176(v245, 1, v322))
      {
        memcpy(v244, v245, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v244, v245, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v244, 0, 1, v322);
      }
      uint64_t v248 = (void *)(((unint64_t)v244 + v26) & v337);
      uint64_t v249 = (const void *)(((unint64_t)v245 + v26) & v337);
      if (v176(v249, 1, v322))
      {
        memcpy(v248, v249, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v248, v249, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v248, 0, 1, v322);
      }
      char v190 = 8;
      goto LABEL_227;
    case 9u:
      uint64_t v118 = v52;
      uint64_t v119 = v24;
      size_t __nd = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v120 = *((_OWORD *)v18 + 1);
      *unint64_t v17 = *(_OWORD *)v18;
      v17[1] = v120;
      long long v121 = *((_OWORD *)v18 + 2);
      long long v122 = *((_OWORD *)v18 + 3);
      long long v123 = *((_OWORD *)v18 + 5);
      v17[4] = *((_OWORD *)v18 + 4);
      v17[5] = v123;
      v17[2] = v121;
      v17[3] = v122;
      long long v124 = *((_OWORD *)v18 + 6);
      long long v125 = *((_OWORD *)v18 + 7);
      long long v126 = *((_OWORD *)v18 + 9);
      v17[8] = *((_OWORD *)v18 + 8);
      v17[9] = v126;
      v17[6] = v124;
      v17[7] = v125;
      uint64_t v284 = v17;
      uint64_t v127 = ((unint64_t)v17 + v6 + 160) & v51;
      uint64_t v307 = v18;
      uint64_t v128 = (unint64_t)&v18[v6 + 160] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v127, v128, v319);
      uint64_t v129 = (void *)((v20 + v127) & v337);
      uint64_t v130 = (const void *)((v20 + v128) & v337);
      uint64_t v131 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v131(v130, 1, v322))
      {
        memcpy(v129, v130, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v129, v130, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v129, 0, 1, v322);
      }
      uint64_t v206 = (void *)(((unint64_t)v129 + v26) & v337);
      uint64_t v207 = (const void *)(((unint64_t)v130 + v26) & v337);
      uint64_t v139 = v330;
      if (v131(v207, 1, v322))
      {
        memcpy(v206, v207, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v206, v207, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v206, 0, 1, v322);
      }
      uint64_t v220 = (void *)(((unint64_t)v206 + v26) & v337);
      uint64_t v221 = (const void *)(((unint64_t)v207 + v26) & v337);
      if (v131(v221, 1, v322))
      {
        memcpy(v220, v221, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v220, v221, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v220, 0, 1, v322);
      }
      uint64_t v231 = (void *)(((unint64_t)v220 + v26) & v337);
      uint64_t v232 = (const void *)(((unint64_t)v221 + v26) & v337);
      if (v131(v232, 1, v322))
      {
        memcpy(v231, v232, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v231, v232, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v231, 0, 1, v322);
      }
      size_t v235 = (void *)(((unint64_t)v231 + v119) & v118);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48))(((unint64_t)v232 + v119) & v118, 1, v315))
      {
        memcpy(v235, (const void *)(((unint64_t)v232 + v119) & v118), __nd);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 16))(v235, ((unint64_t)v232 + v119) & v118, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v235, 0, 1, v315);
      }
      char v190 = 9;
      goto LABEL_197;
    case 0xAu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v177 = *(_OWORD *)v18;
      long long v178 = *((_OWORD *)v18 + 1);
      long long v179 = *((_OWORD *)v18 + 2);
      *((void *)v17 + 6) = *((void *)v18 + 6);
      v17[1] = v178;
      v17[2] = v179;
      *unint64_t v17 = v177;
      unint64_t v107 = v17;
      uint64_t v180 = ((unint64_t)v17 + v6 + 56) & v51;
      uint64_t v109 = v18;
      uint64_t v181 = (unint64_t)&v18[v6 + 56] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v180, v181, v319);
      unint64_t v182 = (void *)((v20 + v180) & v337);
      uint64_t v183 = (const void *)((v20 + v181) & v337);
      uint64_t v184 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v184(v183, 1, v322))
      {
        memcpy(v182, v183, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v182, v183, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v182, 0, 1, v322);
      }
      uint64_t v139 = v330;
      unint64_t v246 = (void *)(((unint64_t)v182 + v26) & v337);
      uint64_t v247 = (const void *)(((unint64_t)v183 + v26) & v337);
      if (v184(v247, 1, v322))
      {
        memcpy(v246, v247, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v246, v247, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v246, 0, 1, v322);
      }
      uint64_t v250 = (void *)(((unint64_t)v246 + v26) & v337);
      uint64_t v251 = (const void *)(((unint64_t)v247 + v26) & v337);
      if (v184(v251, 1, v322))
      {
        memcpy(v250, v251, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v250, v251, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v250, 0, 1, v322);
      }
      char v190 = 10;
      goto LABEL_227;
    case 0xBu:
      size_t v316 = v43;
      uint64_t v318 = v24;
      uint64_t v311 = v52;
      size_t __ne = v27;
      unint64_t v333 = v46;
      long long v132 = *(_OWORD *)v18;
      long long v133 = *((_OWORD *)v18 + 1);
      long long v134 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v134;
      *unint64_t v17 = v132;
      v17[1] = v133;
      uint64_t v285 = v17;
      uint64_t v135 = ((unint64_t)v17 + v6 + 64) & v51;
      uint64_t v136 = (unint64_t)&v18[v6 + 64] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v135, v136, v319);
      __dsta = (void *)((v20 + v135) & v337);
      unint64_t v137 = (const void *)((v20 + v136) & v337);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48))(v137, 1, v322))
      {
        size_t v138 = v335;
        memcpy(__dsta, v137, v335);
        uint64_t v139 = v330;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(__dsta, v137, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(__dsta, 0, 1, v322);
        uint64_t v139 = v330;
        size_t v138 = v335;
      }
      *((unsigned char *)__dsta + v138) = *((unsigned char *)v137 + v138);
      size_t v208 = ((v313 + ((v318 + ((v26 + (((v304 | v7) + v138) & v337)) & v337)) & v311)) & v311) + __ne;
      if (v296 > v208) {
        size_t v208 = v296;
      }
      if (v326 > v208) {
        size_t v208 = v326;
      }
      if (v302 > v208) {
        size_t v208 = v302;
      }
      if (v299 > v208) {
        size_t v208 = v299;
      }
      if (v300 > v208) {
        size_t v208 = v300;
      }
      if (v298 > v208) {
        size_t v208 = v298;
      }
      if (v300 > v208) {
        size_t v208 = v300;
      }
      if (v297 > v208) {
        size_t v208 = v297;
      }
      if (v40 > v208) {
        size_t v208 = v40;
      }
      if (v41 > v208) {
        size_t v208 = v41;
      }
      if (v316 > v208) {
        size_t v208 = v316;
      }
      if (v45 > v208) {
        size_t v208 = v45;
      }
      if (v34 > v208) {
        size_t v208 = v34;
      }
      if (v38 <= v208) {
        size_t v189 = v208;
      }
      else {
        size_t v189 = v38;
      }
      char v190 = 11;
      uint64_t v191 = v324;
      int v185 = v18;
      uint64_t v186 = v285;
      unint64_t v187 = v333;
      goto LABEL_229;
    case 0xCu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v140 = *(_OWORD *)v18;
      long long v141 = *((_OWORD *)v18 + 1);
      long long v142 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v142;
      *unint64_t v17 = v140;
      v17[1] = v141;
      long long v143 = *((_OWORD *)v18 + 4);
      long long v144 = *((_OWORD *)v18 + 5);
      long long v145 = *((_OWORD *)v18 + 7);
      v17[6] = *((_OWORD *)v18 + 6);
      v17[7] = v145;
      v17[4] = v143;
      v17[5] = v144;
      unint64_t v107 = v17;
      uint64_t v146 = ((unint64_t)v17 + v6 + 128) & v51;
      uint64_t v109 = v18;
      uint64_t v147 = (unint64_t)&v18[v6 + 128] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v146, v147, v319);
      unint64_t v148 = (void *)((v20 + v146) & v337);
      uint64_t v149 = (const void *)((v20 + v147) & v337);
      uint64_t v150 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v150(v149, 1, v322))
      {
        memcpy(v148, v149, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v148, v149, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v148, 0, 1, v322);
      }
      size_t v209 = (void *)(((unint64_t)v148 + v26) & v337);
      size_t v210 = (const void *)(((unint64_t)v149 + v26) & v337);
      uint64_t v139 = v330;
      if (v150(v210, 1, v322))
      {
        memcpy(v209, v210, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v209, v210, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v209, 0, 1, v322);
      }
      unint64_t v222 = (void *)(((unint64_t)v209 + v26) & v337);
      uint64_t v223 = (const void *)(((unint64_t)v210 + v26) & v337);
      if (v150(v223, 1, v322))
      {
        memcpy(v222, v223, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v222, v223, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v222, 0, 1, v322);
      }
      char v190 = 12;
      goto LABEL_227;
    case 0xDu:
      int v185 = v18;
      uint64_t v186 = v17;
      unint64_t v187 = v46;
      size_t v188 = v46;
      (*(void (**)(void))(v13 + 16))();
      size_t v189 = v188;
      char v190 = 13;
      uint64_t v139 = v330;
      uint64_t v191 = v324;
      goto LABEL_229;
    case 0xEu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      uint64_t v151 = v17;
      ((void (*)(void))__dst[2])();
      unint64_t v107 = v151;
      uint64_t v152 = (void *)(((unint64_t)v151 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v153 = (const void *)((unint64_t)&v18[v20] & v337);
      uint64_t v154 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v154(v153, 1, v322))
      {
        memcpy(v152, v153, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v152, v153, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v152, 0, 1, v322);
      }
      uint64_t v211 = (void *)(((unint64_t)v152 + v26) & v337);
      uint64_t v212 = (const void *)(((unint64_t)v153 + v26) & v337);
      uint64_t v139 = v330;
      if (v154(v212, 1, v322))
      {
        memcpy(v211, v212, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v211, v212, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v211, 0, 1, v322);
      }
      char v190 = 14;
LABEL_227:
      uint64_t v191 = v324;
      int v185 = v109;
      uint64_t v186 = v107;
      break;
    default:
      uint64_t v310 = v52;
      uint64_t v54 = v24;
      size_t __na = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v55 = *(_OWORD *)v18;
      long long v56 = *((_OWORD *)v18 + 1);
      long long v57 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v57;
      *unint64_t v17 = v55;
      v17[1] = v56;
      long long v58 = *((_OWORD *)v18 + 4);
      long long v59 = *((_OWORD *)v18 + 5);
      long long v60 = *((_OWORD *)v18 + 7);
      v17[6] = *((_OWORD *)v18 + 6);
      v17[7] = v60;
      v17[4] = v58;
      v17[5] = v59;
      long long v61 = *((_OWORD *)v18 + 8);
      long long v62 = *((_OWORD *)v18 + 9);
      long long v63 = *((_OWORD *)v18 + 11);
      v17[10] = *((_OWORD *)v18 + 10);
      v17[11] = v63;
      v17[8] = v61;
      v17[9] = v62;
      long long v64 = *((_OWORD *)v18 + 12);
      long long v65 = *((_OWORD *)v18 + 13);
      long long v66 = *((_OWORD *)v18 + 14);
      *((void *)v17 + 30) = *((void *)v18 + 30);
      v17[13] = v65;
      v17[14] = v66;
      v17[12] = v64;
      uint64_t v284 = v17;
      uint64_t v67 = ((unint64_t)v17 + v6 + 248) & v51;
      uint64_t v307 = v18;
      uint64_t v68 = (unint64_t)&v18[v6 + 248] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[2])(v67, v68, v319);
      *(unsigned char *)(v67 + v312) = *(unsigned char *)(v68 + v312);
      long long v69 = (void *)((v7 + 1 + v67 + v312) & v337);
      uint64_t v70 = (const void *)((v7 + 1 + v68 + v312) & v337);
      uint64_t v71 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v71(v70, 1, v322))
      {
        size_t v72 = v335;
        memcpy(v69, v70, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v69, v70, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v69, 0, 1, v322);
        size_t v72 = v335;
      }
      uint64_t v192 = (void *)(((unint64_t)v69 + v26) & v337);
      double v193 = (const void *)(((unint64_t)v70 + v26) & v337);
      if (v71(v193, 1, v322))
      {
        memcpy(v192, v193, v72);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v192, v193, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v192, 0, 1, v322);
      }
      uint64_t v139 = v330;
      size_t v213 = (void *)(((unint64_t)v192 + v26) & v337);
      uint64_t v214 = (const void *)(((unint64_t)v193 + v26) & v337);
      if (v71(v214, 1, v322))
      {
        memcpy(v213, v214, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 16))(v213, v214, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v213, 0, 1, v322);
      }
      unint64_t v224 = ((unint64_t)v213 + v54) & v310;
      unint64_t v225 = ((unint64_t)v214 + v54) & v310;
      uint64_t v226 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 16);
      v226(v224, v225, v315);
      uint64_t v227 = (void *)((v313 + v224) & v310);
      unint64_t v228 = (const void *)((v313 + v225) & v310);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v317 + 48))(v228, 1, v315))
      {
        memcpy(v227, v228, __na);
      }
      else
      {
        v226((unint64_t)v227, (unint64_t)v228, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v227, 0, 1, v315);
      }
      char v190 = 0;
LABEL_197:
      uint64_t v191 = v324;
LABEL_200:
      int v185 = v307;
      uint64_t v186 = v284;
      break;
  }
  unint64_t v187 = v332;
  size_t v189 = v327;
LABEL_229:
  v186[v189] = v190;
  uint64_t v252 = v191[4];
  uint64_t v253 = *(void *)(v252 - 8);
  uint64_t v254 = *(unsigned __int8 *)(v253 + 80);
  uint64_t v255 = v187 + v254 + 1;
  uint64_t v256 = (void *)((unint64_t)&v186[v255] & ~v254);
  uint64_t v257 = (const void *)((unint64_t)&v185[v255] & ~v254);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v253 + 48))(v257, 1, v252))
  {
    int v258 = *(_DWORD *)(v253 + 84);
    size_t v259 = *(void *)(v253 + 64);
    if (v258) {
      size_t v260 = v259;
    }
    else {
      size_t v260 = v259 + 1;
    }
    memcpy(v256, v257, v260);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v253 + 16))(v256, v257, v252);
    uint64_t v262 = *(void (**)(void *, void, uint64_t, uint64_t))(v253 + 56);
    uint64_t v261 = v253 + 56;
    v262(v256, 0, 1, v252);
    int v258 = *(_DWORD *)(v261 + 28);
    size_t v259 = *(void *)(v261 + 8);
  }
  if (v258) {
    size_t v263 = v259;
  }
  else {
    size_t v263 = v259 + 1;
  }
  uint64_t v264 = v191[6];
  uint64_t v265 = *(void *)(v264 - 8);
  uint64_t v266 = *(unsigned __int8 *)(v265 + 80);
  uint64_t v267 = v263 + v266;
  uint64_t v268 = (void *)(((unint64_t)v256 + v267) & ~v266);
  uint64_t v269 = (const void *)(((unint64_t)v257 + v267) & ~v266);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v265 + 48))(v269, 1, v264))
  {
    int v270 = *(_DWORD *)(v265 + 84);
    uint64_t v271 = *(void *)(v265 + 64);
    if (v270) {
      size_t v272 = *(void *)(v265 + 64);
    }
    else {
      size_t v272 = v271 + 1;
    }
    memcpy(v268, v269, v272);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v265 + 16))(v268, v269, v264);
    size_t v274 = *(void (**)(void *, void, uint64_t, uint64_t))(v265 + 56);
    uint64_t v273 = v265 + 56;
    v274(v268, 0, 1, v264);
    int v270 = *(_DWORD *)(v273 + 28);
    uint64_t v271 = *(void *)(v273 + 8);
  }
  if (v270) {
    uint64_t v275 = v271;
  }
  else {
    uint64_t v275 = v271 + 1;
  }
  *(void *)(((unint64_t)v268 + v275 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v269
                                                                                       + v275
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return v139;
}

uint64_t sub_24ED4F690(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[5] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v458 = a3[3];
  uint64_t v8 = *(void *)(v458 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v463 = sub_24EE55880();
  uint64_t v10 = *(void *)(v463 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v449 = a3[2];
  uint64_t v12 = *(void *)(v449 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = sub_24EE55960();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a3[7] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v9 | v11 | v13 | v16 | v18 | 7;
  uint64_t v20 = (unsigned __int8 *)((v19 + v7 + a1) & ~v19);
  uint64_t v21 = (v19 + v7 + a2) & ~v19;
  uint64_t v22 = ~v9;
  uint64_t v23 = (v9 + 248) & ~v9;
  uint64_t v24 = (unsigned __int8 *)v21;
  uint64_t v464 = v10;
  uint64_t v465 = v20;
  v456 = a3;
  uint64_t v457 = a1;
  uint64_t v460 = v17;
  if (v20 == (unsigned __int8 *)v21)
  {
    uint64_t v50 = ~v11;
    uint64_t v55 = v23 + v11 + 1;
    uint64_t v56 = ~v13;
    uint64_t v57 = ~v16;
    uint64_t v58 = ((v9 + 224) & v22) + v11 + 1;
    uint64_t v59 = (v11 + 64) & ~v11;
    uint64_t v60 = v11 + 24;
    uint64_t v61 = ((v9 + 24) & v22) + v11;
    uint64_t v62 = ((v9 + 104) & v22) + v11;
    uint64_t v63 = ((v9 + 160) & v22) + v11;
    uint64_t v64 = ((v9 + 56) & v22) + v11;
    uint64_t v65 = ((v9 + 64) & v22) + v11;
    uint64_t v66 = ((v9 + 128) & v22) + v11;
    uint64_t v67 = ~v18;
    uint64_t v68 = v12;
    uint64_t v69 = v65;
    uint64_t v70 = v8;
    uint64_t v71 = v24;
  }
  else
  {
    uint64_t v407 = v14;
    uint64_t v413 = a3[7];
    uint64_t v462 = v8;
    size_t v25 = *(void *)(v8 + 64);
    uint64_t v424 = v23 + v11 + 1;
    size_t v429 = v424 + v25;
    int v26 = *(_DWORD *)(v10 + 84);
    size_t v27 = *(void *)(v10 + 64);
    int v408 = v26;
    if (v26) {
      size_t v28 = v27;
    }
    else {
      size_t v28 = v27 + 1;
    }
    size_t v29 = v28 + v11;
    size_t v30 = v28 + v13;
    uint64_t v31 = *(void *)(v12 + 64);
    uint64_t v447 = v31 + v13;
    uint64_t v451 = v12;
    if (*(_DWORD *)(v12 + 84)) {
      size_t v32 = *(void *)(v12 + 64);
    }
    else {
      size_t v32 = v31 + 1;
    }
    unint64_t v33 = ((v31 + v13 + ((v28 + v13 + ((v28 + v11 + ((v28 + v11 + ((v424 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v13)) & ~v13)
        + v32;
    if (v27 <= v25) {
      size_t v34 = v25;
    }
    else {
      size_t v34 = v27;
    }
    size_t v406 = v28 + v16;
    uint64_t v35 = *(void *)(v15 + 64);
    if (((v28 + v16 + (v29 & ~v11)) & ~v16) + v35 <= v34) {
      size_t v36 = v34;
    }
    else {
      size_t v36 = ((v28 + v16 + (v29 & ~v11)) & ~v16) + v35;
    }
    uint64_t v423 = ((v9 + 224) & v22) + v11 + 1;
    size_t v411 = v32 + v13;
    size_t v412 = v32 + v18;
    int v37 = *(_DWORD *)(v17 + 84);
    unint64_t v38 = *(void *)(v17 + 64);
    if (v37) {
      size_t v39 = v38;
    }
    else {
      size_t v39 = v38 + 1;
    }
    size_t __n = v39;
    unint64_t v40 = ((v32 + v18 + ((v32 + v13 + ((v30 + ((v29 + ((v29 + ((v423 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v13)) & ~v13)) & ~v18)
        + v39;
    uint64_t v422 = (v11 + 64) & ~v11;
    unint64_t v41 = ((v30 + ((v29 + v422) & ~v11)) & ~v13) + v32;
    size_t v42 = v28 + ((v25 + v11) & ~v11);
    unint64_t v43 = ((v42 + v11) & ~v11) + v28;
    uint64_t v448 = v11 + 24;
    unint64_t v44 = ((v11 + 24 + (v42 & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v28;
    uint64_t v421 = ((v9 + 24) & v22) + v11;
    uint64_t v45 = ((v9 + 104) & v22) + v11;
    uint64_t v446 = v28 + v13;
    size_t v450 = v32;
    unint64_t v46 = ((v30 + ((v29 + ((v29 + ((v29 + ((((v9 + 160) & v22) + v11 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v13)
        + v32;
    uint64_t v418 = ((v9 + 56) & v22) + v11;
    size_t v47 = ((((v9 + 64) & v22) + v11 + v25) & ~v11) + v28;
    unint64_t v440 = v44;
    unint64_t v441 = v41;
    if (v44 > v33) {
      unint64_t v33 = v44;
    }
    size_t v433 = v36 + 1;
    if (v33 <= v36 + 1) {
      unint64_t v33 = v36 + 1;
    }
    unint64_t v442 = v40;
    if (v33 <= v40) {
      unint64_t v33 = v40;
    }
    if (v33 <= v41) {
      unint64_t v33 = v41;
    }
    size_t v438 = ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28;
    unint64_t v439 = ((v43 + v11) & ~v11) + v28;
    if (v33 <= v439) {
      unint64_t v33 = ((v43 + v11) & ~v11) + v28;
    }
    if (v33 <= ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28) {
      unint64_t v33 = ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28;
    }
    uint64_t v48 = ~v9;
    unint64_t v436 = v46;
    unint64_t v437 = ((v29 + ((v29 + ((v45 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v437) {
      unint64_t v33 = ((v29 + ((v29 + ((v45 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    if (v33 <= v46) {
      unint64_t v33 = v46;
    }
    if (v33 <= ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28) {
      unint64_t v33 = ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    size_t v434 = v47 + 1;
    size_t v435 = ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v47 + 1) {
      unint64_t v33 = v47 + 1;
    }
    uint64_t v428 = ((v9 + 128) & v22) + v11;
    size_t v452 = v28 + v11;
    size_t v455 = v28;
    unint64_t v432 = ((v29 + ((v29 + ((v428 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v432) {
      unint64_t v33 = ((v29 + ((v29 + ((v428 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    unint64_t v443 = v43;
    unint64_t v444 = v38;
    if (v33 <= v43) {
      unint64_t v33 = v43;
    }
    if (v33 <= v38) {
      unint64_t v49 = v38;
    }
    else {
      unint64_t v49 = v33;
    }
    uint64_t v50 = ~v11;
    uint64_t v461 = ~v13;
    uint64_t v445 = ~v18;
    unsigned int v51 = v465[v49];
    unsigned int v52 = v51 - 15;
    uint64_t v459 = v11;
    if (v51 >= 0xF)
    {
      if (v49 <= 3) {
        uint64_t v53 = v49;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *v465;
          if (v49 < 4) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 2:
          int v54 = *(unsigned __int16 *)v465;
          if (v49 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          int v54 = *(unsigned __int16 *)v465 | (v465[2] << 16);
          if (v49 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 4:
          int v54 = *(_DWORD *)v465;
          if (v49 < 4) {
LABEL_57:
          }
            v54 |= v52 << (8 * v49);
LABEL_58:
          unsigned int v51 = v54 + 15;
          break;
        default:
          break;
      }
    }
    unint64_t v453 = v49;
    uint64_t v454 = v24;
    uint64_t v426 = v13;
    uint64_t v430 = *(void *)(v14 - 8);
    uint64_t v431 = ~v16;
    uint64_t v425 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v419 = ((v9 + 160) & v22) + v11;
    uint64_t v420 = ((v9 + 104) & v22) + v11;
    uint64_t v427 = ((v9 + 64) & v22) + v11;
    size_t v410 = v36;
    uint64_t v414 = v9;
    switch(v51)
    {
      case 1u:
        unsigned int v87 = v465[v36];
        unsigned int v88 = v87 - 3;
        if (v87 < 3)
        {
          uint64_t v91 = v463;
          uint64_t v90 = v464;
        }
        else
        {
          if (v36 <= 3) {
            uint64_t v89 = v36;
          }
          else {
            uint64_t v89 = 4;
          }
          uint64_t v91 = v463;
          uint64_t v90 = v464;
          switch(v89)
          {
            case 1:
              int v92 = *v465;
              goto LABEL_137;
            case 2:
              int v92 = *(unsigned __int16 *)v465;
              goto LABEL_137;
            case 3:
              int v92 = *(unsigned __int16 *)v465 | (v465[2] << 16);
              goto LABEL_137;
            case 4:
              int v92 = *(_DWORD *)v465;
LABEL_137:
              if (v36 < 4) {
                unsigned int v87 = (v92 | (v88 << (8 * v36))) + 3;
              }
              else {
                unsigned int v87 = v92 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v87 != 2)
        {
          if (v87 == 1) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v465, v91);
          }
          else {
            (*(void (**)(unsigned __int8 *, uint64_t))(v462 + 8))(v465, v458);
          }
          goto LABEL_149;
        }
        uint64_t v130 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v90 + 48);
        if (!v130(v465, 1, v91)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v465, v91);
        }
        uint64_t v131 = v90;
        uint64_t v11 = v459;
        unint64_t v132 = (unint64_t)&v465[v459 + v455] & v50;
        uint64_t v85 = v446;
        if (!v130((unsigned __int8 *)v132, 1, v91)) {
          (*(void (**)(unint64_t, uint64_t))(v131 + 8))(v132, v463);
        }
        (*(void (**)(size_t, uint64_t))(v430 + 8))((v406 + v132) & v431, v407);
        size_t v86 = v455;
        break;
      case 2u:
        uint64_t v93 = (unint64_t)&v465[v9 + 224] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v93, v458);
        uint64_t v94 = (v11 + v25 + v93 + 1) & v50;
        uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v95(v94, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v94, v463);
        }
        uint64_t v96 = (v452 + v94) & v50;
        if (!v95(v96, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v96, v463);
        }
        uint64_t v97 = (v452 + v96) & v50;
        if (!v95(v97, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v97, v463);
        }
        size_t v98 = (v446 + v97) & v461;
        uint64_t v99 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48);
        if (!v99(v98, 1, v449)) {
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v98, v449);
        }
        size_t v100 = (v411 + v98) & v461;
        if (!v99(v100, 1, v449)) {
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v100, v449);
        }
        size_t v101 = (v412 + v100) & v445;
        uint64_t v85 = v446;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v460 + 48))(v101, 1, v413)) {
          (*(void (**)(size_t, uint64_t))(v460 + 8))(v101, v413);
        }
        break;
      case 3u:
        uint64_t v102 = (uint64_t)&v465[v11 + 64];
        uint64_t v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v103(v102 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v102 & v50, v463);
        }
        size_t v104 = ((v102 | v11) + v455) & v50;
        uint64_t v85 = v446;
        if (!v103(v104, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v104, v463);
        }
        size_t v105 = (v446 + v104) & v461;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48))(v105, 1, v449)) {
          goto LABEL_112;
        }
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        uint64_t v106 = (uint64_t)&v465[v11 + v25];
        goto LABEL_120;
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        unint64_t v72 = (unint64_t)&v465[v11 + v25] & v50;
        uint64_t v73 = v463;
        unsigned int v74 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v74(v72, 1, v463)) {
          (*(void (**)(unint64_t, uint64_t))(v464 + 8))(v72, v463);
        }
        size_t v75 = v455;
        size_t v76 = v448 + ((v455 + v72) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_131;
      case 6u:
        uint64_t v107 = (unint64_t)&v465[v9 + 24] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v107, v458);
        uint64_t v108 = v107 + v11 + v25;
        goto LABEL_128;
      case 8u:
        uint64_t v409 = ~v9;
        uint64_t v109 = (unint64_t)&v465[v9 + 104] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v109, v458);
        uint64_t v110 = v109 + v11 + v25;
        unint64_t v111 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v111(v110 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v110 & v50, v463);
        }
        uint64_t v112 = v110 | v11;
        size_t v86 = v455;
        size_t v113 = (v112 + v455) & v50;
        uint64_t v85 = v446;
        if (!v111(v113, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v113, v463);
        }
        size_t v114 = (v452 + v113) & v50;
        uint64_t v48 = v409;
        if (!v111(v114, 1, v463)) {
          goto LABEL_132;
        }
        break;
      case 9u:
        uint64_t v115 = (unint64_t)&v465[v9 + 160] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v115, v458);
        uint64_t v116 = v115 + v11 + v25;
        size_t v117 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v117(v116 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v116 & v50, v463);
        }
        uint64_t v118 = v116 | v11;
        size_t v86 = v455;
        size_t v119 = (v118 + v455) & v50;
        if (!v117(v119, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v119, v463);
        }
        size_t v120 = (v452 + v119) & v50;
        if (!v117(v120, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v120, v463);
        }
        size_t v121 = (v452 + v120) & v50;
        if (!v117(v121, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v121, v463);
        }
        uint64_t v85 = v446;
        size_t v105 = (v446 + v121) & v461;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48))(v105, 1, v449)) {
LABEL_112:
        }
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v105, v449);
        break;
      case 0xAu:
        uint64_t v122 = (uint64_t)&v465[v9 + 56];
        goto LABEL_119;
      case 0xBu:
        uint64_t v123 = (unint64_t)&v465[v9 + 64] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v123, v458);
        uint64_t v124 = (v123 + v11 + v25) & v50;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48))(v124, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v124, v463);
        }
        size_t v86 = v455;
        uint64_t v85 = v446;
        if (!v408) {
          break;
        }
        goto LABEL_151;
      case 0xCu:
        uint64_t v122 = (uint64_t)&v465[v9 + 128];
LABEL_119:
        uint64_t v125 = v122 & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v122 & v22, v458);
        uint64_t v106 = v125 + v11 + v25;
LABEL_120:
        long long v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v126(v106 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v106 & v50, v463);
        }
        unint64_t v127 = v106 | v11;
        size_t v86 = v455;
        size_t v128 = (v127 + v455) & v50;
        uint64_t v85 = v446;
        if (!v126(v128, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v128, v463);
        }
        size_t v114 = (v452 + v128) & v50;
        if (!v126(v114, 1, v463)) {
          goto LABEL_132;
        }
        break;
      case 0xDu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v460 + 8))(v465, v413);
LABEL_149:
        size_t v86 = v455;
        uint64_t v85 = v446;
        uint64_t v11 = v459;
        break;
      case 0xEu:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        uint64_t v108 = (uint64_t)&v465[v11 + v25];
LABEL_128:
        uint64_t v73 = v463;
        unsigned int v74 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v74(v108 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v108 & v50, v463);
        }
        size_t v75 = v455;
        size_t v76 = (v108 | v11) + v455;
LABEL_131:
        size_t v114 = v76 & v50;
        unsigned int v129 = v74(v76 & v50, 1, v73);
        size_t v86 = v75;
        uint64_t v85 = v446;
        if (!v129) {
LABEL_132:
        }
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v114, v463);
        break;
      default:
        uint64_t v77 = (unint64_t)&v465[v9 + 248] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v77, v458);
        uint64_t v78 = (v11 + v25 + v77 + 1) & v50;
        uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v79(v78, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v78, v463);
        }
        uint64_t v80 = (v452 + v78) & v50;
        if (!v79(v80, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v80, v463);
        }
        uint64_t v81 = (v452 + v80) & v50;
        if (!v79(v81, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v81, v463);
        }
        size_t v82 = (v446 + v81) & v461;
        long long v83 = *(void (**)(size_t, uint64_t))(v451 + 8);
        v83(v82, v449);
        uint64_t v84 = (v447 + v82) & v461;
        uint64_t v85 = v446;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v451 + 48))(v84, 1, v449)) {
          v83(v84, v449);
        }
        break;
    }
    size_t v27 = v86;
LABEL_151:
    size_t v133 = ((v447 + ((v85 + ((v452 + (((v429 | v11) + v27) & v50)) & v50)) & v461)) & v461) + v450;
    if (v433 > v133) {
      size_t v133 = v433;
    }
    if (v442 > v133) {
      size_t v133 = v442;
    }
    if (v441 > v133) {
      size_t v133 = v441;
    }
    if (v439 > v133) {
      size_t v133 = v439;
    }
    if (v440 > v133) {
      size_t v133 = v440;
    }
    if (v438 > v133) {
      size_t v133 = v438;
    }
    if (v440 > v133) {
      size_t v133 = v440;
    }
    if (v437 > v133) {
      size_t v133 = v437;
    }
    if (v436 > v133) {
      size_t v133 = v436;
    }
    if (v435 > v133) {
      size_t v133 = v435;
    }
    if (v434 > v133) {
      size_t v133 = v434;
    }
    if (v432 > v133) {
      size_t v133 = v432;
    }
    if (v444 > v133) {
      size_t v133 = v444;
    }
    if (v443 > v133) {
      size_t v133 = v443;
    }
    unsigned int v134 = v454[v133];
    unsigned int v135 = v134 - 15;
    if (v134 < 0xF)
    {
      uint64_t v139 = v464;
      size_t v138 = v465;
      unint64_t v136 = v453;
    }
    else
    {
      unint64_t v136 = v453;
      if (v453 <= 3) {
        uint64_t v137 = v453;
      }
      else {
        uint64_t v137 = 4;
      }
      uint64_t v139 = v464;
      size_t v138 = v465;
      switch(v137)
      {
        case 1:
          int v140 = *v454;
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 2:
          int v140 = *(unsigned __int16 *)v454;
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 3:
          int v140 = *(unsigned __int16 *)v454 | (v454[2] << 16);
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 4:
          int v140 = *(_DWORD *)v454;
          if (v453 < 4) {
LABEL_188:
          }
            unsigned int v134 = (v140 | (v135 << (8 * v453))) + 15;
          else {
LABEL_192:
          }
            unsigned int v134 = v140 + 15;
          break;
        default:
          break;
      }
    }
    switch(v134)
    {
      case 1u:
        unsigned int v160 = v454[v410];
        unsigned int v161 = v160 - 3;
        uint64_t v415 = v50;
        if (v160 < 3)
        {
          uint64_t v166 = v461;
          uint64_t v163 = v462;
          uint64_t v165 = v448;
          uint64_t v164 = v463;
        }
        else
        {
          if (v410 <= 3) {
            uint64_t v162 = v410;
          }
          else {
            uint64_t v162 = 4;
          }
          uint64_t v163 = v462;
          uint64_t v164 = v463;
          uint64_t v165 = v448;
          uint64_t v166 = v461;
          switch(v162)
          {
            case 1:
              int v167 = *v454;
              goto LABEL_439;
            case 2:
              int v167 = *(unsigned __int16 *)v454;
              goto LABEL_439;
            case 3:
              int v167 = *(unsigned __int16 *)v454 | (v454[2] << 16);
              goto LABEL_439;
            case 4:
              int v167 = *(_DWORD *)v454;
LABEL_439:
              if (v410 < 4) {
                unsigned int v160 = (v167 | (v161 << (8 * v410))) + 3;
              }
              else {
                unsigned int v160 = v167 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v160 == 2)
        {
          uint64_t v401 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v464 + 48);
          if (v401(v454, 1, v164))
          {
            size_t v402 = v455;
            memcpy(v465, v454, v455);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v464 + 16))(v465, v454, v164);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v464 + 56))(v465, 0, 1, v164);
            size_t v402 = v455;
          }
          unint64_t v403 = (void *)((unint64_t)&v465[v459 + v402] & v415);
          unint64_t v404 = (void *)((unint64_t)&v454[v459 + v402] & v415);
          uint64_t v69 = v427;
          if (v401((unsigned __int8 *)v404, 1, v164))
          {
            memcpy(v403, v404, v402);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v464 + 16))(v403, v404, v164);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v403, 0, 1, v164);
          }
          uint64_t v165 = v448;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 16))(((unint64_t)v403 + v406) & v431, ((unint64_t)v404 + v406) & v431, v407);
          uint64_t v15 = v430;
          char v400 = 2;
          uint64_t v399 = v454;
          size_t v138 = v465;
          uint64_t v13 = v426;
          uint64_t v55 = v424;
          uint64_t v16 = v425;
          uint64_t v59 = v422;
          uint64_t v58 = v423;
          uint64_t v62 = v420;
          uint64_t v61 = v421;
          uint64_t v64 = v418;
          uint64_t v63 = v419;
          uint64_t v68 = v451;
          uint64_t v56 = v461;
        }
        else
        {
          uint64_t v398 = v166;
          if (v160 == 1)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v464 + 16))(v138, v454, v164);
            uint64_t v56 = v398;
            uint64_t v399 = v454;
            char v400 = 1;
            uint64_t v13 = v426;
            uint64_t v68 = v451;
            uint64_t v15 = v430;
            uint64_t v55 = v424;
            uint64_t v16 = v425;
            uint64_t v59 = v422;
            uint64_t v58 = v423;
            uint64_t v62 = v420;
            uint64_t v61 = v421;
            uint64_t v64 = v418;
            uint64_t v63 = v419;
            uint64_t v69 = v427;
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v163 + 16))(v138, v454, v458);
            uint64_t v399 = v454;
            char v400 = 0;
            uint64_t v13 = v426;
            uint64_t v68 = v451;
            uint64_t v15 = v430;
            uint64_t v55 = v424;
            uint64_t v16 = v425;
            uint64_t v59 = v422;
            uint64_t v58 = v423;
            uint64_t v62 = v420;
            uint64_t v61 = v421;
            uint64_t v64 = v418;
            uint64_t v63 = v419;
            uint64_t v69 = v427;
            uint64_t v56 = v398;
          }
        }
        v138[v410] = v400;
        v138[v453] = 1;
        uint64_t v67 = ~v18;
        uint64_t v57 = v431;
        uint64_t v70 = v462;
        uint64_t v66 = v428;
        uint64_t v60 = v165;
        uint64_t v50 = v415;
        uint64_t v71 = v399;
        goto LABEL_351;
      case 2u:
        long long v168 = *((_OWORD *)v454 + 1);
        *(_OWORD *)size_t v138 = *(_OWORD *)v454;
        *((_OWORD *)v138 + 1) = v168;
        long long v169 = *((_OWORD *)v454 + 2);
        long long v170 = *((_OWORD *)v454 + 3);
        long long v171 = *((_OWORD *)v454 + 5);
        *((_OWORD *)v138 + 4) = *((_OWORD *)v454 + 4);
        *((_OWORD *)v138 + 5) = v171;
        *((_OWORD *)v138 + 2) = v169;
        *((_OWORD *)v138 + 3) = v170;
        long long v172 = *((_OWORD *)v454 + 6);
        long long v173 = *((_OWORD *)v454 + 7);
        long long v174 = *((_OWORD *)v454 + 9);
        *((_OWORD *)v138 + 8) = *((_OWORD *)v454 + 8);
        *((_OWORD *)v138 + 9) = v174;
        *((_OWORD *)v138 + 6) = v172;
        *((_OWORD *)v138 + 7) = v173;
        long long v175 = *((_OWORD *)v454 + 10);
        long long v176 = *((_OWORD *)v454 + 11);
        long long v177 = *((_OWORD *)v454 + 13);
        *((_OWORD *)v138 + 12) = *((_OWORD *)v454 + 12);
        *((_OWORD *)v138 + 13) = v177;
        *((_OWORD *)v138 + 10) = v175;
        *((_OWORD *)v138 + 11) = v176;
        uint64_t v178 = (unint64_t)&v138[v414 + 224] & v48;
        uint64_t v179 = (unint64_t)&v454[v414 + 224] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 16))(v178, v179, v458);
        size_t v180 = v25 + v179;
        *(unsigned char *)(v25 + v178) = *(unsigned char *)(v25 + v179);
        uint64_t v181 = (void *)((v11 + 1 + v25 + v178) & v50);
        unint64_t v182 = (const void *)((v11 + 1 + v180) & v50);
        uint64_t v183 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v183(v182, 1, v463))
        {
          size_t v184 = v455;
          memcpy(v181, v182, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v181, v182, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v181, 0, 1, v463);
          size_t v184 = v455;
        }
        char v278 = (void *)(((unint64_t)v181 + v452) & v50);
        size_t v279 = (const void *)(((unint64_t)v182 + v452) & v50);
        if (v183(v279, 1, v463))
        {
          memcpy(v278, v279, v184);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v278, v279, v463);
          size_t v184 = v455;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v278, 0, 1, v463);
        }
        uint64_t v308 = (void *)(((unint64_t)v278 + v452) & v50);
        uint64_t v309 = (const void *)(((unint64_t)v279 + v452) & v50);
        if (v183(v309, 1, v463))
        {
          memcpy(v308, v309, v184);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v308, v309, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v308, 0, 1, v463);
        }
        uint64_t v64 = v418;
        size_t v328 = (void *)(((unint64_t)v308 + v85) & v461);
        uint64_t v329 = (const void *)(((unint64_t)v309 + v85) & v461);
        uint64_t v330 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48);
        if (v330(v329, 1, v449))
        {
          memcpy(v328, v329, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 16))(v328, v329, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v328, 0, 1, v449);
        }
        int v336 = (void *)(((unint64_t)v328 + v411) & v461);
        uint64_t v337 = (const void *)(((unint64_t)v329 + v411) & v461);
        if (v330(v337, 1, v449))
        {
          memcpy(v336, v337, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 16))(v336, v337, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v336, 0, 1, v449);
        }
        uint64_t v416 = v50;
        uint64_t v340 = (void *)(((unint64_t)v336 + v412) & v445);
        uint64_t v341 = (const void *)(((unint64_t)v337 + v412) & v445);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v460 + 48))(v341, 1, v413))
        {
          memcpy(v340, v341, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v460 + 16))(v340, v341, v413);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v460 + 56))(v340, 0, 1, v413);
        }
        uint64_t v60 = v448;
        uint64_t v71 = v454;
        v465[v453] = 2;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v68 = v451;
        goto LABEL_366;
      case 3u:
        long long v185 = *(_OWORD *)v454;
        long long v186 = *((_OWORD *)v454 + 1);
        long long v187 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v187;
        *(_OWORD *)size_t v138 = v185;
        *((_OWORD *)v138 + 1) = v186;
        uint64_t v188 = (uint64_t)&v138[v11 + 64];
        uint64_t v189 = v139;
        uint64_t v190 = (uint64_t)&v454[v11 + 64];
        uint64_t v191 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48);
        if (v191(v190 & v50, 1, v463))
        {
          size_t v192 = v455;
          memcpy((void *)(v188 & v50), (const void *)(v190 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 16))(v188 & v50, v190 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56))(v188 & v50, 0, 1, v463);
          size_t v192 = v455;
        }
        size_t v280 = (void *)(((v188 | v459) + v192) & v50);
        uint64_t v416 = v50;
        size_t v281 = (const void *)(((v190 | v459) + v192) & v50);
        if (v191((uint64_t)v281, 1, v463))
        {
          memcpy(v280, v281, v192);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v280, v281, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v280, 0, 1, v463);
        }
        uint64_t v310 = v448;
        uint64_t v64 = v418;
        uint64_t v311 = (void *)(((unint64_t)v280 + v446) & v461);
        uint64_t v312 = (const void *)(((unint64_t)v281 + v446) & v461);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v312, 1, v449))
        {
          memcpy(v311, v312, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 16))(v311, v312, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v311, 0, 1, v449);
        }
        char v331 = 3;
        goto LABEL_363;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 16))(v138, v454, v458);
        double v193 = &v138[v11 + v25];
        unint64_t v194 = (unint64_t)&v454[v11 + v25];
        uint64_t v195 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v139 + 48);
        if (v195(v194 & v50, 1, v463))
        {
          size_t v196 = v455;
          memcpy((void *)((unint64_t)v193 & v50), (const void *)(v194 & v50), v455);
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v139 + 16))((unint64_t)v193 & v50, v194 & v50, v463);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v139 + 56))((unint64_t)v193 & v50, 0, 1, v463);
          size_t v196 = v455;
        }
        uint64_t v282 = (void *)((((unint64_t)v193 | v459) + v196) & v50);
        size_t v283 = (const void *)(((v194 | v459) + v196) & v50);
        if (v195((unint64_t)v283, 1, v463))
        {
          memcpy(v282, v283, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v282, v283, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v282, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v313 = (void *)(((unint64_t)v282 + v452) & v50);
        size_t v314 = (const void *)(((unint64_t)v283 + v452) & v50);
        if (v195((unint64_t)v314, 1, v463))
        {
          memcpy(v313, v314, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v313, v314, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v313, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v60 = v448;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 4;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v66 = v428;
        uint64_t v11 = v459;
        uint64_t v56 = v461;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 16))(v138, v454, v458);
        uint64_t v197 = (void *)((unint64_t)&v138[v11 + v25] & v50);
        uint64_t v198 = (const void *)((unint64_t)&v454[v11 + v25] & v50);
        unint64_t v199 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        uint64_t v200 = v50;
        if (v199(v198, 1, v463))
        {
          size_t v201 = v455;
          memcpy(v197, v198, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v197, v198, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v197, 0, 1, v463);
          size_t v201 = v455;
        }
        *((unsigned char *)v197 + v201) = *((unsigned char *)v198 + v201);
        unint64_t v284 = ((unint64_t)v197 + v201) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v285 = ((unint64_t)v198 + v201) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v284 + 8) = *(_OWORD *)(v285 + 8);
        uint64_t v286 = v448;
        uint64_t v287 = (void *)((v448 + v284) & v200);
        uint64_t v417 = v200;
        size_t v288 = (const void *)((v448 + v285) & v200);
        if (v199(v288, 1, v463))
        {
          memcpy(v287, v288, v201);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v287, v288, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v287, 0, 1, v463);
        }
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        v465[v453] = 5;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        goto LABEL_326;
      case 6u:
        long long v202 = *(_OWORD *)v454;
        *((void *)v138 + 2) = *((void *)v454 + 2);
        *(_OWORD *)size_t v138 = v202;
        uint64_t v203 = (unint64_t)&v138[v414 + 24] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 16))(v203, (unint64_t)&v454[v414 + 24] & v48, v458);
        uint64_t v204 = v139;
        uint64_t v205 = v203 + v11 + v25;
        uint64_t v206 = ((unint64_t)&v454[v414 + 24] & v48) + v11 + v25;
        uint64_t v207 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
        if (v207(v206 & v50, 1, v463))
        {
          size_t v208 = v455;
          memcpy((void *)(v205 & v50), (const void *)(v206 & v50), v455);
          uint64_t v69 = v427;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v205 & v50, v206 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 56))(v205 & v50, 0, 1, v463);
          uint64_t v69 = v427;
          size_t v208 = v455;
        }
        uint64_t v289 = (void *)(((v205 | v459) + v208) & v50);
        uint64_t v290 = (const void *)(((v206 | v459) + v208) & v50);
        uint64_t v417 = v50;
        if (v207((uint64_t)v290, 1, v463))
        {
          memcpy(v289, v290, v208);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v289, v290, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v289, 0, 1, v463);
        }
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v66 = v428;
        uint64_t v67 = ~v18;
        v465[v453] = 6;
        goto LABEL_350;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 16))(v138, v454, v458);
        size_t v209 = (void *)((unint64_t)&v138[v11 + v25] & v50);
        size_t v210 = (const void *)((unint64_t)&v454[v11 + v25] & v50);
        uint64_t v211 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v211(v210, 1, v463))
        {
          size_t v212 = v455;
          memcpy(v209, v210, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v209, v210, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v209, 0, 1, v463);
          size_t v212 = v455;
        }
        *((unsigned char *)v209 + v212) = *((unsigned char *)v210 + v212);
        unint64_t v291 = ((unint64_t)v209 + v212) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v292 = ((unint64_t)v210 + v212) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v291 + 8) = *(_OWORD *)(v292 + 8);
        unint64_t v293 = (void *)((v448 + v291) & v50);
        size_t v294 = (const void *)((v448 + v292) & v50);
        uint64_t v69 = v427;
        if (v211(v294, 1, v463))
        {
          memcpy(v293, v294, v212);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v293, v294, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v293, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 7;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v66 = v428;
        uint64_t v60 = v448;
        goto LABEL_351;
      case 8u:
        long long v213 = *(_OWORD *)v454;
        long long v214 = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 1) = *((_OWORD *)v454 + 1);
        *((_OWORD *)v138 + 2) = v214;
        *(_OWORD *)size_t v138 = v213;
        long long v215 = *((_OWORD *)v454 + 3);
        long long v216 = *((_OWORD *)v454 + 4);
        long long v217 = *((_OWORD *)v454 + 5);
        *((void *)v138 + 12) = *((void *)v454 + 12);
        *((_OWORD *)v138 + 4) = v216;
        *((_OWORD *)v138 + 5) = v217;
        *((_OWORD *)v138 + 3) = v215;
        uint64_t v218 = (unint64_t)&v138[v414 + 104] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 16))(v218, (unint64_t)&v454[v414 + 104] & v48, v458);
        uint64_t v219 = v218 + v11 + v25;
        uint64_t v220 = v139;
        uint64_t v221 = ((unint64_t)&v454[v414 + 104] & v48) + v11 + v25;
        unint64_t v222 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
        if (v222(v221 & v50, 1, v463))
        {
          size_t v223 = v455;
          memcpy((void *)(v219 & v50), (const void *)(v221 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 16))(v219 & v50, v221 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v220 + 56))(v219 & v50, 0, 1, v463);
          size_t v223 = v455;
        }
        unint64_t v295 = (void *)(((v219 | v459) + v223) & v50);
        size_t v296 = (const void *)(((v221 | v459) + v223) & v50);
        if (v222((uint64_t)v296, 1, v463))
        {
          memcpy(v295, v296, v223);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v295, v296, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v295, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v315 = (void *)(((unint64_t)v295 + v452) & v50);
        size_t v316 = (const void *)(((unint64_t)v296 + v452) & v50);
        uint64_t v417 = v50;
        if (v222((uint64_t)v316, 1, v463))
        {
          memcpy(v315, v316, v223);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v315, v316, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v315, 0, 1, v463);
        }
        uint64_t v71 = v454;
        unint64_t v332 = v465;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        char v333 = 8;
        goto LABEL_344;
      case 9u:
        long long v224 = *((_OWORD *)v454 + 1);
        *(_OWORD *)size_t v138 = *(_OWORD *)v454;
        *((_OWORD *)v138 + 1) = v224;
        long long v225 = *((_OWORD *)v454 + 2);
        long long v226 = *((_OWORD *)v454 + 3);
        long long v227 = *((_OWORD *)v454 + 5);
        *((_OWORD *)v138 + 4) = *((_OWORD *)v454 + 4);
        *((_OWORD *)v138 + 5) = v227;
        *((_OWORD *)v138 + 2) = v225;
        *((_OWORD *)v138 + 3) = v226;
        long long v228 = *((_OWORD *)v454 + 6);
        long long v229 = *((_OWORD *)v454 + 7);
        long long v230 = *((_OWORD *)v454 + 9);
        *((_OWORD *)v138 + 8) = *((_OWORD *)v454 + 8);
        *((_OWORD *)v138 + 9) = v230;
        *((_OWORD *)v138 + 6) = v228;
        *((_OWORD *)v138 + 7) = v229;
        uint64_t v231 = (unint64_t)&v138[v414 + 160] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 16))(v231, (unint64_t)&v454[v414 + 160] & v48, v458);
        uint64_t v232 = v11 + v25;
        uint64_t v233 = v231 + v11 + v25;
        uint64_t v234 = v139;
        uint64_t v235 = ((unint64_t)&v454[v414 + 160] & v48) + v232;
        uint64_t v236 = (const void *)(v235 & v50);
        uint64_t v237 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
        if (v237(v235 & v50, 1, v463))
        {
          size_t v238 = v455;
          memcpy((void *)(v233 & v50), v236, v455);
        }
        else
        {
          (*(void (**)(uint64_t, const void *, uint64_t))(v234 + 16))(v233 & v50, v236, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v234 + 56))(v233 & v50, 0, 1, v463);
          size_t v238 = v455;
        }
        unint64_t v297 = (void *)(((v233 | v459) + v238) & v50);
        size_t v298 = (const void *)(((v235 | v459) + v238) & v50);
        if (v237((uint64_t)v298, 1, v463))
        {
          memcpy(v297, v298, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v297, v298, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v297, 0, 1, v463);
        }
        uint64_t v317 = (void *)(((unint64_t)v297 + v452) & v50);
        uint64_t v318 = (const void *)(((unint64_t)v298 + v452) & v50);
        if (v237((uint64_t)v318, 1, v463))
        {
          memcpy(v317, v318, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v317, v318, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v317, 0, 1, v463);
        }
        unint64_t v334 = (void *)(((unint64_t)v317 + v452) & v50);
        uint64_t v416 = v50;
        size_t v335 = (const void *)(((unint64_t)v318 + v452) & v50);
        if (v237((uint64_t)v335, 1, v463))
        {
          memcpy(v334, v335, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v334, v335, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v334, 0, 1, v463);
        }
        uint64_t v64 = v418;
        int v338 = (void *)(((unint64_t)v334 + v85) & v461);
        size_t v339 = (const void *)(((unint64_t)v335 + v85) & v461);
        uint64_t v310 = v448;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v339, 1, v449))
        {
          memcpy(v338, v339, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 16))(v338, v339, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v338, 0, 1, v449);
        }
        char v331 = 9;
LABEL_363:
        uint64_t v71 = v454;
        v465[v453] = v331;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v68 = v451;
        uint64_t v60 = v310;
LABEL_366:
        uint64_t v50 = v416;
        uint64_t v11 = v459;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        break;
      case 0xAu:
        long long v239 = *(_OWORD *)v454;
        long long v240 = *((_OWORD *)v454 + 1);
        long long v241 = *((_OWORD *)v454 + 2);
        *((void *)v138 + 6) = *((void *)v454 + 6);
        *((_OWORD *)v138 + 1) = v240;
        *((_OWORD *)v138 + 2) = v241;
        *(_OWORD *)size_t v138 = v239;
        uint64_t v242 = (unint64_t)&v138[v414 + 56] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 16))(v242, (unint64_t)&v454[v414 + 56] & v48, v458);
        uint64_t v243 = v242 + v11 + v25;
        uint64_t v244 = v139;
        uint64_t v245 = ((unint64_t)&v454[v414 + 56] & v48) + v11 + v25;
        unint64_t v246 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
        if (v246(v245 & v50, 1, v463))
        {
          size_t v247 = v455;
          memcpy((void *)(v243 & v50), (const void *)(v245 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v244 + 16))(v243 & v50, v245 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56))(v243 & v50, 0, 1, v463);
          size_t v247 = v455;
        }
        unint64_t v299 = (void *)(((v243 | v459) + v247) & v50);
        size_t v300 = (const void *)(((v245 | v459) + v247) & v50);
        if (v246((uint64_t)v300, 1, v463))
        {
          memcpy(v299, v300, v247);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v299, v300, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v299, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v319 = (void *)(((unint64_t)v299 + v452) & v50);
        uint64_t v320 = (const void *)(((unint64_t)v300 + v452) & v50);
        uint64_t v417 = v50;
        if (v246((uint64_t)v320, 1, v463))
        {
          memcpy(v319, v320, v247);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v319, v320, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v319, 0, 1, v463);
        }
        uint64_t v71 = v454;
        unint64_t v332 = v465;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        char v333 = 10;
LABEL_344:
        v332[v453] = v333;
        goto LABEL_347;
      case 0xBu:
        long long v248 = *(_OWORD *)v454;
        long long v249 = *((_OWORD *)v454 + 1);
        long long v250 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v250;
        *(_OWORD *)size_t v138 = v248;
        *((_OWORD *)v138 + 1) = v249;
        uint64_t v251 = (unint64_t)&v138[v414 + 64] & v48;
        uint64_t v252 = (unint64_t)&v454[v414 + 64] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 16))(v251, v252, v458);
        uint64_t v253 = (void *)((v251 + v11 + v25) & v50);
        uint64_t v254 = (const void *)((v252 + v11 + v25) & v50);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48))(v254, 1, v463))
        {
          size_t v255 = v455;
          memcpy(v253, v254, v455);
          uint64_t v68 = v451;
          uint64_t v256 = v418;
          uint64_t v56 = v461;
          uint64_t v257 = v428;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v253, v254, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v253, 0, 1, v463);
          uint64_t v68 = v451;
          uint64_t v256 = v418;
          uint64_t v56 = v461;
          uint64_t v257 = v428;
          size_t v255 = v455;
        }
        *((unsigned char *)v253 + v255) = *((unsigned char *)v254 + v255);
        size_t v301 = ((v447 + ((v85 + ((v452 + (((v429 | v11) + v255) & v50)) & v50)) & v56)) & v56) + v450;
        if (v433 > v301) {
          size_t v301 = v433;
        }
        if (v442 > v301) {
          size_t v301 = v442;
        }
        if (v441 > v301) {
          size_t v301 = v441;
        }
        if (v439 > v301) {
          size_t v301 = v439;
        }
        if (v440 > v301) {
          size_t v301 = v440;
        }
        if (v438 > v301) {
          size_t v301 = v438;
        }
        if (v440 > v301) {
          size_t v301 = v440;
        }
        if (v437 > v301) {
          size_t v301 = v437;
        }
        if (v436 > v301) {
          size_t v301 = v436;
        }
        if (v435 > v301) {
          size_t v301 = v435;
        }
        if (v434 > v301) {
          size_t v301 = v434;
        }
        if (v432 > v301) {
          size_t v301 = v432;
        }
        if (v444 > v301) {
          size_t v301 = v444;
        }
        if (v443 > v301) {
          size_t v301 = v443;
        }
        v465[v301] = 11;
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v70 = v462;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v67 = ~v18;
        uint64_t v64 = v256;
        uint64_t v66 = v257;
        goto LABEL_351;
      case 0xCu:
        long long v258 = *(_OWORD *)v454;
        long long v259 = *((_OWORD *)v454 + 1);
        long long v260 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v260;
        *(_OWORD *)size_t v138 = v258;
        *((_OWORD *)v138 + 1) = v259;
        long long v261 = *((_OWORD *)v454 + 4);
        long long v262 = *((_OWORD *)v454 + 5);
        long long v263 = *((_OWORD *)v454 + 7);
        *((_OWORD *)v138 + 6) = *((_OWORD *)v454 + 6);
        *((_OWORD *)v138 + 7) = v263;
        *((_OWORD *)v138 + 4) = v261;
        *((_OWORD *)v138 + 5) = v262;
        uint64_t v264 = (unint64_t)&v138[v414 + 128] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 16))(v264, (unint64_t)&v454[v414 + 128] & v48, v458);
        uint64_t v265 = v264 + v11 + v25;
        uint64_t v266 = v139;
        uint64_t v267 = ((unint64_t)&v454[v414 + 128] & v48) + v11 + v25;
        uint64_t v268 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v266 + 48);
        if (v268(v267 & v50, 1, v463))
        {
          size_t v269 = v455;
          memcpy((void *)(v265 & v50), (const void *)(v267 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v266 + 16))(v265 & v50, v267 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v266 + 56))(v265 & v50, 0, 1, v463);
          size_t v269 = v455;
        }
        unint64_t v302 = (void *)(((v265 | v459) + v269) & v50);
        uint64_t v303 = (const void *)(((v267 | v459) + v269) & v50);
        if (v268((uint64_t)v303, 1, v463))
        {
          memcpy(v302, v303, v269);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v302, v303, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v302, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v321 = (void *)(((unint64_t)v302 + v452) & v50);
        uint64_t v417 = v50;
        uint64_t v322 = (const void *)(((unint64_t)v303 + v452) & v50);
        if (v268((uint64_t)v322, 1, v463))
        {
          memcpy(v321, v322, v269);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v321, v322, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v321, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v60 = v448;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v71 = v454;
        v465[v453] = 12;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v67 = ~v18;
LABEL_347:
        uint64_t v57 = v431;
        uint64_t v66 = v428;
        goto LABEL_350;
      case 0xDu:
        unint64_t v270 = v136;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v460 + 16))(v138, v454, v413);
        uint64_t v71 = v454;
        v138[v270] = 13;
        uint64_t v13 = v426;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v67 = ~v18;
        break;
      case 0xEu:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 16))(v138, v454, v458);
        uint64_t v271 = v139;
        size_t v272 = &v138[v11 + v25];
        unint64_t v273 = (unint64_t)&v454[v11 + v25];
        size_t v274 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v271 + 48);
        if (v274(v273 & v50, 1, v463))
        {
          size_t v275 = v455;
          memcpy((void *)((unint64_t)v272 & v50), (const void *)(v273 & v50), v455);
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v271 + 16))((unint64_t)v272 & v50, v273 & v50, v463);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v271 + 56))((unint64_t)v272 & v50, 0, 1, v463);
          size_t v275 = v455;
        }
        uint64_t v304 = (void *)((((unint64_t)v272 | v459) + v275) & v50);
        uint64_t v417 = v50;
        uint64_t v305 = (const void *)(((v273 | v459) + v275) & v50);
        uint64_t v286 = v448;
        if (v274((unint64_t)v305, 1, v463))
        {
          memcpy(v304, v305, v275);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v304, v305, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v304, 0, 1, v463);
        }
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v68 = v451;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v71 = v454;
        v465[v453] = 14;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v67 = ~v18;
LABEL_326:
        uint64_t v60 = v286;
        goto LABEL_350;
      default:
        long long v141 = *(_OWORD *)v454;
        long long v142 = *((_OWORD *)v454 + 1);
        long long v143 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v143;
        *(_OWORD *)size_t v138 = v141;
        *((_OWORD *)v138 + 1) = v142;
        long long v144 = *((_OWORD *)v454 + 4);
        long long v145 = *((_OWORD *)v454 + 5);
        long long v146 = *((_OWORD *)v454 + 7);
        *((_OWORD *)v138 + 6) = *((_OWORD *)v454 + 6);
        *((_OWORD *)v138 + 7) = v146;
        *((_OWORD *)v138 + 4) = v144;
        *((_OWORD *)v138 + 5) = v145;
        long long v147 = *((_OWORD *)v454 + 8);
        long long v148 = *((_OWORD *)v454 + 9);
        long long v149 = *((_OWORD *)v454 + 11);
        *((_OWORD *)v138 + 10) = *((_OWORD *)v454 + 10);
        *((_OWORD *)v138 + 11) = v149;
        *((_OWORD *)v138 + 8) = v147;
        *((_OWORD *)v138 + 9) = v148;
        long long v150 = *((_OWORD *)v454 + 12);
        long long v151 = *((_OWORD *)v454 + 13);
        long long v152 = *((_OWORD *)v454 + 14);
        *((void *)v138 + 30) = *((void *)v454 + 30);
        *((_OWORD *)v138 + 13) = v151;
        *((_OWORD *)v138 + 14) = v152;
        *((_OWORD *)v138 + 12) = v150;
        uint64_t v153 = (unint64_t)&v138[v414 + 248] & v48;
        uint64_t v154 = (unint64_t)&v454[v414 + 248] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 16))(v153, v154, v458);
        size_t v155 = v25 + v154;
        *(unsigned char *)(v25 + v153) = *(unsigned char *)(v25 + v154);
        uint64_t v156 = (void *)((v11 + 1 + v25 + v153) & v50);
        uint64_t v157 = (const void *)((v11 + 1 + v155) & v50);
        uint64_t v158 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v158(v157, 1, v463))
        {
          size_t v159 = v455;
          memcpy(v156, v157, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 16))(v156, v157, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v156, 0, 1, v463);
          size_t v159 = v455;
        }
        uint64_t v276 = (void *)(((unint64_t)v156 + v452) & v50);
        size_t v277 = (const void *)(((unint64_t)v157 + v452) & v50);
        if (v158(v277, 1, v463))
        {
          memcpy(v276, v277, v159);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v276, v277, v463);
          size_t v159 = v455;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v276, 0, 1, v463);
        }
        size_t v306 = (void *)(((unint64_t)v276 + v452) & v50);
        uint64_t v307 = (const void *)(((unint64_t)v277 + v452) & v50);
        if (v158(v307, 1, v463))
        {
          memcpy(v306, v307, v159);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 16))(v306, v307, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v306, 0, 1, v463);
        }
        uint64_t v64 = v418;
        uint64_t v417 = v50;
        unint64_t v323 = ((unint64_t)v306 + v85) & v461;
        unint64_t v324 = ((unint64_t)v307 + v85) & v461;
        uint64_t v325 = *(void (**)(unint64_t, unint64_t, uint64_t))(v451 + 16);
        v325(v323, v324, v449);
        unint64_t v326 = (void *)((v447 + v323) & v461);
        size_t v327 = (const void *)((v447 + v324) & v461);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v327, 1, v449))
        {
          memcpy(v326, v327, v450);
        }
        else
        {
          v325((unint64_t)v326, (unint64_t)v327, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v326, 0, 1, v449);
        }
        uint64_t v60 = v448;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 0;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v68 = v451;
LABEL_350:
        uint64_t v50 = v417;
LABEL_351:
        uint64_t v11 = v459;
        break;
    }
  }
  unint64_t v342 = *(void *)(v70 + 64);
  uint64_t v343 = (v55 + v342) & v50;
  unint64_t v344 = *(void *)(v464 + 64);
  if (*(_DWORD *)(v464 + 84)) {
    unint64_t v345 = *(void *)(v464 + 64);
  }
  else {
    unint64_t v345 = v344 + 1;
  }
  uint64_t v346 = v345 + v11;
  uint64_t v347 = v345 + v13;
  uint64_t v348 = *(void *)(v68 + 64);
  uint64_t v349 = (v348 + v13 + ((v345 + v13 + ((v345 + v11 + ((v345 + v11 + v343) & v50)) & v50)) & v56)) & v56;
  if (*(_DWORD *)(v68 + 84)) {
    uint64_t v350 = *(void *)(v68 + 64);
  }
  else {
    uint64_t v350 = v348 + 1;
  }
  unint64_t v351 = v349 + v350;
  if (v344 <= v342) {
    unint64_t v344 = v342;
  }
  unint64_t v352 = ((v345 + v16 + (v346 & v50)) & v57) + *(void *)(v15 + 64);
  if (v352 <= v344) {
    unint64_t v352 = v344;
  }
  uint64_t v353 = (v350 + v18 + ((v350 + v13 + ((v347 + ((v346 + ((v346 + ((v58 + v342) & v50)) & v50)) & v50)) & v56)) & v56)) & v67;
  uint64_t v354 = v56;
  unint64_t v355 = *(void *)(v460 + 64);
  if (*(_DWORD *)(v460 + 84)) {
    unint64_t v356 = *(void *)(v460 + 64);
  }
  else {
    unint64_t v356 = v355 + 1;
  }
  unint64_t v357 = v356 + v353;
  unint64_t v358 = ((v347 + ((v346 + v59) & v50)) & v354) + v350;
  unint64_t v359 = v345 + ((v342 + v11) & v50);
  unint64_t v360 = ((v359 + v11) & v50) + v345;
  unint64_t v361 = ((v360 + v11) & v50) + v345;
  unint64_t v362 = ((v60 + (v359 & 0xFFFFFFFFFFFFFFF8)) & v50) + v345;
  unint64_t v363 = ((v346 + ((v61 + v342) & v50)) & v50) + v345;
  unint64_t v364 = ((v346 + ((v346 + ((v62 + v342) & v50)) & v50)) & v50) + v345;
  unint64_t v365 = ((v347 + ((v346 + ((v346 + ((v346 + ((v63 + v342) & v50)) & v50)) & v50)) & v50)) & v354) + v350;
  unint64_t v366 = ((v346 + ((v346 + ((v64 + v342) & v50)) & v50)) & v50) + v345;
  unint64_t v367 = ((v69 + v342) & v50) + v345;
  unint64_t v368 = ((v346 + ((v346 + ((v66 + v342) & v50)) & v50)) & v50) + v345;
  if (v362 <= v351) {
    unint64_t v369 = v351;
  }
  else {
    unint64_t v369 = v362;
  }
  if (v369 <= v352 + 1) {
    unint64_t v369 = v352 + 1;
  }
  if (v369 <= v357) {
    unint64_t v369 = v357;
  }
  if (v369 <= v358) {
    unint64_t v369 = v358;
  }
  if (v369 <= v361) {
    unint64_t v369 = v361;
  }
  if (v369 <= v363) {
    unint64_t v369 = v363;
  }
  if (v369 <= v364) {
    unint64_t v369 = v364;
  }
  if (v369 <= v365) {
    unint64_t v369 = v365;
  }
  if (v369 <= v366) {
    unint64_t v369 = v366;
  }
  if (v369 <= v367 + 1) {
    unint64_t v369 = v367 + 1;
  }
  if (v369 > v368) {
    unint64_t v368 = v369;
  }
  if (v368 <= v360) {
    unint64_t v368 = v360;
  }
  if (v368 <= v355) {
    unint64_t v370 = *(void *)(v460 + 64);
  }
  else {
    unint64_t v370 = v368;
  }
  uint64_t v371 = v456[4];
  uint64_t v372 = *(void *)(v371 - 8);
  uint64_t v373 = *(unsigned __int8 *)(v372 + 80);
  uint64_t v374 = v370 + v373 + 1;
  uint64_t v375 = (void *)((unint64_t)&v465[v374] & ~v373);
  uint64_t v376 = (void *)((unint64_t)&v71[v374] & ~v373);
  uint64_t v377 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v372 + 48);
  int v378 = v377(v375, 1, v371);
  int v379 = v377(v376, 1, v371);
  if (v378)
  {
    if (!v379)
    {
      (*(void (**)(void *, void *, uint64_t))(v372 + 16))(v375, v376, v371);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v375, 0, 1, v371);
      goto LABEL_419;
    }
    int v380 = *(_DWORD *)(v372 + 84);
    size_t v381 = *(void *)(v372 + 64);
  }
  else
  {
    if (!v379)
    {
      (*(void (**)(void *, void *, uint64_t))(v372 + 24))(v375, v376, v371);
      goto LABEL_419;
    }
    (*(void (**)(void *, uint64_t))(v372 + 8))(v375, v371);
    int v380 = *(_DWORD *)(v372 + 84);
    size_t v381 = *(void *)(v372 + 64);
  }
  if (v380) {
    size_t v382 = v381;
  }
  else {
    size_t v382 = v381 + 1;
  }
  memcpy(v375, v376, v382);
LABEL_419:
  uint64_t v383 = *(void *)(v372 + 64);
  if (!*(_DWORD *)(v372 + 84)) {
    ++v383;
  }
  uint64_t v384 = v456[6];
  uint64_t v385 = *(void *)(v384 - 8);
  uint64_t v386 = *(unsigned __int8 *)(v385 + 80);
  uint64_t v387 = v383 + v386;
  uint64_t v388 = (void *)(((unint64_t)v375 + v387) & ~v386);
  uint64_t v389 = (void *)(((unint64_t)v376 + v387) & ~v386);
  uint64_t v390 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v385 + 48);
  int v391 = v390(v388, 1, v384);
  int v392 = v390(v389, 1, v384);
  if (v391)
  {
    if (!v392)
    {
      (*(void (**)(void *, void *, uint64_t))(v385 + 16))(v388, v389, v384);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v385 + 56))(v388, 0, 1, v384);
      goto LABEL_432;
    }
    int v393 = *(_DWORD *)(v385 + 84);
    size_t v394 = *(void *)(v385 + 64);
  }
  else
  {
    if (!v392)
    {
      (*(void (**)(void *, void *, uint64_t))(v385 + 24))(v388, v389, v384);
      goto LABEL_432;
    }
    (*(void (**)(void *, uint64_t))(v385 + 8))(v388, v384);
    int v393 = *(_DWORD *)(v385 + 84);
    size_t v394 = *(void *)(v385 + 64);
  }
  if (v393) {
    size_t v395 = v394;
  }
  else {
    size_t v395 = v394 + 1;
  }
  memcpy(v388, v389, v395);
LABEL_432:
  if (*(_DWORD *)(v385 + 84)) {
    uint64_t v396 = *(void *)(v385 + 64);
  }
  else {
    uint64_t v396 = *(void *)(v385 + 64) + 1;
  }
  *(void *)(((unint64_t)v388 + v396 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v389
                                                                                       + v396
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v457;
}

uint64_t sub_24ED53388(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[5] - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v329 = *(void *)(v5 + 32);
  uint64_t v319 = a3[3];
  __dst = *(void **)(v319 - 8);
  uint64_t v6 = *((unsigned __int8 *)__dst + 80);
  uint64_t v322 = sub_24EE55880();
  uint64_t v325 = *(void *)(v322 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v325 + 80);
  uint64_t v315 = a3[2];
  uint64_t v331 = *(void *)(v315 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v331 + 80);
  uint64_t v9 = sub_24EE55960();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v289 = v10;
  size_t __n = v9;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v324 = a3;
  uint64_t v309 = a3[7];
  uint64_t v12 = *(void *)(v309 - 8);
  uint64_t v13 = v12;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v6 | v7 | v8 | v11 | v14 | 7;
  uint64_t v16 = v15 + v329;
  uint64_t v330 = a1;
  uint64_t v17 = (_OWORD *)((v16 + a1) & ~v15);
  uint64_t v18 = (unsigned __int8 *)((v16 + a2) & ~v15);
  unint64_t v19 = __dst[8];
  uint64_t v20 = v19 + v7;
  uint64_t v21 = v19 + v7 + 1;
  uint64_t v304 = v21 + ((v6 + 248) & ~v6);
  uint64_t v323 = v325;
  unint64_t v22 = *(void *)(v325 + 64);
  if (*(_DWORD *)(v325 + 84)) {
    size_t v23 = *(void *)(v325 + 64);
  }
  else {
    size_t v23 = v22 + 1;
  }
  uint64_t v24 = v23 + v8;
  uint64_t v25 = *(void *)(v331 + 64);
  uint64_t v312 = __dst[8];
  uint64_t v313 = v25 + v8;
  uint64_t v317 = v331;
  size_t v26 = v23 + v7;
  if (*(_DWORD *)(v331 + 84)) {
    size_t v27 = *(void *)(v331 + 64);
  }
  else {
    size_t v27 = v25 + 1;
  }
  unint64_t v28 = ((v25 + v8 + ((v23 + v8 + ((v23 + v7 + ((v23 + v7 + (v304 & ~v7)) & ~v7)) & ~v7)) & ~v8)) & ~v8) + v27;
  if (v22 <= v19) {
    size_t v29 = __dst[8];
  }
  else {
    size_t v29 = *(void *)(v325 + 64);
  }
  size_t v288 = v23 + v11;
  size_t v30 = ((v23 + v11 + (v26 & ~v7)) & ~v11) + *(void *)(v10 + 64);
  if (v30 <= v29) {
    size_t v31 = v29;
  }
  else {
    size_t v31 = v30;
  }
  uint64_t v32 = v27 + v8;
  uint64_t v33 = (v27
       + v14
       + ((v27 + v8 + ((v24 + ((v26 + ((v26 + ((v21 + ((v6 + 224) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v8)) & ~v8)) & ~v14;
  uint64_t v308 = *(void *)(v309 - 8);
  unint64_t v34 = *(void *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v35 = *(void *)(v12 + 64);
  }
  else {
    size_t v35 = v34 + 1;
  }
  unint64_t v36 = v33 + v35;
  size_t v37 = v23 + (v20 & ~v7);
  size_t v38 = ((v37 + v7) & ~v7) + v23;
  unint64_t v39 = ((v7 + 24 + (v37 & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v23;
  unint64_t v40 = ((v24 + ((v26 + ((v26 + ((v26 + ((v20 + ((v6 + 160) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v8) + v27;
  unint64_t v41 = ((v26 + ((v26 + ((v20 + ((v6 + 56) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  size_t v42 = ((v20 + ((v6 + 64) & ~v6)) & ~v7) + v23;
  size_t v300 = v39;
  if (v39 <= v28) {
    unint64_t v39 = v28;
  }
  size_t v296 = v31 + 1;
  size_t v306 = v31;
  if (v39 <= v31 + 1) {
    unint64_t v39 = v31 + 1;
  }
  unint64_t v326 = v36;
  if (v39 <= v36) {
    unint64_t v39 = v36;
  }
  unint64_t v302 = ((v24 + ((v26 + ((v7 + 64) & ~v7)) & ~v7)) & ~v8) + v27;
  if (v39 <= v302) {
    unint64_t v39 = ((v24 + ((v26 + ((v7 + 64) & ~v7)) & ~v7)) & ~v8) + v27;
  }
  size_t v298 = ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23;
  unint64_t v299 = ((v38 + v7) & ~v7) + v23;
  if (v39 <= v299) {
    unint64_t v39 = ((v38 + v7) & ~v7) + v23;
  }
  if (v39 <= ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23) {
    unint64_t v39 = ((v26 + ((v20 + ((v6 + 24) & ~v6)) & ~v7)) & ~v7) + v23;
  }
  unint64_t v297 = ((v26 + ((v26 + ((v20 + ((v6 + 104) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  if (v39 <= v297) {
    unint64_t v39 = ((v26 + ((v26 + ((v20 + ((v6 + 104) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  if (v39 <= v40) {
    unint64_t v39 = ((v24 + ((v26 + ((v26 + ((v26 + ((v20 + ((v6 + 160) & ~v6)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v8) + v27;
  }
  if (v39 <= v41) {
    unint64_t v39 = ((v26 + ((v26 + ((v20 + ((v6 + 56) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  size_t v43 = v42 + 1;
  if (v39 <= v42 + 1) {
    unint64_t v44 = v42 + 1;
  }
  else {
    unint64_t v44 = v39;
  }
  size_t v335 = v23;
  unint64_t v45 = ((v26 + ((v26 + ((v20 + ((v6 + 128) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  if (v44 <= v45) {
    unint64_t v44 = ((v26 + ((v26 + ((v20 + ((v6 + 128) & ~v6)) & ~v7)) & ~v7)) & ~v7) + v23;
  }
  if (v44 <= v38) {
    unint64_t v44 = v38;
  }
  if (v44 <= v34) {
    unint64_t v46 = v34;
  }
  else {
    unint64_t v46 = v44;
  }
  unsigned int v47 = v18[v46];
  unsigned int v48 = v47 - 15;
  if (v47 >= 0xF)
  {
    if (v46 <= 3) {
      uint64_t v49 = v46;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *v18;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 2:
        int v50 = *(unsigned __int16 *)v18;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 3:
        int v50 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_56;
      case 4:
        int v50 = *(_DWORD *)v18;
        if (v46 < 4) {
LABEL_52:
        }
          unsigned int v47 = (v50 | (v48 << (8 * v46))) + 15;
        else {
LABEL_56:
        }
          unsigned int v47 = v50 + 15;
        break;
      default:
        break;
    }
  }
  uint64_t v51 = ~v6;
  uint64_t v337 = ~v7;
  uint64_t v52 = ~v8;
  uint64_t v53 = ~v11;
  switch(v47)
  {
    case 1u:
      unsigned int v73 = v18[v306];
      unsigned int v74 = v73 - 3;
      if (v73 < 3)
      {
        uint64_t v77 = v322;
        uint64_t v76 = v323;
      }
      else
      {
        if (v306 <= 3) {
          uint64_t v75 = v306;
        }
        else {
          uint64_t v75 = 4;
        }
        uint64_t v77 = v322;
        uint64_t v76 = v323;
        switch(v75)
        {
          case 1:
            int v78 = *v18;
            goto LABEL_251;
          case 2:
            int v78 = *(unsigned __int16 *)v18;
            goto LABEL_251;
          case 3:
            int v78 = *(unsigned __int16 *)v18 | (v18[2] << 16);
            goto LABEL_251;
          case 4:
            int v78 = *(_DWORD *)v18;
LABEL_251:
            if (v306 < 4) {
              unsigned int v73 = (v78 | (v74 << (8 * v306))) + 3;
            }
            else {
              unsigned int v73 = v78 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v73 == 2)
      {
        size_t v328 = v46;
        unint64_t v334 = v46;
        uint64_t v287 = v17;
        size_t v279 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v76 + 48);
        size_t v280 = v17;
        if (v279(v18, 1, v77))
        {
          memcpy(v287, v18, v335);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v76 + 32))(v287, v18, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v287, 0, 1, v77);
        }
        uint64_t v282 = (void *)(((unint64_t)v280 + v26) & v337);
        long long v185 = v18;
        size_t v283 = (void *)((unint64_t)&v18[v26] & v337);
        uint64_t v139 = v330;
        uint64_t v191 = v324;
        if (v279((unsigned __int8 *)v283, 1, v77))
        {
          memcpy(v282, v283, v335);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v323 + 32))(v282, v283, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v282, 0, 1, v77);
        }
        (*(void (**)(unint64_t, unint64_t, size_t))(v289 + 32))(((unint64_t)v282 + v288) & v53, ((unint64_t)v283 + v288) & v53, __n);
        char v278 = 2;
        long long v186 = v287;
        unint64_t v187 = v334;
        size_t v189 = v328;
      }
      else if (v73 == 1)
      {
        long long v185 = v18;
        long long v186 = v17;
        unint64_t v187 = v46;
        size_t v277 = v46;
        (*(void (**)(void))(v76 + 32))();
        size_t v189 = v277;
        char v278 = 1;
        uint64_t v139 = v330;
        uint64_t v191 = v324;
      }
      else
      {
        size_t v281 = v46;
        unint64_t v187 = v46;
        long long v185 = v18;
        long long v186 = v17;
        ((void (*)(void))__dst[4])();
        char v278 = 0;
        uint64_t v139 = v330;
        uint64_t v191 = v324;
        size_t v189 = v281;
      }
      v186[v306] = v278;
      char v190 = 1;
      goto LABEL_229;
    case 2u:
      uint64_t v303 = ~v14;
      uint64_t v305 = v32;
      size_t v314 = v27 + v14;
      size_t v301 = v35;
      uint64_t v79 = v52;
      uint64_t v80 = v24;
      size_t __nb = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v81 = *((_OWORD *)v18 + 1);
      *uint64_t v17 = *(_OWORD *)v18;
      v17[1] = v81;
      long long v82 = *((_OWORD *)v18 + 2);
      long long v83 = *((_OWORD *)v18 + 3);
      long long v84 = *((_OWORD *)v18 + 5);
      v17[4] = *((_OWORD *)v18 + 4);
      v17[5] = v84;
      v17[2] = v82;
      v17[3] = v83;
      long long v85 = *((_OWORD *)v18 + 6);
      long long v86 = *((_OWORD *)v18 + 7);
      long long v87 = *((_OWORD *)v18 + 9);
      v17[8] = *((_OWORD *)v18 + 8);
      v17[9] = v87;
      v17[6] = v85;
      v17[7] = v86;
      long long v88 = *((_OWORD *)v18 + 10);
      long long v89 = *((_OWORD *)v18 + 11);
      long long v90 = *((_OWORD *)v18 + 13);
      v17[12] = *((_OWORD *)v18 + 12);
      v17[13] = v90;
      v17[10] = v88;
      v17[11] = v89;
      unint64_t v284 = v17;
      uint64_t v91 = ((unint64_t)v17 + v6 + 224) & v51;
      uint64_t v307 = v18;
      uint64_t v92 = (unint64_t)&v18[v6 + 224] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v91, v92, v319);
      uint64_t v93 = v92 + v312;
      *(unsigned char *)(v91 + v312) = *(unsigned char *)(v92 + v312);
      uint64_t v94 = (void *)((v7 + 1 + v91 + v312) & v337);
      uint64_t v95 = (const void *)((v7 + 1 + v93) & v337);
      uint64_t v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v96(v95, 1, v322))
      {
        size_t v97 = v335;
        memcpy(v94, v95, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v94, v95, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v94, 0, 1, v322);
        size_t v97 = v335;
      }
      unint64_t v194 = (void *)(((unint64_t)v94 + v26) & v337);
      uint64_t v195 = (const void *)(((unint64_t)v95 + v26) & v337);
      if (v96(v195, 1, v322))
      {
        memcpy(v194, v195, v97);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v194, v195, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v194, 0, 1, v322);
      }
      long long v215 = (void *)(((unint64_t)v194 + v26) & v337);
      long long v216 = (const void *)(((unint64_t)v195 + v26) & v337);
      if (v96(v216, 1, v322))
      {
        memcpy(v215, v216, v97);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v215, v216, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v215, 0, 1, v322);
      }
      long long v229 = (void *)(((unint64_t)v215 + v80) & v79);
      long long v230 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48);
      if (v230(((unint64_t)v216 + v80) & v79, 1, v315))
      {
        memcpy(v229, (const void *)(((unint64_t)v216 + v80) & v79), __nb);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 32))(v229, ((unint64_t)v216 + v80) & v79, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v229, 0, 1, v315);
      }
      uint64_t v191 = v324;
      uint64_t v233 = (void *)(((unint64_t)v229 + v305) & v79);
      uint64_t v234 = (const void *)((v305 + (((unint64_t)v216 + v80) & v79)) & v79);
      if (v230((unint64_t)v234, 1, v315))
      {
        memcpy(v233, v234, __nb);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v317 + 32))(v233, v234, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v233, 0, 1, v315);
      }
      uint64_t v236 = (void *)(((unint64_t)v233 + v314) & v303);
      uint64_t v237 = (const void *)(((unint64_t)v234 + v314) & v303);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v308 + 48))(v237, 1, v309))
      {
        memcpy(v236, v237, v301);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v308 + 32))(v236, v237, v309);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v308 + 56))(v236, 0, 1, v309);
      }
      char v190 = 2;
      uint64_t v139 = v330;
      goto LABEL_200;
    case 3u:
      uint64_t v98 = v52;
      uint64_t v99 = v24;
      size_t __nc = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v100 = *(_OWORD *)v18;
      long long v101 = *((_OWORD *)v18 + 1);
      long long v102 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v102;
      *uint64_t v17 = v100;
      v17[1] = v101;
      unint64_t v284 = v17;
      uint64_t v103 = (void *)(((unint64_t)v17 + v7 + 64) & v337);
      uint64_t v307 = v18;
      size_t v104 = (const void *)((unint64_t)&v18[v7 + 64] & v337);
      size_t v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v105(v104, 1, v322))
      {
        memcpy(v103, v104, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v103, v104, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v103, 0, 1, v322);
      }
      size_t v196 = (void *)(((unint64_t)v103 + v26) & v337);
      uint64_t v197 = (const void *)(((unint64_t)v104 + v26) & v337);
      if (v105(v197, 1, v322))
      {
        memcpy(v196, v197, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v196, v197, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v196, 0, 1, v322);
      }
      uint64_t v139 = v330;
      long long v217 = (void *)(((unint64_t)v196 + v99) & v98);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48))(((unint64_t)v197 + v99) & v98, 1, v315))
      {
        memcpy(v217, (const void *)(((unint64_t)v197 + v99) & v98), __nc);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 32))(v217, ((unint64_t)v197 + v99) & v98, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v217, 0, 1, v315);
      }
      char v190 = 3;
      goto LABEL_197;
    case 4u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      uint64_t v106 = v17;
      ((void (*)(void))__dst[4])();
      uint64_t v107 = v106;
      uint64_t v108 = (void *)(((unint64_t)v106 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v110 = (const void *)((unint64_t)&v18[v20] & v337);
      unint64_t v111 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v111(v110, 1, v322))
      {
        memcpy(v108, v110, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v108, v110, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v108, 0, 1, v322);
      }
      uint64_t v198 = (void *)(((unint64_t)v108 + v26) & v337);
      unint64_t v199 = (const void *)(((unint64_t)v110 + v26) & v337);
      uint64_t v139 = v330;
      if (v111(v199, 1, v322))
      {
        memcpy(v198, v199, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v198, v199, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v198, 0, 1, v322);
      }
      uint64_t v218 = (void *)(((unint64_t)v198 + v26) & v337);
      uint64_t v219 = (const void *)(((unint64_t)v199 + v26) & v337);
      if (v111(v219, 1, v322))
      {
        memcpy(v218, v219, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v218, v219, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v218, 0, 1, v322);
      }
      char v190 = 4;
      goto LABEL_227;
    case 5u:
      uint64_t v155 = v7 + 24;
      size_t v327 = v46;
      unint64_t v332 = v46;
      uint64_t v156 = v17;
      ((void (*)(void))__dst[4])();
      uint64_t v286 = v156;
      uint64_t v157 = (void *)((unint64_t)&v156[v20] & v337);
      uint64_t v158 = (const void *)((unint64_t)&v18[v20] & v337);
      size_t v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v159(v158, 1, v322))
      {
        size_t v160 = v335;
        memcpy(v157, v158, v335);
        uint64_t v139 = v330;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v157, v158, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v157, 0, 1, v322);
        uint64_t v139 = v330;
        size_t v160 = v335;
      }
      *((unsigned char *)v157 + v160) = *((unsigned char *)v158 + v160);
      unint64_t v238 = ((unint64_t)v157 + v160) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v239 = ((unint64_t)v158 + v160) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v238 + 8) = *(_OWORD *)(v239 + 8);
      long long v240 = (void *)((v155 + v238) & v337);
      long long v241 = (const void *)((v155 + v239) & v337);
      if (v159(v241, 1, v322))
      {
        memcpy(v240, v241, v160);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v240, v241, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v240, 0, 1, v322);
      }
      char v190 = 5;
      uint64_t v191 = v324;
      long long v185 = v18;
      long long v186 = v286;
      break;
    case 6u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v161 = *(_OWORD *)v18;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *uint64_t v17 = v161;
      uint64_t v107 = v17;
      uint64_t v162 = ((unint64_t)v17 + v6 + 24) & v51;
      uint64_t v109 = v18;
      uint64_t v163 = (unint64_t)&v18[v6 + 24] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v162, v163, v319);
      uint64_t v164 = (void *)((v20 + v162) & v337);
      uint64_t v165 = (const void *)((v20 + v163) & v337);
      uint64_t v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v166(v165, 1, v322))
      {
        memcpy(v164, v165, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v164, v165, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v164, 0, 1, v322);
      }
      uint64_t v139 = v330;
      uint64_t v242 = (void *)(((unint64_t)v164 + v26) & v337);
      uint64_t v243 = (const void *)(((unint64_t)v165 + v26) & v337);
      if (v166(v243, 1, v322))
      {
        memcpy(v242, v243, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v242, v243, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v242, 0, 1, v322);
      }
      char v190 = 6;
      goto LABEL_227;
    case 7u:
      uint64_t v112 = v7 + 24;
      size_t v327 = v46;
      unint64_t v332 = v46;
      size_t v113 = v17;
      ((void (*)(void))__dst[4])();
      uint64_t v107 = v113;
      size_t v114 = (void *)(((unint64_t)v113 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v115 = (const void *)((unint64_t)&v18[v20] & v337);
      uint64_t v116 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v116(v115, 1, v322))
      {
        size_t v117 = v335;
        memcpy(v114, v115, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v114, v115, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v114, 0, 1, v322);
        size_t v117 = v335;
      }
      *((unsigned char *)v114 + v117) = *((unsigned char *)v115 + v117);
      unint64_t v200 = ((unint64_t)v114 + v117) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v201 = ((unint64_t)v115 + v117) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v200 + 8) = *(_OWORD *)(v201 + 8);
      long long v202 = (void *)((v112 + v200) & v337);
      uint64_t v203 = (const void *)((v112 + v201) & v337);
      unsigned int v204 = v116(v203, 1, v322);
      size_t v205 = v117;
      uint64_t v139 = v330;
      if (v204)
      {
        memcpy(v202, v203, v205);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v202, v203, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v202, 0, 1, v322);
      }
      char v190 = 7;
      goto LABEL_227;
    case 8u:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v167 = *(_OWORD *)v18;
      long long v168 = *((_OWORD *)v18 + 2);
      v17[1] = *((_OWORD *)v18 + 1);
      v17[2] = v168;
      *uint64_t v17 = v167;
      long long v169 = *((_OWORD *)v18 + 3);
      long long v170 = *((_OWORD *)v18 + 4);
      long long v171 = *((_OWORD *)v18 + 5);
      *((void *)v17 + 12) = *((void *)v18 + 12);
      v17[4] = v170;
      v17[5] = v171;
      v17[3] = v169;
      uint64_t v107 = v17;
      uint64_t v172 = ((unint64_t)v17 + v6 + 104) & v51;
      uint64_t v109 = v18;
      uint64_t v173 = (unint64_t)&v18[v6 + 104] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v172, v173, v319);
      long long v174 = (void *)((v20 + v172) & v337);
      long long v175 = (const void *)((v20 + v173) & v337);
      long long v176 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v176(v175, 1, v322))
      {
        memcpy(v174, v175, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v174, v175, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v174, 0, 1, v322);
      }
      uint64_t v139 = v330;
      uint64_t v244 = (void *)(((unint64_t)v174 + v26) & v337);
      uint64_t v245 = (const void *)(((unint64_t)v175 + v26) & v337);
      if (v176(v245, 1, v322))
      {
        memcpy(v244, v245, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v244, v245, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v244, 0, 1, v322);
      }
      long long v248 = (void *)(((unint64_t)v244 + v26) & v337);
      long long v249 = (const void *)(((unint64_t)v245 + v26) & v337);
      if (v176(v249, 1, v322))
      {
        memcpy(v248, v249, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v248, v249, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v248, 0, 1, v322);
      }
      char v190 = 8;
      goto LABEL_227;
    case 9u:
      uint64_t v118 = v52;
      uint64_t v119 = v24;
      size_t __nd = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v120 = *((_OWORD *)v18 + 1);
      *uint64_t v17 = *(_OWORD *)v18;
      v17[1] = v120;
      long long v121 = *((_OWORD *)v18 + 2);
      long long v122 = *((_OWORD *)v18 + 3);
      long long v123 = *((_OWORD *)v18 + 5);
      v17[4] = *((_OWORD *)v18 + 4);
      v17[5] = v123;
      v17[2] = v121;
      v17[3] = v122;
      long long v124 = *((_OWORD *)v18 + 6);
      long long v125 = *((_OWORD *)v18 + 7);
      long long v126 = *((_OWORD *)v18 + 9);
      v17[8] = *((_OWORD *)v18 + 8);
      v17[9] = v126;
      v17[6] = v124;
      v17[7] = v125;
      unint64_t v284 = v17;
      uint64_t v127 = ((unint64_t)v17 + v6 + 160) & v51;
      uint64_t v307 = v18;
      uint64_t v128 = (unint64_t)&v18[v6 + 160] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v127, v128, v319);
      unsigned int v129 = (void *)((v20 + v127) & v337);
      uint64_t v130 = (const void *)((v20 + v128) & v337);
      uint64_t v131 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v131(v130, 1, v322))
      {
        memcpy(v129, v130, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v129, v130, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v129, 0, 1, v322);
      }
      uint64_t v206 = (void *)(((unint64_t)v129 + v26) & v337);
      uint64_t v207 = (const void *)(((unint64_t)v130 + v26) & v337);
      uint64_t v139 = v330;
      if (v131(v207, 1, v322))
      {
        memcpy(v206, v207, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v206, v207, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v206, 0, 1, v322);
      }
      uint64_t v220 = (void *)(((unint64_t)v206 + v26) & v337);
      uint64_t v221 = (const void *)(((unint64_t)v207 + v26) & v337);
      if (v131(v221, 1, v322))
      {
        memcpy(v220, v221, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v220, v221, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v220, 0, 1, v322);
      }
      uint64_t v231 = (void *)(((unint64_t)v220 + v26) & v337);
      uint64_t v232 = (const void *)(((unint64_t)v221 + v26) & v337);
      if (v131(v232, 1, v322))
      {
        memcpy(v231, v232, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v231, v232, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v231, 0, 1, v322);
      }
      uint64_t v235 = (void *)(((unint64_t)v231 + v119) & v118);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v317 + 48))(((unint64_t)v232 + v119) & v118, 1, v315))
      {
        memcpy(v235, (const void *)(((unint64_t)v232 + v119) & v118), __nd);
      }
      else
      {
        (*(void (**)(void *, unint64_t, uint64_t))(v317 + 32))(v235, ((unint64_t)v232 + v119) & v118, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v235, 0, 1, v315);
      }
      char v190 = 9;
      goto LABEL_197;
    case 0xAu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v177 = *(_OWORD *)v18;
      long long v178 = *((_OWORD *)v18 + 1);
      long long v179 = *((_OWORD *)v18 + 2);
      *((void *)v17 + 6) = *((void *)v18 + 6);
      v17[1] = v178;
      v17[2] = v179;
      *uint64_t v17 = v177;
      uint64_t v107 = v17;
      uint64_t v180 = ((unint64_t)v17 + v6 + 56) & v51;
      uint64_t v109 = v18;
      uint64_t v181 = (unint64_t)&v18[v6 + 56] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v180, v181, v319);
      unint64_t v182 = (void *)((v20 + v180) & v337);
      uint64_t v183 = (const void *)((v20 + v181) & v337);
      size_t v184 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v184(v183, 1, v322))
      {
        memcpy(v182, v183, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v182, v183, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v182, 0, 1, v322);
      }
      uint64_t v139 = v330;
      unint64_t v246 = (void *)(((unint64_t)v182 + v26) & v337);
      size_t v247 = (const void *)(((unint64_t)v183 + v26) & v337);
      if (v184(v247, 1, v322))
      {
        memcpy(v246, v247, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v246, v247, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v246, 0, 1, v322);
      }
      long long v250 = (void *)(((unint64_t)v246 + v26) & v337);
      uint64_t v251 = (const void *)(((unint64_t)v247 + v26) & v337);
      if (v184(v251, 1, v322))
      {
        memcpy(v250, v251, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v250, v251, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v250, 0, 1, v322);
      }
      char v190 = 10;
      goto LABEL_227;
    case 0xBu:
      size_t v316 = v43;
      uint64_t v318 = v24;
      uint64_t v311 = v52;
      size_t __ne = v27;
      unint64_t v333 = v46;
      long long v132 = *(_OWORD *)v18;
      long long v133 = *((_OWORD *)v18 + 1);
      long long v134 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v134;
      *uint64_t v17 = v132;
      v17[1] = v133;
      unint64_t v285 = v17;
      uint64_t v135 = ((unint64_t)v17 + v6 + 64) & v51;
      uint64_t v136 = (unint64_t)&v18[v6 + 64] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v135, v136, v319);
      __dsta = (void *)((v20 + v135) & v337);
      uint64_t v137 = (const void *)((v20 + v136) & v337);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48))(v137, 1, v322))
      {
        size_t v138 = v335;
        memcpy(__dsta, v137, v335);
        uint64_t v139 = v330;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(__dsta, v137, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(__dsta, 0, 1, v322);
        uint64_t v139 = v330;
        size_t v138 = v335;
      }
      *((unsigned char *)__dsta + v138) = *((unsigned char *)v137 + v138);
      size_t v208 = ((v313 + ((v318 + ((v26 + (((v304 | v7) + v138) & v337)) & v337)) & v311)) & v311) + __ne;
      if (v296 > v208) {
        size_t v208 = v296;
      }
      if (v326 > v208) {
        size_t v208 = v326;
      }
      if (v302 > v208) {
        size_t v208 = v302;
      }
      if (v299 > v208) {
        size_t v208 = v299;
      }
      if (v300 > v208) {
        size_t v208 = v300;
      }
      if (v298 > v208) {
        size_t v208 = v298;
      }
      if (v300 > v208) {
        size_t v208 = v300;
      }
      if (v297 > v208) {
        size_t v208 = v297;
      }
      if (v40 > v208) {
        size_t v208 = v40;
      }
      if (v41 > v208) {
        size_t v208 = v41;
      }
      if (v316 > v208) {
        size_t v208 = v316;
      }
      if (v45 > v208) {
        size_t v208 = v45;
      }
      if (v34 > v208) {
        size_t v208 = v34;
      }
      if (v38 <= v208) {
        size_t v189 = v208;
      }
      else {
        size_t v189 = v38;
      }
      char v190 = 11;
      uint64_t v191 = v324;
      long long v185 = v18;
      long long v186 = v285;
      unint64_t v187 = v333;
      goto LABEL_229;
    case 0xCu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v140 = *(_OWORD *)v18;
      long long v141 = *((_OWORD *)v18 + 1);
      long long v142 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v142;
      *uint64_t v17 = v140;
      v17[1] = v141;
      long long v143 = *((_OWORD *)v18 + 4);
      long long v144 = *((_OWORD *)v18 + 5);
      long long v145 = *((_OWORD *)v18 + 7);
      v17[6] = *((_OWORD *)v18 + 6);
      v17[7] = v145;
      v17[4] = v143;
      v17[5] = v144;
      uint64_t v107 = v17;
      uint64_t v146 = ((unint64_t)v17 + v6 + 128) & v51;
      uint64_t v109 = v18;
      uint64_t v147 = (unint64_t)&v18[v6 + 128] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v146, v147, v319);
      long long v148 = (void *)((v20 + v146) & v337);
      long long v149 = (const void *)((v20 + v147) & v337);
      long long v150 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v150(v149, 1, v322))
      {
        memcpy(v148, v149, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v148, v149, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v148, 0, 1, v322);
      }
      size_t v209 = (void *)(((unint64_t)v148 + v26) & v337);
      size_t v210 = (const void *)(((unint64_t)v149 + v26) & v337);
      uint64_t v139 = v330;
      if (v150(v210, 1, v322))
      {
        memcpy(v209, v210, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v209, v210, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v209, 0, 1, v322);
      }
      unint64_t v222 = (void *)(((unint64_t)v209 + v26) & v337);
      size_t v223 = (const void *)(((unint64_t)v210 + v26) & v337);
      if (v150(v223, 1, v322))
      {
        memcpy(v222, v223, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v222, v223, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v222, 0, 1, v322);
      }
      char v190 = 12;
      goto LABEL_227;
    case 0xDu:
      long long v185 = v18;
      long long v186 = v17;
      unint64_t v187 = v46;
      size_t v188 = v46;
      (*(void (**)(void))(v13 + 32))();
      size_t v189 = v188;
      char v190 = 13;
      uint64_t v139 = v330;
      uint64_t v191 = v324;
      goto LABEL_229;
    case 0xEu:
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v151 = v17;
      ((void (*)(void))__dst[4])();
      uint64_t v107 = v151;
      long long v152 = (void *)(((unint64_t)v151 + v20) & v337);
      uint64_t v109 = v18;
      uint64_t v153 = (const void *)((unint64_t)&v18[v20] & v337);
      uint64_t v154 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v154(v153, 1, v322))
      {
        memcpy(v152, v153, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v152, v153, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v152, 0, 1, v322);
      }
      uint64_t v211 = (void *)(((unint64_t)v152 + v26) & v337);
      size_t v212 = (const void *)(((unint64_t)v153 + v26) & v337);
      uint64_t v139 = v330;
      if (v154(v212, 1, v322))
      {
        memcpy(v211, v212, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v211, v212, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v211, 0, 1, v322);
      }
      char v190 = 14;
LABEL_227:
      uint64_t v191 = v324;
      long long v185 = v109;
      long long v186 = v107;
      break;
    default:
      uint64_t v310 = v52;
      uint64_t v54 = v24;
      size_t __na = v27;
      size_t v327 = v46;
      unint64_t v332 = v46;
      long long v55 = *(_OWORD *)v18;
      long long v56 = *((_OWORD *)v18 + 1);
      long long v57 = *((_OWORD *)v18 + 3);
      v17[2] = *((_OWORD *)v18 + 2);
      v17[3] = v57;
      *uint64_t v17 = v55;
      v17[1] = v56;
      long long v58 = *((_OWORD *)v18 + 4);
      long long v59 = *((_OWORD *)v18 + 5);
      long long v60 = *((_OWORD *)v18 + 7);
      v17[6] = *((_OWORD *)v18 + 6);
      v17[7] = v60;
      v17[4] = v58;
      v17[5] = v59;
      long long v61 = *((_OWORD *)v18 + 8);
      long long v62 = *((_OWORD *)v18 + 9);
      long long v63 = *((_OWORD *)v18 + 11);
      v17[10] = *((_OWORD *)v18 + 10);
      v17[11] = v63;
      v17[8] = v61;
      v17[9] = v62;
      long long v64 = *((_OWORD *)v18 + 12);
      long long v65 = *((_OWORD *)v18 + 13);
      long long v66 = *((_OWORD *)v18 + 14);
      *((void *)v17 + 30) = *((void *)v18 + 30);
      v17[13] = v65;
      v17[14] = v66;
      v17[12] = v64;
      unint64_t v284 = v17;
      uint64_t v67 = ((unint64_t)v17 + v6 + 248) & v51;
      uint64_t v307 = v18;
      uint64_t v68 = (unint64_t)&v18[v6 + 248] & v51;
      ((void (*)(uint64_t, uint64_t, uint64_t))__dst[4])(v67, v68, v319);
      *(unsigned char *)(v67 + v312) = *(unsigned char *)(v68 + v312);
      uint64_t v69 = (void *)((v7 + 1 + v67 + v312) & v337);
      uint64_t v70 = (const void *)((v7 + 1 + v68 + v312) & v337);
      uint64_t v71 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v323 + 48);
      if (v71(v70, 1, v322))
      {
        size_t v72 = v335;
        memcpy(v69, v70, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v69, v70, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v69, 0, 1, v322);
        size_t v72 = v335;
      }
      size_t v192 = (void *)(((unint64_t)v69 + v26) & v337);
      double v193 = (const void *)(((unint64_t)v70 + v26) & v337);
      if (v71(v193, 1, v322))
      {
        memcpy(v192, v193, v72);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v192, v193, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v192, 0, 1, v322);
      }
      uint64_t v139 = v330;
      long long v213 = (void *)(((unint64_t)v192 + v26) & v337);
      long long v214 = (const void *)(((unint64_t)v193 + v26) & v337);
      if (v71(v214, 1, v322))
      {
        memcpy(v213, v214, v335);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v323 + 32))(v213, v214, v322);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(v213, 0, 1, v322);
      }
      unint64_t v224 = ((unint64_t)v213 + v54) & v310;
      unint64_t v225 = ((unint64_t)v214 + v54) & v310;
      long long v226 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
      v226(v224, v225, v315);
      long long v227 = (void *)((v313 + v224) & v310);
      long long v228 = (const void *)((v313 + v225) & v310);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v317 + 48))(v228, 1, v315))
      {
        memcpy(v227, v228, __na);
      }
      else
      {
        v226((unint64_t)v227, (unint64_t)v228, v315);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v227, 0, 1, v315);
      }
      char v190 = 0;
LABEL_197:
      uint64_t v191 = v324;
LABEL_200:
      long long v185 = v307;
      long long v186 = v284;
      break;
  }
  unint64_t v187 = v332;
  size_t v189 = v327;
LABEL_229:
  v186[v189] = v190;
  uint64_t v252 = v191[4];
  uint64_t v253 = *(void *)(v252 - 8);
  uint64_t v254 = *(unsigned __int8 *)(v253 + 80);
  uint64_t v255 = v187 + v254 + 1;
  uint64_t v256 = (void *)((unint64_t)&v186[v255] & ~v254);
  uint64_t v257 = (const void *)((unint64_t)&v185[v255] & ~v254);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v253 + 48))(v257, 1, v252))
  {
    int v258 = *(_DWORD *)(v253 + 84);
    size_t v259 = *(void *)(v253 + 64);
    if (v258) {
      size_t v260 = v259;
    }
    else {
      size_t v260 = v259 + 1;
    }
    memcpy(v256, v257, v260);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v253 + 32))(v256, v257, v252);
    long long v262 = *(void (**)(void *, void, uint64_t, uint64_t))(v253 + 56);
    uint64_t v261 = v253 + 56;
    v262(v256, 0, 1, v252);
    int v258 = *(_DWORD *)(v261 + 28);
    size_t v259 = *(void *)(v261 + 8);
  }
  if (v258) {
    size_t v263 = v259;
  }
  else {
    size_t v263 = v259 + 1;
  }
  uint64_t v264 = v191[6];
  uint64_t v265 = *(void *)(v264 - 8);
  uint64_t v266 = *(unsigned __int8 *)(v265 + 80);
  uint64_t v267 = v263 + v266;
  uint64_t v268 = (void *)(((unint64_t)v256 + v267) & ~v266);
  size_t v269 = (const void *)(((unint64_t)v257 + v267) & ~v266);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v265 + 48))(v269, 1, v264))
  {
    int v270 = *(_DWORD *)(v265 + 84);
    uint64_t v271 = *(void *)(v265 + 64);
    if (v270) {
      size_t v272 = *(void *)(v265 + 64);
    }
    else {
      size_t v272 = v271 + 1;
    }
    memcpy(v268, v269, v272);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v265 + 32))(v268, v269, v264);
    size_t v274 = *(void (**)(void *, void, uint64_t, uint64_t))(v265 + 56);
    uint64_t v273 = v265 + 56;
    v274(v268, 0, 1, v264);
    int v270 = *(_DWORD *)(v273 + 28);
    uint64_t v271 = *(void *)(v273 + 8);
  }
  if (v270) {
    uint64_t v275 = v271;
  }
  else {
    uint64_t v275 = v271 + 1;
  }
  *(void *)(((unint64_t)v268 + v275 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v269
                                                                                       + v275
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  return v139;
}

uint64_t sub_24ED55AD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[5] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v458 = a3[3];
  uint64_t v8 = *(void *)(v458 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v463 = sub_24EE55880();
  uint64_t v10 = *(void *)(v463 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v449 = a3[2];
  uint64_t v12 = *(void *)(v449 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = sub_24EE55960();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a3[7] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v9 | v11 | v13 | v16 | v18 | 7;
  uint64_t v20 = (unsigned __int8 *)((v19 + v7 + a1) & ~v19);
  uint64_t v21 = (v19 + v7 + a2) & ~v19;
  uint64_t v22 = ~v9;
  uint64_t v23 = (v9 + 248) & ~v9;
  uint64_t v24 = (unsigned __int8 *)v21;
  uint64_t v464 = v10;
  uint64_t v465 = v20;
  v456 = a3;
  uint64_t v457 = a1;
  uint64_t v460 = v17;
  if (v20 == (unsigned __int8 *)v21)
  {
    uint64_t v50 = ~v11;
    uint64_t v55 = v23 + v11 + 1;
    uint64_t v56 = ~v13;
    uint64_t v57 = ~v16;
    uint64_t v58 = ((v9 + 224) & v22) + v11 + 1;
    uint64_t v59 = (v11 + 64) & ~v11;
    uint64_t v60 = v11 + 24;
    uint64_t v61 = ((v9 + 24) & v22) + v11;
    uint64_t v62 = ((v9 + 104) & v22) + v11;
    uint64_t v63 = ((v9 + 160) & v22) + v11;
    uint64_t v64 = ((v9 + 56) & v22) + v11;
    uint64_t v65 = ((v9 + 64) & v22) + v11;
    uint64_t v66 = ((v9 + 128) & v22) + v11;
    uint64_t v67 = ~v18;
    uint64_t v68 = v12;
    uint64_t v69 = v65;
    uint64_t v70 = v8;
    uint64_t v71 = v24;
  }
  else
  {
    uint64_t v407 = v14;
    uint64_t v413 = a3[7];
    uint64_t v462 = v8;
    size_t v25 = *(void *)(v8 + 64);
    uint64_t v424 = v23 + v11 + 1;
    size_t v429 = v424 + v25;
    int v26 = *(_DWORD *)(v10 + 84);
    size_t v27 = *(void *)(v10 + 64);
    int v408 = v26;
    if (v26) {
      size_t v28 = v27;
    }
    else {
      size_t v28 = v27 + 1;
    }
    size_t v29 = v28 + v11;
    size_t v30 = v28 + v13;
    uint64_t v31 = *(void *)(v12 + 64);
    uint64_t v447 = v31 + v13;
    uint64_t v451 = v12;
    if (*(_DWORD *)(v12 + 84)) {
      size_t v32 = *(void *)(v12 + 64);
    }
    else {
      size_t v32 = v31 + 1;
    }
    unint64_t v33 = ((v31 + v13 + ((v28 + v13 + ((v28 + v11 + ((v28 + v11 + ((v424 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v13)) & ~v13)
        + v32;
    if (v27 <= v25) {
      size_t v34 = v25;
    }
    else {
      size_t v34 = v27;
    }
    size_t v406 = v28 + v16;
    uint64_t v35 = *(void *)(v15 + 64);
    if (((v28 + v16 + (v29 & ~v11)) & ~v16) + v35 <= v34) {
      size_t v36 = v34;
    }
    else {
      size_t v36 = ((v28 + v16 + (v29 & ~v11)) & ~v16) + v35;
    }
    uint64_t v423 = ((v9 + 224) & v22) + v11 + 1;
    size_t v411 = v32 + v13;
    size_t v412 = v32 + v18;
    int v37 = *(_DWORD *)(v17 + 84);
    unint64_t v38 = *(void *)(v17 + 64);
    if (v37) {
      size_t v39 = v38;
    }
    else {
      size_t v39 = v38 + 1;
    }
    size_t __n = v39;
    unint64_t v40 = ((v32 + v18 + ((v32 + v13 + ((v30 + ((v29 + ((v29 + ((v423 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v13)) & ~v13)) & ~v18)
        + v39;
    uint64_t v422 = (v11 + 64) & ~v11;
    unint64_t v41 = ((v30 + ((v29 + v422) & ~v11)) & ~v13) + v32;
    size_t v42 = v28 + ((v25 + v11) & ~v11);
    unint64_t v43 = ((v42 + v11) & ~v11) + v28;
    uint64_t v448 = v11 + 24;
    unint64_t v44 = ((v11 + 24 + (v42 & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v28;
    uint64_t v421 = ((v9 + 24) & v22) + v11;
    uint64_t v45 = ((v9 + 104) & v22) + v11;
    uint64_t v446 = v28 + v13;
    size_t v450 = v32;
    unint64_t v46 = ((v30 + ((v29 + ((v29 + ((v29 + ((((v9 + 160) & v22) + v11 + v25) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v13)
        + v32;
    uint64_t v418 = ((v9 + 56) & v22) + v11;
    size_t v47 = ((((v9 + 64) & v22) + v11 + v25) & ~v11) + v28;
    unint64_t v440 = v44;
    unint64_t v441 = v41;
    if (v44 > v33) {
      unint64_t v33 = v44;
    }
    size_t v433 = v36 + 1;
    if (v33 <= v36 + 1) {
      unint64_t v33 = v36 + 1;
    }
    unint64_t v442 = v40;
    if (v33 <= v40) {
      unint64_t v33 = v40;
    }
    if (v33 <= v41) {
      unint64_t v33 = v41;
    }
    size_t v438 = ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28;
    unint64_t v439 = ((v43 + v11) & ~v11) + v28;
    if (v33 <= v439) {
      unint64_t v33 = ((v43 + v11) & ~v11) + v28;
    }
    if (v33 <= ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28) {
      unint64_t v33 = ((v29 + ((v421 + v25) & ~v11)) & ~v11) + v28;
    }
    uint64_t v48 = ~v9;
    unint64_t v436 = v46;
    unint64_t v437 = ((v29 + ((v29 + ((v45 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v437) {
      unint64_t v33 = ((v29 + ((v29 + ((v45 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    if (v33 <= v46) {
      unint64_t v33 = v46;
    }
    if (v33 <= ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28) {
      unint64_t v33 = ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    size_t v434 = v47 + 1;
    size_t v435 = ((v29 + ((v29 + ((v418 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v47 + 1) {
      unint64_t v33 = v47 + 1;
    }
    uint64_t v428 = ((v9 + 128) & v22) + v11;
    size_t v452 = v28 + v11;
    size_t v455 = v28;
    unint64_t v432 = ((v29 + ((v29 + ((v428 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    if (v33 <= v432) {
      unint64_t v33 = ((v29 + ((v29 + ((v428 + v25) & ~v11)) & ~v11)) & ~v11) + v28;
    }
    unint64_t v443 = v43;
    unint64_t v444 = v38;
    if (v33 <= v43) {
      unint64_t v33 = v43;
    }
    if (v33 <= v38) {
      unint64_t v49 = v38;
    }
    else {
      unint64_t v49 = v33;
    }
    uint64_t v50 = ~v11;
    uint64_t v461 = ~v13;
    uint64_t v445 = ~v18;
    unsigned int v51 = v465[v49];
    unsigned int v52 = v51 - 15;
    uint64_t v459 = v11;
    if (v51 >= 0xF)
    {
      if (v49 <= 3) {
        uint64_t v53 = v49;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *v465;
          if (v49 < 4) {
            goto LABEL_57;
          }
          goto LABEL_58;
        case 2:
          int v54 = *(unsigned __int16 *)v465;
          if (v49 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 3:
          int v54 = *(unsigned __int16 *)v465 | (v465[2] << 16);
          if (v49 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_57;
        case 4:
          int v54 = *(_DWORD *)v465;
          if (v49 < 4) {
LABEL_57:
          }
            v54 |= v52 << (8 * v49);
LABEL_58:
          unsigned int v51 = v54 + 15;
          break;
        default:
          break;
      }
    }
    unint64_t v453 = v49;
    uint64_t v454 = v24;
    uint64_t v426 = v13;
    uint64_t v430 = *(void *)(v14 - 8);
    uint64_t v431 = ~v16;
    uint64_t v425 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v419 = ((v9 + 160) & v22) + v11;
    uint64_t v420 = ((v9 + 104) & v22) + v11;
    uint64_t v427 = ((v9 + 64) & v22) + v11;
    size_t v410 = v36;
    uint64_t v414 = v9;
    switch(v51)
    {
      case 1u:
        unsigned int v87 = v465[v36];
        unsigned int v88 = v87 - 3;
        if (v87 < 3)
        {
          uint64_t v91 = v463;
          uint64_t v90 = v464;
        }
        else
        {
          if (v36 <= 3) {
            uint64_t v89 = v36;
          }
          else {
            uint64_t v89 = 4;
          }
          uint64_t v91 = v463;
          uint64_t v90 = v464;
          switch(v89)
          {
            case 1:
              int v92 = *v465;
              goto LABEL_137;
            case 2:
              int v92 = *(unsigned __int16 *)v465;
              goto LABEL_137;
            case 3:
              int v92 = *(unsigned __int16 *)v465 | (v465[2] << 16);
              goto LABEL_137;
            case 4:
              int v92 = *(_DWORD *)v465;
LABEL_137:
              if (v36 < 4) {
                unsigned int v87 = (v92 | (v88 << (8 * v36))) + 3;
              }
              else {
                unsigned int v87 = v92 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v87 != 2)
        {
          if (v87 == 1) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v465, v91);
          }
          else {
            (*(void (**)(unsigned __int8 *, uint64_t))(v462 + 8))(v465, v458);
          }
          goto LABEL_149;
        }
        uint64_t v130 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v90 + 48);
        if (!v130(v465, 1, v91)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v465, v91);
        }
        uint64_t v131 = v90;
        uint64_t v11 = v459;
        unint64_t v132 = (unint64_t)&v465[v459 + v455] & v50;
        uint64_t v85 = v446;
        if (!v130((unsigned __int8 *)v132, 1, v91)) {
          (*(void (**)(unint64_t, uint64_t))(v131 + 8))(v132, v463);
        }
        (*(void (**)(size_t, uint64_t))(v430 + 8))((v406 + v132) & v431, v407);
        size_t v86 = v455;
        break;
      case 2u:
        uint64_t v93 = (unint64_t)&v465[v9 + 224] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v93, v458);
        uint64_t v94 = (v11 + v25 + v93 + 1) & v50;
        uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v95(v94, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v94, v463);
        }
        uint64_t v96 = (v452 + v94) & v50;
        if (!v95(v96, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v96, v463);
        }
        uint64_t v97 = (v452 + v96) & v50;
        if (!v95(v97, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v97, v463);
        }
        size_t v98 = (v446 + v97) & v461;
        uint64_t v99 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48);
        if (!v99(v98, 1, v449)) {
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v98, v449);
        }
        size_t v100 = (v411 + v98) & v461;
        if (!v99(v100, 1, v449)) {
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v100, v449);
        }
        size_t v101 = (v412 + v100) & v445;
        uint64_t v85 = v446;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v460 + 48))(v101, 1, v413)) {
          (*(void (**)(size_t, uint64_t))(v460 + 8))(v101, v413);
        }
        break;
      case 3u:
        uint64_t v102 = (uint64_t)&v465[v11 + 64];
        uint64_t v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v103(v102 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v102 & v50, v463);
        }
        size_t v104 = ((v102 | v11) + v455) & v50;
        uint64_t v85 = v446;
        if (!v103(v104, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v104, v463);
        }
        size_t v105 = (v446 + v104) & v461;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48))(v105, 1, v449)) {
          goto LABEL_112;
        }
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        uint64_t v106 = (uint64_t)&v465[v11 + v25];
        goto LABEL_120;
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        unint64_t v72 = (unint64_t)&v465[v11 + v25] & v50;
        uint64_t v73 = v463;
        unsigned int v74 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v74(v72, 1, v463)) {
          (*(void (**)(unint64_t, uint64_t))(v464 + 8))(v72, v463);
        }
        size_t v75 = v455;
        size_t v76 = v448 + ((v455 + v72) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_131;
      case 6u:
        uint64_t v107 = (unint64_t)&v465[v9 + 24] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v107, v458);
        uint64_t v108 = v107 + v11 + v25;
        goto LABEL_128;
      case 8u:
        uint64_t v409 = ~v9;
        uint64_t v109 = (unint64_t)&v465[v9 + 104] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v109, v458);
        uint64_t v110 = v109 + v11 + v25;
        unint64_t v111 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v111(v110 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v110 & v50, v463);
        }
        uint64_t v112 = v110 | v11;
        size_t v86 = v455;
        size_t v113 = (v112 + v455) & v50;
        uint64_t v85 = v446;
        if (!v111(v113, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v113, v463);
        }
        size_t v114 = (v452 + v113) & v50;
        uint64_t v48 = v409;
        if (!v111(v114, 1, v463)) {
          goto LABEL_132;
        }
        break;
      case 9u:
        uint64_t v115 = (unint64_t)&v465[v9 + 160] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v115, v458);
        uint64_t v116 = v115 + v11 + v25;
        size_t v117 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v117(v116 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v116 & v50, v463);
        }
        uint64_t v118 = v116 | v11;
        size_t v86 = v455;
        size_t v119 = (v118 + v455) & v50;
        if (!v117(v119, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v119, v463);
        }
        size_t v120 = (v452 + v119) & v50;
        if (!v117(v120, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v120, v463);
        }
        size_t v121 = (v452 + v120) & v50;
        if (!v117(v121, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v121, v463);
        }
        uint64_t v85 = v446;
        size_t v105 = (v446 + v121) & v461;
        if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v451 + 48))(v105, 1, v449)) {
LABEL_112:
        }
          (*(void (**)(size_t, uint64_t))(v451 + 8))(v105, v449);
        break;
      case 0xAu:
        uint64_t v122 = (uint64_t)&v465[v9 + 56];
        goto LABEL_119;
      case 0xBu:
        uint64_t v123 = (unint64_t)&v465[v9 + 64] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v123, v458);
        uint64_t v124 = (v123 + v11 + v25) & v50;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48))(v124, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v124, v463);
        }
        size_t v86 = v455;
        uint64_t v85 = v446;
        if (!v408) {
          break;
        }
        goto LABEL_151;
      case 0xCu:
        uint64_t v122 = (uint64_t)&v465[v9 + 128];
LABEL_119:
        uint64_t v125 = v122 & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v122 & v22, v458);
        uint64_t v106 = v125 + v11 + v25;
LABEL_120:
        long long v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v126(v106 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v106 & v50, v463);
        }
        unint64_t v127 = v106 | v11;
        size_t v86 = v455;
        size_t v128 = (v127 + v455) & v50;
        uint64_t v85 = v446;
        if (!v126(v128, 1, v463)) {
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v128, v463);
        }
        size_t v114 = (v452 + v128) & v50;
        if (!v126(v114, 1, v463)) {
          goto LABEL_132;
        }
        break;
      case 0xDu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v460 + 8))(v465, v413);
LABEL_149:
        size_t v86 = v455;
        uint64_t v85 = v446;
        uint64_t v11 = v459;
        break;
      case 0xEu:
        (*(void (**)(unsigned __int8 *))(v462 + 8))(v465);
        uint64_t v108 = (uint64_t)&v465[v11 + v25];
LABEL_128:
        uint64_t v73 = v463;
        unsigned int v74 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v74(v108 & v50, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v108 & v50, v463);
        }
        size_t v75 = v455;
        size_t v76 = (v108 | v11) + v455;
LABEL_131:
        size_t v114 = v76 & v50;
        unsigned int v129 = v74(v76 & v50, 1, v73);
        size_t v86 = v75;
        uint64_t v85 = v446;
        if (!v129) {
LABEL_132:
        }
          (*(void (**)(size_t, uint64_t))(v464 + 8))(v114, v463);
        break;
      default:
        uint64_t v77 = (unint64_t)&v465[v9 + 248] & v22;
        (*(void (**)(uint64_t, uint64_t))(v462 + 8))(v77, v458);
        uint64_t v78 = (v11 + v25 + v77 + 1) & v50;
        uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
        if (!v79(v78, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v78, v463);
        }
        uint64_t v80 = (v452 + v78) & v50;
        if (!v79(v80, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v80, v463);
        }
        uint64_t v81 = (v452 + v80) & v50;
        if (!v79(v81, 1, v463)) {
          (*(void (**)(uint64_t, uint64_t))(v464 + 8))(v81, v463);
        }
        size_t v82 = (v446 + v81) & v461;
        long long v83 = *(void (**)(size_t, uint64_t))(v451 + 8);
        v83(v82, v449);
        uint64_t v84 = (v447 + v82) & v461;
        uint64_t v85 = v446;
        size_t v86 = v455;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v451 + 48))(v84, 1, v449)) {
          v83(v84, v449);
        }
        break;
    }
    size_t v27 = v86;
LABEL_151:
    size_t v133 = ((v447 + ((v85 + ((v452 + (((v429 | v11) + v27) & v50)) & v50)) & v461)) & v461) + v450;
    if (v433 > v133) {
      size_t v133 = v433;
    }
    if (v442 > v133) {
      size_t v133 = v442;
    }
    if (v441 > v133) {
      size_t v133 = v441;
    }
    if (v439 > v133) {
      size_t v133 = v439;
    }
    if (v440 > v133) {
      size_t v133 = v440;
    }
    if (v438 > v133) {
      size_t v133 = v438;
    }
    if (v440 > v133) {
      size_t v133 = v440;
    }
    if (v437 > v133) {
      size_t v133 = v437;
    }
    if (v436 > v133) {
      size_t v133 = v436;
    }
    if (v435 > v133) {
      size_t v133 = v435;
    }
    if (v434 > v133) {
      size_t v133 = v434;
    }
    if (v432 > v133) {
      size_t v133 = v432;
    }
    if (v444 > v133) {
      size_t v133 = v444;
    }
    if (v443 > v133) {
      size_t v133 = v443;
    }
    unsigned int v134 = v454[v133];
    unsigned int v135 = v134 - 15;
    if (v134 < 0xF)
    {
      uint64_t v139 = v464;
      size_t v138 = v465;
      unint64_t v136 = v453;
    }
    else
    {
      unint64_t v136 = v453;
      if (v453 <= 3) {
        uint64_t v137 = v453;
      }
      else {
        uint64_t v137 = 4;
      }
      uint64_t v139 = v464;
      size_t v138 = v465;
      switch(v137)
      {
        case 1:
          int v140 = *v454;
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 2:
          int v140 = *(unsigned __int16 *)v454;
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 3:
          int v140 = *(unsigned __int16 *)v454 | (v454[2] << 16);
          if (v453 < 4) {
            goto LABEL_188;
          }
          goto LABEL_192;
        case 4:
          int v140 = *(_DWORD *)v454;
          if (v453 < 4) {
LABEL_188:
          }
            unsigned int v134 = (v140 | (v135 << (8 * v453))) + 15;
          else {
LABEL_192:
          }
            unsigned int v134 = v140 + 15;
          break;
        default:
          break;
      }
    }
    switch(v134)
    {
      case 1u:
        unsigned int v160 = v454[v410];
        unsigned int v161 = v160 - 3;
        uint64_t v415 = v50;
        if (v160 < 3)
        {
          uint64_t v166 = v461;
          uint64_t v163 = v462;
          uint64_t v165 = v448;
          uint64_t v164 = v463;
        }
        else
        {
          if (v410 <= 3) {
            uint64_t v162 = v410;
          }
          else {
            uint64_t v162 = 4;
          }
          uint64_t v163 = v462;
          uint64_t v164 = v463;
          uint64_t v165 = v448;
          uint64_t v166 = v461;
          switch(v162)
          {
            case 1:
              int v167 = *v454;
              goto LABEL_439;
            case 2:
              int v167 = *(unsigned __int16 *)v454;
              goto LABEL_439;
            case 3:
              int v167 = *(unsigned __int16 *)v454 | (v454[2] << 16);
              goto LABEL_439;
            case 4:
              int v167 = *(_DWORD *)v454;
LABEL_439:
              if (v410 < 4) {
                unsigned int v160 = (v167 | (v161 << (8 * v410))) + 3;
              }
              else {
                unsigned int v160 = v167 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v160 == 2)
        {
          uint64_t v401 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v464 + 48);
          if (v401(v454, 1, v164))
          {
            size_t v402 = v455;
            memcpy(v465, v454, v455);
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v464 + 32))(v465, v454, v164);
            (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v464 + 56))(v465, 0, 1, v164);
            size_t v402 = v455;
          }
          unint64_t v403 = (void *)((unint64_t)&v465[v459 + v402] & v415);
          unint64_t v404 = (void *)((unint64_t)&v454[v459 + v402] & v415);
          uint64_t v69 = v427;
          if (v401((unsigned __int8 *)v404, 1, v164))
          {
            memcpy(v403, v404, v402);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v464 + 32))(v403, v404, v164);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v403, 0, 1, v164);
          }
          uint64_t v165 = v448;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32))(((unint64_t)v403 + v406) & v431, ((unint64_t)v404 + v406) & v431, v407);
          uint64_t v15 = v430;
          char v400 = 2;
          uint64_t v399 = v454;
          size_t v138 = v465;
          uint64_t v13 = v426;
          uint64_t v55 = v424;
          uint64_t v16 = v425;
          uint64_t v59 = v422;
          uint64_t v58 = v423;
          uint64_t v62 = v420;
          uint64_t v61 = v421;
          uint64_t v64 = v418;
          uint64_t v63 = v419;
          uint64_t v68 = v451;
          uint64_t v56 = v461;
        }
        else
        {
          uint64_t v398 = v166;
          if (v160 == 1)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v464 + 32))(v138, v454, v164);
            uint64_t v56 = v398;
            uint64_t v399 = v454;
            char v400 = 1;
            uint64_t v13 = v426;
            uint64_t v68 = v451;
            uint64_t v15 = v430;
            uint64_t v55 = v424;
            uint64_t v16 = v425;
            uint64_t v59 = v422;
            uint64_t v58 = v423;
            uint64_t v62 = v420;
            uint64_t v61 = v421;
            uint64_t v64 = v418;
            uint64_t v63 = v419;
            uint64_t v69 = v427;
          }
          else
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v163 + 32))(v138, v454, v458);
            uint64_t v399 = v454;
            char v400 = 0;
            uint64_t v13 = v426;
            uint64_t v68 = v451;
            uint64_t v15 = v430;
            uint64_t v55 = v424;
            uint64_t v16 = v425;
            uint64_t v59 = v422;
            uint64_t v58 = v423;
            uint64_t v62 = v420;
            uint64_t v61 = v421;
            uint64_t v64 = v418;
            uint64_t v63 = v419;
            uint64_t v69 = v427;
            uint64_t v56 = v398;
          }
        }
        v138[v410] = v400;
        v138[v453] = 1;
        uint64_t v67 = ~v18;
        uint64_t v57 = v431;
        uint64_t v70 = v462;
        uint64_t v66 = v428;
        uint64_t v60 = v165;
        uint64_t v50 = v415;
        uint64_t v71 = v399;
        goto LABEL_351;
      case 2u:
        long long v168 = *((_OWORD *)v454 + 1);
        *(_OWORD *)size_t v138 = *(_OWORD *)v454;
        *((_OWORD *)v138 + 1) = v168;
        long long v169 = *((_OWORD *)v454 + 2);
        long long v170 = *((_OWORD *)v454 + 3);
        long long v171 = *((_OWORD *)v454 + 5);
        *((_OWORD *)v138 + 4) = *((_OWORD *)v454 + 4);
        *((_OWORD *)v138 + 5) = v171;
        *((_OWORD *)v138 + 2) = v169;
        *((_OWORD *)v138 + 3) = v170;
        long long v172 = *((_OWORD *)v454 + 6);
        long long v173 = *((_OWORD *)v454 + 7);
        long long v174 = *((_OWORD *)v454 + 9);
        *((_OWORD *)v138 + 8) = *((_OWORD *)v454 + 8);
        *((_OWORD *)v138 + 9) = v174;
        *((_OWORD *)v138 + 6) = v172;
        *((_OWORD *)v138 + 7) = v173;
        long long v175 = *((_OWORD *)v454 + 10);
        long long v176 = *((_OWORD *)v454 + 11);
        long long v177 = *((_OWORD *)v454 + 13);
        *((_OWORD *)v138 + 12) = *((_OWORD *)v454 + 12);
        *((_OWORD *)v138 + 13) = v177;
        *((_OWORD *)v138 + 10) = v175;
        *((_OWORD *)v138 + 11) = v176;
        uint64_t v178 = (unint64_t)&v138[v414 + 224] & v48;
        uint64_t v179 = (unint64_t)&v454[v414 + 224] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 32))(v178, v179, v458);
        size_t v180 = v25 + v179;
        *(unsigned char *)(v25 + v178) = *(unsigned char *)(v25 + v179);
        uint64_t v181 = (void *)((v11 + 1 + v25 + v178) & v50);
        unint64_t v182 = (const void *)((v11 + 1 + v180) & v50);
        uint64_t v183 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v183(v182, 1, v463))
        {
          size_t v184 = v455;
          memcpy(v181, v182, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v181, v182, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v181, 0, 1, v463);
          size_t v184 = v455;
        }
        char v278 = (void *)(((unint64_t)v181 + v452) & v50);
        size_t v279 = (const void *)(((unint64_t)v182 + v452) & v50);
        if (v183(v279, 1, v463))
        {
          memcpy(v278, v279, v184);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v278, v279, v463);
          size_t v184 = v455;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v278, 0, 1, v463);
        }
        uint64_t v308 = (void *)(((unint64_t)v278 + v452) & v50);
        uint64_t v309 = (const void *)(((unint64_t)v279 + v452) & v50);
        if (v183(v309, 1, v463))
        {
          memcpy(v308, v309, v184);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v308, v309, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v308, 0, 1, v463);
        }
        uint64_t v64 = v418;
        size_t v328 = (void *)(((unint64_t)v308 + v85) & v461);
        uint64_t v329 = (const void *)(((unint64_t)v309 + v85) & v461);
        uint64_t v330 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48);
        if (v330(v329, 1, v449))
        {
          memcpy(v328, v329, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 32))(v328, v329, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v328, 0, 1, v449);
        }
        int v336 = (void *)(((unint64_t)v328 + v411) & v461);
        uint64_t v337 = (const void *)(((unint64_t)v329 + v411) & v461);
        if (v330(v337, 1, v449))
        {
          memcpy(v336, v337, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 32))(v336, v337, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v336, 0, 1, v449);
        }
        uint64_t v416 = v50;
        uint64_t v340 = (void *)(((unint64_t)v336 + v412) & v445);
        uint64_t v341 = (const void *)(((unint64_t)v337 + v412) & v445);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v460 + 48))(v341, 1, v413))
        {
          memcpy(v340, v341, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v460 + 32))(v340, v341, v413);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v460 + 56))(v340, 0, 1, v413);
        }
        uint64_t v60 = v448;
        uint64_t v71 = v454;
        v465[v453] = 2;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v68 = v451;
        goto LABEL_366;
      case 3u:
        long long v185 = *(_OWORD *)v454;
        long long v186 = *((_OWORD *)v454 + 1);
        long long v187 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v187;
        *(_OWORD *)size_t v138 = v185;
        *((_OWORD *)v138 + 1) = v186;
        uint64_t v188 = (uint64_t)&v138[v11 + 64];
        uint64_t v189 = v139;
        uint64_t v190 = (uint64_t)&v454[v11 + 64];
        uint64_t v191 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48);
        if (v191(v190 & v50, 1, v463))
        {
          size_t v192 = v455;
          memcpy((void *)(v188 & v50), (const void *)(v190 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 32))(v188 & v50, v190 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56))(v188 & v50, 0, 1, v463);
          size_t v192 = v455;
        }
        size_t v280 = (void *)(((v188 | v459) + v192) & v50);
        uint64_t v416 = v50;
        size_t v281 = (const void *)(((v190 | v459) + v192) & v50);
        if (v191((uint64_t)v281, 1, v463))
        {
          memcpy(v280, v281, v192);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v280, v281, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v280, 0, 1, v463);
        }
        uint64_t v310 = v448;
        uint64_t v64 = v418;
        uint64_t v311 = (void *)(((unint64_t)v280 + v446) & v461);
        uint64_t v312 = (const void *)(((unint64_t)v281 + v446) & v461);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v312, 1, v449))
        {
          memcpy(v311, v312, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 32))(v311, v312, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v311, 0, 1, v449);
        }
        char v331 = 3;
        goto LABEL_363;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 32))(v138, v454, v458);
        double v193 = &v138[v11 + v25];
        unint64_t v194 = (unint64_t)&v454[v11 + v25];
        uint64_t v195 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v139 + 48);
        if (v195(v194 & v50, 1, v463))
        {
          size_t v196 = v455;
          memcpy((void *)((unint64_t)v193 & v50), (const void *)(v194 & v50), v455);
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v139 + 32))((unint64_t)v193 & v50, v194 & v50, v463);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v139 + 56))((unint64_t)v193 & v50, 0, 1, v463);
          size_t v196 = v455;
        }
        uint64_t v282 = (void *)((((unint64_t)v193 | v459) + v196) & v50);
        size_t v283 = (const void *)(((v194 | v459) + v196) & v50);
        if (v195((unint64_t)v283, 1, v463))
        {
          memcpy(v282, v283, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v282, v283, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v282, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v313 = (void *)(((unint64_t)v282 + v452) & v50);
        size_t v314 = (const void *)(((unint64_t)v283 + v452) & v50);
        if (v195((unint64_t)v314, 1, v463))
        {
          memcpy(v313, v314, v196);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v313, v314, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v313, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v60 = v448;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 4;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v66 = v428;
        uint64_t v11 = v459;
        uint64_t v56 = v461;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 32))(v138, v454, v458);
        uint64_t v197 = (void *)((unint64_t)&v138[v11 + v25] & v50);
        uint64_t v198 = (const void *)((unint64_t)&v454[v11 + v25] & v50);
        unint64_t v199 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        uint64_t v200 = v50;
        if (v199(v198, 1, v463))
        {
          size_t v201 = v455;
          memcpy(v197, v198, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v197, v198, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v197, 0, 1, v463);
          size_t v201 = v455;
        }
        *((unsigned char *)v197 + v201) = *((unsigned char *)v198 + v201);
        unint64_t v284 = ((unint64_t)v197 + v201) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v285 = ((unint64_t)v198 + v201) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v284 + 8) = *(_OWORD *)(v285 + 8);
        uint64_t v286 = v448;
        uint64_t v287 = (void *)((v448 + v284) & v200);
        uint64_t v417 = v200;
        size_t v288 = (const void *)((v448 + v285) & v200);
        if (v199(v288, 1, v463))
        {
          memcpy(v287, v288, v201);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v287, v288, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v287, 0, 1, v463);
        }
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        v465[v453] = 5;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        goto LABEL_326;
      case 6u:
        long long v202 = *(_OWORD *)v454;
        *((void *)v138 + 2) = *((void *)v454 + 2);
        *(_OWORD *)size_t v138 = v202;
        uint64_t v203 = (unint64_t)&v138[v414 + 24] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 32))(v203, (unint64_t)&v454[v414 + 24] & v48, v458);
        uint64_t v204 = v139;
        uint64_t v205 = v203 + v11 + v25;
        uint64_t v206 = ((unint64_t)&v454[v414 + 24] & v48) + v11 + v25;
        uint64_t v207 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
        if (v207(v206 & v50, 1, v463))
        {
          size_t v208 = v455;
          memcpy((void *)(v205 & v50), (const void *)(v206 & v50), v455);
          uint64_t v69 = v427;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 32))(v205 & v50, v206 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 56))(v205 & v50, 0, 1, v463);
          uint64_t v69 = v427;
          size_t v208 = v455;
        }
        uint64_t v289 = (void *)(((v205 | v459) + v208) & v50);
        uint64_t v290 = (const void *)(((v206 | v459) + v208) & v50);
        uint64_t v417 = v50;
        if (v207((uint64_t)v290, 1, v463))
        {
          memcpy(v289, v290, v208);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v289, v290, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v289, 0, 1, v463);
        }
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v66 = v428;
        uint64_t v67 = ~v18;
        v465[v453] = 6;
        goto LABEL_350;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 32))(v138, v454, v458);
        size_t v209 = (void *)((unint64_t)&v138[v11 + v25] & v50);
        size_t v210 = (const void *)((unint64_t)&v454[v11 + v25] & v50);
        uint64_t v211 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v211(v210, 1, v463))
        {
          size_t v212 = v455;
          memcpy(v209, v210, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v209, v210, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v209, 0, 1, v463);
          size_t v212 = v455;
        }
        *((unsigned char *)v209 + v212) = *((unsigned char *)v210 + v212);
        unint64_t v291 = ((unint64_t)v209 + v212) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v292 = ((unint64_t)v210 + v212) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v291 + 8) = *(_OWORD *)(v292 + 8);
        unint64_t v293 = (void *)((v448 + v291) & v50);
        size_t v294 = (const void *)((v448 + v292) & v50);
        uint64_t v69 = v427;
        if (v211(v294, 1, v463))
        {
          memcpy(v293, v294, v212);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v293, v294, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v293, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 7;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v66 = v428;
        uint64_t v60 = v448;
        goto LABEL_351;
      case 8u:
        long long v213 = *(_OWORD *)v454;
        long long v214 = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 1) = *((_OWORD *)v454 + 1);
        *((_OWORD *)v138 + 2) = v214;
        *(_OWORD *)size_t v138 = v213;
        long long v215 = *((_OWORD *)v454 + 3);
        long long v216 = *((_OWORD *)v454 + 4);
        long long v217 = *((_OWORD *)v454 + 5);
        *((void *)v138 + 12) = *((void *)v454 + 12);
        *((_OWORD *)v138 + 4) = v216;
        *((_OWORD *)v138 + 5) = v217;
        *((_OWORD *)v138 + 3) = v215;
        uint64_t v218 = (unint64_t)&v138[v414 + 104] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 32))(v218, (unint64_t)&v454[v414 + 104] & v48, v458);
        uint64_t v219 = v218 + v11 + v25;
        uint64_t v220 = v139;
        uint64_t v221 = ((unint64_t)&v454[v414 + 104] & v48) + v11 + v25;
        unint64_t v222 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
        if (v222(v221 & v50, 1, v463))
        {
          size_t v223 = v455;
          memcpy((void *)(v219 & v50), (const void *)(v221 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 32))(v219 & v50, v221 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v220 + 56))(v219 & v50, 0, 1, v463);
          size_t v223 = v455;
        }
        unint64_t v295 = (void *)(((v219 | v459) + v223) & v50);
        size_t v296 = (const void *)(((v221 | v459) + v223) & v50);
        if (v222((uint64_t)v296, 1, v463))
        {
          memcpy(v295, v296, v223);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v295, v296, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v295, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v315 = (void *)(((unint64_t)v295 + v452) & v50);
        size_t v316 = (const void *)(((unint64_t)v296 + v452) & v50);
        uint64_t v417 = v50;
        if (v222((uint64_t)v316, 1, v463))
        {
          memcpy(v315, v316, v223);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v315, v316, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v315, 0, 1, v463);
        }
        uint64_t v71 = v454;
        unint64_t v332 = v465;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        char v333 = 8;
        goto LABEL_344;
      case 9u:
        long long v224 = *((_OWORD *)v454 + 1);
        *(_OWORD *)size_t v138 = *(_OWORD *)v454;
        *((_OWORD *)v138 + 1) = v224;
        long long v225 = *((_OWORD *)v454 + 2);
        long long v226 = *((_OWORD *)v454 + 3);
        long long v227 = *((_OWORD *)v454 + 5);
        *((_OWORD *)v138 + 4) = *((_OWORD *)v454 + 4);
        *((_OWORD *)v138 + 5) = v227;
        *((_OWORD *)v138 + 2) = v225;
        *((_OWORD *)v138 + 3) = v226;
        long long v228 = *((_OWORD *)v454 + 6);
        long long v229 = *((_OWORD *)v454 + 7);
        long long v230 = *((_OWORD *)v454 + 9);
        *((_OWORD *)v138 + 8) = *((_OWORD *)v454 + 8);
        *((_OWORD *)v138 + 9) = v230;
        *((_OWORD *)v138 + 6) = v228;
        *((_OWORD *)v138 + 7) = v229;
        uint64_t v231 = (unint64_t)&v138[v414 + 160] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 32))(v231, (unint64_t)&v454[v414 + 160] & v48, v458);
        uint64_t v232 = v11 + v25;
        uint64_t v233 = v231 + v11 + v25;
        uint64_t v234 = v139;
        uint64_t v235 = ((unint64_t)&v454[v414 + 160] & v48) + v232;
        uint64_t v236 = (const void *)(v235 & v50);
        uint64_t v237 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
        if (v237(v235 & v50, 1, v463))
        {
          size_t v238 = v455;
          memcpy((void *)(v233 & v50), v236, v455);
        }
        else
        {
          (*(void (**)(uint64_t, const void *, uint64_t))(v234 + 32))(v233 & v50, v236, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v234 + 56))(v233 & v50, 0, 1, v463);
          size_t v238 = v455;
        }
        unint64_t v297 = (void *)(((v233 | v459) + v238) & v50);
        size_t v298 = (const void *)(((v235 | v459) + v238) & v50);
        if (v237((uint64_t)v298, 1, v463))
        {
          memcpy(v297, v298, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v297, v298, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v297, 0, 1, v463);
        }
        uint64_t v317 = (void *)(((unint64_t)v297 + v452) & v50);
        uint64_t v318 = (const void *)(((unint64_t)v298 + v452) & v50);
        if (v237((uint64_t)v318, 1, v463))
        {
          memcpy(v317, v318, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v317, v318, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v317, 0, 1, v463);
        }
        unint64_t v334 = (void *)(((unint64_t)v317 + v452) & v50);
        uint64_t v416 = v50;
        size_t v335 = (const void *)(((unint64_t)v318 + v452) & v50);
        if (v237((uint64_t)v335, 1, v463))
        {
          memcpy(v334, v335, v238);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v334, v335, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v334, 0, 1, v463);
        }
        uint64_t v64 = v418;
        int v338 = (void *)(((unint64_t)v334 + v85) & v461);
        size_t v339 = (const void *)(((unint64_t)v335 + v85) & v461);
        uint64_t v310 = v448;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v339, 1, v449))
        {
          memcpy(v338, v339, v450);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v451 + 32))(v338, v339, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v338, 0, 1, v449);
        }
        char v331 = 9;
LABEL_363:
        uint64_t v71 = v454;
        v465[v453] = v331;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v68 = v451;
        uint64_t v60 = v310;
LABEL_366:
        uint64_t v50 = v416;
        uint64_t v11 = v459;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        break;
      case 0xAu:
        long long v239 = *(_OWORD *)v454;
        long long v240 = *((_OWORD *)v454 + 1);
        long long v241 = *((_OWORD *)v454 + 2);
        *((void *)v138 + 6) = *((void *)v454 + 6);
        *((_OWORD *)v138 + 1) = v240;
        *((_OWORD *)v138 + 2) = v241;
        *(_OWORD *)size_t v138 = v239;
        uint64_t v242 = (unint64_t)&v138[v414 + 56] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 32))(v242, (unint64_t)&v454[v414 + 56] & v48, v458);
        uint64_t v243 = v242 + v11 + v25;
        uint64_t v244 = v139;
        uint64_t v245 = ((unint64_t)&v454[v414 + 56] & v48) + v11 + v25;
        unint64_t v246 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
        if (v246(v245 & v50, 1, v463))
        {
          size_t v247 = v455;
          memcpy((void *)(v243 & v50), (const void *)(v245 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v244 + 32))(v243 & v50, v245 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56))(v243 & v50, 0, 1, v463);
          size_t v247 = v455;
        }
        unint64_t v299 = (void *)(((v243 | v459) + v247) & v50);
        size_t v300 = (const void *)(((v245 | v459) + v247) & v50);
        if (v246((uint64_t)v300, 1, v463))
        {
          memcpy(v299, v300, v247);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v299, v300, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v299, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v319 = (void *)(((unint64_t)v299 + v452) & v50);
        uint64_t v320 = (const void *)(((unint64_t)v300 + v452) & v50);
        uint64_t v417 = v50;
        if (v246((uint64_t)v320, 1, v463))
        {
          memcpy(v319, v320, v247);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v319, v320, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v319, 0, 1, v463);
        }
        uint64_t v71 = v454;
        unint64_t v332 = v465;
        uint64_t v13 = v426;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v67 = ~v18;
        char v333 = 10;
LABEL_344:
        v332[v453] = v333;
        goto LABEL_347;
      case 0xBu:
        long long v248 = *(_OWORD *)v454;
        long long v249 = *((_OWORD *)v454 + 1);
        long long v250 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v250;
        *(_OWORD *)size_t v138 = v248;
        *((_OWORD *)v138 + 1) = v249;
        uint64_t v251 = (unint64_t)&v138[v414 + 64] & v48;
        uint64_t v252 = (unint64_t)&v454[v414 + 64] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 32))(v251, v252, v458);
        uint64_t v253 = (void *)((v251 + v11 + v25) & v50);
        uint64_t v254 = (const void *)((v252 + v11 + v25) & v50);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48))(v254, 1, v463))
        {
          size_t v255 = v455;
          memcpy(v253, v254, v455);
          uint64_t v68 = v451;
          uint64_t v256 = v418;
          uint64_t v56 = v461;
          uint64_t v257 = v428;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v253, v254, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v253, 0, 1, v463);
          uint64_t v68 = v451;
          uint64_t v256 = v418;
          uint64_t v56 = v461;
          uint64_t v257 = v428;
          size_t v255 = v455;
        }
        *((unsigned char *)v253 + v255) = *((unsigned char *)v254 + v255);
        size_t v301 = ((v447 + ((v85 + ((v452 + (((v429 | v11) + v255) & v50)) & v50)) & v56)) & v56) + v450;
        if (v433 > v301) {
          size_t v301 = v433;
        }
        if (v442 > v301) {
          size_t v301 = v442;
        }
        if (v441 > v301) {
          size_t v301 = v441;
        }
        if (v439 > v301) {
          size_t v301 = v439;
        }
        if (v440 > v301) {
          size_t v301 = v440;
        }
        if (v438 > v301) {
          size_t v301 = v438;
        }
        if (v440 > v301) {
          size_t v301 = v440;
        }
        if (v437 > v301) {
          size_t v301 = v437;
        }
        if (v436 > v301) {
          size_t v301 = v436;
        }
        if (v435 > v301) {
          size_t v301 = v435;
        }
        if (v434 > v301) {
          size_t v301 = v434;
        }
        if (v432 > v301) {
          size_t v301 = v432;
        }
        if (v444 > v301) {
          size_t v301 = v444;
        }
        if (v443 > v301) {
          size_t v301 = v443;
        }
        v465[v301] = 11;
        uint64_t v71 = v454;
        uint64_t v13 = v426;
        uint64_t v70 = v462;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v67 = ~v18;
        uint64_t v64 = v256;
        uint64_t v66 = v257;
        goto LABEL_351;
      case 0xCu:
        long long v258 = *(_OWORD *)v454;
        long long v259 = *((_OWORD *)v454 + 1);
        long long v260 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v260;
        *(_OWORD *)size_t v138 = v258;
        *((_OWORD *)v138 + 1) = v259;
        long long v261 = *((_OWORD *)v454 + 4);
        long long v262 = *((_OWORD *)v454 + 5);
        long long v263 = *((_OWORD *)v454 + 7);
        *((_OWORD *)v138 + 6) = *((_OWORD *)v454 + 6);
        *((_OWORD *)v138 + 7) = v263;
        *((_OWORD *)v138 + 4) = v261;
        *((_OWORD *)v138 + 5) = v262;
        uint64_t v264 = (unint64_t)&v138[v414 + 128] & v48;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v462 + 32))(v264, (unint64_t)&v454[v414 + 128] & v48, v458);
        uint64_t v265 = v264 + v11 + v25;
        uint64_t v266 = v139;
        uint64_t v267 = ((unint64_t)&v454[v414 + 128] & v48) + v11 + v25;
        uint64_t v268 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v266 + 48);
        if (v268(v267 & v50, 1, v463))
        {
          size_t v269 = v455;
          memcpy((void *)(v265 & v50), (const void *)(v267 & v50), v455);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v266 + 32))(v265 & v50, v267 & v50, v463);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v266 + 56))(v265 & v50, 0, 1, v463);
          size_t v269 = v455;
        }
        unint64_t v302 = (void *)(((v265 | v459) + v269) & v50);
        uint64_t v303 = (const void *)(((v267 | v459) + v269) & v50);
        if (v268((uint64_t)v303, 1, v463))
        {
          memcpy(v302, v303, v269);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v302, v303, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v302, 0, 1, v463);
        }
        uint64_t v69 = v427;
        uint64_t v321 = (void *)(((unint64_t)v302 + v452) & v50);
        uint64_t v417 = v50;
        uint64_t v322 = (const void *)(((unint64_t)v303 + v452) & v50);
        if (v268((uint64_t)v322, 1, v463))
        {
          memcpy(v321, v322, v269);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v321, v322, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v321, 0, 1, v463);
        }
        uint64_t v68 = v451;
        uint64_t v60 = v448;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v71 = v454;
        v465[v453] = 12;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v67 = ~v18;
LABEL_347:
        uint64_t v57 = v431;
        uint64_t v66 = v428;
        goto LABEL_350;
      case 0xDu:
        unint64_t v270 = v136;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v460 + 32))(v138, v454, v413);
        uint64_t v71 = v454;
        v138[v270] = 13;
        uint64_t v13 = v426;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v68 = v451;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v60 = v448;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v67 = ~v18;
        break;
      case 0xEu:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v462 + 32))(v138, v454, v458);
        uint64_t v271 = v139;
        size_t v272 = &v138[v11 + v25];
        unint64_t v273 = (unint64_t)&v454[v11 + v25];
        size_t v274 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v271 + 48);
        if (v274(v273 & v50, 1, v463))
        {
          size_t v275 = v455;
          memcpy((void *)((unint64_t)v272 & v50), (const void *)(v273 & v50), v455);
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v271 + 32))((unint64_t)v272 & v50, v273 & v50, v463);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v271 + 56))((unint64_t)v272 & v50, 0, 1, v463);
          size_t v275 = v455;
        }
        uint64_t v304 = (void *)((((unint64_t)v272 | v459) + v275) & v50);
        uint64_t v417 = v50;
        uint64_t v305 = (const void *)(((v273 | v459) + v275) & v50);
        uint64_t v286 = v448;
        if (v274((unint64_t)v305, 1, v463))
        {
          memcpy(v304, v305, v275);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v304, v305, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v304, 0, 1, v463);
        }
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v68 = v451;
        uint64_t v64 = v418;
        uint64_t v63 = v419;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v71 = v454;
        v465[v453] = 14;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v67 = ~v18;
LABEL_326:
        uint64_t v60 = v286;
        goto LABEL_350;
      default:
        long long v141 = *(_OWORD *)v454;
        long long v142 = *((_OWORD *)v454 + 1);
        long long v143 = *((_OWORD *)v454 + 3);
        *((_OWORD *)v138 + 2) = *((_OWORD *)v454 + 2);
        *((_OWORD *)v138 + 3) = v143;
        *(_OWORD *)size_t v138 = v141;
        *((_OWORD *)v138 + 1) = v142;
        long long v144 = *((_OWORD *)v454 + 4);
        long long v145 = *((_OWORD *)v454 + 5);
        long long v146 = *((_OWORD *)v454 + 7);
        *((_OWORD *)v138 + 6) = *((_OWORD *)v454 + 6);
        *((_OWORD *)v138 + 7) = v146;
        *((_OWORD *)v138 + 4) = v144;
        *((_OWORD *)v138 + 5) = v145;
        long long v147 = *((_OWORD *)v454 + 8);
        long long v148 = *((_OWORD *)v454 + 9);
        long long v149 = *((_OWORD *)v454 + 11);
        *((_OWORD *)v138 + 10) = *((_OWORD *)v454 + 10);
        *((_OWORD *)v138 + 11) = v149;
        *((_OWORD *)v138 + 8) = v147;
        *((_OWORD *)v138 + 9) = v148;
        long long v150 = *((_OWORD *)v454 + 12);
        long long v151 = *((_OWORD *)v454 + 13);
        long long v152 = *((_OWORD *)v454 + 14);
        *((void *)v138 + 30) = *((void *)v454 + 30);
        *((_OWORD *)v138 + 13) = v151;
        *((_OWORD *)v138 + 14) = v152;
        *((_OWORD *)v138 + 12) = v150;
        uint64_t v153 = (unint64_t)&v138[v414 + 248] & v48;
        uint64_t v154 = (unint64_t)&v454[v414 + 248] & v48;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v462 + 32))(v153, v154, v458);
        size_t v155 = v25 + v154;
        *(unsigned char *)(v25 + v153) = *(unsigned char *)(v25 + v154);
        uint64_t v156 = (void *)((v11 + 1 + v25 + v153) & v50);
        uint64_t v157 = (const void *)((v11 + 1 + v155) & v50);
        uint64_t v158 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
        if (v158(v157, 1, v463))
        {
          size_t v159 = v455;
          memcpy(v156, v157, v455);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v156, v157, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v156, 0, 1, v463);
          size_t v159 = v455;
        }
        uint64_t v276 = (void *)(((unint64_t)v156 + v452) & v50);
        size_t v277 = (const void *)(((unint64_t)v157 + v452) & v50);
        if (v158(v277, 1, v463))
        {
          memcpy(v276, v277, v159);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v276, v277, v463);
          size_t v159 = v455;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v276, 0, 1, v463);
        }
        size_t v306 = (void *)(((unint64_t)v276 + v452) & v50);
        uint64_t v307 = (const void *)(((unint64_t)v277 + v452) & v50);
        if (v158(v307, 1, v463))
        {
          memcpy(v306, v307, v159);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v464 + 32))(v306, v307, v463);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v464 + 56))(v306, 0, 1, v463);
        }
        uint64_t v64 = v418;
        uint64_t v417 = v50;
        unint64_t v323 = ((unint64_t)v306 + v85) & v461;
        unint64_t v324 = ((unint64_t)v307 + v85) & v461;
        uint64_t v325 = *(void (**)(unint64_t, unint64_t, uint64_t))(v451 + 32);
        v325(v323, v324, v449);
        unint64_t v326 = (void *)((v447 + v323) & v461);
        size_t v327 = (const void *)((v447 + v324) & v461);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v451 + 48))(v327, 1, v449))
        {
          memcpy(v326, v327, v450);
        }
        else
        {
          v325((unint64_t)v326, (unint64_t)v327, v449);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v451 + 56))(v326, 0, 1, v449);
        }
        uint64_t v60 = v448;
        uint64_t v69 = v427;
        uint64_t v66 = v428;
        uint64_t v56 = v461;
        uint64_t v70 = v462;
        uint64_t v71 = v454;
        v465[v453] = 0;
        uint64_t v13 = v426;
        uint64_t v15 = v430;
        uint64_t v57 = v431;
        uint64_t v55 = v424;
        uint64_t v16 = v425;
        uint64_t v59 = v422;
        uint64_t v58 = v423;
        uint64_t v62 = v420;
        uint64_t v61 = v421;
        uint64_t v63 = v419;
        uint64_t v67 = ~v18;
        uint64_t v68 = v451;
LABEL_350:
        uint64_t v50 = v417;
LABEL_351:
        uint64_t v11 = v459;
        break;
    }
  }
  unint64_t v342 = *(void *)(v70 + 64);
  uint64_t v343 = (v55 + v342) & v50;
  unint64_t v344 = *(void *)(v464 + 64);
  if (*(_DWORD *)(v464 + 84)) {
    unint64_t v345 = *(void *)(v464 + 64);
  }
  else {
    unint64_t v345 = v344 + 1;
  }
  uint64_t v346 = v345 + v11;
  uint64_t v347 = v345 + v13;
  uint64_t v348 = *(void *)(v68 + 64);
  uint64_t v349 = (v348 + v13 + ((v345 + v13 + ((v345 + v11 + ((v345 + v11 + v343) & v50)) & v50)) & v56)) & v56;
  if (*(_DWORD *)(v68 + 84)) {
    uint64_t v350 = *(void *)(v68 + 64);
  }
  else {
    uint64_t v350 = v348 + 1;
  }
  unint64_t v351 = v349 + v350;
  if (v344 <= v342) {
    unint64_t v344 = v342;
  }
  unint64_t v352 = ((v345 + v16 + (v346 & v50)) & v57) + *(void *)(v15 + 64);
  if (v352 <= v344) {
    unint64_t v352 = v344;
  }
  uint64_t v353 = (v350 + v18 + ((v350 + v13 + ((v347 + ((v346 + ((v346 + ((v58 + v342) & v50)) & v50)) & v50)) & v56)) & v56)) & v67;
  uint64_t v354 = v56;
  unint64_t v355 = *(void *)(v460 + 64);
  if (*(_DWORD *)(v460 + 84)) {
    unint64_t v356 = *(void *)(v460 + 64);
  }
  else {
    unint64_t v356 = v355 + 1;
  }
  unint64_t v357 = v356 + v353;
  unint64_t v358 = ((v347 + ((v346 + v59) & v50)) & v354) + v350;
  unint64_t v359 = v345 + ((v342 + v11) & v50);
  unint64_t v360 = ((v359 + v11) & v50) + v345;
  unint64_t v361 = ((v360 + v11) & v50) + v345;
  unint64_t v362 = ((v60 + (v359 & 0xFFFFFFFFFFFFFFF8)) & v50) + v345;
  unint64_t v363 = ((v346 + ((v61 + v342) & v50)) & v50) + v345;
  unint64_t v364 = ((v346 + ((v346 + ((v62 + v342) & v50)) & v50)) & v50) + v345;
  unint64_t v365 = ((v347 + ((v346 + ((v346 + ((v346 + ((v63 + v342) & v50)) & v50)) & v50)) & v50)) & v354) + v350;
  unint64_t v366 = ((v346 + ((v346 + ((v64 + v342) & v50)) & v50)) & v50) + v345;
  unint64_t v367 = ((v69 + v342) & v50) + v345;
  unint64_t v368 = ((v346 + ((v346 + ((v66 + v342) & v50)) & v50)) & v50) + v345;
  if (v362 <= v351) {
    unint64_t v369 = v351;
  }
  else {
    unint64_t v369 = v362;
  }
  if (v369 <= v352 + 1) {
    unint64_t v369 = v352 + 1;
  }
  if (v369 <= v357) {
    unint64_t v369 = v357;
  }
  if (v369 <= v358) {
    unint64_t v369 = v358;
  }
  if (v369 <= v361) {
    unint64_t v369 = v361;
  }
  if (v369 <= v363) {
    unint64_t v369 = v363;
  }
  if (v369 <= v364) {
    unint64_t v369 = v364;
  }
  if (v369 <= v365) {
    unint64_t v369 = v365;
  }
  if (v369 <= v366) {
    unint64_t v369 = v366;
  }
  if (v369 <= v367 + 1) {
    unint64_t v369 = v367 + 1;
  }
  if (v369 > v368) {
    unint64_t v368 = v369;
  }
  if (v368 <= v360) {
    unint64_t v368 = v360;
  }
  if (v368 <= v355) {
    unint64_t v370 = *(void *)(v460 + 64);
  }
  else {
    unint64_t v370 = v368;
  }
  uint64_t v371 = v456[4];
  uint64_t v372 = *(void *)(v371 - 8);
  uint64_t v373 = *(unsigned __int8 *)(v372 + 80);
  uint64_t v374 = v370 + v373 + 1;
  uint64_t v375 = (void *)((unint64_t)&v465[v374] & ~v373);
  uint64_t v376 = (void *)((unint64_t)&v71[v374] & ~v373);
  uint64_t v377 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v372 + 48);
  int v378 = v377(v375, 1, v371);
  int v379 = v377(v376, 1, v371);
  if (v378)
  {
    if (!v379)
    {
      (*(void (**)(void *, void *, uint64_t))(v372 + 32))(v375, v376, v371);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v375, 0, 1, v371);
      goto LABEL_419;
    }
    int v380 = *(_DWORD *)(v372 + 84);
    size_t v381 = *(void *)(v372 + 64);
  }
  else
  {
    if (!v379)
    {
      (*(void (**)(void *, void *, uint64_t))(v372 + 40))(v375, v376, v371);
      goto LABEL_419;
    }
    (*(void (**)(void *, uint64_t))(v372 + 8))(v375, v371);
    int v380 = *(_DWORD *)(v372 + 84);
    size_t v381 = *(void *)(v372 + 64);
  }
  if (v380) {
    size_t v382 = v381;
  }
  else {
    size_t v382 = v381 + 1;
  }
  memcpy(v375, v376, v382);
LABEL_419:
  uint64_t v383 = *(void *)(v372 + 64);
  if (!*(_DWORD *)(v372 + 84)) {
    ++v383;
  }
  uint64_t v384 = v456[6];
  uint64_t v385 = *(void *)(v384 - 8);
  uint64_t v386 = *(unsigned __int8 *)(v385 + 80);
  uint64_t v387 = v383 + v386;
  uint64_t v388 = (void *)(((unint64_t)v375 + v387) & ~v386);
  uint64_t v389 = (void *)(((unint64_t)v376 + v387) & ~v386);
  uint64_t v390 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v385 + 48);
  int v391 = v390(v388, 1, v384);
  int v392 = v390(v389, 1, v384);
  if (v391)
  {
    if (!v392)
    {
      (*(void (**)(void *, void *, uint64_t))(v385 + 32))(v388, v389, v384);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v385 + 56))(v388, 0, 1, v384);
      goto LABEL_432;
    }
    int v393 = *(_DWORD *)(v385 + 84);
    size_t v394 = *(void *)(v385 + 64);
  }
  else
  {
    if (!v392)
    {
      (*(void (**)(void *, void *, uint64_t))(v385 + 40))(v388, v389, v384);
      goto LABEL_432;
    }
    (*(void (**)(void *, uint64_t))(v385 + 8))(v388, v384);
    int v393 = *(_DWORD *)(v385 + 84);
    size_t v394 = *(void *)(v385 + 64);
  }
  if (v393) {
    size_t v395 = v394;
  }
  else {
    size_t v395 = v394 + 1;
  }
  memcpy(v388, v389, v395);
LABEL_432:
  if (*(_DWORD *)(v385 + 84)) {
    uint64_t v396 = *(void *)(v385 + 64);
  }
  else {
    uint64_t v396 = *(void *)(v385 + 64) + 1;
  }
  *(void *)(((unint64_t)v388 + v396 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v389
                                                                                       + v396
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return v457;
}

uint64_t sub_24ED597C0(_DWORD *a1, unsigned int a2, void *a3)
{
  uint64_t v74 = a3[5];
  uint64_t v81 = *(void *)(v74 - 8);
  unsigned int v4 = *(_DWORD *)(v81 + 84);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80);
  unint64_t v6 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v7 = *(void *)(sub_24EE55880() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = v6 + v8 + 1;
  uint64_t v80 = (v10 + ((v5 + 248) & ~v5)) & ~v8;
  int v79 = *(_DWORD *)(v7 + 84);
  unint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = *(void *)(a3[2] - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  int v78 = *(_DWORD *)(v12 + 84);
  if (v11 > v6) {
    unint64_t v6 = *(void *)(v7 + 64);
  }
  uint64_t v15 = *(void *)(sub_24EE55960() - 8);
  uint64_t v16 = *(void *)(a3[7] - 8);
  uint64_t v17 = *(void *)(a3[4] - 8);
  unsigned int v18 = *(_DWORD *)(v17 + 84);
  if (v18) {
    unsigned int v19 = v18 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  if (v4 <= v19) {
    unsigned int v20 = v19;
  }
  else {
    unsigned int v20 = v4;
  }
  uint64_t v72 = a3[6];
  uint64_t v21 = *(void *)(v72 - 8);
  uint64_t v22 = *(unsigned int *)(v21 + 84);
  unsigned int v23 = v22 - 1;
  if (!v22) {
    unsigned int v23 = 0;
  }
  unsigned int v73 = v23;
  if (v20 > v23) {
    unsigned int v23 = v20;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v23 = 0x7FFFFFFF;
  }
  unsigned int v75 = v4;
  unsigned int v76 = v23;
  if (!v79) {
    ++v11;
  }
  uint64_t v24 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v25 = *(void *)(v15 + 64);
  uint64_t v26 = (v10 + ((v5 + 224) & ~v5)) & ~v8;
  uint64_t v27 = *(unsigned __int8 *)(v16 + 80);
  int v28 = *(_DWORD *)(v16 + 84);
  unint64_t v29 = *(void *)(*(void *)(a3[7] - 8) + 64);
  uint64_t v30 = v11 + v8;
  uint64_t v31 = v11 + v13;
  if (v78) {
    uint64_t v32 = v14;
  }
  else {
    uint64_t v32 = v14 + 1;
  }
  unint64_t v33 = ((v14 + v13 + ((v11 + v13 + ((v11 + v8 + ((v11 + v8 + v80) & ~v8)) & ~v8)) & ~v13)) & ~v13) + v32;
  unint64_t v34 = (((v30 & ~v8) + v11 + v24) & ~v24) + v25;
  if (v34 <= v6) {
    unint64_t v34 = v6;
  }
  if (v34 + 1 > v33) {
    unint64_t v33 = v34 + 1;
  }
  uint64_t v35 = v9 + ((v5 + 24) & ~v5);
  uint64_t v36 = v9 + ((v5 + 104) & ~v5);
  uint64_t v37 = v9 + ((v5 + 160) & ~v5);
  uint64_t v38 = v9 + ((v5 + 56) & ~v5);
  uint64_t v39 = (((v32 + v13 + ((v31 + ((v30 + ((v30 + v26) & ~v8)) & ~v8)) & ~v13)) & ~v13) + v32 + v27) & ~v27;
  if (v28) {
    unint64_t v40 = *(void *)(*(void *)(a3[7] - 8) + 64);
  }
  else {
    unint64_t v40 = v29 + 1;
  }
  unint64_t v41 = v40 + v39;
  uint64_t v42 = v9 + ((v5 + 64) & ~v5);
  if (v41 > v33) {
    unint64_t v33 = v41;
  }
  uint64_t v43 = v9 + ((v5 + 128) & ~v5);
  uint64_t v44 = v9 & ~v8;
  if (v32 + ((v31 + ((v30 + ((v8 + 64) & ~v8)) & ~v8)) & (unint64_t)~v13) > v33) {
    unint64_t v33 = v32 + ((v31 + ((v30 + ((v8 + 64) & ~v8)) & ~v8)) & ~v13);
  }
  unint64_t v45 = v44 + v11;
  unint64_t v46 = ((v44 + v11 + v8) & ~v8) + v11;
  if (((v46 + v8) & ~v8) + v11 > v33) {
    unint64_t v33 = ((v46 + v8) & ~v8) + v11;
  }
  unint64_t v47 = ((v8 + (v45 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v11;
  if (v47 > v33) {
    unint64_t v33 = v47;
  }
  if (((v30 + (v35 & ~v8)) & ~v8) + v11 > v33) {
    unint64_t v33 = ((v30 + (v35 & ~v8)) & ~v8) + v11;
  }
  if (v47 > v33) {
    unint64_t v33 = v47;
  }
  if (((v30 + ((v30 + (v36 & ~v8)) & ~v8)) & ~v8) + v11 > v33) {
    unint64_t v33 = ((v30 + ((v30 + (v36 & ~v8)) & ~v8)) & ~v8) + v11;
  }
  unint64_t v48 = ((v31 + ((v30 + ((v30 + ((v30 + (v37 & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v13) + v32;
  if (v48 > v33) {
    unint64_t v33 = v48;
  }
  uint64_t v49 = v42 & ~v8;
  if (((v30 + ((v30 + (v38 & ~v8)) & ~v8)) & ~v8) + v11 > v33) {
    unint64_t v33 = ((v30 + ((v30 + (v38 & ~v8)) & ~v8)) & ~v8) + v11;
  }
  if (v49 + v11 + 1 > v33) {
    unint64_t v33 = v49 + v11 + 1;
  }
  unint64_t v50 = ((v30 + ((v30 + (v43 & ~v8)) & ~v8)) & ~v8) + v11;
  if (v50 > v33) {
    unint64_t v33 = v50;
  }
  if (v29 > v33) {
    unint64_t v33 = *(void *)(*(void *)(a3[7] - 8) + 64);
  }
  if (v46 <= v33) {
    unint64_t v46 = v33;
  }
  uint64_t v51 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v52 = *(unsigned __int8 *)(v21 + 80);
  if (v18) {
    uint64_t v53 = *(void *)(*(void *)(a3[4] - 8) + 64);
  }
  else {
    uint64_t v53 = *(void *)(*(void *)(a3[4] - 8) + 64) + 1;
  }
  if (v22) {
    uint64_t v54 = *(void *)(*(void *)(v72 - 8) + 64);
  }
  else {
    uint64_t v54 = *(void *)(*(void *)(v72 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v55 = v5 | v8 | v13 | v24 | v27 | 7;
  uint64_t v56 = *(void *)(v81 + 64) + v55;
  unint64_t v57 = v46 + 1;
  uint64_t v58 = v53 + v52;
  uint64_t v59 = v54 + 7;
  if (v76 < a2)
  {
    unint64_t v60 = ((v59 + ((v58 + ((v57 + v51 + (v56 & ~v55)) & ~v51)) & ~v52)) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v60 & 0xFFFFFFF8) != 0) {
      unsigned int v61 = 2;
    }
    else {
      unsigned int v61 = a2 - v76 + 1;
    }
    if (v61 >= 0x10000) {
      LODWORD(v62) = 4;
    }
    else {
      LODWORD(v62) = 2;
    }
    if (v61 < 0x100) {
      LODWORD(v62) = 1;
    }
    if (v61 >= 2) {
      uint64_t v62 = v62;
    }
    else {
      uint64_t v62 = 0;
    }
    switch(v62)
    {
      case 1:
        int v63 = *((unsigned __int8 *)a1 + v60);
        if (!*((unsigned char *)a1 + v60)) {
          break;
        }
        goto LABEL_76;
      case 2:
        int v63 = *(unsigned __int16 *)((char *)a1 + v60);
        if (*(_WORD *)((char *)a1 + v60)) {
          goto LABEL_76;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ED59F2CLL);
      case 4:
        int v63 = *(_DWORD *)((char *)a1 + v60);
        if (!v63) {
          break;
        }
LABEL_76:
        int v64 = v63 - 1;
        if ((v60 & 0xFFFFFFF8) != 0)
        {
          int v64 = 0;
          int v65 = *a1;
        }
        else
        {
          int v65 = 0;
        }
        return v76 + (v65 | v64) + 1;
      default:
        break;
    }
  }
  if (v75 == v76)
  {
    uint64_t v66 = *(uint64_t (**)(_DWORD *, void, uint64_t))(v81 + 48);
    return v66(a1, v75, v74);
  }
  unint64_t v68 = ((((unint64_t)a1 + v56) & ~v55) + v51 + v57) & ~v51;
  if (v19 == v76)
  {
    if (v18 >= 2)
    {
      unsigned int v69 = (*(uint64_t (**)(unint64_t))(v17 + 48))(v68);
      goto LABEL_95;
    }
    return 0;
  }
  unint64_t v70 = (v58 + v68) & ~v52;
  if (v73 == v76)
  {
    if (v22 >= 2)
    {
      unsigned int v69 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v21 + 48))(v70, v22, v72);
LABEL_95:
      if (v69 >= 2) {
        return v69 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v71 = *(void *)((v59 + v70) & 0xFFFFFFFFFFFFFFF8);
  if (v71 >= 0xFFFFFFFF) {
    LODWORD(v71) = -1;
  }
  return (v71 + 1);
}

void sub_24ED59F40(unsigned int *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v85 = *(void *)(a4[5] - 8);
  uint64_t v80 = v85;
  unsigned int v5 = *(_DWORD *)(v85 + 84);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80);
  unint64_t v7 = *(void *)(*(void *)(a4[3] - 8) + 64);
  uint64_t v8 = *(void *)(sub_24EE55880() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 + v9;
  uint64_t v84 = v7 + v9 + 1;
  int v83 = *(_DWORD *)(v8 + 84);
  unint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(a4[2] - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  int v82 = *(_DWORD *)(v12 + 84);
  if (v11 > v7) {
    unint64_t v7 = *(void *)(v8 + 64);
  }
  int v90 = 0;
  uint64_t v15 = *(void *)(sub_24EE55960() - 8);
  uint64_t v16 = *(void *)(a4[7] - 8);
  uint64_t v17 = *(void *)(a4[4] - 8);
  int v18 = *(_DWORD *)(v17 + 84);
  unsigned int v19 = v18 - 1;
  if (!v18) {
    unsigned int v19 = 0;
  }
  unsigned int v81 = v5;
  unsigned int v79 = v19;
  if (v5 <= v19) {
    unsigned int v20 = v19;
  }
  else {
    unsigned int v20 = v5;
  }
  uint64_t v21 = *(void *)(a4[6] - 8);
  uint64_t v22 = *(unsigned __int8 *)(v15 + 80);
  int v23 = *(_DWORD *)(v21 + 84);
  uint64_t v24 = *(void *)(v15 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v16 + 80);
  int v26 = *(_DWORD *)(v16 + 84);
  unint64_t v27 = *(void *)(*(void *)(a4[7] - 8) + 64);
  uint64_t v28 = *(void *)(*(void *)(a4[4] - 8) + 64);
  uint64_t v29 = *(void *)(v85 + 64);
  uint64_t v86 = v17;
  uint64_t v30 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v78 = v21;
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v32 = *(void *)(v21 + 64);
  if (v23) {
    unsigned int v33 = v23 - 1;
  }
  else {
    unsigned int v33 = 0;
  }
  if (v20 <= v33) {
    unsigned int v34 = v33;
  }
  else {
    unsigned int v34 = v20;
  }
  if (v34 <= 0x7FFFFFFF) {
    unsigned int v34 = 0x7FFFFFFF;
  }
  if (v83) {
    unint64_t v35 = v11;
  }
  else {
    unint64_t v35 = v11 + 1;
  }
  uint64_t v36 = v35 + v9;
  uint64_t v37 = v35 + v13;
  unint64_t v38 = ((((v35 + v9) & ~v9) + v35 + v22) & ~v22) + v24;
  uint64_t v39 = (v14 + v13 + ((v35 + v13 + ((v35 + v9 + ((v35 + v9 + ((v84 + ((v6 + 248) & ~v6)) & ~v9)) & ~v9)) & ~v9)) & ~v13)) & ~v13;
  if (!v82) {
    ++v14;
  }
  unint64_t v40 = v39 + v14;
  if (v38 <= v7) {
    unint64_t v38 = v7;
  }
  if (v38 + 1 > v40) {
    unint64_t v41 = v38 + 1;
  }
  else {
    unint64_t v41 = v40;
  }
  uint64_t v42 = v10 + ((v6 + 24) & ~v6);
  if (v26) {
    unint64_t v43 = v27;
  }
  else {
    unint64_t v43 = v27 + 1;
  }
  unint64_t v44 = v43
      + ((((v14 + v13 + ((v37 + ((v36 + ((v36 + ((v84 + ((v6 + 224) & ~v6)) & ~v9)) & ~v9)) & ~v9)) & ~v13)) & ~v13)
        + v14
        + v25) & ~v25);
  uint64_t v45 = v10 + ((v6 + 104) & ~v6);
  if (v44 > v41) {
    unint64_t v41 = v44;
  }
  uint64_t v46 = v10 + ((v6 + 160) & ~v6);
  unint64_t v47 = v14 + ((v37 + ((v36 + ((v9 + 64) & ~v9)) & ~v9)) & ~v13);
  if (v47 <= v41) {
    unint64_t v47 = v41;
  }
  uint64_t v48 = v10 + ((v6 + 56) & ~v6);
  uint64_t v49 = v10 + ((v6 + 64) & ~v6);
  uint64_t v50 = v10 + ((v6 + 128) & ~v6);
  unint64_t v51 = (v10 & ~v9) + v35;
  unint64_t v52 = ((v51 + v9) & ~v9) + v35;
  if (((v52 + v9) & ~v9) + v35 > v47) {
    unint64_t v47 = ((v52 + v9) & ~v9) + v35;
  }
  uint64_t v53 = v42 & ~v9;
  unint64_t v54 = ((v9 + (v51 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v9) + v35;
  if (v54 > v47) {
    unint64_t v47 = ((v9 + (v51 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v9) + v35;
  }
  unint64_t v55 = ((v36 + v53) & ~v9) + v35;
  if (v55 > v47) {
    unint64_t v47 = v55;
  }
  if (v54 > v47) {
    unint64_t v47 = ((v9 + (v51 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v9) + v35;
  }
  if (((v36 + ((v36 + (v45 & ~v9)) & ~v9)) & ~v9) + v35 > v47) {
    unint64_t v47 = ((v36 + ((v36 + (v45 & ~v9)) & ~v9)) & ~v9) + v35;
  }
  if (((v37 + ((v36 + ((v36 + ((v36 + (v46 & ~v9)) & ~v9)) & ~v9)) & ~v9)) & (unint64_t)~v13) + v14 > v47) {
    unint64_t v47 = ((v37 + ((v36 + ((v36 + ((v36 + (v46 & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v13) + v14;
  }
  uint64_t v56 = v48 & ~v9;
  uint64_t v57 = v49 & ~v9;
  unint64_t v58 = ((v36 + ((v36 + v56) & ~v9)) & ~v9) + v35;
  if (v58 > v47) {
    unint64_t v47 = v58;
  }
  if (v57 + v35 + 1 > v47) {
    unint64_t v47 = v57 + v35 + 1;
  }
  if (((v36 + ((v36 + (v50 & ~v9)) & ~v9)) & ~v9) + v35 > v47) {
    unint64_t v47 = ((v36 + ((v36 + (v50 & ~v9)) & ~v9)) & ~v9) + v35;
  }
  if (v27 <= v47) {
    unint64_t v27 = v47;
  }
  if (v52 > v27) {
    unint64_t v27 = ((v51 + v9) & ~v9) + v35;
  }
  if (v18) {
    uint64_t v59 = v28;
  }
  else {
    uint64_t v59 = v28 + 1;
  }
  uint64_t v60 = v6 | v9 | v13 | v22 | v25 | 7;
  uint64_t v61 = v29 + v60;
  unint64_t v62 = v27 + 1;
  uint64_t v63 = v59 + v31;
  uint64_t v64 = (v59 + v31 + ((v62 + v30 + ((v29 + v60) & ~v60)) & ~v30)) & ~v31;
  if (v23) {
    uint64_t v65 = v32;
  }
  else {
    uint64_t v65 = v32 + 1;
  }
  uint64_t v66 = v65 + 7;
  size_t v67 = ((v66 + v64) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v34 < a3)
  {
    if (((v66 + v64) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v68 = a3 - v34 + 1;
    }
    else {
      unsigned int v68 = 2;
    }
    if (v68 >= 0x10000) {
      int v69 = 4;
    }
    else {
      int v69 = 2;
    }
    if (v68 < 0x100) {
      int v69 = 1;
    }
    if (v68 >= 2) {
      int v70 = v69;
    }
    else {
      int v70 = 0;
    }
    int v90 = v70;
  }
  uint64_t v71 = a2;
  if (a2 > v34)
  {
    if (v67) {
      int v72 = 1;
    }
    else {
      int v72 = a2 - v34;
    }
    if (v67)
    {
      unsigned int v73 = ~v34 + a2;
      bzero(a1, v67);
      *a1 = v73;
    }
    switch(v90)
    {
      case 1:
        *((unsigned char *)a1 + v67) = v72;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v67) = v72;
        return;
      case 3:
        goto LABEL_105;
      case 4:
        *(unsigned int *)((char *)a1 + v67) = v72;
        return;
      default:
        return;
    }
  }
  uint64_t v74 = a1;
  switch(v90)
  {
    case 1:
      *((unsigned char *)a1 + v67) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_89;
    case 2:
      *(_WORD *)((char *)a1 + v67) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_89;
    case 3:
LABEL_105:
      __break(1u);
      JUMPOUT(0x24ED5A6DCLL);
    case 4:
      *(unsigned int *)((char *)a1 + v67) = 0;
      goto LABEL_88;
    default:
LABEL_88:
      if (!a2) {
        return;
      }
LABEL_89:
      if (v81 == v34)
      {
        unsigned int v75 = *(void (**)(_DWORD *, uint64_t))(v80 + 56);
      }
      else
      {
        uint64_t v74 = (_DWORD *)(((((unint64_t)a1 + v61) & ~v60) + v30 + v62) & ~v30);
        if (v79 == v34)
        {
          uint64_t v71 = a2 + 1;
          unsigned int v75 = *(void (**)(_DWORD *, uint64_t))(v86 + 56);
        }
        else
        {
          uint64_t v74 = (_DWORD *)(((unint64_t)v74 + v63) & ~v31);
          if (v33 != v34)
          {
            unsigned int v76 = (void *)(((unint64_t)v74 + v66) & 0xFFFFFFFFFFFFFFF8);
            if ((a2 & 0x80000000) != 0) {
              uint64_t v77 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v77 = a2 - 1;
            }
            *unsigned int v76 = v77;
            return;
          }
          uint64_t v71 = a2 + 1;
          unsigned int v75 = *(void (**)(_DWORD *, uint64_t))(v78 + 56);
        }
      }
      v75(v74, v71);
      return;
  }
}

uint64_t sub_24ED5A704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 112);
}

unsigned char *sub_24ED5A70C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED5A7D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24ED5A800()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED5A81C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED5A838()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED5A858@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  long long v22 = a1[5];
  *((_OWORD *)a9 + 4) = a1[4];
  *((_OWORD *)a9 + 5) = v22;
  long long v23 = a1[7];
  *((_OWORD *)a9 + 6) = a1[6];
  *((_OWORD *)a9 + 7) = v23;
  long long v24 = a1[1];
  *(_OWORD *)a9 = *a1;
  *((_OWORD *)a9 + 1) = v24;
  long long v25 = a1[3];
  *((_OWORD *)a9 + 2) = a1[2];
  *((_OWORD *)a9 + 3) = v25;
  int v26 = (int *)type metadata accessor for VerticalStackCard();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32))(&a9[v26[9]], a2, a16);
  unint64_t v27 = &a9[v26[10]];
  *(void *)unint64_t v27 = a3;
  *((void *)v27 + 1) = a4;
  *((void *)v27 + 2) = a5;
  *((void *)v27 + 3) = a6;
  uint64_t v28 = &a9[v26[11]];
  *(void *)uint64_t v28 = a7;
  *((void *)v28 + 1) = a8;
  *((void *)v28 + 2) = a10;
  *((void *)v28 + 3) = a11;
  uint64_t v29 = &a9[v26[12]];
  *(_OWORD *)uint64_t v29 = a12;
  *((void *)v29 + 2) = a13;
  *((void *)v29 + 3) = a14;
  uint64_t v30 = &a9[v26[13]];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
  return v32(v30, a15, v31);
}

double VerticalStackCardLayout.artworkAspectRatio.getter()
{
  return *(double *)v0;
}

uint64_t VerticalStackCardLayout.titleLineLimit.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t VerticalStackCardLayout.subtitleLineLimit.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t VerticalStackCardLayout.captionLineLimit.getter()
{
  return *(void *)(v0 + 32);
}

__n128 VerticalStackCardLayout.contentInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 VerticalStackCardLayout.contentBackgroundColor.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 72);
  long long v3 = *(_OWORD *)(v1 + 88);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

double VerticalStackCardLayout.contentCornerRadius.getter()
{
  return *(double *)(v0 + 104);
}

double VerticalStackCardLayout.subtitleFromTitle.getter()
{
  return *(double *)(v0 + 112);
}

double VerticalStackCardLayout.detailFromSubtitle.getter()
{
  return *(double *)(v0 + 120);
}

__n128 VerticalStackCardLayout.init(artworkAspectRatio:titleLineLimit:subtitleLineLimit:captionLineLimit:subtitleFromTitle:detailFromSubtitle:contentInsets:contentBackgroundColor:contentCornerRadius:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(void *)(a6 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + 32) = a3;
  long long v11 = a4[1];
  *(_OWORD *)(a6 + 40) = *a4;
  *(_OWORD *)(a6 + 56) = v11;
  __n128 result = *(__n128 *)a5;
  long long v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a6 + 72) = *(_OWORD *)a5;
  *(_OWORD *)(a6 + 88) = v13;
  *(double *)(a6 + 104) = a11;
  *(double *)(a6 + 112) = a9;
  *(double *)(a6 + 120) = a10;
  return result;
}

unint64_t sub_24ED5AA6C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E694C656C746974;
      break;
    case 2:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24ED5AB8C()
{
  return sub_24ED5AA6C(*v0);
}

uint64_t sub_24ED5AB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED5EA08(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ED5ABBC(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24ED5ABC8(uint64_t a1)
{
  unint64_t v2 = sub_24ED5CAEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED5AC04(uint64_t a1)
{
  unint64_t v2 = sub_24ED5CAEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

double static VerticalStackCardLayout.standard.getter@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_24EE5D630;
  *(int64x2_t *)(a1 + 16) = vdupq_n_s64(2uLL);
  *(void *)(a1 + 32) = 2;
  __asm { FMOV            V0.2D, #24.0 }
  *(_OWORD *)(a1 + 40) = _Q0;
  *(_OWORD *)(a1 + 56) = _Q0;
  *(_OWORD *)(a1 + 72) = xmmword_24EE5D640;
  *(_OWORD *)(a1 + 88) = xmmword_24EE5D650;
  double result = 12.0;
  *(_OWORD *)(a1 + 104) = xmmword_24EE5D660;
  *(void *)(a1 + 120) = 0x4028000000000000;
  return result;
}

double static VerticalStackCardLayout.compact.getter@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_24EE5D630;
  *(int64x2_t *)(a1 + 16) = vdupq_n_s64(2uLL);
  *(void *)(a1 + 32) = 2;
  *(_OWORD *)(a1 + 40) = xmmword_24EE5D670;
  *(_OWORD *)(a1 + 56) = xmmword_24EE5D680;
  *(_OWORD *)(a1 + 72) = xmmword_24EE5D640;
  *(_OWORD *)(a1 + 88) = xmmword_24EE5D650;
  double result = 12.0;
  *(_OWORD *)(a1 + 104) = xmmword_24EE5D690;
  *(void *)(a1 + 120) = 0x4020000000000000;
  return result;
}

uint64_t VerticalStackCardLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965790);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v30 = v1[3];
  uint64_t v31 = v10;
  uint64_t v11 = v1[5];
  uint64_t v28 = v1[6];
  uint64_t v29 = v11;
  uint64_t v12 = v1[7];
  uint64_t v25 = v1[8];
  uint64_t v26 = v12;
  uint64_t v13 = v1[10];
  uint64_t v27 = v1[9];
  uint64_t v15 = v1[11];
  uint64_t v14 = v1[12];
  uint64_t v16 = v1[13];
  uint64_t v17 = v1[14];
  uint64_t v18 = v1[15];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED5CAEC();
  sub_24EE578D0();
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  char v36 = 0;
  type metadata accessor for CGSize(0);
  sub_24EC8BCD4(&qword_26B1DE588, type metadata accessor for CGSize);
  sub_24EE577B0();
  if (!v2)
  {
    uint64_t v20 = v28;
    uint64_t v19 = v29;
    uint64_t v23 = v14;
    uint64_t v24 = v15;
    uint64_t v21 = v27;
    LOBYTE(v32) = 1;
    sub_24EE577A0();
    LOBYTE(v32) = 2;
    sub_24EE577A0();
    LOBYTE(v32) = 3;
    sub_24EE577A0();
    uint64_t v32 = v19;
    uint64_t v33 = v20;
    uint64_t v34 = v26;
    uint64_t v35 = v25;
    char v36 = 4;
    sub_24ED5CB40();
    sub_24EE577B0();
    uint64_t v32 = v21;
    uint64_t v33 = v13;
    uint64_t v34 = v24;
    uint64_t v35 = v23;
    char v36 = 5;
    sub_24ED5CB94();
    sub_24EE577B0();
    uint64_t v32 = v16;
    char v36 = 6;
    sub_24ECB1664();
    sub_24EE577B0();
    uint64_t v32 = v17;
    char v36 = 7;
    sub_24EE577B0();
    uint64_t v32 = v18;
    char v36 = 8;
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VerticalStackCardLayout.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699657A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED5CAEC();
  sub_24EE578C0();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    char v41 = 0;
    sub_24EC8BCD4(&qword_269964948, type metadata accessor for CGSize);
    sub_24EE57710();
    uint64_t v9 = v37;
    uint64_t v10 = v38;
    LOBYTE(v37) = 1;
    uint64_t v11 = sub_24EE57700();
    LOBYTE(v37) = 2;
    uint64_t v12 = sub_24EE57700();
    LOBYTE(v37) = 3;
    uint64_t v36 = sub_24EE57700();
    char v41 = 4;
    sub_24ED5CBE8();
    sub_24EE57710();
    uint64_t v13 = v37;
    uint64_t v14 = v38;
    uint64_t v15 = v39;
    uint64_t v16 = v40;
    char v41 = 5;
    sub_24ED5CC3C();
    sub_24EE57710();
    uint64_t v33 = v14;
    uint64_t v34 = v13;
    uint64_t v18 = v37;
    uint64_t v17 = v38;
    uint64_t v20 = v39;
    uint64_t v19 = v40;
    char v41 = 6;
    unint64_t v35 = sub_24ECB1F14();
    sub_24EE57710();
    uint64_t v29 = v19;
    uint64_t v30 = v17;
    uint64_t v31 = v18;
    uint64_t v32 = v20;
    uint64_t v21 = v37;
    char v41 = 7;
    sub_24EE57710();
    uint64_t v23 = v37;
    char v41 = 8;
    sub_24EE57710();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v24 = v37;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v36;
    uint64_t v25 = v33;
    a2[5] = v34;
    a2[6] = v25;
    a2[7] = v15;
    a2[8] = v16;
    uint64_t v26 = v30;
    a2[9] = v31;
    a2[10] = v26;
    uint64_t v27 = v29;
    a2[11] = v32;
    a2[12] = v27;
    a2[13] = v21;
    a2[14] = v23;
    a2[15] = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED5B48C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VerticalStackCardLayout.init(from:)(a1, a2);
}

uint64_t sub_24ED5B4A4(void *a1)
{
  return VerticalStackCardLayout.encode(to:)(a1);
}

uint64_t VerticalStackCardLayout.hash(into:)()
{
  return sub_24EE578A0();
}

uint64_t VerticalStackCardLayout.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED5B62C()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED5B670()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED5B6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v4 = sub_24EE55E40();
  uint64_t v38 = v4;
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = *(void *)(a1 + 16);
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699657E0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v9 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v11;
  uint64_t v43 = v9;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v12 = sub_24EE56BA0();
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)&v35 - v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v37 = v14;
  uint64_t v36 = sub_24EC8BCD4(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v52 = v12;
  uint64_t v53 = v4;
  uint64_t v54 = v14;
  uint64_t v55 = v36;
  uint64_t v40 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v41 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = MEMORY[0x270FA5388](v18);
  unint64_t v35 = (char *)&v35 - v20;
  uint64_t v21 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v21, v2, a1, v19);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v26 = v45;
  *(void *)(v23 + 16) = v45;
  *(void *)(v23 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v21, v24);
  uint64_t v49 = v26;
  uint64_t v50 = v25;
  uint64_t v51 = v2;
  uint64_t v27 = v39;
  sub_24EE56B90();
  uint64_t v28 = v46;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v29 = v38;
  uint64_t v30 = v37;
  uint64_t v31 = v36;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v12);
  uint64_t v52 = v12;
  uint64_t v53 = v29;
  uint64_t v54 = v30;
  uint64_t v55 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v35;
  sub_24EC90894(v17);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v41 + 8);
  v33(v17, OpaqueTypeMetadata2);
  sub_24EC90894(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, OpaqueTypeMetadata2);
}

uint64_t sub_24ED5BC64()
{
  return sub_24EE55A40();
}

uint64_t sub_24ED5BCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699657E0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v5 = sub_24EE56C30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v9 = sub_24EE55DD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v24 = a2;
  uint64_t v25 = v22;
  uint64_t v26 = v21;
  sub_24EE56130();
  sub_24EE56C20();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE567A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v27 = WitnessTable;
  uint64_t v28 = v17;
  swift_getWitnessTable();
  sub_24EC90894(v12);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  sub_24EC90894(v15);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t sub_24ED5BFC8@<X0>(double *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v5 = sub_24EE56A90();
  uint64_t v59 = *(void *)(v5 - 8);
  uint64_t v60 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699657E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699657F0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699657F8) - 8;
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699657E0);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v56 = (uint64_t)&v47 - v16;
  uint64_t v17 = sub_24EE55DD0();
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v18 = v48;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v49 = (char *)&v47 - v22;
  type metadata accessor for VerticalStackCard();
  sub_24EE56710();
  v65[2] = a2;
  v65[3] = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EC90894(v20);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  uint64_t v52 = v18 + 8;
  uint64_t v53 = v23;
  v23(v20, v17);
  *(void *)uint64_t v9 = sub_24EE56140();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965800);
  sub_24ED5C5B4(a1, (uint64_t)&v9[*(int *)(v24 + 44)]);
  uint64_t v25 = sub_24EE56DB0();
  sub_24EDCD154(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v25, v26);
  sub_24EC88758((uint64_t)v9, &qword_2699657E8);
  uint64_t v27 = *((void *)a1 + 5);
  uint64_t v28 = *((void *)a1 + 6);
  uint64_t v30 = *((void *)a1 + 7);
  uint64_t v29 = *((void *)a1 + 8);
  char v31 = sub_24EE564E0();
  uint64_t v32 = v51;
  sub_24EC884D4((uint64_t)v12, v51, &qword_2699657F0);
  uint64_t v33 = v32 + *(int *)(v54 + 44);
  *(unsigned char *)uint64_t v33 = v31;
  *(void *)(v33 + 8) = v30;
  *(void *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v27;
  *(void *)(v33 + 32) = v29;
  *(unsigned char *)(v33 + 40) = 0;
  sub_24EC88758((uint64_t)v12, &qword_2699657F0);
  double v34 = a1[10];
  double v35 = a1[11];
  double v36 = a1[12];
  uint64_t v37 = v58;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F1B388], v60);
  uint64_t v38 = MEMORY[0x25334D1B0](v37, v36, v35, v34, 1.0);
  LOBYTE(v27) = sub_24EE564E0();
  uint64_t v39 = v55;
  sub_24EC884D4(v32, v55, &qword_2699657F8);
  uint64_t v40 = v57;
  uint64_t v41 = v39 + *(int *)(v57 + 36);
  *(void *)uint64_t v41 = v38;
  *(unsigned char *)(v41 + 8) = v27;
  sub_24EC88758(v32, &qword_2699657F8);
  uint64_t v42 = v56;
  sub_24ED10C70(v39, v56, &qword_2699657E0);
  uint64_t v43 = v47;
  uint64_t v44 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v49, v17);
  v65[0] = v43;
  sub_24EC884D4(v42, v39, &qword_2699657E0);
  v65[1] = v39;
  v64[0] = v17;
  v64[1] = v40;
  uint64_t v62 = WitnessTable;
  unint64_t v63 = sub_24ED5E7A4();
  sub_24EDCC8A0((uint64_t)v65, 2uLL, (uint64_t)v64);
  sub_24EC88758(v42, &qword_2699657E0);
  uint64_t v45 = v53;
  v53(v44, v17);
  sub_24EC88758(v39, &qword_2699657E0);
  return v45(v43, v17);
}

uint64_t sub_24ED5C5B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_24EE56120();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965838);
  MEMORY[0x270FA5388](v7 - 8);
  int v70 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  int v69 = &v61[-v10];
  uint64_t v11 = (int *)type metadata accessor for VerticalStackCard();
  uint64_t v12 = (void *)((char *)a1 + v11[10]);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = v12[2];
  uint64_t v16 = v12[3];
  uint64_t v17 = a1[2];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v71 = v13;
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  uint64_t v74 = v16;
  uint64_t v75 = KeyPath;
  uint64_t v76 = v17;
  char v77 = 0;
  sub_24EC8BFE0(v13, v14, v15, v16);
  sub_24EE56110();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269965840);
  sub_24ED5E968();
  uint64_t v19 = v70;
  sub_24EE568E0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24ECB9668(v71, v72, v73, v74);
  swift_release();
  uint64_t v20 = v69;
  sub_24ED10C70((uint64_t)v19, (uint64_t)v69, &qword_269965838);
  uint64_t v21 = (void *)((char *)a1 + v11[11]);
  uint64_t v23 = v21[1];
  uint64_t v65 = *v21;
  uint64_t v22 = v65;
  uint64_t v24 = v21[2];
  uint64_t v25 = v21[3];
  uint64_t v67 = a1[3];
  uint64_t v66 = swift_getKeyPath();
  sub_24EC8BFE0(v22, v23, v24, v25);
  int v64 = sub_24EE564F0();
  sub_24EE55AD0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  double v34 = (void *)((char *)a1 + v11[12]);
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  uint64_t v37 = v34[2];
  uint64_t v38 = v34[3];
  uint64_t v63 = a1[4];
  uint64_t v39 = swift_getKeyPath();
  sub_24EC8BFE0(v35, v36, v37, v38);
  int v62 = sub_24EE564F0();
  sub_24EE55AD0();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v48 = (uint64_t)v20;
  uint64_t v49 = v70;
  sub_24EC884D4(v48, (uint64_t)v70, &qword_269965838);
  uint64_t v50 = (uint64_t)v49;
  uint64_t v51 = v68;
  sub_24EC884D4(v50, v68, &qword_269965838);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965850);
  uint64_t v53 = v51 + *(int *)(v52 + 48);
  uint64_t v54 = v65;
  uint64_t v55 = v66;
  *(void *)uint64_t v53 = v65;
  *(void *)(v53 + 8) = v23;
  *(void *)(v53 + 16) = v24;
  *(void *)(v53 + 24) = v25;
  uint64_t v56 = v67;
  *(void *)(v53 + 32) = v55;
  *(void *)(v53 + 40) = v56;
  *(unsigned char *)(v53 + 48) = 0;
  *(unsigned char *)(v53 + 56) = v64;
  *(void *)(v53 + 64) = v27;
  *(void *)(v53 + 72) = v29;
  *(void *)(v53 + 80) = v31;
  *(void *)(v53 + 88) = v33;
  *(unsigned char *)(v53 + 96) = 0;
  uint64_t v57 = v51 + *(int *)(v52 + 64);
  *(void *)uint64_t v57 = v35;
  *(void *)(v57 + 8) = v36;
  *(void *)(v57 + 16) = v37;
  *(void *)(v57 + 24) = v38;
  uint64_t v58 = v63;
  *(void *)(v57 + 32) = v39;
  *(void *)(v57 + 40) = v58;
  *(unsigned char *)(v57 + 48) = 0;
  *(unsigned char *)(v57 + 56) = v62;
  *(void *)(v57 + 64) = v41;
  *(void *)(v57 + 72) = v43;
  *(void *)(v57 + 80) = v45;
  *(void *)(v57 + 88) = v47;
  *(unsigned char *)(v57 + 96) = 0;
  uint64_t v59 = v54;
  sub_24EC8BFE0(v54, v23, v24, v25);
  swift_retain();
  sub_24EC8BFE0(v35, v36, v37, v38);
  swift_retain();
  sub_24EC88758((uint64_t)v69, &qword_269965838);
  sub_24ECB9668(v35, v36, v37, v38);
  swift_release();
  sub_24ECB9668(v59, v23, v24, v25);
  swift_release();
  return sub_24EC88758((uint64_t)v70, &qword_269965838);
}

BOOL _s15FitnessCanvasUI23VerticalStackCardLayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 56),
                                                              *(float64x2_t *)(a2 + 56)),
                                                 (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 72), *(float64x2_t *)(a2 + 72))))), 7uLL))) & 1) != 0&& (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 88), *(float64x2_t *)(a2 + 88)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 104), *(float64x2_t *)(a2 + 104)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& *(void *)(a1 + 16) == *(void *)(a2 + 16)&& *(void *)(a1 + 24) == *(void *)(a2 + 24)&& *(void *)(a1 + 32) == *(void *)(a2 + 32))
  {
    return *(double *)(a1 + 120) == *(double *)(a2 + 120);
  }
  return result;
}

unint64_t sub_24ED5CAEC()
{
  unint64_t result = qword_269965798;
  if (!qword_269965798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965798);
  }
  return result;
}

unint64_t sub_24ED5CB40()
{
  unint64_t result = qword_26B1DD378[0];
  if (!qword_26B1DD378[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DD378);
  }
  return result;
}

unint64_t sub_24ED5CB94()
{
  unint64_t result = qword_2699657A0;
  if (!qword_2699657A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657A0);
  }
  return result;
}

unint64_t sub_24ED5CBE8()
{
  unint64_t result = qword_2699657B0;
  if (!qword_2699657B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657B0);
  }
  return result;
}

unint64_t sub_24ED5CC3C()
{
  unint64_t result = qword_2699657B8;
  if (!qword_2699657B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657B8);
  }
  return result;
}

unint64_t sub_24ED5CC94()
{
  unint64_t result = qword_2699657C0;
  if (!qword_2699657C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657C0);
  }
  return result;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t getEnumTagSinglePayload for VerticalStackCardLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VerticalStackCardLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VerticalStackCardLayout()
{
  return &type metadata for VerticalStackCardLayout;
}

unsigned char *storeEnumTagSinglePayload for VerticalStackCardLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED5CE54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalStackCardLayout.CodingKeys()
{
  return &type metadata for VerticalStackCardLayout.CodingKeys;
}

void sub_24ED5CE8C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24EC8B890();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24ED5CF70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64) + 7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  if ((v12 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v11 + 80) | v7) & 0x100000) != 0
    || ((v12
       + 32
       + ((((((v9 + ((v7 + 128) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
           + 39) & 0xFFFFFFFFFFFFFFF8)
         + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + *(void *)(*(void *)(v10 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + (((v12 | v7) & 0xF8 ^ 0x1F8) & ((v12 | v7) + 16));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v12 + 32;
    uint64_t v17 = v10;
    long long v18 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v18;
    long long v19 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v19;
    long long v20 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    long long v21 = *((_OWORD *)a2 + 2);
    long long v22 = *((_OWORD *)a2 + 3);
    uint64_t v23 = (uint64_t)a2 + v8;
    uint64_t v24 = (a1 + v8 + 128) & ~v8;
    *(_OWORD *)(a1 + 32) = v21;
    *(_OWORD *)(a1 + 48) = v22;
    uint64_t v25 = (v23 + 128) & ~v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v24, v25, v5);
    unint64_t v26 = (v9 + v24) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v9 + v25) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v27 + 24) < 0xFFFFFFFFuLL)
    {
      long long v31 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v31;
    }
    else
    {
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      char v30 = *(unsigned char *)(v27 + 16);
      sub_24EC8A97C(*(void *)v27, v29, v30);
      *(void *)unint64_t v26 = v28;
      *(void *)(v26 + 8) = v29;
      *(unsigned char *)(v26 + 16) = v30;
      *(void *)(v26 + 24) = *(void *)(v27 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v32 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v27 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v33 + 24) < 0xFFFFFFFFuLL)
    {
      long long v37 = *(_OWORD *)(v33 + 16);
      *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v37;
    }
    else
    {
      uint64_t v34 = *(void *)v33;
      uint64_t v35 = *(void *)(v33 + 8);
      char v36 = *(unsigned char *)(v33 + 16);
      sub_24EC8A97C(*(void *)v33, v35, v36);
      *(void *)unint64_t v32 = v34;
      *(void *)(v32 + 8) = v35;
      *(unsigned char *)(v32 + 16) = v36;
      *(void *)(v32 + 24) = *(void *)(v33 + 24);
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = ~v12;
    unint64_t v39 = (v32 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = (v33 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v40 + 24) < 0xFFFFFFFFuLL)
    {
      long long v44 = *(_OWORD *)(v40 + 16);
      *(_OWORD *)unint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(v39 + 16) = v44;
    }
    else
    {
      uint64_t v41 = *(void *)v40;
      uint64_t v42 = *(void *)(v40 + 8);
      char v43 = *(unsigned char *)(v40 + 16);
      sub_24EC8A97C(*(void *)v40, v42, v43);
      *(void *)unint64_t v39 = v41;
      *(void *)(v39 + 8) = v42;
      *(unsigned char *)(v39 + 16) = v43;
      *(void *)(v39 + 24) = *(void *)(v40 + 24);
      swift_bridgeObjectRetain();
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v16 + v39) & v38, (v16 + v40) & v38, v17);
  }
  return a1;
}

uint64_t sub_24ED5D264(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  unint64_t v5 = (*(void *)(v3 + 56) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v5 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v6 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = (v6 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v7 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = v8;
  unint64_t v12 = (v7 + *(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v12, v11);
}

_OWORD *sub_24ED5D3A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  long long v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)a1 + v10 + 128) & ~v10;
  uint64_t v12 = ((unint64_t)a2 + v10 + 128) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  unint64_t v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v15 + 24) < 0xFFFFFFFFuLL)
  {
    long long v19 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v19;
  }
  else
  {
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    char v18 = *(unsigned char *)(v15 + 16);
    sub_24EC8A97C(*(void *)v15, v17, v18);
    *(void *)unint64_t v14 = v16;
    *(void *)(v14 + 8) = v17;
    *(unsigned char *)(v14 + 16) = v18;
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v20 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v21 + 24) < 0xFFFFFFFFuLL)
  {
    long long v25 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v25;
  }
  else
  {
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    sub_24EC8A97C(*(void *)v21, v23, v24);
    *(void *)unint64_t v20 = v22;
    *(void *)(v20 + 8) = v23;
    *(unsigned char *)(v20 + 16) = v24;
    *(void *)(v20 + 24) = *(void *)(v21 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v26 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v27 + 24) < 0xFFFFFFFFuLL)
  {
    long long v31 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v31;
  }
  else
  {
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 8);
    char v30 = *(unsigned char *)(v27 + 16);
    sub_24EC8A97C(*(void *)v27, v29, v30);
    *(void *)unint64_t v26 = v28;
    *(void *)(v26 + 8) = v29;
    *(unsigned char *)(v26 + 16) = v30;
    *(void *)(v26 + 24) = *(void *)(v27 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 16))((v26 + *(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80), (v27 + *(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80), v32);
  return a1;
}

void *sub_24ED5D5A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 128) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 128) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(void *)(v11 + 24);
  if (*(void *)(v10 + 24) < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      uint64_t v19 = *(void *)v11;
      uint64_t v20 = *(void *)(v11 + 8);
      char v21 = *(unsigned char *)(v11 + 16);
      sub_24EC8A97C(*(void *)v11, v20, v21);
      *(void *)unint64_t v10 = v19;
      *(void *)(v10 + 8) = v20;
      *(unsigned char *)(v10 + 16) = v21;
      *(void *)(v10 + 24) = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v12 >= 0xFFFFFFFF)
    {
      uint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      char v15 = *(unsigned char *)(v11 + 16);
      sub_24EC8A97C(*(void *)v11, v14, v15);
      uint64_t v16 = *(void *)v10;
      uint64_t v17 = *(void *)(v10 + 8);
      char v18 = *(unsigned char *)(v10 + 16);
      *(void *)unint64_t v10 = v13;
      *(void *)(v10 + 8) = v14;
      *(unsigned char *)(v10 + 16) = v15;
      sub_24EC8AAA0(v16, v17, v18);
      *(void *)(v10 + 24) = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_24EC8AAA0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    swift_bridgeObjectRelease();
  }
  long long v22 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v22;
LABEL_8:
  unint64_t v23 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = *(void *)(v24 + 24);
  if (*(void *)(v23 + 24) < 0xFFFFFFFFuLL)
  {
    if (v25 >= 0xFFFFFFFF)
    {
      uint64_t v32 = *(void *)v24;
      uint64_t v33 = *(void *)(v24 + 8);
      char v34 = *(unsigned char *)(v24 + 16);
      sub_24EC8A97C(*(void *)v24, v33, v34);
      *(void *)unint64_t v23 = v32;
      *(void *)(v23 + 8) = v33;
      *(unsigned char *)(v23 + 16) = v34;
      *(void *)(v23 + 24) = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
  }
  else
  {
    if (v25 >= 0xFFFFFFFF)
    {
      uint64_t v26 = *(void *)v24;
      uint64_t v27 = *(void *)(v24 + 8);
      char v28 = *(unsigned char *)(v24 + 16);
      sub_24EC8A97C(*(void *)v24, v27, v28);
      uint64_t v29 = *(void *)v23;
      uint64_t v30 = *(void *)(v23 + 8);
      char v31 = *(unsigned char *)(v23 + 16);
      *(void *)unint64_t v23 = v26;
      *(void *)(v23 + 8) = v27;
      *(unsigned char *)(v23 + 16) = v28;
      sub_24EC8AAA0(v29, v30, v31);
      *(void *)(v23 + 24) = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_24EC8AAA0(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
    swift_bridgeObjectRelease();
  }
  long long v35 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v35;
LABEL_15:
  unint64_t v36 = (v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v24 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = *(void *)(v37 + 24);
  if (*(void *)(v36 + 24) < 0xFFFFFFFFuLL)
  {
    if (v38 >= 0xFFFFFFFF)
    {
      uint64_t v45 = *(void *)v37;
      uint64_t v46 = *(void *)(v37 + 8);
      char v47 = *(unsigned char *)(v37 + 16);
      sub_24EC8A97C(*(void *)v37, v46, v47);
      *(void *)unint64_t v36 = v45;
      *(void *)(v36 + 8) = v46;
      *(unsigned char *)(v36 + 16) = v47;
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
LABEL_21:
    long long v48 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v48;
    goto LABEL_22;
  }
  if (v38 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v36, *(void *)(v36 + 8), *(unsigned char *)(v36 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v39 = *(void *)v37;
  uint64_t v40 = *(void *)(v37 + 8);
  char v41 = *(unsigned char *)(v37 + 16);
  sub_24EC8A97C(*(void *)v37, v40, v41);
  uint64_t v42 = *(void *)v36;
  uint64_t v43 = *(void *)(v36 + 8);
  char v44 = *(unsigned char *)(v36 + 16);
  *(void *)unint64_t v36 = v39;
  *(void *)(v36 + 8) = v40;
  *(unsigned char *)(v36 + 16) = v41;
  sub_24EC8AAA0(v42, v43, v44);
  *(void *)(v36 + 24) = *(void *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v50 = *(void *)(v49 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 24))((v36 + *(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80), (v37 + *(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80), v49);
  return a1;
}

_OWORD *sub_24ED5D974(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  long long v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)a1 + v10 + 128) & ~v10;
  uint64_t v12 = ((unint64_t)a2 + v10 + 128) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 32) + 7;
  uint64_t v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  char v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (_OWORD *)(((unint64_t)v14 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v18 = (_OWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (_OWORD *)(((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v21 = (_OWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 32))(((unint64_t)v20 + *(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), ((unint64_t)v21 + *(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), v23);
  return a1;
}

uint64_t sub_24ED5DAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 40;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 128 + a1) & ~v7;
  uint64_t v9 = (v7 + 128 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 24) + 7;
  unint64_t v11 = (v10 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v10 + v9) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v11 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v12 + 24) >= 0xFFFFFFFFuLL)
    {
      char v13 = *(unsigned char *)(v12 + 16);
      uint64_t v14 = *(void *)v11;
      uint64_t v15 = *(void *)(v11 + 8);
      char v16 = *(unsigned char *)(v11 + 16);
      *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
      *(unsigned char *)(v11 + 16) = v13;
      sub_24EC8AAA0(v14, v15, v16);
      *(void *)(v11 + 24) = *(void *)(v12 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24EC8AAA0(*(void *)v11, *(void *)(v11 + 8), *(unsigned char *)(v11 + 16));
    swift_bridgeObjectRelease();
  }
  long long v17 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v17;
LABEL_6:
  unint64_t v18 = (v11 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v12 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v18 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v19 + 24) >= 0xFFFFFFFFuLL)
    {
      char v20 = *(unsigned char *)(v19 + 16);
      uint64_t v21 = *(void *)v18;
      uint64_t v22 = *(void *)(v18 + 8);
      char v23 = *(unsigned char *)(v18 + 16);
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
      *(unsigned char *)(v18 + 16) = v20;
      sub_24EC8AAA0(v21, v22, v23);
      *(void *)(v18 + 24) = *(void *)(v19 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_24EC8AAA0(*(void *)v18, *(void *)(v18 + 8), *(unsigned char *)(v18 + 16));
    swift_bridgeObjectRelease();
  }
  long long v24 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v24;
LABEL_11:
  unint64_t v25 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v25 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_15:
    long long v31 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v31;
    goto LABEL_16;
  }
  if (*(void *)(v26 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v27 = *(unsigned char *)(v26 + 16);
  uint64_t v28 = *(void *)v25;
  uint64_t v29 = *(void *)(v25 + 8);
  char v30 = *(unsigned char *)(v25 + 16);
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  *(unsigned char *)(v25 + 16) = v27;
  sub_24EC8AAA0(v28, v29, v30);
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 40))((v25 + *(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80), (v26 + *(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80), v32);
  return a1;
}

uint64_t sub_24ED5DD38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(v6 + 64) + 7;
  uint64_t v15 = v11 + 32;
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v16 = ((v15
        + ((((((v14 + ((v10 + 128) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v20 = ((a2 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v20))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 < 2)
    {
LABEL_28:
      uint64_t v24 = ((unint64_t)a1 + v10 + 128) & ~v10;
      if (v7 == v13)
      {
        unint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        return v25(v24, v7, v5);
      }
      else
      {
        unint64_t v26 = (v14 + v24) & 0xFFFFFFFFFFFFFFF8;
        if (v12 > 0x7FFFFFFE)
        {
          uint64_t v28 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v28((v15 + ((((v26 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
        }
        else
        {
          unint64_t v27 = *(void *)(v26 + 24);
          if (v27 >= 0xFFFFFFFF) {
            LODWORD(v27) = -1;
          }
          if ((v27 + 1) >= 2) {
            return v27;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_28;
  }
LABEL_18:
  int v21 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v21 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v22 = v16;
    }
    else {
      int v22 = 4;
    }
    switch(v22)
    {
      case 2:
        int v23 = *a1;
        break;
      case 3:
        int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v23 = *(_DWORD *)a1;
        break;
      default:
        int v23 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v23 = 0;
  }
  return v13 + (v23 | v21) + 1;
}

double sub_24ED5E040(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v30 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  if (v9 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v15 = v9;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(v8 + 64) + 7;
  uint64_t v18 = v14 + 32;
  size_t v19 = ((v14
        + 32
        + ((((((v17 + ((v13 + 128) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
      + *(void *)(*(void *)(v10 - 8) + 64);
  if (a3 <= v16)
  {
    int v20 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v16 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v24))
    {
      int v20 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v20 = 2;
    }
    else
    {
      int v20 = v24 > 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v21 = ~v16 + a2;
    if (v19 < 4)
    {
      int v22 = (v21 >> (8 * v19)) + 1;
      if (v19)
      {
        int v25 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
      int v22 = 1;
    }
    switch(v20)
    {
      case 1:
        a1[v19] = v22;
        return result;
      case 2:
        *(_WORD *)&a1[v19] = v22;
        return result;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v19] = v22;
        return result;
      default:
        return result;
    }
  }
  uint64_t v23 = ~v14;
  switch(v20)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x24ED5E3D8);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        uint64_t v26 = (unint64_t)&a1[v13 + 128] & ~v13;
        if (v9 == v16)
        {
          unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
          v27(v26, a2, v9, v7);
        }
        else
        {
          unint64_t v28 = (v17 + v26) & 0xFFFFFFFFFFFFFFF8;
          if (v15 > 0x7FFFFFFE)
          {
            uint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
            v29((v18 + ((((v28 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & v23, a2);
          }
          else if (a2 > 0x7FFFFFFE)
          {
            double result = 0.0;
            *(_OWORD *)unint64_t v28 = 0u;
            *(_OWORD *)(v28 + 16) = 0u;
            *(_DWORD *)unint64_t v28 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v28 + 24) = a2;
          }
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for VerticalStackCard()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24ED5E41C()
{
  unint64_t result = qword_2699657C8;
  if (!qword_2699657C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657C8);
  }
  return result;
}

unint64_t sub_24ED5E474()
{
  unint64_t result = qword_2699657D0;
  if (!qword_2699657D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657D0);
  }
  return result;
}

unint64_t sub_24ED5E4CC()
{
  unint64_t result = qword_2699657D8;
  if (!qword_2699657D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699657D8);
  }
  return result;
}

uint64_t sub_24ED5E520()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED5E564()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for VerticalStackCard();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[9], v1);
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 24))
  {
    sub_24EC8AAA0(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v3 + v2[11];
  if (*(void *)(v5 + 24))
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v2[12];
  if (*(void *)(v6 + 24))
  {
    sub_24EC8AAA0(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v3 + v2[13];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_24ED5E708()
{
  type metadata accessor for VerticalStackCard();
  return sub_24ED5BC64();
}

uint64_t sub_24ED5E78C@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED5BCA4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24ED5E798@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED5BFC8(*(double **)(v1 + 32), *(void *)(v1 + 24), a1);
}

unint64_t sub_24ED5E7A4()
{
  unint64_t result = qword_269965808;
  if (!qword_269965808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699657E0);
    sub_24ED5E844();
    sub_24EC8C218(&qword_269965828, &qword_269965830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965808);
  }
  return result;
}

unint64_t sub_24ED5E844()
{
  unint64_t result = qword_269965810;
  if (!qword_269965810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699657F8);
    sub_24ED5E8C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965810);
  }
  return result;
}

unint64_t sub_24ED5E8C0()
{
  unint64_t result = qword_269965818;
  if (!qword_269965818)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699657F0);
    sub_24EC8C218(&qword_269965820, &qword_2699657E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965818);
  }
  return result;
}

unint64_t sub_24ED5E968()
{
  unint64_t result = qword_269965848;
  if (!qword_269965848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965840);
    sub_24ECB95FC();
    sub_24EC8C218(&qword_26B1DE3F0, &qword_26B1DE3F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965848);
  }
  return result;
}

uint64_t sub_24ED5EA08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C0D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E694C656C746974 && a2 == 0xEE0074696D694C65 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C6B0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C6D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xED0000737465736ELL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EE7C6F0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EE7C710 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C730 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C750)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_24ED5EDB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED5EF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE0E8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE348);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24EE55E90();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE0D8);
  MEMORY[0x270FA5388](v14);
  unsigned int v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  size_t v19 = (char *)&v29 - v18;
  if (a3)
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE398);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v7, v30, v27);
    *(_WORD *)&v7[*(int *)(v32 + 36)] = 256;
    int v25 = &qword_26B1DE0E8;
    sub_24EC884D4((uint64_t)v7, (uint64_t)v10, &qword_26B1DE0E8);
    swift_storeEnumTagMultiPayload();
    sub_24ED5F4D8(&qword_26B1DE0D0, &qword_26B1DE0D8, &qword_26B1DE048, &qword_26B1DE050);
    sub_24ED5F4D8(&qword_26B1DE0E0, &qword_26B1DE0E8, &qword_26B1DE058, &qword_26B1DE060);
    sub_24EE56230();
    uint64_t v26 = (uint64_t)v7;
  }
  else
  {
    int v20 = (char *)v13 + *(int *)(v11 + 20);
    uint64_t v21 = *MEMORY[0x263F19860];
    uint64_t v22 = sub_24EE560D0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
    *uint64_t v13 = a2;
    v13[1] = a2;
    uint64_t v23 = (uint64_t)&v16[*(int *)(v14 + 36)];
    sub_24ED5F5A0((uint64_t)v13, v23);
    *(_WORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE050) + 36)) = 256;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE398);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v16, v30, v24);
    sub_24ECB9178((uint64_t)v13);
    sub_24ED5F604((uint64_t)v16, (uint64_t)v19);
    int v25 = &qword_26B1DE0D8;
    sub_24EC884D4((uint64_t)v19, (uint64_t)v10, &qword_26B1DE0D8);
    swift_storeEnumTagMultiPayload();
    sub_24ED5F4D8(&qword_26B1DE0D0, &qword_26B1DE0D8, &qword_26B1DE048, &qword_26B1DE050);
    sub_24ED5F4D8(&qword_26B1DE0E0, &qword_26B1DE0E8, &qword_26B1DE058, &qword_26B1DE060);
    sub_24EE56230();
    uint64_t v26 = (uint64_t)v19;
  }
  return sub_24EC88758(v26, v25);
}

uint64_t sub_24ED5F37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24ED5EF80(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t View.artworkClipShape(_:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return MEMORY[0x25334D0C0](&v4, a3, &type metadata for ArtworkClipShapeModifier);
}

uint64_t sub_24ED5F3C8()
{
  return swift_getWitnessTable();
}

unint64_t sub_24ED5F42C()
{
  unint64_t result = qword_26B1DDDF0[0];
  if (!qword_26B1DDDF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DDDF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkClipShapeModifier(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkClipShapeModifier()
{
  return &type metadata for ArtworkClipShapeModifier;
}

uint64_t sub_24ED5F4BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED5F4D8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_24EC8C218(&qword_26B1DE390, &qword_26B1DE398);
    sub_24EC8C218(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED5F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED5F604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24ED5F670()
{
  unint64_t result = qword_26B1DE358;
  if (!qword_26B1DE358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE360);
    sub_24ED5F4D8(&qword_26B1DE0D0, &qword_26B1DE0D8, &qword_26B1DE048, &qword_26B1DE050);
    sub_24ED5F4D8(&qword_26B1DE0E0, &qword_26B1DE0E8, &qword_26B1DE058, &qword_26B1DE060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE358);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCardButtonStyle()
{
  return &type metadata for ActionCardButtonStyle;
}

uint64_t sub_24ED5F73C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED5F758()
{
  return sub_24EE56390();
}

unint64_t sub_24ED5F780()
{
  unint64_t result = qword_26B1DE3A8;
  if (!qword_26B1DE3A8)
  {
    sub_24EE56380();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE3A8);
  }
  return result;
}

uint64_t Symbol.systemName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FitnessCanvasUI::Symbol __swiftcall Symbol.init(systemName:)(FitnessCanvasUI::Symbol systemName)
{
  *uint64_t v1 = systemName;
  return systemName;
}

uint64_t Symbol.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24EE570A0();
  return swift_bridgeObjectRelease();
}

uint64_t static Symbol.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24EE577E0();
  }
}

uint64_t sub_24ED5F898()
{
  return 0x614E6D6574737973;
}

uint64_t sub_24ED5F8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x614E6D6574737973 && a2 == 0xEA0000000000656DLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EE577E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24ED5F958(uint64_t a1)
{
  unint64_t v2 = sub_24ED5FB08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED5F994(uint64_t a1)
{
  unint64_t v2 = sub_24ED5FB08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Symbol.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965868);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED5FB08();
  sub_24EE578D0();
  sub_24EE57770();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24ED5FB08()
{
  unint64_t result = qword_269965870;
  if (!qword_269965870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965870);
  }
  return result;
}

uint64_t Symbol.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t Symbol.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED5FB08();
  sub_24EE578C0();
  if (!v2)
  {
    uint64_t v9 = sub_24EE576D0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED5FD28()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED5FD84()
{
  swift_bridgeObjectRetain();
  sub_24EE570A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24ED5FDDC()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED5FE34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Symbol.init(from:)(a1, a2);
}

uint64_t sub_24ED5FE4C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965868);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED5FB08();
  sub_24EE578D0();
  sub_24EE57770();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24ED5FF84(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24EE577E0();
  }
}

uint64_t static SymbolAttribute.name.getter()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aSymbol_1;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SymbolAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aSymbol_1 = a1;
  qword_269965860 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SymbolAttribute.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_24ED600C0()
{
  return sub_24EE55920();
}

uint64_t sub_24ED60120()
{
  return sub_24EE55930();
}

uint64_t sub_24ED60180()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aSymbol_1;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*AttributeScopes.CustomAttributes.symbol.modify())()
{
  return nullsub_1;
}

void sub_24ED60210()
{
  sub_24ED60670();
  JUMPOUT(0x25334BE60);
}

void sub_24ED6025C()
{
  sub_24ED60670();
  JUMPOUT(0x25334BE70);
}

unint64_t sub_24ED602B0()
{
  unint64_t result = qword_269965880;
  if (!qword_269965880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965880);
  }
  return result;
}

unint64_t sub_24ED60308()
{
  unint64_t result = qword_26B1DD5F0;
  if (!qword_26B1DD5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5F0);
  }
  return result;
}

unint64_t sub_24ED60360()
{
  unint64_t result = qword_269965888;
  if (!qword_269965888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965888);
  }
  return result;
}

unint64_t sub_24ED603B8()
{
  unint64_t result = qword_26B1DB948;
  if (!qword_26B1DB948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DB948);
  }
  return result;
}

unint64_t sub_24ED60410()
{
  unint64_t result = qword_26B1DB950;
  if (!qword_26B1DB950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DB950);
  }
  return result;
}

ValueMetadata *type metadata accessor for Symbol()
{
  return &type metadata for Symbol;
}

ValueMetadata *type metadata accessor for SymbolAttribute()
{
  return &type metadata for SymbolAttribute;
}

ValueMetadata *type metadata accessor for AttributeScopes.CustomAttributes()
{
  return &type metadata for AttributeScopes.CustomAttributes;
}

unsigned char *storeEnumTagSinglePayload for Symbol.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24ED60530);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Symbol.CodingKeys()
{
  return &type metadata for Symbol.CodingKeys;
}

unint64_t sub_24ED6056C()
{
  unint64_t result = qword_269965890;
  if (!qword_269965890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965890);
  }
  return result;
}

unint64_t sub_24ED605C4()
{
  unint64_t result = qword_269965898;
  if (!qword_269965898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965898);
  }
  return result;
}

unint64_t sub_24ED6061C()
{
  unint64_t result = qword_2699658A0;
  if (!qword_2699658A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699658A0);
  }
  return result;
}

unint64_t sub_24ED60670()
{
  unint64_t result = qword_26B1DB940;
  if (!qword_26B1DB940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DB940);
  }
  return result;
}

unint64_t sub_24ED606C4()
{
  unint64_t result = qword_2699658A8;
  if (!qword_2699658A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699658A8);
  }
  return result;
}

unint64_t sub_24ED60718()
{
  unint64_t result = qword_2699658B0;
  if (!qword_2699658B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699658B0);
  }
  return result;
}

uint64_t sub_24ED6076C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE57430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_24ED607D8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, long long a12, uint64_t a13, uint64_t a14, long long a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE030);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (int *)type metadata accessor for StandardHorizontalStackView();
  int v25 = (_OWORD *)((char *)a9 + v24[13]);
  long long v26 = a1[5];
  v25[4] = a1[4];
  v25[5] = v26;
  long long v27 = a1[3];
  v25[2] = a1[2];
  v25[3] = v27;
  long long v28 = a1[9];
  v25[8] = a1[8];
  v25[9] = v28;
  long long v29 = a1[7];
  v25[6] = a1[6];
  v25[7] = v29;
  long long v30 = a1[1];
  *int v25 = *a1;
  v25[1] = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))((char *)a9 + v24[14], a2, a20);
  uint64_t v31 = (uint64_t *)((char *)a9 + v24[15]);
  *uint64_t v31 = a3;
  v31[1] = a4;
  v31[2] = a5;
  v31[3] = a6;
  uint64_t v32 = (uint64_t *)((char *)a9 + v24[16]);
  *uint64_t v32 = a7;
  v32[1] = a8;
  void v32[2] = a10;
  v32[3] = a11;
  uint64_t v33 = (char *)a9 + v24[17];
  *(_OWORD *)uint64_t v33 = a12;
  *((void *)v33 + 2) = a13;
  *((void *)v33 + 3) = a14;
  char v34 = (char *)a9 + v24[18];
  *(_OWORD *)char v34 = a15;
  *((void *)v34 + 2) = a16;
  *((void *)v34 + 3) = a17;
  long long v35 = (char *)a9 + v24[19];
  uint64_t v36 = sub_24EE57430();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a18, v36);
  unint64_t v37 = (char *)a9 + v24[20];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v37, a19, v38);
}

double static StandardHorizontalStackViewLayout.default.getter@<D0>(_OWORD *a1@<X8>)
{
  if (qword_2699648E8 != -1) {
    swift_once();
  }
  long long v2 = unk_269965928;
  a1[6] = xmmword_269965918;
  a1[7] = v2;
  long long v3 = xmmword_269965948;
  a1[8] = xmmword_269965938;
  a1[9] = v3;
  long long v4 = unk_2699658E8;
  a1[2] = xmmword_2699658D8;
  a1[3] = v4;
  long long v5 = *(_OWORD *)&qword_269965908;
  a1[4] = xmmword_2699658F8;
  a1[5] = v5;
  double result = *(double *)&xmmword_2699658B8;
  long long v7 = *(_OWORD *)&qword_2699658C8;
  *a1 = xmmword_2699658B8;
  a1[1] = v7;
  return result;
}

double StandardHorizontalStackViewLayout.artworkAspectRatio.getter()
{
  return *(double *)v0;
}

uint64_t StandardHorizontalStackViewLayout.artworkClipShape.getter()
{
  return *(void *)(v0 + 16);
}

double StandardHorizontalStackViewLayout.artworkContentSpacing.getter()
{
  return *(double *)(v0 + 32);
}

__n128 StandardHorizontalStackViewLayout.contentMargins.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

double StandardHorizontalStackViewLayout.sectionDensity.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 72);
  *(double *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v3;
  return result;
}

uint64_t StandardHorizontalStackViewLayout.displaySeparator.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t StandardHorizontalStackViewLayout.titleLineLimit.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t StandardHorizontalStackViewLayout.subtitleLineLimit.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t StandardHorizontalStackViewLayout.captionLineLimit.getter()
{
  return *(void *)(v0 + 120);
}

double StandardHorizontalStackViewLayout.artworkHeight.getter()
{
  return *(double *)(v0 + 128);
}

uint64_t StandardHorizontalStackViewLayout.showChevron.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

double StandardHorizontalStackViewLayout.interItemSpacing.getter()
{
  return *(double *)(v0 + 144);
}

double StandardHorizontalStackViewLayout.artworkVerticalPadding.getter()
{
  return *(double *)(v0 + 152);
}

__n128 StandardHorizontalStackViewLayout.init(artworkAspectRatio:artworkClipShape:artworkContentSpacing:contentMargins:displaySeparator:sectionDensity:titleLineLimit:subtitleLineLimit:captionLineLimit:artworkHeight:showChevron:interItemSpacing:artworkVerticalPadding:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, char a16)
{
  uint64_t v16 = *a5;
  uint64_t v17 = a5[1];
  uint64_t v18 = a5[2];
  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  *(void *)(a9 + 16) = a1;
  *(unsigned char *)(a9 + 24) = a2 & 1;
  *(double *)(a9 + 32) = a12;
  __n128 result = *(__n128 *)a3;
  long long v20 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 56) = v20;
  *(void *)(a9 + 72) = v16;
  *(void *)(a9 + 80) = v17;
  *(void *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 96) = a4;
  *(void *)(a9 + 104) = a6;
  *(void *)(a9 + 112) = a7;
  *(void *)(a9 + 120) = a8;
  *(double *)(a9 + 128) = a13;
  *(unsigned char *)(a9 + 136) = a16;
  *(double *)(a9 + 144) = a14;
  *(double *)(a9 + 152) = a15;
  return result;
}

unint64_t sub_24ED60BA4(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 5:
    case 8:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x4D746E65746E6F63;
      break;
    case 4:
      unint64_t result = 0x446E6F6974636573;
      break;
    case 6:
      unint64_t result = 0x6E694C656C746974;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x486B726F77747261;
      break;
    case 10:
      unint64_t result = 0x76656843776F6873;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24ED60D44()
{
  return sub_24ED60BA4(*v0);
}

uint64_t sub_24ED60D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED6A3AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED60D74(uint64_t a1)
{
  unint64_t v2 = sub_24ED669A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED60DB0(uint64_t a1)
{
  unint64_t v2 = sub_24ED669A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24ED60DEC()
{
  xmmword_2699658B8 = xmmword_24EE5DDC0;
  qword_2699658C8 = 0x4020000000000000;
  byte_2699658D0 = 0;
  double result = 10.0;
  xmmword_2699658D8 = xmmword_24EE5DDD0;
  unk_2699658E8 = xmmword_24EE5DDE0;
  *(void *)&xmmword_2699658F8 = 0x4034000000000000;
  *((void *)&xmmword_2699658F8 + 1) = 2;
  qword_269965908 = 0x4024000000000000;
  unk_269965910 = 1;
  LOBYTE(xmmword_269965918) = 0;
  *(long long *)((char *)&xmmword_269965918 + 8) = (__int128)vdupq_n_s64(2uLL);
  qword_269965930 = 2;
  *(void *)&xmmword_269965938 = 0x405E000000000000;
  BYTE8(xmmword_269965938) = 1;
  xmmword_269965948 = xmmword_24EE5DDD0;
  return result;
}

uint64_t StandardHorizontalStackViewLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965958);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v38 = v1[2];
  int v43 = *((unsigned __int8 *)v1 + 24);
  uint64_t v10 = v1[5];
  uint64_t v36 = v1[4];
  uint64_t v37 = v10;
  uint64_t v11 = v1[7];
  uint64_t v35 = v1[6];
  uint64_t v12 = v1[8];
  uint64_t v13 = v1[9];
  uint64_t v14 = v1[10];
  uint64_t v33 = v1[11];
  uint64_t v34 = v13;
  int v32 = *((unsigned __int8 *)v1 + 96);
  uint64_t v15 = v1[13];
  uint64_t v30 = v1[14];
  uint64_t v31 = v15;
  uint64_t v29 = v1[15];
  uint64_t v16 = v1[16];
  int v17 = *((unsigned __int8 *)v1 + 136);
  uint64_t v19 = v1[18];
  uint64_t v18 = v1[19];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED669A0();
  sub_24EE578D0();
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  char v44 = 0;
  type metadata accessor for CGSize(0);
  sub_24ED69D20(&qword_26B1DE588, type metadata accessor for CGSize);
  sub_24EE577B0();
  if (!v2)
  {
    uint64_t v20 = v36;
    uint64_t v28 = v12;
    uint64_t v21 = v11;
    uint64_t v22 = v35;
    uint64_t v23 = v37;
    uint64_t v24 = v33;
    uint64_t v25 = v34;
    v27[3] = v17;
    uint64_t v39 = v38;
    LOBYTE(v40) = v43;
    char v44 = 1;
    sub_24ED669F4();
    sub_24EE577B0();
    uint64_t v39 = v20;
    char v44 = 2;
    sub_24ECB1664();
    sub_24EE577B0();
    uint64_t v38 = v5;
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    uint64_t v42 = v28;
    char v44 = 3;
    sub_24ED5CB40();
    sub_24EE577B0();
    uint64_t v39 = v25;
    uint64_t v40 = v14;
    uint64_t v41 = v24;
    char v44 = 4;
    sub_24ED66A48();
    sub_24EE577B0();
    LOBYTE(v39) = 5;
    sub_24EE57780();
    LOBYTE(v39) = 6;
    sub_24EE577A0();
    LOBYTE(v39) = 7;
    sub_24EE577A0();
    LOBYTE(v39) = 8;
    sub_24EE577A0();
    uint64_t v39 = v16;
    char v44 = 9;
    sub_24EE577B0();
    LOBYTE(v39) = 10;
    sub_24EE57780();
    uint64_t v39 = v19;
    char v44 = 11;
    sub_24EE577B0();
    uint64_t v39 = v18;
    char v44 = 12;
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StandardHorizontalStackViewLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965968);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED669A0();
  sub_24EE578C0();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    char v42 = 0;
    sub_24ED69D20(&qword_269964948, type metadata accessor for CGSize);
    sub_24EE57710();
    uint64_t v9 = v37;
    uint64_t v10 = v38;
    char v42 = 1;
    sub_24ED66A9C();
    sub_24EE57710();
    uint64_t v36 = v37;
    int v11 = v38;
    char v42 = 2;
    unint64_t v12 = sub_24ECB1F14();
    sub_24EE57710();
    unint64_t v35 = v12;
    int v34 = v11;
    uint64_t v13 = v37;
    char v42 = 3;
    sub_24ED5CBE8();
    sub_24EE57710();
    uint64_t v14 = v37;
    uint64_t v15 = v38;
    uint64_t v16 = v39;
    uint64_t v17 = v40;
    char v42 = 4;
    sub_24ED66AF0();
    sub_24EE57710();
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    uint64_t v20 = v39;
    LOBYTE(v37) = 5;
    int v33 = sub_24EE576E0();
    LOBYTE(v37) = 6;
    uint64_t v32 = sub_24EE57700();
    LOBYTE(v37) = 7;
    uint64_t v31 = sub_24EE57700();
    LOBYTE(v37) = 8;
    uint64_t v30 = sub_24EE57700();
    char v42 = 9;
    sub_24EE57710();
    uint64_t v29 = v37;
    LOBYTE(v37) = 10;
    int v28 = sub_24EE576E0();
    char v42 = 11;
    sub_24EE57710();
    uint64_t v27 = v37;
    char v42 = 12;
    sub_24EE57710();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v22 = v37;
    char v23 = v33;
    char v24 = v34;
    char v41 = v34;
    char v25 = v28 & 1;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v36;
    *(unsigned char *)(a2 + 24) = v24;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v15;
    *(void *)(a2 + 56) = v16;
    *(void *)(a2 + 64) = v17;
    *(void *)(a2 + 72) = v18;
    *(void *)(a2 + 80) = v19;
    *(void *)(a2 + 88) = v20;
    *(unsigned char *)(a2 + 96) = v23 & 1;
    uint64_t v26 = v31;
    *(void *)(a2 + 104) = v32;
    *(void *)(a2 + 112) = v26;
    *(void *)(a2 + 120) = v30;
    *(void *)(a2 + 128) = v29;
    *(unsigned char *)(a2 + 136) = v25;
    *(void *)(a2 + 144) = v27;
    *(void *)(a2 + 152) = v22;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED61860@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StandardHorizontalStackViewLayout.init(from:)(a1, a2);
}

uint64_t sub_24ED61878(void *a1)
{
  return StandardHorizontalStackViewLayout.encode(to:)(a1);
}

uint64_t StandardHorizontalStackViewLayout.hash(into:)()
{
  char v1 = *(unsigned char *)(v0 + 24);
  sub_24EC8A508();
  sub_24EE57880();
  if ((v1 & 1) == 0) {
    sub_24EE578A0();
  }
  sub_24EE578A0();
  sub_24EE578A0();
  sub_24EE578A0();
  sub_24EE578A0();
  sub_24EE578A0();
  sub_24EE57880();
  sub_24EE578A0();
  sub_24EE57880();
  sub_24EE57890();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE578A0();
  sub_24EE57890();
  sub_24EE578A0();
  return sub_24EE578A0();
}

uint64_t StandardHorizontalStackViewLayout.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED61A3C()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED61A80()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED61AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v75 = sub_24EE56C90();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v71 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659A0);
  MEMORY[0x270FA5388](v69);
  uint64_t v72 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659A8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659B0);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  int v70 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659B8);
  MEMORY[0x270FA5388](v88);
  uint64_t v90 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v85 = (char *)&v69 - v9;
  uint64_t v84 = sub_24EE563E0();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  int v82 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(a1 + 16);
  sub_24EE55DD0();
  uint64_t v11 = sub_24EE55DD0();
  uint64_t v80 = *(void *)(a1 + 32);
  uint64_t v12 = a1;
  uint64_t v113 = v80;
  uint64_t v114 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v14 = sub_24ED5F42C();
  uint64_t v111 = WitnessTable;
  unint64_t v112 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v101 = v11;
  uint64_t v102 = v15;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659C0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  uint64_t v101 = v11;
  uint64_t v102 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE56240();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v107 = v16;
  uint64_t v108 = v17;
  swift_getWitnessTable();
  sub_24EE56C30();
  swift_getWitnessTable();
  sub_24EE56BA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE388);
  uint64_t v18 = sub_24EE55DD0();
  uint64_t v19 = sub_24EE55E40();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_24EC8C218(&qword_26B1DE380, &qword_26B1DE388);
  uint64_t v105 = v20;
  uint64_t v106 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_24ED69D20(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v101 = v18;
  uint64_t v102 = v19;
  uint64_t v103 = v22;
  uint64_t v104 = v23;
  swift_getOpaqueTypeMetadata2();
  uint64_t v24 = *(void *)(v12 + 24);
  uint64_t v25 = v12;
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v26 = sub_24EE56BC0();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v69 - v28;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v101 = v26;
  uint64_t v102 = v30;
  uint64_t v77 = MEMORY[0x263F1AE68];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v92 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unsigned int v79 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  unint64_t v35 = (char *)&v69 - v34;
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v69 - v37;
  uint64_t v93 = v81;
  uint64_t v94 = v24;
  uint64_t v39 = *(void *)(v25 + 40);
  uint64_t v95 = v80;
  uint64_t v96 = v39;
  uint64_t v40 = v86;
  uint64_t v97 = v86;
  sub_24EE560C0();
  sub_24EE56BB0();
  char v41 = v82;
  sub_24EE563D0();
  sub_24EE568B0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v41, v84);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  uint64_t v101 = v26;
  uint64_t v102 = v30;
  uint64_t v42 = (uint64_t)v85;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = (uint64_t)v38;
  sub_24EC90894(v35);
  char v44 = *(void (**)(char *, uint64_t))(v92 + 8);
  v44(v35, OpaqueTypeMetadata2);
  uint64_t v45 = 1;
  if (*(unsigned char *)(v40 + *(int *)(v25 + 52) + 96) == 1)
  {
    uint64_t v46 = v71;
    sub_24EE56C80();
    char v47 = sub_24EE56530();
    sub_24EE55AD0();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v56 = v73;
    uint64_t v57 = (uint64_t)v72;
    uint64_t v58 = v75;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v46, v75);
    uint64_t v59 = v57 + *(int *)(v69 + 36);
    *(unsigned char *)uint64_t v59 = v47;
    *(void *)(v59 + 8) = v49;
    *(void *)(v59 + 16) = v51;
    *(void *)(v59 + 24) = v53;
    *(void *)(v59 + 32) = v55;
    *(unsigned char *)(v59 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v58);
    uint64_t v60 = sub_24EE55E00();
    LOBYTE(v58) = sub_24EE564E0();
    uint64_t v86 = v43;
    uint64_t v61 = v74;
    sub_24EC884D4(v57, v74, &qword_2699659A0);
    uint64_t v62 = v61 + *(int *)(v76 + 36);
    *(void *)uint64_t v62 = v60;
    *(unsigned char *)(v62 + 8) = v58;
    sub_24EC88758(v57, &qword_2699659A0);
    sub_24ED6A1D8(&qword_2699659D8, &qword_2699659A8, (void (*)(void))sub_24ED69C74);
    uint64_t v63 = (uint64_t)v70;
    sub_24EE56890();
    uint64_t v64 = v61;
    uint64_t v43 = v86;
    sub_24EC88758(v64, &qword_2699659A8);
    sub_24ED10C70(v63, v42, &qword_2699659B0);
    uint64_t v45 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v42, v45, 1, v89);
  uint64_t v65 = v79;
  uint64_t v66 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v79, v84, OpaqueTypeMetadata2);
  uint64_t v101 = (uint64_t)v65;
  uint64_t v67 = v90;
  sub_24EC884D4(v42, v90, &qword_2699659B8);
  uint64_t v102 = v67;
  v100[0] = OpaqueTypeMetadata2;
  v100[1] = v88;
  uint64_t v98 = v43;
  unint64_t v99 = sub_24ED69B28();
  sub_24EDCC8A0((uint64_t)&v101, 2uLL, (uint64_t)v100);
  sub_24EC88758(v42, &qword_2699659B8);
  v44((char *)v66, OpaqueTypeMetadata2);
  sub_24EC88758(v67, &qword_2699659B8);
  return ((uint64_t (*)(char *, uint64_t))v44)(v65, OpaqueTypeMetadata2);
}

uint64_t sub_24ED62734@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v124 = a5;
  size_t v128 = a1;
  uint64_t v123 = a6;
  uint64_t v118 = sub_24EE57430();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v116 = (char *)&v90 - v10;
  uint64_t v115 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v92 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v91 = (char *)&v90 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v90 = (char *)&v90 - v16;
  swift_getTupleTypeMetadata2();
  uint64_t v120 = sub_24EE56E20();
  uint64_t v122 = sub_24EE57430();
  uint64_t v119 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  size_t v121 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unsigned int v129 = (char *)&v90 - v19;
  uint64_t v20 = sub_24EE55E40();
  uint64_t v95 = v20;
  uint64_t v114 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v113 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = (uint64_t)a2;
  long long v152 = a2;
  uint64_t v153 = a3;
  uint64_t v108 = a4;
  uint64_t v154 = a4;
  uint64_t v155 = a5;
  uint64_t v125 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v109 = *(void *)(v125 - 8);
  uint64_t v110 = *(void *)(v109 + 64);
  MEMORY[0x270FA5388](v125);
  uint64_t v107 = (char *)&v90 - v22;
  sub_24EE55DD0();
  uint64_t v23 = sub_24EE55DD0();
  uint64_t v150 = a4;
  uint64_t v151 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v25 = sub_24ED5F42C();
  uint64_t v148 = WitnessTable;
  unint64_t v149 = v25;
  uint64_t v26 = swift_getWitnessTable();
  long long v152 = (uint64_t *)v23;
  uint64_t v153 = v26;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659C0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  long long v152 = (uint64_t *)v23;
  uint64_t v153 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v147 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE56240();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v144 = v27;
  uint64_t v145 = v28;
  swift_getWitnessTable();
  uint64_t v104 = sub_24EE56C30();
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v29 = sub_24EE56BA0();
  uint64_t v106 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v102 = (char *)&v90 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE388);
  uint64_t v98 = v29;
  uint64_t v31 = sub_24EE55DD0();
  uint64_t v96 = v31;
  uint64_t v105 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  size_t v100 = (char *)&v90 - v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v97 = v33;
  uint64_t v34 = sub_24EC8C218(&qword_26B1DE380, &qword_26B1DE388);
  uint64_t v142 = v33;
  uint64_t v143 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v94 = v35;
  uint64_t v93 = sub_24ED69D20(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  long long v152 = (uint64_t *)v31;
  uint64_t v153 = v20;
  uint64_t v154 = v35;
  uint64_t v155 = v93;
  uint64_t v99 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v101 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unint64_t v112 = (char *)&v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v90 - v38;
  __n128 v41 = MEMORY[0x270FA5388](v40);
  long long v126 = (char *)&v90 - v42;
  uint64_t v43 = v109;
  char v44 = v107;
  uint64_t v45 = v128;
  uint64_t v46 = v125;
  (*(void (**)(char *, char *, uint64_t, __n128))(v109 + 16))(v107, v128, v125, v41);
  unint64_t v47 = (*(unsigned __int8 *)(v43 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v111;
  v48[2] = v111;
  v48[3] = a3;
  uint64_t v50 = a3;
  uint64_t v51 = v108;
  uint64_t v52 = v124;
  v48[4] = v108;
  v48[5] = v52;
  uint64_t v53 = (char *)v48 + v47;
  uint64_t v54 = v52;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v53, v44, v46);
  uint64_t v130 = v49;
  uint64_t v131 = v50;
  uint64_t v132 = v51;
  uint64_t v133 = v54;
  unsigned int v134 = v45;
  uint64_t v55 = v102;
  uint64_t v56 = v115;
  sub_24EE56B90();
  sub_24EC8BF38();
  uint64_t v57 = v100;
  uint64_t v58 = v98;
  sub_24EE56790();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v58);
  uint64_t v59 = v113;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v60 = (uint64_t *)v96;
  uint64_t v61 = v95;
  uint64_t v62 = v94;
  uint64_t v63 = v93;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v61);
  (*(void (**)(char *, uint64_t *))(v105 + 8))(v57, v60);
  long long v152 = v60;
  uint64_t v153 = v61;
  uint64_t v64 = v116;
  uint64_t v154 = v62;
  uint64_t v155 = v63;
  uint64_t v65 = v117;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = OpaqueTypeMetadata2;
  uint64_t v111 = v66;
  sub_24EC90894(v39);
  uint64_t v68 = v101;
  uint64_t v69 = *(char **)(v101 + 8);
  int v70 = v39;
  uint64_t v71 = v118;
  uint64_t v114 = v101 + 8;
  uint64_t v113 = v69;
  ((void (*)(char *, uint64_t))v69)(v70, v67);
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v64, &v128[*(int *)(v125 + 76)], v71);
  uint64_t v72 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v64, 1, v50) == 1)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v71);
    uint64_t v73 = v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v121, 1, 1, v120);
  }
  else
  {
    uint64_t v74 = v90;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v90, v64, v50);
    uint64_t v75 = v91;
    uint64_t v76 = v124;
    sub_24EC90894(v74);
    uint64_t v135 = 0;
    char v136 = 1;
    long long v152 = &v135;
    uint64_t v77 = v92;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v92, v75, v50);
    uint64_t v153 = (uint64_t)v77;
    uint64_t v140 = MEMORY[0x263F1B6B0];
    uint64_t v141 = v50;
    uint64_t v138 = MEMORY[0x263F1B698];
    uint64_t v139 = v76;
    uint64_t v73 = v121;
    sub_24EDCC8A0((uint64_t)&v152, 2uLL, (uint64_t)&v140);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v72 + 8);
    v78(v75, v50);
    v78(v74, v50);
    v78(v77, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v73, 0, 1, v120);
  }
  swift_getWitnessTable();
  uint64_t v79 = v119;
  uint64_t v80 = v122;
  size_t v128 = *(char **)(v119 + 16);
  ((void (*)(char *, char *, uint64_t))v128)(v129, v73, v122);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v79 + 8);
  v81(v73, v80);
  int v82 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  uint64_t v83 = (uint64_t *)v112;
  uint64_t v84 = v126;
  uint64_t v85 = OpaqueTypeMetadata2;
  v82(v112, v126, OpaqueTypeMetadata2);
  long long v152 = v83;
  uint64_t v86 = v129;
  ((void (*)(char *, char *, uint64_t))v128)(v73, v129, v80);
  uint64_t v153 = (uint64_t)v73;
  uint64_t v140 = v85;
  uint64_t v141 = v80;
  uint64_t v138 = v111;
  uint64_t v137 = swift_getWitnessTable();
  uint64_t v139 = swift_getWitnessTable();
  sub_24EDCC8A0((uint64_t)&v152, 2uLL, (uint64_t)&v140);
  v81(v86, v80);
  uint64_t v87 = v84;
  uint64_t v88 = (uint64_t (*)(uint64_t *, uint64_t))v113;
  ((void (*)(char *, uint64_t))v113)(v87, v85);
  v81(v73, v80);
  return v88(v83, v85);
}

uint64_t sub_24ED6367C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v21 = a5;
  uint64_t v19 = a3;
  uint64_t v22 = a6;
  sub_24EE55DD0();
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v36 = a4;
  uint64_t v37 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v35 = sub_24ED5F42C();
  uint64_t v9 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659C0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE56240();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_24EE56C30();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v19 - v15;
  sub_24EE56140();
  uint64_t v23 = a2;
  uint64_t v24 = v19;
  uint64_t v25 = a4;
  uint64_t v26 = v21;
  uint64_t v27 = v20;
  sub_24EE56C20();
  swift_getWitnessTable();
  sub_24EC90894(v13);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  sub_24EC90894(v16);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_24ED63A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v55 = a1;
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v48 = a4;
  uint64_t v46 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v50 = *(void *)(v46 - 8);
  uint64_t v51 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v39 - v8;
  uint64_t v40 = *(void *)(a2 - 8);
  uint64_t v9 = v40;
  MEMORY[0x270FA5388](v10);
  unint64_t v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EE55DD0();
  uint64_t v12 = sub_24EE55DD0();
  uint64_t v62 = a4;
  uint64_t v63 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v14 = sub_24ED5F42C();
  uint64_t v60 = WitnessTable;
  unint64_t v61 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v64 = v12;
  uint64_t v65 = v15;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659C0);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  uint64_t v41 = MEMORY[0x263F1BAD0];
  swift_getWitnessTable();
  uint64_t v42 = sub_24EE56BC0();
  uint64_t v64 = v12;
  uint64_t v65 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v43 = sub_24EE56C30();
  uint64_t v16 = sub_24EE56240();
  uint64_t v45 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = v46;
  uint64_t v24 = v55;
  uint64_t v25 = v55 + *(int *)(v46 + 56);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  uint64_t v27 = (uint64_t)v47;
  uint64_t v39 = a2;
  v26(v47, v25, a2, v20);
  uint64_t v29 = v49;
  uint64_t v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v24, v23);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = v52;
  *((void *)v31 + 2) = a2;
  *((void *)v31 + 3) = v32;
  uint64_t v33 = v53;
  *((void *)v31 + 4) = v48;
  *((void *)v31 + 5) = v33;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v31[v30], v29, v23);
  uint64_t v34 = sub_24EC8C218(&qword_2699659E8, &qword_2699659C0);
  sub_24ED64CA4(v27, (uint64_t)sub_24ED69DBC, (uint64_t)v31, v23, v44, v34, (uint64_t)v18);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v27, v39);
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v56 = v35;
  uint64_t v57 = v36;
  swift_getWitnessTable();
  sub_24EC90894(v18);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v45 + 8);
  v37(v18, v16);
  sub_24EC90894(v22);
  return ((uint64_t (*)(char *, uint64_t))v37)(v22, v16);
}

uint64_t sub_24ED64028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  uint64_t v74 = a6;
  uint64_t v75 = a2;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659F0);
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v62 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699659F8);
  MEMORY[0x270FA5388](v63);
  uint64_t v66 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965A00);
  uint64_t v68 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79[0] = a2;
  v79[1] = a3;
  v79[2] = a4;
  v79[3] = a5;
  uint64_t v15 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v71 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = v16;
  unint64_t v61 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  int v70 = (char *)&v60 - v18;
  uint64_t v19 = sub_24EE57430();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v60 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965A08);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v73 = (uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v72 = (uint64_t)&v60 - v26;
  uint64_t v27 = sub_24EE56140();
  sub_24ED64844(a1, (uint64_t)v95);
  *(_OWORD *)&v97[71] = v95[4];
  *(_OWORD *)&v97[55] = v95[3];
  *(_OWORD *)&v97[119] = v95[7];
  *(_OWORD *)&v97[135] = v95[8];
  *(_OWORD *)&v97[151] = v95[9];
  v97[167] = v96;
  *(_OWORD *)&v97[87] = v95[5];
  *(_OWORD *)&v97[103] = v95[6];
  *(_OWORD *)&v97[7] = v95[0];
  *(_OWORD *)&v97[23] = v95[1];
  *(_OWORD *)&v97[39] = v95[2];
  long long v91 = *(_OWORD *)&v97[112];
  long long v92 = *(_OWORD *)&v97[128];
  long long v93 = *(_OWORD *)&v97[144];
  long long v87 = *(_OWORD *)&v97[48];
  long long v88 = *(_OWORD *)&v97[64];
  long long v89 = *(_OWORD *)&v97[80];
  long long v90 = *(_OWORD *)&v97[96];
  uint64_t v28 = a1;
  long long v84 = *(_OWORD *)v97;
  long long v85 = *(_OWORD *)&v97[16];
  char v98 = 0;
  uint64_t v81 = v27;
  uint64_t v82 = 0;
  char v83 = 0;
  uint64_t v94 = *(void *)&v97[160];
  long long v86 = *(_OWORD *)&v97[32];
  sub_24EE56DB0();
  sub_24EDCD380(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v99, 0.0, 1, 0.0, 1);
  sub_24ED69EEC((uint64_t *)v95);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a1 + *(int *)(v15 + 76), v19);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 48);
  uint64_t v30 = a3;
  uint64_t v31 = a3;
  uint64_t v32 = v70;
  LODWORD(v27) = v29(v22, 1, v31);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v33 = v71;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
  v34(v32, v28, v15);
  if (v27 != 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v15);
    uint64_t v56 = 1;
    uint64_t v37 = v74;
    uint64_t v39 = v68;
    uint64_t v38 = v69;
LABEL_6:
    uint64_t v55 = v72;
    goto LABEL_7;
  }
  char v35 = v32[*(int *)(v15 + 52) + 136];
  uint64_t v36 = v33;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v15);
  uint64_t v37 = v74;
  uint64_t v39 = v68;
  uint64_t v38 = v69;
  if ((v35 & 1) == 0)
  {
    uint64_t v56 = 1;
    goto LABEL_6;
  }
  uint64_t v40 = v61;
  uint64_t v41 = v28;
  uint64_t v42 = v69;
  v34(v61, v41, v15);
  unint64_t v43 = (*(unsigned __int8 *)(v36 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = v75;
  *((void *)v44 + 3) = v30;
  uint64_t v45 = v77;
  *((void *)v44 + 4) = v76;
  *((void *)v44 + 5) = v45;
  uint64_t v46 = v40;
  uint64_t v37 = v74;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v44[v43], v46, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269965A18);
  sub_24ED6A1D8(&qword_269965A20, &qword_269965A18, (void (*)(void))sub_24ED6A254);
  unint64_t v47 = v62;
  sub_24EE56B90();
  uint64_t v48 = v65;
  uint64_t v49 = (uint64_t)v66;
  uint64_t v50 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v66, v47, v67);
  *(unsigned char *)(v49 + *(int *)(v63 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v50);
  uint64_t v51 = sub_24EE56AE0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = v64;
  sub_24EC884D4(v49, v64, &qword_2699659F8);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v42 + 36));
  *uint64_t v54 = KeyPath;
  v54[1] = v51;
  sub_24EC88758(v49, &qword_2699659F8);
  uint64_t v55 = v72;
  sub_24ED10C70(v53, v72, &qword_269965A00);
  uint64_t v56 = 0;
  uint64_t v38 = v42;
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v55, v56, 1, v38);
  uint64_t v57 = v73;
  sub_24EC884D4(v55, v73, &qword_269965A08);
  memcpy(v78, v99, 0x130uLL);
  v78[304] = 0;
  memcpy(v37, v78, 0x131uLL);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965A10);
  sub_24EC884D4(v57, (uint64_t)v37 + *(int *)(v58 + 48), &qword_269965A08);
  sub_24ED6A05C((uint64_t)v78, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED6A00C);
  sub_24EC88758(v55, &qword_269965A08);
  sub_24EC88758(v57, &qword_269965A08);
  memcpy(v79, v99, sizeof(v79));
  char v80 = 0;
  return sub_24ED6A05C((uint64_t)v79, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED69FBC);
}

uint64_t sub_24ED64844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v5 = (int *)v4;
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(v4 + 68));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = v6[2];
  uint64_t v40 = v6[3];
  char v34 = v9;
  if (v40)
  {
    uint64_t v42 = v9 & 1;
    uint64_t v44 = *(void *)(a1 + *(int *)(v4 + 52) + 120);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v10 = v7;
    uint64_t v11 = v8;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v42 = 0;
    uint64_t KeyPath = 0;
    uint64_t v44 = 0;
  }
  uint64_t v12 = (uint64_t *)(a1 + v5[15]);
  uint64_t v13 = *v12;
  uint64_t v37 = v12[1];
  uint64_t v14 = v12[2];
  uint64_t v30 = v12[3];
  uint64_t v31 = *v12;
  char v29 = v14;
  if (v30)
  {
    uint64_t v41 = v14 & 1;
    uint64_t v33 = *(void *)(a1 + v5[13] + 104);
    uint64_t v32 = swift_getKeyPath();
    uint64_t v15 = v37;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v41 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  uint64_t v35 = v8;
  uint64_t v36 = v7;
  uint64_t v16 = (uint64_t *)(a1 + v5[16]);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = v16[2];
  uint64_t v20 = v16[3];
  uint64_t v27 = v18;
  char v28 = v19;
  uint64_t v26 = *v16;
  if (v20)
  {
    uint64_t v38 = *(void *)(a1 + v5[13] + 112);
    uint64_t v39 = v19 & 1;
    uint64_t v21 = swift_getKeyPath();
    uint64_t v22 = v17;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v18 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v21 = 0;
  }
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v42;
  *(void *)(a2 + 24) = v40;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = v44;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v41;
  *(void *)(a2 + 80) = v30;
  *(void *)(a2 + 88) = v32;
  *(void *)(a2 + 96) = v33;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = v22;
  *(void *)(a2 + 120) = v18;
  *(void *)(a2 + 128) = v39;
  *(void *)(a2 + 136) = v20;
  *(void *)(a2 + 144) = v21;
  *(void *)(a2 + 152) = v38;
  *(unsigned char *)(a2 + 160) = 0;
  uint64_t v23 = v20;
  uint64_t v24 = v22;
  sub_24ED6A00C(v10, v11, v42, v40);
  sub_24ED6A00C(v13, v15, v41, v30);
  sub_24ED6A00C(v24, v18, v39, v23);
  sub_24EC8BFE0(v36, v35, v34, v40);
  sub_24EC8BFE0(v31, v37, v29, v30);
  sub_24EC8BFE0(v26, v27, v28, v23);
  sub_24ED69FBC(v24, v18, v39, v23);
  sub_24ED69FBC(v13, v15, v41, v30);
  return sub_24ED69FBC(v10, v11, v42, v40);
}

uint64_t sub_24ED64B38()
{
  return sub_24EE55A40();
}

__n128 sub_24ED64B8C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24EE56B20();
  uint64_t v3 = sub_24EE565D0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_24EE56DC0();
  sub_24EDCD560(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v5, v6, v2, KeyPath, v3);
  swift_release();
  swift_release();
  swift_release();
  long long v7 = v11[7];
  *(_OWORD *)(a1 + 96) = v11[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 128) = v12;
  long long v8 = v11[3];
  *(_OWORD *)(a1 + 32) = v11[2];
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = v11[5];
  *(_OWORD *)(a1 + 64) = v11[4];
  *(_OWORD *)(a1 + 80) = v9;
  __n128 result = (__n128)v11[1];
  *(_OWORD *)a1 = v11[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24ED64CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v73 = a6;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v76 = a7;
  uint64_t v72 = a1;
  uint64_t v69 = *(void *)(a4 + 16);
  sub_24EE55DD0();
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v71 = a4;
  uint64_t v68 = *(void *)(a4 + 32);
  uint64_t v85 = v68;
  uint64_t v86 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v84 = sub_24ED5F42C();
  uint64_t v11 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  uint64_t v81 = v10;
  uint64_t v82 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  uint64_t v61 = sub_24EE56E20();
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v12 = sub_24EE56C30();
  uint64_t v64 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v62 = (char *)v57 - v15;
  uint64_t v70 = a5;
  swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_24EE56E20();
  uint64_t v17 = swift_getWitnessTable();
  v57[1] = v16;
  v57[0] = v17;
  uint64_t v18 = sub_24EE56BC0();
  uint64_t v59 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v58 = (char *)v57 - v22;
  uint64_t v23 = sub_24EE55D70();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  char v29 = (char *)v57 - v28;
  uint64_t v30 = sub_24EE56240();
  uint64_t v66 = *(void *)(v30 - 8);
  uint64_t v67 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v65 = (char *)v57 - v31;
  sub_24EE187B4((uint64_t)v29);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F18CB8], v23);
  LOBYTE(a5) = sub_24EE55D60();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
  v32(v26, v23);
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v32)(v29, v23);
  if (a5)
  {
    MEMORY[0x270FA5388](v33);
    uint64_t v35 = *(void *)(v34 + 24);
    v57[-10] = v69;
    v57[-9] = v35;
    uint64_t v36 = v68;
    v57[-8] = v70;
    v57[-7] = v36;
    uint64_t v37 = v73;
    v57[-6] = *(void *)(v34 + 40);
    v57[-5] = v37;
    v57[-4] = v72;
    v57[-3] = v7;
    uint64_t v38 = v75;
    v57[-2] = v74;
    v57[-1] = v38;
    sub_24EE560C0();
    sub_24EE56BB0();
    swift_getWitnessTable();
    uint64_t v39 = v58;
    sub_24EC90894(v20);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v59 + 8);
    v40(v20, v18);
    sub_24EC90894(v39);
    swift_getWitnessTable();
    uint64_t v41 = v65;
    sub_24EC908D0((uint64_t)v20, v18);
    v40(v20, v18);
    uint64_t v42 = v39;
    uint64_t v43 = v18;
  }
  else
  {
    uint64_t v44 = sub_24EE56140();
    MEMORY[0x270FA5388](v44);
    uint64_t v46 = *(void *)(v45 + 24);
    v57[-10] = v69;
    v57[-9] = v46;
    uint64_t v47 = v68;
    v57[-8] = v70;
    v57[-7] = v47;
    uint64_t v48 = v73;
    v57[-6] = *(void *)(v45 + 40);
    v57[-5] = v48;
    uint64_t v49 = v72;
    v57[-4] = v7;
    v57[-3] = v49;
    uint64_t v50 = v75;
    v57[-2] = v74;
    v57[-1] = v50;
    uint64_t v51 = (uint64_t)v63;
    sub_24EE56C20();
    swift_getWitnessTable();
    uint64_t v52 = v62;
    sub_24EC90894(v51);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v64 + 8);
    v40((char *)v51, v12);
    sub_24EC90894(v52);
    swift_getWitnessTable();
    uint64_t v41 = v65;
    sub_24EC909C8(v51, v18, v12);
    v40((char *)v51, v12);
    uint64_t v42 = v52;
    uint64_t v43 = v12;
  }
  v40(v42, v43);
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v77 = v53;
  uint64_t v78 = v54;
  uint64_t v55 = v67;
  swift_getWitnessTable();
  sub_24EC90894(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v41, v55);
}

uint64_t sub_24ED6552C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v54 = a6;
  uint64_t v64 = a4;
  uint64_t v65 = a3;
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v69 = a9;
  uint64_t v70 = a7;
  uint64_t v66 = *(void *)(a7 - 8);
  uint64_t v53 = a10;
  MEMORY[0x270FA5388](a1);
  uint64_t v68 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v67 = (char *)&v51 - v15;
  uint64_t v16 = sub_24EE55DD0();
  uint64_t v52 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = sub_24EE55DD0();
  uint64_t v55 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v81 = a8;
  uint64_t v82 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v23 = sub_24ED5F42C();
  uint64_t v79 = WitnessTable;
  unint64_t v80 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v75 = v19;
  uint64_t v76 = v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v59 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v27 = (char *)&v51 - v26;
  uint64_t v60 = v28;
  uint64_t v62 = sub_24EE55DD0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v63 = (char *)&v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v58 = (char *)&v51 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v71 = (char *)&v51 - v33;
  uint64_t v75 = a5;
  uint64_t v76 = v54;
  uint64_t v77 = a8;
  uint64_t v78 = v53;
  uint64_t v34 = v56 + *(int *)(type metadata accessor for StandardHorizontalStackView() + 52);
  sub_24EE56710();
  View.artworkClipShape(_:)(*(void *)(v34 + 16), *(unsigned char *)(v34 + 24), v16);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v16);
  sub_24EE56490();
  sub_24EE56DA0();
  sub_24EE568F0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v19);
  LOBYTE(v21) = sub_24EE564F0();
  unsigned __int8 v35 = sub_24EE56500();
  sub_24EE56520();
  sub_24EE56520();
  if (sub_24EE56520() != v21) {
    sub_24EE56520();
  }
  uint64_t v57 = a11;
  sub_24EE56520();
  if (sub_24EE56520() != v35) {
    sub_24EE56520();
  }
  uint64_t v75 = v19;
  uint64_t v76 = v24;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v58;
  uint64_t v38 = v60;
  sub_24EE569E0();
  (*(void (**)(char *, uint64_t (*)(void, void)))(v59 + 8))(v27, v38);
  void v74[2] = OpaqueTypeConformance2;
  v74[3] = MEMORY[0x263F18C10];
  uint64_t v39 = v62;
  uint64_t v59 = swift_getWitnessTable();
  sub_24EC90894(v37);
  uint64_t v40 = v61;
  uint64_t v60 = *(uint64_t (**)(void, void))(v61 + 8);
  uint64_t v41 = v60(v37, v39);
  uint64_t v42 = v68;
  v65(v41);
  uint64_t v43 = v67;
  uint64_t v44 = v70;
  uint64_t v45 = v57;
  sub_24EC90894(v42);
  uint64_t v46 = v66;
  uint64_t v65 = *(void (**)(uint64_t))(v66 + 8);
  ((void (*)(char *, uint64_t))v65)(v42, v44);
  uint64_t v47 = v63;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v63, v71, v39);
  uint64_t v75 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v42, v43, v44);
  uint64_t v76 = (uint64_t)v42;
  v74[0] = v39;
  v74[1] = v44;
  uint64_t v72 = v59;
  uint64_t v73 = v45;
  sub_24EDCC8A0((uint64_t)&v75, 2uLL, (uint64_t)v74);
  uint64_t v48 = (void (*)(char *, uint64_t))v65;
  ((void (*)(char *, uint64_t))v65)(v43, v44);
  uint64_t v49 = (uint64_t (*)(char *, uint64_t))v60;
  v60(v71, v39);
  v48(v42, v44);
  return v49(v47, v39);
}

uint64_t sub_24ED65CC4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void)@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a7;
  uint64_t v51 = a4;
  uint64_t v47 = a3;
  uint64_t v46 = a2;
  uint64_t v45 = a1;
  uint64_t v52 = a9;
  uint64_t v50 = *(void *)(a7 - 8);
  uint64_t v53 = a11;
  MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (char *)&v40 - v16;
  sub_24EE55DD0();
  uint64_t v17 = sub_24EE55DD0();
  uint64_t v73 = a8;
  uint64_t v74 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v19 = sub_24ED5F42C();
  uint64_t v71 = WitnessTable;
  unint64_t v72 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v65 = v17;
  uint64_t v66 = v20;
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  uint64_t v65 = v17;
  uint64_t v66 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v70 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v21 = sub_24EE56BC0();
  uint64_t v43 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v42 = (char *)&v40 - v25;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v67 = a8;
  uint64_t v68 = a10;
  type metadata accessor for StandardHorizontalStackView();
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v26 = v44;
  uint64_t v56 = v44;
  uint64_t v57 = a8;
  uint64_t v58 = a10;
  uint64_t v59 = v53;
  uint64_t v60 = v46;
  uint64_t v61 = v45;
  sub_24EE560C0();
  uint64_t v27 = v23;
  uint64_t v41 = v23;
  sub_24EE56BB0();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v28 = v42;
  sub_24EC90894(v23);
  uint64_t v29 = v43;
  uint64_t v46 = *(uint64_t (**)(void, void))(v43 + 8);
  uint64_t v30 = v46(v27, v21);
  uint64_t v31 = v49;
  v47(v30);
  uint64_t v32 = v48;
  uint64_t v33 = v26;
  sub_24EC90894(v31);
  uint64_t v34 = v50;
  unsigned __int8 v35 = *(void (**)(char *, uint64_t))(v50 + 8);
  v35(v31, v33);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v37 = v41;
  v36(v41, v28, v21);
  uint64_t v65 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  uint64_t v66 = (uint64_t)v31;
  v64[0] = v21;
  v64[1] = v33;
  uint64_t v62 = v45;
  uint64_t v63 = v53;
  sub_24EDCC8A0((uint64_t)&v65, 2uLL, (uint64_t)v64);
  v35(v32, v33);
  uint64_t v38 = (uint64_t (*)(char *, uint64_t))v46;
  v46(v28, v21);
  v35(v31, v33);
  return v38(v37, v21);
}

uint64_t sub_24ED661EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v38 = a6;
  uint64_t v37 = a4;
  uint64_t v40 = a1;
  uint64_t v47 = a7;
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v41 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v56 = a5;
  uint64_t v57 = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v17 = sub_24ED5F42C();
  uint64_t v54 = WitnessTable;
  unint64_t v55 = v17;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v50 = v13;
  uint64_t v51 = v36;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v44 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v45 = v21;
  uint64_t v22 = sub_24EE55DD0();
  uint64_t v46 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v42 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v43 = (char *)&v35 - v25;
  uint64_t v50 = a3;
  uint64_t v51 = v37;
  uint64_t v52 = a5;
  uint64_t v53 = v38;
  uint64_t v26 = a2 + *(int *)(type metadata accessor for StandardHorizontalStackView() + 52);
  sub_24EE56710();
  View.artworkClipShape(_:)(*(void *)(v26 + 16), *(unsigned char *)(v26 + 24), v10);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  sub_24EE56490();
  sub_24EE56DA0();
  uint64_t v27 = v36;
  sub_24EE568F0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
  LOBYTE(v12) = sub_24EE564F0();
  unsigned __int8 v28 = sub_24EE56500();
  sub_24EE56520();
  sub_24EE56520();
  if (sub_24EE56520() != v12) {
    sub_24EE56520();
  }
  sub_24EE56520();
  if (sub_24EE56520() != v28) {
    sub_24EE56520();
  }
  uint64_t v50 = v13;
  uint64_t v51 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v42;
  uint64_t v31 = v45;
  sub_24EE569E0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v31);
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v49 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v32 = v43;
  sub_24EC90894(v30);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v46 + 8);
  v33(v30, v22);
  sub_24EC90894(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, v22);
}

uint64_t sub_24ED66740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EE55FC0();
  *a1 = result;
  return result;
}

uint64_t sub_24ED6676C()
{
  return sub_24EE55FD0();
}

BOOL _s15FitnessCanvasUI33StandardHorizontalStackViewLayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    float64x2_t v5 = *(float64x2_t *)(a1 + 32);
    float64x2_t v4 = *(float64x2_t *)(a1 + 48);
    v6.f64[0] = *(float64_t *)(a1 + 64);
    uint64_t v7 = *(void *)(a1 + 72);
    double v8 = *(double *)(a1 + 80);
    uint64_t v9 = *(void *)(a1 + 88);
    int v10 = *(unsigned __int8 *)(a1 + 96);
    uint64_t v11 = *(void *)(a1 + 104);
    uint64_t v12 = *(void *)(a1 + 112);
    uint64_t v13 = *(void *)(a1 + 120);
    v14.f64[0] = *(float64_t *)(a1 + 128);
    int v15 = *(unsigned __int8 *)(a1 + 136);
    double v17 = *(double *)(a1 + 144);
    double v16 = *(double *)(a1 + 152);
    float64x2_t v19 = *(float64x2_t *)(a2 + 32);
    float64x2_t v18 = *(float64x2_t *)(a2 + 48);
    v20.f64[0] = *(float64_t *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 72);
    uint64_t v22 = *(void *)(a2 + 88);
    int v23 = *(unsigned __int8 *)(a2 + 96);
    uint64_t v25 = *(void *)(a2 + 104);
    uint64_t v24 = *(void *)(a2 + 112);
    uint64_t v26 = *(void *)(a2 + 120);
    v27.f64[0] = *(float64_t *)(a2 + 128);
    if (*(unsigned char *)(a1 + 24))
    {
      BOOL result = 0;
      if (!*(unsigned char *)(a2 + 24)) {
        return result;
      }
      BOOL v28 = v11 == v25;
      BOOL v29 = v12 == v24;
      BOOL v30 = v13 == v26;
      if (v10 != v23) {
        return result;
      }
      v6.f64[1] = *(float64_t *)(a1 + 80);
      v14.f64[1] = *(float64_t *)(a1 + 144);
      v20.f64[1] = *(float64_t *)(a2 + 80);
      v27.f64[1] = *(float64_t *)(a2 + 144);
      int8x8_t v31 = vand_s8(vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8((int8x16_t)v5, (int8x16_t)v5, 8uLL), (float64x2_t)vextq_s8((int8x16_t)v19, (int8x16_t)v19, 8uLL)), (int32x4_t)vceqq_f64(v4, v18)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v6, v20), (int32x4_t)vceqq_f64(v14, v27)))), 7uLL)), (int8x8_t)0x8040201008040201);
      v31.i8[0] = vaddv_s8(v31);
      if (v31.i32[0] != 255 || v7 != v21 || v9 != v22 || !v28 || !v29 || !v30) {
        return result;
      }
LABEL_16:
      if (((v15 ^ *(unsigned __int8 *)(a2 + 136)) & 1) == 0) {
        return v16 == *(double *)(a2 + 152);
      }
      return result;
    }
    BOOL result = 0;
    BOOL v32 = *(double *)(a1 + 16) == *(double *)(a2 + 16);
    BOOL v33 = v7 == v21;
    BOOL v34 = v9 == v22;
    BOOL v35 = v11 == v25;
    BOOL v36 = v12 == v24;
    BOOL v37 = v13 == v26;
    if (v10 == v23)
    {
      uint16x4_t v38 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v5, v19), (int32x4_t)vceqq_f64(v4, v18))), 0xFuLL));
      v38.i16[0] = vminv_u16(v38);
      if ((v38.i32[0] & v32 & (v6.f64[0] == v20.f64[0]
                             && v8 == *(double *)(a2 + 80)
                             && v14.f64[0] == v27.f64[0]
                             && v17 == *(double *)(a2 + 144)
                             && v33
                             && v34)) != 0
        && ((v35 && v36) & ~*(unsigned __int8 *)(a2 + 24) & v37 & 1) != 0)
      {
        goto LABEL_16;
      }
    }
  }
  return result;
}

unint64_t sub_24ED669A0()
{
  unint64_t result = qword_269965960;
  if (!qword_269965960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965960);
  }
  return result;
}

unint64_t sub_24ED669F4()
{
  unint64_t result = qword_26B1DD638[0];
  if (!qword_26B1DD638[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DD638);
  }
  return result;
}

unint64_t sub_24ED66A48()
{
  unint64_t result = qword_26B1DCF88;
  if (!qword_26B1DCF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCF88);
  }
  return result;
}

unint64_t sub_24ED66A9C()
{
  unint64_t result = qword_269965970;
  if (!qword_269965970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965970);
  }
  return result;
}

unint64_t sub_24ED66AF0()
{
  unint64_t result = qword_269965978;
  if (!qword_269965978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965978);
  }
  return result;
}

unint64_t sub_24ED66B48()
{
  unint64_t result = qword_269965980;
  if (!qword_269965980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965980);
  }
  return result;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t getEnumTagSinglePayload for StandardHorizontalStackViewLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardHorizontalStackViewLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StandardHorizontalStackViewLayout()
{
  return &type metadata for StandardHorizontalStackViewLayout;
}

unsigned char *storeEnumTagSinglePayload for StandardHorizontalStackViewLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED66D64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StandardHorizontalStackViewLayout.CodingKeys()
{
  return &type metadata for StandardHorizontalStackViewLayout.CodingKeys;
}

uint64_t sub_24ED66D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

void sub_24ED66DA4()
{
  sub_24EC96368();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_24EE57430();
      if (v2 <= 0x3F)
      {
        sub_24EC8B890();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_24ED66F04(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v74 = sub_24EE55D70();
  uint64_t v5 = *(void *)(v74 - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v74 - 8) + 64);
  }
  uint64_t v75 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v75 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v78 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v78 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v77 = v11;
  uint64_t v13 = v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(*(void *)(v78 - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v78 - 8) + 64) + 1;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  unsigned int v18 = v12 | *(_DWORD *)(v5 + 80) & 0xF8 | v8 | v17;
  if (((v12 | v8 | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((uint64_t v19 = v10 + 7,
         ((v14
         + v17
         + ((v13
           + 32
           + ((((((((v10
                   + 7
                   + (((v6 & 0xFFFFFFFFFFFFFFF8) + v8 + 168) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)
                 + 39) & 0xFFFFFFFFFFFFFFF8)
               + 39) & 0xFFFFFFFFFFFFFFF8)
             + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & ~v17)
       + *(void *)(*(void *)(v15 - 8) + 64) <= 0x18)
      ? (BOOL v20 = v18 > 7)
      : (BOOL v20 = 1),
        v20))
  {
    uint64_t v25 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v26 = (void *)(v25 + (((v18 | 7) + 16) & ~(unint64_t)(v18 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v21 = a2[v6];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v23 = v6;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v6 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v6 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v6 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v6 < 4) {
LABEL_23:
          }
            unsigned int v21 = (v24 | (v22 << (8 * v6))) + 2;
          else {
LABEL_25:
          }
            unsigned int v21 = v24 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v70 = v13 + 32;
    uint64_t v71 = *(void *)(v15 - 8);
    uint64_t v76 = *(_DWORD *)(v16 + 80);
    size_t __n = v14;
    uint64_t v73 = v15;
    uint64_t v27 = v6 + 1;
    uint64_t v28 = ~v9;
    uint64_t v26 = a1;
    if (v21 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, v74);
      char v29 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v29 = 0;
    }
    *((unsigned char *)a1 + v6) = v29;
    BOOL v30 = (_OWORD *)(((unint64_t)a1 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
    int8x8_t v31 = (_OWORD *)((unint64_t)&a2[v27 + 7] & 0xFFFFFFFFFFFFFFF8);
    long long v32 = v31[1];
    *BOOL v30 = *v31;
    v30[1] = v32;
    long long v33 = v31[2];
    long long v34 = v31[3];
    long long v35 = v31[5];
    v30[4] = v31[4];
    v30[5] = v35;
    v30[2] = v33;
    v30[3] = v34;
    long long v36 = v31[6];
    long long v37 = v31[7];
    long long v38 = v31[9];
    v30[8] = v31[8];
    v30[9] = v38;
    v30[6] = v36;
    v30[7] = v37;
    uint64_t v39 = ((unint64_t)v30 + v9 + 160) & v28;
    uint64_t v40 = ((unint64_t)v31 + v9 + 160) & v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v39, v40, v75);
    unint64_t v41 = (v19 + v39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (v19 + v40) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v42 + 24) < 0xFFFFFFFFuLL)
    {
      long long v46 = *(_OWORD *)(v42 + 16);
      *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
      *(_OWORD *)(v41 + 16) = v46;
    }
    else
    {
      uint64_t v43 = *(void *)v42;
      uint64_t v44 = *(void *)(v42 + 8);
      char v45 = *(unsigned char *)(v42 + 16);
      sub_24EC8A97C(*(void *)v42, v44, v45);
      *(void *)unint64_t v41 = v43;
      *(void *)(v41 + 8) = v44;
      *(unsigned char *)(v41 + 16) = v45;
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v47 = (v41 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (v42 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v48 + 24) < 0xFFFFFFFFuLL)
    {
      long long v52 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v52;
    }
    else
    {
      uint64_t v49 = *(void *)v48;
      uint64_t v50 = *(void *)(v48 + 8);
      char v51 = *(unsigned char *)(v48 + 16);
      sub_24EC8A97C(*(void *)v48, v50, v51);
      *(void *)unint64_t v47 = v49;
      *(void *)(v47 + 8) = v50;
      *(unsigned char *)(v47 + 16) = v51;
      *(void *)(v47 + 24) = *(void *)(v48 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v53 = (v47 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v54 = (v48 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v54 + 24) < 0xFFFFFFFFuLL)
    {
      long long v58 = *(_OWORD *)(v54 + 16);
      *(_OWORD *)unint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v58;
    }
    else
    {
      uint64_t v55 = *(void *)v54;
      uint64_t v56 = *(void *)(v54 + 8);
      char v57 = *(unsigned char *)(v54 + 16);
      sub_24EC8A97C(*(void *)v54, v56, v57);
      *(void *)unint64_t v53 = v55;
      *(void *)(v53 + 8) = v56;
      *(unsigned char *)(v53 + 16) = v57;
      *(void *)(v53 + 24) = *(void *)(v54 + 24);
      swift_bridgeObjectRetain();
    }
    uint64_t v59 = ~v13;
    unint64_t v60 = (v53 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v61 = (v54 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v61 + 24) < 0xFFFFFFFFuLL)
    {
      long long v65 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)unint64_t v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v65;
    }
    else
    {
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *(void *)(v61 + 8);
      char v64 = *(unsigned char *)(v61 + 16);
      sub_24EC8A97C(*(void *)v61, v63, v64);
      *(void *)unint64_t v60 = v62;
      *(void *)(v60 + 8) = v63;
      *(unsigned char *)(v60 + 16) = v64;
      *(void *)(v60 + 24) = *(void *)(v61 + 24);
      swift_bridgeObjectRetain();
    }
    uint64_t v66 = (void *)((v70 + v60) & v59);
    uint64_t v67 = (const void *)((v70 + v61) & v59);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48))(v67, 1, v78))
    {
      size_t v68 = __n;
      memcpy(v66, v67, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v77 + 16))(v66, v67, v78);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v66, 0, 1, v78);
      size_t v68 = __n;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(((unint64_t)v66 + v68 + v76) & ~v76, ((unint64_t)v67 + v68 + v76) & ~v76, v73);
  }
  return v26;
}

uint64_t sub_24ED67504(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55D70();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v5 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
        if (v5 < 4)
        {
LABEL_14:
          unsigned int v6 = (v9 | (v7 << (8 * v5))) + 2;
          break;
        }
LABEL_18:
        if (v9 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v6 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  else {
LABEL_19:
  }
    swift_release();
  unint64_t v10 = (unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v12 = v11 + 8;
  unint64_t v13 = (v10 + *(unsigned __int8 *)(v11 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t))(v11 + 8))(v13);
  unint64_t v14 = (*(void *)(v12 + 56) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v14 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v15 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v16 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v16 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
    swift_bridgeObjectRelease();
  }
  unint64_t v17 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (v17 + *(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18)) {
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
  }
  int v21 = *(_DWORD *)(v19 + 84);
  uint64_t v22 = *(void *)(v19 + 64);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = v22 + v20;
  if (!v21) {
    ++v27;
  }
  return v25((v27 + v26) & ~v26, v23);
}

void *sub_24ED6785C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  unint64_t v13 = (_OWORD *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = (_OWORD *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  long long v15 = v14[1];
  *unint64_t v13 = *v14;
  v13[1] = v15;
  long long v16 = v14[2];
  long long v17 = v14[3];
  long long v18 = v14[5];
  v13[4] = v14[4];
  v13[5] = v18;
  v13[2] = v16;
  v13[3] = v17;
  long long v19 = v14[6];
  long long v20 = v14[7];
  long long v21 = v14[9];
  v13[8] = v14[8];
  v13[9] = v21;
  v13[6] = v19;
  v13[7] = v20;
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v23 = v22 + 16;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = ((unint64_t)v13 + v24 + 160) & ~v24;
  uint64_t v26 = ((unint64_t)v14 + v24 + 160) & ~v24;
  (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v23 + 48) + 7;
  unint64_t v28 = (v27 + v25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v27 + v26) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v29 + 24) < 0xFFFFFFFFuLL)
  {
    long long v33 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v33;
  }
  else
  {
    uint64_t v30 = *(void *)v29;
    uint64_t v31 = *(void *)(v29 + 8);
    char v32 = *(unsigned char *)(v29 + 16);
    sub_24EC8A97C(*(void *)v29, v31, v32);
    *(void *)unint64_t v28 = v30;
    *(void *)(v28 + 8) = v31;
    *(unsigned char *)(v28 + 16) = v32;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v34 = (v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v29 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v35 + 24) < 0xFFFFFFFFuLL)
  {
    long long v39 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v39;
  }
  else
  {
    uint64_t v36 = *(void *)v35;
    uint64_t v37 = *(void *)(v35 + 8);
    char v38 = *(unsigned char *)(v35 + 16);
    sub_24EC8A97C(*(void *)v35, v37, v38);
    *(void *)unint64_t v34 = v36;
    *(void *)(v34 + 8) = v37;
    *(unsigned char *)(v34 + 16) = v38;
    *(void *)(v34 + 24) = *(void *)(v35 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v40 = (v34 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v35 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v41 + 24) < 0xFFFFFFFFuLL)
  {
    long long v45 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v45;
  }
  else
  {
    uint64_t v42 = *(void *)v41;
    uint64_t v43 = *(void *)(v41 + 8);
    char v44 = *(unsigned char *)(v41 + 16);
    sub_24EC8A97C(*(void *)v41, v43, v44);
    *(void *)unint64_t v40 = v42;
    *(void *)(v40 + 8) = v43;
    *(unsigned char *)(v40 + 16) = v44;
    *(void *)(v40 + 24) = *(void *)(v41 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v46 = (v40 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v41 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v47 + 24) < 0xFFFFFFFFuLL)
  {
    long long v51 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)unint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v51;
  }
  else
  {
    uint64_t v48 = *(void *)v47;
    uint64_t v49 = *(void *)(v47 + 8);
    char v50 = *(unsigned char *)(v47 + 16);
    sub_24EC8A97C(*(void *)v47, v49, v50);
    *(void *)unint64_t v46 = v48;
    *(void *)(v46 + 8) = v49;
    *(unsigned char *)(v46 + 16) = v50;
    *(void *)(v46 + 24) = *(void *)(v47 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v52 = *(void *)(a3 + 24);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = (void *)((v46 + v54 + 32) & ~v54);
  uint64_t v56 = (const void *)((v47 + v54 + 32) & ~v54);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v56, 1, v52))
  {
    int v57 = *(_DWORD *)(v53 + 84);
    size_t v58 = *(void *)(v53 + 64);
    if (v57) {
      size_t v59 = v58;
    }
    else {
      size_t v59 = v58 + 1;
    }
    memcpy(v55, v56, v59);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 16))(v55, v56, v52);
    unint64_t v61 = *(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56);
    uint64_t v60 = v53 + 56;
    v61(v55, 0, 1, v52);
    int v57 = *(_DWORD *)(v60 + 28);
    size_t v58 = *(void *)(v60 + 8);
  }
  if (v57) {
    size_t v62 = v58;
  }
  else {
    size_t v62 = v58 + 1;
  }
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v64 = *(void *)(v63 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 16))(((unint64_t)v55 + v62 + *(unsigned __int8 *)(v64 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80), ((unint64_t)v56 + v62 + *(unsigned __int8 *)(v64 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80), v63);
  return a1;
}

unsigned __int8 *sub_24ED67D14(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 8;
  unint64_t v19 = (unint64_t)&a1[v18] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)&a2[v18] & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  char v21 = *(unsigned char *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(unsigned char *)(v19 + 24) = v21;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = *(void *)(v20 + 40);
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(void *)(v19 + 56) = *(void *)(v20 + 56);
  *(void *)(v19 + 64) = *(void *)(v20 + 64);
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  *(void *)(v19 + 80) = *(void *)(v20 + 80);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);
  *(unsigned char *)(v19 + 96) = *(unsigned char *)(v20 + 96);
  *(void *)(v19 + 104) = *(void *)(v20 + 104);
  *(void *)(v19 + 112) = *(void *)(v20 + 112);
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  *(void *)(v19 + 128) = *(void *)(v20 + 128);
  *(unsigned char *)(v19 + 136) = *(unsigned char *)(v20 + 136);
  *(void *)(v19 + 144) = *(void *)(v20 + 144);
  *(void *)(v19 + 152) = *(void *)(v20 + 152);
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v23 = v22 + 24;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = (v24 + 160 + v19) & ~v24;
  uint64_t v26 = (v24 + 160 + v20) & ~v24;
  (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v23 + 40) + 7;
  unint64_t v28 = (v27 + v25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v27 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = *(void *)(v29 + 24);
  if (*(void *)(v28 + 24) < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      uint64_t v37 = *(void *)v29;
      uint64_t v38 = *(void *)(v29 + 8);
      char v39 = *(unsigned char *)(v29 + 16);
      sub_24EC8A97C(*(void *)v29, v38, v39);
      *(void *)unint64_t v28 = v37;
      *(void *)(v28 + 8) = v38;
      *(unsigned char *)(v28 + 16) = v39;
      *(void *)(v28 + 24) = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_46;
    }
  }
  else
  {
    if (v30 >= 0xFFFFFFFF)
    {
      uint64_t v31 = *(void *)v29;
      uint64_t v32 = *(void *)(v29 + 8);
      char v33 = *(unsigned char *)(v29 + 16);
      sub_24EC8A97C(*(void *)v29, v32, v33);
      uint64_t v34 = *(void *)v28;
      uint64_t v35 = *(void *)(v28 + 8);
      char v36 = *(unsigned char *)(v28 + 16);
      *(void *)unint64_t v28 = v31;
      *(void *)(v28 + 8) = v32;
      *(unsigned char *)(v28 + 16) = v33;
      sub_24EC8AAA0(v34, v35, v36);
      *(void *)(v28 + 24) = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_24EC8AAA0(*(void *)v28, *(void *)(v28 + 8), *(unsigned char *)(v28 + 16));
    swift_bridgeObjectRelease();
  }
  long long v40 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v40;
LABEL_46:
  unint64_t v41 = (v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v29 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = *(void *)(v42 + 24);
  if (*(void *)(v41 + 24) < 0xFFFFFFFFuLL)
  {
    if (v43 >= 0xFFFFFFFF)
    {
      uint64_t v50 = *(void *)v42;
      uint64_t v51 = *(void *)(v42 + 8);
      char v52 = *(unsigned char *)(v42 + 16);
      sub_24EC8A97C(*(void *)v42, v51, v52);
      *(void *)unint64_t v41 = v50;
      *(void *)(v41 + 8) = v51;
      *(unsigned char *)(v41 + 16) = v52;
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_53;
    }
  }
  else
  {
    if (v43 >= 0xFFFFFFFF)
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *(void *)(v42 + 8);
      char v46 = *(unsigned char *)(v42 + 16);
      sub_24EC8A97C(*(void *)v42, v45, v46);
      uint64_t v47 = *(void *)v41;
      uint64_t v48 = *(void *)(v41 + 8);
      char v49 = *(unsigned char *)(v41 + 16);
      *(void *)unint64_t v41 = v44;
      *(void *)(v41 + 8) = v45;
      *(unsigned char *)(v41 + 16) = v46;
      sub_24EC8AAA0(v47, v48, v49);
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    sub_24EC8AAA0(*(void *)v41, *(void *)(v41 + 8), *(unsigned char *)(v41 + 16));
    swift_bridgeObjectRelease();
  }
  long long v53 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v53;
LABEL_53:
  unint64_t v54 = (v41 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v42 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = *(void *)(v55 + 24);
  if (*(void *)(v54 + 24) < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      uint64_t v63 = *(void *)v55;
      uint64_t v64 = *(void *)(v55 + 8);
      char v65 = *(unsigned char *)(v55 + 16);
      sub_24EC8A97C(*(void *)v55, v64, v65);
      *(void *)unint64_t v54 = v63;
      *(void *)(v54 + 8) = v64;
      *(unsigned char *)(v54 + 16) = v65;
      *(void *)(v54 + 24) = *(void *)(v55 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_60;
    }
  }
  else
  {
    if (v56 >= 0xFFFFFFFF)
    {
      uint64_t v57 = *(void *)v55;
      uint64_t v58 = *(void *)(v55 + 8);
      char v59 = *(unsigned char *)(v55 + 16);
      sub_24EC8A97C(*(void *)v55, v58, v59);
      uint64_t v60 = *(void *)v54;
      uint64_t v61 = *(void *)(v54 + 8);
      char v62 = *(unsigned char *)(v54 + 16);
      *(void *)unint64_t v54 = v57;
      *(void *)(v54 + 8) = v58;
      *(unsigned char *)(v54 + 16) = v59;
      sub_24EC8AAA0(v60, v61, v62);
      *(void *)(v54 + 24) = *(void *)(v55 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
    sub_24EC8AAA0(*(void *)v54, *(void *)(v54 + 8), *(unsigned char *)(v54 + 16));
    swift_bridgeObjectRelease();
  }
  long long v66 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)unint64_t v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v66;
LABEL_60:
  unint64_t v67 = (v54 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = (v55 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = *(void *)(v68 + 24);
  if (*(void *)(v67 + 24) < 0xFFFFFFFFuLL)
  {
    if (v69 >= 0xFFFFFFFF)
    {
      uint64_t v76 = *(void *)v68;
      uint64_t v77 = *(void *)(v68 + 8);
      char v78 = *(unsigned char *)(v68 + 16);
      sub_24EC8A97C(*(void *)v68, v77, v78);
      *(void *)unint64_t v67 = v76;
      *(void *)(v67 + 8) = v77;
      *(unsigned char *)(v67 + 16) = v78;
      *(void *)(v67 + 24) = *(void *)(v68 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_67;
    }
  }
  else
  {
    if (v69 >= 0xFFFFFFFF)
    {
      uint64_t v70 = *(void *)v68;
      uint64_t v71 = *(void *)(v68 + 8);
      char v72 = *(unsigned char *)(v68 + 16);
      sub_24EC8A97C(*(void *)v68, v71, v72);
      uint64_t v73 = *(void *)v67;
      uint64_t v74 = *(void *)(v67 + 8);
      char v75 = *(unsigned char *)(v67 + 16);
      *(void *)unint64_t v67 = v70;
      *(void *)(v67 + 8) = v71;
      *(unsigned char *)(v67 + 16) = v72;
      sub_24EC8AAA0(v73, v74, v75);
      *(void *)(v67 + 24) = *(void *)(v68 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    sub_24EC8AAA0(*(void *)v67, *(void *)(v67 + 8), *(unsigned char *)(v67 + 16));
    swift_bridgeObjectRelease();
  }
  long long v79 = *(_OWORD *)(v68 + 16);
  *(_OWORD *)unint64_t v67 = *(_OWORD *)v68;
  *(_OWORD *)(v67 + 16) = v79;
LABEL_67:
  uint64_t v80 = *(void *)(a3 + 24);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = *(unsigned __int8 *)(v81 + 80);
  char v83 = (void *)((v67 + v82 + 32) & ~v82);
  unint64_t v84 = (void *)((v68 + v82 + 32) & ~v82);
  uint64_t v85 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v81 + 48);
  int v86 = v85(v83, 1, v80);
  int v87 = v85(v84, 1, v80);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(void *, void *, uint64_t))(v81 + 16))(v83, v84, v80);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v80);
      goto LABEL_78;
    }
    int v88 = *(_DWORD *)(v81 + 84);
    size_t v89 = *(void *)(v81 + 64);
  }
  else
  {
    if (!v87)
    {
      (*(void (**)(void *, void *, uint64_t))(v81 + 24))(v83, v84, v80);
      goto LABEL_78;
    }
    (*(void (**)(void *, uint64_t))(v81 + 8))(v83, v80);
    int v88 = *(_DWORD *)(v81 + 84);
    size_t v89 = *(void *)(v81 + 64);
  }
  if (v88) {
    size_t v90 = v89;
  }
  else {
    size_t v90 = v89 + 1;
  }
  memcpy(v83, v84, v90);
LABEL_78:
  if (*(_DWORD *)(v81 + 84)) {
    uint64_t v91 = *(void *)(v81 + 64);
  }
  else {
    uint64_t v91 = *(void *)(v81 + 64) + 1;
  }
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v93 = *(void *)(v92 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 24))(((unint64_t)v83 + v91 + *(unsigned __int8 *)(v93 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80), ((unint64_t)v84 + v91 + *(unsigned __int8 *)(v93 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80), v92);
  return a1;
}

void *sub_24ED685A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55D70();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  unsigned int v13 = (_OWORD *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v14 = (_OWORD *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  long long v15 = v14[1];
  *unsigned int v13 = *v14;
  v13[1] = v15;
  long long v16 = v14[2];
  long long v17 = v14[3];
  long long v18 = v14[5];
  v13[4] = v14[4];
  v13[5] = v18;
  v13[2] = v16;
  v13[3] = v17;
  long long v19 = v14[6];
  long long v20 = v14[7];
  long long v21 = v14[9];
  v13[8] = v14[8];
  v13[9] = v21;
  v13[6] = v19;
  v13[7] = v20;
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v23 = v22 + 32;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = ((unint64_t)v13 + v24 + 160) & ~v24;
  uint64_t v26 = ((unint64_t)v14 + v24 + 160) & ~v24;
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v23 + 32) + 7;
  unint64_t v28 = (_OWORD *)((v27 + v25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (_OWORD *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  long long v30 = v29[1];
  *unint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = (_OWORD *)(((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (_OWORD *)(((unint64_t)v29 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (_OWORD *)(((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (_OWORD *)(((unint64_t)v32 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = (_OWORD *)(((unint64_t)v34 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (_OWORD *)(((unint64_t)v35 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = *(void *)(a3 + 24);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  unint64_t v43 = (void *)(((unint64_t)v37 + v42 + 32) & ~v42);
  uint64_t v44 = (const void *)(((unint64_t)v38 + v42 + 32) & ~v42);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v44, 1, v40))
  {
    int v45 = *(_DWORD *)(v41 + 84);
    size_t v46 = *(void *)(v41 + 64);
    if (v45) {
      size_t v47 = v46;
    }
    else {
      size_t v47 = v46 + 1;
    }
    memcpy(v43, v44, v47);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v43, v44, v40);
    char v49 = *(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56);
    uint64_t v48 = v41 + 56;
    v49(v43, 0, 1, v40);
    int v45 = *(_DWORD *)(v48 + 28);
    size_t v46 = *(void *)(v48 + 8);
  }
  if (v45) {
    size_t v50 = v46;
  }
  else {
    size_t v50 = v46 + 1;
  }
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v52 = *(void *)(v51 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 32))(((unint64_t)v43 + v50 + *(unsigned __int8 *)(v52 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80), ((unint64_t)v44 + v50 + *(unsigned __int8 *)(v52 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80), v51);
  return a1;
}

unsigned __int8 *sub_24ED6893C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_24EE55D70();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 8;
  unint64_t v20 = (unint64_t)&a1[v19] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (unint64_t)&a2[v19] & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  char v22 = *(unsigned char *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(unsigned char *)(v20 + 24) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = *(void *)(v21 + 40);
  *(void *)(v20 + 48) = *(void *)(v21 + 48);
  *(void *)(v20 + 56) = *(void *)(v21 + 56);
  *(void *)(v20 + 64) = *(void *)(v21 + 64);
  *(void *)(v20 + 72) = *(void *)(v21 + 72);
  *(void *)(v20 + 80) = *(void *)(v21 + 80);
  *(void *)(v20 + 88) = *(void *)(v21 + 88);
  *(unsigned char *)(v20 + 96) = *(unsigned char *)(v21 + 96);
  *(void *)(v20 + 104) = *(void *)(v21 + 104);
  *(void *)(v20 + 112) = *(void *)(v21 + 112);
  *(void *)(v20 + 120) = *(void *)(v21 + 120);
  *(void *)(v20 + 128) = *(void *)(v21 + 128);
  *(unsigned char *)(v20 + 136) = *(unsigned char *)(v21 + 136);
  *(void *)(v20 + 144) = *(void *)(v21 + 144);
  *(void *)(v20 + 152) = *(void *)(v21 + 152);
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v24 = v23 + 40;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = (v25 + 160 + v20) & ~v25;
  uint64_t v27 = (v25 + 160 + v21) & ~v25;
  (*(void (**)(uint64_t, uint64_t))(v23 + 40))(v26, v27);
  uint64_t v28 = *(void *)(v24 + 24) + 7;
  unint64_t v29 = (v28 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v28 + v27) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v29 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v30 + 24) >= 0xFFFFFFFFuLL)
    {
      char v31 = *(unsigned char *)(v30 + 16);
      uint64_t v32 = *(void *)v29;
      uint64_t v33 = *(void *)(v29 + 8);
      char v34 = *(unsigned char *)(v29 + 16);
      *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
      *(unsigned char *)(v29 + 16) = v31;
      sub_24EC8AAA0(v32, v33, v34);
      *(void *)(v29 + 24) = *(void *)(v30 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_24EC8AAA0(*(void *)v29, *(void *)(v29 + 8), *(unsigned char *)(v29 + 16));
    swift_bridgeObjectRelease();
  }
  long long v35 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v35;
LABEL_45:
  unint64_t v36 = (v29 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v36 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v37 + 24) >= 0xFFFFFFFFuLL)
    {
      char v38 = *(unsigned char *)(v37 + 16);
      uint64_t v39 = *(void *)v36;
      uint64_t v40 = *(void *)(v36 + 8);
      char v41 = *(unsigned char *)(v36 + 16);
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
      *(unsigned char *)(v36 + 16) = v38;
      sub_24EC8AAA0(v39, v40, v41);
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    sub_24EC8AAA0(*(void *)v36, *(void *)(v36 + 8), *(unsigned char *)(v36 + 16));
    swift_bridgeObjectRelease();
  }
  long long v42 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v42;
LABEL_50:
  unint64_t v43 = (v36 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v37 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v43 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v44 + 24) >= 0xFFFFFFFFuLL)
    {
      char v45 = *(unsigned char *)(v44 + 16);
      uint64_t v46 = *(void *)v43;
      uint64_t v47 = *(void *)(v43 + 8);
      char v48 = *(unsigned char *)(v43 + 16);
      *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
      *(unsigned char *)(v43 + 16) = v45;
      sub_24EC8AAA0(v46, v47, v48);
      *(void *)(v43 + 24) = *(void *)(v44 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    sub_24EC8AAA0(*(void *)v43, *(void *)(v43 + 8), *(unsigned char *)(v43 + 16));
    swift_bridgeObjectRelease();
  }
  long long v49 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v49;
LABEL_55:
  unint64_t v50 = (v43 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v44 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v50 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v51 + 24) >= 0xFFFFFFFFuLL)
    {
      char v52 = *(unsigned char *)(v51 + 16);
      uint64_t v53 = *(void *)v50;
      uint64_t v54 = *(void *)(v50 + 8);
      char v55 = *(unsigned char *)(v50 + 16);
      *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
      *(unsigned char *)(v50 + 16) = v52;
      sub_24EC8AAA0(v53, v54, v55);
      *(void *)(v50 + 24) = *(void *)(v51 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
    sub_24EC8AAA0(*(void *)v50, *(void *)(v50 + 8), *(unsigned char *)(v50 + 16));
    swift_bridgeObjectRelease();
  }
  long long v56 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v56;
LABEL_60:
  uint64_t v57 = *(void *)(a3 + 24);
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v60 = (void *)((v50 + v59 + 32) & ~v59);
  uint64_t v61 = (void *)((v51 + v59 + 32) & ~v59);
  char v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  int v63 = v62(v60, 1, v57);
  int v64 = v62(v61, 1, v57);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 32))(v60, v61, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v60, 0, 1, v57);
      goto LABEL_71;
    }
    int v65 = *(_DWORD *)(v58 + 84);
    size_t v66 = *(void *)(v58 + 64);
  }
  else
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 40))(v60, v61, v57);
      goto LABEL_71;
    }
    (*(void (**)(void *, uint64_t))(v58 + 8))(v60, v57);
    int v65 = *(_DWORD *)(v58 + 84);
    size_t v66 = *(void *)(v58 + 64);
  }
  if (v65) {
    size_t v67 = v66;
  }
  else {
    size_t v67 = v66 + 1;
  }
  memcpy(v60, v61, v67);
LABEL_71:
  if (*(_DWORD *)(v58 + 84)) {
    uint64_t v68 = *(void *)(v58 + 64);
  }
  else {
    uint64_t v68 = *(void *)(v58 + 64) + 1;
  }
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v70 = *(void *)(v69 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 40))(((unint64_t)v60 + v68 + *(unsigned __int8 *)(v70 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80), ((unint64_t)v61 + v68 + *(unsigned __int8 *)(v70 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80), v69);
  return a1;
}

uint64_t sub_24ED69078(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  uint64_t v40 = *(void *)(a3 + 16);
  unint64_t v41 = v5;
  uint64_t v6 = *(void *)(v40 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v39 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v39 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v7 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = *(void *)(v12 + 64);
  if (v11 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v17 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v17 = v11;
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v9) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(v6 + 64) + 7;
  uint64_t v21 = v14 + 32;
  uint64_t v22 = v19 + v15;
  if (a2 > v18)
  {
    uint64_t v23 = ((v22
          + ((v21
            + ((((((((v20 + (((v41 & 0xFFFFFFFFFFFFFFF8) + v13 + 168) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                + 39) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v15)
        + v16;
    char v24 = 8
        * (((v22
           + ((v21
             + ((((((((v20 + (((v41 & 0xF8) + v13 - 88) & ~(_BYTE)v13)) & 0xF8) + 39) & 0xF8) + 39) & 0xF8) + 39) & 0xF8)) & ~(_BYTE)v14)) & ~(_BYTE)v15)
         + v16);
    if (v23 > 3) {
      goto LABEL_21;
    }
    unsigned int v26 = ((a2 - v18 + ~(-1 << v24)) >> v24) + 1;
    if (HIWORD(v26))
    {
      int v25 = *(_DWORD *)((char *)a1 + v23);
      if (v25) {
        goto LABEL_28;
      }
    }
    else
    {
      if (v26 <= 0xFF)
      {
        if (v26 < 2) {
          goto LABEL_38;
        }
LABEL_21:
        int v25 = *((unsigned __int8 *)a1 + v23);
        if (!*((unsigned char *)a1 + v23)) {
          goto LABEL_38;
        }
LABEL_28:
        int v27 = (v25 - 1) << v24;
        if (v23 > 3) {
          int v27 = 0;
        }
        if (v23)
        {
          if (v23 <= 3) {
            int v28 = v23;
          }
          else {
            int v28 = 4;
          }
          switch(v28)
          {
            case 2:
              int v29 = *a1;
              break;
            case 3:
              int v29 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v29 = *(_DWORD *)a1;
              break;
            default:
              int v29 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v29 = 0;
        }
        return v18 + (v29 | v27) + 1;
      }
      int v25 = *(unsigned __int16 *)((char *)a1 + v23);
      if (*(unsigned __int16 *)((char *)a1 + v23)) {
        goto LABEL_28;
      }
    }
  }
LABEL_38:
  unint64_t v30 = ((((unint64_t)a1 + v41 + 8) & 0xFFFFFFFFFFFFFFF8) + v13 + 160) & ~v13;
  if (v7 == v18)
  {
    char v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    return v31(v30, v7, v40);
  }
  unint64_t v33 = (v20 + v30) & 0xFFFFFFFFFFFFFFF8;
  if (v17 <= 0x7FFFFFFE)
  {
    unint64_t v34 = *(void *)(v33 + 24);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    if ((v34 + 1) >= 2) {
      return v34;
    }
    else {
      return 0;
    }
  }
  unint64_t v35 = (v21 + ((((((v33 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v14;
  if (v10 == v18)
  {
    if (v9 >= 2)
    {
      unsigned int v38 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v35, v9, v39);
      if (v38 >= 2) {
        return v38 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v36 = (v22 + v35) & ~v15;
  unint64_t v37 = *(uint64_t (**)(unint64_t))(v12 + 48);
  return v37(v36);
}

void sub_24ED694A8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v6 = *(void *)(*(void *)(sub_24EE55D70() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v36 = *(void *)(a4 + 24);
  uint64_t v8 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v37 = v8;
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v36 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v9 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  int v14 = 0;
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  if (v13 <= *(_DWORD *)(v15 + 84)) {
    unsigned int v20 = *(_DWORD *)(v15 + 84);
  }
  else {
    unsigned int v20 = v13;
  }
  if (v20 <= 0x7FFFFFFE) {
    unsigned int v21 = 2147483646;
  }
  else {
    unsigned int v21 = v20;
  }
  if (v11) {
    uint64_t v22 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v23 = v22 + v19;
  size_t v24 = ((v23
        + ((v18
          + 32
          + ((((((((v17 + 7 + (((v7 & 0xFFFFFFFFFFFFFFF8) + v16 + 168) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)
            + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & ~v19)
      + *(void *)(v15 + 64);
  if (a3 > v21)
  {
    if (v24 <= 3)
    {
      unsigned int v25 = ((a3 - v21 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
      if (HIWORD(v25))
      {
        int v14 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v14 = 2;
      }
      else
      {
        int v14 = v25 > 1;
      }
    }
    else
    {
      int v14 = 1;
    }
  }
  if (v21 < a2)
  {
    unsigned int v26 = ~v21 + a2;
    if (v24 < 4)
    {
      int v27 = (v26 >> (8
                   * (((v23
                      + ((v18
                        + 32
                        + ((((((((v17 + 7 + (((v7 & 0xF8) + v16 - 88) & ~(_BYTE)v16)) & 0xF8) + 39) & 0xF8) + 39) & 0xF8)
                          + 39) & 0xF8)) & ~(_BYTE)v18)) & ~(_BYTE)v19)
                    + *(unsigned char *)(v15 + 64))))
          + 1;
      if (v24)
      {
        int v28 = v26 & ~(-1 << (8
                           * (((v23
                              + ((v18
                                + 32
                                + ((((((((v17 + 7 + (((v7 & 0xF8) + v16 - 88) & ~(_BYTE)v16)) & 0xF8) + 39) & 0xF8) + 39) & 0xF8)
                                  + 39) & 0xF8)) & ~(_BYTE)v18)) & ~(_BYTE)v19)
                            + *(unsigned char *)(v15 + 64))));
        bzero(a1, v24);
        if (v24 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if (v24 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v26;
      int v27 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v24] = v27;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v27;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)&a1[v24] = v27;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x24ED69984);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (a2)
      {
LABEL_39:
        unint64_t v29 = (((unint64_t)&a1[v7 + 8] & 0xFFFFFFFFFFFFFFF8) + v16 + 160) & ~v16;
        if (v9 == v21)
        {
          unint64_t v30 = *(void (**)(unint64_t))(v37 + 56);
          v30(v29);
        }
        else
        {
          unint64_t v31 = (v17 + 7 + v29) & 0xFFFFFFFFFFFFFFF8;
          if (v20 > 0x7FFFFFFE)
          {
            unint64_t v32 = (v18
                 + 32
                 + ((((((v31 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v18;
            if (v12 == v21)
            {
              if (v11 >= 2)
              {
                unint64_t v33 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v10 + 56);
                v33(v32, a2 + 1, v11, v36);
              }
            }
            else
            {
              unint64_t v34 = (v23 + v32) & ~v19;
              unint64_t v35 = *(void (**)(unint64_t))(v15 + 56);
              v35(v34);
            }
          }
          else if (a2 > 0x7FFFFFFE)
          {
            *(_OWORD *)unint64_t v31 = 0u;
            *(_OWORD *)(v31 + 16) = 0u;
            *(_DWORD *)unint64_t v31 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v31 + 24) = a2;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StandardHorizontalStackView()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ED699C8()
{
  unint64_t result = qword_269965988;
  if (!qword_269965988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965988);
  }
  return result;
}

unint64_t sub_24ED69A20()
{
  unint64_t result = qword_269965990;
  if (!qword_269965990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965990);
  }
  return result;
}

unint64_t sub_24ED69A78()
{
  unint64_t result = qword_269965998;
  if (!qword_269965998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965998);
  }
  return result;
}

uint64_t sub_24ED69ACC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED69B10()
{
  return sub_24ED69DA0((uint64_t (*)(void, void, void, void, void))sub_24ED62734);
}

unint64_t sub_24ED69B28()
{
  unint64_t result = qword_2699659C8;
  if (!qword_2699659C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659B8);
    sub_24ED69B9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699659C8);
  }
  return result;
}

unint64_t sub_24ED69B9C()
{
  unint64_t result = qword_2699659D0;
  if (!qword_2699659D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659B0);
    sub_24ED6A1D8(&qword_2699659D8, &qword_2699659A8, (void (*)(void))sub_24ED69C74);
    sub_24ED69D20((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699659D0);
  }
  return result;
}

unint64_t sub_24ED69C74()
{
  unint64_t result = qword_2699659E0;
  if (!qword_2699659E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699659A0);
    sub_24ED69D20((unint64_t *)&qword_26B1DE490, MEMORY[0x263F1B7B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699659E0);
  }
  return result;
}

uint64_t sub_24ED69D20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED69D70()
{
  return sub_24ED69DA0((uint64_t (*)(void, void, void, void, void))sub_24ED6367C);
}

uint64_t sub_24ED69D88()
{
  return sub_24ED69DA0((uint64_t (*)(void, void, void, void, void))sub_24ED63A54);
}

uint64_t sub_24ED69DA0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24ED69DBC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for StandardHorizontalStackView() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_24ED64028(v8, v3, v4, v5, v6, a1);
}

uint64_t sub_24ED69E68()
{
  return sub_24ED69E98((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_24ED65CC4);
}

uint64_t sub_24ED69E80()
{
  return sub_24ED69E98((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_24ED6552C);
}

uint64_t sub_24ED69E98(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[9], v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_24ED69ED8@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED661EC(v1[8], v1[9], v1[2], v1[3], v1[5], v1[6], a1);
}

uint64_t *sub_24ED69EEC(uint64_t *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[16];
  uint64_t v9 = a1[15];
  uint64_t v10 = a1[14];
  uint64_t v8 = a1[17];
  sub_24ED69FBC(*a1, a1[1], a1[2], a1[3]);
  sub_24ED69FBC(v2, v3, v4, v5);
  sub_24ED69FBC(v10, v9, v6, v8);
  return a1;
}

uint64_t sub_24ED69FBC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8AAA0(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ED6A00C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8A97C(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24ED6A05C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 136);
  uint64_t v15 = *(void *)(a1 + 160);
  uint64_t v16 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 176);
  uint64_t v14 = *(void *)(a1 + 168);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 128);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 184);
  a2(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned __int8 *)(a1 + 72));
  a2(v4, v5, v6, v7, v8, v9, v10);
  a2(v18, v17, v16, v15, v14, v13, v11);
  return a1;
}

uint64_t sub_24ED6A140()
{
  return sub_24ED64B38();
}

uint64_t sub_24ED6A1D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24ED6A254()
{
  unint64_t result = qword_269965A28;
  if (!qword_269965A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965A30);
    sub_24EC8C218(&qword_269965A38, &qword_269965A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965A28);
  }
  return result;
}

uint64_t sub_24ED6A2F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EE56020();
  *a1 = result;
  return result;
}

uint64_t sub_24ED6A320()
{
  return sub_24EE56030();
}

uint64_t sub_24ED6A34C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EE55FC0();
  *a1 = result;
  return result;
}

uint64_t sub_24ED6A378()
{
  return sub_24EE55FD0();
}

uint64_t sub_24ED6A3AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EE7C0D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C770 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EE7C790 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEE00797469736E65 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C7B0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E694C656C746974 && a2 == 0xEE0074696D694C65 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EE7C6B0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C6D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x486B726F77747261 && a2 == 0xED00007468676965 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x76656843776F6873 && a2 == 0xEB000000006E6F72 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C7D0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EE7C7F0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_24ED6A93C()
{
  return swift_getWitnessTable();
}

uint64_t CanvasItemPlaceholder.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CanvasItemPlaceholder.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24EC8EF70(v2 + *(int *)(a1 + 52), (uint64_t)v5);
  return sub_24EC8EF70((uint64_t)v5, a2);
}

uint64_t CanvasItemPlaceholder.init(identifier:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_24EC8EF70(a2, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1, a3);
  uint64_t v7 = type metadata accessor for CanvasItemPlaceholder();
  return sub_24EC8EF70((uint64_t)v9, a4 + *(int *)(v7 + 52));
}

uint64_t type metadata accessor for CanvasItemPlaceholder()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED6AF18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ED6B018(char a1)
{
  if (a1) {
    return 0x746E65746E6F63;
  }
  else {
    return 0x696669746E656469;
  }
}

BOOL sub_24ED6B054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24ECB08AC(*a1, *a2);
}

uint64_t sub_24ED6B06C()
{
  return sub_24ECB0B4C();
}

uint64_t sub_24ED6B080()
{
  return sub_24ECB08BC();
}

uint64_t sub_24ED6B094()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED6B0E0()
{
  return sub_24ED6B018(*v0);
}

uint64_t sub_24ED6B0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED6AF18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED6B128@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ECB370C();
  *a1 = result;
  return result;
}

uint64_t sub_24ED6B15C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED6B1B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CanvasItemPlaceholder.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v3;
  uint64_t v12 = a2;
  v18[0] = v13;
  v18[1] = v3;
  type metadata accessor for CanvasItemPlaceholder.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_24EE577C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = v15;
  sub_24EE578D0();
  char v19 = 0;
  uint64_t v9 = v20;
  sub_24EE577B0();
  if (!v9)
  {
    sub_24EC8EF70(v8 + *(int *)(v12 + 52), (uint64_t)v18);
    sub_24EC8EF70((uint64_t)v18, (uint64_t)&v17);
    char v16 = 1;
    sub_24ED6B408();
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t type metadata accessor for CanvasItemPlaceholder.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24ED6B408()
{
  unint64_t result = qword_269965A48;
  if (!qword_269965A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965A48);
  }
  return result;
}

uint64_t CanvasItemPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a6;
  uint64_t v30 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v32 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  uint64_t v40 = v15;
  type metadata accessor for CanvasItemPlaceholder.CodingKeys();
  swift_getWitnessTable();
  uint64_t v34 = sub_24EE57730();
  uint64_t v29 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v33 = a2;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v31 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v18 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v27 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v27 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = v35;
  sub_24EE578C0();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v29;
  uint64_t v23 = v30;
  uint64_t v35 = v18;
  LOBYTE(v37) = 0;
  sub_24EE57710();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v32, v33);
  char v41 = 1;
  sub_24ED6B824();
  sub_24EE57710();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v34);
  sub_24EC8EF70((uint64_t)&v37, (uint64_t)v36);
  uint64_t v24 = v35;
  sub_24EC8EF70((uint64_t)v36, (uint64_t)&v20[*(int *)(v35 + 52)]);
  uint64_t v25 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v28, v20, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v24);
}

unint64_t sub_24ED6B824()
{
  unint64_t result = qword_269965A50[0];
  if (!qword_269965A50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269965A50);
  }
  return result;
}

uint64_t sub_24ED6B878@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return CanvasItemPlaceholder.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_24ED6B89C(void *a1, uint64_t a2)
{
  return CanvasItemPlaceholder.encode(to:)(a1, a2);
}

uint64_t CanvasItemPlaceholder.hash(into:)(uint64_t a1, uint64_t a2)
{
  sub_24EE57000();
  sub_24EC8EF70(v2 + *(int *)(a2 + 52), (uint64_t)v6);
  sub_24EC8EF70((uint64_t)v6, (uint64_t)&v5);
  return LazyCanvasItemContent.hash(into:)();
}

uint64_t static CanvasItemPlaceholder.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (sub_24EE57040())
  {
    v18[0] = a3;
    v18[1] = a4;
    v18[2] = a5;
    v18[3] = a6;
    uint64_t v12 = type metadata accessor for CanvasItemPlaceholder();
    sub_24EC8EF70(a1 + *(int *)(v12 + 52), (uint64_t)v17);
    sub_24EC8EF70((uint64_t)v17, (uint64_t)v16);
    sub_24EC8EF70(a2 + *(int *)(v12 + 52), (uint64_t)v18);
    sub_24EC8EF70((uint64_t)v18, (uint64_t)v15);
    char v13 = _s15FitnessCanvasUI04LazyB11ItemContentO2eeoiySbAC_ACtFZ_0((uint64_t)v16, (uint64_t)v15);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t CanvasItemPlaceholder.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  CanvasItemPlaceholder.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ED6BA3C(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  CanvasItemPlaceholder.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ED6BA80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static CanvasItemPlaceholder.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_24ED6BA90()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED6BAAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24ED6BB44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v12 = *(unsigned __int8 *)(v11 + 248);
    if (v12 >= 0xB) {
      unsigned int v12 = *(_DWORD *)v11 + 11;
    }
    unint64_t v13 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    switch(v12)
    {
      case 0u:
        long long v14 = *(_OWORD *)v11;
        long long v15 = *(_OWORD *)(v11 + 16);
        long long v16 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)(v13 + 32) = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 48) = v16;
        *(_OWORD *)unint64_t v13 = v14;
        *(_OWORD *)(v13 + 16) = v15;
        long long v17 = *(_OWORD *)(v11 + 64);
        long long v18 = *(_OWORD *)(v11 + 80);
        long long v19 = *(_OWORD *)(v11 + 112);
        *(_OWORD *)(v13 + 96) = *(_OWORD *)(v11 + 96);
        *(_OWORD *)(v13 + 112) = v19;
        *(_OWORD *)(v13 + 64) = v17;
        *(_OWORD *)(v13 + 80) = v18;
        long long v20 = *(_OWORD *)(v11 + 128);
        long long v21 = *(_OWORD *)(v11 + 144);
        long long v22 = *(_OWORD *)(v11 + 176);
        *(_OWORD *)(v13 + 160) = *(_OWORD *)(v11 + 160);
        *(_OWORD *)(v13 + 176) = v22;
        *(_OWORD *)(v13 + 128) = v20;
        *(_OWORD *)(v13 + 144) = v21;
        long long v23 = *(_OWORD *)(v11 + 192);
        long long v24 = *(_OWORD *)(v11 + 208);
        long long v25 = *(_OWORD *)(v11 + 224);
        *(void *)(v13 + 240) = *(void *)(v11 + 240);
        *(_OWORD *)(v13 + 208) = v24;
        *(_OWORD *)(v13 + 224) = v25;
        *(_OWORD *)(v13 + 192) = v23;
        *(unsigned char *)(v13 + 248) = 0;
        break;
      case 1u:
        long long v38 = *(_OWORD *)(v11 + 16);
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v11;
        *(_OWORD *)(v13 + 16) = v38;
        long long v39 = *(_OWORD *)(v11 + 32);
        long long v40 = *(_OWORD *)(v11 + 48);
        long long v41 = *(_OWORD *)(v11 + 80);
        *(_OWORD *)(v13 + 64) = *(_OWORD *)(v11 + 64);
        *(_OWORD *)(v13 + 80) = v41;
        *(_OWORD *)(v13 + 32) = v39;
        *(_OWORD *)(v13 + 48) = v40;
        long long v42 = *(_OWORD *)(v11 + 96);
        long long v43 = *(_OWORD *)(v11 + 112);
        long long v44 = *(_OWORD *)(v11 + 144);
        *(_OWORD *)(v13 + 128) = *(_OWORD *)(v11 + 128);
        *(_OWORD *)(v13 + 144) = v44;
        *(_OWORD *)(v13 + 96) = v42;
        *(_OWORD *)(v13 + 112) = v43;
        long long v45 = *(_OWORD *)(v11 + 160);
        long long v46 = *(_OWORD *)(v11 + 176);
        long long v47 = *(_OWORD *)(v11 + 208);
        *(_OWORD *)(v13 + 192) = *(_OWORD *)(v11 + 192);
        *(_OWORD *)(v13 + 208) = v47;
        *(_OWORD *)(v13 + 160) = v45;
        *(_OWORD *)(v13 + 176) = v46;
        *(unsigned char *)(v13 + 248) = 1;
        break;
      case 2u:
        long long v48 = *(_OWORD *)v11;
        long long v49 = *(_OWORD *)(v11 + 16);
        long long v50 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)(v13 + 32) = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 48) = v50;
        *(_OWORD *)unint64_t v13 = v48;
        *(_OWORD *)(v13 + 16) = v49;
        *(unsigned char *)(v13 + 248) = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v11;
        *(unsigned char *)(v13 + 248) = 3;
        break;
      case 4u:
        long long v51 = *(_OWORD *)v11;
        *(void *)(v13 + 16) = *(void *)(v11 + 16);
        *(_OWORD *)unint64_t v13 = v51;
        *(unsigned char *)(v13 + 248) = 4;
        break;
      case 5u:
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v11;
        *(unsigned char *)(v13 + 248) = 5;
        break;
      case 6u:
        long long v52 = *(_OWORD *)v11;
        long long v53 = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 16) = *(_OWORD *)(v11 + 16);
        *(_OWORD *)(v13 + 32) = v53;
        *(_OWORD *)unint64_t v13 = v52;
        long long v54 = *(_OWORD *)(v11 + 48);
        long long v55 = *(_OWORD *)(v11 + 64);
        long long v56 = *(_OWORD *)(v11 + 80);
        *(void *)(v13 + 96) = *(void *)(v11 + 96);
        *(_OWORD *)(v13 + 64) = v55;
        *(_OWORD *)(v13 + 80) = v56;
        *(_OWORD *)(v13 + 48) = v54;
        *(unsigned char *)(v13 + 248) = 6;
        break;
      case 7u:
        long long v57 = *(_OWORD *)(v11 + 16);
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v11;
        *(_OWORD *)(v13 + 16) = v57;
        long long v58 = *(_OWORD *)(v11 + 32);
        long long v59 = *(_OWORD *)(v11 + 48);
        long long v60 = *(_OWORD *)(v11 + 80);
        *(_OWORD *)(v13 + 64) = *(_OWORD *)(v11 + 64);
        *(_OWORD *)(v13 + 80) = v60;
        *(_OWORD *)(v13 + 32) = v58;
        *(_OWORD *)(v13 + 48) = v59;
        long long v61 = *(_OWORD *)(v11 + 96);
        long long v62 = *(_OWORD *)(v11 + 112);
        long long v63 = *(_OWORD *)(v11 + 144);
        *(_OWORD *)(v13 + 128) = *(_OWORD *)(v11 + 128);
        *(_OWORD *)(v13 + 144) = v63;
        *(_OWORD *)(v13 + 96) = v61;
        *(_OWORD *)(v13 + 112) = v62;
        *(unsigned char *)(v13 + 248) = 7;
        break;
      case 8u:
        long long v64 = *(_OWORD *)v11;
        long long v65 = *(_OWORD *)(v11 + 16);
        long long v66 = *(_OWORD *)(v11 + 32);
        *(void *)(v13 + 48) = *(void *)(v11 + 48);
        *(_OWORD *)(v13 + 16) = v65;
        *(_OWORD *)(v13 + 32) = v66;
        *(_OWORD *)unint64_t v13 = v64;
        *(unsigned char *)(v13 + 248) = 8;
        break;
      case 9u:
        long long v67 = *(_OWORD *)v11;
        long long v68 = *(_OWORD *)(v11 + 16);
        long long v69 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)(v13 + 32) = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 48) = v69;
        *(_OWORD *)unint64_t v13 = v67;
        *(_OWORD *)(v13 + 16) = v68;
        *(unsigned char *)(v13 + 248) = 9;
        break;
      case 0xAu:
        long long v70 = *(_OWORD *)v11;
        long long v71 = *(_OWORD *)(v11 + 16);
        long long v72 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)(v13 + 32) = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 48) = v72;
        *(_OWORD *)unint64_t v13 = v70;
        *(_OWORD *)(v13 + 16) = v71;
        long long v73 = *(_OWORD *)(v11 + 64);
        long long v74 = *(_OWORD *)(v11 + 80);
        long long v75 = *(_OWORD *)(v11 + 112);
        *(_OWORD *)(v13 + 96) = *(_OWORD *)(v11 + 96);
        *(_OWORD *)(v13 + 112) = v75;
        *(_OWORD *)(v13 + 64) = v73;
        *(_OWORD *)(v13 + 80) = v74;
        *(unsigned char *)(v13 + 248) = 10;
        break;
      default:
        long long v26 = *(_OWORD *)v11;
        long long v27 = *(_OWORD *)(v11 + 16);
        long long v28 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)(v13 + 32) = *(_OWORD *)(v11 + 32);
        *(_OWORD *)(v13 + 48) = v28;
        *(_OWORD *)unint64_t v13 = v26;
        *(_OWORD *)(v13 + 16) = v27;
        long long v29 = *(_OWORD *)(v11 + 64);
        long long v30 = *(_OWORD *)(v11 + 80);
        long long v31 = *(_OWORD *)(v11 + 112);
        *(_OWORD *)(v13 + 96) = *(_OWORD *)(v11 + 96);
        *(_OWORD *)(v13 + 112) = v31;
        *(_OWORD *)(v13 + 64) = v29;
        *(_OWORD *)(v13 + 80) = v30;
        long long v32 = *(_OWORD *)(v11 + 128);
        long long v33 = *(_OWORD *)(v11 + 144);
        long long v34 = *(_OWORD *)(v11 + 176);
        *(_OWORD *)(v13 + 160) = *(_OWORD *)(v11 + 160);
        *(_OWORD *)(v13 + 176) = v34;
        *(_OWORD *)(v13 + 128) = v32;
        *(_OWORD *)(v13 + 144) = v33;
        long long v35 = *(_OWORD *)(v11 + 192);
        long long v36 = *(_OWORD *)(v11 + 208);
        long long v37 = *(_OWORD *)(v11 + 224);
        *(_OWORD *)(v13 + 233) = *(_OWORD *)(v11 + 233);
        *(_OWORD *)(v13 + 208) = v36;
        *(_OWORD *)(v13 + 224) = v37;
        *(_OWORD *)(v13 + 192) = v35;
        break;
    }
  }
  return v4;
}

uint64_t sub_24ED6BEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = v6 + a1;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v9 = *(unsigned __int8 *)(v8 + 248);
  if (v9 >= 0xB) {
    unsigned int v9 = *(_DWORD *)v8 + 11;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  switch(v9)
  {
    case 0u:
      long long v11 = *(_OWORD *)v8;
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v13 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v13;
      *(_OWORD *)unint64_t v10 = v11;
      *(_OWORD *)(v10 + 16) = v12;
      long long v14 = *(_OWORD *)(v8 + 64);
      long long v15 = *(_OWORD *)(v8 + 80);
      long long v16 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v16;
      *(_OWORD *)(v10 + 64) = v14;
      *(_OWORD *)(v10 + 80) = v15;
      long long v17 = *(_OWORD *)(v8 + 128);
      long long v18 = *(_OWORD *)(v8 + 144);
      long long v19 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v8 + 160);
      *(_OWORD *)(v10 + 176) = v19;
      *(_OWORD *)(v10 + 128) = v17;
      *(_OWORD *)(v10 + 144) = v18;
      long long v20 = *(_OWORD *)(v8 + 192);
      long long v21 = *(_OWORD *)(v8 + 208);
      long long v22 = *(_OWORD *)(v8 + 224);
      *(void *)(v10 + 240) = *(void *)(v8 + 240);
      *(_OWORD *)(v10 + 208) = v21;
      *(_OWORD *)(v10 + 224) = v22;
      *(_OWORD *)(v10 + 192) = v20;
      *(unsigned char *)(v10 + 248) = 0;
      return a1;
    case 1u:
      long long v35 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      *(_OWORD *)(v10 + 16) = v35;
      long long v36 = *(_OWORD *)(v8 + 32);
      long long v37 = *(_OWORD *)(v8 + 48);
      long long v38 = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v10 + 80) = v38;
      *(_OWORD *)(v10 + 32) = v36;
      *(_OWORD *)(v10 + 48) = v37;
      long long v39 = *(_OWORD *)(v8 + 96);
      long long v40 = *(_OWORD *)(v8 + 112);
      long long v41 = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v10 + 144) = v41;
      *(_OWORD *)(v10 + 96) = v39;
      *(_OWORD *)(v10 + 112) = v40;
      long long v42 = *(_OWORD *)(v8 + 160);
      long long v43 = *(_OWORD *)(v8 + 176);
      long long v44 = *(_OWORD *)(v8 + 208);
      *(_OWORD *)(v10 + 192) = *(_OWORD *)(v8 + 192);
      *(_OWORD *)(v10 + 208) = v44;
      *(_OWORD *)(v10 + 160) = v42;
      *(_OWORD *)(v10 + 176) = v43;
      char v45 = 1;
      goto LABEL_16;
    case 2u:
      long long v46 = *(_OWORD *)v8;
      long long v47 = *(_OWORD *)(v8 + 16);
      long long v48 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v48;
      *(_OWORD *)unint64_t v10 = v46;
      *(_OWORD *)(v10 + 16) = v47;
      char v45 = 2;
      goto LABEL_16;
    case 3u:
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      char v45 = 3;
      goto LABEL_16;
    case 4u:
      long long v49 = *(_OWORD *)v8;
      *(void *)(v10 + 16) = *(void *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = v49;
      char v45 = 4;
      goto LABEL_16;
    case 5u:
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      char v45 = 5;
      goto LABEL_16;
    case 6u:
      long long v50 = *(_OWORD *)v8;
      long long v51 = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 16) = *(_OWORD *)(v8 + 16);
      *(_OWORD *)(v10 + 32) = v51;
      *(_OWORD *)unint64_t v10 = v50;
      long long v52 = *(_OWORD *)(v8 + 48);
      long long v53 = *(_OWORD *)(v8 + 64);
      long long v54 = *(_OWORD *)(v8 + 80);
      *(void *)(v10 + 96) = *(void *)(v8 + 96);
      *(_OWORD *)(v10 + 64) = v53;
      *(_OWORD *)(v10 + 80) = v54;
      *(_OWORD *)(v10 + 48) = v52;
      char v45 = 6;
      goto LABEL_16;
    case 7u:
      long long v55 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      *(_OWORD *)(v10 + 16) = v55;
      long long v56 = *(_OWORD *)(v8 + 32);
      long long v57 = *(_OWORD *)(v8 + 48);
      long long v58 = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v10 + 80) = v58;
      *(_OWORD *)(v10 + 32) = v56;
      *(_OWORD *)(v10 + 48) = v57;
      long long v59 = *(_OWORD *)(v8 + 96);
      long long v60 = *(_OWORD *)(v8 + 112);
      long long v61 = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v10 + 144) = v61;
      *(_OWORD *)(v10 + 96) = v59;
      *(_OWORD *)(v10 + 112) = v60;
      char v45 = 7;
      goto LABEL_16;
    case 8u:
      long long v62 = *(_OWORD *)v8;
      long long v63 = *(_OWORD *)(v8 + 16);
      long long v64 = *(_OWORD *)(v8 + 32);
      *(void *)(v10 + 48) = *(void *)(v8 + 48);
      *(_OWORD *)(v10 + 16) = v63;
      *(_OWORD *)(v10 + 32) = v64;
      *(_OWORD *)unint64_t v10 = v62;
      char v45 = 8;
      goto LABEL_16;
    case 9u:
      long long v65 = *(_OWORD *)v8;
      long long v66 = *(_OWORD *)(v8 + 16);
      long long v67 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v67;
      *(_OWORD *)unint64_t v10 = v65;
      *(_OWORD *)(v10 + 16) = v66;
      char v45 = 9;
      goto LABEL_16;
    case 0xAu:
      long long v68 = *(_OWORD *)v8;
      long long v69 = *(_OWORD *)(v8 + 16);
      long long v70 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v70;
      *(_OWORD *)unint64_t v10 = v68;
      *(_OWORD *)(v10 + 16) = v69;
      long long v71 = *(_OWORD *)(v8 + 64);
      long long v72 = *(_OWORD *)(v8 + 80);
      long long v73 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v73;
      *(_OWORD *)(v10 + 64) = v71;
      *(_OWORD *)(v10 + 80) = v72;
      char v45 = 10;
LABEL_16:
      *(unsigned char *)(v10 + 248) = v45;
      break;
    default:
      long long v23 = *(_OWORD *)v8;
      long long v24 = *(_OWORD *)(v8 + 16);
      long long v25 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v25;
      *(_OWORD *)unint64_t v10 = v23;
      *(_OWORD *)(v10 + 16) = v24;
      long long v26 = *(_OWORD *)(v8 + 64);
      long long v27 = *(_OWORD *)(v8 + 80);
      long long v28 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v28;
      *(_OWORD *)(v10 + 64) = v26;
      *(_OWORD *)(v10 + 80) = v27;
      long long v29 = *(_OWORD *)(v8 + 128);
      long long v30 = *(_OWORD *)(v8 + 144);
      long long v31 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v8 + 160);
      *(_OWORD *)(v10 + 176) = v31;
      *(_OWORD *)(v10 + 128) = v29;
      *(_OWORD *)(v10 + 144) = v30;
      long long v32 = *(_OWORD *)(v8 + 192);
      long long v33 = *(_OWORD *)(v8 + 208);
      long long v34 = *(_OWORD *)(v8 + 224);
      *(_OWORD *)(v10 + 233) = *(_OWORD *)(v8 + 233);
      *(_OWORD *)(v10 + 208) = v33;
      *(_OWORD *)(v10 + 224) = v34;
      *(_OWORD *)(v10 + 192) = v32;
      break;
  }
  return a1;
}

uint64_t sub_24ED6C17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    unsigned int v9 = *(unsigned __int8 *)(v8 + 248);
    if (v9 >= 0xB) {
      unsigned int v9 = *(_DWORD *)v8 + 11;
    }
    switch(v9)
    {
      case 0u:
        long long v10 = *(_OWORD *)v8;
        long long v11 = *(_OWORD *)(v8 + 16);
        long long v12 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v12;
        *(_OWORD *)unint64_t v7 = v10;
        *(_OWORD *)(v7 + 16) = v11;
        long long v13 = *(_OWORD *)(v8 + 64);
        long long v14 = *(_OWORD *)(v8 + 80);
        long long v15 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v15;
        *(_OWORD *)(v7 + 64) = v13;
        *(_OWORD *)(v7 + 80) = v14;
        long long v16 = *(_OWORD *)(v8 + 128);
        long long v17 = *(_OWORD *)(v8 + 144);
        long long v18 = *(_OWORD *)(v8 + 176);
        *(_OWORD *)(v7 + 160) = *(_OWORD *)(v8 + 160);
        *(_OWORD *)(v7 + 176) = v18;
        *(_OWORD *)(v7 + 128) = v16;
        *(_OWORD *)(v7 + 144) = v17;
        long long v19 = *(_OWORD *)(v8 + 192);
        long long v20 = *(_OWORD *)(v8 + 208);
        long long v21 = *(_OWORD *)(v8 + 224);
        *(void *)(v7 + 240) = *(void *)(v8 + 240);
        *(_OWORD *)(v7 + 208) = v20;
        *(_OWORD *)(v7 + 224) = v21;
        *(_OWORD *)(v7 + 192) = v19;
        *(unsigned char *)(v7 + 248) = 0;
        return a1;
      case 1u:
        long long v34 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        *(_OWORD *)(v7 + 16) = v34;
        long long v35 = *(_OWORD *)(v8 + 32);
        long long v36 = *(_OWORD *)(v8 + 48);
        long long v37 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 64) = *(_OWORD *)(v8 + 64);
        *(_OWORD *)(v7 + 80) = v37;
        *(_OWORD *)(v7 + 32) = v35;
        *(_OWORD *)(v7 + 48) = v36;
        long long v38 = *(_OWORD *)(v8 + 96);
        long long v39 = *(_OWORD *)(v8 + 112);
        long long v40 = *(_OWORD *)(v8 + 144);
        *(_OWORD *)(v7 + 128) = *(_OWORD *)(v8 + 128);
        *(_OWORD *)(v7 + 144) = v40;
        *(_OWORD *)(v7 + 96) = v38;
        *(_OWORD *)(v7 + 112) = v39;
        long long v41 = *(_OWORD *)(v8 + 160);
        long long v42 = *(_OWORD *)(v8 + 176);
        long long v43 = *(_OWORD *)(v8 + 208);
        *(_OWORD *)(v7 + 192) = *(_OWORD *)(v8 + 192);
        *(_OWORD *)(v7 + 208) = v43;
        *(_OWORD *)(v7 + 160) = v41;
        *(_OWORD *)(v7 + 176) = v42;
        char v44 = 1;
        goto LABEL_17;
      case 2u:
        long long v45 = *(_OWORD *)v8;
        long long v46 = *(_OWORD *)(v8 + 16);
        long long v47 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v47;
        *(_OWORD *)unint64_t v7 = v45;
        *(_OWORD *)(v7 + 16) = v46;
        char v44 = 2;
        goto LABEL_17;
      case 3u:
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        char v44 = 3;
        goto LABEL_17;
      case 4u:
        long long v48 = *(_OWORD *)v8;
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = v48;
        char v44 = 4;
        goto LABEL_17;
      case 5u:
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        char v44 = 5;
        goto LABEL_17;
      case 6u:
        long long v49 = *(_OWORD *)v8;
        long long v50 = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
        *(_OWORD *)(v7 + 32) = v50;
        *(_OWORD *)unint64_t v7 = v49;
        long long v51 = *(_OWORD *)(v8 + 48);
        long long v52 = *(_OWORD *)(v8 + 64);
        long long v53 = *(_OWORD *)(v8 + 80);
        *(void *)(v7 + 96) = *(void *)(v8 + 96);
        *(_OWORD *)(v7 + 64) = v52;
        *(_OWORD *)(v7 + 80) = v53;
        *(_OWORD *)(v7 + 48) = v51;
        char v44 = 6;
        goto LABEL_17;
      case 7u:
        long long v54 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        *(_OWORD *)(v7 + 16) = v54;
        long long v55 = *(_OWORD *)(v8 + 32);
        long long v56 = *(_OWORD *)(v8 + 48);
        long long v57 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 64) = *(_OWORD *)(v8 + 64);
        *(_OWORD *)(v7 + 80) = v57;
        *(_OWORD *)(v7 + 32) = v55;
        *(_OWORD *)(v7 + 48) = v56;
        long long v58 = *(_OWORD *)(v8 + 96);
        long long v59 = *(_OWORD *)(v8 + 112);
        long long v60 = *(_OWORD *)(v8 + 144);
        *(_OWORD *)(v7 + 128) = *(_OWORD *)(v8 + 128);
        *(_OWORD *)(v7 + 144) = v60;
        *(_OWORD *)(v7 + 96) = v58;
        *(_OWORD *)(v7 + 112) = v59;
        char v44 = 7;
        goto LABEL_17;
      case 8u:
        long long v61 = *(_OWORD *)v8;
        long long v62 = *(_OWORD *)(v8 + 16);
        long long v63 = *(_OWORD *)(v8 + 32);
        *(void *)(v7 + 48) = *(void *)(v8 + 48);
        *(_OWORD *)(v7 + 16) = v62;
        *(_OWORD *)(v7 + 32) = v63;
        *(_OWORD *)unint64_t v7 = v61;
        char v44 = 8;
        goto LABEL_17;
      case 9u:
        long long v64 = *(_OWORD *)v8;
        long long v65 = *(_OWORD *)(v8 + 16);
        long long v66 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v66;
        *(_OWORD *)unint64_t v7 = v64;
        *(_OWORD *)(v7 + 16) = v65;
        char v44 = 9;
        goto LABEL_17;
      case 0xAu:
        long long v67 = *(_OWORD *)v8;
        long long v68 = *(_OWORD *)(v8 + 16);
        long long v69 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v69;
        *(_OWORD *)unint64_t v7 = v67;
        *(_OWORD *)(v7 + 16) = v68;
        long long v70 = *(_OWORD *)(v8 + 64);
        long long v71 = *(_OWORD *)(v8 + 80);
        long long v72 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v72;
        *(_OWORD *)(v7 + 64) = v70;
        *(_OWORD *)(v7 + 80) = v71;
        char v44 = 10;
LABEL_17:
        *(unsigned char *)(v7 + 248) = v44;
        break;
      default:
        long long v22 = *(_OWORD *)v8;
        long long v23 = *(_OWORD *)(v8 + 16);
        long long v24 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v24;
        *(_OWORD *)unint64_t v7 = v22;
        *(_OWORD *)(v7 + 16) = v23;
        long long v25 = *(_OWORD *)(v8 + 64);
        long long v26 = *(_OWORD *)(v8 + 80);
        long long v27 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v27;
        *(_OWORD *)(v7 + 64) = v25;
        *(_OWORD *)(v7 + 80) = v26;
        long long v28 = *(_OWORD *)(v8 + 128);
        long long v29 = *(_OWORD *)(v8 + 144);
        long long v30 = *(_OWORD *)(v8 + 176);
        *(_OWORD *)(v7 + 160) = *(_OWORD *)(v8 + 160);
        *(_OWORD *)(v7 + 176) = v30;
        *(_OWORD *)(v7 + 128) = v28;
        *(_OWORD *)(v7 + 144) = v29;
        long long v31 = *(_OWORD *)(v8 + 192);
        long long v32 = *(_OWORD *)(v8 + 208);
        long long v33 = *(_OWORD *)(v8 + 224);
        *(_OWORD *)(v7 + 233) = *(_OWORD *)(v8 + 233);
        *(_OWORD *)(v7 + 208) = v32;
        *(_OWORD *)(v7 + 224) = v33;
        *(_OWORD *)(v7 + 192) = v31;
        break;
    }
  }
  return a1;
}

uint64_t sub_24ED6C450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = v6 + a1;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v9 = *(unsigned __int8 *)(v8 + 248);
  if (v9 >= 0xB) {
    unsigned int v9 = *(_DWORD *)v8 + 11;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  switch(v9)
  {
    case 0u:
      long long v11 = *(_OWORD *)v8;
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v13 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v13;
      *(_OWORD *)unint64_t v10 = v11;
      *(_OWORD *)(v10 + 16) = v12;
      long long v14 = *(_OWORD *)(v8 + 64);
      long long v15 = *(_OWORD *)(v8 + 80);
      long long v16 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v16;
      *(_OWORD *)(v10 + 64) = v14;
      *(_OWORD *)(v10 + 80) = v15;
      long long v17 = *(_OWORD *)(v8 + 128);
      long long v18 = *(_OWORD *)(v8 + 144);
      long long v19 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v8 + 160);
      *(_OWORD *)(v10 + 176) = v19;
      *(_OWORD *)(v10 + 128) = v17;
      *(_OWORD *)(v10 + 144) = v18;
      long long v20 = *(_OWORD *)(v8 + 192);
      long long v21 = *(_OWORD *)(v8 + 208);
      long long v22 = *(_OWORD *)(v8 + 224);
      *(void *)(v10 + 240) = *(void *)(v8 + 240);
      *(_OWORD *)(v10 + 208) = v21;
      *(_OWORD *)(v10 + 224) = v22;
      *(_OWORD *)(v10 + 192) = v20;
      *(unsigned char *)(v10 + 248) = 0;
      return a1;
    case 1u:
      long long v35 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      *(_OWORD *)(v10 + 16) = v35;
      long long v36 = *(_OWORD *)(v8 + 32);
      long long v37 = *(_OWORD *)(v8 + 48);
      long long v38 = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v10 + 80) = v38;
      *(_OWORD *)(v10 + 32) = v36;
      *(_OWORD *)(v10 + 48) = v37;
      long long v39 = *(_OWORD *)(v8 + 96);
      long long v40 = *(_OWORD *)(v8 + 112);
      long long v41 = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v10 + 144) = v41;
      *(_OWORD *)(v10 + 96) = v39;
      *(_OWORD *)(v10 + 112) = v40;
      long long v42 = *(_OWORD *)(v8 + 160);
      long long v43 = *(_OWORD *)(v8 + 176);
      long long v44 = *(_OWORD *)(v8 + 208);
      *(_OWORD *)(v10 + 192) = *(_OWORD *)(v8 + 192);
      *(_OWORD *)(v10 + 208) = v44;
      *(_OWORD *)(v10 + 160) = v42;
      *(_OWORD *)(v10 + 176) = v43;
      char v45 = 1;
      goto LABEL_16;
    case 2u:
      long long v46 = *(_OWORD *)v8;
      long long v47 = *(_OWORD *)(v8 + 16);
      long long v48 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v48;
      *(_OWORD *)unint64_t v10 = v46;
      *(_OWORD *)(v10 + 16) = v47;
      char v45 = 2;
      goto LABEL_16;
    case 3u:
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      char v45 = 3;
      goto LABEL_16;
    case 4u:
      long long v49 = *(_OWORD *)v8;
      *(void *)(v10 + 16) = *(void *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = v49;
      char v45 = 4;
      goto LABEL_16;
    case 5u:
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      char v45 = 5;
      goto LABEL_16;
    case 6u:
      long long v50 = *(_OWORD *)v8;
      long long v51 = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 16) = *(_OWORD *)(v8 + 16);
      *(_OWORD *)(v10 + 32) = v51;
      *(_OWORD *)unint64_t v10 = v50;
      long long v52 = *(_OWORD *)(v8 + 48);
      long long v53 = *(_OWORD *)(v8 + 64);
      long long v54 = *(_OWORD *)(v8 + 80);
      *(void *)(v10 + 96) = *(void *)(v8 + 96);
      *(_OWORD *)(v10 + 64) = v53;
      *(_OWORD *)(v10 + 80) = v54;
      *(_OWORD *)(v10 + 48) = v52;
      char v45 = 6;
      goto LABEL_16;
    case 7u:
      long long v55 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v8;
      *(_OWORD *)(v10 + 16) = v55;
      long long v56 = *(_OWORD *)(v8 + 32);
      long long v57 = *(_OWORD *)(v8 + 48);
      long long v58 = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v10 + 64) = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v10 + 80) = v58;
      *(_OWORD *)(v10 + 32) = v56;
      *(_OWORD *)(v10 + 48) = v57;
      long long v59 = *(_OWORD *)(v8 + 96);
      long long v60 = *(_OWORD *)(v8 + 112);
      long long v61 = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v10 + 128) = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v10 + 144) = v61;
      *(_OWORD *)(v10 + 96) = v59;
      *(_OWORD *)(v10 + 112) = v60;
      char v45 = 7;
      goto LABEL_16;
    case 8u:
      long long v62 = *(_OWORD *)v8;
      long long v63 = *(_OWORD *)(v8 + 16);
      long long v64 = *(_OWORD *)(v8 + 32);
      *(void *)(v10 + 48) = *(void *)(v8 + 48);
      *(_OWORD *)(v10 + 16) = v63;
      *(_OWORD *)(v10 + 32) = v64;
      *(_OWORD *)unint64_t v10 = v62;
      char v45 = 8;
      goto LABEL_16;
    case 9u:
      long long v65 = *(_OWORD *)v8;
      long long v66 = *(_OWORD *)(v8 + 16);
      long long v67 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v67;
      *(_OWORD *)unint64_t v10 = v65;
      *(_OWORD *)(v10 + 16) = v66;
      char v45 = 9;
      goto LABEL_16;
    case 0xAu:
      long long v68 = *(_OWORD *)v8;
      long long v69 = *(_OWORD *)(v8 + 16);
      long long v70 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v70;
      *(_OWORD *)unint64_t v10 = v68;
      *(_OWORD *)(v10 + 16) = v69;
      long long v71 = *(_OWORD *)(v8 + 64);
      long long v72 = *(_OWORD *)(v8 + 80);
      long long v73 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v73;
      *(_OWORD *)(v10 + 64) = v71;
      *(_OWORD *)(v10 + 80) = v72;
      char v45 = 10;
LABEL_16:
      *(unsigned char *)(v10 + 248) = v45;
      break;
    default:
      long long v23 = *(_OWORD *)v8;
      long long v24 = *(_OWORD *)(v8 + 16);
      long long v25 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v10 + 48) = v25;
      *(_OWORD *)unint64_t v10 = v23;
      *(_OWORD *)(v10 + 16) = v24;
      long long v26 = *(_OWORD *)(v8 + 64);
      long long v27 = *(_OWORD *)(v8 + 80);
      long long v28 = *(_OWORD *)(v8 + 112);
      *(_OWORD *)(v10 + 96) = *(_OWORD *)(v8 + 96);
      *(_OWORD *)(v10 + 112) = v28;
      *(_OWORD *)(v10 + 64) = v26;
      *(_OWORD *)(v10 + 80) = v27;
      long long v29 = *(_OWORD *)(v8 + 128);
      long long v30 = *(_OWORD *)(v8 + 144);
      long long v31 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v10 + 160) = *(_OWORD *)(v8 + 160);
      *(_OWORD *)(v10 + 176) = v31;
      *(_OWORD *)(v10 + 128) = v29;
      *(_OWORD *)(v10 + 144) = v30;
      long long v32 = *(_OWORD *)(v8 + 192);
      long long v33 = *(_OWORD *)(v8 + 208);
      long long v34 = *(_OWORD *)(v8 + 224);
      *(_OWORD *)(v10 + 233) = *(_OWORD *)(v8 + 233);
      *(_OWORD *)(v10 + 208) = v33;
      *(_OWORD *)(v10 + 224) = v34;
      *(_OWORD *)(v10 + 192) = v32;
      break;
  }
  return a1;
}

uint64_t sub_24ED6C71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    unsigned int v9 = *(unsigned __int8 *)(v8 + 248);
    if (v9 >= 0xB) {
      unsigned int v9 = *(_DWORD *)v8 + 11;
    }
    switch(v9)
    {
      case 0u:
        long long v10 = *(_OWORD *)v8;
        long long v11 = *(_OWORD *)(v8 + 16);
        long long v12 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v12;
        *(_OWORD *)unint64_t v7 = v10;
        *(_OWORD *)(v7 + 16) = v11;
        long long v13 = *(_OWORD *)(v8 + 64);
        long long v14 = *(_OWORD *)(v8 + 80);
        long long v15 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v15;
        *(_OWORD *)(v7 + 64) = v13;
        *(_OWORD *)(v7 + 80) = v14;
        long long v16 = *(_OWORD *)(v8 + 128);
        long long v17 = *(_OWORD *)(v8 + 144);
        long long v18 = *(_OWORD *)(v8 + 176);
        *(_OWORD *)(v7 + 160) = *(_OWORD *)(v8 + 160);
        *(_OWORD *)(v7 + 176) = v18;
        *(_OWORD *)(v7 + 128) = v16;
        *(_OWORD *)(v7 + 144) = v17;
        long long v19 = *(_OWORD *)(v8 + 192);
        long long v20 = *(_OWORD *)(v8 + 208);
        long long v21 = *(_OWORD *)(v8 + 224);
        *(void *)(v7 + 240) = *(void *)(v8 + 240);
        *(_OWORD *)(v7 + 208) = v20;
        *(_OWORD *)(v7 + 224) = v21;
        *(_OWORD *)(v7 + 192) = v19;
        *(unsigned char *)(v7 + 248) = 0;
        return a1;
      case 1u:
        long long v34 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        *(_OWORD *)(v7 + 16) = v34;
        long long v35 = *(_OWORD *)(v8 + 32);
        long long v36 = *(_OWORD *)(v8 + 48);
        long long v37 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 64) = *(_OWORD *)(v8 + 64);
        *(_OWORD *)(v7 + 80) = v37;
        *(_OWORD *)(v7 + 32) = v35;
        *(_OWORD *)(v7 + 48) = v36;
        long long v38 = *(_OWORD *)(v8 + 96);
        long long v39 = *(_OWORD *)(v8 + 112);
        long long v40 = *(_OWORD *)(v8 + 144);
        *(_OWORD *)(v7 + 128) = *(_OWORD *)(v8 + 128);
        *(_OWORD *)(v7 + 144) = v40;
        *(_OWORD *)(v7 + 96) = v38;
        *(_OWORD *)(v7 + 112) = v39;
        long long v41 = *(_OWORD *)(v8 + 160);
        long long v42 = *(_OWORD *)(v8 + 176);
        long long v43 = *(_OWORD *)(v8 + 208);
        *(_OWORD *)(v7 + 192) = *(_OWORD *)(v8 + 192);
        *(_OWORD *)(v7 + 208) = v43;
        *(_OWORD *)(v7 + 160) = v41;
        *(_OWORD *)(v7 + 176) = v42;
        char v44 = 1;
        goto LABEL_17;
      case 2u:
        long long v45 = *(_OWORD *)v8;
        long long v46 = *(_OWORD *)(v8 + 16);
        long long v47 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v47;
        *(_OWORD *)unint64_t v7 = v45;
        *(_OWORD *)(v7 + 16) = v46;
        char v44 = 2;
        goto LABEL_17;
      case 3u:
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        char v44 = 3;
        goto LABEL_17;
      case 4u:
        long long v48 = *(_OWORD *)v8;
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = v48;
        char v44 = 4;
        goto LABEL_17;
      case 5u:
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        char v44 = 5;
        goto LABEL_17;
      case 6u:
        long long v49 = *(_OWORD *)v8;
        long long v50 = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
        *(_OWORD *)(v7 + 32) = v50;
        *(_OWORD *)unint64_t v7 = v49;
        long long v51 = *(_OWORD *)(v8 + 48);
        long long v52 = *(_OWORD *)(v8 + 64);
        long long v53 = *(_OWORD *)(v8 + 80);
        *(void *)(v7 + 96) = *(void *)(v8 + 96);
        *(_OWORD *)(v7 + 64) = v52;
        *(_OWORD *)(v7 + 80) = v53;
        *(_OWORD *)(v7 + 48) = v51;
        char v44 = 6;
        goto LABEL_17;
      case 7u:
        long long v54 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
        *(_OWORD *)(v7 + 16) = v54;
        long long v55 = *(_OWORD *)(v8 + 32);
        long long v56 = *(_OWORD *)(v8 + 48);
        long long v57 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 64) = *(_OWORD *)(v8 + 64);
        *(_OWORD *)(v7 + 80) = v57;
        *(_OWORD *)(v7 + 32) = v55;
        *(_OWORD *)(v7 + 48) = v56;
        long long v58 = *(_OWORD *)(v8 + 96);
        long long v59 = *(_OWORD *)(v8 + 112);
        long long v60 = *(_OWORD *)(v8 + 144);
        *(_OWORD *)(v7 + 128) = *(_OWORD *)(v8 + 128);
        *(_OWORD *)(v7 + 144) = v60;
        *(_OWORD *)(v7 + 96) = v58;
        *(_OWORD *)(v7 + 112) = v59;
        char v44 = 7;
        goto LABEL_17;
      case 8u:
        long long v61 = *(_OWORD *)v8;
        long long v62 = *(_OWORD *)(v8 + 16);
        long long v63 = *(_OWORD *)(v8 + 32);
        *(void *)(v7 + 48) = *(void *)(v8 + 48);
        *(_OWORD *)(v7 + 16) = v62;
        *(_OWORD *)(v7 + 32) = v63;
        *(_OWORD *)unint64_t v7 = v61;
        char v44 = 8;
        goto LABEL_17;
      case 9u:
        long long v64 = *(_OWORD *)v8;
        long long v65 = *(_OWORD *)(v8 + 16);
        long long v66 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v66;
        *(_OWORD *)unint64_t v7 = v64;
        *(_OWORD *)(v7 + 16) = v65;
        char v44 = 9;
        goto LABEL_17;
      case 0xAu:
        long long v67 = *(_OWORD *)v8;
        long long v68 = *(_OWORD *)(v8 + 16);
        long long v69 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v69;
        *(_OWORD *)unint64_t v7 = v67;
        *(_OWORD *)(v7 + 16) = v68;
        long long v70 = *(_OWORD *)(v8 + 64);
        long long v71 = *(_OWORD *)(v8 + 80);
        long long v72 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v72;
        *(_OWORD *)(v7 + 64) = v70;
        *(_OWORD *)(v7 + 80) = v71;
        char v44 = 10;
LABEL_17:
        *(unsigned char *)(v7 + 248) = v44;
        break;
      default:
        long long v22 = *(_OWORD *)v8;
        long long v23 = *(_OWORD *)(v8 + 16);
        long long v24 = *(_OWORD *)(v8 + 48);
        *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v7 + 48) = v24;
        *(_OWORD *)unint64_t v7 = v22;
        *(_OWORD *)(v7 + 16) = v23;
        long long v25 = *(_OWORD *)(v8 + 64);
        long long v26 = *(_OWORD *)(v8 + 80);
        long long v27 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(v7 + 112) = v27;
        *(_OWORD *)(v7 + 64) = v25;
        *(_OWORD *)(v7 + 80) = v26;
        long long v28 = *(_OWORD *)(v8 + 128);
        long long v29 = *(_OWORD *)(v8 + 144);
        long long v30 = *(_OWORD *)(v8 + 176);
        *(_OWORD *)(v7 + 160) = *(_OWORD *)(v8 + 160);
        *(_OWORD *)(v7 + 176) = v30;
        *(_OWORD *)(v7 + 128) = v28;
        *(_OWORD *)(v7 + 144) = v29;
        long long v31 = *(_OWORD *)(v8 + 192);
        long long v32 = *(_OWORD *)(v8 + 208);
        long long v33 = *(_OWORD *)(v8 + 224);
        *(_OWORD *)(v7 + 233) = *(_OWORD *)(v8 + 233);
        *(_OWORD *)(v7 + 208) = v32;
        *(_OWORD *)(v7 + 224) = v33;
        *(_OWORD *)(v7 + 192) = v31;
        break;
    }
  }
  return a1;
}

uint64_t sub_24ED6C9F0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xF4) {
    unsigned int v7 = 244;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * (((v6 + 7) & 0xF8) - 7));
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ED6CB50);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * (((v6 + 7) & 0xF8) - 7));
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFF08) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xF4) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 248);
  if (v17 >= 0xC) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_24ED6CB64(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xF4) {
    unsigned int v8 = 244;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  char v11 = 8 * (((v9 + 7) & 0xF8) - 7);
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0xF4)
            {
              unint64_t v22 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if (a2 > 0xF4)
              {
                double result = 0.0;
                *(_OWORD *)(v22 + 233) = 0u;
                *(_OWORD *)(v22 + 208) = 0u;
                *(_OWORD *)(v22 + 224) = 0u;
                *(_OWORD *)(v22 + 176) = 0u;
                *(_OWORD *)(v22 + 192) = 0u;
                *(_OWORD *)(v22 + 144) = 0u;
                *(_OWORD *)(v22 + 160) = 0u;
                *(_OWORD *)(v22 + 112) = 0u;
                *(_OWORD *)(v22 + 128) = 0u;
                *(_OWORD *)(v22 + 80) = 0u;
                *(_OWORD *)(v22 + 96) = 0u;
                *(_OWORD *)(v22 + 48) = 0u;
                *(_OWORD *)(v22 + 64) = 0u;
                *(_OWORD *)(v22 + 16) = 0u;
                *(_OWORD *)(v22 + 32) = 0u;
                *(_OWORD *)unint64_t v22 = 0u;
                *(_DWORD *)unint64_t v22 = a2 - 245;
              }
              else
              {
                *(unsigned char *)(v22 + 248) = -(char)a2;
              }
            }
            else
            {
              long long v21 = *(void (**)(void))(v6 + 56);
              v21();
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x24ED6CDA0);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_24ED6CDC8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED6CE94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24ED6CEBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED6CED8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED6CEF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED6CF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v34 = a1;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v32 = a9;
  uint64_t v13 = sub_24EE571B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = sub_24EDC57CC((void (*)(char *, char *))sub_24ED6D21C, (uint64_t)v26, v13, a4, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v15);
  uint64_t v16 = sub_24EE571B0();
  uint64_t v17 = swift_getWitnessTable();
  MEMORY[0x25334D7C0](&v34, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v33 = v34;
  swift_getTupleTypeMetadata2();
  sub_24EE57640();
  swift_getWitnessTable();
  sub_24EE571E0();
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_24EE57610();
  swift_bridgeObjectRelease();
  uint64_t v34 = v18;
  swift_getKeyPath();
  unsigned int v19 = (void *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  v19[5] = a7;
  v19[6] = a8;
  v19[7] = a9;
  v19[8] = a2;
  v19[9] = a3;
  v19[10] = a1;
  long long v20 = (void *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = a7;
  v20[6] = a8;
  v20[7] = a9;
  v20[8] = sub_24ED6D47C;
  v20[9] = v19;
  sub_24EE571B0();
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  return sub_24EE56CA0();
}

uint64_t sub_24ED6D21C()
{
  return sub_24EE57520();
}

uint64_t sub_24ED6D254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  v21[0] = a2;
  v21[1] = a5;
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  size_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v21 - v17;
  sub_24EE571F0();
  ((void (*)(uint64_t, char *))v21[0])(a1, v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a4);
  sub_24EC90894(v15);
  unsigned int v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, a3);
  sub_24EC90894(v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, a3);
}

uint64_t sub_24ED6D43C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24ED6D47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24ED6D254(a1, v2[8], v2[3], v2[4], a2);
}

uint64_t sub_24ED6D4B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24ED6D4F0(char *a1)
{
  int v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 64);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_24ED6D560(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 128);
}

uint64_t sub_24ED6D568(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 136);
}

uint64_t sub_24ED6D570(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 168);
}

uint64_t sub_24ED6D578(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24ED6D5B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of LazySectionDescriptorProtocol.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

void CanvasSectionViewDescriptor.footer.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t CanvasSectionViewDescriptor.header.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 164);
  type metadata accessor for CanvasSectionHeader();
  uint64_t v5 = sub_24EE57430();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t CanvasSectionViewDescriptor.identifier.getter(uint64_t a1)
{
  uint64_t v1 = sub_24ED6FB1C(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasSectionViewDescriptor.items.getter(uint64_t a1)
{
  sub_24EC996D0(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CanvasSectionViewDescriptor.items.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 172);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*CanvasSectionViewDescriptor.items.modify())()
{
  return nullsub_1;
}

uint64_t CanvasSectionViewDescriptor.metrics.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 176);
  uint64_t v5 = sub_24EE57430();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CanvasSectionViewDescriptor.init(identifier:header:footer:items:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  char v10 = *a4;
  uint64_t v11 = (int *)type metadata accessor for CanvasSectionViewDescriptor();
  uint64_t v12 = &a7[v11[42]];
  *uint64_t v12 = a1;
  v12[1] = a2;
  uint64_t v13 = &a7[v11[41]];
  type metadata accessor for CanvasSectionHeader();
  uint64_t v14 = sub_24EE57430();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  *a7 = v10;
  *(void *)&a7[v11[43]] = a5;
  uint64_t v15 = &a7[v11[44]];
  uint64_t v16 = sub_24EE57430();
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a6, v16);
}

uint64_t sub_24ED6D960(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746F6F66 && a2 == 0xE600000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24ED6DB74(char a1)
{
  uint64_t result = 0x7265746F6F66;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726564616568;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x736D657469;
      break;
    case 4:
      uint64_t result = 0x7363697274656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ED6DC18()
{
  return sub_24ED6DB74(*v0);
}

uint64_t sub_24ED6DC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED6D960(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED6DCD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED6DD28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ED6DD7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_24ED6FB1C(a1);
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24ED6DDC0(uint64_t a1)
{
  uint64_t v1 = sub_24ED6FB1C(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasSectionViewDescriptor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 144);
  uint64_t v20 = *(void *)(a2 + 152);
  uint64_t v47 = v4;
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  uint64_t v44 = v5;
  uint64_t v43 = v6;
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  uint64_t v41 = v7;
  uint64_t v40 = v8;
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  v31[2] = v9;
  uint64_t v45 = v10;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v39 = v11;
  uint64_t v46 = v12;
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  uint64_t v38 = v13;
  uint64_t v37 = v14;
  uint64_t v62 = v14;
  uint64_t v63 = v15;
  uint64_t v36 = v15;
  uint64_t v35 = v16;
  uint64_t v64 = v16;
  uint64_t v65 = v17;
  uint64_t v34 = v17;
  uint64_t v33 = v18;
  uint64_t v66 = v18;
  uint64_t v67 = v19;
  v31[1] = v19;
  uint64_t v42 = v21;
  uint64_t v68 = v21;
  uint64_t v69 = v20;
  uint64_t v32 = v20;
  type metadata accessor for CanvasSectionViewDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v22 = sub_24EE577C0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v25 = (char *)v31 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  long long v26 = v48;
  sub_24EE578D0();
  LOBYTE(v52) = *v26;
  LOBYTE(v70) = 0;
  sub_24EC9971C();
  uint64_t v27 = v49;
  sub_24EE577B0();
  if (v27) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v49 = v23;
  LOBYTE(v70) = 1;
  uint64_t v52 = v47;
  uint64_t v53 = v45;
  uint64_t v54 = v46;
  uint64_t v55 = v42;
  type metadata accessor for CanvasSectionHeader();
  swift_getWitnessTable();
  sub_24EE57760();
  LOBYTE(v52) = 2;
  sub_24EE57770();
  uint64_t v70 = *(void *)&v26[*(int *)(a2 + 172)];
  char v51 = 3;
  uint64_t v52 = v47;
  uint64_t v53 = v30;
  uint64_t v54 = v29;
  uint64_t v55 = v41;
  uint64_t v56 = v40;
  uint64_t v57 = v39;
  uint64_t v58 = v46;
  uint64_t v59 = v38;
  uint64_t v60 = v37;
  uint64_t v61 = v36;
  uint64_t v62 = v35;
  uint64_t v63 = v34;
  uint64_t v64 = v33;
  uint64_t v65 = v32;
  type metadata accessor for CanvasItemDescriptor();
  sub_24EE571B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE577B0();
  LOBYTE(v52) = 4;
  sub_24EE57760();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v25, v22);
}

uint64_t CanvasSectionViewDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12, char *a13, uint64_t a14, char *a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v73 = a6;
  uint64_t v76 = a5;
  long long v75 = a4;
  long long v71 = a3;
  uint64_t v63 = a1;
  uint64_t v50 = a9;
  uint64_t v77 = a17;
  uint64_t v78 = a20;
  uint64_t v72 = a16;
  long long v74 = a15;
  uint64_t v70 = a14;
  uint64_t v69 = a13;
  uint64_t v68 = a12;
  uint64_t v67 = a10;
  uint64_t v65 = a18;
  uint64_t v66 = a7;
  uint64_t v49 = sub_24EE57430();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  char v51 = (char *)&v47 - v24;
  uint64_t v80 = a2;
  uint64_t v81 = a8;
  uint64_t v61 = a8;
  uint64_t v82 = a11;
  uint64_t v83 = a19;
  uint64_t v60 = a19;
  uint64_t v58 = type metadata accessor for CanvasSectionHeader();
  uint64_t v54 = sub_24EE57430();
  uint64_t v57 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v47 - v25;
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v82 = v75;
  uint64_t v83 = v76;
  uint64_t v26 = v73;
  uint64_t v84 = v73;
  uint64_t v85 = a7;
  int v86 = a8;
  uint64_t v87 = a10;
  int v88 = a11;
  uint64_t v89 = a12;
  uint64_t v27 = v69;
  uint64_t v28 = v70;
  size_t v90 = v69;
  uint64_t v91 = v70;
  uint64_t v29 = v72;
  uint64_t v92 = v74;
  uint64_t v93 = v72;
  uint64_t v30 = v65;
  uint64_t v94 = v77;
  uint64_t v95 = v65;
  uint64_t v96 = a19;
  uint64_t v97 = v78;
  type metadata accessor for CanvasSectionViewDescriptor.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v59 = sub_24EE57730();
  uint64_t v55 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v32 = (char *)&v47 - v31;
  uint64_t v52 = a2;
  uint64_t v80 = a2;
  uint64_t v33 = v63;
  uint64_t v81 = v71;
  uint64_t v82 = v75;
  uint64_t v83 = v76;
  uint64_t v84 = v26;
  uint64_t v85 = v66;
  int v86 = v61;
  uint64_t v87 = v67;
  int v88 = a11;
  uint64_t v53 = a11;
  uint64_t v89 = v68;
  size_t v90 = v27;
  uint64_t v91 = v28;
  uint64_t v92 = v74;
  uint64_t v93 = v29;
  uint64_t v94 = v77;
  uint64_t v95 = v30;
  uint64_t v96 = v60;
  uint64_t v97 = v78;
  uint64_t v34 = (int *)type metadata accessor for CanvasSectionViewDescriptor();
  uint64_t v60 = *((void *)v34 - 1);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v47 - v35;
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  uint64_t v61 = v32;
  uint64_t v37 = v64;
  sub_24EE578C0();
  if (v37) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  uint64_t v38 = v56;
  uint64_t v39 = v36;
  uint64_t v40 = v57;
  LOBYTE(v98) = 0;
  sub_24EC99770();
  sub_24EE57710();
  *uint64_t v39 = v80;
  LOBYTE(v80) = 1;
  swift_getWitnessTable();
  sub_24EE576C0();
  (*(void (**)(unsigned char *, char *, uint64_t))(v40 + 32))(&v39[v34[41]], v38, v54);
  LOBYTE(v80) = 2;
  uint64_t v41 = sub_24EE576D0();
  uint64_t v42 = (uint64_t *)&v39[v34[42]];
  *uint64_t v42 = v41;
  v42[1] = v43;
  uint64_t v80 = v52;
  uint64_t v81 = v71;
  uint64_t v82 = v75;
  uint64_t v83 = v76;
  uint64_t v84 = v73;
  uint64_t v85 = v67;
  int v86 = v53;
  uint64_t v87 = v68;
  int v88 = v69;
  uint64_t v89 = v70;
  size_t v90 = v74;
  uint64_t v91 = v72;
  uint64_t v92 = v77;
  uint64_t v93 = v78;
  type metadata accessor for CanvasItemDescriptor();
  sub_24EE571B0();
  LOBYTE(v80) = 3;
  uint64_t v79 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE57710();
  *(void *)&v39[v34[43]] = v98;
  LOBYTE(v80) = 4;
  uint64_t v44 = v51;
  sub_24EE576C0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v61, v59);
  (*(void (**)(unsigned char *, char *, uint64_t))(v48 + 32))(&v39[v34[44]], v44, v49);
  uint64_t v45 = v60;
  (*(void (**)(uint64_t, unsigned char *, int *))(v60 + 16))(v50, v39, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return (*(uint64_t (**)(unsigned char *, int *))(v45 + 8))(v39, v34);
}

uint64_t sub_24ED6EBC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CanvasSectionViewDescriptor.init(from:)(a1, *(void *)(a2 + 16), *(char **)(a2 + 24), *(char **)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 56), *(char **)(a2 + 64), a3, *(void *)(a2 + 72), *(char **)(a2 + 80), *(void *)(a2 + 88), *(char **)(a2 + 96), *(void *)(a2 + 104), *(char **)(a2 + 112), *(void *)(a2 + 120), *(char **)(a2 + 128), *(void *)(a2 + 136), *(void *)(a2 + 144),
           *(void *)(a2 + 152));
}

uint64_t sub_24ED6EC24(void *a1, uint64_t a2)
{
  return CanvasSectionViewDescriptor.encode(to:)(a1, a2);
}

uint64_t CanvasSectionViewDescriptor.hash(into:)()
{
  return sub_24EE57440();
}

BOOL static CanvasSectionViewDescriptor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v134 = a7;
  uint64_t v133 = a6;
  uint64_t v132 = a5;
  uint64_t v131 = a4;
  uint64_t v138 = a2;
  uint64_t v124 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v120 = (char *)v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v122 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v26 = (char *)v101 - v25;
  uint64_t v123 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v27);
  size_t v121 = (char *)v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v125 = (char *)v101 - v30;
  MEMORY[0x270FA5388](v31);
  long long v126 = (char *)v101 - v32;
  uint64_t v135 = a3;
  uint64_t v139 = a3;
  uint64_t v140 = a9;
  unsigned int v129 = a9;
  uint64_t v141 = a11;
  uint64_t v142 = a19;
  uint64_t v130 = a19;
  uint64_t v33 = type metadata accessor for CanvasSectionHeader();
  uint64_t v128 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v101 - v34;
  uint64_t v137 = v36;
  uint64_t v37 = sub_24EE57430();
  uint64_t v38 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)v101 - v39;
  uint64_t v136 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v101 - v43;
  MEMORY[0x270FA5388](v45);
  if (*a1 != *v138) {
    return 0;
  }
  uint64_t v50 = a1;
  uint64_t v117 = v49;
  uint64_t v104 = v35;
  uint64_t v118 = v48;
  uint64_t v102 = v26;
  uint64_t v103 = v24;
  uint64_t v139 = v135;
  uint64_t v140 = v131;
  uint64_t v141 = v132;
  uint64_t v142 = v133;
  uint64_t v143 = v134;
  uint64_t v144 = a8;
  uint64_t v105 = a8;
  uint64_t v145 = v129;
  uint64_t v146 = a10;
  uint64_t v106 = a10;
  uint64_t v116 = a11;
  uint64_t v147 = a11;
  uint64_t v148 = a12;
  uint64_t v107 = a12;
  uint64_t v108 = a13;
  uint64_t v149 = a13;
  uint64_t v150 = a14;
  uint64_t v109 = a14;
  uint64_t v110 = a15;
  uint64_t v151 = a15;
  uint64_t v152 = a16;
  uint64_t v111 = a16;
  uint64_t v112 = a17;
  uint64_t v153 = a17;
  uint64_t v154 = a18;
  v101[1] = a18;
  uint64_t v155 = v130;
  uint64_t v156 = a20;
  uint64_t v113 = a20;
  char v51 = (char *)v101 - v47;
  uint64_t v52 = v46;
  uint64_t v53 = type metadata accessor for CanvasSectionViewDescriptor();
  uint64_t v54 = *(int *)(v53 + 164);
  uint64_t v115 = v50;
  uint64_t v55 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v136 + 16);
  v55(v51, &v50[v54], v37);
  uint64_t v114 = v53;
  v55(v44, &v138[*(int *)(v53 + 164)], v37);
  uint64_t v119 = v52;
  uint64_t v56 = *(int *)(v52 + 48);
  uint64_t v57 = v128;
  uint64_t v58 = &v40[v56];
  v55(v40, (unsigned __int8 *)v51, v37);
  v55(v58, (unsigned __int8 *)v44, v37);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v60 = v59(v40, 1, v137);
  uint64_t v61 = v40;
  if (v60 == 1)
  {
    uint64_t v62 = v40;
    uint64_t v63 = *(void (**)(char *, uint64_t))(v136 + 8);
    v63(v44, v37);
    v63(v51, v37);
    if (v59(v58, 1, v137) == 1)
    {
      v63(v40, v37);
      uint64_t v64 = v116;
      goto LABEL_10;
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v118 + 8))(v62, v119);
    return 0;
  }
  v101[0] = v51;
  uint64_t v65 = v117;
  uint64_t v66 = v61;
  v55((char *)v117, (unsigned __int8 *)v61, v37);
  if (v59(v58, 1, v137) == 1)
  {
    uint64_t v62 = v66;
    uint64_t v67 = *(void (**)(char *, uint64_t))(v136 + 8);
    v67(v44, v37);
    v67((char *)v101[0], v37);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v65, v137);
    goto LABEL_7;
  }
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v128 = v57 + 8;
  uint64_t v69 = (uint64_t)v104;
  uint64_t v70 = v137;
  v68(v104, v58, v137);
  uint64_t v64 = v116;
  LODWORD(v130) = static CanvasSectionHeader.== infix(_:_:)(v65, v69, v135, v129, v116, v130);
  long long v71 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v71(v69, v70);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v136 + 8);
  v72(v44, v37);
  v72((char *)v101[0], v37);
  v71(v65, v70);
  v72(v66, v37);
  if ((v130 & 1) == 0) {
    return 0;
  }
LABEL_10:
  uint64_t v73 = v114;
  uint64_t v74 = *(int *)(v114 + 168);
  long long v75 = v115;
  uint64_t v76 = *(void *)&v115[v74];
  uint64_t v77 = *(void *)&v115[v74 + 8];
  uint64_t v78 = v138;
  uint64_t v79 = &v138[v74];
  if (v76 == *(void *)v79 && v77 == *((void *)v79 + 1) || (char v80 = sub_24EE577E0(), result = 0, (v80 & 1) != 0))
  {
    uint64_t v139 = v135;
    uint64_t v140 = v131;
    uint64_t v141 = v132;
    uint64_t v142 = v133;
    uint64_t v143 = v134;
    uint64_t v144 = v106;
    uint64_t v145 = (char *)v64;
    uint64_t v146 = v107;
    uint64_t v147 = v108;
    uint64_t v148 = v109;
    uint64_t v149 = v110;
    uint64_t v150 = v111;
    uint64_t v151 = v112;
    uint64_t v152 = v113;
    type metadata accessor for CanvasItemDescriptor();
    swift_getWitnessTable();
    if (sub_24EE571D0())
    {
      uint64_t v82 = v123;
      uint64_t v83 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v123 + 16);
      uint64_t v84 = v126;
      uint64_t v85 = v103;
      v83(v126, &v75[*(int *)(v73 + 176)], v103);
      int v86 = v125;
      v83(v125, &v78[*(int *)(v73 + 176)], v85);
      uint64_t v87 = v102;
      int v88 = &v102[*(int *)(TupleTypeMetadata2 + 48)];
      v83(v102, (unsigned __int8 *)v84, v85);
      uint64_t v138 = (unsigned __int8 *)v88;
      v83(v88, (unsigned __int8 *)v86, v85);
      uint64_t v89 = v124;
      size_t v90 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v124 + 48);
      if (v90((unsigned __int8 *)v87, 1, v105) == 1)
      {
        uint64_t v91 = *(void (**)(char *, uint64_t))(v82 + 8);
        v91(v86, v85);
        v91(v84, v85);
        uint64_t v92 = v87;
        if (v90(v138, 1, v105) == 1)
        {
          v91(v87, v85);
          return 1;
        }
      }
      else
      {
        uint64_t v93 = v121;
        v83(v121, (unsigned __int8 *)v87, v85);
        uint64_t v94 = v138;
        uint64_t v95 = v105;
        uint64_t v92 = v87;
        if (v90(v138, 1, v105) != 1)
        {
          uint64_t v97 = v120;
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v89 + 32))(v120, v94, v95);
          char v98 = sub_24EE57040();
          uint64_t v99 = *(void (**)(char *, uint64_t))(v89 + 8);
          v99(v97, v95);
          size_t v100 = *(void (**)(char *, uint64_t))(v82 + 8);
          v100(v125, v85);
          v100(v126, v85);
          v99(v93, v95);
          v100(v92, v85);
          return (v98 & 1) != 0;
        }
        uint64_t v96 = *(void (**)(char *, uint64_t))(v82 + 8);
        v96(v125, v85);
        v96(v126, v85);
        (*(void (**)(char *, uint64_t))(v89 + 8))(v93, v95);
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v92, TupleTypeMetadata2);
    }
    return 0;
  }
  return result;
}

uint64_t CanvasSectionViewDescriptor.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED6FA84()
{
  return sub_24EE578B0();
}

BOOL sub_24ED6FAC8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  return static CanvasSectionViewDescriptor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), *(void *)(a3 + 48), *(void *)(a3 + 56), *(char **)(a3 + 64), *(void *)(a3 + 72), *(void *)(a3 + 80), *(void *)(a3 + 88), *(void *)(a3 + 96), *(void *)(a3 + 104), *(void *)(a3 + 112), *(void *)(a3 + 120), *(void *)(a3 + 128), *(void *)(a3 + 136), *(void *)(a3 + 144),
           *(void *)(a3 + 152));
}

uint64_t sub_24ED6FB1C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 168));
}

uint64_t type metadata accessor for CanvasSectionViewDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CanvasSectionViewDescriptor.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED6FB5C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_24ED6FBFC()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of CanvasSectionViewDescriptorProtocol.footer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of CanvasSectionViewDescriptorProtocol.header.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of CanvasSectionViewDescriptorProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CanvasSectionViewDescriptorProtocol.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of CanvasSectionViewDescriptorProtocol.metrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t sub_24ED6FC7C()
{
  type metadata accessor for CanvasSectionHeader();
  uint64_t result = sub_24EE57430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EE57430();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24ED6FD94(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = a3[8];
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  int v13 = *(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80);
  uint64_t v80 = a3[2];
  uint64_t v81 = v6;
  uint64_t v14 = *(void *)(v80 - 8);
  int v15 = *(_DWORD *)(v14 + 84);
  uint64_t v16 = *(_DWORD *)(v14 + 80);
  int v17 = v13 | *(_DWORD *)(v14 + 80);
  unint64_t v18 = (v13 | *(unsigned char *)(v14 + 80));
  uint64_t v19 = *(unsigned int *)(v7 + 84);
  uint64_t v20 = *(unsigned int *)(v10 + 84);
  unsigned int v21 = v20 - 1;
  if (!v20) {
    unsigned int v21 = 0;
  }
  if (v21 <= v19) {
    unsigned int v22 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v22 = v21;
  }
  unsigned int v23 = v15 - 1;
  if (!v15) {
    unsigned int v23 = 0;
  }
  if (v23 <= v22) {
    unsigned int v24 = v22;
  }
  else {
    unsigned int v24 = v23;
  }
  size_t v25 = *(void *)(v10 + 64);
  if (!v20) {
    ++v25;
  }
  uint64_t v26 = *(void *)(v7 + 64) + v12;
  size_t __n = v25;
  size_t v79 = v25 + v16;
  size_t v27 = (v25 + v16 + (v26 & ~v12)) & ~v16;
  size_t v28 = *(void *)(*(void *)(v80 - 8) + 64);
  if (!v15) {
    ++v28;
  }
  size_t v78 = v28;
  size_t v29 = v27 + v28;
  if (v24) {
    size_t v30 = v27 + v28;
  }
  else {
    size_t v30 = v29 + 1;
  }
  uint64_t v83 = a3[7];
  uint64_t v31 = *(void *)(v83 - 8);
  uint64_t v32 = *(_DWORD *)(v31 + 80);
  uint64_t v33 = v32 + 8;
  if (*(_DWORD *)(v31 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v83 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v83 - 8) + 64) + 1;
  }
  if ((v32 | v18) > 7
    || ((*(_DWORD *)(v31 + 80) | v17) & 0x100000) != 0
    || ((v32 + 8 + ((((v30 + ((v18 + 1) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v32)
     + v34 > 0x18)
  {
    uint64_t v37 = *a2;
    *a1 = *a2;
    uint64_t v38 = v37 + (((v32 | v18) & 0xF8 ^ 0x1F8) & ((v32 | v18) + 16));
    swift_retain();
    return (uint64_t *)v38;
  }
  uint64_t v39 = ~v16;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v75 = ~v32;
  uint64_t v76 = a1;
  uint64_t v40 = (char *)a2 + v18;
  uint64_t v41 = (void *)(((unint64_t)a1 + v18 + 1) & ~v18);
  uint64_t v42 = (unsigned __int16 *)((unint64_t)(v40 + 1) & ~v18);
  size_t v74 = v34;
  uint64_t v71 = ~v16;
  uint64_t v70 = ~v12;
  if (v24)
  {
    if (v19 == v24)
    {
      size_t v68 = v30;
      unsigned int v43 = v24;
      uint64_t v44 = v32 + 8;
      uint64_t v45 = (unint64_t)(v40 + 1) & ~v18;
      size_t v46 = v29;
      int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v45, v19, v81);
      size_t v29 = v46;
      uint64_t v42 = (unsigned __int16 *)v45;
      uint64_t v33 = v44;
      unsigned int v24 = v43;
      size_t v30 = v68;
      if (!v47) {
        goto LABEL_47;
      }
    }
    else
    {
      size_t v72 = v29;
      unint64_t v51 = ((unint64_t)v42 + v26) & ~v12;
      if (v21 == v24) {
        unsigned int v52 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v51, v20, v9);
      }
      else {
        unsigned int v52 = (*(uint64_t (**)(size_t))(v14 + 48))((v79 + v51) & v39);
      }
      size_t v29 = v72;
      if (v52 < 2)
      {
LABEL_47:
        size_t v73 = v29;
        (*(void (**)(void *, unsigned __int16 *, uint64_t))(v8 + 16))(v41, v42, v81);
        uint64_t v82 = v41;
        uint64_t v53 = v42;
        uint64_t v54 = (void *)(((unint64_t)v41 + v26) & v70);
        size_t v69 = (size_t)v53;
        uint64_t v55 = (const void *)(((unint64_t)v53 + v26) & v70);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v55, 1, v9))
        {
          memcpy(v54, v55, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v54, v55, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v9);
        }
        uint64_t v56 = (void *)(((unint64_t)v54 + v79) & v71);
        uint64_t v57 = (const void *)(((unint64_t)v55 + v79) & v71);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v57, 1, v80))
        {
          memcpy(v56, v57, v78);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v56, v57, v80);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v56, 0, 1, v80);
        }
        uint64_t v41 = v82;
        uint64_t v42 = (unsigned __int16 *)v69;
        uint64_t v58 = v83;
        uint64_t v59 = v75;
        if (!v24) {
          *((unsigned char *)v82 + v73) = 0;
        }
        goto LABEL_61;
      }
    }
  }
  else
  {
    if (!*((unsigned char *)v42 + v29)) {
      goto LABEL_47;
    }
    int v48 = (*((unsigned __int8 *)v42 + v29) - 1) << (8 * v29);
    if (v29 > 3) {
      int v48 = 0;
    }
    if (v29)
    {
      int v49 = v29 <= 3 ? v29 : 4;
      switch(v49)
      {
        case 2:
          int v50 = *v42;
          break;
        case 3:
          int v50 = *v42 | (*(unsigned __int8 *)(((unint64_t)(v40 + 1) & ~v18) + 2) << 16);
          break;
        case 4:
          int v50 = *(_DWORD *)v42;
          break;
        default:
          int v50 = *(unsigned __int8 *)v42;
          break;
      }
    }
    else
    {
      int v50 = 0;
    }
    if ((v50 | v48) == 0xFFFFFFFF) {
      goto LABEL_47;
    }
  }
  memcpy(v41, v42, v30);
  uint64_t v58 = v83;
  uint64_t v59 = v75;
LABEL_61:
  int v60 = (void *)(((unint64_t)v41 + v30 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = (void *)(((unint64_t)v42 + v30 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v60 = *v61;
  v60[1] = v61[1];
  uint64_t v62 = (void *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v63 = (void *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v62 = *v63;
  uint64_t v64 = (void *)(((unint64_t)v62 + v33) & v59);
  uint64_t v65 = (const void *)(((unint64_t)v63 + v33) & v59);
  uint64_t v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66(v65, 1, v58))
  {
    memcpy(v64, v65, v74);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v64, v65, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v64, 0, 1, v58);
  }
  return v76;
}

uint64_t sub_24ED70400(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_24EE55880();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = a2[8];
  uint64_t v6 = *(void *)(v39 - 8);
  uint64_t v40 = a2[2];
  uint64_t v7 = *(void *)(v40 - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80);
  uint64_t v10 = *(_DWORD *)(v7 + 80);
  uint64_t v11 = (unsigned __int16 *)((a1
                            + (*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80))
                            + 1) & ~(unint64_t)(*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80)));
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v12) {
    unsigned int v15 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v16 = v8 - 1;
  if (!v8) {
    unsigned int v16 = 0;
  }
  if (v16 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(void *)(*(void *)(v39 - 8) + 64);
  if (!v13) {
    ++v18;
  }
  uint64_t v19 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v20 = v18 + v10;
  uint64_t v21 = (v18 + v10 + (v19 & ~v9)) & ~v10;
  uint64_t v22 = *(void *)(*(void *)(v40 - 8) + 64);
  if (!v8) {
    ++v22;
  }
  uint64_t v23 = v22 + v21;
  uint64_t v37 = ~v9;
  uint64_t v38 = ~v10;
  if (v17)
  {
    if (v12 == v17)
    {
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(v11, v12, v4)) {
        goto LABEL_42;
      }
    }
    else
    {
      unint64_t v27 = ((unint64_t)v11 + v19) & ~v9;
      if (v14 == v17) {
        unsigned int v28 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v27, v13, v39);
      }
      else {
        unsigned int v28 = (*(uint64_t (**)(unint64_t))(v7 + 48))((v20 + v27) & ~v10);
      }
      if (v28 >= 2) {
        goto LABEL_42;
      }
    }
    goto LABEL_38;
  }
  if (!*((unsigned char *)v11 + v23)) {
    goto LABEL_38;
  }
  int v24 = (*((unsigned __int8 *)v11 + v23) - 1) << (8 * v23);
  if (v23 > 3) {
    int v24 = 0;
  }
  if (v23)
  {
    int v25 = v23 <= 3 ? v22 + v21 : 4;
    switch(v25)
    {
      case 2:
        int v26 = *v11;
        break;
      case 3:
        int v26 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)v11;
        break;
      default:
        int v26 = *(unsigned __int8 *)v11;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  if ((v26 | v24) == 0xFFFFFFFF)
  {
LABEL_38:
    (*(void (**)(unsigned __int16 *, uint64_t))(v5 + 8))(v11, v4);
    unint64_t v29 = ((unint64_t)v11 + v19) & v37;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v29, 1, v39)) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v29, v39);
    }
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v20 + v29) & v38, 1, v40)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((v20 + v29) & v38, v40);
    }
  }
LABEL_42:
  if (v17) {
    size_t v30 = v11;
  }
  else {
    size_t v30 = (unsigned __int16 *)((char *)v11 + 1);
  }
  unint64_t v31 = ((unint64_t)v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = a2[7];
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v33 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v41 = v33;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v32);
  if (!result)
  {
    uint64_t v36 = *(uint64_t (**)(unint64_t, uint64_t))(v41 + 8);
    return v36(v34, v32);
  }
  return result;
}

unsigned char *sub_24ED70860(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 64);
  size_t v9 = *(void *)(v8 - 8);
  size_t v10 = v9;
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v72 = *(void *)(a3 + 16);
  uint64_t v73 = a3;
  uint64_t v12 = *(void *)(v72 - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  uint64_t v15 = *(_DWORD *)(v12 + 80);
  uint64_t v16 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v12 + 80));
  size_t v74 = a1;
  __dst = (void *)((unint64_t)&a1[v16 + 1] & ~v16);
  unsigned int v17 = (unsigned __int16 *)((unint64_t)&a2[v16 + 1] & ~v16);
  uint64_t v18 = *(unsigned int *)(v7 + 84);
  uint64_t v19 = *(unsigned int *)(v9 + 84);
  unsigned int v20 = v19 - 1;
  if (!v19) {
    unsigned int v20 = 0;
  }
  if (v20 <= v18) {
    unsigned int v21 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v21 = v20;
  }
  unsigned int v22 = v14 - 1;
  if (!v14) {
    unsigned int v22 = 0;
  }
  if (v22 <= v21) {
    unsigned int v23 = v21;
  }
  else {
    unsigned int v23 = v22;
  }
  size_t v24 = *(void *)(v9 + 64);
  if (v19) {
    size_t v25 = v24;
  }
  else {
    size_t v25 = v24 + 1;
  }
  uint64_t v26 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  size_t v27 = v25 + v15;
  if (v14) {
    uint64_t v28 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v28 = *(void *)(v12 + 64) + 1;
  }
  size_t v29 = ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28;
  uint64_t v70 = ~v11;
  uint64_t v71 = ~v15;
  size_t __n = v25;
  if (!v23)
  {
    if (!*((unsigned char *)v17 + v29)) {
      goto LABEL_34;
    }
    int v40 = (*((unsigned __int8 *)v17 + v29) - 1) << (8 * v29);
    if (v29 > 3) {
      int v40 = 0;
    }
    if (v29)
    {
      int v41 = v29 <= 3 ? ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28 : 4;
      switch(v41)
      {
        case 2:
          int v42 = *v17;
          break;
        case 3:
          int v42 = *v17 | (*((unsigned __int8 *)v17 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)v17;
          break;
        default:
          int v42 = *(unsigned __int8 *)v17;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    if ((v42 | v40) == 0xFFFFFFFF) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (v18 == v23)
  {
    size_t v30 = v17;
    size_t v66 = v10;
    unsigned int v31 = v23;
    uint64_t v32 = v28;
    uint64_t v33 = v17;
    uint64_t v34 = *(void *)(v72 - 8);
    size_t v35 = v29;
    size_t v36 = v25 + v15;
    uint64_t v37 = v8;
    uint64_t v38 = v6;
    int v39 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(v30, v18, v6);
    uint64_t v6 = v38;
    uint64_t v8 = v37;
    size_t v27 = v36;
    size_t v29 = v35;
    uint64_t v13 = v34;
    unsigned int v17 = v33;
    uint64_t v28 = v32;
    unsigned int v23 = v31;
    size_t v10 = v66;
    if (!v39) {
      goto LABEL_34;
    }
LABEL_47:
    if (v23) {
      size_t v52 = v29;
    }
    else {
      size_t v52 = v29 + 1;
    }
    int v50 = __dst;
    memcpy(__dst, v17, v52);
    uint64_t v51 = v73;
    goto LABEL_51;
  }
  size_t v67 = v6;
  unint64_t v43 = ((unint64_t)v17 + v26) & ~v11;
  if (v20 == v23) {
    unsigned int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v43, v19, v8);
  }
  else {
    unsigned int v44 = (*(uint64_t (**)(size_t))(v12 + 48))((v27 + v43) & ~v15);
  }
  uint64_t v6 = v67;
  if (v44 >= 2) {
    goto LABEL_47;
  }
LABEL_34:
  size_t v68 = v28;
  uint64_t v45 = v8;
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v7 + 16))(__dst, v17, v6);
  size_t v46 = (void *)(((unint64_t)__dst + v26) & v70);
  int v47 = (const void *)(((unint64_t)v17 + v26) & v70);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v47, 1, v45))
  {
    memcpy(v46, v47, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v46, v47, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v45);
  }
  int v48 = (void *)(((unint64_t)v46 + v27) & v71);
  int v49 = (const void *)(((unint64_t)v47 + v27) & v71);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v49, 1, v72))
  {
    memcpy(v48, v49, v68);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v48, v49, v72);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v72);
  }
  int v50 = __dst;
  uint64_t v51 = v73;
  if (!v23) {
    *((unsigned char *)__dst + v29) = 0;
  }
LABEL_51:
  if (v23) {
    size_t v53 = v29;
  }
  else {
    size_t v53 = v29 + 1;
  }
  uint64_t v54 = (void *)(((unint64_t)v50 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)(((unint64_t)v17 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  uint64_t v56 = (void *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v57 = (void *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v56 = *v57;
  uint64_t v58 = *(void *)(v51 + 56);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v61 = (void *)(((unint64_t)v56 + v60 + 8) & ~v60);
  uint64_t v62 = (const void *)(((unint64_t)v57 + v60 + 8) & ~v60);
  uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v62, 1, v58))
  {
    if (*(_DWORD *)(v59 + 84)) {
      size_t v64 = *(void *)(v59 + 64);
    }
    else {
      size_t v64 = *(void *)(v59 + 64) + 1;
    }
    memcpy(v61, v62, v64);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(v61, v62, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
  }
  return v74;
}

unsigned char *sub_24ED70E4C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v103 = a3;
  uint64_t v104 = *(void *)(a3 + 64);
  uint64_t v8 = *(void *)(v104 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v105 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v105 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v10 + 80));
  uint64_t v102 = a1;
  uint64_t v15 = (unsigned __int16 *)((unint64_t)&a1[v14 + 1] & ~v14);
  uint64_t v108 = (unsigned __int16 *)((unint64_t)&a2[v14 + 1] & ~v14);
  uint64_t v16 = *(unsigned int *)(v7 + 84);
  uint64_t v107 = v8;
  uint64_t v17 = *(unsigned int *)(v8 + 84);
  if (v17) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = 0;
  }
  if (v18 <= v16) {
    unsigned int v19 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v19 = v18;
  }
  unsigned int v20 = v12 - 1;
  if (!v12) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  if (v17) {
    uint64_t v22 = *(void *)(*(void *)(v104 - 8) + 64);
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v104 - 8) + 64) + 1;
  }
  uint64_t v23 = ~v9;
  uint64_t v24 = *(void *)(*(void *)(v6 - 8) + 64) + v9;
  uint64_t v25 = (v22 + v13 + (v24 & ~v9)) & ~v13;
  if (v12) {
    uint64_t v26 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v10 + 64) + 1;
  }
  size_t v27 = v25 + v26;
  uint64_t v100 = ~v13;
  uint64_t v101 = *(void *)(v105 - 8);
  size_t v98 = v26;
  uint64_t v99 = v22 + v13;
  size_t __n = v22;
  uint64_t v106 = *(void *)(*(void *)(v6 - 8) + 64) + v9;
  if (!v21)
  {
    char v39 = 8 * v27;
    uint64_t v38 = v102;
    uint64_t v37 = v103;
    size_t v35 = v108;
    if (*((unsigned char *)v15 + v27))
    {
      int v40 = (*((unsigned __int8 *)v15 + v27) - 1) << v39;
      if (v27 > 3) {
        int v40 = 0;
      }
      if (v27)
      {
        int v41 = v27 <= 3 ? v27 : 4;
        switch(v41)
        {
          case 2:
            int v42 = *v15;
            break;
          case 3:
            int v42 = *v15 | (*((unsigned __int8 *)v15 + 2) << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)v15;
            break;
          default:
            int v42 = *(unsigned __int8 *)v15;
            break;
        }
      }
      else
      {
        int v42 = 0;
      }
      if ((v42 | v40) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v108 + v27)) {
          goto LABEL_103;
        }
        int v50 = (*((unsigned __int8 *)v108 + v27) - 1) << v39;
        if (v27 > 3) {
          int v50 = 0;
        }
        if (v27)
        {
          int v51 = v27 <= 3 ? v27 : 4;
          switch(v51)
          {
            case 2:
              int v52 = *v108;
              break;
            case 3:
              int v52 = *v108 | (*((unsigned __int8 *)v108 + 2) << 16);
              break;
            case 4:
              int v52 = *(_DWORD *)v108;
              break;
            default:
              int v52 = *(unsigned __int8 *)v108;
              break;
          }
        }
        else
        {
          int v52 = 0;
        }
        if ((v52 | v50) == 0xFFFFFFFF) {
          goto LABEL_103;
        }
        goto LABEL_99;
      }
    }
    if (!*((unsigned char *)v108 + v27)) {
      goto LABEL_80;
    }
    int v53 = (*((unsigned __int8 *)v108 + v27) - 1) << v39;
    if (v27 > 3) {
      int v53 = 0;
    }
    if (v27)
    {
      if (v27 <= 3) {
        int v54 = v27;
      }
      else {
        int v54 = 4;
      }
      switch(v54)
      {
        case 2:
          int v55 = *v108;
          break;
        case 3:
          int v55 = *v108 | (*((unsigned __int8 *)v108 + 2) << 16);
          break;
        case 4:
          int v55 = *(_DWORD *)v108;
          break;
        default:
          int v55 = *(unsigned __int8 *)v108;
          break;
      }
    }
    else
    {
      int v55 = 0;
    }
    int v36 = (v55 | v53) + 1;
    goto LABEL_75;
  }
  if (v16 == v21)
  {
    size_t v28 = v25 + v26;
    unsigned int v96 = v21;
    size_t v29 = v15;
    size_t v30 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v31 = ~v9;
    uint64_t v32 = *(void *)(v6 - 8);
    uint64_t v33 = v6;
    int v34 = v30(v29, v16, v6);
    size_t v35 = v108;
    int v36 = v30(v108, v16, v33);
    uint64_t v6 = v33;
    uint64_t v7 = v32;
    uint64_t v23 = v31;
    uint64_t v15 = v29;
    unsigned int v21 = v96;
    size_t v27 = v28;
    uint64_t v38 = v102;
    uint64_t v37 = v103;
    if (v34)
    {
      if (!v36) {
        goto LABEL_103;
      }
LABEL_99:
      if (v21) {
        size_t v68 = v27;
      }
      else {
        size_t v68 = v27 + 1;
      }
      memcpy(v15, v35, v68);
      goto LABEL_111;
    }
LABEL_75:
    if (v36)
    {
LABEL_76:
      (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v15, v6);
      unint64_t v56 = ((unint64_t)v15 + v106) & v23;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v107 + 48))(v56, 1, v104)) {
        (*(void (**)(unint64_t, uint64_t))(v107 + 8))(v56, v104);
      }
      unint64_t v57 = (v99 + v56) & v100;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v101 + 48))(v57, 1, v105)) {
        (*(void (**)(unint64_t, uint64_t))(v101 + 8))(v57, v105);
      }
      goto LABEL_99;
    }
LABEL_80:
    size_t v95 = v27;
    (*(void (**)(unsigned __int16 *, const void *, uint64_t))(v7 + 24))(v15, v35, v6);
    uint64_t v109 = v15;
    uint64_t v58 = (void *)(((unint64_t)v15 + v106) & v23);
    uint64_t v59 = (void *)(((unint64_t)v35 + v106) & v23);
    uint64_t v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v107 + 48);
    int v61 = v60(v58, 1, v104);
    int v62 = v60(v59, 1, v104);
    if (v61)
    {
      if (!v62)
      {
        (*(void (**)(void *, void *, uint64_t))(v107 + 16))(v58, v59, v104);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v107 + 56))(v58, 0, 1, v104);
        goto LABEL_86;
      }
    }
    else
    {
      if (!v62)
      {
        (*(void (**)(void *, void *, uint64_t))(v107 + 24))(v58, v59, v104);
LABEL_86:
        uint64_t v63 = (void *)(((unint64_t)v58 + v99) & v100);
        size_t v64 = (void *)(((unint64_t)v59 + v99) & v100);
        uint64_t v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v101 + 48);
        int v66 = v65(v63, 1, v105);
        int v67 = v65(v64, 1, v105);
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(void *, void *, uint64_t))(v101 + 16))(v63, v64, v105);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v63, 0, 1, v105);
LABEL_92:
            uint64_t v15 = v109;
            size_t v27 = v95;
            goto LABEL_111;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(void *, void *, uint64_t))(v101 + 24))(v63, v64, v105);
            goto LABEL_92;
          }
          (*(void (**)(void *, uint64_t))(v101 + 8))(v63, v105);
        }
        memcpy(v63, v64, v98);
        goto LABEL_92;
      }
      (*(void (**)(void *, uint64_t))(v107 + 8))(v58, v104);
    }
    memcpy(v58, v59, __n);
    goto LABEL_86;
  }
  uint64_t v43 = v6;
  unint64_t v44 = ((unint64_t)v15 + v24) & v23;
  if (v18 == v21) {
    unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v107 + 48))(v44, v17, v104);
  }
  else {
    unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v22 + v13 + v44) & ~v13, v12, v105);
  }
  if (v45 < 2)
  {
    unint64_t v46 = ((unint64_t)v108 + v106) & v23;
    if (v18 == v21) {
      unsigned int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v107 + 48))(v46, v17, v104);
    }
    else {
      unsigned int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v99 + v46) & v100, v12, v105);
    }
    uint64_t v38 = v102;
    uint64_t v37 = v103;
    size_t v35 = v108;
    uint64_t v6 = v43;
    if (v47 >= 2) {
      goto LABEL_76;
    }
    goto LABEL_80;
  }
  unint64_t v48 = ((unint64_t)v108 + v106) & v23;
  if (v18 == v21) {
    unsigned int v49 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v107 + 48))(v48, v17, v104);
  }
  else {
    unsigned int v49 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v99 + v48) & v100, v12, v105);
  }
  uint64_t v38 = v102;
  uint64_t v37 = v103;
  size_t v35 = v108;
  uint64_t v6 = v43;
  if (v49 >= 2) {
    goto LABEL_99;
  }
LABEL_103:
  uint64_t v69 = v23;
  unsigned int v70 = v21;
  (*(void (**)(unsigned __int16 *, const void *, uint64_t))(v7 + 16))(v15, v35, v6);
  uint64_t v71 = v15;
  uint64_t v72 = (void *)(((unint64_t)v15 + v106) & v69);
  uint64_t v73 = (const void *)(((unint64_t)v35 + v106) & v69);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v107 + 48))(v73, 1, v104))
  {
    memcpy(v72, v73, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v107 + 16))(v72, v73, v104);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v107 + 56))(v72, 0, 1, v104);
  }
  size_t v74 = (void *)(((unint64_t)v72 + v99) & v100);
  uint64_t v75 = (const void *)(((unint64_t)v73 + v99) & v100);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v101 + 48))(v75, 1, v105))
  {
    memcpy(v74, v75, v98);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v101 + 16))(v74, v75, v105);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v74, 0, 1, v105);
  }
  uint64_t v15 = v71;
  unsigned int v21 = v70;
  if (!v70) {
    *((unsigned char *)v15 + v27) = 0;
  }
LABEL_111:
  if (v21) {
    size_t v76 = v27;
  }
  else {
    size_t v76 = v27 + 1;
  }
  uint64_t v77 = (void *)(((unint64_t)v15 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v78 = (void *)(((unint64_t)v35 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  size_t v79 = (void *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v80 = (void *)(((unint64_t)v78 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v79 = *v80;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v37 + 56);
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v84 = (void *)(((unint64_t)v79 + v83 + 8) & ~v83);
  uint64_t v85 = (void *)(((unint64_t)v80 + v83 + 8) & ~v83);
  int v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  int v87 = v86(v84, 1, v81);
  int v88 = v86(v85, 1, v81);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 16))(v84, v85, v81);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      return v38;
    }
    int v89 = *(_DWORD *)(v82 + 84);
    size_t v90 = *(void *)(v82 + 64);
  }
  else
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 24))(v84, v85, v81);
      return v38;
    }
    uint64_t v92 = *(void (**)(void *, uint64_t))(v82 + 8);
    uint64_t v91 = v82 + 8;
    v92(v84, v81);
    int v89 = *(_DWORD *)(v91 + 76);
    size_t v90 = *(void *)(v91 + 56);
  }
  if (v89) {
    size_t v93 = v90;
  }
  else {
    size_t v93 = v90 + 1;
  }
  memcpy(v84, v85, v93);
  return v38;
}

unsigned char *sub_24ED719A0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 64);
  size_t v9 = *(void *)(v8 - 8);
  size_t v10 = v9;
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v71 = *(void *)(a3 + 16);
  uint64_t v72 = a3;
  uint64_t v12 = *(void *)(v71 - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  uint64_t v15 = *(_DWORD *)(v12 + 80);
  uint64_t v16 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v12 + 80));
  uint64_t v73 = a1;
  __dst = (void *)((unint64_t)&a1[v16 + 1] & ~v16);
  uint64_t v17 = (unsigned __int16 *)((unint64_t)&a2[v16 + 1] & ~v16);
  uint64_t v18 = *(unsigned int *)(v7 + 84);
  uint64_t v19 = *(unsigned int *)(v9 + 84);
  unsigned int v20 = v19 - 1;
  if (!v19) {
    unsigned int v20 = 0;
  }
  if (v20 <= v18) {
    unsigned int v21 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v21 = v20;
  }
  unsigned int v22 = v14 - 1;
  if (!v14) {
    unsigned int v22 = 0;
  }
  if (v22 <= v21) {
    unsigned int v23 = v21;
  }
  else {
    unsigned int v23 = v22;
  }
  size_t v24 = *(void *)(v9 + 64);
  if (v19) {
    size_t v25 = v24;
  }
  else {
    size_t v25 = v24 + 1;
  }
  uint64_t v26 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  size_t v27 = v25 + v15;
  if (v14) {
    uint64_t v28 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v28 = *(void *)(v12 + 64) + 1;
  }
  size_t v29 = ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28;
  uint64_t v69 = ~v11;
  uint64_t v70 = ~v15;
  size_t __n = v25;
  if (!v23)
  {
    if (!*((unsigned char *)v17 + v29)) {
      goto LABEL_34;
    }
    int v40 = (*((unsigned __int8 *)v17 + v29) - 1) << (8 * v29);
    if (v29 > 3) {
      int v40 = 0;
    }
    if (v29)
    {
      int v41 = v29 <= 3 ? ((v25 + v15 + (v26 & ~v11)) & ~v15) + v28 : 4;
      switch(v41)
      {
        case 2:
          int v42 = *v17;
          break;
        case 3:
          int v42 = *v17 | (*((unsigned __int8 *)v17 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)v17;
          break;
        default:
          int v42 = *(unsigned __int8 *)v17;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    if ((v42 | v40) == 0xFFFFFFFF) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (v18 == v23)
  {
    size_t v30 = v17;
    size_t v65 = v10;
    unsigned int v31 = v23;
    uint64_t v32 = v28;
    uint64_t v33 = v17;
    uint64_t v34 = *(void *)(v71 - 8);
    size_t v35 = v29;
    size_t v36 = v25 + v15;
    uint64_t v37 = v8;
    uint64_t v38 = v6;
    int v39 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(v30, v18, v6);
    uint64_t v6 = v38;
    uint64_t v8 = v37;
    size_t v27 = v36;
    size_t v29 = v35;
    uint64_t v13 = v34;
    uint64_t v17 = v33;
    uint64_t v28 = v32;
    unsigned int v23 = v31;
    size_t v10 = v65;
    if (!v39) {
      goto LABEL_34;
    }
LABEL_47:
    if (v23) {
      size_t v52 = v29;
    }
    else {
      size_t v52 = v29 + 1;
    }
    int v50 = __dst;
    memcpy(__dst, v17, v52);
    uint64_t v51 = v72;
    goto LABEL_51;
  }
  size_t v66 = v6;
  unint64_t v43 = ((unint64_t)v17 + v26) & ~v11;
  if (v20 == v23) {
    unsigned int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v43, v19, v8);
  }
  else {
    unsigned int v44 = (*(uint64_t (**)(size_t))(v12 + 48))((v27 + v43) & ~v15);
  }
  uint64_t v6 = v66;
  if (v44 >= 2) {
    goto LABEL_47;
  }
LABEL_34:
  size_t v67 = v28;
  uint64_t v45 = v8;
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v7 + 32))(__dst, v17, v6);
  unint64_t v46 = (void *)(((unint64_t)__dst + v26) & v69);
  unsigned int v47 = (const void *)(((unint64_t)v17 + v26) & v69);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v47, 1, v45))
  {
    memcpy(v46, v47, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v46, v47, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v45);
  }
  unint64_t v48 = (void *)(((unint64_t)v46 + v27) & v70);
  unsigned int v49 = (const void *)(((unint64_t)v47 + v27) & v70);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v49, 1, v71))
  {
    memcpy(v48, v49, v67);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v48, v49, v71);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v71);
  }
  int v50 = __dst;
  uint64_t v51 = v72;
  if (!v23) {
    *((unsigned char *)__dst + v29) = 0;
  }
LABEL_51:
  if (v23) {
    size_t v53 = v29;
  }
  else {
    size_t v53 = v29 + 1;
  }
  int v54 = (_OWORD *)(((unint64_t)v50 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v55 = (_OWORD *)(((unint64_t)v17 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v54 = *v55;
  unint64_t v56 = (void *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = (void *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v56 = *v57;
  uint64_t v58 = *(void *)(v51 + 56);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(unsigned __int8 *)(v59 + 80);
  int v61 = (void *)(((unint64_t)v56 + v60 + 8) & ~v60);
  int v62 = (const void *)(((unint64_t)v57 + v60 + 8) & ~v60);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v62, 1, v58))
  {
    if (*(_DWORD *)(v59 + 84)) {
      size_t v63 = *(void *)(v59 + 64);
    }
    else {
      size_t v63 = *(void *)(v59 + 64) + 1;
    }
    memcpy(v61, v62, v63);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v61, v62, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
  }
  return v73;
}

unsigned char *sub_24ED71F70(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v102 = a3;
  uint64_t v103 = *(void *)(a3 + 64);
  uint64_t v8 = *(void *)(v103 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v104 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v104 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v7 + 80) | *(_DWORD *)(v10 + 80));
  uint64_t v101 = a1;
  uint64_t v15 = (unsigned __int16 *)((unint64_t)&a1[v14 + 1] & ~v14);
  uint64_t v107 = (unsigned __int16 *)((unint64_t)&a2[v14 + 1] & ~v14);
  uint64_t v16 = *(unsigned int *)(v7 + 84);
  uint64_t v106 = v8;
  uint64_t v17 = *(unsigned int *)(v8 + 84);
  if (v17) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = 0;
  }
  if (v18 <= v16) {
    unsigned int v19 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v19 = v18;
  }
  unsigned int v20 = v12 - 1;
  if (!v12) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  if (v17) {
    uint64_t v22 = *(void *)(*(void *)(v103 - 8) + 64);
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v103 - 8) + 64) + 1;
  }
  uint64_t v23 = ~v9;
  uint64_t v24 = *(void *)(*(void *)(v6 - 8) + 64) + v9;
  uint64_t v25 = (v22 + v13 + (v24 & ~v9)) & ~v13;
  if (v12) {
    uint64_t v26 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v10 + 64) + 1;
  }
  size_t v27 = v25 + v26;
  uint64_t v99 = ~v13;
  uint64_t v100 = *(void *)(v104 - 8);
  size_t v97 = v26;
  uint64_t v98 = v22 + v13;
  size_t __n = v22;
  uint64_t v105 = *(void *)(*(void *)(v6 - 8) + 64) + v9;
  if (!v21)
  {
    char v39 = 8 * v27;
    uint64_t v38 = v101;
    uint64_t v37 = v102;
    size_t v35 = v107;
    if (*((unsigned char *)v15 + v27))
    {
      int v40 = (*((unsigned __int8 *)v15 + v27) - 1) << v39;
      if (v27 > 3) {
        int v40 = 0;
      }
      if (v27)
      {
        int v41 = v27 <= 3 ? v27 : 4;
        switch(v41)
        {
          case 2:
            int v42 = *v15;
            break;
          case 3:
            int v42 = *v15 | (*((unsigned __int8 *)v15 + 2) << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)v15;
            break;
          default:
            int v42 = *(unsigned __int8 *)v15;
            break;
        }
      }
      else
      {
        int v42 = 0;
      }
      if ((v42 | v40) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v107 + v27)) {
          goto LABEL_103;
        }
        int v50 = (*((unsigned __int8 *)v107 + v27) - 1) << v39;
        if (v27 > 3) {
          int v50 = 0;
        }
        if (v27)
        {
          int v51 = v27 <= 3 ? v27 : 4;
          switch(v51)
          {
            case 2:
              int v52 = *v107;
              break;
            case 3:
              int v52 = *v107 | (*((unsigned __int8 *)v107 + 2) << 16);
              break;
            case 4:
              int v52 = *(_DWORD *)v107;
              break;
            default:
              int v52 = *(unsigned __int8 *)v107;
              break;
          }
        }
        else
        {
          int v52 = 0;
        }
        if ((v52 | v50) == 0xFFFFFFFF) {
          goto LABEL_103;
        }
        goto LABEL_99;
      }
    }
    if (!*((unsigned char *)v107 + v27)) {
      goto LABEL_80;
    }
    int v53 = (*((unsigned __int8 *)v107 + v27) - 1) << v39;
    if (v27 > 3) {
      int v53 = 0;
    }
    if (v27)
    {
      if (v27 <= 3) {
        int v54 = v27;
      }
      else {
        int v54 = 4;
      }
      switch(v54)
      {
        case 2:
          int v55 = *v107;
          break;
        case 3:
          int v55 = *v107 | (*((unsigned __int8 *)v107 + 2) << 16);
          break;
        case 4:
          int v55 = *(_DWORD *)v107;
          break;
        default:
          int v55 = *(unsigned __int8 *)v107;
          break;
      }
    }
    else
    {
      int v55 = 0;
    }
    int v36 = (v55 | v53) + 1;
    goto LABEL_75;
  }
  if (v16 == v21)
  {
    size_t v28 = v25 + v26;
    unsigned int v95 = v21;
    size_t v29 = v15;
    size_t v30 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v31 = ~v9;
    uint64_t v32 = *(void *)(v6 - 8);
    uint64_t v33 = v6;
    int v34 = v30(v29, v16, v6);
    size_t v35 = v107;
    int v36 = v30(v107, v16, v33);
    uint64_t v6 = v33;
    uint64_t v7 = v32;
    uint64_t v23 = v31;
    uint64_t v15 = v29;
    unsigned int v21 = v95;
    size_t v27 = v28;
    uint64_t v38 = v101;
    uint64_t v37 = v102;
    if (v34)
    {
      if (!v36) {
        goto LABEL_103;
      }
LABEL_99:
      if (v21) {
        size_t v68 = v27;
      }
      else {
        size_t v68 = v27 + 1;
      }
      memcpy(v15, v35, v68);
      goto LABEL_111;
    }
LABEL_75:
    if (v36)
    {
LABEL_76:
      (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v15, v6);
      unint64_t v56 = ((unint64_t)v15 + v105) & v23;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v106 + 48))(v56, 1, v103)) {
        (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v56, v103);
      }
      unint64_t v57 = (v98 + v56) & v99;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v100 + 48))(v57, 1, v104)) {
        (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v57, v104);
      }
      goto LABEL_99;
    }
LABEL_80:
    size_t v94 = v27;
    (*(void (**)(unsigned __int16 *, const void *, uint64_t))(v7 + 40))(v15, v35, v6);
    uint64_t v108 = v15;
    uint64_t v58 = (void *)(((unint64_t)v15 + v105) & v23);
    uint64_t v59 = (void *)(((unint64_t)v35 + v105) & v23);
    uint64_t v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v106 + 48);
    int v61 = v60(v58, 1, v103);
    int v62 = v60(v59, 1, v103);
    if (v61)
    {
      if (!v62)
      {
        (*(void (**)(void *, void *, uint64_t))(v106 + 32))(v58, v59, v103);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v58, 0, 1, v103);
        goto LABEL_86;
      }
    }
    else
    {
      if (!v62)
      {
        (*(void (**)(void *, void *, uint64_t))(v106 + 40))(v58, v59, v103);
LABEL_86:
        size_t v63 = (void *)(((unint64_t)v58 + v98) & v99);
        size_t v64 = (void *)(((unint64_t)v59 + v98) & v99);
        size_t v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v100 + 48);
        int v66 = v65(v63, 1, v104);
        int v67 = v65(v64, 1, v104);
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(void *, void *, uint64_t))(v100 + 32))(v63, v64, v104);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v63, 0, 1, v104);
LABEL_92:
            uint64_t v15 = v108;
            size_t v27 = v94;
            goto LABEL_111;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(void *, void *, uint64_t))(v100 + 40))(v63, v64, v104);
            goto LABEL_92;
          }
          (*(void (**)(void *, uint64_t))(v100 + 8))(v63, v104);
        }
        memcpy(v63, v64, v97);
        goto LABEL_92;
      }
      (*(void (**)(void *, uint64_t))(v106 + 8))(v58, v103);
    }
    memcpy(v58, v59, __n);
    goto LABEL_86;
  }
  uint64_t v43 = v6;
  unint64_t v44 = ((unint64_t)v15 + v24) & v23;
  if (v18 == v21) {
    unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v106 + 48))(v44, v17, v103);
  }
  else {
    unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v22 + v13 + v44) & ~v13, v12, v104);
  }
  if (v45 < 2)
  {
    unint64_t v46 = ((unint64_t)v107 + v105) & v23;
    if (v18 == v21) {
      unsigned int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v106 + 48))(v46, v17, v103);
    }
    else {
      unsigned int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v98 + v46) & v99, v12, v104);
    }
    uint64_t v38 = v101;
    uint64_t v37 = v102;
    size_t v35 = v107;
    uint64_t v6 = v43;
    if (v47 >= 2) {
      goto LABEL_76;
    }
    goto LABEL_80;
  }
  unint64_t v48 = ((unint64_t)v107 + v105) & v23;
  if (v18 == v21) {
    unsigned int v49 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v106 + 48))(v48, v17, v103);
  }
  else {
    unsigned int v49 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v98 + v48) & v99, v12, v104);
  }
  uint64_t v38 = v101;
  uint64_t v37 = v102;
  size_t v35 = v107;
  uint64_t v6 = v43;
  if (v49 >= 2) {
    goto LABEL_99;
  }
LABEL_103:
  uint64_t v69 = v23;
  unsigned int v70 = v21;
  (*(void (**)(unsigned __int16 *, const void *, uint64_t))(v7 + 32))(v15, v35, v6);
  uint64_t v71 = v15;
  uint64_t v72 = (void *)(((unint64_t)v15 + v105) & v69);
  uint64_t v73 = (const void *)(((unint64_t)v35 + v105) & v69);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v106 + 48))(v73, 1, v103))
  {
    memcpy(v72, v73, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v106 + 32))(v72, v73, v103);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v72, 0, 1, v103);
  }
  size_t v74 = (void *)(((unint64_t)v72 + v98) & v99);
  uint64_t v75 = (const void *)(((unint64_t)v73 + v98) & v99);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v100 + 48))(v75, 1, v104))
  {
    memcpy(v74, v75, v97);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v100 + 32))(v74, v75, v104);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v74, 0, 1, v104);
  }
  uint64_t v15 = v71;
  unsigned int v21 = v70;
  if (!v70) {
    *((unsigned char *)v15 + v27) = 0;
  }
LABEL_111:
  if (v21) {
    size_t v76 = v27;
  }
  else {
    size_t v76 = v27 + 1;
  }
  uint64_t v77 = (void *)(((unint64_t)v15 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v78 = (void *)(((unint64_t)v35 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRelease();
  size_t v79 = (void *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v80 = (void *)(((unint64_t)v78 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v79 = *v80;
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v37 + 56);
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v84 = (void *)(((unint64_t)v79 + v83 + 8) & ~v83);
  uint64_t v85 = (void *)(((unint64_t)v80 + v83 + 8) & ~v83);
  int v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  LODWORD(v79) = v86(v84, 1, v81);
  int v87 = v86(v85, 1, v81);
  if (v79)
  {
    if (!v87)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v84, v85, v81);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      return v38;
    }
    int v88 = *(_DWORD *)(v82 + 84);
    size_t v89 = *(void *)(v82 + 64);
  }
  else
  {
    if (!v87)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v84, v85, v81);
      return v38;
    }
    uint64_t v91 = *(void (**)(void *, uint64_t))(v82 + 8);
    uint64_t v90 = v82 + 8;
    v91(v84, v81);
    int v88 = *(_DWORD *)(v90 + 76);
    size_t v89 = *(void *)(v90 + 56);
  }
  if (v88) {
    size_t v92 = v89;
  }
  else {
    size_t v92 = v89 + 1;
  }
  memcpy(v84, v85, v92);
  return v38;
}

uint64_t sub_24ED72AB4(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(sub_24EE55880() - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v53 = a3[8];
  uint64_t v8 = *(void *)(v53 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v52 = a3[2];
  uint64_t v13 = *(void *)(v52 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v12) {
    unsigned int v16 = v12;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void *)(v17 - 8);
  if (v16) {
    unsigned int v19 = v16 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  uint64_t v20 = *(void *)(a3[7] - 8);
  uint64_t v21 = *(unsigned int *)(v18 + 84);
  unsigned int v22 = v21 - 1;
  if (!v21) {
    unsigned int v22 = 0;
  }
  if (v19 <= v22) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = v19;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v10) {
    uint64_t v25 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v8 + 64) + 1;
  }
  if (v14) {
    uint64_t v26 = v16 == 0;
  }
  else {
    uint64_t v26 = (v16 == 0) + 1;
  }
  int v27 = *(_DWORD *)(v5 + 80);
  uint64_t v28 = *(void *)(v5 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  if (v21) {
    uint64_t v30 = *(void *)(v18 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v18 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v31 = (*(_DWORD *)(v9 + 80) | v27 | *(_DWORD *)(v13 + 80));
  uint64_t v32 = v28 + *(_DWORD *)(v9 + 80);
  uint64_t v33 = v25 + *(_DWORD *)(v13 + 80);
  unint64_t v34 = v26
      + *(void *)(*(void *)(v52 - 8) + 64)
      + ((v33 + (v32 & ~(unint64_t)*(_DWORD *)(v9 + 80))) & ~(unint64_t)*(_DWORD *)(v13 + 80));
  uint64_t v35 = v29 + 8;
  int v36 = a2 - v24;
  if (a2 <= v24) {
    goto LABEL_52;
  }
  unint64_t v37 = (v35 + ((((v34 + ((v31 + 1) & ~v31) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v29;
  unint64_t v38 = v30 + v37;
  char v39 = 8 * (v30 + v37);
  if (v38 > 3) {
    goto LABEL_35;
  }
  unsigned int v41 = ((v36 + ~(-1 << v39)) >> v39) + 1;
  if (HIWORD(v41))
  {
    int v40 = *(_DWORD *)((char *)a1 + v38);
    if (v40) {
      goto LABEL_42;
    }
  }
  else
  {
    if (v41 <= 0xFF)
    {
      if (v41 < 2) {
        goto LABEL_52;
      }
LABEL_35:
      int v40 = *((unsigned __int8 *)a1 + v38);
      if (!*((unsigned char *)a1 + v38)) {
        goto LABEL_52;
      }
LABEL_42:
      int v42 = (v40 - 1) << v39;
      if (v38 > 3) {
        int v42 = 0;
      }
      if (v38)
      {
        if (v38 <= 3) {
          int v43 = v38;
        }
        else {
          int v43 = 4;
        }
        switch(v43)
        {
          case 2:
            int v44 = *a1;
            break;
          case 3:
            int v44 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v44 = *(_DWORD *)a1;
            break;
          default:
            int v44 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v44 = 0;
      }
      return v24 + (v44 | v42) + 1;
    }
    int v40 = *(unsigned __int16 *)((char *)a1 + v38);
    if (*(unsigned __int16 *)((char *)a1 + v38)) {
      goto LABEL_42;
    }
  }
LABEL_52:
  uint64_t v45 = ((unint64_t)a1 + v31 + 1) & ~v31;
  if (v19 == v24)
  {
    if (v16 >= 2)
    {
      if (v7 == v16)
      {
        unsigned int v46 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v45);
      }
      else
      {
        unint64_t v50 = (v32 + v45) & ~(unint64_t)*(_DWORD *)(v9 + 80);
        if (v11 == v16) {
          unsigned int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v50, v10, v53);
        }
        else {
          unsigned int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))((v33 + v50) & ~(unint64_t)*(_DWORD *)(v13 + 80), v14, v52);
        }
        if (v51 >= 2) {
          unsigned int v46 = v51 - 1;
        }
        else {
          unsigned int v46 = 0;
        }
      }
      goto LABEL_73;
    }
    return 0;
  }
  unint64_t v47 = (v45 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v23 & 0x80000000) != 0)
  {
    if (v21 >= 2)
    {
      unsigned int v46 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))((v35 + ((v47 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v29, v21, v17);
LABEL_73:
      if (v46 >= 2) {
        return v46 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v48 = *(void *)(v47 + 8);
  if (v48 >= 0xFFFFFFFF) {
    LODWORD(v48) = -1;
  }
  return (v48 + 1);
}

void sub_24ED72F18(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v7 = sub_24EE55880();
  int v63 = 0;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v60 = v7;
  uint64_t v10 = *(void *)(a4[8] - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v59 = a4[2];
  uint64_t v14 = *(void *)(v59 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v15) {
    unsigned int v16 = v15 - 1;
  }
  else {
    unsigned int v16 = 0;
  }
  if (v16 <= v13) {
    unsigned int v17 = v13;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v17) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = 0;
  }
  uint64_t v61 = a4[7];
  uint64_t v19 = *(void *)(v61 - 8);
  uint64_t v20 = *(unsigned int *)(v19 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  unsigned int v22 = v20 - 1;
  if (!v20) {
    unsigned int v22 = 0;
  }
  if (v18 <= v22) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = v18;
  }
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v11) {
    uint64_t v25 = *(void *)(*(void *)(a4[8] - 8) + 64);
  }
  else {
    uint64_t v25 = *(void *)(*(void *)(a4[8] - 8) + 64) + 1;
  }
  if (v15) {
    size_t v26 = *(void *)(*(void *)(v59 - 8) + 64);
  }
  else {
    size_t v26 = *(void *)(*(void *)(v59 - 8) + 64) + 1;
  }
  uint64_t v27 = *(_DWORD *)(v10 + 80);
  uint64_t v28 = *(void *)(*(void *)(v7 - 8) + 64) + v27;
  uint64_t v29 = v25 + *(_DWORD *)(v14 + 80);
  size_t v30 = ((v29 + (v28 & ~v27)) & ~(unint64_t)*(_DWORD *)(v14 + 80)) + v26;
  if (v17) {
    unint64_t v31 = ((v29 + (v28 & ~(unint64_t)*(_DWORD *)(v10 + 80))) & ~(unint64_t)*(_DWORD *)(v14 + 80))
  }
        + v26;
  else {
    unint64_t v31 = v30 + 1;
  }
  uint64_t v32 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v8 + 80) | *(_DWORD *)(v14 + 80));
  uint64_t v33 = v21 + 8;
  if (v20) {
    uint64_t v34 = *(void *)(*(void *)(v61 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v61 - 8) + 64) + 1;
  }
  size_t v35 = v34
      + ((v21 + 8 + ((((v31 + ((v32 + 1) & ~v32) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v21);
  BOOL v36 = a3 >= v24;
  unsigned int v37 = a3 - v24;
  if (v37 != 0 && v36)
  {
    if (v35 <= 3)
    {
      unsigned int v39 = ((v37 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
      if (HIWORD(v39))
      {
        int v38 = 4;
      }
      else
      {
        int v38 = v39 > 1;
        if (v39 >= 0x100) {
          int v38 = 2;
        }
      }
    }
    else
    {
      int v38 = 1;
    }
    int v63 = v38;
  }
  if (v24 < a2)
  {
    unsigned int v40 = ~v24 + a2;
    if (v35 < 4)
    {
      int v41 = (v40 >> (8 * v35)) + 1;
      if (v35)
      {
        int v44 = v40 & ~(-1 << (8 * v35));
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v44;
          a1[2] = BYTE2(v44);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v44;
        }
        else
        {
          *a1 = v44;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v40;
      int v41 = 1;
    }
    switch(v63)
    {
      case 1:
        a1[v35] = v41;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v41;
        return;
      case 3:
        goto LABEL_110;
      case 4:
        *(_DWORD *)&a1[v35] = v41;
        return;
      default:
        return;
    }
  }
  unint64_t v42 = ~(unint64_t)*(_DWORD *)(v14 + 80);
  uint64_t v43 = ~v21;
  switch(v63)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_57;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_57;
    case 3:
LABEL_110:
      __break(1u);
      JUMPOUT(0x24ED73590);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_56;
    default:
LABEL_56:
      if (!a2) {
        return;
      }
LABEL_57:
      uint64_t v45 = (unsigned char *)((unint64_t)&a1[v32 + 1] & ~v32);
      if (v18 != v24)
      {
        unsigned int v49 = (void *)((unint64_t)&v45[v31 + 7] & 0xFFFFFFFFFFFFFFF8);
        if ((v23 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *unsigned int v49 = a2 ^ 0x80000000;
            v49[1] = 0;
          }
          else
          {
            v49[1] = a2 - 1;
          }
          return;
        }
        if (v20 < 2) {
          return;
        }
        unint64_t v50 = (v33 + (((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8)) & v43;
        uint64_t v51 = a2 + 1;
        uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
        uint64_t v53 = v20;
        uint64_t v54 = v61;
LABEL_109:
        v52(v50, v51, v53, v54);
        return;
      }
      if (v17 < 2) {
        return;
      }
      if (a2 + 1 > v17)
      {
        if (v30 <= 3) {
          int v46 = ~(-1 << (8 * v30));
        }
        else {
          int v46 = -1;
        }
        if (v30)
        {
          int v47 = v46 & (a2 - v17);
          if (v30 <= 3) {
            int v48 = v30;
          }
          else {
            int v48 = 4;
          }
          bzero(v45, v30);
          switch(v48)
          {
            case 2:
              goto LABEL_104;
            case 3:
              goto LABEL_105;
            case 4:
              goto LABEL_106;
            default:
              goto LABEL_68;
          }
        }
        return;
      }
      if (a2 == -1) {
        return;
      }
      if (v9 == v17)
      {
        uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        unint64_t v50 = (unint64_t)&a1[v32 + 1] & ~v32;
        uint64_t v51 = a2 + 1;
        uint64_t v53 = v9;
        uint64_t v54 = v60;
        goto LABEL_109;
      }
      unint64_t v55 = (unint64_t)&v45[v28] & ~v27;
      if (v12 == v17)
      {
        unint64_t v56 = *(void (**)(unint64_t, void))(v10 + 56);
        v56(v55, a2 + 2);
      }
      else
      {
        uint64_t v45 = (unsigned char *)((v29 + v55) & v42);
        if (a2 + 1 <= v16)
        {
          uint64_t v51 = a2 + 2;
          uint64_t v52 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
          unint64_t v50 = (v29 + v55) & v42;
          uint64_t v53 = v15;
          uint64_t v54 = v59;
          goto LABEL_109;
        }
        if (v26 <= 3) {
          int v57 = ~(-1 << (8 * v26));
        }
        else {
          int v57 = -1;
        }
        if (v26)
        {
          int v47 = v57 & (a2 - v16);
          if (v26 <= 3) {
            int v58 = v26;
          }
          else {
            int v58 = 4;
          }
          bzero((void *)((v29 + v55) & v42), v26);
          switch(v58)
          {
            case 2:
LABEL_104:
              *(_WORD *)uint64_t v45 = v47;
              break;
            case 3:
LABEL_105:
              *(_WORD *)uint64_t v45 = v47;
              v45[2] = BYTE2(v47);
              break;
            case 4:
LABEL_106:
              *(_DWORD *)uint64_t v45 = v47;
              break;
            default:
LABEL_68:
              *uint64_t v45 = v47;
              break;
          }
        }
      }
      return;
  }
}

unsigned char *sub_24ED735D8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED736A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24ED736CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED736E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED73704()
{
  return swift_getWitnessTable();
}

BOOL static ActionCardViewStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24ED73738()
{
  uint64_t v1 = 0x6465726F7272696DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x72657474616C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1819047270;
  }
}

uint64_t sub_24ED7378C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED7496C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ED737B4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24ED737C0(uint64_t a1)
{
  unint64_t v2 = sub_24ED73D04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED737FC(uint64_t a1)
{
  unint64_t v2 = sub_24ED73D04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED73838(uint64_t a1)
{
  unint64_t v2 = sub_24ED73E00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED73874(uint64_t a1)
{
  unint64_t v2 = sub_24ED73E00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED738B0(uint64_t a1)
{
  unint64_t v2 = sub_24ED73DAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED738EC(uint64_t a1)
{
  unint64_t v2 = sub_24ED73DAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED73928(uint64_t a1)
{
  unint64_t v2 = sub_24ED73D58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED73964(uint64_t a1)
{
  unint64_t v2 = sub_24ED73D58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ActionCardViewStyle.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6D0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned int v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6D8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6C8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE6C0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED73D04();
  sub_24EE578D0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24ED73DAC();
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24ED73D58();
      unsigned int v17 = v23;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24ED73E00();
    sub_24EE57740();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24ED73D04()
{
  unint64_t result = qword_26B1DD960;
  if (!qword_26B1DD960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD960);
  }
  return result;
}

unint64_t sub_24ED73D58()
{
  unint64_t result = qword_26B1DD990;
  if (!qword_26B1DD990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD990);
  }
  return result;
}

unint64_t sub_24ED73DAC()
{
  unint64_t result = qword_26B1DD9A8;
  if (!qword_26B1DD9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD9A8);
  }
  return result;
}

unint64_t sub_24ED73E00()
{
  unint64_t result = qword_26B1DD978;
  if (!qword_26B1DD978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD978);
  }
  return result;
}

uint64_t ActionCardViewStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  size_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B58);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unsigned int v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B60);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B68);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B70);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED73D04();
  uint64_t v12 = (uint64_t)v39;
  sub_24EE578C0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  unsigned int v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24EE57720();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EE57560();
    swift_allocError();
    unsigned int v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    *unsigned int v23 = &type metadata for ActionCardViewStyle;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24ED73DAC();
      uint64_t v18 = v30;
      sub_24EE57690();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24ED73D58();
      uint64_t v25 = v30;
      sub_24EE57690();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24ED73E00();
    uint64_t v24 = v30;
    sub_24EE57690();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24ED7440C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ActionCardViewStyle.init(from:)(a1, a2);
}

uint64_t sub_24ED74424(void *a1)
{
  return ActionCardViewStyle.encode(to:)(a1);
}

uint64_t ActionCardViewStyle.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t ActionCardViewStyle.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24ED744B4()
{
  unint64_t result = qword_269965B78;
  if (!qword_269965B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965B78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCardViewStyle()
{
  return &type metadata for ActionCardViewStyle;
}

unsigned char *_s15FitnessCanvasUI19ActionCardViewStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED745ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCardViewStyle.CodingKeys()
{
  return &type metadata for ActionCardViewStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionCardViewStyle.FullCodingKeys()
{
  return &type metadata for ActionCardViewStyle.FullCodingKeys;
}

ValueMetadata *type metadata accessor for ActionCardViewStyle.MirroredCodingKeys()
{
  return &type metadata for ActionCardViewStyle.MirroredCodingKeys;
}

ValueMetadata *type metadata accessor for ActionCardViewStyle.PlatterCodingKeys()
{
  return &type metadata for ActionCardViewStyle.PlatterCodingKeys;
}

unint64_t sub_24ED74658()
{
  unint64_t result = qword_269965B80;
  if (!qword_269965B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965B80);
  }
  return result;
}

unint64_t sub_24ED746B0()
{
  unint64_t result = qword_26B1DD988;
  if (!qword_26B1DD988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD988);
  }
  return result;
}

unint64_t sub_24ED74708()
{
  unint64_t result = qword_26B1DD980;
  if (!qword_26B1DD980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD980);
  }
  return result;
}

unint64_t sub_24ED74760()
{
  unint64_t result = qword_26B1DD9B8;
  if (!qword_26B1DD9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD9B8);
  }
  return result;
}

unint64_t sub_24ED747B8()
{
  unint64_t result = qword_26B1DD9B0;
  if (!qword_26B1DD9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD9B0);
  }
  return result;
}

unint64_t sub_24ED74810()
{
  unint64_t result = qword_26B1DD9A0;
  if (!qword_26B1DD9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD9A0);
  }
  return result;
}

unint64_t sub_24ED74868()
{
  unint64_t result = qword_26B1DD998;
  if (!qword_26B1DD998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD998);
  }
  return result;
}

unint64_t sub_24ED748C0()
{
  unint64_t result = qword_26B1DD970;
  if (!qword_26B1DD970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD970);
  }
  return result;
}

unint64_t sub_24ED74918()
{
  unint64_t result = qword_26B1DD968;
  if (!qword_26B1DD968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD968);
  }
  return result;
}

uint64_t sub_24ED7496C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819047270 && a2 == 0xE400000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465726F7272696DLL && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72657474616C70 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t dispatch thunk of CanvasItemPlaceholderCacheProviding.cache<A, B, C, D, E, F>(for:representedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(a16 + 8))();
}

uint64_t sub_24ED74AF0()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED74B78()
{
  return sub_24EE57880();
}

uint64_t sub_24ED74BEC()
{
  return sub_24EE578B0();
}

BOOL sub_24ED74C8C(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_24ED76554((uint64_t *)v7, (uint64_t *)v8);
}

uint64_t sub_24ED74CD4()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for CanvasItemPlaceholderCacheProvider()
{
  return self;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CanvasItemPlaceholderCacheProvider.Identifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasItemPlaceholderCacheProvider.Identifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)__n128 result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasItemPlaceholderCacheProvider.Identifier()
{
  return &type metadata for CanvasItemPlaceholderCacheProvider.Identifier;
}

unint64_t sub_24ED74DE8()
{
  unint64_t result = qword_26B1DD0A8;
  if (!qword_26B1DD0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD0A8);
  }
  return result;
}

void sub_24ED74E3C(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_getExtendedExistentialTypeMetadata();
  long long v4 = (uint64_t *)(v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16));
  long long v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_24ED7526C(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_24ED74F4C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v19 = a2;
  uint64_t v21 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_6;
  }
  unint64_t v22 = sub_24ED75398(a2);
  if ((v23 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v28 = v19;
  sub_24ED75440(*(void *)(v21 + 56) + 32 * v22, (uint64_t)v47);
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v39 = a10;
  uint64_t v40 = a11;
  uint64_t v41 = a12;
  uint64_t v42 = a13;
  uint64_t v43 = a14;
  uint64_t v44 = a15;
  uint64_t v45 = a16;
  uint64_t v46 = a17;
  uint64_t v24 = type metadata accessor for CanvasItemPlaceholderCache();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v19 = v28;
LABEL_6:
    uint64_t v34 = a4;
    uint64_t v35 = a5;
    uint64_t v37 = a7;
    uint64_t v38 = a8;
    uint64_t v39 = a10;
    uint64_t v40 = a11;
    uint64_t v41 = a12;
    uint64_t v42 = a13;
    uint64_t v43 = a14;
    uint64_t v44 = a15;
    uint64_t v45 = a16;
    uint64_t v46 = a17;
    uint64_t v26 = v19;
    uint64_t v24 = type metadata accessor for CanvasItemPlaceholderCache();
    uint64_t v25 = sub_24EE2A534();
    uint64_t v36 = v24;
    uint64_t v33 = v25;
    swift_retain();
    sub_24ED7512C((uint64_t)&v33, v26);
    goto LABEL_7;
  }
  uint64_t v25 = v48;
LABEL_7:
  a9[3] = v24;
  uint64_t result = swift_getWitnessTable();
  a9[4] = result;
  *a9 = v25;
  return result;
}

uint64_t sub_24ED7512C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_24ED7635C((_OWORD *)a1, v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *long long v2 = 0x8000000000000000;
    sub_24ED75EAC(v14, a2, isUniquelyReferenced_nonNull_native);
    *long long v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24ED7549C(a1);
    unint64_t v7 = sub_24ED75398(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_24ED7616C();
        uint64_t v11 = v13;
      }
      sub_24ED7635C((_OWORD *)(*(void *)(v11 + 56) + 32 * v9), v14);
      sub_24ED75C64(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_24ED7549C((uint64_t)v14);
  }
}

__n128 sub_24ED75230@<Q0>(uint64_t *a1@<X8>)
{
  sub_24ED74E3C(a1);
  return result;
}

uint64_t sub_24ED7526C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24ED74F4C(a1, *(void **)(v2 + 128), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2, *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120));
}

unint64_t sub_24ED752B4(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  sub_24EE570A0();
  uint64_t v4 = sub_24EE578B0();
  return sub_24ED754FC(a1, a2, v4);
}

unint64_t sub_24ED7532C(unsigned __int8 a1)
{
  sub_24EE57870();
  sub_24EE57880();
  uint64_t v2 = sub_24EE578B0();
  return sub_24ED755E0(a1, v2);
}

unint64_t sub_24ED75398(void *a1)
{
  sub_24EE57870();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  uint64_t v2 = sub_24EE578B0();
  return sub_24ED75680(a1, v2);
}

uint64_t sub_24ED75440(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24ED7549C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24ED754FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24EE577E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24EE577E0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24ED755E0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24ED75680(void *a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    do
    {
      uint64_t v8 = (void *)(v7 + 48 * result);
      if (*v8 == *a1
        && *(void *)(v7 + 48 * result + 8) == a1[1]
        && v8[2] == a1[2]
        && v8[3] == a1[3]
        && v8[4] == a1[4]
        && v8[5] == a1[5])
      {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_24ED75750(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D8);
  uint64_t v6 = (void *)sub_24EE57660();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = (long long *)(*(void *)(v5 + 48) + 48 * v15);
      uint64_t v20 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v15);
      long long v23 = v19[1];
      long long v24 = v19[2];
      long long v22 = *v19;
      if (a2) {
        sub_24ED7635C(v20, v25);
      }
      else {
        sub_24ED75440((uint64_t)v20, (uint64_t)v25);
      }
      v26[0] = v22;
      v26[1] = v23;
      v26[2] = v24;
      uint64_t result = (uint64_t)sub_24ED75FE8(v26, v25, v6);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_24ED75964(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5E0);
  uint64_t v6 = sub_24EE57660();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      long long v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_24ED7635C(v24, v35);
      }
      else
      {
        sub_24ED75440((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24EE57870();
      sub_24EE570A0();
      uint64_t result = sub_24EE578B0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_24ED7635C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_24ED75C64(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24EE574A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v24 = v2;
      uint64_t v25 = v4;
      unint64_t v26 = (result + 1) & v7;
      do
      {
        sub_24EE57870();
        sub_24EE57880();
        sub_24EE57880();
        sub_24EE57880();
        sub_24EE57880();
        sub_24EE57880();
        sub_24EE57880();
        uint64_t result = sub_24EE578B0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v26)
        {
          if (v9 < v26)
          {
            uint64_t v2 = v24;
            uint64_t v4 = v25;
          }
          else
          {
            uint64_t v2 = v24;
            uint64_t v4 = v25;
            if (v3 >= (uint64_t)v9) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v2 = v24;
          uint64_t v4 = v25;
          if (v9 >= v26 || v3 >= (uint64_t)v9)
          {
LABEL_12:
            uint64_t v10 = *(void *)(v2 + 48);
            uint64_t v11 = (long long *)(v10 + 48 * v3);
            uint64_t v12 = (long long *)(v10 + 48 * v6);
            if (v3 != v6 || v11 >= v12 + 3)
            {
              long long v13 = *v12;
              long long v14 = v12[2];
              v11[1] = v12[1];
              v11[2] = v14;
              *uint64_t v11 = v13;
            }
            uint64_t v15 = *(void *)(v2 + 56);
            unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
            unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
            {
              long long v8 = v17[1];
              _OWORD *v16 = *v17;
              v16[1] = v8;
              int64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(v2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v23;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

_OWORD *sub_24ED75EAC(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  long long v8 = (void *)*v3;
  unint64_t v10 = sub_24ED75398(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24ED7616C();
      goto LABEL_7;
    }
    sub_24ED75750(v13, a3 & 1);
    unint64_t v19 = sub_24ED75398(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_24EE57800();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return sub_24ED7635C(a1, v17);
  }
LABEL_13:
  return sub_24ED760F0(v10, a2, a1, v16);
}

_OWORD *sub_24ED75FE8(_OWORD *a1, _OWORD *a2, void *a3)
{
  sub_24EE57870();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE57880();
  sub_24EE578B0();
  unint64_t v6 = sub_24EE574B0();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  uint64_t v7 = (_OWORD *)(a3[6] + 48 * v6);
  long long v8 = a1[1];
  *uint64_t v7 = *a1;
  v7[1] = v8;
  v7[2] = a1[2];
  uint64_t result = sub_24ED7635C(a2, (_OWORD *)(a3[7] + 32 * v6));
  ++a3[2];
  return result;
}

_OWORD *sub_24ED760F0(unint64_t a1, _OWORD *a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = (_OWORD *)(a4[6] + 48 * a1);
  long long v6 = a2[1];
  *uint64_t v5 = *a2;
  v5[1] = v6;
  v5[2] = a2[2];
  uint64_t result = sub_24ED7635C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_24ED7616C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24EE57650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    unint64_t v17 = (long long *)(*(void *)(v2 + 48) + 48 * v15);
    long long v23 = *v17;
    long long v24 = v17[1];
    long long v25 = v17[2];
    uint64_t v18 = 32 * v15;
    sub_24ED75440(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v19 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = v23;
    v19[1] = v24;
    v19[2] = v25;
    uint64_t result = sub_24ED7635C(v26, (_OWORD *)(*(void *)(v4 + 56) + v18));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

_OWORD *sub_24ED7635C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_24ED7636C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24EE57650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  long long v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_24ED75440(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_24ED7635C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_24ED76554(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  return v2 == v4 && v3 == v5 && v6 == v8 && v7 == v9 && v10 == v12 && v11 == v13;
}

__n128 sub_24ED7658C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12, uint64_t a13)
{
  char v18 = *a6;
  uint64_t v19 = *a7;
  uint64_t v20 = a7[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9, a1, a13);
  unint64_t v21 = (int *)type metadata accessor for DynamicBrickView();
  int64_t v22 = (void *)(a9 + v21[9]);
  void *v22 = a2;
  v22[1] = a3;
  void v22[2] = a4;
  v22[3] = a5;
  *(unsigned char *)(a9 + v21[10]) = v18;
  unint64_t v23 = (void *)(a9 + v21[11]);
  *unint64_t v23 = v19;
  v23[1] = v20;
  uint64_t v24 = a9 + v21[12];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a8, v25);
  unint64_t v26 = (__n128 *)(a9 + v21[13]);
  __n128 result = a10;
  __n128 *v26 = a10;
  v26[1].n128_u64[0] = a11;
  v26[1].n128_u64[1] = a12;
  return result;
}

BOOL static DynamicBrickViewLayout.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double DynamicBrickViewLayout.horizontalMargin.getter()
{
  return *(double *)v0;
}

double DynamicBrickViewLayout.verticalMargin.getter()
{
  return *(double *)(v0 + 8);
}

FitnessCanvasUI::DynamicBrickViewLayout __swiftcall DynamicBrickViewLayout.init(horizontalMargin:verticalMargin:)(Swift::Double horizontalMargin, Swift::Double verticalMargin)
{
  *uint64_t v2 = horizontalMargin;
  v2[1] = verticalMargin;
  result.verticalMargin = verticalMargin;
  result.horizontalMargin = horizontalMargin;
  return result;
}

uint64_t sub_24ED76714()
{
  if (*v0) {
    return 0x6C61636974726576;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_24ED76760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED7B138(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED76788(uint64_t a1)
{
  unint64_t v2 = sub_24ED76968();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED767C4(uint64_t a1)
{
  unint64_t v2 = sub_24ED76968();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicBrickViewLayout.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965B90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED76968();
  sub_24EE578D0();
  v8[15] = 0;
  sub_24EE57790();
  if (!v1)
  {
    v8[14] = 1;
    sub_24EE57790();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24ED76968()
{
  unint64_t result = qword_269965B98;
  if (!qword_269965B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965B98);
  }
  return result;
}

uint64_t DynamicBrickViewLayout.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965BA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED76968();
  sub_24EE578C0();
  if (!v2)
  {
    char v16 = 0;
    sub_24EE576F0();
    uint64_t v10 = v9;
    char v15 = 1;
    sub_24EE576F0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED76B60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DynamicBrickViewLayout.init(from:)(a1, a2);
}

uint64_t sub_24ED76B78(void *a1)
{
  return DynamicBrickViewLayout.encode(to:)(a1);
}

uint64_t DynamicBrickViewLayout.hash(into:)()
{
  return sub_24EE578A0();
}

uint64_t DynamicBrickViewLayout.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED76C44()
{
  return sub_24EE578B0();
}

BOOL sub_24ED76CA4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t DynamicBrickView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_24EE55E40();
  uint64_t v39 = v4;
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v47 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BA8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v10 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = MEMORY[0x263F198F8];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  uint64_t v44 = v10;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v13 = sub_24EE56BA0();
  uint64_t v45 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)&v35 - v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v38 = v15;
  uint64_t v37 = sub_24ED7B258(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v54 = v13;
  uint64_t v55 = v4;
  uint64_t v56 = v15;
  uint64_t v57 = v37;
  uint64_t v41 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v42 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  char v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v36 = (char *)&v35 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v2, a1, v20);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v26 = v46;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v9, v24);
  uint64_t v51 = v26;
  uint64_t v52 = v25;
  uint64_t v53 = v2;
  unint64_t v27 = v40;
  sub_24EE56B90();
  char v28 = v48;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v29 = v39;
  uint64_t v30 = v38;
  uint64_t v31 = v37;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v13);
  uint64_t v54 = v13;
  uint64_t v55 = v29;
  uint64_t v56 = v30;
  uint64_t v57 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v36;
  sub_24EC90894(v18);
  int64_t v33 = *(void (**)(char *, uint64_t))(v42 + 8);
  v33(v18, OpaqueTypeMetadata2);
  sub_24EC90894(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, OpaqueTypeMetadata2);
}

uint64_t sub_24ED772F4()
{
  return sub_24EE55A40();
}

uint64_t type metadata accessor for DynamicBrickView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24ED77350()
{
  type metadata accessor for DynamicBrickView();
  return sub_24ED772F4();
}

uint64_t sub_24ED773D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v28 = a1;
  uint64_t v31 = a4;
  uint64_t v5 = sub_24EE55E90();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_OWORD *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BA8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  uint64_t v30 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v32 = a2;
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  sub_24EE56DA0();
  sub_24EE56C40();
  long long v44 = v39;
  long long v45 = v40;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56700();
  swift_release();
  long long v39 = v46;
  long long v40 = v47;
  uint64_t v41 = v48;
  char v42 = v49;
  char v43 = v50;
  char v16 = (char *)v7 + *(int *)(v5 + 20);
  uint64_t v17 = *MEMORY[0x263F19860];
  uint64_t v18 = sub_24EE560D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v7 = _Q0;
  uint64_t v37 = WitnessTable;
  uint64_t v38 = MEMORY[0x263F198F8];
  uint64_t v24 = swift_getWitnessTable();
  sub_24ED7B258(&qword_26B1DE300, MEMORY[0x263F19048]);
  sub_24EE56A50();
  sub_24ECB9178((uint64_t)v7);
  swift_release();
  uint64_t v25 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v35 = v24;
  uint64_t v36 = v25;
  swift_getWitnessTable();
  sub_24EC90894(v11);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v11, v8);
  sub_24EC90894(v14);
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v8);
}

uint64_t sub_24ED77850@<X0>(uint64_t a1@<X8>)
{
  return sub_24ED773D4(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24ED77860()
{
  unint64_t result = qword_269965BB0;
  if (!qword_269965BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965BB0);
  }
  return result;
}

uint64_t sub_24ED778B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED778F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicBrickView();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v15 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BA8);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v15 = sub_24EE55CF0();
  uint64_t v16 = v13;
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EC90894(&v15);
  swift_release();
  uint64_t v15 = v17;
  uint64_t v16 = v18;
  sub_24EC90894(&v15);
  return swift_release();
}

uint64_t sub_24ED77B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - v11;
  sub_24EC90894(v13);
  uint64_t v14 = sub_24EE560C0();
  sub_24ED77DA8(a2, a3, a4, v21);
  v22[336] = 0;
  memcpy(&v22[7], v21, 0x142uLL);
  LOBYTE(a2) = sub_24EE564E0();
  char v23 = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, a3);
  v20[0] = v9;
  v19[0] = (unint64_t)v14;
  LOBYTE(v19[1]) = 0;
  memcpy((char *)&v19[1] + 1, v22, 0x149uLL);
  LOBYTE(v19[22]) = a2;
  *((void *)&v19[22] + 1) = 0x4028000000000000;
  v19[23] = xmmword_24EE5ED50;
  *(void *)&v19[24] = 0x4030000000000000;
  BYTE8(v19[24]) = v23;
  v20[1] = v19;
  sub_24ED7B758((uint64_t)v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7B340, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7B668);
  v18[0] = a3;
  v18[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_269965BA8);
  v17[0] = a4;
  v17[1] = sub_24ED7B6B8();
  sub_24EDCC8A0((uint64_t)v20, 2uLL, (uint64_t)v18);
  sub_24ED7B758((uint64_t)v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7B9DC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7BD0C);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v12, a3);
  memcpy(v24, v19, 0x189uLL);
  sub_24ED7BD5C((uint64_t)v24);
  return ((uint64_t (*)(char *, uint64_t))v15)(v9, a3);
}

void *sub_24ED77DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  switch(*(unsigned char *)(a1 + *(int *)(type metadata accessor for DynamicBrickView() + 40)))
  {
    case 1:
      uint64_t v18 = a4;
      uint64_t v19 = sub_24EE56130();
      sub_24ED78ADC(a1, a2, a3, (uint64_t)v22);
      *(_OWORD *)&v24[135] = v22[8];
      *(_OWORD *)&v24[151] = v22[9];
      *(_OWORD *)&v24[167] = v22[10];
      *(_WORD *)&v24[183] = v23;
      *(_OWORD *)&v24[71] = v22[4];
      *(_OWORD *)&v24[87] = v22[5];
      *(_OWORD *)&v24[103] = v22[6];
      *(_OWORD *)&v24[119] = v22[7];
      *(_OWORD *)&v24[7] = v22[0];
      *(_OWORD *)&v24[23] = v22[1];
      *(_OWORD *)&v24[39] = v22[2];
      *(_OWORD *)&v24[55] = v22[3];
      long long v34 = *(_OWORD *)&v24[128];
      long long v35 = *(_OWORD *)&v24[144];
      *(_OWORD *)uint64_t v36 = *(_OWORD *)&v24[160];
      *(_OWORD *)&v36[9] = *(_OWORD *)&v24[169];
      *(_OWORD *)&v32[65] = *(_OWORD *)&v24[64];
      *(_OWORD *)&v32[81] = *(_OWORD *)&v24[80];
      *(_OWORD *)&v32[97] = *(_OWORD *)&v24[96];
      long long v33 = *(_OWORD *)&v24[112];
      *(_OWORD *)&v32[1] = *(_OWORD *)v24;
      *(_OWORD *)&v32[17] = *(_OWORD *)&v24[16];
      *(_OWORD *)&v32[33] = *(_OWORD *)&v24[32];
      char v29 = 0;
      long long v31 = (unint64_t)v19;
      v32[0] = 0;
      *(_OWORD *)&v32[49] = *(_OWORD *)&v24[48];
      sub_24EE56DA0();
      sub_24EDCD748(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v37, 0.0, 1, INFINITY, 0);
      sub_24ED7C28C((uint64_t)v22);
      memcpy(v25, v37, sizeof(v25));
      memcpy(v26, v25, sizeof(v26));
      sub_24ED7C300((uint64_t)v26);
      sub_24ED10C70((uint64_t)v26, (uint64_t)v37, &qword_269965C98);
      sub_24ED7C314((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24ED7B444);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C78);
      sub_24ED7BFD4();
      sub_24ED7C074();
      sub_24EE56230();
      memcpy(__dst, __src, 0x141uLL);
      sub_24ED7C30C((uint64_t)__dst);
      sub_24ED10C70((uint64_t)__dst, (uint64_t)v37, &qword_269965C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C40);
      sub_24ED7C114(&qword_269965C48, &qword_269965C38, (void (*)(void))sub_24ED7BFD4, (void (*)(void))sub_24ED7C074);
      sub_24ED7C114(&qword_269965C90, &qword_269965C40, (void (*)(void))sub_24ED7BE88, (void (*)(void))sub_24ED7BF28);
      uint64_t v10 = v18;
      sub_24EE56230();
      sub_24ED7C314((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24ED7BAE0);
      break;
    case 2:
      uint64_t v11 = sub_24EE56140();
      sub_24ED79888(a1, (uint64_t)v37);
      long long v12 = *(_OWORD *)((char *)&v37[1] + 8);
      long long v13 = *(_OWORD *)((char *)&v37[2] + 8);
      uint64_t v10 = a4;
      v24[0] = 0;
      LOBYTE(v22[0]) = v37[1];
      char v29 = BYTE8(v37[4]);
      char v28 = BYTE8(v37[6]);
      long long v31 = (unint64_t)v11;
      v32[0] = 0;
      *(_OWORD *)&v32[8] = v37[0];
      v32[24] = v37[1];
      *(_OWORD *)&v32[32] = *(_OWORD *)((char *)&v37[1] + 8);
      *(_OWORD *)&v32[48] = *(_OWORD *)((char *)&v37[2] + 8);
      *(_OWORD *)&v32[64] = *(_OWORD *)((char *)&v37[3] + 8);
      v32[80] = BYTE8(v37[4]);
      *(void *)&v32[88] = *(void *)&v37[5];
      v32[96] = BYTE8(v37[5]);
      *(void *)&v32[104] = *(void *)&v37[6];
      v32[112] = BYTE8(v37[6]);
      sub_24EE55C00();
      double v15 = v14 * 0.75;
      sub_24EE56DA0();
      sub_24EDCD928(0.0, 1, 0.0, 1, v15, 0, 0.0, 1, (uint64_t)v25, 0.0, 1, INFINITY, 0);
      sub_24ECB9668(v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1));
      swift_release();
      swift_release();
      v26[12] = v25[12];
      v26[13] = v25[13];
      v26[14] = v25[14];
      *(void *)&v26[15] = *(void *)&v25[15];
      v26[8] = v25[8];
      v26[9] = v25[9];
      v26[10] = v25[10];
      v26[11] = v25[11];
      void v26[4] = v25[4];
      v26[5] = v25[5];
      v26[6] = v25[6];
      v26[7] = v25[7];
      v26[0] = v25[0];
      v26[1] = v25[1];
      _OWORD v26[2] = v25[2];
      _OWORD v26[3] = v25[3];
      sub_24EC90878((uint64_t)v26);
      sub_24ED10C70((uint64_t)v26, (uint64_t)v37, &qword_269965BE8);
      sub_24ED7C1EC((uint64_t *)v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965BF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965BF8);
      sub_24ED7BE88();
      sub_24ED7BF28();
      sub_24EE56230();
      __dst[12] = *(_OWORD *)&__src[192];
      __dst[13] = *(_OWORD *)&__src[208];
      __dst[14] = *(_OWORD *)&__src[224];
      *(_OWORD *)((char *)&__dst[14] + 9) = *(_OWORD *)&__src[233];
      __dst[8] = *(_OWORD *)&__src[128];
      __dst[9] = *(_OWORD *)&__src[144];
      __dst[10] = *(_OWORD *)&__src[160];
      __dst[11] = *(_OWORD *)&__src[176];
      __dst[4] = *(_OWORD *)&__src[64];
      __dst[5] = *(_OWORD *)&__src[80];
      __dst[6] = *(_OWORD *)&__src[96];
      __dst[7] = *(_OWORD *)&__src[112];
      __dst[0] = *(_OWORD *)__src;
      __dst[1] = *(_OWORD *)&__src[16];
      __dst[2] = *(_OWORD *)&__src[32];
      __dst[3] = *(_OWORD *)&__src[48];
      sub_24ED7BFC8((uint64_t)__dst);
      sub_24ED10C70((uint64_t)__dst, (uint64_t)v37, &qword_269965C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C40);
      sub_24ED7C114(&qword_269965C48, &qword_269965C38, (void (*)(void))sub_24ED7BFD4, (void (*)(void))sub_24ED7C074);
      sub_24ED7C114(&qword_269965C90, &qword_269965C40, (void (*)(void))sub_24ED7BE88, (void (*)(void))sub_24ED7BF28);
      sub_24EE56230();
      sub_24ED7C23C((uint64_t *)v25);
      break;
    case 3:
      uint64_t v16 = a4;
      uint64_t v17 = sub_24EE56130();
      sub_24ED7992C(a1, (uint64_t)&v31);
      *(_OWORD *)((char *)&v25[4] + 7) = *(_OWORD *)&v32[48];
      *(_OWORD *)((char *)&v25[5] + 7) = *(_OWORD *)&v32[64];
      *(_OWORD *)((char *)&v25[6] + 7) = *(_OWORD *)&v32[80];
      v25[7] = *(_OWORD *)&v32[89];
      *(_OWORD *)((char *)v25 + 7) = v31;
      *(_OWORD *)((char *)&v25[1] + 7) = *(_OWORD *)v32;
      *(_OWORD *)((char *)&v25[2] + 7) = *(_OWORD *)&v32[16];
      char v28 = 1;
      *(_OWORD *)((char *)&v25[3] + 7) = *(_OWORD *)&v32[32];
      sub_24EE55C00();
      sub_24EE56DA0();
      sub_24EE55BF0();
      *(_OWORD *)((char *)&v26[5] + 1) = v25[4];
      *(_OWORD *)((char *)&v26[6] + 1) = v25[5];
      *(_OWORD *)((char *)&v26[7] + 1) = v25[6];
      *(_OWORD *)((char *)&v26[8] + 1) = v25[7];
      *(_OWORD *)((char *)&v26[1] + 1) = v25[0];
      *(_OWORD *)((char *)&v26[2] + 1) = v25[1];
      *(_OWORD *)((char *)&v26[3] + 1) = v25[2];
      LOBYTE(v22[0]) = v24[8];
      char v29 = v24[24];
      v26[0] = (unint64_t)v17;
      LOBYTE(v26[1]) = 1;
      *(_OWORD *)((char *)&v26[4] + 1) = v25[3];
      *((void *)&v26[9] + 1) = *(void *)v24;
      LOBYTE(v26[10]) = v24[8];
      *((void *)&v26[10] + 1) = *(void *)&v24[16];
      LOBYTE(v26[11]) = v24[24];
      *(_OWORD *)((char *)&v26[11] + 8) = *(_OWORD *)&v24[32];
      sub_24EC90838((uint64_t)v26);
      sub_24ED10C70((uint64_t)v26, (uint64_t)v37, &qword_269965BE8);
      sub_24ED7BE38((uint64_t *)&v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965BF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965BF8);
      sub_24ED7BE88();
      sub_24ED7BF28();
      sub_24EE56230();
      __dst[12] = *(_OWORD *)&__src[192];
      __dst[13] = *(_OWORD *)&__src[208];
      __dst[14] = *(_OWORD *)&__src[224];
      *(_OWORD *)((char *)&__dst[14] + 9) = *(_OWORD *)&__src[233];
      __dst[8] = *(_OWORD *)&__src[128];
      __dst[9] = *(_OWORD *)&__src[144];
      __dst[10] = *(_OWORD *)&__src[160];
      __dst[11] = *(_OWORD *)&__src[176];
      __dst[4] = *(_OWORD *)&__src[64];
      __dst[5] = *(_OWORD *)&__src[80];
      __dst[6] = *(_OWORD *)&__src[96];
      __dst[7] = *(_OWORD *)&__src[112];
      __dst[0] = *(_OWORD *)__src;
      __dst[1] = *(_OWORD *)&__src[16];
      __dst[2] = *(_OWORD *)&__src[32];
      __dst[3] = *(_OWORD *)&__src[48];
      sub_24ED7BFC8((uint64_t)__dst);
      sub_24ED10C70((uint64_t)__dst, (uint64_t)v37, &qword_269965C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C40);
      sub_24ED7C114(&qword_269965C48, &qword_269965C38, (void (*)(void))sub_24ED7BFD4, (void (*)(void))sub_24ED7C074);
      sub_24ED7C114(&qword_269965C90, &qword_269965C40, (void (*)(void))sub_24ED7BE88, (void (*)(void))sub_24ED7BF28);
      uint64_t v10 = v16;
      sub_24EE56230();
      sub_24ED7C19C((uint64_t *)&v31);
      break;
    default:
      uint64_t v8 = a4;
      uint64_t v9 = sub_24EE56130();
      sub_24ED789C0(a1, (uint64_t)&v31);
      *(_OWORD *)((char *)&v25[4] + 7) = *(_OWORD *)&v32[48];
      *(_OWORD *)((char *)&v25[5] + 7) = *(_OWORD *)&v32[64];
      *(_OWORD *)((char *)&v25[6] + 7) = *(_OWORD *)&v32[80];
      v25[7] = *(_OWORD *)&v32[89];
      *(_OWORD *)((char *)v25 + 7) = v31;
      *(_OWORD *)((char *)&v25[1] + 7) = *(_OWORD *)v32;
      *(_OWORD *)((char *)&v25[2] + 7) = *(_OWORD *)&v32[16];
      char v28 = 1;
      *(_OWORD *)((char *)&v25[3] + 7) = *(_OWORD *)&v32[32];
      sub_24EE55C00();
      sub_24EE56DA0();
      sub_24EE55BF0();
      *(_OWORD *)((char *)&v26[5] + 1) = v25[4];
      *(_OWORD *)((char *)&v26[6] + 1) = v25[5];
      *(_OWORD *)((char *)&v26[7] + 1) = v25[6];
      *(_OWORD *)((char *)&v26[8] + 1) = v25[7];
      *(_OWORD *)((char *)&v26[1] + 1) = v25[0];
      *(_OWORD *)((char *)&v26[2] + 1) = v25[1];
      *(_OWORD *)((char *)&v26[3] + 1) = v25[2];
      LOBYTE(v22[0]) = v24[8];
      char v29 = v24[24];
      v26[0] = (unint64_t)v9;
      LOBYTE(v26[1]) = 1;
      *(_OWORD *)((char *)&v26[4] + 1) = v25[3];
      *((void *)&v26[9] + 1) = *(void *)v24;
      LOBYTE(v26[10]) = v24[8];
      *((void *)&v26[10] + 1) = *(void *)&v24[16];
      LOBYTE(v26[11]) = v24[24];
      *(_OWORD *)((char *)&v26[11] + 8) = *(_OWORD *)&v24[32];
      sub_24ED7C39C((uint64_t)v26);
      sub_24ED10C70((uint64_t)v26, (uint64_t)v37, &qword_269965C98);
      sub_24ED7C3A4((uint64_t *)&v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C78);
      sub_24ED7BFD4();
      sub_24ED7C074();
      sub_24EE56230();
      memcpy(__dst, __src, 0x141uLL);
      sub_24ED7C30C((uint64_t)__dst);
      sub_24ED10C70((uint64_t)__dst, (uint64_t)v37, &qword_269965C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965C40);
      sub_24ED7C114(&qword_269965C48, &qword_269965C38, (void (*)(void))sub_24ED7BFD4, (void (*)(void))sub_24ED7C074);
      sub_24ED7C114(&qword_269965C90, &qword_269965C40, (void (*)(void))sub_24ED7BE88, (void (*)(void))sub_24ED7BF28);
      uint64_t v10 = v8;
      sub_24EE56230();
      sub_24ED7C3F4((uint64_t *)&v31);
      break;
  }
  memcpy(v37, v27, 0x142uLL);
  return memcpy(v10, v37, 0x142uLL);
}

uint64_t sub_24ED789C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE560C0();
  sub_24ED79A48(a1, (uint64_t)v17);
  uint64_t v5 = v17[0];
  uint64_t v6 = v17[1];
  uint64_t v7 = v17[2];
  uint64_t v8 = v17[3];
  uint64_t v10 = v17[4];
  uint64_t v9 = v17[5];
  char v11 = v18;
  uint64_t v12 = v19;
  char v13 = v20;
  uint64_t v14 = v21;
  char v15 = v22;
  LOBYTE(v17[0]) = 0;
  char v25 = 0;
  char v24 = v18;
  char v23 = v22;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v9;
  *(unsigned char *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v12;
  *(unsigned char *)(a2 + 104) = v13;
  *(void *)(a2 + 112) = v14;
  *(unsigned char *)(a2 + 120) = v15;
  sub_24EC8BFE0(v5, v6, v7, v8);
  swift_retain();
  swift_retain();
  sub_24ECB9668(v5, v6, v7, v8);
  swift_release();
  return swift_release();
}

double sub_24ED78ADC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for DynamicBrickView();
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(v8 + 52));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  uint64_t v13 = v9[3];
  uint64_t v65 = v13;
  if (v13)
  {
    uint64_t v14 = v9[2] & 1;
    char v15 = (uint64_t *)(a1 + *(int *)(v8 + 36));
    if (v15[3])
    {
      char v63 = v14 != 0;
      char v66 = v12 & 1;
      uint64_t v72 = a1;
      uint64_t v17 = v15[1];
      uint64_t v16 = v15[2];
      uint64_t v18 = *v15;
      uint64_t v69 = *v15;
      uint64_t v19 = v10;
      uint64_t v59 = v11;
      uint64_t v60 = v10;
      uint64_t v20 = v11;
      char v21 = v12;
      uint64_t v22 = v13;
      uint64_t v23 = v15[3];
      sub_24EC8BFE0(v10, v11, v21, v22);
      sub_24EC8BFE0(v18, v17, v16, v23);
      uint64_t v57 = sub_24EE56130();
      sub_24ED79644(v19, v20, v63, v22, v72, a2, a3, (uint64_t)&v117);
      long long v24 = v117;
      LOBYTE(v19) = v118;
      long long v74 = (unint64_t)v57;
      v75[0] = 0;
      *(_OWORD *)&v75[8] = v117;
      v75[24] = v118;
      *(void *)size_t v76 = *((void *)&v118 + 1);
      *(_OWORD *)&v76[8] = v119;
      v76[24] = v120;
      *(void *)&long long v77 = *((void *)&v120 + 1);
      BYTE8(v77) = v121[0];
      long long v78 = *(_OWORD *)&v121[8];
      *(void *)&long long v79 = v69;
      *((void *)&v79 + 1) = v17;
      v80[0] = v16 & 1;
      *(void *)&v80[8] = v23;
      *(void *)&v80[16] = swift_getKeyPath();
      *(void *)&v80[24] = 2;
      LOBYTE(v81) = 0;
      *((void *)&v81 + 1) = swift_getKeyPath();
      char v82 = 1;
      long long v89 = v78;
      long long v90 = v79;
      long long v87 = *(_OWORD *)&v76[16];
      long long v88 = v77;
      char v93 = 1;
      *(_OWORD *)&v91[16] = *(_OWORD *)&v80[16];
      long long v92 = v81;
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v80;
      long long v85 = *(_OWORD *)&v75[16];
      long long v86 = *(_OWORD *)v76;
      long long v83 = (unint64_t)v57;
      long long v84 = *(_OWORD *)v75;
      sub_24EC8A97C(v24, *((uint64_t *)&v24 + 1), v75[24]);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_24EC8A97C(v69, v17, v16 & 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_24EC8A97C(v69, v17, v16 & 1);
      swift_bridgeObjectRetain();
      sub_24EC8A97C(v24, *((uint64_t *)&v24 + 1), v75[24]);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_24EC8A97C(v69, v17, v16 & 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_24EC8AAA0(v69, v17, v16 & 1);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_24EC8AAA0(v24, *((uint64_t *)&v24 + 1), v75[24]);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v114 = *(_OWORD *)v80;
      *(_OWORD *)&v114[16] = *(_OWORD *)&v80[16];
      long long v115 = v81;
      char v116 = 1;
      long long v110 = *(_OWORD *)&v76[16];
      long long v111 = v77;
      long long v112 = v78;
      long long v113 = v79;
      long long v106 = (unint64_t)v57;
      long long v107 = *(_OWORD *)v75;
      long long v108 = *(_OWORD *)&v75[16];
      long long v109 = *(_OWORD *)v76;
      sub_24ED7C528((uint64_t)&v106);
      sub_24ED10C70((uint64_t)&v106, (uint64_t)&v117, &qword_269965CA0);
      sub_24ED7C530((uint64_t)&v83);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965CA8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269965CB0);
      sub_24EC8C218(&qword_269965CB8, &qword_269965CA8);
      sub_24EC8C218(&qword_269965CC0, &qword_269965CB0);
      sub_24EE56230();
      sub_24EC8AAA0(v60, v59, v66);
      swift_bridgeObjectRelease();
      sub_24EC8AAA0(v69, v17, v16 & 1);
      swift_bridgeObjectRelease();
      sub_24ED7C5DC((uint64_t)&v74);
      sub_24EC8AAA0(v69, v17, v16 & 1);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_24EC8AAA0(v24, *((uint64_t *)&v24 + 1), v19);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v124 = v102;
      long long v125 = v103;
      long long v126 = v104;
      __int16 v127 = v105;
      *(_OWORD *)size_t v121 = v98;
      *(_OWORD *)&v121[16] = v99;
      long long v122 = v100;
      long long v123 = v101;
      long long v117 = v94;
      long long v118 = v95;
      long long v119 = v96;
      long long v120 = v97;
      goto LABEL_10;
    }
    uint64_t v26 = v10;
    uint64_t v27 = v11;
    sub_24EC8A97C(v10, v11, v12 & 1);
    swift_bridgeObjectRetain();
    sub_24EC8AAA0(v26, v27, v14);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v28 = swift_getKeyPath();
    uint64_t v11 = v27;
    uint64_t v62 = v28;
    uint64_t v10 = v26;
    char v25 = 1;
    uint64_t v71 = v26;
    uint64_t v73 = 2;
    uint64_t v70 = v27;
  }
  else
  {
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v14 = 0;
    uint64_t KeyPath = 0;
    uint64_t v73 = 0;
    uint64_t v62 = 0;
    char v25 = 0;
  }
  char v29 = (uint64_t *)(a1 + *(int *)(v8 + 36));
  uint64_t v30 = v29[3];
  uint64_t v58 = a4;
  char v64 = v25;
  uint64_t v67 = v14;
  if (v30)
  {
    uint64_t v31 = v29[1];
    uint64_t v61 = v29[2];
    uint64_t v32 = v29[3];
    uint64_t v33 = *v29;
    uint64_t v34 = v10;
    uint64_t v35 = v11;
    uint64_t v36 = swift_getKeyPath();
    uint64_t v37 = swift_getKeyPath();
    uint64_t v38 = v35;
    uint64_t v39 = v33;
    uint64_t v40 = v32;
    sub_24EC8BFE0(v34, v38, v12, v13);
    sub_24EC8A97C(v39, v31, v61 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v14 = v67;
    sub_24EC8BFE0(v39, v31, v61, v32);
    uint64_t v41 = v39;
    uint64_t v42 = v39;
    uint64_t v43 = v31;
    uint64_t v44 = v31;
    uint64_t v45 = v61 & 1;
    sub_24EC8AAA0(v42, v44, v61 & 1);
    uint64_t v46 = v13;
    uint64_t v47 = v37;
    swift_release();
    uint64_t v48 = v36;
    swift_release();
    uint64_t v30 = v40;
    swift_bridgeObjectRelease();
    char v49 = 1;
    uint64_t v50 = 2;
  }
  else
  {
    sub_24EC8BFE0(v10, v11, v12, v13);
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    uint64_t v45 = 0;
    uint64_t v48 = 0;
    uint64_t v50 = 0;
    uint64_t v46 = v13;
    uint64_t v47 = 0;
    char v49 = 0;
  }
  *(void *)&long long v74 = v71;
  *((void *)&v74 + 1) = v70;
  *(void *)uint64_t v75 = v14;
  *(void *)&v75[8] = v46;
  *(void *)&v75[16] = KeyPath;
  *(void *)&v75[24] = v73;
  *(void *)size_t v76 = 0;
  *(void *)&v76[8] = v62;
  v76[16] = v64;
  *(void *)&v76[24] = 0;
  *(void *)&long long v77 = 0;
  *((void *)&v77 + 1) = v41;
  *(void *)&long long v78 = v43;
  *((void *)&v78 + 1) = v45;
  *(void *)&long long v79 = v30;
  *((void *)&v79 + 1) = v48;
  *(void *)uint64_t v80 = v50;
  *(void *)&v80[8] = 0;
  *(void *)&v80[16] = v47;
  v80[24] = v49;
  long long v90 = v79;
  *(_OWORD *)uint64_t v91 = (unint64_t)v50;
  long long v83 = v74;
  long long v84 = *(_OWORD *)v75;
  long long v88 = v77;
  long long v89 = v78;
  long long v86 = *(_OWORD *)v76;
  long long v87 = *(unint64_t *)&v76[16];
  long long v85 = *(_OWORD *)&v75[16];
  *(_OWORD *)&v91[9] = *(_OWORD *)&v80[9];
  sub_24ED7B594(v71, v70, v14, v46);
  sub_24ED7B5F8(0, 0, v41, v43, v45, v30);
  sub_24ED7B594(v71, v70, v67, v65);
  sub_24ED7B5F8(0, 0, v41, v43, v45, v30);
  sub_24ED7BC9C(0, 0, v41, v43, v45, v30);
  sub_24ED7BC38(v71, v70, v67, v65);
  long long v112 = v78;
  long long v113 = v79;
  *(_OWORD *)uint64_t v114 = (unint64_t)v50;
  *(_OWORD *)&v114[9] = *(_OWORD *)&v80[9];
  long long v108 = *(_OWORD *)&v75[16];
  long long v109 = *(_OWORD *)v76;
  long long v110 = *(unint64_t *)&v76[16];
  long long v111 = v77;
  long long v106 = v74;
  long long v107 = *(_OWORD *)v75;
  sub_24ED7C454((uint64_t)&v106);
  sub_24ED10C70((uint64_t)&v106, (uint64_t)&v117, &qword_269965CA0);
  sub_24ED7C460((uint64_t)&v83, (void (*)(void, void, void, void, void, void, void, void, char))sub_24ED7B594, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_24ED7B5F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269965CA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269965CB0);
  sub_24EC8C218(&qword_269965CB8, &qword_269965CA8);
  sub_24EC8C218(&qword_269965CC0, &qword_269965CB0);
  sub_24EE56230();
  sub_24ED7BC9C(0, 0, v41, v43, v45, v30);
  sub_24ED7BC38(v71, v70, v67, v65);
  sub_24ED7C460((uint64_t)&v74, (void (*)(void, void, void, void, void, void, void, void, char))sub_24ED7BC38, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_24ED7BC9C);
  long long v124 = v102;
  long long v125 = v103;
  long long v126 = v104;
  __int16 v127 = v105;
  *(_OWORD *)size_t v121 = v98;
  *(_OWORD *)&v121[16] = v99;
  long long v122 = v100;
  long long v123 = v101;
  long long v117 = v94;
  long long v118 = v95;
  long long v119 = v96;
  long long v120 = v97;
  a4 = v58;
LABEL_10:
  long long v51 = v125;
  *(_OWORD *)(a4 + 128) = v124;
  *(_OWORD *)(a4 + 144) = v51;
  *(_OWORD *)(a4 + 160) = v126;
  *(_WORD *)(a4 + 176) = v127;
  long long v52 = *(_OWORD *)&v121[16];
  *(_OWORD *)(a4 + 64) = *(_OWORD *)v121;
  *(_OWORD *)(a4 + 80) = v52;
  long long v53 = v123;
  *(_OWORD *)(a4 + 96) = v122;
  *(_OWORD *)(a4 + 112) = v53;
  long long v54 = v118;
  *(_OWORD *)a4 = v117;
  *(_OWORD *)(a4 + 16) = v54;
  double result = *(double *)&v119;
  long long v56 = v120;
  *(_OWORD *)(a4 + 32) = v119;
  *(_OWORD *)(a4 + 48) = v56;
  return result;
}

CGFloat sub_24ED79644@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v44 = a5;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v12 = sub_24EE56250();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = swift_getKeyPath();
  a3 &= 1u;
  sub_24EC8A97C(a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_24EE56340();
  sub_24EE55C10();
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  long long v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v15, v12);
  v47.origin.x = v17;
  v47.origin.y = v19;
  v47.size.width = v21;
  v47.size.height = v23;
  double MidX = CGRectGetMidX(v47);
  uint64_t v26 = (double *)(v44 + *(int *)(type metadata accessor for DynamicBrickView() + 44));
  double v27 = MidX - *v26;
  sub_24EE56340();
  sub_24EE55C10();
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  v24(v15, v12);
  v48.origin.x = v29;
  v48.origin.y = v31;
  v48.size.width = v33;
  v48.size.height = v35;
  CGFloat result = CGRectGetMidY(v48) - v26[1];
  uint64_t v37 = v41;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = v37;
  *(unsigned char *)(a8 + 16) = a3;
  uint64_t v38 = KeyPath;
  *(void *)(a8 + 24) = v40;
  *(void *)(a8 + 32) = v38;
  *(void *)(a8 + 40) = 2;
  *(unsigned char *)(a8 + 48) = 0;
  *(void *)(a8 + 56) = v45;
  *(unsigned char *)(a8 + 64) = 1;
  *(double *)(a8 + 72) = v27;
  *(CGFloat *)(a8 + 80) = result;
  return result;
}

__n128 sub_24ED79888@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE560C0();
  sub_24ED79A48(a1, (uint64_t)v14);
  uint64_t v5 = v15;
  uint64_t v6 = v16;
  char v7 = v17;
  uint64_t v8 = v18;
  char v9 = v19;
  uint64_t v10 = v20;
  char v11 = v21;
  __n128 result = (__n128)v14[0];
  long long v13 = v14[1];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v13;
  *(void *)(a2 + 56) = v5;
  *(void *)(a2 + 64) = v6;
  *(unsigned char *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(unsigned char *)(a2 + 88) = v9;
  *(void *)(a2 + 96) = v10;
  *(unsigned char *)(a2 + 104) = v11;
  return result;
}

uint64_t sub_24ED7992C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE560C0();
  sub_24ED79A48(a1, (uint64_t)v17);
  uint64_t v5 = v17[0];
  uint64_t v6 = v17[1];
  uint64_t v7 = v17[2];
  uint64_t v8 = v17[3];
  uint64_t v10 = v17[4];
  uint64_t v9 = v17[5];
  char v11 = v18;
  uint64_t v12 = v19;
  char v13 = v20;
  uint64_t v14 = v21;
  char v15 = v22;
  LOBYTE(v17[0]) = 0;
  char v25 = v18;
  char v24 = v22;
  char v23 = 0;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  *(unsigned char *)(a2 + 88) = v13;
  *(void *)(a2 + 96) = v14;
  *(unsigned char *)(a2 + 104) = v15;
  *(void *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 120) = 0;
  sub_24EC8BFE0(v5, v6, v7, v8);
  swift_retain();
  swift_retain();
  sub_24ECB9668(v5, v6, v7, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_24ED79A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DynamicBrickView() + 52));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 2;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  sub_24EC8BFE0(v4, v5, v6, v7);
  swift_retain();
  swift_retain();
  sub_24EC8BFE0(v4, v5, v6, v7);
  sub_24ECB9668(v4, v5, v6, v7);
  swift_release();
  return swift_release();
}

ValueMetadata *type metadata accessor for DynamicBrickViewLayout()
{
  return &type metadata for DynamicBrickViewLayout;
}

void sub_24ED79B5C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24EC8B890();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_24ED79C44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64) + 7;
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v11 + ((v10 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7));
    swift_retain();
  }
  else
  {
    uint64_t v36 = ~v10;
    uint64_t v37 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v38 = a1;
    char v17 = (char *)a1 + v7;
    char v18 = (char *)a2 + v7;
    unint64_t v19 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v20 + 24) < 0xFFFFFFFFuLL)
    {
      long long v24 = *(_OWORD *)(v20 + 16);
      *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v24;
    }
    else
    {
      uint64_t v21 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      char v23 = *(unsigned char *)(v20 + 16);
      sub_24EC8A97C(*(void *)v20, v22, v23);
      *(void *)unint64_t v19 = v21;
      *(void *)(v19 + 8) = v22;
      *(unsigned char *)(v19 + 16) = v23;
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
    char v25 = (_OWORD *)((unint64_t)(v17 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (_OWORD *)((unint64_t)(v18 + 47) & 0xFFFFFFFFFFFFFFF8);
    *char v25 = *v26;
    uint64_t v27 = ((unint64_t)v25 + v10 + 16) & v36;
    uint64_t v28 = ((unint64_t)v26 + v10 + 16) & v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v27, v28, v37);
    unint64_t v29 = (v11 + v27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v11 + v28) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v30 + 24) < 0xFFFFFFFFuLL)
    {
      long long v34 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
      *(_OWORD *)(v29 + 16) = v34;
    }
    else
    {
      uint64_t v31 = *(void *)v30;
      uint64_t v32 = *(void *)(v30 + 8);
      char v33 = *(unsigned char *)(v30 + 16);
      sub_24EC8A97C(*(void *)v30, v32, v33);
      *(void *)unint64_t v29 = v31;
      *(void *)(v29 + 8) = v32;
      *(unsigned char *)(v29 + 16) = v33;
      *(void *)(v29 + 24) = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
    }
    return v38;
  }
  return (uint64_t *)v16;
}

uint64_t sub_24ED79ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  unint64_t v5 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v5 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (((v4 + 47) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v11 = (*(void *)(v8 + 56) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v11 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v11, *(void *)(v11 + 8), *(unsigned char *)(v11 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ED79FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v10 + 24) < 0xFFFFFFFFuLL)
  {
    long long v14 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v14;
  }
  else
  {
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    char v13 = *(unsigned char *)(v10 + 16);
    sub_24EC8A97C(*(void *)v10, v12, v13);
    *(void *)unint64_t v9 = v11;
    *(void *)(v9 + 8) = v12;
    *(unsigned char *)(v9 + 16) = v13;
    *(void *)(v9 + 24) = *(void *)(v10 + 24);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v15 = (_OWORD *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18 + 16;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = ((unint64_t)v15 + v20 + 16) & ~v20;
  uint64_t v22 = ((unint64_t)v16 + v20 + 16) & ~v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, v22, v17);
  uint64_t v23 = *(void *)(v19 + 48) + 7;
  unint64_t v24 = (v23 + v21) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v23 + v22) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v25 + 24) < 0xFFFFFFFFuLL)
  {
    long long v29 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v29;
  }
  else
  {
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    char v28 = *(unsigned char *)(v25 + 16);
    sub_24EC8A97C(*(void *)v25, v27, v28);
    *(void *)unint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
    *(unsigned char *)(v24 + 16) = v28;
    *(void *)(v24 + 24) = *(void *)(v25 + 24);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24ED7A19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = *(void *)(v10 + 24);
  if (*(void *)(v9 + 24) < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      uint64_t v18 = *(void *)v10;
      uint64_t v19 = *(void *)(v10 + 8);
      char v20 = *(unsigned char *)(v10 + 16);
      sub_24EC8A97C(*(void *)v10, v19, v20);
      *(void *)unint64_t v9 = v18;
      *(void *)(v9 + 8) = v19;
      *(unsigned char *)(v9 + 16) = v20;
      *(void *)(v9 + 24) = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v11 >= 0xFFFFFFFF)
    {
      uint64_t v12 = *(void *)v10;
      uint64_t v13 = *(void *)(v10 + 8);
      char v14 = *(unsigned char *)(v10 + 16);
      sub_24EC8A97C(*(void *)v10, v13, v14);
      uint64_t v15 = *(void *)v9;
      uint64_t v16 = *(void *)(v9 + 8);
      char v17 = *(unsigned char *)(v9 + 16);
      *(void *)unint64_t v9 = v12;
      *(void *)(v9 + 8) = v13;
      *(unsigned char *)(v9 + 16) = v14;
      sub_24EC8AAA0(v15, v16, v17);
      *(void *)(v9 + 24) = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_24EC8AAA0(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
    swift_bridgeObjectRelease();
  }
  long long v21 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v21;
LABEL_8:
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v22 = (void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  v22[1] = v23[1];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25 + 24;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = ((unint64_t)v22 + v27 + 16) & ~v27;
  uint64_t v29 = ((unint64_t)v23 + v27 + 16) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24))(v28, v29, v24);
  uint64_t v30 = *(void *)(v26 + 40) + 7;
  unint64_t v31 = (v30 + v28) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v30 + v29) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = *(void *)(v32 + 24);
  if (*(void *)(v31 + 24) < 0xFFFFFFFFuLL)
  {
    if (v33 >= 0xFFFFFFFF)
    {
      uint64_t v40 = *(void *)v32;
      uint64_t v41 = *(void *)(v32 + 8);
      char v42 = *(unsigned char *)(v32 + 16);
      sub_24EC8A97C(*(void *)v32, v41, v42);
      *(void *)unint64_t v31 = v40;
      *(void *)(v31 + 8) = v41;
      *(unsigned char *)(v31 + 16) = v42;
      *(void *)(v31 + 24) = *(void *)(v32 + 24);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_14:
    long long v43 = *(_OWORD *)(v32 + 16);
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v43;
    return a1;
  }
  if (v33 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v31, *(void *)(v31 + 8), *(unsigned char *)(v31 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v34 = *(void *)v32;
  uint64_t v35 = *(void *)(v32 + 8);
  char v36 = *(unsigned char *)(v32 + 16);
  sub_24EC8A97C(*(void *)v32, v35, v36);
  uint64_t v37 = *(void *)v31;
  uint64_t v38 = *(void *)(v31 + 8);
  char v39 = *(unsigned char *)(v31 + 16);
  *(void *)unint64_t v31 = v34;
  *(void *)(v31 + 8) = v35;
  *(unsigned char *)(v31 + 16) = v36;
  sub_24EC8AAA0(v37, v38, v39);
  *(void *)(v31 + 24) = *(void *)(v32 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24ED7A43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v12 = (_OWORD *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (_OWORD *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v12 + v17 + 16) & ~v17;
  uint64_t v19 = ((unint64_t)v13 + v17 + 16) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v19, v14);
  uint64_t v20 = *(void *)(v16 + 32) + 7;
  long long v21 = (_OWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (_OWORD *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  long long v23 = v22[1];
  *long long v21 = *v22;
  v21[1] = v23;
  return a1;
}

uint64_t sub_24ED7A554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v9 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v10 + 24) >= 0xFFFFFFFFuLL)
    {
      char v11 = *(unsigned char *)(v10 + 16);
      uint64_t v12 = *(void *)v9;
      uint64_t v13 = *(void *)(v9 + 8);
      char v14 = *(unsigned char *)(v9 + 16);
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
      *(unsigned char *)(v9 + 16) = v11;
      sub_24EC8AAA0(v12, v13, v14);
      *(void *)(v9 + 24) = *(void *)(v10 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24EC8AAA0(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
    swift_bridgeObjectRelease();
  }
  long long v15 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v15;
LABEL_6:
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v16 = (void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = ((unint64_t)v16 + v21 + 16) & ~v21;
  uint64_t v23 = ((unint64_t)v17 + v21 + 16) & ~v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(v22, v23, v18);
  uint64_t v24 = *(void *)(v20 + 24) + 7;
  unint64_t v25 = (v24 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v24 + v23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v25 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_10:
    long long v31 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v31;
    return a1;
  }
  if (*(void *)(v26 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v27 = *(unsigned char *)(v26 + 16);
  uint64_t v28 = *(void *)v25;
  uint64_t v29 = *(void *)(v25 + 8);
  char v30 = *(unsigned char *)(v25 + 16);
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  *(unsigned char *)(v25 + 16) = v27;
  sub_24EC8AAA0(v28, v29, v30);
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24ED7A744(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 32;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v13 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24ED7A9D4);
      case 4:
        int v19 = *(int *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_25:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v13 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v7 == v13)
  {
    uint64_t v23 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v23(a1, v7, v5);
  }
  else
  {
    uint64_t v24 = (uint64_t)a1 + v10 + 7;
    if (v12 > 0x7FFFFFFE)
    {
      unint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(((v24 & 0xFFFFFFFFFFFFFFF8) + v11 + 56) & ~v11);
    }
    else
    {
      unint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 24);
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      if ((v25 + 1) >= 2) {
        return v25;
      }
      else {
        return 0;
      }
    }
  }
}

double sub_24ED7A9E8(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v26 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v14 = v9;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  size_t v16 = ((*(void *)(v10 + 64) + ((((v12 + 47) & 0xFFFFFFFFFFFFFFF8) + v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  if (v15 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v15;
    if (a2 <= v15)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          *((unsigned char *)a1 + v16) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)((char *)a1 + v16) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v16) = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v9 == v15)
            {
              uint64_t v23 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v26 + 56);
              v23(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v24 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
              if (v14 > 0x7FFFFFFE)
              {
                unint64_t v25 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v25((v24 + v13 + 56) & ~v13, a2);
              }
              else if (a2 > 0x7FFFFFFE)
              {
                double result = 0.0;
                *(_OWORD *)unint64_t v24 = 0u;
                *(_OWORD *)(v24 + 16) = 0u;
                *(_DWORD *)unint64_t v24 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *(void *)(v24 + 24) = a2;
              }
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    if (((*(_DWORD *)(v10 + 64) + ((((v12 + 47) & 0xFFFFFFF8) + v13 + 16) & ~v13) + 7) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      unsigned int v17 = a3 - v15 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v15;
    if (a2 <= v15) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(v10 + 64) + ((((v12 + 47) & 0xFFFFFFF8) + v13 + 16) & ~v13) + 7) & 0xFFFFFFF8) == 0xFFFFFFE0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((*(_DWORD *)(v10 + 64) + ((((v12 + 47) & 0xFFFFFFF8) + v13 + 16) & ~v13) + 7) & 0xFFFFFFF8) != 0xFFFFFFE0)
  {
    int v22 = ~v15 + a2;
    bzero(a1, v16);
    *a1 = v22;
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = v21;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v16) = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x24ED7ACE0);
    case 4:
      *(_DWORD *)((char *)a1 + v16) = v21;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ED7AD08()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for DynamicBrickViewLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED7AFF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicBrickViewLayout.CodingKeys()
{
  return &type metadata for DynamicBrickViewLayout.CodingKeys;
}

unint64_t sub_24ED7B034()
{
  unint64_t result = qword_269965BB8;
  if (!qword_269965BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965BB8);
  }
  return result;
}

unint64_t sub_24ED7B08C()
{
  unint64_t result = qword_269965BC0;
  if (!qword_269965BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965BC0);
  }
  return result;
}

unint64_t sub_24ED7B0E4()
{
  unint64_t result = qword_269965BC8;
  if (!qword_269965BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965BC8);
  }
  return result;
}

uint64_t sub_24ED7B138(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EE7C870 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636974726576 && a2 == 0xEE006E696772614DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ED7B24C()
{
  return sub_24ED778F8(v0[4], v0[2], v0[3]);
}

uint64_t sub_24ED7B258(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24ED7B2A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for DynamicBrickView() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_24ED77B1C(a1, v6, v3, v4);
}

uint64_t sub_24ED7B340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int16 a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a41)
  {
    return sub_24ED7B444(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
             a23,
             a24,
             a25,
             a26,
             (unsigned __int16)(a26 & 0x1FF) >> 8);
  }
  else
  {
    sub_24EC8BFE0(a9, a10, a11, a12);
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_24ED7B444(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  if (a24)
  {
    sub_24ED7B594(a1, a2, a3, a4);
    return sub_24ED7B5F8(a10, a11, a12, a13, a14, a15);
  }
  else
  {
    sub_24EC8A97C(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_24EC8A97C(a15, a16, a17 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_24ED7B594(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8A97C(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24ED7B5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_24EC8A97C(a3, a4, a5 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24ED7B668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  sub_24EC8BFE0(a7, a8, a9, a10);
  swift_retain();
  return swift_retain();
}

unint64_t sub_24ED7B6B8()
{
  unint64_t result = qword_269965BD0;
  if (!qword_269965BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BA8);
    sub_24EC8C218(&qword_269965BD8, &qword_269965BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965BD0);
  }
  return result;
}

uint64_t sub_24ED7B758(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  long long v9 = *(_OWORD *)(a1 + 272);
  long long v10 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 240);
  long long v8 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 208);
  long long v6 = *(_OWORD *)(a1 + 224);
  sub_24ED7B800(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    *(void *)(a1 + 304),
    *(void *)(a1 + 312),
    *(unsigned char *)(a1 + 320),
    *(unsigned char *)(a1 + 321),
    a2,
    a3);
  return a1;
}

uint64_t sub_24ED7B800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,char a42,uint64_t (*a43)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a42)
  {
    return a44(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31);
  }
  else
  {
    return a43(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
}

uint64_t sub_24ED7B9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,__int16 a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a41)
  {
    return sub_24ED7BAE0(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
             a23,
             a24,
             a25,
             a26,
             (unsigned __int16)(a26 & 0x1FF) >> 8);
  }
  else
  {
    sub_24ECB9668(a9, a10, a11, a12);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_24ED7BAE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  if (a24)
  {
    sub_24ED7BC38(a1, a2, a3, a4);
    return sub_24ED7BC9C(a10, a11, a12, a13, a14, a15);
  }
  else
  {
    sub_24EC8AAA0(a4, a5, a6 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24EC8AAA0(a15, a16, a17 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24ED7BC38(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EC8AAA0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ED7BC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_24EC8AAA0(a3, a4, a5 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ED7BD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  sub_24ECB9668(a7, a8, a9, a10);
  swift_release();
  return swift_release();
}

uint64_t sub_24ED7BD5C(uint64_t a1)
{
  long long v6 = *(_OWORD *)(a1 + 296);
  long long v7 = *(_OWORD *)(a1 + 312);
  long long v4 = *(_OWORD *)(a1 + 264);
  long long v5 = *(_OWORD *)(a1 + 280);
  long long v3 = *(_OWORD *)(a1 + 232);
  sub_24ED7B800(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 248),
    *(void *)(a1 + 256),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    *(void *)(a1 + 328),
    *(void *)(a1 + 336),
    *(unsigned char *)(a1 + 344),
    *(unsigned char *)(a1 + 345),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7B9DC,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED7BD0C);
  return a1;
}

uint64_t *sub_24ED7BE38(uint64_t *a1)
{
  return a1;
}

unint64_t sub_24ED7BE88()
{
  unint64_t result = qword_269965C00;
  if (!qword_269965C00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BF0);
    sub_24EC8C218(&qword_269965C08, &qword_269965C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965C00);
  }
  return result;
}

unint64_t sub_24ED7BF28()
{
  unint64_t result = qword_269965C18;
  if (!qword_269965C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965BF8);
    sub_24EC8C218(&qword_269965C20, &qword_269965C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965C18);
  }
  return result;
}

uint64_t sub_24ED7BFC8(uint64_t result)
{
  *(unsigned char *)(result + 321) = 1;
  return result;
}

unint64_t sub_24ED7BFD4()
{
  unint64_t result = qword_269965C50;
  if (!qword_269965C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965C58);
    sub_24EC8C218(&qword_269965C60, &qword_269965C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965C50);
  }
  return result;
}

unint64_t sub_24ED7C074()
{
  unint64_t result = qword_269965C70;
  if (!qword_269965C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269965C78);
    sub_24EC8C218(&qword_269965C80, &qword_269965C88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965C70);
  }
  return result;
}

uint64_t sub_24ED7C114(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_24ED7C19C(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_24ED7C1EC(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_24ED7C23C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24ED7C28C(uint64_t a1)
{
  sub_24ED7BAE0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(_OWORD *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176),
    *(unsigned char *)(a1 + 177));
  return a1;
}

uint64_t sub_24ED7C300(uint64_t result)
{
  *(unsigned char *)(result + 320) = 1;
  return result;
}

uint64_t sub_24ED7C30C(uint64_t result)
{
  *(unsigned char *)(result + 321) = 0;
  return result;
}

uint64_t sub_24ED7C314(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(_WORD *)(a1 + 200));
  return a1;
}

uint64_t sub_24ED7C39C(uint64_t result)
{
  *(unsigned char *)(result + 320) = 0;
  return result;
}

uint64_t *sub_24ED7C3A4(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_24ED7C3F4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24ED7C454(uint64_t result)
{
  *(unsigned char *)(result + 177) = 1;
  return result;
}

uint64_t sub_24ED7C460(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v9 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 144);
  char v12 = *(unsigned char *)(a1 + 152);
  char v14 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v14);
  char v15 = v12;
  a3(v17, v16, v4, v5, v6, v7, v8, v10, v9, v11, v15);
  return a1;
}

uint64_t sub_24ED7C528(uint64_t result)
{
  *(unsigned char *)(result + 177) = 0;
  return result;
}

uint64_t sub_24ED7C530(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_24EC8A97C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24EC8A97C(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24ED7C5DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_24EC8AAA0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EC8AAA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

BOOL static DynamicSizeClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24ED7C69C()
{
  uint64_t result = 0x616D536172747865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6C616D73;
      break;
    case 2:
      uint64_t result = 0x72616C75676572;
      break;
    case 3:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t result = 0x656772616CLL;
      break;
    case 5:
      uint64_t result = 0x72614C6172747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ED7C764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED7E5B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24ED7C78C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24ED7C798(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D17C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7C7D4(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D17C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7C810(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D1D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7C84C(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D1D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7C888(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D374();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7C8C4(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D374();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7C900(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D224();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7C93C(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D224();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7C978(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D278();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7C9B4(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D278();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7C9F0(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D2CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7CA2C(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D2CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24ED7CA68(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D320();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED7CAA4(uint64_t a1)
{
  unint64_t v2 = sub_24ED7D320();
  return MEMORY[0x270FA00B8](a1, v2);
}

void static DynamicSizeClass.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

BOOL DynamicSizeClass.isCompact.getter()
{
  return *v0 < 3u;
}

Swift::Bool __swiftcall DynamicSizeClass.shouldOffsetForCarousel(containerSize:)(CGSize containerSize)
{
  return containerSize.width > containerSize.height && *v1 > 2u;
}

uint64_t DynamicSizeClass.init(canvasWidth:)@<X0>(unsigned char *a1@<X8>, double a2@<D0>)
{
  uint64_t result = DynamicSizeClass.init(width:)(&v4, a2);
  *a1 = v4;
  return result;
}

BOOL sub_24ED7CB48()
{
  return *v0 < 3u;
}

uint64_t sub_24ED7CB58@<X0>(unsigned char *a1@<X8>, double a2@<D0>)
{
  uint64_t result = DynamicSizeClass.init(width:)(&v4, a2);
  *a1 = v4;
  return result;
}

BOOL sub_24ED7CB90(double a1, double a2)
{
  return a1 > a2 && *v2 > 2u;
}

uint64_t DynamicSizeClass.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CC8);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  char v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CD0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  char v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CD8);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CE0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  char v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CE8);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CF0);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965CF8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  int v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED7D17C();
  sub_24EE578D0();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_24ED7D320();
      uint64_t v22 = v42;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_24ED7D2CC();
      uint64_t v23 = v30;
      uint64_t v22 = v42;
      sub_24EE57740();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_24ED7D278();
      uint64_t v23 = v33;
      uint64_t v22 = v42;
      sub_24EE57740();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_24ED7D224();
      uint64_t v23 = v36;
      uint64_t v22 = v42;
      sub_24EE57740();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_24ED7D1D0();
      uint64_t v23 = v39;
      uint64_t v22 = v42;
      sub_24EE57740();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_24ED7D374();
      uint64_t v22 = v42;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

unint64_t sub_24ED7D17C()
{
  unint64_t result = qword_269965D00;
  if (!qword_269965D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D00);
  }
  return result;
}

unint64_t sub_24ED7D1D0()
{
  unint64_t result = qword_269965D08;
  if (!qword_269965D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D08);
  }
  return result;
}

unint64_t sub_24ED7D224()
{
  unint64_t result = qword_269965D10;
  if (!qword_269965D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D10);
  }
  return result;
}

unint64_t sub_24ED7D278()
{
  unint64_t result = qword_269965D18;
  if (!qword_269965D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D18);
  }
  return result;
}

unint64_t sub_24ED7D2CC()
{
  unint64_t result = qword_269965D20;
  if (!qword_269965D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D20);
  }
  return result;
}

unint64_t sub_24ED7D320()
{
  unint64_t result = qword_269965D28;
  if (!qword_269965D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D28);
  }
  return result;
}

unint64_t sub_24ED7D374()
{
  unint64_t result = qword_269965D30;
  if (!qword_269965D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D30);
  }
  return result;
}

uint64_t DynamicSizeClass.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D38);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  char v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D40);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D48);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  char v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D50);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D58);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D60);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965D68);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_24ED7D17C();
  uint64_t v21 = v68;
  sub_24EE578C0();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  uint64_t v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  uint64_t v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  uint64_t v26 = v19;
  uint64_t v27 = sub_24EE57720();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_24EE57560();
    swift_allocError();
    char v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    *char v36 = &type metadata for DynamicSizeClass;
    uint64_t v37 = v68;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_24ED7D320();
      uint64_t v39 = v68;
      sub_24EE57690();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      unint64_t v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_24ED7D2CC();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_24EE57690();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_24ED7D278();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_24EE57690();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      unint64_t v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_24ED7D224();
      uint64_t v46 = v68;
      sub_24EE57690();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      unint64_t v33 = v63;
      char v28 = v45;
      break;
    case 5:
      uint64_t v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_24ED7D1D0();
      uint64_t v47 = v68;
      sub_24EE57690();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      unint64_t v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_24ED7D374();
      char v30 = v50;
      uint64_t v31 = v68;
      sub_24EE57690();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      unint64_t v33 = v63;
      char v28 = v29;
      break;
  }
  *unint64_t v33 = v28;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t sub_24ED7DC50@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DynamicSizeClass.init(from:)(a1, a2);
}

uint64_t sub_24ED7DC68(void *a1)
{
  return DynamicSizeClass.encode(to:)(a1);
}

uint64_t DynamicSizeClass.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t DynamicSizeClass.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24ED7DCF4(void *a1)
{
  a1[1] = sub_24ED7DD2C();
  a1[2] = sub_24ED7DD80();
  unint64_t result = sub_24ED7DDD4();
  a1[3] = result;
  return result;
}

unint64_t sub_24ED7DD2C()
{
  unint64_t result = qword_269965D70;
  if (!qword_269965D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D70);
  }
  return result;
}

unint64_t sub_24ED7DD80()
{
  unint64_t result = qword_269965D78;
  if (!qword_269965D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D78);
  }
  return result;
}

unint64_t sub_24ED7DDD4()
{
  unint64_t result = qword_269965D80;
  if (!qword_269965D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D80);
  }
  return result;
}

unint64_t sub_24ED7DE2C()
{
  unint64_t result = qword_269965D88;
  if (!qword_269965D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D88);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicSizeClass()
{
  return &type metadata for DynamicSizeClass;
}

uint64_t _s15FitnessCanvasUI16DynamicSizeClassOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15FitnessCanvasUI16DynamicSizeClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED7DFF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.CodingKeys()
{
  return &type metadata for DynamicSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.ExtraSmallCodingKeys()
{
  return &type metadata for DynamicSizeClass.ExtraSmallCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.SmallCodingKeys()
{
  return &type metadata for DynamicSizeClass.SmallCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.RegularCodingKeys()
{
  return &type metadata for DynamicSizeClass.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.MediumCodingKeys()
{
  return &type metadata for DynamicSizeClass.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.LargeCodingKeys()
{
  return &type metadata for DynamicSizeClass.LargeCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicSizeClass.ExtraLargeCodingKeys()
{
  return &type metadata for DynamicSizeClass.ExtraLargeCodingKeys;
}

unint64_t sub_24ED7E090()
{
  unint64_t result = qword_269965D90;
  if (!qword_269965D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D90);
  }
  return result;
}

unint64_t sub_24ED7E0E8()
{
  unint64_t result = qword_269965D98;
  if (!qword_269965D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965D98);
  }
  return result;
}

unint64_t sub_24ED7E140()
{
  unint64_t result = qword_269965DA0;
  if (!qword_269965DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DA0);
  }
  return result;
}

unint64_t sub_24ED7E198()
{
  unint64_t result = qword_269965DA8;
  if (!qword_269965DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DA8);
  }
  return result;
}

unint64_t sub_24ED7E1F0()
{
  unint64_t result = qword_269965DB0;
  if (!qword_269965DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DB0);
  }
  return result;
}

unint64_t sub_24ED7E248()
{
  unint64_t result = qword_269965DB8;
  if (!qword_269965DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DB8);
  }
  return result;
}

unint64_t sub_24ED7E2A0()
{
  unint64_t result = qword_269965DC0;
  if (!qword_269965DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DC0);
  }
  return result;
}

unint64_t sub_24ED7E2F8()
{
  unint64_t result = qword_269965DC8;
  if (!qword_269965DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DC8);
  }
  return result;
}

unint64_t sub_24ED7E350()
{
  unint64_t result = qword_269965DD0;
  if (!qword_269965DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DD0);
  }
  return result;
}

unint64_t sub_24ED7E3A8()
{
  unint64_t result = qword_269965DD8;
  if (!qword_269965DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DD8);
  }
  return result;
}

unint64_t sub_24ED7E400()
{
  unint64_t result = qword_269965DE0;
  if (!qword_269965DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DE0);
  }
  return result;
}

unint64_t sub_24ED7E458()
{
  unint64_t result = qword_269965DE8;
  if (!qword_269965DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DE8);
  }
  return result;
}

unint64_t sub_24ED7E4B0()
{
  unint64_t result = qword_269965DF0;
  if (!qword_269965DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DF0);
  }
  return result;
}

unint64_t sub_24ED7E508()
{
  unint64_t result = qword_269965DF8;
  if (!qword_269965DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965DF8);
  }
  return result;
}

unint64_t sub_24ED7E560()
{
  unint64_t result = qword_269965E00;
  if (!qword_269965E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965E00);
  }
  return result;
}

uint64_t sub_24ED7E5B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x616D536172747865 && a2 == 0xEA00000000006C6CLL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C616D73 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72616C75676572 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72614C6172747865 && a2 == 0xEA00000000006567)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t LazyCanvasItemDescriptor.transformed(with:missingPlaceholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v50 = a2;
  uint64_t v55 = a1;
  uint64_t v68 = a3[6];
  uint64_t v5 = sub_24EE57430();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v53 = (char *)&v44 - v6;
  uint64_t v7 = a3[4];
  uint64_t v8 = sub_24EE57430();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (char *)&v44 - v9;
  uint64_t v10 = a3[2];
  uint64_t v11 = a3[3];
  uint64_t v13 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v66 = a3[9];
  uint64_t v67 = v12;
  uint64_t v65 = a3[15];
  uint64_t v70 = v10;
  uint64_t v71 = v11;
  uint64_t v72 = v13;
  uint64_t v73 = v12;
  uint64_t v74 = v66;
  uint64_t v75 = v65;
  uint64_t v14 = type metadata accessor for CanvasItemContent();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v59 = (uint64_t)&v44 - v15;
  uint64_t v16 = a3[5];
  uint64_t v46 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v57 = (uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v13;
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v22 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v23 = a3[14];
  uint64_t v60 = v11;
  uint64_t v61 = v10;
  uint64_t v70 = v10;
  uint64_t v71 = v11;
  uint64_t v51 = v7;
  uint64_t v72 = v7;
  uint64_t v73 = v16;
  uint64_t v74 = v68;
  uint64_t v75 = v13;
  uint64_t v76 = v67;
  uint64_t v77 = v66;
  uint64_t v49 = v19;
  uint64_t v78 = v19;
  uint64_t v79 = v20;
  uint64_t v80 = v22;
  uint64_t v81 = v21;
  uint64_t v47 = v23;
  uint64_t v82 = v23;
  uint64_t v83 = v65;
  uint64_t v24 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v25 = sub_24EE57430();
  uint64_t v45 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v54 = (char *)&v44 - v26;
  uint64_t v56 = v16;
  uint64_t v70 = v16;
  uint64_t v71 = v20;
  uint64_t v72 = v22;
  uint64_t v73 = v21;
  uint64_t v48 = v21;
  uint64_t v27 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v62 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v29 = (char *)&v44 - v28;
  __n128 v31 = MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *, __n128))(v34 + 16))(v33, v63, a3, v31);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v64, v33, v24);
  }
  uint64_t v44 = v22;
  uint64_t v63 = v20;
  uint64_t v35 = v60;
  uint64_t v36 = v61;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v29, v33, v27);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = v54;
  MEMORY[0x25334D690](v29, v55, v27, v24, WitnessTable);
  uint64_t v39 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v38, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v25);
    if (sub_24EE572E0()) {
      char v40 = &unk_27008DEC0;
    }
    else {
      char v40 = &unk_27008DEE8;
    }
    uint64_t v55 = sub_24ED7EEE8((uint64_t)v40);
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v57, v29, v56);
    sub_24EC8EF70((uint64_t)&v29[*(int *)(v27 + 52)], (uint64_t)&v70);
    sub_24EC8EF70((uint64_t)&v70, (uint64_t)&v69);
    LazyCanvasItemContent.transformed<A, B, C>()(v36, v35, v58, v67, v66, v59);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v29, v27);
    uint64_t v41 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v52, 1, 1, v51);
    uint64_t v42 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v53, 1, 1, v68);
    return CanvasItemDescriptor.init(identifier:content:contextMenu:metrics:redactionReasons:)(v57, v59, v41, v42, v55, v64, v56);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v29, v27);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v64, v38, v24);
  }
}

uint64_t sub_24ED7EEE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE598);
    uint64_t v3 = sub_24EE574E0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_24EE57870();
      sub_24EE57880();
      uint64_t result = sub_24EE578B0();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24ED7F02C()
{
  uint64_t v0 = sub_24EE55AA0();
  __swift_allocate_value_buffer(v0, qword_26B1E6E50);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1E6E50);
  return sub_24EE55A90();
}

uint64_t sub_24ED7F0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v95 = a3;
  uint64_t v93 = a2;
  uint64_t v117 = a5;
  uint64_t v119 = a12;
  uint64_t v110 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  long long v109 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  long long v108 = (char *)&v89 - v15;
  uint64_t v96 = sub_24EE56F20();
  uint64_t v104 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  long long v103 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EE56EB0();
  MEMORY[0x270FA5388](v17 - 8);
  long long v100 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = a7;
  uint64_t v92 = sub_24EE57430();
  uint64_t v107 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  long long v106 = (char *)&v89 - v19;
  uint64_t v20 = sub_24EE56ED0();
  MEMORY[0x270FA5388](v20 - 8);
  __int16 v105 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE4C0);
  MEMORY[0x270FA5388](v22 - 8);
  long long v98 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = a4;
  uint64_t v123 = a10;
  uint64_t v116 = a10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v102 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v101 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  long long v97 = (char *)&v89 - v27;
  MEMORY[0x270FA5388](v28);
  long long v99 = (char *)&v89 - v29;
  uint64_t v30 = sub_24EE57430();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v89 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v89 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = OpaqueTypeMetadata2;
  uint64_t v111 = a4;
  uint64_t v38 = v37;
  uint64_t v118 = sub_24EE56240();
  uint64_t v113 = *(void *)(v118 - 8);
  __n128 v39 = MEMORY[0x270FA5388](v118);
  long long v112 = (char *)&v89 - v40;
  uint64_t v41 = v119;
  (*(void (**)(char *, __n128))(v119 + 176))(a9, v39);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
LABEL_5:
    uint64_t v45 = v116;
    uint64_t v46 = v114;
    uint64_t v48 = v112;
    uint64_t v47 = v113;
    uint64_t v49 = v110;
    uint64_t v50 = v111;
    uint64_t v52 = v108;
    uint64_t v51 = (uint64_t)v109;
    sub_24EC90894(v115);
    sub_24EC90894(v52);
    uint64_t v122 = v50;
    uint64_t v123 = v45;
    swift_getOpaqueTypeConformance2();
    sub_24EC909C8(v51, v46, v50);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v53(v51, v50);
    v53((uint64_t)v52, v50);
    goto LABEL_6;
  }
  uint64_t v42 = v106;
  uint64_t v43 = v107;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v36, v33, a6);
  uint64_t v44 = *(void *)((*(uint64_t (**)(char *, uint64_t))(v41 + 184))(a9, v41) + 16);
  swift_bridgeObjectRelease();
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, a6);
    goto LABEL_5;
  }
  uint64_t v90 = a6;
  uint64_t v91 = v36;
  long long v109 = a9;
  uint64_t v110 = v38;
  uint64_t v56 = v42;
  uint64_t v57 = v42;
  uint64_t v58 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v57, v93, v92);
  uint64_t v59 = v94;
  uint64_t v60 = *(void *)(v94 - 8);
  int v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48))(v56, 1, v94);
  uint64_t v45 = v116;
  uint64_t v50 = v111;
  if (v61 == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v56, v58);
  }
  else
  {
    (*(void (**)(uint64_t))(a11 + 32))(v59);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v59);
  }
  uint64_t v62 = v90;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v62, AssociatedConformanceWitness);
  uint64_t v64 = v95;
  sub_24EE56EC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE738);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EE5F710;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v66 = v62;
  uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v62, AssociatedConformanceWitness);
  uint64_t v69 = v68;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE500);
  *(void *)(inited + 48) = v67;
  *(void *)(inited + 56) = v69;
  *(void *)(inited + 72) = v70;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  uint64_t v71 = v66;
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v66, AssociatedConformanceWitness);
  uint64_t v73 = MEMORY[0x263F8D310];
  *(void *)(inited + 96) = v72;
  *(void *)(inited + 104) = v74;
  *(void *)(inited + 120) = v73;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v75 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v64;
  *(void *)(inited + 168) = v75;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 184) = 0xE600000000000000;
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v71, AssociatedConformanceWitness);
  *(void *)(inited + 216) = v73;
  *(void *)(inited + 192) = v76;
  *(void *)(inited + 200) = v77;
  sub_24EE1DC30(inited);
  sub_24EE56EA0();
  uint64_t v78 = MEMORY[0x263F8EE78];
  sub_24ED809E8(MEMORY[0x263F8EE78]);
  sub_24ED809E8(v78);
  uint64_t v79 = (uint64_t)v98;
  sub_24EE56EE0();
  uint64_t v80 = sub_24EE56EF0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
  uint64_t v81 = v103;
  sub_24EE56F00();
  uint64_t v82 = v97;
  sub_24EE566A0();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v81, v96);
  sub_24EC88758(v79, &qword_26B1DE4C0);
  uint64_t v122 = v50;
  uint64_t v123 = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v83 = v82;
  long long v84 = v99;
  long long v85 = v82;
  uint64_t v86 = v114;
  sub_24EC90894(v85);
  long long v87 = *(void (**)(char *, uint64_t))(v102 + 8);
  v87(v83, v86);
  uint64_t v88 = (uint64_t)v101;
  sub_24EC90894(v84);
  uint64_t v48 = v112;
  sub_24EC908D0(v88, v86);
  v87((char *)v88, v86);
  v87(v84, v86);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v91, v90);
  uint64_t v47 = v113;
LABEL_6:
  uint64_t v122 = v50;
  uint64_t v123 = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v121 = v45;
  uint64_t v54 = v118;
  swift_getWitnessTable();
  sub_24EC90894(v48);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v54);
}

uint64_t sub_24ED7FC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v74 = a2;
  uint64_t v91 = a4;
  uint64_t v82 = *(void *)(a3 - 8);
  uint64_t v83 = a9;
  MEMORY[0x270FA5388](a1);
  uint64_t v81 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)v70 - v14;
  uint64_t v15 = sub_24EE56F20();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EE56EB0();
  MEMORY[0x270FA5388](v17 - 8);
  v70[2] = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EE56ED0();
  MEMORY[0x270FA5388](v19 - 8);
  v70[1] = (char *)v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE4C0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v71 = (char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v94 = a3;
  uint64_t v95 = a10;
  uint64_t v90 = a10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v75 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v73 = (char *)v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v72 = (char *)v70 - v26;
  uint64_t v27 = sub_24EE57430();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v70 - v29;
  uint64_t v31 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v79 = (char *)v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = OpaqueTypeMetadata2;
  uint64_t v84 = a3;
  uint64_t v34 = sub_24EE56240();
  uint64_t v86 = *(void *)(v34 - 8);
  uint64_t v87 = v34;
  __n128 v35 = MEMORY[0x270FA5388](v34);
  long long v85 = (char *)v70 - v36;
  uint64_t v37 = v83;
  (*(void (**)(__n128))(a11 + 192))(v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  }
  else
  {
    uint64_t v38 = v79;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v79, v30, a5);
    uint64_t v39 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a11 + 200))(v37, a11) + 16);
    swift_bridgeObjectRelease();
    if (!v39)
    {
      uint64_t v82 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE738);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24EE5F710;
      *(void *)(inited + 32) = 1701667182;
      *(void *)(inited + 40) = 0xE400000000000000;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(a5, AssociatedConformanceWitness);
      uint64_t v51 = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = v50;
      *(void *)(inited + 56) = v52;
      *(void *)(inited + 72) = v51;
      strcpy((char *)(inited + 80), "impressionType");
      *(unsigned char *)(inited + 95) = -18;
      *(void *)(inited + 96) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(a5, AssociatedConformanceWitness);
      *(void *)(inited + 104) = v53;
      *(void *)(inited + 120) = v51;
      *(void *)(inited + 128) = 0x6973736572706D69;
      uint64_t v54 = MEMORY[0x263F8D6C8];
      uint64_t v55 = v74;
      *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
      *(void *)(inited + 144) = v55;
      *(void *)(inited + 168) = v54;
      *(void *)(inited + 176) = 0x657079546469;
      *(void *)(inited + 184) = 0xE600000000000000;
      uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(a5, AssociatedConformanceWitness);
      *(void *)(inited + 216) = v51;
      *(void *)(inited + 192) = v56;
      *(void *)(inited + 200) = v57;
      unint64_t v58 = sub_24EE1DC30(inited);
      uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(a5, AssociatedConformanceWitness);
      unint64_t v60 = sub_24ED8067C(v59);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v94 = v58;
      sub_24ED80D28(v60, (uint64_t)sub_24ED80CD4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v94);
      uint64_t v40 = v84;
      uint64_t v41 = v85;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a5, AssociatedConformanceWitness);
      uint64_t v83 = a5;
      sub_24EE56EC0();
      sub_24EE56EA0();
      uint64_t v62 = MEMORY[0x263F8EE78];
      sub_24ED809E8(MEMORY[0x263F8EE78]);
      sub_24ED809E8(v62);
      uint64_t v63 = (uint64_t)v71;
      sub_24EE56EE0();
      uint64_t v64 = sub_24EE56EF0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
      uint64_t v65 = v76;
      sub_24EE56F10();
      uint64_t v66 = (uint64_t)v73;
      uint64_t v43 = v90;
      sub_24EE566A0();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v78);
      sub_24EC88758(v63, &qword_26B1DE4C0);
      unint64_t v94 = v40;
      uint64_t v95 = v43;
      swift_getOpaqueTypeConformance2();
      uint64_t v67 = v72;
      uint64_t v68 = v88;
      sub_24EC90894(v66);
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v69(v66, v68);
      sub_24EC90894(v67);
      sub_24EC908D0(v66, v68);
      v69(v66, v68);
      v69((uint64_t)v67, v68);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v83);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v38, a5);
  }
  uint64_t v40 = v84;
  uint64_t v41 = v85;
  uint64_t v42 = v80;
  uint64_t v43 = v90;
  sub_24EC90894(v89);
  uint64_t v44 = (uint64_t)v81;
  sub_24EC90894(v42);
  unint64_t v94 = v40;
  uint64_t v95 = v43;
  swift_getOpaqueTypeConformance2();
  sub_24EC909C8(v44, v88, v40);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v45(v44, v40);
  v45((uint64_t)v42, v40);
LABEL_6:
  unint64_t v94 = v40;
  uint64_t v95 = v43;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = v43;
  uint64_t v46 = v87;
  swift_getWitnessTable();
  sub_24EC90894(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v41, v46);
}

unint64_t sub_24ED8067C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5E0);
    int v2 = (void *)sub_24EE57670();
  }
  else
  {
    int v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  int v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_24ED812CC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_24ED7635C(v6, v7);
    sub_24ED7635C(v7, v40);
    sub_24ED7635C(v40, &v38);
    unint64_t result = sub_24ED752B4(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      int v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_24ED7635C(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_24ED7635C(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_24ED809E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5E0);
  uint64_t v2 = sub_24EE57670();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24ED81080(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24ED80B14(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24ED7635C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24ED80B14(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  sub_24EE570A0();
  uint64_t v4 = sub_24EE578B0();
  return sub_24ED80B8C(a1, a2, v4);
}

unint64_t sub_24ED80B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_24EE577E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_24EE577E0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_24EE577E0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_24ED80CD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_24ED75440((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24ED80D28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24ED810E8(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_24ED7635C(v49, v47);
  uint64_t v14 = *(void **)a5;
  unint64_t v16 = sub_24ED752B4(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_24ED7636C();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    unint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *unint64_t v25 = v13;
    v25[1] = v12;
    sub_24ED7635C(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_24ED810E8(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_24ED7635C(v49, v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_24ED752B4(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_24ED75964(v37, 1);
        unint64_t v39 = sub_24ED752B4(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_24ED75440((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
        sub_24ED7635C(v46, v30);
      }
      else
      {
        uint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        *uint64_t v42 = v31;
        v42[1] = i;
        sub_24ED7635C(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_24ED810E8(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24ED812CC();
    return swift_release();
  }
  sub_24ED75964(v19, a4 & 1);
  unint64_t v21 = sub_24ED752B4(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_24ED75440((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    swift_bridgeObjectRelease();
    int64_t v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    sub_24ED7635C(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_24EE57800();
  __break(1u);
  return result;
}

uint64_t sub_24ED81080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24ED810E8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_24ED75440(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_24ED812D4((uint64_t)&v23, (uint64_t)v22);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    void v21[2] = v22[2];
    v19(v21);
    return sub_24EC88758((uint64_t)v21, &qword_26B1DE4F0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_24ED812CC()
{
  return swift_release();
}

uint64_t sub_24ED812D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double ContentMargins.transformed()()
{
  return *(double *)(v0 + 16);
}

void CanvasColor.init(red:green:blue:alpha:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a5;
  a1[1] = a4;
  a1[2] = a3;
  a1[3] = a2;
}

double CanvasColor.alpha.getter()
{
  return *(double *)v0;
}

double CanvasColor.blue.getter()
{
  return *(double *)(v0 + 8);
}

double CanvasColor.green.getter()
{
  return *(double *)(v0 + 16);
}

double CanvasColor.red.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_24ED81378()
{
  uint64_t result = 0x6168706C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702194274;
      break;
    case 2:
      uint64_t result = 0x6E65657267;
      break;
    case 3:
      uint64_t result = 6579570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24ED813EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED81D3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED81414(uint64_t a1)
{
  unint64_t v2 = sub_24ED81A74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24ED81450(uint64_t a1)
{
  unint64_t v2 = sub_24ED81A74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CanvasColor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965E08);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED81A74();
  sub_24EE578D0();
  uint64_t v14 = v9;
  HIBYTE(v13) = 0;
  sub_24ECB1664();
  sub_24EE577B0();
  if (!v2)
  {
    uint64_t v14 = v8;
    HIBYTE(v13) = 1;
    sub_24EE577B0();
    uint64_t v14 = v11;
    HIBYTE(v13) = 2;
    sub_24EE577B0();
    uint64_t v14 = v10;
    HIBYTE(v13) = 3;
    sub_24EE577B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CanvasColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269965E18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24ED81A74();
  sub_24EE578C0();
  if (!v2)
  {
    HIBYTE(v14) = 0;
    sub_24ECB1F14();
    sub_24EE57710();
    uint64_t v9 = v15;
    HIBYTE(v14) = 1;
    sub_24EE57710();
    uint64_t v10 = v15;
    HIBYTE(v14) = 2;
    sub_24EE57710();
    uint64_t v12 = v15;
    HIBYTE(v14) = 3;
    sub_24EE57710();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24ED818F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CanvasColor.init(from:)(a1, a2);
}

uint64_t sub_24ED8190C(void *a1)
{
  return CanvasColor.encode(to:)(a1);
}

uint64_t CanvasColor.hash(into:)()
{
  return sub_24EE578A0();
}

uint64_t CanvasColor.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED819DC()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED81A2C()
{
  return sub_24EE578B0();
}

unint64_t sub_24ED81A74()
{
  unint64_t result = qword_269965E10;
  if (!qword_269965E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965E10);
  }
  return result;
}

unint64_t sub_24ED81ACC()
{
  unint64_t result = qword_269965E20;
  if (!qword_269965E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965E20);
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasColor()
{
  return &type metadata for CanvasColor;
}

unsigned char *storeEnumTagSinglePayload for CanvasColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24ED81BFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasColor.CodingKeys()
{
  return &type metadata for CanvasColor.CodingKeys;
}

unint64_t sub_24ED81C38()
{
  unint64_t result = qword_269965E28;
  if (!qword_269965E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965E28);
  }
  return result;
}

unint64_t sub_24ED81C90()
{
  unint64_t result = qword_269965E30;
  if (!qword_269965E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269965E30);
  }
  return result;
}

unint64_t sub_24ED81CE8()
{
  unint64_t result = qword_269965E38[0];
  if (!qword_269965E38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269965E38);
  }
  return result;
}

uint64_t sub_24ED81D3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6168706C61 && a2 == 0xE500000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6579570 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t OrthogonalView.init(header:items:footer:metrics:contentMargins:densityFactor:dynamicTypeSize:sizeClass:artworkViewBuilder:artworkLeadingOverlayViewBuilder:artworkTrailingOverlayViewBuilder:actionButtonViewBuilder:contextMenuViewModifierBuilder:viewDescriptorBuilder:sectionHeaderSubtitleViewBuilder:onItemAppearedAtIndex:onItemDisappearedAtIndex:onItemSelectedWithIdentifier:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  long long v69 = *a5;
  uint64_t v36 = *((void *)a5 + 2);
  uint64_t v37 = *((void *)a5 + 3);
  char v65 = *a3;
  uint64_t v38 = a6[1];
  uint64_t v70 = *a6;
  uint64_t v71 = a6[2];
  unint64_t v39 = (int *)type metadata accessor for OrthogonalView();
  uint64_t v40 = a9 + v39[79];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B1DBA28);
  sub_24EE56B30();
  *(void *)uint64_t v40 = a21;
  *(unsigned char *)(v40 + 8) = a22;
  *(void *)(v40 + 16) = a23;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t v41 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(a9, a1, v41);
  *(void *)(a9 + v39[61]) = a2;
  *(unsigned char *)(a9 + v39[62]) = v65;
  uint64_t v42 = a9 + v39[63];
  uint64_t v43 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v42, a4, v43);
  uint64_t v44 = a9 + v39[68];
  uint64_t v45 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v44, a10, v45);
  uint64_t v46 = a9 + v39[69];
  uint64_t v47 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v46, a11, v47);
  uint64_t v48 = a9 + v39[70];
  uint64_t v49 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v48, a12, v49);
  uint64_t v50 = a9 + v39[74];
  swift_getTupleTypeMetadata2();
  uint64_t v51 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v50, a15, v51);
  uint64_t v52 = a9 + v39[71];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v53 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v52, a13, v53);
  uint64_t v54 = a9 + v39[64];
  *(_OWORD *)uint64_t v54 = v69;
  *(void *)(v54 + 16) = v36;
  *(void *)(v54 + 24) = v37;
  uint64_t v55 = a9 + v39[72];
  uint64_t v56 = type metadata accessor for EquatableViewModifierBuilder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(v55, a14, v56);
  uint64_t v57 = a9 + v39[73];
  uint64_t v58 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v57, a16, v58);
  uint64_t v59 = (void *)(a9 + v39[65]);
  *uint64_t v59 = v70;
  v59[1] = v38;
  v59[2] = v71;
  *(unsigned char *)(a9 + v39[66]) = a7;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a35 - 8) + 32))(a9 + v39[67], a8);
  uint64_t v60 = a9 + v39[77];
  sub_24EE55A60();
  uint64_t v61 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v60, a19, v61);
  sub_24ED12C80(a17, a9 + v39[75]);
  sub_24ED12C80(a18, a9 + v39[76]);
  uint64_t v62 = a9 + v39[78];
  uint64_t v63 = sub_24EE55940();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v62, a20, v63);
}

uint64_t type metadata accessor for OrthogonalView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED82588()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE458);
  sub_24EE56B40();
  return v1;
}

uint64_t sub_24ED825EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE458);
  sub_24EE56B60();
  return v1;
}

uint64_t OrthogonalView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v182 = a2;
  uint64_t v181 = sub_24EE56310();
  uint64_t v180 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  uint64_t v179 = (char *)v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  unsigned int v4 = (char *)a1[3];
  uint64_t v5 = a1[19];
  uint64_t v6 = a1[26];
  uint64_t v176 = a1[14];
  uint64_t v177 = v6;
  uint64_t v286 = v4;
  uint64_t v287 = v176;
  uint64_t v288 = v5;
  uint64_t v289 = v6;
  uint64_t v173 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v174 = sub_24EE55DD0();
  uint64_t v175 = sub_24EE56240();
  uint64_t v172 = sub_24EE57430();
  uint64_t v193 = a1[29];
  uint64_t v167 = *(void *)(v193 + 32);
  uint64_t v187 = a1[18];
  uint64_t AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v165 = sub_24EE571B0();
  uint64_t v7 = a1[20];
  uint64_t v286 = (char *)a1[5];
  uint64_t v287 = (uint64_t)v4;
  size_t v184 = v286;
  uint64_t v288 = (uint64_t)v4;
  uint64_t v289 = v7;
  uint64_t v8 = v7;
  uint64_t v186 = v7;
  uint64_t v290 = v5;
  uint64_t v291 = v5;
  uint64_t v9 = type metadata accessor for ActionCardView();
  uint64_t v163 = (char *)v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v286 = (char *)v9;
  uint64_t v287 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v161 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v164 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v300 = v8;
  uint64_t v301 = v164;
  uint64_t v11 = MEMORY[0x263F18E48];
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v298 = v12;
  uint64_t v299 = MEMORY[0x263F198F8];
  uint64_t v194 = v11;
  uint64_t v160 = v10;
  uint64_t v159 = swift_getWitnessTable();
  uint64_t v286 = (char *)v10;
  uint64_t v287 = v159;
  uint64_t v149 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v154 = v13;
  uint64_t v296 = v12;
  uint64_t v297 = MEMORY[0x263F18860];
  uint64_t v152 = swift_getWitnessTable();
  uint64_t v286 = (char *)v13;
  uint64_t v287 = v152;
  swift_getOpaqueTypeMetadata2();
  uint64_t v150 = sub_24EE56240();
  uint64_t v156 = sub_24EE56B10();
  uint64_t v155 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v157 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v158 = sub_24EE56240();
  uint64_t v143 = sub_24EE56240();
  uint64_t v185 = a1[10];
  uint64_t v190 = a1[16];
  uint64_t v191 = a1[24];
  OpaqueTypeMetadata2 = a1[28];
  uint64_t v14 = v184;
  uint64_t v286 = v184;
  uint64_t v287 = (uint64_t)v4;
  uint64_t v288 = (uint64_t)v4;
  uint64_t v289 = v185;
  uint64_t v188 = (uint64_t)v4;
  uint64_t v15 = v186;
  uint64_t v290 = v190;
  uint64_t v291 = v186;
  uint64_t v292 = v5;
  uint64_t v293 = v5;
  uint64_t v189 = v5;
  uint64_t v294 = v191;
  uint64_t v295 = OpaqueTypeMetadata2;
  uint64_t v16 = type metadata accessor for FullWidthStageView();
  uint64_t v153 = v16;
  uint64_t v151 = swift_getWitnessTable();
  uint64_t v286 = (char *)v16;
  uint64_t v287 = v151;
  swift_getOpaqueTypeMetadata2();
  uint64_t v17 = type metadata accessor for InfoActionCardView();
  uint64_t v148 = v17;
  uint64_t v147 = swift_getWitnessTable();
  uint64_t v286 = (char *)v17;
  uint64_t v287 = v147;
  swift_getOpaqueTypeMetadata2();
  uint64_t v146 = sub_24EE56240();
  uint64_t v128 = sub_24EE56240();
  uint64_t v183 = a1;
  uint64_t v18 = a1[7];
  uint64_t v168 = a1[6];
  uint64_t v169 = v18;
  uint64_t v19 = a1[21];
  uint64_t v170 = a1[22];
  uint64_t v171 = v19;
  uint64_t v286 = v14;
  uint64_t v287 = v168;
  uint64_t v288 = v18;
  uint64_t v289 = v15;
  uint64_t v290 = v19;
  uint64_t v291 = v170;
  uint64_t v20 = type metadata accessor for LargeBrickView();
  uint64_t v145 = v20;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v286 = (char *)v20;
  uint64_t v287 = v144;
  swift_getOpaqueTypeMetadata2();
  uint64_t v21 = type metadata accessor for DynamicBrickView();
  uint64_t v142 = v21;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v286 = (char *)v21;
  uint64_t v287 = v141;
  swift_getOpaqueTypeMetadata2();
  uint64_t v134 = sub_24EE56240();
  uint64_t v22 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v140 = v22;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v286 = (char *)v22;
  uint64_t v287 = v139;
  swift_getOpaqueTypeMetadata2();
  uint64_t v137 = sub_24EE56240();
  uint64_t v138 = sub_24EE56240();
  v119[1] = sub_24EE56240();
  uint64_t v23 = type metadata accessor for StandardCardView();
  uint64_t v136 = v23;
  uint64_t v135 = swift_getWitnessTable();
  uint64_t v286 = (char *)v23;
  uint64_t v287 = v135;
  swift_getOpaqueTypeMetadata2();
  uint64_t v286 = v14;
  uint64_t v287 = v188;
  uint64_t v288 = v15;
  uint64_t v289 = v189;
  uint64_t v24 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v133 = v24;
  uint64_t v132 = swift_getWitnessTable();
  uint64_t v286 = (char *)v24;
  uint64_t v287 = v132;
  swift_getOpaqueTypeMetadata2();
  v119[4] = sub_24EE56240();
  uint64_t v25 = type metadata accessor for StandardVerticalStackView();
  uint64_t v131 = v25;
  uint64_t v130 = swift_getWitnessTable();
  uint64_t v286 = (char *)v25;
  uint64_t v287 = v130;
  swift_getOpaqueTypeMetadata2();
  uint64_t v26 = type metadata accessor for TallCardView();
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v286 = (char *)v26;
  uint64_t v287 = v129;
  swift_getOpaqueTypeMetadata2();
  uint64_t v127 = sub_24EE56240();
  v119[2] = sub_24EE56240();
  uint64_t v27 = type metadata accessor for VerticalStackCard();
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v286 = (char *)v27;
  uint64_t v287 = v125;
  swift_getOpaqueTypeMetadata2();
  v119[3] = sub_24EE56240();
  uint64_t v28 = type metadata accessor for WideBrickView();
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v286 = (char *)v28;
  uint64_t v287 = v120;
  swift_getOpaqueTypeMetadata2();
  v119[5] = sub_24EE56240();
  v119[6] = sub_24EE56240();
  uint64_t v121 = sub_24EE56240();
  uint64_t v122 = sub_24EE56B10();
  uint64_t v123 = sub_24EE55DD0();
  uint64_t v124 = sub_24EE56240();
  uint64_t v126 = sub_24EE55DD0();
  uint64_t v161 = sub_24EE55DD0();
  uint64_t v286 = v163;
  uint64_t v287 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v160;
  uint64_t v287 = v159;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v154;
  uint64_t v287 = v152;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v284 = v30;
  uint64_t v285 = v31;
  uint64_t v283 = swift_getWitnessTable();
  uint64_t WitnessTable = MEMORY[0x263F1B488];
  uint64_t v281 = swift_getWitnessTable();
  uint64_t v282 = MEMORY[0x263F18C10];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v279 = v32;
  uint64_t v280 = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v163 = (char *)MEMORY[0x263F1B6E0];
  uint64_t v35 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v277 = v34;
  uint64_t v278 = v35;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v275 = OpaqueTypeConformance2;
  uint64_t v276 = v36;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v286 = (char *)v153;
  uint64_t v287 = v151;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v148;
  uint64_t v287 = v147;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v273 = v38;
  uint64_t v274 = v39;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v271 = v37;
  uint64_t v272 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v286 = (char *)v145;
  uint64_t v287 = v144;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v142;
  uint64_t v287 = v141;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v42;
  uint64_t v270 = v43;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v286 = (char *)v140;
  uint64_t v287 = v139;
  uint64_t v267 = swift_getOpaqueTypeConformance2();
  uint64_t v268 = v43;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v265 = v44;
  uint64_t v266 = v45;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v263 = v41;
  uint64_t v264 = v46;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v286 = (char *)v136;
  uint64_t v287 = v135;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v133;
  uint64_t v287 = v132;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  uint64_t v261 = v48;
  uint64_t v262 = v49;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v286 = (char *)v131;
  uint64_t v287 = v130;
  uint64_t v51 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v26;
  uint64_t v287 = v129;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v259 = v51;
  uint64_t v260 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v257 = v50;
  uint64_t v258 = v53;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v286 = (char *)v27;
  uint64_t v287 = v125;
  uint64_t v255 = swift_getOpaqueTypeConformance2();
  uint64_t v256 = v191;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v286 = (char *)v28;
  uint64_t v287 = v120;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v253 = v55;
  uint64_t v254 = v56;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v251 = v54;
  uint64_t v252 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v249 = v47;
  uint64_t v250 = v58;
  uint64_t v248 = swift_getWitnessTable();
  uint64_t v246 = swift_getWitnessTable();
  uint64_t v247 = v164;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v244 = MEMORY[0x263F1BA00];
  uint64_t v245 = v59;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = MEMORY[0x263F1A240];
  uint64_t v242 = v60;
  uint64_t v243 = MEMORY[0x263F1A240];
  uint64_t v240 = swift_getWitnessTable();
  uint64_t v241 = v61;
  uint64_t v62 = v161;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v286 = (char *)v62;
  uint64_t v287 = v63;
  swift_getOpaqueTypeMetadata2();
  uint64_t v64 = sub_24EE55DD0();
  uint64_t v286 = (char *)v62;
  uint64_t v287 = v63;
  uint64_t v238 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = MEMORY[0x263F190E0];
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v286 = (char *)v64;
  uint64_t v287 = v65;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v66 = v183[8];
  uint64_t v161 = v183[9];
  uint64_t v67 = v161;
  uint64_t WitnessTable = v66;
  uint64_t v68 = v183;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v164 = v68[23];
  uint64_t v286 = (char *)v66;
  uint64_t v287 = v67;
  uint64_t v288 = AssociatedConformanceWitness;
  uint64_t v289 = v164;
  type metadata accessor for CanvasContextMenu();
  uint64_t v70 = sub_24EE55DD0();
  uint64_t v286 = (char *)v64;
  uint64_t v287 = v65;
  uint64_t v236 = swift_getOpaqueTypeConformance2();
  uint64_t v237 = v65;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v234 = v71;
  uint64_t v235 = v72;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v286 = (char *)v70;
  uint64_t v287 = v190;
  uint64_t v288 = v73;
  uint64_t v289 = OpaqueTypeMetadata2;
  uint64_t v74 = type metadata accessor for HeightReader();
  uint64_t v75 = v165;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v77 = AssociatedTypeWitness;
  uint64_t v78 = swift_getAssociatedConformanceWitness();
  uint64_t v286 = (char *)v75;
  uint64_t v287 = (uint64_t)v77;
  uint64_t v288 = v74;
  uint64_t v289 = v76;
  uint64_t v290 = v78;
  sub_24EE56CB0();
  uint64_t v233 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE55AF0();
  uint64_t v79 = sub_24EE55DD0();
  uint64_t v231 = swift_getWitnessTable();
  uint64_t v232 = MEMORY[0x263F18860];
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v286 = (char *)v79;
  uint64_t v287 = v80;
  swift_getOpaqueTypeMetadata2();
  uint64_t v286 = (char *)v79;
  uint64_t v287 = v80;
  swift_getOpaqueTypeConformance2();
  uint64_t v81 = sub_24EE55B20();
  uint64_t v82 = sub_24EE56470();
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v286 = (char *)v81;
  uint64_t v287 = v82;
  uint64_t v288 = v83;
  uint64_t v289 = MEMORY[0x263F1A480];
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE370);
  uint64_t v84 = sub_24EE56CF0();
  unint64_t v85 = sub_24ED17434();
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  uint64_t v229 = v86;
  uint64_t v230 = v87;
  uint64_t v88 = swift_getWitnessTable();
  unint64_t v227 = v85;
  uint64_t v228 = v88;
  uint64_t v226 = swift_getWitnessTable();
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v286 = (char *)v81;
  uint64_t v287 = v82;
  uint64_t v288 = v83;
  uint64_t v289 = MEMORY[0x263F1A480];
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  unint64_t v91 = sub_24ED174A8();
  uint64_t v223 = v89;
  uint64_t v224 = v90;
  unint64_t v225 = v91;
  uint64_t v167 = v84;
  swift_getWitnessTable();
  uint64_t v92 = sub_24EE56C30();
  uint64_t v175 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  unint64_t v94 = (char *)v119 - v93;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v286 = (char *)v92;
  uint64_t v287 = v95;
  uint64_t v96 = v95;
  uint64_t v165 = v95;
  uint64_t v97 = swift_getOpaqueTypeMetadata2();
  uint64_t v194 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v163 = (char *)v119 - v98;
  uint64_t v286 = (char *)v92;
  uint64_t v287 = v96;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = (char *)v97;
  uint64_t v287 = v99;
  uint64_t v172 = v99;
  uint64_t v173 = MEMORY[0x263F1AAE0];
  uint64_t v100 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v102 = (char *)v119 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v103);
  uint64_t AssociatedTypeWitness = (char *)v119 - v104;
  __int16 v105 = v183;
  swift_getWitnessTable();
  sub_24EE567C0();
  sub_24EE56140();
  uint64_t v195 = v105[2];
  uint64_t v196 = v188;
  uint64_t v197 = v105[4];
  uint64_t v198 = v184;
  uint64_t v199 = v168;
  uint64_t v200 = v169;
  uint64_t v201 = WitnessTable;
  uint64_t v202 = v161;
  uint64_t v203 = v185;
  long long v204 = *(_OWORD *)(v105 + 11);
  uint64_t v205 = v105[13];
  uint64_t v206 = v176;
  uint64_t v207 = v105[15];
  uint64_t v208 = v190;
  uint64_t v209 = v105[17];
  uint64_t v210 = v187;
  uint64_t v211 = v189;
  uint64_t v212 = v186;
  uint64_t v213 = v171;
  uint64_t v214 = v170;
  uint64_t v215 = v164;
  uint64_t v216 = v191;
  uint64_t v217 = v105[25];
  uint64_t v218 = v177;
  uint64_t v219 = v105[27];
  uint64_t v220 = OpaqueTypeMetadata2;
  uint64_t v221 = v193;
  uint64_t v106 = v178;
  uint64_t v222 = v178;
  sub_24EE56C20();
  uint64_t v107 = v163;
  sub_24EE56870();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v94, v92);
  uint64_t v108 = sub_24EE564D0();
  long long v109 = (double *)(v106 + *((int *)v105 + 64));
  double v110 = *v109;
  double v111 = v109[1];
  double v112 = v109[2];
  double v113 = v109[3];
  uint64_t v114 = v179;
  sub_24EE56300();
  uint64_t v115 = v172;
  MEMORY[0x25334CEB0](v108, v114, v97, v172, v112, v111, v110, v113);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v114, v181);
  (*(void (**)(char *, uint64_t))(v194 + 8))(v107, v97);
  uint64_t v286 = (char *)v97;
  uint64_t v287 = v115;
  swift_getOpaqueTypeConformance2();
  uint64_t v116 = AssociatedTypeWitness;
  sub_24EC90894(v102);
  uint64_t v117 = *(void (**)(char *, uint64_t))(v174 + 8);
  v117(v102, v100);
  sub_24EC90894(v116);
  return ((uint64_t (*)(char *, uint64_t))v117)(v116, v100);
}

uint64_t sub_24ED83DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v107 = a8;
  uint64_t v108 = a7;
  uint64_t v102 = a6;
  uint64_t v86 = a4;
  uint64_t v83 = a2;
  uint64_t v88 = a1;
  uint64_t v92 = a9;
  uint64_t v84 = a13;
  uint64_t v82 = a12;
  uint64_t v101 = a23;
  uint64_t v99 = a22;
  uint64_t v87 = a28;
  uint64_t v106 = a29;
  uint64_t v100 = a24;
  uint64_t v105 = a25;
  uint64_t v80 = a16;
  uint64_t v96 = a17;
  uint64_t v97 = a10;
  uint64_t v104 = a11;
  uint64_t v81 = a18;
  uint64_t v95 = a19;
  uint64_t v98 = a30;
  uint64_t v85 = a26;
  uint64_t v79 = a27;
  uint64_t v78 = a14;
  uint64_t v77 = a15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v156 = a3;
  uint64_t v157 = a15;
  uint64_t v158 = a20;
  uint64_t v159 = a27;
  uint64_t v89 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v90 = sub_24EE55DD0();
  uint64_t v91 = sub_24EE56240();
  uint64_t v103 = sub_24EE57430();
  uint64_t v76 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_24EE571B0();
  uint64_t v94 = a5;
  type metadata accessor for ActionCardView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56430();
  sub_24EE55DD0();
  sub_24EE55DD0();
  uint64_t v72 = (char *)sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v170 = a21;
  uint64_t v171 = v72;
  uint64_t v32 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v169 = MEMORY[0x263F198F8];
  uint64_t v93 = v32;
  swift_getWitnessTable();
  v62[36] = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  v62[39] = sub_24EE55DD0();
  uint64_t v166 = WitnessTable;
  uint64_t v167 = MEMORY[0x263F18860];
  v62[38] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[37] = sub_24EE56240();
  v62[41] = sub_24EE56B10();
  v62[40] = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v63 = (char *)sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  sub_24EE56240();
  v62[28] = sub_24EE56240();
  uint64_t v162 = a20;
  uint64_t v163 = a20;
  uint64_t v164 = a25;
  uint64_t v165 = a29;
  v62[43] = type metadata accessor for FullWidthStageView();
  v62[42] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v71 = a3;
  uint64_t v73 = a20;
  v62[35] = type metadata accessor for InfoActionCardView();
  v62[34] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[33] = sub_24EE56240();
  v62[15] = sub_24EE56240();
  uint64_t v161 = a23;
  v62[32] = type metadata accessor for LargeBrickView();
  v62[31] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[30] = type metadata accessor for DynamicBrickView();
  v62[29] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[21] = sub_24EE56240();
  v62[27] = type metadata accessor for MonogramVerticalStackView();
  v62[26] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[24] = sub_24EE56240();
  v62[25] = sub_24EE56240();
  v62[1] = sub_24EE56240();
  v62[23] = type metadata accessor for StandardCardView();
  v62[22] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[20] = type metadata accessor for StandardHorizontalStackView();
  v62[19] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[4] = sub_24EE56240();
  v62[18] = type metadata accessor for StandardVerticalStackView();
  v62[17] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for TallCardView();
  v62[16] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[14] = sub_24EE56240();
  v62[2] = sub_24EE56240();
  uint64_t v70 = a21;
  type metadata accessor for VerticalStackCard();
  v62[12] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[3] = sub_24EE56240();
  type metadata accessor for WideBrickView();
  v62[7] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  v62[5] = sub_24EE56240();
  v62[6] = sub_24EE56240();
  v62[8] = sub_24EE56240();
  v62[9] = sub_24EE56B10();
  v62[10] = sub_24EE55DD0();
  v62[11] = sub_24EE56240();
  v62[13] = sub_24EE55DD0();
  sub_24EE55DD0();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v154 = swift_getOpaqueTypeConformance2();
  uint64_t v155 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = MEMORY[0x263F19B40];
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v151 = swift_getWitnessTable();
  uint64_t v152 = MEMORY[0x263F18C10];
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v150 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v147 = swift_getWitnessTable();
  uint64_t v148 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v145 = OpaqueTypeConformance2;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v143 = swift_getOpaqueTypeConformance2();
  uint64_t v144 = swift_getOpaqueTypeConformance2();
  uint64_t v141 = v35;
  uint64_t v142 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  v139[78] = swift_getOpaqueTypeConformance2();
  uint64_t v140 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = swift_getWitnessTable();
  v139[76] = swift_getOpaqueTypeConformance2();
  v139[77] = v140;
  v139[74] = v37;
  v139[75] = swift_getWitnessTable();
  v139[72] = v36;
  v139[73] = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  v139[70] = swift_getOpaqueTypeConformance2();
  v139[71] = swift_getOpaqueTypeConformance2();
  uint64_t v39 = swift_getWitnessTable();
  v139[68] = swift_getOpaqueTypeConformance2();
  v139[69] = swift_getOpaqueTypeConformance2();
  v139[66] = v39;
  v139[67] = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  v139[64] = swift_getOpaqueTypeConformance2();
  v139[65] = a25;
  v139[62] = swift_getWitnessTable();
  v139[63] = swift_getOpaqueTypeConformance2();
  v139[60] = v40;
  v139[61] = swift_getWitnessTable();
  v139[58] = v38;
  v139[59] = swift_getWitnessTable();
  v139[57] = swift_getWitnessTable();
  v139[55] = swift_getWitnessTable();
  v139[56] = v72;
  uint64_t v41 = swift_getWitnessTable();
  v139[53] = MEMORY[0x263F1BA00];
  v139[54] = v41;
  uint64_t v69 = v34;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = MEMORY[0x263F1A240];
  v139[51] = v42;
  v139[52] = MEMORY[0x263F1A240];
  v139[49] = swift_getWitnessTable();
  v139[50] = v43;
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE55DD0();
  v139[47] = swift_getOpaqueTypeConformance2();
  v139[48] = MEMORY[0x263F190E0];
  uint64_t v44 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasContextMenu();
  sub_24EE55DD0();
  v139[45] = swift_getOpaqueTypeConformance2();
  v139[46] = v44;
  v139[43] = swift_getWitnessTable();
  v139[44] = swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for HeightReader();
  swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24EE56CB0();
  v139[42] = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE55AF0();
  sub_24EE55DD0();
  v139[40] = swift_getWitnessTable();
  v139[41] = MEMORY[0x263F18860];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  uint64_t v68 = sub_24EE55B20();
  uint64_t v67 = sub_24EE56470();
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v156 = v68;
  uint64_t v157 = v67;
  uint64_t v158 = v66;
  uint64_t v159 = MEMORY[0x263F1A480];
  uint64_t v65 = MEMORY[0x263F1AED8];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE370);
  uint64_t v45 = sub_24EE56CF0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t AssociatedTypeWitness = v45;
  uint64_t v76 = v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v63 = (char *)v62 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v72 = (char *)v62 - v49;
  v139[2] = v83;
  v139[3] = v71;
  v139[4] = v86;
  v139[5] = v94;
  v139[6] = v102;
  v139[7] = v108;
  v139[8] = v107;
  v139[9] = v97;
  v139[10] = v104;
  v139[11] = v82;
  v139[12] = v84;
  v139[13] = v78;
  v139[14] = v77;
  v139[15] = v80;
  v139[16] = a17;
  v139[17] = v81;
  v139[18] = v95;
  v139[19] = v73;
  v139[20] = v70;
  v139[21] = v99;
  v139[22] = v101;
  v139[23] = v100;
  v139[24] = v105;
  v139[25] = v85;
  v139[26] = v79;
  v139[27] = v87;
  v139[28] = v106;
  v139[29] = v98;
  v139[30] = v88;
  v138[2] = v83;
  v138[3] = v71;
  v138[4] = v86;
  v138[5] = v94;
  v138[6] = v102;
  v138[7] = v108;
  v138[8] = v107;
  v138[9] = v97;
  v138[10] = v104;
  v138[11] = v82;
  v138[12] = v84;
  v138[13] = v78;
  v138[14] = v77;
  v138[15] = v80;
  v138[16] = a17;
  v138[17] = v81;
  v138[18] = v95;
  v138[19] = v73;
  v138[20] = v70;
  v138[21] = v99;
  v138[22] = v101;
  v138[23] = v100;
  v138[24] = v105;
  v138[25] = v85;
  v138[26] = v79;
  v138[27] = v87;
  v138[28] = v106;
  v138[29] = v98;
  v138[30] = v88;
  uint64_t v109 = v83;
  uint64_t v110 = v71;
  uint64_t v111 = v86;
  uint64_t v112 = v94;
  uint64_t v113 = v102;
  uint64_t v114 = v108;
  uint64_t v115 = v107;
  uint64_t v116 = v97;
  uint64_t v117 = v104;
  uint64_t v118 = v82;
  uint64_t v119 = v84;
  uint64_t v120 = v78;
  uint64_t v121 = v77;
  uint64_t v122 = v80;
  uint64_t v123 = a17;
  uint64_t v124 = v81;
  uint64_t v125 = v95;
  uint64_t v126 = v73;
  uint64_t v127 = v70;
  uint64_t v128 = v99;
  uint64_t v129 = v101;
  uint64_t v130 = v100;
  uint64_t v131 = v105;
  uint64_t v132 = v85;
  uint64_t v133 = v79;
  uint64_t v134 = v87;
  uint64_t v135 = v106;
  uint64_t v136 = v98;
  uint64_t v137 = v88;
  unint64_t v50 = sub_24ED17434();
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  v139[38] = v51;
  v139[39] = v52;
  uint64_t v53 = swift_getWitnessTable();
  v139[36] = v50;
  v139[37] = v53;
  v139[35] = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v156 = v68;
  uint64_t v157 = v67;
  uint64_t v158 = v66;
  uint64_t v159 = MEMORY[0x263F1A480];
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  unint64_t v61 = sub_24ED174A8();
  uint64_t v55 = v63;
  sub_24EDF0758((uint64_t)sub_24ED95888, (uint64_t)v139, (uint64_t)sub_24ED958A0, (uint64_t)v138, (void (*)(uint64_t))sub_24ED958B8);
  v139[32] = v54;
  v139[33] = v60;
  v139[34] = v61;
  uint64_t v56 = AssociatedTypeWitness;
  swift_getWitnessTable();
  uint64_t v57 = v72;
  sub_24EC90894(v55);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v76 + 8);
  v58(v55, v56);
  sub_24EC90894(v57);
  return ((uint64_t (*)(char *, uint64_t))v58)(v57, v56);
}

uint64_t sub_24ED85408()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED83DF4);
}

uint64_t sub_24ED85420()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED85494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v190 = a8;
  uint64_t v196 = a7;
  uint64_t v197 = a6;
  uint64_t v181 = a4;
  uint64_t v177 = a2;
  uint64_t v186 = a1;
  uint64_t v187 = a9;
  uint64_t v185 = a27;
  uint64_t v184 = a26;
  uint64_t v180 = a15;
  uint64_t v179 = a14;
  uint64_t v176 = a13;
  uint64_t v175 = a12;
  uint64_t v195 = a23;
  uint64_t v193 = a22;
  uint64_t v182 = a28;
  uint64_t v200 = a29;
  uint64_t v194 = a24;
  uint64_t v199 = a25;
  uint64_t v174 = a16;
  uint64_t v201 = a17;
  uint64_t v192 = a10;
  uint64_t v198 = a11;
  uint64_t v173 = a18;
  uint64_t v189 = a19;
  uint64_t v191 = a30;
  uint64_t v32 = sub_24EE56450();
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v178 = (char *)v118 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_24EE56470();
  uint64_t v183 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171);
  uint64_t v172 = (char *)v118 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v168 = sub_24EE571B0();
  uint64_t v286 = a5;
  uint64_t v287 = a3;
  uint64_t v188 = a3;
  uint64_t v288 = a3;
  uint64_t v289 = a21;
  uint64_t v290 = a20;
  uint64_t v291 = a20;
  uint64_t v35 = type metadata accessor for ActionCardView();
  uint64_t v163 = v35;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v286 = v35;
  uint64_t v287 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v160 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v36 = sub_24EE55DD0();
  uint64_t v166 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v300 = a21;
  uint64_t v301 = v166;
  uint64_t v37 = MEMORY[0x263F18E48];
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v298 = v38;
  uint64_t v299 = MEMORY[0x263F198F8];
  uint64_t v161 = v37;
  uint64_t v159 = v36;
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v286 = v36;
  uint64_t v287 = v158;
  uint64_t v148 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v39 = sub_24EE55DD0();
  uint64_t v151 = v39;
  uint64_t v296 = v38;
  uint64_t v297 = MEMORY[0x263F18860];
  uint64_t v150 = swift_getWitnessTable();
  uint64_t v286 = v39;
  uint64_t v287 = v150;
  swift_getOpaqueTypeMetadata2();
  uint64_t v149 = sub_24EE56240();
  uint64_t v153 = sub_24EE56B10();
  uint64_t v152 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v156 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v157 = sub_24EE56240();
  uint64_t v140 = sub_24EE56240();
  uint64_t v40 = v188;
  uint64_t v286 = a5;
  uint64_t v287 = v188;
  uint64_t v288 = v188;
  uint64_t v289 = v198;
  uint64_t v290 = v201;
  uint64_t v291 = a21;
  uint64_t v292 = a20;
  uint64_t v293 = a20;
  uint64_t v294 = v199;
  uint64_t v295 = v200;
  uint64_t v41 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v41;
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v286 = v41;
  uint64_t v287 = v154;
  swift_getOpaqueTypeMetadata2();
  uint64_t v42 = v40;
  uint64_t v167 = a20;
  uint64_t v43 = type metadata accessor for InfoActionCardView();
  uint64_t v147 = v43;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v286 = v43;
  uint64_t v287 = v146;
  swift_getOpaqueTypeMetadata2();
  uint64_t v145 = sub_24EE56240();
  uint64_t v127 = sub_24EE56240();
  uint64_t v286 = a5;
  uint64_t v287 = v197;
  uint64_t v288 = v196;
  uint64_t v289 = a21;
  uint64_t v290 = v193;
  uint64_t v291 = v195;
  uint64_t v44 = type metadata accessor for LargeBrickView();
  uint64_t v144 = v44;
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v286 = v44;
  uint64_t v287 = v143;
  swift_getOpaqueTypeMetadata2();
  uint64_t v45 = type metadata accessor for DynamicBrickView();
  uint64_t v142 = v45;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v286 = v45;
  uint64_t v287 = v141;
  swift_getOpaqueTypeMetadata2();
  uint64_t v133 = sub_24EE56240();
  uint64_t v46 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v139 = v46;
  uint64_t v138 = swift_getWitnessTable();
  uint64_t v286 = v46;
  uint64_t v287 = v138;
  swift_getOpaqueTypeMetadata2();
  uint64_t v136 = sub_24EE56240();
  uint64_t v137 = sub_24EE56240();
  v118[1] = sub_24EE56240();
  uint64_t v47 = type metadata accessor for StandardCardView();
  uint64_t v135 = v47;
  uint64_t v134 = swift_getWitnessTable();
  uint64_t v286 = v47;
  uint64_t v287 = v134;
  swift_getOpaqueTypeMetadata2();
  uint64_t v286 = a5;
  uint64_t v287 = v42;
  uint64_t v288 = a21;
  uint64_t v289 = a20;
  uint64_t v48 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v132 = v48;
  uint64_t v131 = swift_getWitnessTable();
  uint64_t v286 = v48;
  uint64_t v287 = v131;
  swift_getOpaqueTypeMetadata2();
  v118[4] = sub_24EE56240();
  uint64_t v49 = type metadata accessor for StandardVerticalStackView();
  uint64_t v130 = v49;
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v286 = v49;
  uint64_t v287 = v129;
  swift_getOpaqueTypeMetadata2();
  uint64_t v50 = type metadata accessor for TallCardView();
  uint64_t v128 = swift_getWitnessTable();
  uint64_t v286 = v50;
  uint64_t v287 = v128;
  swift_getOpaqueTypeMetadata2();
  uint64_t v126 = sub_24EE56240();
  v118[2] = sub_24EE56240();
  uint64_t v164 = a5;
  uint64_t v165 = a21;
  uint64_t v51 = type metadata accessor for VerticalStackCard();
  uint64_t v124 = swift_getWitnessTable();
  uint64_t v286 = v51;
  uint64_t v287 = v124;
  swift_getOpaqueTypeMetadata2();
  v118[3] = sub_24EE56240();
  uint64_t v52 = type metadata accessor for WideBrickView();
  uint64_t v119 = swift_getWitnessTable();
  uint64_t v286 = v52;
  uint64_t v287 = v119;
  swift_getOpaqueTypeMetadata2();
  v118[5] = sub_24EE56240();
  v118[6] = sub_24EE56240();
  uint64_t v120 = sub_24EE56240();
  uint64_t v121 = sub_24EE56B10();
  uint64_t v122 = sub_24EE55DD0();
  uint64_t v123 = sub_24EE56240();
  uint64_t v125 = sub_24EE55DD0();
  uint64_t v160 = sub_24EE55DD0();
  uint64_t v286 = v163;
  uint64_t v287 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v159;
  uint64_t v287 = v158;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v151;
  uint64_t v287 = v150;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  uint64_t v284 = v54;
  uint64_t v285 = v55;
  uint64_t v283 = swift_getWitnessTable();
  uint64_t v163 = MEMORY[0x263F1B488];
  uint64_t v281 = swift_getWitnessTable();
  uint64_t v282 = MEMORY[0x263F18C10];
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v279 = v56;
  uint64_t v280 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v277 = v58;
  uint64_t v278 = v59;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v275 = OpaqueTypeConformance2;
  uint64_t v276 = v60;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v286 = OpaqueTypeMetadata2;
  uint64_t v287 = v154;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v147;
  uint64_t v287 = v146;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v273 = v62;
  uint64_t v274 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v271 = v61;
  uint64_t v272 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v286 = v144;
  uint64_t v287 = v143;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v142;
  uint64_t v287 = v141;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v269 = v66;
  uint64_t v270 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v286 = v139;
  uint64_t v287 = v138;
  uint64_t v267 = swift_getOpaqueTypeConformance2();
  uint64_t v268 = v67;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v265 = v68;
  uint64_t v266 = v69;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v263 = v65;
  uint64_t v264 = v70;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v286 = v135;
  uint64_t v287 = v134;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v132;
  uint64_t v287 = v131;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v261 = v72;
  uint64_t v262 = v73;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v286 = v130;
  uint64_t v287 = v129;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v286 = v50;
  uint64_t v287 = v128;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  uint64_t v259 = v75;
  uint64_t v260 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v257 = v74;
  uint64_t v258 = v77;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v286 = v51;
  uint64_t v287 = v124;
  uint64_t v255 = swift_getOpaqueTypeConformance2();
  uint64_t v256 = v199;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v286 = v52;
  uint64_t v287 = v119;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v253 = v79;
  uint64_t v254 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v251 = v78;
  uint64_t v252 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v249 = v71;
  uint64_t v250 = v82;
  uint64_t v248 = swift_getWitnessTable();
  uint64_t v246 = swift_getWitnessTable();
  uint64_t v247 = v166;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v244 = MEMORY[0x263F1BA00];
  uint64_t v245 = v83;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v85 = MEMORY[0x263F1A240];
  uint64_t v242 = v84;
  uint64_t v243 = MEMORY[0x263F1A240];
  uint64_t v240 = swift_getWitnessTable();
  uint64_t v241 = v85;
  uint64_t v86 = v160;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v286 = v86;
  uint64_t v287 = v87;
  uint64_t v88 = v86;
  swift_getOpaqueTypeMetadata2();
  uint64_t v89 = sub_24EE55DD0();
  uint64_t v286 = v88;
  uint64_t v287 = v87;
  uint64_t v238 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = MEMORY[0x263F190E0];
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v286 = v89;
  uint64_t v287 = v90;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v91 = v190;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v286 = v91;
  uint64_t v287 = v192;
  uint64_t v288 = AssociatedConformanceWitness;
  uint64_t v289 = v194;
  type metadata accessor for CanvasContextMenu();
  uint64_t v93 = sub_24EE55DD0();
  uint64_t v286 = v89;
  uint64_t v287 = v90;
  uint64_t v236 = swift_getOpaqueTypeConformance2();
  uint64_t v237 = v90;
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v234 = v94;
  uint64_t v235 = v95;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v286 = v93;
  uint64_t v287 = v201;
  uint64_t v288 = v96;
  uint64_t v289 = v200;
  uint64_t v97 = type metadata accessor for HeightReader();
  uint64_t v98 = v168;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v101 = swift_getAssociatedConformanceWitness();
  uint64_t v286 = v98;
  uint64_t v287 = v100;
  uint64_t v288 = v97;
  uint64_t v289 = v99;
  uint64_t v290 = v101;
  sub_24EE56CB0();
  uint64_t v233 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EE55AF0();
  uint64_t v102 = sub_24EE55DD0();
  uint64_t v231 = swift_getWitnessTable();
  uint64_t v232 = MEMORY[0x263F18860];
  uint64_t v103 = swift_getWitnessTable();
  uint64_t v286 = v102;
  uint64_t v287 = v103;
  swift_getOpaqueTypeMetadata2();
  uint64_t v286 = v102;
  uint64_t v287 = v103;
  swift_getOpaqueTypeConformance2();
  uint64_t v104 = sub_24EE55B20();
  uint64_t v170 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v106 = (char *)v118 - v105;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = v171;
  uint64_t v286 = v104;
  uint64_t v287 = v171;
  uint64_t v288 = v107;
  uint64_t v289 = MEMORY[0x263F1A480];
  uint64_t v168 = MEMORY[0x263F1AED8];
  uint64_t v109 = swift_getOpaqueTypeMetadata2();
  uint64_t AssociatedTypeWitness = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v111 = (char *)v118 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v112);
  uint64_t v114 = (char *)v118 - v113;
  sub_24EE56490();
  uint64_t v202 = v177;
  uint64_t v203 = v188;
  uint64_t v204 = v181;
  uint64_t v205 = v164;
  uint64_t v206 = v197;
  uint64_t v207 = v196;
  uint64_t v208 = v190;
  uint64_t v209 = v192;
  uint64_t v210 = v198;
  uint64_t v211 = v175;
  uint64_t v212 = v176;
  uint64_t v213 = v179;
  uint64_t v214 = v180;
  uint64_t v215 = v174;
  uint64_t v216 = v201;
  uint64_t v217 = v173;
  uint64_t v218 = v189;
  uint64_t v219 = v167;
  uint64_t v220 = v165;
  uint64_t v221 = v193;
  uint64_t v222 = v195;
  uint64_t v223 = v194;
  uint64_t v224 = v199;
  uint64_t v225 = v184;
  uint64_t v226 = v185;
  uint64_t v227 = v182;
  uint64_t v228 = v200;
  uint64_t v229 = v191;
  uint64_t v230 = v186;
  sub_24EE55B30();
  sub_24EE56440();
  uint64_t v115 = v172;
  sub_24EE56460();
  sub_24EE568D0();
  (*(void (**)(char *, uint64_t))(v183 + 8))(v115, v108);
  (*(void (**)(char *, uint64_t))(v170 + 8))(v106, v104);
  uint64_t v286 = v104;
  uint64_t v287 = v108;
  uint64_t v288 = v107;
  uint64_t v289 = MEMORY[0x263F1A480];
  swift_getOpaqueTypeConformance2();
  sub_24EC90894(v111);
  uint64_t v116 = *(void (**)(char *, uint64_t))(AssociatedTypeWitness + 8);
  v116(v111, v109);
  sub_24EC90894(v114);
  return ((uint64_t (*)(char *, uint64_t))v116)(v114, v109);
}

uint64_t sub_24ED86960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v204 = a8;
  uint64_t v193 = a7;
  uint64_t v192 = a6;
  uint64_t v201 = a4;
  uint64_t v198 = a2;
  uint64_t v182 = a1;
  uint64_t v183 = a9;
  uint64_t v180 = a27;
  uint64_t v179 = a26;
  uint64_t v200 = a15;
  uint64_t v199 = a14;
  uint64_t v197 = a13;
  uint64_t v196 = a12;
  uint64_t v191 = a23;
  uint64_t v207 = a22;
  uint64_t v178 = a28;
  uint64_t v189 = a29;
  uint64_t v190 = a24;
  uint64_t v208 = a25;
  uint64_t v195 = a16;
  uint64_t v205 = a17;
  uint64_t v203 = a10;
  uint64_t v209 = a11;
  uint64_t v194 = a18;
  uint64_t v188 = a19;
  uint64_t v206 = a30;
  uint64_t v32 = sub_24EE562D0();
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v181 = (char *)v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v175 = sub_24EE571B0();
  uint64_t v239 = a5;
  uint64_t v202 = a3;
  uint64_t v240 = a3;
  uint64_t v241 = (uint64_t)a3;
  uint64_t v242 = a21;
  uint64_t v243 = a20;
  uint64_t v244 = a20;
  uint64_t v34 = type metadata accessor for ActionCardView();
  uint64_t v173 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v239 = v34;
  uint64_t v240 = (char *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v171 = (char *)sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v35 = sub_24EE55DD0();
  uint64_t v174 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v326 = a21;
  uint64_t v327 = v174;
  uint64_t v36 = MEMORY[0x263F18E48];
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v324 = v37;
  uint64_t v325 = MEMORY[0x263F198F8];
  uint64_t v184 = v36;
  uint64_t v170 = v35;
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v239 = v35;
  uint64_t v240 = (char *)v169;
  uint64_t v159 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v38 = sub_24EE55DD0();
  uint64_t v162 = v38;
  uint64_t v322 = v37;
  uint64_t v323 = MEMORY[0x263F18860];
  uint64_t v161 = swift_getWitnessTable();
  uint64_t v239 = v38;
  uint64_t v240 = (char *)v161;
  swift_getOpaqueTypeMetadata2();
  uint64_t v160 = sub_24EE56240();
  uint64_t v164 = (char *)sub_24EE56B10();
  uint64_t v163 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v167 = (char *)sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v168 = sub_24EE56240();
  uint64_t v151 = sub_24EE56240();
  uint64_t v239 = a5;
  uint64_t v39 = v202;
  uint64_t v240 = v202;
  uint64_t v241 = (uint64_t)v202;
  uint64_t v242 = v209;
  uint64_t v243 = (uint64_t)v205;
  uint64_t v244 = a21;
  uint64_t v245 = a20;
  uint64_t v246 = (char *)a20;
  uint64_t v247 = v208;
  uint64_t v248 = v189;
  uint64_t v40 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v40;
  uint64_t v165 = (char *)swift_getWitnessTable();
  uint64_t v239 = v40;
  uint64_t v240 = v165;
  swift_getOpaqueTypeMetadata2();
  uint64_t v187 = a20;
  uint64_t v41 = type metadata accessor for InfoActionCardView();
  uint64_t v158 = v41;
  uint64_t v157 = swift_getWitnessTable();
  uint64_t v239 = v41;
  uint64_t v240 = (char *)v157;
  swift_getOpaqueTypeMetadata2();
  uint64_t v156 = sub_24EE56240();
  uint64_t v138 = sub_24EE56240();
  uint64_t v239 = a5;
  uint64_t v240 = v192;
  uint64_t v241 = v193;
  uint64_t v242 = a21;
  uint64_t v243 = v207;
  uint64_t v244 = v191;
  uint64_t v42 = type metadata accessor for LargeBrickView();
  uint64_t v155 = v42;
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v239 = v42;
  uint64_t v240 = (char *)v154;
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for DynamicBrickView();
  uint64_t v153 = v43;
  uint64_t v152 = swift_getWitnessTable();
  uint64_t v239 = v43;
  uint64_t v240 = (char *)v152;
  swift_getOpaqueTypeMetadata2();
  uint64_t v144 = sub_24EE56240();
  uint64_t v44 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v150 = v44;
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v239 = v44;
  uint64_t v240 = (char *)v149;
  swift_getOpaqueTypeMetadata2();
  uint64_t v147 = sub_24EE56240();
  uint64_t v148 = sub_24EE56240();
  v129[0] = sub_24EE56240();
  uint64_t v45 = type metadata accessor for StandardCardView();
  uint64_t v146 = v45;
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v239 = v45;
  uint64_t v240 = (char *)v145;
  swift_getOpaqueTypeMetadata2();
  uint64_t v239 = a5;
  uint64_t v240 = v39;
  uint64_t v241 = a21;
  uint64_t v242 = a20;
  uint64_t v46 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v143 = v46;
  uint64_t v142 = swift_getWitnessTable();
  uint64_t v239 = v46;
  uint64_t v240 = (char *)v142;
  swift_getOpaqueTypeMetadata2();
  v129[3] = sub_24EE56240();
  uint64_t v47 = type metadata accessor for StandardVerticalStackView();
  uint64_t v141 = v47;
  uint64_t v140 = swift_getWitnessTable();
  uint64_t v239 = v47;
  uint64_t v240 = (char *)v140;
  swift_getOpaqueTypeMetadata2();
  uint64_t v48 = type metadata accessor for TallCardView();
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v239 = v48;
  uint64_t v240 = (char *)v139;
  swift_getOpaqueTypeMetadata2();
  uint64_t v137 = sub_24EE56240();
  v129[1] = sub_24EE56240();
  uint64_t v185 = a5;
  uint64_t v186 = a21;
  uint64_t v49 = type metadata accessor for VerticalStackCard();
  uint64_t v135 = swift_getWitnessTable();
  uint64_t v239 = v49;
  uint64_t v240 = (char *)v135;
  swift_getOpaqueTypeMetadata2();
  v129[2] = sub_24EE56240();
  uint64_t v50 = type metadata accessor for WideBrickView();
  uint64_t v130 = swift_getWitnessTable();
  uint64_t v239 = v50;
  uint64_t v240 = (char *)v130;
  swift_getOpaqueTypeMetadata2();
  v129[4] = sub_24EE56240();
  v129[5] = sub_24EE56240();
  uint64_t v131 = sub_24EE56240();
  uint64_t v132 = sub_24EE56B10();
  uint64_t v133 = sub_24EE55DD0();
  uint64_t v134 = sub_24EE56240();
  uint64_t v136 = sub_24EE55DD0();
  uint64_t v171 = (char *)sub_24EE55DD0();
  uint64_t v239 = v173;
  uint64_t v240 = (char *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v170;
  uint64_t v240 = (char *)v169;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v162;
  uint64_t v240 = (char *)v161;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v320 = v52;
  uint64_t v321 = v53;
  uint64_t v319 = swift_getWitnessTable();
  uint64_t v173 = MEMORY[0x263F1B488];
  uint64_t v317 = swift_getWitnessTable();
  uint64_t v318 = MEMORY[0x263F18C10];
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v315 = v54;
  uint64_t v316 = v55;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v313 = v56;
  uint64_t v314 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v311 = OpaqueTypeConformance2;
  uint64_t v312 = v58;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v239 = OpaqueTypeMetadata2;
  uint64_t v240 = v165;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v158;
  uint64_t v240 = (char *)v157;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v309 = v60;
  uint64_t v310 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v307 = v59;
  uint64_t v308 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v239 = v155;
  uint64_t v240 = (char *)v154;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v153;
  uint64_t v240 = (char *)v152;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  uint64_t v305 = v64;
  uint64_t v306 = v65;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v239 = v150;
  uint64_t v240 = (char *)v149;
  uint64_t v303 = swift_getOpaqueTypeConformance2();
  uint64_t v304 = v65;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v301 = v66;
  uint64_t v302 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v299 = v63;
  uint64_t v300 = v68;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v239 = v146;
  uint64_t v240 = (char *)v145;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v143;
  uint64_t v240 = (char *)v142;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v297 = v70;
  uint64_t v298 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v239 = v141;
  uint64_t v240 = (char *)v140;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v239 = v48;
  uint64_t v240 = (char *)v139;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v295 = v73;
  uint64_t v296 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v293 = v72;
  uint64_t v294 = v75;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v239 = v49;
  uint64_t v240 = (char *)v135;
  uint64_t v291 = swift_getOpaqueTypeConformance2();
  uint64_t v292 = v208;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v239 = v50;
  uint64_t v240 = (char *)v130;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  uint64_t v289 = v77;
  uint64_t v290 = v78;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v287 = v76;
  uint64_t v288 = v79;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v285 = v69;
  uint64_t v286 = v80;
  uint64_t v284 = swift_getWitnessTable();
  uint64_t v282 = swift_getWitnessTable();
  uint64_t v283 = v174;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v280 = MEMORY[0x263F1BA00];
  uint64_t v281 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v83 = MEMORY[0x263F1A240];
  uint64_t v278 = v82;
  uint64_t v279 = MEMORY[0x263F1A240];
  uint64_t v276 = swift_getWitnessTable();
  uint64_t v277 = v83;
  uint64_t v84 = v171;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v239 = (uint64_t)v84;
  uint64_t v86 = v84;
  uint64_t v240 = (char *)v85;
  swift_getOpaqueTypeMetadata2();
  uint64_t v87 = sub_24EE55DD0();
  uint64_t v239 = (uint64_t)v86;
  uint64_t v240 = (char *)v85;
  uint64_t v274 = swift_getOpaqueTypeConformance2();
  uint64_t v275 = MEMORY[0x263F190E0];
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v239 = v87;
  uint64_t v240 = (char *)v88;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v89 = v188;
  uint64_t v90 = v204;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v239 = v90;
  uint64_t v240 = v203;
  uint64_t v241 = AssociatedConformanceWitness;
  uint64_t v242 = v190;
  type metadata accessor for CanvasContextMenu();
  uint64_t v92 = sub_24EE55DD0();
  uint64_t v239 = v87;
  uint64_t v240 = (char *)v88;
  uint64_t v272 = swift_getOpaqueTypeConformance2();
  uint64_t v273 = v88;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v270 = v93;
  uint64_t v271 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v239 = v92;
  uint64_t v96 = v205;
  uint64_t v240 = v205;
  uint64_t v241 = v95;
  uint64_t v97 = v189;
  uint64_t v242 = v189;
  uint64_t v98 = type metadata accessor for HeightReader();
  uint64_t v99 = v175;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = AssociatedTypeWitness;
  uint64_t v102 = v89;
  uint64_t v103 = swift_getAssociatedConformanceWitness();
  uint64_t v239 = v99;
  uint64_t v240 = (char *)v101;
  uint64_t v241 = v98;
  uint64_t v242 = v100;
  uint64_t v243 = v103;
  uint64_t v173 = sub_24EE56CB0();
  uint64_t v269 = swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v104 = sub_24EE55AF0();
  uint64_t v177 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v171 = (char *)v129 - v105;
  uint64_t v168 = v104;
  uint64_t v106 = sub_24EE55DD0();
  uint64_t v170 = v106;
  uint64_t AssociatedTypeWitness = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v167 = (char *)v129 - v107;
  OpaqueTypeMetadata2 = swift_getWitnessTable();
  uint64_t v267 = OpaqueTypeMetadata2;
  uint64_t v268 = MEMORY[0x263F18860];
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v239 = v106;
  uint64_t v240 = (char *)v169;
  uint64_t v174 = MEMORY[0x263F1AD90];
  uint64_t v175 = swift_getOpaqueTypeMetadata2();
  uint64_t v184 = *(void *)(v175 - 8);
  MEMORY[0x270FA5388](v175);
  uint64_t v164 = (char *)v129 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v109);
  uint64_t v165 = (char *)v129 - v110;
  uint64_t v163 = sub_24EE560A0();
  uint64_t v239 = v198;
  uint64_t v240 = v202;
  uint64_t v241 = v201;
  uint64_t v242 = v185;
  uint64_t v111 = v192;
  uint64_t v243 = (uint64_t)v192;
  uint64_t v112 = v193;
  uint64_t v244 = v193;
  uint64_t v245 = v204;
  uint64_t v246 = v203;
  uint64_t v247 = v209;
  uint64_t v248 = v196;
  uint64_t v249 = v197;
  uint64_t v250 = v199;
  uint64_t v251 = v200;
  uint64_t v252 = v195;
  uint64_t v253 = v96;
  uint64_t v254 = v194;
  uint64_t v255 = v102;
  uint64_t v256 = v187;
  uint64_t v257 = v186;
  uint64_t v258 = v207;
  uint64_t v113 = v191;
  uint64_t v259 = v191;
  uint64_t v114 = v190;
  uint64_t v260 = v190;
  uint64_t v261 = v208;
  uint64_t v115 = v179;
  uint64_t v116 = v180;
  uint64_t v262 = v179;
  uint64_t v263 = v180;
  uint64_t v117 = v178;
  uint64_t v264 = v178;
  uint64_t v265 = v97;
  uint64_t v266 = v206;
  uint64_t v118 = type metadata accessor for OrthogonalView();
  uint64_t v161 = *(void *)(v182 + *(int *)(v118 + 260) + 8);
  uint64_t v162 = v118;
  uint64_t v210 = v198;
  uint64_t v211 = v202;
  uint64_t v212 = v201;
  uint64_t v213 = v185;
  uint64_t v214 = v111;
  uint64_t v215 = v112;
  uint64_t v216 = v204;
  uint64_t v217 = v203;
  uint64_t v218 = v209;
  uint64_t v219 = v196;
  uint64_t v220 = v197;
  uint64_t v221 = v199;
  uint64_t v222 = v200;
  uint64_t v223 = v195;
  uint64_t v224 = v205;
  uint64_t v225 = v194;
  uint64_t v226 = v188;
  uint64_t v227 = v187;
  uint64_t v228 = v186;
  uint64_t v229 = v207;
  uint64_t v230 = v113;
  uint64_t v231 = v114;
  uint64_t v232 = v208;
  uint64_t v233 = v115;
  uint64_t v234 = v116;
  uint64_t v235 = v117;
  uint64_t v236 = v97;
  uint64_t v237 = v206;
  uint64_t v238 = v182;
  sub_24ED1CEC8();
  uint64_t v119 = v171;
  sub_24EE55AE0();
  sub_24ED82588();
  sub_24EE56DA0();
  uint64_t v121 = v167;
  uint64_t v120 = v168;
  sub_24EE56970();
  (*(void (**)(char *, uint64_t))(v177 + 8))(v119, v120);
  uint64_t v122 = v164;
  uint64_t v124 = v169;
  uint64_t v123 = v170;
  sub_24EE56880();
  (*(void (**)(char *, uint64_t))(AssociatedTypeWitness + 8))(v121, v123);
  uint64_t v239 = v123;
  uint64_t v240 = (char *)v124;
  swift_getOpaqueTypeConformance2();
  uint64_t v125 = v165;
  uint64_t v126 = v175;
  sub_24EC90894(v122);
  uint64_t v127 = *(void (**)(char *, uint64_t))(v184 + 8);
  v127(v122, v126);
  sub_24EC90894(v125);
  return ((uint64_t (*)(char *, uint64_t))v127)(v125, v126);
}

uint64_t sub_24ED87F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v202 = a8;
  uint64_t v211 = a7;
  uint64_t v209 = a6;
  uint64_t v197 = a4;
  uint64_t v196 = a2;
  uint64_t v189 = a1;
  uint64_t v201 = a9;
  uint64_t v216 = a29;
  uint64_t v200 = a28;
  uint64_t v199 = a27;
  uint64_t v198 = a26;
  uint64_t v213 = a25;
  uint64_t v212 = a24;
  uint64_t v210 = a23;
  uint64_t v208 = a22;
  uint64_t v195 = a18;
  uint64_t v215 = a17;
  uint64_t v194 = a16;
  uint64_t v193 = a15;
  uint64_t v192 = a14;
  uint64_t v191 = a13;
  uint64_t v190 = a12;
  uint64_t v214 = a11;
  uint64_t v207 = a10;
  uint64_t v276 = a2;
  uint64_t v277 = a3;
  uint64_t v278 = a4;
  uint64_t v279 = a5;
  uint64_t v280 = a6;
  uint64_t v281 = a7;
  uint64_t v282 = a8;
  uint64_t v283 = a10;
  uint64_t v284 = a11;
  uint64_t v285 = a12;
  uint64_t v286 = a13;
  uint64_t v287 = a14;
  uint64_t v288 = a15;
  uint64_t v289 = a16;
  uint64_t v290 = a17;
  uint64_t v291 = a18;
  uint64_t v292 = a19;
  uint64_t v184 = a19;
  uint64_t v293 = a20;
  uint64_t v294 = a21;
  uint64_t v295 = a22;
  uint64_t v296 = a23;
  uint64_t v297 = a24;
  uint64_t v298 = a25;
  uint64_t v299 = a26;
  uint64_t v300 = a27;
  uint64_t v301 = a28;
  uint64_t v302 = a29;
  uint64_t v303 = a30;
  uint64_t v205 = a30;
  uint64_t v204 = type metadata accessor for OrthogonalView();
  uint64_t v187 = *(void *)(v204 - 8);
  uint64_t v188 = *(void *)(v187 + 64);
  MEMORY[0x270FA5388](v204);
  uint64_t v186 = (char *)v132 - v32;
  uint64_t v206 = *(void *)(a30 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v185 = sub_24EE571B0();
  uint64_t v33 = a5;
  uint64_t v276 = a5;
  uint64_t v277 = a3;
  uint64_t v278 = a3;
  uint64_t v279 = a21;
  uint64_t v280 = a20;
  uint64_t v281 = a20;
  uint64_t v34 = type metadata accessor for ActionCardView();
  uint64_t v178 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v276 = v34;
  uint64_t v277 = WitnessTable;
  v132[0] = MEMORY[0x263F1B280];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v175 = sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v35 = sub_24EE55DD0();
  uint64_t v183 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v274 = a21;
  uint64_t v275 = v183;
  uint64_t v36 = MEMORY[0x263F18E48];
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v272 = v37;
  uint64_t v273 = MEMORY[0x263F198F8];
  uint64_t v176 = v36;
  uint64_t v174 = v35;
  uint64_t v173 = swift_getWitnessTable();
  uint64_t v276 = v35;
  uint64_t v277 = v173;
  uint64_t v163 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v38 = sub_24EE55DD0();
  uint64_t v166 = v38;
  uint64_t v270 = v37;
  uint64_t v271 = MEMORY[0x263F18860];
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v276 = v38;
  uint64_t v277 = v165;
  swift_getOpaqueTypeMetadata2();
  uint64_t v164 = sub_24EE56240();
  uint64_t v168 = sub_24EE56B10();
  uint64_t v167 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v171 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v172 = sub_24EE56240();
  uint64_t v155 = sub_24EE56240();
  uint64_t v276 = v33;
  uint64_t v277 = a3;
  uint64_t v278 = a3;
  uint64_t v279 = v214;
  uint64_t v280 = v215;
  uint64_t v281 = a21;
  uint64_t v282 = a20;
  uint64_t v283 = a20;
  uint64_t v284 = v213;
  uint64_t v285 = v216;
  uint64_t v39 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v39;
  uint64_t v169 = swift_getWitnessTable();
  uint64_t v276 = v39;
  uint64_t v277 = v169;
  swift_getOpaqueTypeMetadata2();
  uint64_t v40 = a3;
  uint64_t v181 = a3;
  uint64_t v182 = a20;
  uint64_t v41 = type metadata accessor for InfoActionCardView();
  uint64_t v162 = v41;
  uint64_t v161 = swift_getWitnessTable();
  uint64_t v276 = v41;
  uint64_t v277 = v161;
  swift_getOpaqueTypeMetadata2();
  uint64_t v160 = sub_24EE56240();
  uint64_t v141 = sub_24EE56240();
  uint64_t v276 = v33;
  uint64_t v277 = v209;
  uint64_t v278 = v211;
  uint64_t v279 = a21;
  uint64_t v280 = v208;
  uint64_t v281 = v210;
  uint64_t v42 = type metadata accessor for LargeBrickView();
  uint64_t v159 = v42;
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v276 = v42;
  uint64_t v277 = v158;
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for DynamicBrickView();
  uint64_t v157 = v43;
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v276 = v43;
  uint64_t v277 = v156;
  swift_getOpaqueTypeMetadata2();
  uint64_t v148 = sub_24EE56240();
  uint64_t v44 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v154 = v44;
  uint64_t v153 = swift_getWitnessTable();
  uint64_t v276 = v44;
  uint64_t v277 = v153;
  swift_getOpaqueTypeMetadata2();
  uint64_t v151 = sub_24EE56240();
  uint64_t v152 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v45 = type metadata accessor for StandardCardView();
  uint64_t v150 = v45;
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v276 = v45;
  uint64_t v277 = v149;
  swift_getOpaqueTypeMetadata2();
  uint64_t v276 = v33;
  uint64_t v277 = v40;
  uint64_t v278 = a21;
  uint64_t v279 = a20;
  uint64_t v46 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v147 = v46;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v276 = v46;
  uint64_t v277 = v146;
  swift_getOpaqueTypeMetadata2();
  v132[3] = sub_24EE56240();
  uint64_t v47 = type metadata accessor for StandardVerticalStackView();
  uint64_t v145 = v47;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v276 = v47;
  uint64_t v277 = v144;
  swift_getOpaqueTypeMetadata2();
  uint64_t v48 = type metadata accessor for TallCardView();
  uint64_t v143 = v48;
  uint64_t v142 = swift_getWitnessTable();
  uint64_t v276 = v48;
  uint64_t v277 = v142;
  swift_getOpaqueTypeMetadata2();
  uint64_t v140 = sub_24EE56240();
  v132[1] = sub_24EE56240();
  uint64_t v179 = v33;
  uint64_t v180 = a21;
  uint64_t v49 = type metadata accessor for VerticalStackCard();
  uint64_t v138 = swift_getWitnessTable();
  uint64_t v276 = v49;
  uint64_t v277 = v138;
  swift_getOpaqueTypeMetadata2();
  v132[2] = sub_24EE56240();
  uint64_t v50 = type metadata accessor for WideBrickView();
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v276 = v50;
  uint64_t v277 = v133;
  swift_getOpaqueTypeMetadata2();
  v132[4] = sub_24EE56240();
  v132[5] = sub_24EE56240();
  uint64_t v134 = sub_24EE56240();
  uint64_t v135 = sub_24EE56B10();
  uint64_t v136 = sub_24EE55DD0();
  uint64_t v137 = sub_24EE56240();
  uint64_t v139 = sub_24EE55DD0();
  uint64_t v175 = sub_24EE55DD0();
  uint64_t v276 = v178;
  uint64_t v277 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v174;
  uint64_t v277 = v173;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v166;
  uint64_t v277 = v165;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v268 = v52;
  uint64_t v269 = v53;
  uint64_t v267 = swift_getWitnessTable();
  uint64_t v178 = MEMORY[0x263F1B488];
  uint64_t v265 = swift_getWitnessTable();
  uint64_t v266 = MEMORY[0x263F18C10];
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v263 = v54;
  uint64_t v264 = v55;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v261 = v56;
  uint64_t v262 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v259 = OpaqueTypeConformance2;
  uint64_t v260 = v58;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v276 = OpaqueTypeMetadata2;
  uint64_t v277 = v169;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v162;
  uint64_t v277 = v161;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v257 = v60;
  uint64_t v258 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v255 = v59;
  uint64_t v256 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v276 = v159;
  uint64_t v277 = v158;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v157;
  uint64_t v277 = v156;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  uint64_t v253 = v64;
  uint64_t v254 = v65;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v276 = v154;
  uint64_t v277 = v153;
  uint64_t v251 = swift_getOpaqueTypeConformance2();
  uint64_t v252 = v65;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v249 = v66;
  uint64_t v250 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v247 = v63;
  uint64_t v248 = v68;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v276 = v150;
  uint64_t v277 = v149;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v147;
  uint64_t v277 = v146;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v245 = v70;
  uint64_t v246 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v276 = v145;
  uint64_t v277 = v144;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v276 = v143;
  uint64_t v277 = v142;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v243 = v73;
  uint64_t v244 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v241 = v72;
  uint64_t v242 = v75;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v276 = v49;
  uint64_t v277 = v138;
  uint64_t v239 = swift_getOpaqueTypeConformance2();
  uint64_t v240 = v213;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v276 = v50;
  uint64_t v277 = v133;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  uint64_t v237 = v77;
  uint64_t v238 = v78;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v235 = v76;
  uint64_t v236 = v79;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v233 = v69;
  uint64_t v234 = v80;
  uint64_t v232 = swift_getWitnessTable();
  uint64_t v230 = swift_getWitnessTable();
  uint64_t v231 = v183;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v228 = MEMORY[0x263F1BA00];
  uint64_t v229 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v83 = MEMORY[0x263F1A240];
  uint64_t v226 = v82;
  uint64_t v227 = MEMORY[0x263F1A240];
  uint64_t v224 = swift_getWitnessTable();
  uint64_t v225 = v83;
  uint64_t v84 = v175;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v276 = v84;
  uint64_t v86 = v84;
  uint64_t v277 = v85;
  swift_getOpaqueTypeMetadata2();
  uint64_t v87 = sub_24EE55DD0();
  uint64_t v276 = v86;
  uint64_t v277 = v85;
  uint64_t v222 = swift_getOpaqueTypeConformance2();
  uint64_t v223 = MEMORY[0x263F190E0];
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v276 = v87;
  uint64_t v277 = v88;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v89 = v184;
  uint64_t v90 = v202;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v276 = v90;
  uint64_t v277 = v207;
  uint64_t v278 = AssociatedConformanceWitness;
  uint64_t v279 = v212;
  type metadata accessor for CanvasContextMenu();
  uint64_t v92 = sub_24EE55DD0();
  uint64_t v276 = v87;
  uint64_t v277 = v88;
  uint64_t v220 = swift_getOpaqueTypeConformance2();
  uint64_t v221 = v88;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v218 = v93;
  uint64_t v219 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v276 = v92;
  uint64_t v277 = v215;
  uint64_t v278 = v95;
  uint64_t v279 = v216;
  uint64_t v96 = type metadata accessor for HeightReader();
  uint64_t v183 = v96;
  uint64_t v97 = v185;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v99 = v89;
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v101 = swift_getAssociatedConformanceWitness();
  uint64_t v276 = v97;
  uint64_t v277 = v100;
  uint64_t v278 = v96;
  uint64_t v279 = v98;
  uint64_t v280 = v101;
  uint64_t v102 = sub_24EE56CB0();
  uint64_t v185 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v104 = (char *)v132 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v106 = MEMORY[0x270FA5388](v105);
  uint64_t v108 = (char *)v132 - v107;
  uint64_t v178 = *(void *)(v189 + *(int *)(v204 + 244));
  uint64_t v109 = v186;
  uint64_t v110 = v187;
  (*(void (**)(char *, __n128))(v187 + 16))(v186, v106);
  unint64_t v111 = (*(unsigned __int8 *)(v110 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v112 = (char *)swift_allocObject();
  uint64_t v113 = v181;
  *((void *)v112 + 2) = v196;
  *((void *)v112 + 3) = v113;
  uint64_t v114 = v179;
  *((void *)v112 + 4) = v197;
  *((void *)v112 + 5) = v114;
  uint64_t v115 = v211;
  *((void *)v112 + 6) = v209;
  *((void *)v112 + 7) = v115;
  uint64_t v116 = v207;
  *((void *)v112 + 8) = v202;
  *((void *)v112 + 9) = v116;
  uint64_t v117 = v190;
  *((void *)v112 + 10) = v214;
  *((void *)v112 + 11) = v117;
  uint64_t v118 = v192;
  *((void *)v112 + 12) = v191;
  *((void *)v112 + 13) = v118;
  uint64_t v119 = v194;
  *((void *)v112 + 14) = v193;
  *((void *)v112 + 15) = v119;
  uint64_t v120 = v195;
  *((void *)v112 + 16) = v215;
  *((void *)v112 + 17) = v120;
  uint64_t v121 = v182;
  *((void *)v112 + 18) = v99;
  *((void *)v112 + 19) = v121;
  uint64_t v122 = v208;
  *((void *)v112 + 20) = v180;
  *((void *)v112 + 21) = v122;
  uint64_t v123 = v212;
  *((void *)v112 + 22) = v210;
  *((void *)v112 + 23) = v123;
  uint64_t v124 = v198;
  *((void *)v112 + 24) = v213;
  *((void *)v112 + 25) = v124;
  uint64_t v125 = v200;
  *((void *)v112 + 26) = v199;
  *((void *)v112 + 27) = v125;
  uint64_t v126 = v205;
  *((void *)v112 + 28) = v216;
  *((void *)v112 + 29) = v126;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v112[v111], v109, v204);
  uint64_t v127 = v178;
  swift_bridgeObjectRetain();
  uint64_t v128 = v183;
  uint64_t v129 = swift_getWitnessTable();
  sub_24ED6CF10(v127, (uint64_t)sub_24ED95B24, (uint64_t)v112, AssociatedTypeWitness, v128, v99, v129, *(void *)(v126 + 24), v206);
  uint64_t v217 = v129;
  swift_getWitnessTable();
  sub_24EC90894(v104);
  uint64_t v130 = *(void (**)(char *, uint64_t))(v185 + 8);
  v130(v104, v102);
  sub_24EC90894(v108);
  return ((uint64_t (*)(char *, uint64_t))v130)(v108, v102);
}

uint64_t sub_24ED893A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v223 = a8;
  uint64_t v201 = a6;
  uint64_t v200 = a4;
  uint64_t v192 = a3;
  uint64_t v193 = a2;
  uint64_t v205 = a1;
  uint64_t v206 = a9;
  uint64_t v226 = a31;
  uint64_t v204 = a30;
  uint64_t v203 = a29;
  uint64_t v202 = a28;
  uint64_t v224 = a27;
  uint64_t v220 = a26;
  uint64_t v222 = a25;
  uint64_t v221 = a24;
  uint64_t v199 = a20;
  uint64_t v198 = a18;
  uint64_t v197 = a17;
  uint64_t v196 = a16;
  uint64_t v195 = a15;
  uint64_t v194 = a14;
  uint64_t v225 = a13;
  uint64_t v218 = a12;
  uint64_t v211 = a11;
  uint64_t v219 = a10;
  uint64_t v285 = a4;
  uint64_t v286 = a5;
  uint64_t v287 = a6;
  uint64_t v288 = a7;
  uint64_t v289 = a8;
  uint64_t v290 = a10;
  uint64_t v291 = a11;
  uint64_t v292 = a12;
  uint64_t v293 = a13;
  uint64_t v294 = a14;
  uint64_t v295 = a15;
  uint64_t v296 = a16;
  uint64_t v297 = a17;
  uint64_t v298 = a18;
  uint64_t v299 = a19;
  uint64_t v300 = a20;
  uint64_t v213 = a21;
  uint64_t v301 = a21;
  uint64_t v302 = a22;
  uint64_t v303 = a23;
  uint64_t v304 = a24;
  uint64_t v305 = a25;
  uint64_t v306 = a26;
  uint64_t v307 = a27;
  uint64_t v308 = a28;
  uint64_t v309 = a29;
  uint64_t v310 = a30;
  uint64_t v210 = a32;
  uint64_t v311 = a31;
  uint64_t v312 = a32;
  uint64_t v212 = type metadata accessor for OrthogonalView();
  uint64_t v190 = *(void *)(v212 - 8);
  uint64_t v191 = *(void *)(v190 + 64);
  MEMORY[0x270FA5388](v212);
  uint64_t v215 = (char *)v139 - v34;
  uint64_t v214 = *(void *)(a21 - 8);
  uint64_t v189 = *(void *)(v214 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v216 = (char *)v139 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = a19;
  uint64_t v188 = *(void *)(a19 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v217 = (uint64_t)v139 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = a7;
  uint64_t v285 = a7;
  uint64_t v208 = a5;
  uint64_t v286 = a5;
  uint64_t v287 = a5;
  uint64_t v288 = a23;
  uint64_t v289 = a22;
  uint64_t v290 = a22;
  uint64_t v39 = type metadata accessor for ActionCardView();
  uint64_t v184 = v39;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v285 = v39;
  uint64_t v286 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v181 = (uint64_t *)sub_24EE56430();
  sub_24EE55DD0();
  uint64_t v40 = sub_24EE55DD0();
  uint64_t v187 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v283 = a23;
  uint64_t v284 = v187;
  uint64_t v41 = (char *)MEMORY[0x263F18E48];
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v281 = v42;
  uint64_t v282 = MEMORY[0x263F198F8];
  uint64_t v182 = v41;
  uint64_t v180 = v40;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v285 = v40;
  uint64_t v286 = v179;
  uint64_t v169 = MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v43 = sub_24EE55DD0();
  uint64_t v172 = v43;
  uint64_t v279 = v42;
  uint64_t v280 = MEMORY[0x263F18860];
  uint64_t v171 = swift_getWitnessTable();
  uint64_t v285 = v43;
  uint64_t v286 = v171;
  swift_getOpaqueTypeMetadata2();
  uint64_t v170 = sub_24EE56240();
  uint64_t v174 = sub_24EE56B10();
  uint64_t v173 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v177 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v178 = sub_24EE56240();
  uint64_t v161 = sub_24EE56240();
  uint64_t v44 = v207;
  uint64_t v285 = v207;
  uint64_t v45 = v208;
  uint64_t v286 = v208;
  uint64_t v287 = v208;
  uint64_t v288 = v225;
  uint64_t v289 = a19;
  uint64_t v290 = a23;
  uint64_t v291 = a22;
  uint64_t v292 = a22;
  uint64_t v293 = v224;
  uint64_t v294 = v226;
  uint64_t v46 = type metadata accessor for FullWidthStageView();
  OpaqueTypeMetadata2 = v46;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v285 = v46;
  uint64_t v286 = v175;
  swift_getOpaqueTypeMetadata2();
  uint64_t v186 = a22;
  uint64_t v47 = type metadata accessor for InfoActionCardView();
  uint64_t v168 = v47;
  uint64_t v167 = swift_getWitnessTable();
  uint64_t v285 = v47;
  uint64_t v286 = v167;
  swift_getOpaqueTypeMetadata2();
  uint64_t v166 = sub_24EE56240();
  uint64_t v148 = sub_24EE56240();
  uint64_t v285 = v44;
  uint64_t v286 = v223;
  uint64_t v287 = v219;
  uint64_t v288 = a23;
  uint64_t v289 = v221;
  uint64_t v290 = v222;
  uint64_t v48 = type metadata accessor for LargeBrickView();
  uint64_t v165 = v48;
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v285 = v48;
  uint64_t v286 = v164;
  swift_getOpaqueTypeMetadata2();
  uint64_t v49 = type metadata accessor for DynamicBrickView();
  uint64_t v163 = v49;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v285 = v49;
  uint64_t v286 = v162;
  swift_getOpaqueTypeMetadata2();
  uint64_t v154 = sub_24EE56240();
  uint64_t v50 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v160 = v50;
  uint64_t v159 = swift_getWitnessTable();
  uint64_t v285 = v50;
  uint64_t v286 = v159;
  swift_getOpaqueTypeMetadata2();
  uint64_t v157 = sub_24EE56240();
  uint64_t v158 = sub_24EE56240();
  v139[0] = sub_24EE56240();
  uint64_t v51 = type metadata accessor for StandardCardView();
  uint64_t v156 = v51;
  uint64_t v155 = swift_getWitnessTable();
  uint64_t v285 = v51;
  uint64_t v286 = v155;
  swift_getOpaqueTypeMetadata2();
  uint64_t v285 = v44;
  uint64_t v286 = v45;
  uint64_t v287 = a23;
  uint64_t v288 = a22;
  uint64_t v52 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v153 = v52;
  uint64_t v152 = swift_getWitnessTable();
  uint64_t v285 = v52;
  uint64_t v286 = v152;
  swift_getOpaqueTypeMetadata2();
  v139[3] = sub_24EE56240();
  uint64_t v53 = type metadata accessor for StandardVerticalStackView();
  uint64_t v151 = v53;
  uint64_t v150 = swift_getWitnessTable();
  uint64_t v285 = v53;
  uint64_t v286 = v150;
  swift_getOpaqueTypeMetadata2();
  uint64_t v54 = type metadata accessor for TallCardView();
  uint64_t v149 = swift_getWitnessTable();
  uint64_t v285 = v54;
  uint64_t v286 = v149;
  swift_getOpaqueTypeMetadata2();
  uint64_t v147 = sub_24EE56240();
  v139[1] = sub_24EE56240();
  uint64_t v185 = a23;
  uint64_t v55 = type metadata accessor for VerticalStackCard();
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v285 = v55;
  uint64_t v286 = v145;
  swift_getOpaqueTypeMetadata2();
  v139[2] = sub_24EE56240();
  uint64_t v56 = type metadata accessor for WideBrickView();
  uint64_t v140 = swift_getWitnessTable();
  uint64_t v285 = v56;
  uint64_t v286 = v140;
  swift_getOpaqueTypeMetadata2();
  v139[4] = sub_24EE56240();
  v139[5] = sub_24EE56240();
  uint64_t v141 = sub_24EE56240();
  uint64_t v142 = sub_24EE56B10();
  uint64_t v143 = sub_24EE55DD0();
  uint64_t v144 = sub_24EE56240();
  uint64_t v146 = sub_24EE55DD0();
  uint64_t v181 = (uint64_t *)sub_24EE55DD0();
  uint64_t v285 = v184;
  uint64_t v286 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v180;
  uint64_t v286 = v179;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v172;
  uint64_t v286 = v171;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v277 = v58;
  uint64_t v278 = v59;
  uint64_t v276 = swift_getWitnessTable();
  uint64_t v184 = MEMORY[0x263F1B488];
  uint64_t v274 = swift_getWitnessTable();
  uint64_t v275 = MEMORY[0x263F18C10];
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v272 = v60;
  uint64_t v273 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v270 = v62;
  uint64_t v271 = v63;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v268 = OpaqueTypeConformance2;
  uint64_t v269 = v64;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v285 = OpaqueTypeMetadata2;
  uint64_t v286 = v175;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v168;
  uint64_t v286 = v167;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v266 = v66;
  uint64_t v267 = v67;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v264 = v65;
  uint64_t v265 = v68;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v285 = v165;
  uint64_t v286 = v164;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v163;
  uint64_t v286 = v162;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v262 = v70;
  uint64_t v263 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v285 = v160;
  uint64_t v286 = v159;
  uint64_t v260 = swift_getOpaqueTypeConformance2();
  uint64_t v261 = v71;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v258 = v72;
  uint64_t v259 = v73;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v256 = v69;
  uint64_t v257 = v74;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v285 = v156;
  uint64_t v286 = v155;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v153;
  uint64_t v286 = v152;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v254 = v76;
  uint64_t v255 = v77;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v285 = v151;
  uint64_t v286 = v150;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v285 = v54;
  uint64_t v286 = v149;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v252 = v79;
  uint64_t v253 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v250 = v78;
  uint64_t v251 = v81;
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v285 = v55;
  uint64_t v286 = v145;
  uint64_t v248 = swift_getOpaqueTypeConformance2();
  uint64_t v249 = v224;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v285 = v56;
  uint64_t v286 = v140;
  uint64_t v84 = swift_getOpaqueTypeConformance2();
  uint64_t v246 = v83;
  uint64_t v247 = v84;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v244 = v82;
  uint64_t v245 = v85;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v242 = v75;
  uint64_t v243 = v86;
  uint64_t v241 = swift_getWitnessTable();
  uint64_t v239 = swift_getWitnessTable();
  uint64_t v240 = v187;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v237 = MEMORY[0x263F1BA00];
  uint64_t v238 = v87;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = MEMORY[0x263F1A240];
  uint64_t v235 = v88;
  uint64_t v236 = MEMORY[0x263F1A240];
  uint64_t v233 = swift_getWitnessTable();
  uint64_t v234 = v89;
  uint64_t v90 = v181;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v285 = (uint64_t)v90;
  uint64_t v286 = v91;
  swift_getOpaqueTypeMetadata2();
  uint64_t v92 = sub_24EE55DD0();
  uint64_t v285 = (uint64_t)v90;
  uint64_t v286 = v91;
  uint64_t v231 = swift_getOpaqueTypeConformance2();
  uint64_t v232 = MEMORY[0x263F190E0];
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v285 = v92;
  uint64_t v286 = v93;
  swift_getOpaqueTypeMetadata2();
  sub_24EE56240();
  uint64_t v94 = v210;
  uint64_t v95 = v211;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v285 = v95;
  uint64_t v286 = v218;
  uint64_t v287 = AssociatedConformanceWitness;
  uint64_t v288 = v220;
  type metadata accessor for CanvasContextMenu();
  uint64_t v97 = sub_24EE55DD0();
  uint64_t v285 = v92;
  uint64_t v286 = v93;
  uint64_t v229 = swift_getOpaqueTypeConformance2();
  uint64_t v230 = v93;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v227 = v98;
  uint64_t v228 = v99;
  uint64_t v184 = v97;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v285 = v97;
  uint64_t v100 = v209;
  uint64_t v286 = v209;
  uint64_t v287 = WitnessTable;
  uint64_t v288 = v226;
  uint64_t v101 = type metadata accessor for HeightReader();
  uint64_t v187 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v181 = (void *)((char *)v139 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v103);
  uint64_t v182 = (char *)v139 - v104;
  uint64_t v105 = v212;
  uint64_t v106 = v192;
  uint64_t v107 = sub_24ED825EC();
  uint64_t v179 = v108;
  uint64_t v180 = v107;
  uint64_t v178 = v109;
  LODWORD(v177) = v110 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 16))(v217, v106 + *(int *)(v105 + 268), v100);
  uint64_t v111 = v193;
  uint64_t v112 = v213;
  uint64_t v113 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v94 + 184))(v213, v94) + 16);
  swift_bridgeObjectRelease();
  LODWORD(v188) = v113 == 0;
  uint64_t v114 = v214;
  (*(void (**)(char *, uint64_t, uint64_t))(v214 + 16))(v216, v111, v112);
  uint64_t v115 = v190;
  (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v215, v106, v105);
  unint64_t v116 = (*(unsigned __int8 *)(v114 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
  unint64_t v117 = (v189 + *(unsigned __int8 *)(v115 + 80) + v116) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  unint64_t v118 = (v191 + v117 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v119 = (char *)swift_allocObject();
  uint64_t v120 = v208;
  *((void *)v119 + 2) = v200;
  *((void *)v119 + 3) = v120;
  uint64_t v121 = v207;
  *((void *)v119 + 4) = v201;
  *((void *)v119 + 5) = v121;
  uint64_t v122 = v219;
  *((void *)v119 + 6) = v223;
  *((void *)v119 + 7) = v122;
  uint64_t v123 = v218;
  *((void *)v119 + 8) = v211;
  *((void *)v119 + 9) = v123;
  uint64_t v124 = v194;
  *((void *)v119 + 10) = v225;
  *((void *)v119 + 11) = v124;
  uint64_t v125 = v196;
  *((void *)v119 + 12) = v195;
  *((void *)v119 + 13) = v125;
  uint64_t v126 = v198;
  *((void *)v119 + 14) = v197;
  *((void *)v119 + 15) = v126;
  uint64_t v127 = v209;
  uint64_t v128 = v199;
  *((void *)v119 + 16) = v209;
  *((void *)v119 + 17) = v128;
  uint64_t v129 = v186;
  *((void *)v119 + 18) = v112;
  *((void *)v119 + 19) = v129;
  uint64_t v130 = v221;
  *((void *)v119 + 20) = v185;
  *((void *)v119 + 21) = v130;
  uint64_t v131 = v220;
  *((void *)v119 + 22) = v222;
  *((void *)v119 + 23) = v131;
  uint64_t v132 = v202;
  *((void *)v119 + 24) = v224;
  *((void *)v119 + 25) = v132;
  uint64_t v133 = v204;
  *((void *)v119 + 26) = v203;
  *((void *)v119 + 27) = v133;
  uint64_t v134 = v210;
  *((void *)v119 + 28) = v226;
  *((void *)v119 + 29) = v134;
  (*(void (**)(char *, char *, uint64_t))(v214 + 32))(&v119[v116], v216, v112);
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v119[v117], v215, v212);
  *(void *)&v119[v118] = v205;
  uint64_t v135 = v181;
  sub_24ED0555C(v180, v179, v178, v177, v217, v188, (uint64_t)sub_24ED96590, (uint64_t)v119, v181, v184, v127);
  swift_getWitnessTable();
  uint64_t v136 = v182;
  sub_24EC90894(v135);
  uint64_t v137 = *(void (**)(uint64_t *, uint64_t))(v187 + 8);
  v137(v135, v101);
  sub_24EC90894(v136);
  return ((uint64_t (*)(char *, uint64_t))v137)(v136, v101);
}

uint64_t sub_24ED8A8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  unint64_t v422 = a8;
  uint64_t v410 = a7;
  uint64_t v417 = a6;
  unint64_t v423 = a5;
  uint64_t v404 = a4;
  uint64_t v396 = a3;
  uint64_t v414 = a2;
  uint64_t v385 = a1;
  uint64_t v356 = a9;
  uint64_t v412 = a30;
  uint64_t v401 = a29;
  uint64_t v408 = a28;
  uint64_t v407 = a27;
  uint64_t v400 = a16;
  uint64_t v399 = a15;
  uint64_t v402 = a14;
  uint64_t v406 = a13;
  uint64_t v403 = a17;
  uint64_t v411 = a18;
  uint64_t v421 = a23;
  uint64_t v420 = a24;
  uint64_t v409 = a22;
  uint64_t v419 = a21;
  uint64_t v424 = a26;
  uint64_t v405 = a25;
  uint64_t v418 = a12;
  uint64_t v415 = a31;
  uint64_t v398 = (char *)a20;
  uint64_t v416 = a10;
  long long v413 = a11;
  uint64_t v31 = sub_24EE57430();
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v353 = (char *)v303 - v32;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v484 = a11;
  *(void *)&long long v485 = AssociatedConformanceWitness;
  *((void *)&v485 + 1) = a25;
  uint64_t v381 = type metadata accessor for CanvasContextMenu();
  uint64_t v355 = *(void *)(v381 - 8);
  MEMORY[0x270FA5388](v381);
  uint64_t v352 = (uint64_t)v303 - v33;
  uint64_t v347 = sub_24EE57430();
  uint64_t v34 = sub_24EE559E0();
  uint64_t v350 = *(void *)(v34 - 8);
  uint64_t v351 = v34;
  MEMORY[0x270FA5388](v34);
  uint64_t v371 = (uint64_t)v303 - v35;
  uint64_t v395 = a19;
  uint64_t v36 = v418;
  uint64_t v37 = sub_24EE559E0();
  uint64_t v348 = *(void *)(v37 - 8);
  uint64_t v349 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v378 = (uint64_t)v303 - v38;
  uint64_t v39 = v417;
  uint64_t v40 = v416;
  uint64_t v41 = v420;
  uint64_t v380 = sub_24EE559E0();
  uint64_t v379 = *(void *)(v380 - 8);
  MEMORY[0x270FA5388](v380);
  uint64_t v374 = (uint64_t)v303 - v42;
  uint64_t v43 = v422;
  uint64_t v44 = v421;
  uint64_t v377 = sub_24EE559E0();
  uint64_t v376 = *(void *)(v377 - 8);
  MEMORY[0x270FA5388](v377);
  uint64_t v370 = (uint64_t)v303 - v45;
  uint64_t v46 = v410;
  uint64_t v47 = v409;
  uint64_t v375 = sub_24EE559E0();
  uint64_t v373 = *(void *)(v375 - 8);
  MEMORY[0x270FA5388](v375);
  uint64_t v369 = (uint64_t)v303 - v48;
  uint64_t v372 = *(void *)(v411 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v368 = (uint64_t)v303 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v383 = *((void *)v398 - 1);
  uint64_t v387 = *(void (**)(char *, char *, int *))(v383 + 64);
  MEMORY[0x270FA5388](v51);
  size_t v382 = (char *)v303 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v484 = v404;
  *((void *)&v484 + 1) = v423;
  *(void *)&long long v485 = v39;
  *((void *)&v485 + 1) = v46;
  uint64_t v486 = v43;
  uint64_t v487 = v40;
  long long v488 = v413;
  uint64_t v489 = v36;
  uint64_t v490 = v406;
  uint64_t v491 = v402;
  uint64_t v492 = v399;
  uint64_t v493 = v400;
  uint64_t v494 = v403;
  uint64_t v495 = v53;
  uint64_t v496 = a19;
  uint64_t v497 = v54;
  uint64_t v55 = v419;
  uint64_t v498 = v419;
  uint64_t v499 = v47;
  uint64_t v500 = v44;
  uint64_t v501 = v41;
  uint64_t v502 = v405;
  uint64_t v503 = v424;
  uint64_t v504 = v407;
  uint64_t v505 = v408;
  uint64_t v506 = v401;
  uint64_t v507 = v412;
  uint64_t v508 = v415;
  uint64_t v393 = type metadata accessor for OrthogonalView();
  uint64_t v397 = *(void *)(v393 - 8);
  uint64_t v389 = *(void *)(v397 + 64);
  MEMORY[0x270FA5388](v393);
  uint64_t v384 = (char *)v303 - v56;
  uint64_t v392 = sub_24EE55940();
  uint64_t v394 = *(void *)(v392 - 8);
  MEMORY[0x270FA5388](v392);
  int v391 = (char *)v303 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v345 = *(void *)(v58 - 8);
  uint64_t v346 = v58;
  MEMORY[0x270FA5388](v58);
  uint64_t v367 = (uint64_t)v303 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v484 = v46;
  *((void *)&v484 + 1) = v423;
  *(void *)&long long v485 = v423;
  *((void *)&v485 + 1) = v47;
  uint64_t v486 = v55;
  uint64_t v487 = v55;
  uint64_t v60 = type metadata accessor for ActionCardView();
  uint64_t v388 = v60;
  uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))swift_getWitnessTable();
  *(void *)&long long v484 = v60;
  *((void *)&v484 + 1) = WitnessTable;
  swift_getOpaqueTypeMetadata2();
  unint64_t v366 = (char *)sub_24EE56430();
  uint64_t v61 = v46;
  sub_24EE55DD0();
  uint64_t v62 = sub_24EE55DD0();
  uint64_t v390 = sub_24ED24750((unint64_t *)&qword_26B1DE410, MEMORY[0x263F1A470]);
  uint64_t v482 = v47;
  uint64_t v483 = v390;
  uint64_t v63 = MEMORY[0x263F18E48];
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v480 = v64;
  uint64_t v481 = MEMORY[0x263F198F8];
  uint64_t v363 = v63;
  uint64_t v362 = v62;
  unint64_t v361 = (void (*)(char *, uint64_t, uint64_t))swift_getWitnessTable();
  *(void *)&long long v484 = v62;
  *((void *)&v484 + 1) = v361;
  size_t v335 = (char *)MEMORY[0x263F1AF40];
  swift_getOpaqueTypeMetadata2();
  uint64_t v65 = sub_24EE55DD0();
  uint64_t v340 = v65;
  uint64_t v478 = v64;
  uint64_t v479 = MEMORY[0x263F18860];
  uint64_t v337 = swift_getWitnessTable();
  *(void *)&long long v484 = v65;
  *((void *)&v484 + 1) = v337;
  swift_getOpaqueTypeMetadata2();
  uint64_t v336 = sub_24EE56240();
  uint64_t v339 = sub_24EE56B10();
  uint64_t v338 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE470);
  uint64_t v359 = sub_24EE56240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE488);
  uint64_t v360 = sub_24EE56240();
  uint64_t v326 = (char *)sub_24EE56240();
  uint64_t v66 = v61;
  *(void *)&long long v484 = v61;
  unint64_t v67 = v423;
  *((void *)&v484 + 1) = v423;
  *(void *)&long long v485 = v423;
  *((void *)&v485 + 1) = v418;
  uint64_t v486 = v411;
  uint64_t v68 = v47;
  uint64_t v487 = v47;
  uint64_t v69 = v419;
  *(void *)&long long v488 = v419;
  *((void *)&v488 + 1) = v419;
  uint64_t v489 = v424;
  uint64_t v490 = v412;
  uint64_t v70 = type metadata accessor for FullWidthStageView();
  uint64_t v358 = v70;
  unint64_t v357 = (void (*)(char *, uint64_t))swift_getWitnessTable();
  *(void *)&long long v484 = v70;
  *((void *)&v484 + 1) = v357;
  swift_getOpaqueTypeMetadata2();
  unint64_t v71 = v67;
  uint64_t v72 = type metadata accessor for InfoActionCardView();
  uint64_t v334 = v72;
  uint64_t v333 = swift_getWitnessTable();
  *(void *)&long long v484 = v72;
  *((void *)&v484 + 1) = v333;
  swift_getOpaqueTypeMetadata2();
  uint64_t v332 = sub_24EE56240();
  sub_24EE56240();
  uint64_t v73 = v66;
  *(void *)&long long v484 = v66;
  *((void *)&v484 + 1) = v422;
  *(void *)&long long v485 = v416;
  uint64_t v74 = v68;
  *((void *)&v485 + 1) = v68;
  uint64_t v486 = v421;
  uint64_t v487 = v420;
  uint64_t v75 = type metadata accessor for LargeBrickView();
  OpaqueTypeMetadata2 = v75;
  uint64_t v329 = (char *)swift_getWitnessTable();
  *(void *)&long long v484 = v75;
  *((void *)&v484 + 1) = v329;
  swift_getOpaqueTypeMetadata2();
  uint64_t v76 = type metadata accessor for DynamicBrickView();
  uint64_t v328 = v76;
  uint64_t v327 = (char *)swift_getWitnessTable();
  *(void *)&long long v484 = v76;
  *((void *)&v484 + 1) = v327;
  swift_getOpaqueTypeMetadata2();
  uint64_t v318 = sub_24EE56240();
  uint64_t v77 = type metadata accessor for MonogramVerticalStackView();
  uint64_t v325 = v77;
  uint64_t v324 = swift_getWitnessTable();
  *(void *)&long long v484 = v77;
  *((void *)&v484 + 1) = v324;
  swift_getOpaqueTypeMetadata2();
  uint64_t v321 = sub_24EE56240();
  uint64_t v323 = sub_24EE56240();
  v303[0] = sub_24EE56240();
  uint64_t v78 = type metadata accessor for StandardCardView();
  uint64_t v320 = v78;
  uint64_t v319 = swift_getWitnessTable();
  *(void *)&long long v484 = v78;
  *((void *)&v484 + 1) = v319;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v484 = v73;
  *((void *)&v484 + 1) = v71;
  *(void *)&long long v485 = v74;
  *((void *)&v485 + 1) = v69;
  uint64_t v79 = type metadata accessor for StandardHorizontalStackView();
  uint64_t v317 = v79;
  uint64_t v316 = swift_getWitnessTable();
  *(void *)&long long v484 = v79;
  *((void *)&v484 + 1) = v316;
  swift_getOpaqueTypeMetadata2();
  v303[3] = sub_24EE56240();
  uint64_t v80 = type metadata accessor for StandardVerticalStackView();
  uint64_t v315 = v80;
  uint64_t v314 = swift_getWitnessTable();
  *(void *)&long long v484 = v80;
  *((void *)&v484 + 1) = v314;
  swift_getOpaqueTypeMetadata2();
  uint64_t v81 = type metadata accessor for TallCardView();
  uint64_t v313 = v81;
  uint64_t v312 = swift_getWitnessTable();
  *(void *)&long long v484 = v81;
  *((void *)&v484 + 1) = v312;
  swift_getOpaqueTypeMetadata2();
  uint64_t v311 = sub_24EE56240();
  v303[1] = sub_24EE56240();
  uint64_t v82 = type metadata accessor for VerticalStackCard();
  uint64_t v310 = v82;
  uint64_t v309 = swift_getWitnessTable();
  *(void *)&long long v484 = v82;
  *((void *)&v484 + 1) = v309;
  swift_getOpaqueTypeMetadata2();
  v303[2] = sub_24EE56240();
  uint64_t v83 = type metadata accessor for WideBrickView();
  uint64_t v305 = v83;
  uint64_t v304 = swift_getWitnessTable();
  *(void *)&long long v484 = v83;
  *((void *)&v484 + 1) = v304;
  swift_getOpaqueTypeMetadata2();
  v303[4] = sub_24EE56240();
  v303[5] = sub_24EE56240();
  uint64_t v306 = sub_24EE56240();
  uint64_t v307 = sub_24EE56B10();
  uint64_t v308 = sub_24EE55DD0();
  uint64_t v364 = sub_24EE56240();
  uint64_t v341 = *(void *)(v364 - 8);
  MEMORY[0x270FA5388](v364);
  uint64_t v365 = (uint64_t)v303 - v84;
  uint64_t v85 = sub_24EE55DD0();
  uint64_t v343 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  unint64_t v366 = (char *)v303 - v86;
  uint64_t v330 = v85;
  uint64_t v87 = sub_24EE55DD0();
  uint64_t v344 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  unint64_t v342 = (char *)v303 - v88;
  *(void *)&long long v484 = v388;
  *((void *)&v484 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v362;
  *((void *)&v484 + 1) = v361;
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v340;
  *((void *)&v484 + 1) = v337;
  uint64_t v91 = swift_getOpaqueTypeConformance2();
  uint64_t v476 = v90;
  uint64_t v477 = v91;
  uint64_t v92 = MEMORY[0x263F19B40];
  uint64_t v475 = swift_getWitnessTable();
  uint64_t v473 = swift_getWitnessTable();
  uint64_t v474 = MEMORY[0x263F18C10];
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = sub_24EC8C218(&qword_26B1DE468, &qword_26B1DE470);
  uint64_t v471 = v93;
  uint64_t v472 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v96 = sub_24EC8C218(&qword_26B1DE480, &qword_26B1DE488);
  uint64_t v469 = v95;
  uint64_t v470 = v96;
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v467 = OpaqueTypeConformance2;
  uint64_t v468 = v97;
  uint64_t v98 = swift_getWitnessTable();
  *(void *)&long long v484 = v358;
  *((void *)&v484 + 1) = v357;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v334;
  *((void *)&v484 + 1) = v333;
  uint64_t v100 = swift_getOpaqueTypeConformance2();
  uint64_t v465 = v99;
  uint64_t v466 = v100;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v463 = v98;
  uint64_t v464 = v101;
  uint64_t v102 = swift_getWitnessTable();
  *(void *)&long long v484 = OpaqueTypeMetadata2;
  *((void *)&v484 + 1) = v329;
  uint64_t v103 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v328;
  *((void *)&v484 + 1) = v327;
  uint64_t v104 = swift_getOpaqueTypeConformance2();
  uint64_t v461 = v103;
  uint64_t v462 = v104;
  uint64_t v105 = swift_getWitnessTable();
  *(void *)&long long v484 = v325;
  *((void *)&v484 + 1) = v324;
  uint64_t v459 = swift_getOpaqueTypeConformance2();
  uint64_t v460 = v104;
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v457 = v105;
  uint64_t v458 = v106;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v455 = v102;
  uint64_t v456 = v107;
  uint64_t v108 = swift_getWitnessTable();
  *(void *)&long long v484 = v320;
  *((void *)&v484 + 1) = v319;
  uint64_t v109 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v317;
  *((void *)&v484 + 1) = v316;
  uint64_t v110 = swift_getOpaqueTypeConformance2();
  uint64_t v453 = v109;
  uint64_t v454 = v110;
  uint64_t v111 = swift_getWitnessTable();
  *(void *)&long long v484 = v315;
  *((void *)&v484 + 1) = v314;
  uint64_t v112 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v484 = v313;
  *((void *)&v484 + 1) = v312;
  uint64_t v113 = swift_getOpaqueTypeConformance2();
  uint64_t v451 = v112;
  uint64_t v452 = v113;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v449 = v111;
  uint64_t v450 = v114;
  uint64_t v115 = swift_getWitnessTable();
  *(void *)&long long v484 = v310;
  *((void *)&v484 + 1) = v309;
  uint64_t v447 = swift_getOpaqueTypeConformance2();
  uint64_t v448 = v424;
  uint64_t v116 = swift_getWitnessTable();
  *(void *)&long long v484 = v305;
  *((void *)&v484 + 1) = v304;
  uint64_t v117 = swift_getOpaqueTypeConformance2();
  uint64_t v445 = v116;
  uint64_t v446 = v117;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v443 = v115;
  uint64_t v444 = v118;
  uint64_t v119 = swift_getWitnessTable();
  uint64_t v441 = v108;
  uint64_t v442 = v119;
  uint64_t v340 = v92;
  uint64_t v440 = swift_getWitnessTable();
  uint64_t v438 = swift_getWitnessTable();
  uint64_t v439 = v390;
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v436 = MEMORY[0x263F1BA00];
  uint64_t v437 = v120;
  uint64_t v320 = swift_getWitnessTable();
  uint64_t v121 = MEMORY[0x263F1A240];
  uint64_t v434 = v320;
  uint64_t v435 = MEMORY[0x263F1A240];
  uint64_t v328 = swift_getWitnessTable();
  uint64_t v432 = v328;
  uint64_t v433 = v121;
  uint64_t v122 = swift_getWitnessTable();
  *(void *)&long long v484 = v87;
  uint64_t v322 = v87;
  uint64_t v323 = v122;
  *((void *)&v484 + 1) = v122;
  uint64_t v123 = v122;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v333 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v327 = (char *)v303 - v124;
  uint64_t v125 = sub_24EE55DD0();
  uint64_t v362 = v125;
  uint64_t v336 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v326 = (char *)v303 - v126;
  *(void *)&long long v484 = v87;
  *((void *)&v484 + 1) = v123;
  uint64_t v324 = swift_getOpaqueTypeConformance2();
  uint64_t v430 = v324;
  uint64_t v431 = MEMORY[0x263F190E0];
  uint64_t v325 = swift_getWitnessTable();
  *(void *)&long long v484 = v125;
  *((void *)&v484 + 1) = v325;
  uint64_t v334 = MEMORY[0x263F882B0];
  swift_getOpaqueTypeMetadata2();
  uint64_t v332 = sub_24EE56240();
  uint64_t v337 = *(void *)(v332 - 8);
  MEMORY[0x270FA5388](v332);
  uint64_t v321 = (uint64_t)v303 - v127;
  uint64_t v128 = sub_24EE55DD0();
  uint64_t v129 = *(void *)(v128 - 8);
  uint64_t v338 = v128;
  uint64_t v339 = v129;
  MEMORY[0x270FA5388](v128);
  uint64_t v329 = (char *)v303 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v132 = MEMORY[0x270FA5388](v131);
  size_t v335 = (char *)v303 - v133;
  uint64_t v134 = v393;
  uint64_t v135 = v414;
  uint64_t v136 = *(void (**)(char *, uint64_t, uint64_t))(v394 + 16);
  uint64_t v359 = v414 + *(int *)(v393 + 312);
  uint64_t v360 = v394 + 16;
  unint64_t v361 = v136;
  ((void (*)(char *, __n128))v136)(v391, v132);
  uint64_t v137 = v397;
  uint64_t WitnessTable = *(void (**)(char *, uint64_t, uint64_t))(v397 + 16);
  uint64_t v390 = v397 + 16;
  uint64_t v138 = v384;
  WitnessTable(v384, v135, v134);
  unint64_t v139 = v383;
  uint64_t v140 = v382;
  uint64_t v141 = (uint64_t)v398;
  (*(void (**)(char *, uint64_t, char *))(v383 + 16))(v382, v385, v398);
  uint64_t v142 = *(unsigned __int8 *)(v137 + 80);
  uint64_t v143 = (v142 + 240) & ~v142;
  uint64_t v319 = v143 + v389;
  uint64_t v388 = v143;
  uint64_t v389 = v142 | 7;
  unint64_t v144 = (v319 + *(unsigned __int8 *)(v139 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  uint64_t v145 = (char *)swift_allocObject();
  unint64_t v146 = v423;
  *((void *)v145 + 2) = v404;
  *((void *)v145 + 3) = v146;
  uint64_t v147 = v410;
  *((void *)v145 + 4) = v417;
  *((void *)v145 + 5) = v147;
  uint64_t v148 = v416;
  *((void *)v145 + 6) = v422;
  *((void *)v145 + 7) = v148;
  uint64_t v149 = *((void *)&v413 + 1);
  *((void *)v145 + 8) = v413;
  *((void *)v145 + 9) = v149;
  uint64_t v150 = v406;
  *((void *)v145 + 10) = v418;
  *((void *)v145 + 11) = v150;
  uint64_t v151 = v399;
  *((void *)v145 + 12) = v402;
  *((void *)v145 + 13) = v151;
  uint64_t v152 = v403;
  *((void *)v145 + 14) = v400;
  *((void *)v145 + 15) = v152;
  uint64_t v153 = v411;
  uint64_t v154 = v395;
  *((void *)v145 + 16) = v411;
  *((void *)v145 + 17) = v154;
  uint64_t v155 = v419;
  *((void *)v145 + 18) = v141;
  *((void *)v145 + 19) = v155;
  uint64_t v156 = v421;
  *((void *)v145 + 20) = v409;
  *((void *)v145 + 21) = v156;
  uint64_t v157 = v405;
  *((void *)v145 + 22) = v420;
  *((void *)v145 + 23) = v157;
  uint64_t v158 = v407;
  *((void *)v145 + 24) = v424;
  *((void *)v145 + 25) = v158;
  uint64_t v159 = v401;
  *((void *)v145 + 26) = v408;
  *((void *)v145 + 27) = v159;
  uint64_t v160 = v415;
  *((void *)v145 + 28) = v412;
  *((void *)v145 + 29) = v160;
  uint64_t v161 = &v145[v143];
  uint64_t v162 = *(void (**)(char *, char *, int *))(v137 + 32);
  uint64_t v397 = v137 + 32;
  uint64_t v387 = v162;
  uint64_t v163 = v138;
  uint64_t v164 = v138;
  uint64_t v165 = (int *)v393;
  v162(v161, v163, (int *)v393);
  (*(void (**)(char *, char *, uint64_t))(v139 + 32))(&v145[v144], v140, v141);
  uint64_t v358 = sub_24ED24750((unint64_t *)&qword_26B1DBA10, MEMORY[0x263F07508]);
  uint64_t v166 = v391;
  uint64_t v167 = v392;
  sub_24EE55A30();
  swift_release();
  uint64_t v168 = *(void (**)(char *, uint64_t))(v394 + 8);
  v394 += 8;
  unint64_t v357 = v168;
  uint64_t v169 = v167;
  v168(v166, v167);
  uint64_t v170 = v165;
  uint64_t v171 = v165[67];
  uint64_t v172 = v414;
  uint64_t v173 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v372 + 16))(v368, v414 + v171, v153);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v373 + 16))(v369, v172 + v170[68], v375);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v376 + 16))(v370, v172 + v170[69], v377);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v379 + 16))(v374, v172 + v170[70], v380);
  v361(v166, v359, v169);
  WitnessTable(v164, v172, (uint64_t)v170);
  unint64_t v174 = (v319 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v382 = (char *)(v174 + 8);
  unint64_t v383 = v174;
  uint64_t v175 = (void *)swift_allocObject();
  unint64_t v176 = v423;
  v175[2] = v404;
  v175[3] = v176;
  uint64_t v177 = v410;
  v175[4] = v417;
  v175[5] = v177;
  uint64_t v178 = v416;
  v175[6] = v422;
  v175[7] = v178;
  uint64_t v179 = *((void *)&v413 + 1);
  v175[8] = v413;
  v175[9] = v179;
  uint64_t v180 = v418;
  uint64_t v181 = v406;
  v175[10] = v418;
  v175[11] = v181;
  uint64_t v182 = v399;
  v175[12] = v402;
  v175[13] = v182;
  uint64_t v183 = v403;
  v175[14] = v400;
  v175[15] = v183;
  v175[16] = v173;
  uint64_t v184 = v395;
  v175[17] = v395;
  v175[18] = v141;
  uint64_t v185 = v409;
  v175[19] = v419;
  v175[20] = v185;
  uint64_t v186 = v420;
  v175[21] = v421;
  v175[22] = v186;
  uint64_t v187 = v424;
  v175[23] = v405;
  v175[24] = v187;
  uint64_t v188 = v408;
  v175[25] = v407;
  v175[26] = v188;
  v175[27] = v401;
  uint64_t v189 = (char *)v175 + v388;
  uint64_t v190 = v415;
  v175[28] = v412;
  v175[29] = v190;
  uint64_t v191 = v164;
  uint64_t v192 = v164;
  uint64_t v193 = v170;
  v387(v189, v191, v170);
  *(void *)((char *)v175 + v174) = v396;
  uint64_t v194 = v391;
  uint64_t v195 = v184;
  uint64_t v196 = v180;
  uint64_t v197 = v392;
  sub_24EE559C0();
  swift_release();
  v357(v194, v197);
  v361(v194, v359, v197);
  WitnessTable(v192, v414, (uint64_t)v193);
  uint64_t v198 = (void *)swift_allocObject();
  unint64_t v199 = v423;
  v198[2] = v404;
  v198[3] = v199;
  uint64_t v200 = v410;
  v198[4] = v417;
  v198[5] = v200;
  uint64_t v201 = v416;
  v198[6] = v422;
  v198[7] = v201;
  uint64_t v202 = *((void *)&v413 + 1);
  v198[8] = v413;
  v198[9] = v202;
  uint64_t v203 = v406;
  v198[10] = v196;
  v198[11] = v203;
  uint64_t v204 = v399;
  v198[12] = v402;
  v198[13] = v204;
  v198[14] = v400;
  v198[15] = v183;
  v198[16] = v411;
  v198[17] = v195;
  uint64_t v205 = v419;
  v198[18] = v398;
  v198[19] = v205;
  uint64_t v206 = v421;
  v198[20] = v409;
  v198[21] = v206;
  uint64_t v207 = v405;
  v198[22] = v420;
  v198[23] = v207;
  uint64_t v208 = v407;
  v198[24] = v424;
  v198[25] = v208;
  uint64_t v209 = v401;
  v198[26] = v408;
  v198[27] = v209;
  uint64_t v210 = (char *)v198 + v388;
  uint64_t v211 = v412;
  uint64_t v212 = v415;
  v198[28] = v412;
  v198[29] = v212;
  v387(v210, v192, (int *)v393);
  *(void *)((char *)v198 + v383) = v396;
  uint64_t v213 = v391;
  uint64_t v214 = v392;
  sub_24EE559C0();
  swift_release();
  v357(v213, v214);
  uint64_t v215 = v409;
  uint64_t v216 = v211;
  uint64_t v217 = v411;
  uint64_t v218 = v410;
  unint64_t v219 = v422;
  uint64_t v220 = v416;
  uint64_t v221 = v418;
  unint64_t v222 = v423;
  uint64_t v223 = v415;
  sub_24EE2E070(&v484);
  v429[0] = v484;
  v429[1] = v485;
  uint64_t v302 = v215;
  uint64_t v301 = v223;
  uint64_t v299 = v221;
  unint64_t v300 = v222;
  unint64_t v297 = v219;
  uint64_t v298 = v220;
  uint64_t v224 = v220;
  uint64_t v295 = v217;
  uint64_t v296 = v218;
  uint64_t v225 = v367;
  uint64_t v226 = v368;
  uint64_t v227 = v369;
  uint64_t v228 = v370;
  uint64_t v229 = v374;
  uint64_t v230 = v378;
  uint64_t v231 = v371;
  sub_24EC9D2CC(v367, v368, (uint64_t *)v429, v369, v370, v374, v378, v371, v365, (uint64_t)v398, v295, v296, v297, v298, v299, v300, v301, v216, v302,
    v421,
    v420,
    v424,
    v419);
  (*(void (**)(uint64_t, uint64_t))(v350 + 8))(v231, v351);
  (*(void (**)(uint64_t, uint64_t))(v348 + 8))(v230, v349);
  (*(void (**)(uint64_t, uint64_t))(v379 + 8))(v229, v380);
  (*(void (**)(uint64_t, uint64_t))(v376 + 8))(v228, v377);
  (*(void (**)(uint64_t, uint64_t))(v373 + 8))(v227, v375);
  uint64_t v232 = v411;
  (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v226, v411);
  (*(void (**)(uint64_t, uint64_t))(v345 + 8))(v225, v346);
  uint64_t v233 = v384;
  uint64_t v234 = v393;
  WitnessTable(v384, v414, v393);
  uint64_t v235 = (void *)swift_allocObject();
  uint64_t v236 = v404;
  unint64_t v237 = v423;
  v235[2] = v404;
  v235[3] = v237;
  uint64_t v238 = v410;
  v235[4] = v417;
  v235[5] = v238;
  v235[6] = v422;
  v235[7] = v224;
  uint64_t v239 = *((void *)&v413 + 1);
  v235[8] = v413;
  v235[9] = v239;
  uint64_t v240 = v406;
  v235[10] = v418;
  v235[11] = v240;
  uint64_t v241 = v402;
  uint64_t v242 = v399;
  v235[12] = v402;
  v235[13] = v242;
  uint64_t v243 = v403;
  v235[14] = v400;
  v235[15] = v243;
  uint64_t v244 = v395;
  v235[16] = v232;
  v235[17] = v244;
  uint64_t v245 = v419;
  v235[18] = v398;
  v235[19] = v245;
  uint64_t v246 = v421;
  v235[20] = v409;
  v235[21] = v246;
  uint64_t v247 = v405;
  v235[22] = v420;
  v235[23] = v247;
  uint64_t v248 = v407;
  v235[24] = v424;
  v235[25] = v248;
  uint64_t v249 = v401;
  v235[26] = v408;
  v235[27] = v249;
  uint64_t v250 = (char *)v235 + v388;
  uint64_t v251 = v415;
  v235[28] = v412;
  v235[29] = v251;
  v387(v250, v233, (int *)v234);
  *(void *)((char *)v235 + v383) = v396;
  uint64_t v252 = v364;
  uint64_t v253 = v365;
  sub_24EE56A10();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v341 + 8))(v253, v252);
  uint64_t v254 = v384;
  WitnessTable(v384, v414, v234);
  uint64_t v255 = (void *)swift_allocObject();
  unint64_t v256 = v423;
  v255[2] = v236;
  v255[3] = v256;
  uint64_t v257 = v410;
  v255[4] = v417;
  v255[5] = v257;
  uint64_t v258 = v416;
  v255[6] = v422;
  v255[7] = v258;
  uint64_t v259 = *((void *)&v413 + 1);
  v255[8] = v413;
  v255[9] = v259;
  v255[10] = v418;
  v255[11] = v240;
  uint64_t v260 = v399;
  v255[12] = v241;
  v255[13] = v260;
  uint64_t v261 = v403;
  v255[14] = v400;
  v255[15] = v261;
  uint64_t v262 = v395;
  v255[16] = v411;
  v255[17] = v262;
  uint64_t v263 = v398;
  uint64_t v264 = v419;
  v255[18] = v398;
  v255[19] = v264;
  uint64_t v265 = v421;
  v255[20] = v409;
  v255[21] = v265;
  v255[22] = v420;
  v255[23] = v247;
  uint64_t v266 = v407;
  v255[24] = v424;
  v255[25] = v266;
  v255[26] = v408;
  v255[27] = v249;
  uint64_t v267 = (char *)v255 + v388;
  uint64_t v268 = v415;
  v255[28] = v412;
  v255[29] = v268;
  uint64_t v269 = v234;
  v387(v267, v254, (int *)v234);
  *(void *)((char *)v255 + v383) = v396;
  uint64_t v270 = v342;
  uint64_t v271 = v330;
  uint64_t v272 = v366;
  sub_24EE56770();
  swift_release();
  (*(void (**)(char *, uint64_t))(v343 + 8))(v272, v271);
  sub_24EE56490();
  uint64_t v273 = v414;
  sub_24EE56D60();
  uint64_t v274 = v327;
  uint64_t v275 = v322;
  sub_24EE568F0();
  (*(void (**)(char *, uint64_t))(v344 + 8))(v270, v275);
  uint64_t v276 = v326;
  uint64_t v277 = OpaqueTypeMetadata2;
  sub_24EE56A70();
  (*(void (**)(char *, uint64_t))(v333 + 8))(v274, v277);
  uint64_t v278 = v273 + *(int *)(v269 + 252);
  uint64_t v279 = v325;
  uint64_t v280 = v321;
  uint64_t v281 = v362;
  sub_24ED7F0A4(v385, v278, v396, v362, v321, v402, v403, v395, v263, v325, v401, v268);
  (*(void (**)(char *, uint64_t))(v336 + 8))(v276, v281);
  uint64_t v282 = (uint64_t)v353;
  (*(void (**)(char *, uint64_t))(v268 + 168))(v263, v268);
  uint64_t v283 = v352;
  sub_24ED0A178(v282, *(void *)(v414 + *(int *)(v393 + 288)), *(void *)(v414 + *(int *)(v393 + 288) + 8), v352);
  swift_retain();
  *(void *)&long long v484 = v362;
  *((void *)&v484 + 1) = v279;
  uint64_t v427 = swift_getOpaqueTypeConformance2();
  uint64_t v428 = v279;
  uint64_t v284 = v332;
  uint64_t v285 = swift_getWitnessTable();
  uint64_t v286 = v329;
  uint64_t v287 = v283;
  uint64_t v288 = v283;
  uint64_t v289 = v381;
  MEMORY[0x25334D0C0](v287, v284, v381, v285);
  (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v288, v289);
  (*(void (**)(uint64_t, uint64_t))(v337 + 8))(v280, v284);
  uint64_t v290 = swift_getWitnessTable();
  uint64_t v425 = v285;
  uint64_t v426 = v290;
  uint64_t v291 = v338;
  swift_getWitnessTable();
  uint64_t v292 = v335;
  sub_24EC90894(v286);
  uint64_t v293 = *(void (**)(char *, uint64_t))(v339 + 8);
  v293(v286, v291);
  sub_24EC90894(v292);
  return ((uint64_t (*)(char *, uint64_t))v293)(v292, v291);
}

uint64_t sub_24ED8CF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, long long a19, long long a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v51 = a8;
  uint64_t v48 = a7;
  uint64_t v46 = a6;
  uint64_t v45 = a5;
  uint64_t v43 = a4;
  uint64_t v41 = a3;
  v35[1] = a2;
  uint64_t v53 = a1;
  uint64_t v49 = a23;
  uint64_t v40 = a16;
  uint64_t v52 = a22;
  uint64_t v50 = a21;
  long long v47 = a20;
  long long v44 = a19;
  long long v42 = a18;
  long long v39 = a17;
  long long v38 = a13;
  long long v37 = a12;
  v35[0] = *(void *)(a11 - 8);
  long long v36 = a9;
  MEMORY[0x270FA5388](a1);
  uint64_t v24 = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EE55A60();
  uint64_t v26 = sub_24EE57430();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  BOOL v29 = (char *)v35 - v28;
  uint64_t v54 = v41;
  uint64_t v55 = v43;
  uint64_t v56 = v45;
  uint64_t v57 = v46;
  uint64_t v58 = v48;
  uint64_t v59 = v51;
  long long v60 = v36;
  uint64_t v61 = a10;
  uint64_t v62 = a11;
  uint64_t v30 = v40;
  long long v63 = v37;
  long long v64 = v38;
  uint64_t v65 = a14;
  uint64_t v66 = a15;
  uint64_t v31 = v49;
  long long v68 = v39;
  long long v69 = v42;
  long long v70 = v44;
  long long v71 = v47;
  uint64_t v67 = v40;
  uint64_t v72 = v50;
  uint64_t v73 = v52;
  uint64_t v74 = v49;
  uint64_t v32 = type metadata accessor for OrthogonalView();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v53 + *(int *)(v32 + 308), v26);
  uint64_t v33 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v25) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v31 + 152))(v30, v31);
    sub_24EE55A50();
    (*(void (**)(char *, uint64_t))(v35[0] + 8))(v24, a11);
    uint64_t v27 = v33;
    uint64_t v26 = v25;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_24ED8D36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, long long a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,long long a24,uint64_t a25)
{
  uint64_t v51 = a8;
  uint64_t v50 = a7;
  uint64_t v48 = a6;
  uint64_t v47 = a5;
  uint64_t v45 = a4;
  uint64_t v57 = a3;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v58 = a9;
  uint64_t v54 = a25;
  long long v53 = a24;
  long long v52 = a23;
  uint64_t v59 = a22;
  uint64_t v49 = a21;
  uint64_t v46 = a20;
  long long v44 = a19;
  long long v43 = a18;
  uint64_t v42 = a16;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v28 = (char *)&v39 - v27;
  uint64_t v29 = *(void *)(a12 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v39 - v34;
  uint64_t v60 = v45;
  uint64_t v61 = v47;
  uint64_t v62 = v48;
  uint64_t v63 = v50;
  uint64_t v64 = v51;
  long long v65 = v39;
  uint64_t v66 = a11;
  uint64_t v67 = a12;
  long long v68 = v40;
  long long v69 = v41;
  uint64_t v70 = a15;
  uint64_t v71 = v42;
  uint64_t v72 = a17;
  long long v73 = v43;
  long long v74 = v44;
  uint64_t v75 = v46;
  uint64_t v76 = v49;
  long long v78 = v52;
  long long v79 = v53;
  uint64_t v77 = v59;
  uint64_t v80 = v54;
  type metadata accessor for OrthogonalView();
  sub_24EE559E0();
  long long v36 = (void (*)(char *))sub_24EE559D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a17 - 8) + 16))(v28, v56, a17);
  *(void *)&v28[*(int *)(TupleTypeMetadata2 + 48)] = v57;
  v36(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, TupleTypeMetadata2);
  sub_24EC90894(v32);
  long long v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v37(v32, a12);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v35, a12);
}

uint64_t sub_24ED8D7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, long long a19, long long a20,long long a21,uint64_t a22,uint64_t a23)
{
  uint64_t v51 = a8;
  uint64_t v49 = a7;
  uint64_t v47 = a6;
  uint64_t v58 = a3;
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v59 = a9;
  uint64_t v54 = a23;
  uint64_t v53 = a22;
  long long v52 = a21;
  long long v50 = a20;
  long long v48 = a19;
  long long v46 = a18;
  uint64_t v45 = a16;
  long long v44 = a14;
  long long v43 = a13;
  long long v42 = a12;
  long long v41 = a11;
  long long v40 = a10;
  uint64_t v25 = sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v55 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v28 = (char *)&v40 - v27;
  uint64_t v29 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v40 - v34;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v62 = v47;
  uint64_t v63 = v49;
  uint64_t v64 = v51;
  long long v65 = v40;
  long long v66 = v41;
  long long v67 = v42;
  long long v68 = v43;
  long long v69 = v44;
  uint64_t v70 = a15;
  uint64_t v71 = v45;
  uint64_t v72 = a17;
  long long v73 = v46;
  long long v74 = v48;
  long long v75 = v50;
  long long v76 = v52;
  uint64_t v77 = v53;
  uint64_t v78 = v54;
  type metadata accessor for OrthogonalView();
  sub_24EE559E0();
  long long v36 = (void (*)(char *))sub_24EE559D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v28, v57, v25);
  long long v37 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
  *(void *)long long v37 = v58;
  v37[8] = 0;
  v36(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, TupleTypeMetadata2);
  sub_24EC90894(v32);
  long long v38 = *(void (**)(char *, uint64_t))(v29 + 8);
  v38(v32, a5);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v38)(v35, a5);
}

uint64_t sub_24ED8DBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20)
{
  uint64_t v35 = a2;
  long long v45 = a18;
  long long v44 = a17;
  long long v43 = a16;
  long long v42 = a15;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a12;
  long long v38 = a11;
  long long v37 = a10;
  long long v36 = a9;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v51 = a8;
  long long v52 = a9;
  long long v53 = a10;
  long long v54 = a11;
  long long v55 = a12;
  long long v56 = a13;
  long long v57 = a14;
  long long v58 = a15;
  long long v59 = a16;
  long long v60 = a17;
  long long v61 = a18;
  uint64_t v62 = a19;
  uint64_t v63 = a20;
  uint64_t v30 = type metadata accessor for OrthogonalView();
  sub_24ED25FB4(a1 + *(int *)(v30 + 300), (uint64_t)v29);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1) {
    return sub_24ED2601C((uint64_t)v29);
  }
  uint64_t v46 = v35;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
}

uint64_t sub_24ED8DE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20)
{
  uint64_t v35 = a2;
  long long v45 = a18;
  long long v44 = a17;
  long long v43 = a16;
  long long v42 = a15;
  long long v41 = a14;
  long long v40 = a13;
  long long v39 = a12;
  long long v38 = a11;
  long long v37 = a10;
  long long v36 = a9;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v51 = a8;
  long long v52 = a9;
  long long v53 = a10;
  long long v54 = a11;
  long long v55 = a12;
  long long v56 = a13;
  long long v57 = a14;
  long long v58 = a15;
  long long v59 = a16;
  long long v60 = a17;
  long long v61 = a18;
  uint64_t v62 = a19;
  uint64_t v63 = a20;
  uint64_t v30 = type metadata accessor for OrthogonalView();
  sub_24ED25FB4(a1 + *(int *)(v30 + 304), (uint64_t)v29);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31) == 1) {
    return sub_24ED2601C((uint64_t)v29);
  }
  uint64_t v46 = v35;
  sub_24EE55A50();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
}

uint64_t sub_24ED8E10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v149 = a1;
  uint64_t v162 = a9;
  uint64_t v148 = a14;
  *(void *)&long long v177 = a2;
  *((void *)&v177 + 1) = a3;
  uint64_t v132 = a4;
  *(void *)&long long v178 = a4;
  uint64_t v134 = a5;
  *((void *)&v178 + 1) = a5;
  uint64_t v136 = a6;
  uint64_t v179 = a6;
  uint64_t v138 = a7;
  uint64_t v180 = a7;
  uint64_t v140 = a8;
  uint64_t v181 = a8;
  uint64_t v119 = a10;
  uint64_t v182 = a10;
  uint64_t v121 = a11;
  uint64_t v183 = a11;
  uint64_t v123 = a12;
  uint64_t v124 = a13;
  uint64_t v184 = a12;
  uint64_t v185 = a13;
  uint64_t v186 = a14;
  uint64_t v187 = a15;
  uint64_t v126 = a16;
  uint64_t v188 = a16;
  uint64_t v128 = a17;
  uint64_t v189 = a17;
  uint64_t v130 = a18;
  uint64_t v190 = a18;
  uint64_t v191 = a19;
  uint64_t v192 = a20;
  uint64_t v133 = a21;
  uint64_t v193 = a21;
  uint64_t v135 = a22;
  uint64_t v194 = a22;
  uint64_t v137 = a23;
  uint64_t v195 = a23;
  uint64_t v139 = a24;
  uint64_t v196 = a24;
  uint64_t v141 = a25;
  uint64_t v197 = a25;
  uint64_t v198 = a26;
  uint64_t v199 = a27;
  uint64_t v143 = a28;
  uint64_t v144 = a29;
  uint64_t v200 = a28;
  uint64_t v201 = a29;
  uint64_t v202 = a30;
  uint64_t v145 = type metadata accessor for OrthogonalView();
  uint64_t v118 = *(void *)(v145 - 8);
  uint64_t v116 = *(void *)(v118 + 64);
  MEMORY[0x270FA5388](v145);
  uint64_t v117 = (char *)&v111 - v32;
  uint64_t v151 = sub_24EE55940();
  uint64_t v122 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v150 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_24EE559E0();
  uint64_t v127 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v120 = (char *)&v111 - v34;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE1B8);
  uint64_t v156 = a27;
  uint64_t v157 = a3;
  *(void *)&long long v177 = a3;
  uint64_t v152 = a15;
  *((void *)&v177 + 1) = a15;
  uint64_t v147 = a20;
  *(void *)&long long v178 = a20;
  *((void *)&v178 + 1) = a27;
  uint64_t v35 = type metadata accessor for CanvasSectionHeaderView();
  sub_24EE56370();
  uint64_t v160 = v35;
  uint64_t v161 = sub_24EE55DD0();
  uint64_t v36 = sub_24EE56240();
  uint64_t v155 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v125 = (uint64_t)&v111 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  long long v40 = (char *)&v111 - v39;
  uint64_t v146 = a30;
  uint64_t v131 = a19;
  uint64_t v41 = v148;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v115 = a2;
  *(void *)&long long v177 = a2;
  *((void *)&v177 + 1) = v41;
  *(void *)&long long v178 = AssociatedConformanceWitness;
  uint64_t v142 = a26;
  *((void *)&v178 + 1) = a26;
  uint64_t v43 = type metadata accessor for CanvasSectionHeader();
  uint64_t v44 = sub_24EE57430();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (char *)&v111 - v46;
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v111 - v50;
  uint64_t v163 = v36;
  uint64_t v159 = sub_24EE57430();
  uint64_t v154 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  uint64_t v153 = (char *)&v111 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v54 = MEMORY[0x270FA5388](v53);
  uint64_t v158 = (uint64_t)&v111 - v55;
  uint64_t v56 = v149;
  (*(void (**)(char *, __n128))(v45 + 16))(v47, v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v47, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
    uint64_t v57 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v153, 1, 1, v163);
    unint64_t v58 = sub_24ED17434();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v60 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
    uint64_t v175 = WitnessTable;
    uint64_t v176 = v60;
    uint64_t v61 = swift_getWitnessTable();
    unint64_t v173 = v58;
    uint64_t v174 = v61;
    swift_getWitnessTable();
    uint64_t v62 = v158;
    sub_24ED6076C(v57, v158);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
    uint64_t v64 = v57;
  }
  else
  {
    long long v65 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v113 = v51;
    v65(v51, v47, v43);
    uint64_t v114 = v40;
    long long v66 = (int *)v145;
    uint64_t v67 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v150, v56 + *(int *)(v145 + 312), v151);
    uint64_t v111 = v43;
    uint64_t v112 = v48;
    long long v69 = v117;
    uint64_t v68 = v118;
    (*(void (**)(char *, uint64_t, int *))(v118 + 16))(v117, v56, v66);
    unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v71 = (char *)swift_allocObject();
    uint64_t v72 = v157;
    *((void *)v71 + 2) = v115;
    *((void *)v71 + 3) = v72;
    uint64_t v73 = v134;
    *((void *)v71 + 4) = v132;
    *((void *)v71 + 5) = v73;
    uint64_t v74 = v138;
    *((void *)v71 + 6) = v136;
    *((void *)v71 + 7) = v74;
    uint64_t v75 = v119;
    *((void *)v71 + 8) = v140;
    *((void *)v71 + 9) = v75;
    uint64_t v76 = v123;
    *((void *)v71 + 10) = v121;
    *((void *)v71 + 11) = v76;
    *((void *)v71 + 12) = v124;
    *((void *)v71 + 13) = v41;
    uint64_t v77 = v126;
    *((void *)v71 + 14) = v152;
    *((void *)v71 + 15) = v77;
    uint64_t v78 = v130;
    *((void *)v71 + 16) = v128;
    *((void *)v71 + 17) = v78;
    uint64_t v79 = v147;
    *((void *)v71 + 18) = v131;
    *((void *)v71 + 19) = v79;
    uint64_t v80 = v135;
    *((void *)v71 + 20) = v133;
    *((void *)v71 + 21) = v80;
    uint64_t v81 = v139;
    *((void *)v71 + 22) = v137;
    *((void *)v71 + 23) = v81;
    uint64_t v82 = v142;
    *((void *)v71 + 24) = v141;
    *((void *)v71 + 25) = v82;
    uint64_t v83 = v143;
    *((void *)v71 + 26) = v156;
    *((void *)v71 + 27) = v83;
    uint64_t v84 = v146;
    *((void *)v71 + 28) = v144;
    *((void *)v71 + 29) = v84;
    (*(void (**)(char *, char *, int *))(v68 + 32))(&v71[v70], v69, v66);
    sub_24ED24750((unint64_t *)&qword_26B1DBA10, MEMORY[0x263F07508]);
    uint64_t v85 = (uint64_t)v120;
    uint64_t v86 = v150;
    uint64_t v87 = v157;
    uint64_t v88 = v151;
    sub_24EE559C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v86, v88);
    uint64_t v89 = v56 + v66[73];
    uint64_t v90 = (long long *)(v56 + v66[64]);
    long long v91 = v90[1];
    long long v177 = *v90;
    long long v178 = v91;
    int v92 = *(unsigned __int8 *)(v56 + v66[66]);
    uint64_t v93 = v125;
    uint64_t v94 = v111;
    uint64_t v95 = v113;
    sub_24EE5364C(v85, v89, (double *)&v177, v92, v111, v87, v152, v79, v125, v156);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v85, v129);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v95, v94);
    unint64_t v96 = sub_24ED17434();
    uint64_t v97 = swift_getWitnessTable();
    uint64_t v98 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
    uint64_t v166 = v97;
    uint64_t v167 = v98;
    uint64_t v99 = swift_getWitnessTable();
    unint64_t v164 = v96;
    uint64_t v165 = v99;
    uint64_t v100 = v163;
    swift_getWitnessTable();
    uint64_t v101 = v114;
    sub_24EC90894(v93);
    uint64_t v102 = v155;
    uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v103(v93, v100);
    uint64_t v104 = (uint64_t)v153;
    sub_24EC90894(v101);
    v103((uint64_t)v101, v100);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v104, 0, 1, v100);
    uint64_t v62 = v158;
    sub_24ED6076C(v104, v158);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
    uint64_t v64 = v104;
  }
  uint64_t v105 = v159;
  v63(v64, v159);
  unint64_t v106 = sub_24ED17434();
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v108 = sub_24ED24750((unint64_t *)&qword_26B1DE3A0, MEMORY[0x263F1A048]);
  uint64_t v171 = v107;
  uint64_t v172 = v108;
  uint64_t v109 = swift_getWitnessTable();
  unint64_t v169 = v106;
  uint64_t v170 = v109;
  uint64_t v168 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EC90894(v62);
  return ((uint64_t (*)(uint64_t, uint64_t))v63)(v62, v105);
}

uint64_t sub_24ED8ED04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, long long a11, long long a12, long long a13, uint64_t a14, uint64_t a15, long long a16, long long a17, long long a18, long long a19, uint64_t a20,void (*a21)(void))
{
  uint64_t v57 = a7;
  uint64_t v55 = a6;
  uint64_t v53 = a5;
  uint64_t v50 = a4;
  uint64_t v63 = a1;
  uint64_t v64 = a8;
  uint64_t v60 = a21;
  uint64_t v58 = a20;
  long long v56 = a19;
  long long v54 = a18;
  long long v52 = a17;
  long long v49 = a16;
  long long v48 = a13;
  long long v47 = a12;
  long long v46 = a11;
  long long v45 = a10;
  long long v44 = a9;
  uint64_t v23 = sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  uint64_t v59 = v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v62 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v26 = (char *)v43 - v25;
  uint64_t v51 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v43 - v28;
  uint64_t v61 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v43 - v34;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v67 = v50;
  uint64_t v68 = v53;
  uint64_t v69 = v55;
  uint64_t v70 = v57;
  long long v71 = v44;
  long long v72 = v45;
  long long v73 = v46;
  long long v74 = v47;
  long long v75 = v48;
  uint64_t v76 = a14;
  uint64_t v77 = a15;
  v43[1] = a15;
  long long v78 = v49;
  long long v79 = v52;
  long long v80 = v54;
  long long v81 = v56;
  uint64_t v82 = v58;
  uint64_t v83 = v60;
  type metadata accessor for OrthogonalView();
  uint64_t v36 = TupleTypeMetadata2;
  sub_24EE559E0();
  uint64_t v60 = (void (*)(void))sub_24EE559D0();
  uint64_t v37 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v29, v63, a2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v29, 0, 1, a2);
  uint64_t v38 = v51;
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v26, v29, v59);
  long long v40 = &v26[*(int *)(v36 + 48)];
  *(void *)long long v40 = 0;
  v40[8] = 1;
  v60(v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v36);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
  sub_24EC90894(v32);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v61 + 8);
  v41(v32, a3);
  sub_24EC90894(v35);
  return ((uint64_t (*)(char *, uint64_t))v41)(v35, a3);
}

uint64_t sub_24ED8F244@<X0>(unsigned char *a1@<X8>)
{
  return sub_24EC8801C(a1);
}

void sub_24ED8F304()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  sub_24EE57430();
  if (v0 <= 0x3F)
  {
    sub_24EE57430();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_24EE559E0();
        if (v3 <= 0x3F)
        {
          sub_24EE559E0();
          if (v4 <= 0x3F)
          {
            sub_24EE559E0();
            if (v5 <= 0x3F)
            {
              sub_24EE57430();
              __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
              swift_getTupleTypeMetadata2();
              sub_24EE559E0();
              if (v6 <= 0x3F)
              {
                type metadata accessor for EquatableViewModifierBuilder();
                if (v7 <= 0x3F)
                {
                  sub_24EE559E0();
                  if (v8 <= 0x3F)
                  {
                    swift_getTupleTypeMetadata2();
                    sub_24EE559E0();
                    if (v9 <= 0x3F)
                    {
                      sub_24ED232F8();
                      if (v10 <= 0x3F)
                      {
                        sub_24EE55A60();
                        sub_24EE57430();
                        if (v11 <= 0x3F)
                        {
                          sub_24EE55940();
                          if (v12 <= 0x3F) {
                            swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_24ED8F7AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = *(void *)(a3 + 104);
    swift_getAssociatedConformanceWitness();
    uint64_t v9 = type metadata accessor for CanvasSectionHeader();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = sub_24EE57430();
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_24EE55880();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = *(int *)(v9 + 52);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))((char *)a2 + v14, 1, v8))
      {
        uint64_t v18 = sub_24EE57430();
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v16, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v8);
      }
      uint64_t v19 = *(int *)(v9 + 56);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))((char *)a2 + v19, 1, v7))
      {
        uint64_t v23 = sub_24EE57430();
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v20, v21, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v7);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v24 = *(int *)(a3 + 248);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 244)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 244));
    *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v25 = *(int *)(a3 + 252);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)(a3 + 120);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      uint64_t v31 = sub_24EE57430();
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v32 = *(int *)(a3 + 256);
    uint64_t v33 = (_OWORD *)((char *)a1 + v32);
    uint64_t v34 = (_OWORD *)((char *)a2 + v32);
    long long v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = *(int *)(a3 + 260);
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((void *)v37 + 2) = *((void *)v38 + 2);
    *((unsigned char *)a1 + *(int *)(a3 + 264)) = *((unsigned char *)a2 + *(int *)(a3 + 264));
    (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 16))((char *)a1 + *(int *)(a3 + 268), (char *)a2 + *(int *)(a3 + 268));
    uint64_t v39 = *(int *)(a3 + 272);
    long long v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = *(int *)(a3 + 276);
    long long v44 = (char *)a1 + v43;
    long long v45 = (char *)a2 + v43;
    uint64_t v46 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = *(int *)(a3 + 280);
    long long v48 = (char *)a1 + v47;
    long long v49 = (char *)a2 + v47;
    uint64_t v50 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = *(int *)(a3 + 284);
    long long v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    sub_24EE57430();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
    swift_getTupleTypeMetadata2();
    uint64_t v54 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = *(int *)(a3 + 288);
    long long v56 = (uint64_t *)((char *)a1 + v55);
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = *(uint64_t *)((char *)a2 + v55 + 8);
    *long long v56 = *(uint64_t *)((char *)a2 + v55);
    v56[1] = v58;
    uint64_t v59 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
    uint64_t v60 = (char *)v56 + v59;
    uint64_t v61 = &v57[v59];
    uint64_t v62 = sub_24EE55A00();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
    swift_retain();
    v63(v60, v61, v62);
    uint64_t v64 = *(int *)(a3 + 292);
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
    uint64_t v68 = *(int *)(a3 + 296);
    uint64_t v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    swift_getTupleTypeMetadata2();
    uint64_t v71 = sub_24EE559E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    uint64_t v72 = *(int *)(a3 + 300);
    long long v73 = (char *)a1 + v72;
    long long v74 = (char *)a2 + v72;
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    if (v77(v74, 1, v75))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    uint64_t v79 = *(int *)(a3 + 304);
    long long v80 = (char *)a1 + v79;
    long long v81 = (char *)a2 + v79;
    if (v77((char *)a2 + v79, 1, v75))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v80, v81, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v80, 0, 1, v75);
    }
    uint64_t v83 = *(int *)(a3 + 308);
    uint64_t v84 = (char *)a1 + v83;
    uint64_t v85 = (char *)a2 + v83;
    uint64_t v86 = sub_24EE55A60();
    uint64_t v87 = *(void *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
    {
      uint64_t v88 = sub_24EE57430();
      memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    uint64_t v89 = *(int *)(a3 + 312);
    uint64_t v90 = (char *)a1 + v89;
    long long v91 = (char *)a2 + v89;
    uint64_t v92 = sub_24EE55940();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
    uint64_t v93 = *(int *)(a3 + 316);
    uint64_t v94 = (char *)a1 + v93;
    uint64_t v95 = (char *)a2 + v93;
    *(void *)uint64_t v94 = *(void *)v95;
    v94[8] = v95[8];
    *((void *)v94 + 2) = *((void *)v95 + 2);
  }
  swift_retain();
  return a1;
}

uint64_t sub_24ED9021C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    uint64_t v8 = a1 + *(int *)(v6 + 52);
    uint64_t v9 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v5);
    }
    uint64_t v10 = a1 + *(int *)(v6 + 56);
    uint64_t v11 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v4);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(a2 + 252);
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a2 + 128) - 8) + 8))(a1 + *(int *)(a2 + 268));
  uint64_t v15 = a1 + *(int *)(a2 + 272);
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + *(int *)(a2 + 276);
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + *(int *)(a2 + 280);
  uint64_t v20 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + *(int *)(a2 + 284);
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + *(int *)(a2 + 288);
  swift_release();
  uint64_t v24 = v23 + *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v25 = sub_24EE55A00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = a1 + *(int *)(a2 + 292);
  uint64_t v27 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = a1 + *(int *)(a2 + 296);
  swift_getTupleTypeMetadata2();
  uint64_t v29 = sub_24EE559E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = a1 + *(int *)(a2 + 300);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (!v33(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v34 = a1 + *(int *)(a2 + 304);
  if (!v33(v34, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
  }
  uint64_t v35 = a1 + *(int *)(a2 + 308);
  uint64_t v36 = sub_24EE55A60();
  uint64_t v37 = *(void *)(v36 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v38 = a1 + *(int *)(a2 + 312);
  uint64_t v39 = sub_24EE55940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  return swift_release();
}

char *sub_24ED908D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = sub_24EE57430();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    uint64_t v12 = *(int *)(v8 + 52);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v12], 1, v7))
    {
      uint64_t v16 = sub_24EE57430();
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(v8 + 56);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v17], 1, v6))
    {
      uint64_t v21 = sub_24EE57430();
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  uint64_t v22 = *(int *)(a3 + 248);
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  a1[v22] = a2[v22];
  uint64_t v23 = *(int *)(a3 + 252);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)(a3 + 120);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    uint64_t v29 = sub_24EE57430();
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v30 = *(int *)(a3 + 256);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  long long v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  uint64_t v34 = *(int *)(a3 + 260);
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *((void *)v35 + 2) = *((void *)v36 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 16))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v37 = *(int *)(a3 + 272);
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = *(int *)(a3 + 276);
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  uint64_t v45 = *(int *)(a3 + 280);
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = *(int *)(a3 + 284);
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v52 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  uint64_t v53 = *(int *)(a3 + 288);
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = *(void *)&a2[v53 + 8];
  *(void *)uint64_t v54 = *(void *)&a2[v53];
  *((void *)v54 + 1) = v56;
  uint64_t v57 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v58 = &v54[v57];
  uint64_t v59 = &v55[v57];
  uint64_t v60 = sub_24EE55A00();
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
  swift_retain();
  v61(v58, v59, v60);
  uint64_t v62 = *(int *)(a3 + 292);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v65 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
  uint64_t v66 = *(int *)(a3 + 296);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  swift_getTupleTypeMetadata2();
  uint64_t v69 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
  uint64_t v70 = *(int *)(a3 + 300);
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  if (v75(v72, 1, v73))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  uint64_t v77 = *(int *)(a3 + 304);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  if (v75(&a2[v77], 1, v73))
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v78, v79, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v73);
  }
  uint64_t v81 = *(int *)(a3 + 308);
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = sub_24EE55A60();
  uint64_t v85 = *(void *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
  {
    uint64_t v86 = sub_24EE57430();
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  uint64_t v87 = *(int *)(a3 + 312);
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
  uint64_t v91 = *(int *)(a3 + 316);
  uint64_t v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  v92[8] = v93[8];
  *((void *)v92 + 2) = *((void *)v93 + 2);
  swift_retain();
  return a1;
}

char *sub_24ED912F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v8);
      goto LABEL_7;
    }
    uint64_t v22 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
    uint64_t v23 = *(int *)(v8 + 52);
    uint64_t v24 = &a2[v23];
    uint64_t v120 = *(void *)(v7 - 8);
    uint64_t v25 = *(uint64_t (**)(void))(v120 + 48);
    uint64_t v122 = &a1[v23];
    int v26 = v25();
    int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v24, 1, v7);
    if (v26)
    {
      if (v27)
      {
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v122;
LABEL_48:
        memcpy(v29, v24, v28);
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v122, v24, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v122, 0, 1, v7);
    }
    else
    {
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v7);
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v122;
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v120 + 24))(v122, v24, v7);
    }
LABEL_51:
    uint64_t v114 = *(int *)(v8 + 56);
    uint64_t v115 = &a2[v114];
    uint64_t v116 = *(void *)(v6 - 8);
    uint64_t v117 = *(uint64_t (**)(void))(v116 + 48);
    __src = &a1[v114];
    int v118 = v117();
    int v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v117)(v115, 1, v6);
    if (v118)
    {
      if (!v119)
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(__src, v115, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(__src, 0, 1, v6);
        goto LABEL_17;
      }
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v115;
    }
    else
    {
      if (!v119)
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 24))(__src, v115, v6);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(__src, v6);
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v115;
    }
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    goto LABEL_8;
  }
  uint64_t v13 = sub_24EE55880();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
  uint64_t v14 = *(int *)(v8 + 52);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v7))
  {
    uint64_t v18 = sub_24EE57430();
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v16, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v7);
  }
  uint64_t v30 = *(int *)(v8 + 56);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v6))
  {
    uint64_t v34 = sub_24EE57430();
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v6);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
LABEL_17:
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 248)] = a2[*(int *)(a3 + 248)];
  uint64_t v35 = *(int *)(a3 + 252);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)(a3 + 120);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(&a1[v35], 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_22:
    uint64_t v43 = sub_24EE57430();
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_23:
  uint64_t v44 = *(int *)(a3 + 256);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  *((void *)v45 + 2) = *((void *)v46 + 2);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  uint64_t v47 = *(int *)(a3 + 260);
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  *((void *)v48 + 2) = *((void *)v49 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 24))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v50 = *(int *)(a3 + 272);
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
  uint64_t v54 = *(int *)(a3 + 276);
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
  uint64_t v58 = *(int *)(a3 + 280);
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  uint64_t v61 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  uint64_t v62 = *(int *)(a3 + 284);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v65 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = *(int *)(a3 + 288);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = *(void *)&a2[v66 + 8];
  *(void *)uint64_t v67 = *(void *)&a2[v66];
  *((void *)v67 + 1) = v69;
  swift_retain();
  swift_release();
  uint64_t v70 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  uint64_t v73 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  uint64_t v74 = *(int *)(a3 + 292);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 24))(v75, v76, v77);
  uint64_t v78 = *(int *)(a3 + 296);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = *(int *)(a3 + 300);
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  LODWORD(v64) = v87(v83, 1, v85);
  int v88 = v87(v84, 1, v85);
  if (v64)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
LABEL_28:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v83, v84, v85);
LABEL_29:
  uint64_t v90 = *(int *)(a3 + 304);
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = v87(&a1[v90], 1, v85);
  int v94 = v87(v92, 1, v85);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v91, v92, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v91, 0, 1, v85);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v85);
LABEL_34:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v91, v92, v85);
LABEL_35:
  uint64_t v96 = *(int *)(a3 + 308);
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = sub_24EE55A60();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  int v102 = v101(v97, 1, v99);
  int v103 = v101(v98, 1, v99);
  if (!v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 24))(v97, v98, v99);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v99);
    goto LABEL_40;
  }
  if (v103)
  {
LABEL_40:
    uint64_t v104 = sub_24EE57430();
    memcpy(v97, v98, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v97, v98, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
LABEL_41:
  uint64_t v105 = *(int *)(a3 + 312);
  unint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  uint64_t v108 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 24))(v106, v107, v108);
  uint64_t v109 = *(int *)(a3 + 316);
  uint64_t v110 = &a1[v109];
  uint64_t v111 = &a2[v109];
  uint64_t v112 = *(void *)v111;
  v110[8] = v111[8];
  *(void *)uint64_t v110 = v112;
  *((void *)v110 + 2) = *((void *)v111 + 2);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_24ED921F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
  {
    uint64_t v10 = sub_24EE57430();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    uint64_t v12 = *(int *)(v8 + 52);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v12], 1, v7))
    {
      uint64_t v16 = sub_24EE57430();
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(v8 + 56);
    uint64_t v18 = &a1[v17];
    size_t v19 = &a2[v17];
    uint64_t v20 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v17], 1, v6))
    {
      uint64_t v21 = sub_24EE57430();
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  uint64_t v22 = *(int *)(a3 + 248);
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  a1[v22] = a2[v22];
  uint64_t v23 = *(int *)(a3 + 252);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)(a3 + 120);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&a2[v23], 1, v26))
  {
    uint64_t v28 = sub_24EE57430();
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = *(int *)(a3 + 256);
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  uint64_t v33 = *(int *)(a3 + 260);
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((void *)v34 + 2) = *((void *)v35 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 32))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v36 = *(int *)(a3 + 272);
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = *(int *)(a3 + 276);
  int v41 = &a1[v40];
  int v42 = &a2[v40];
  uint64_t v43 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  uint64_t v44 = *(int *)(a3 + 280);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
  uint64_t v48 = *(int *)(a3 + 284);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v51 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  uint64_t v52 = *(int *)(a3 + 288);
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  uint64_t v55 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v56 = &v53[v55];
  uint64_t v57 = &v54[v55];
  uint64_t v58 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = *(int *)(a3 + 292);
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  uint64_t v62 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = *(int *)(a3 + 296);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  uint64_t v67 = *(int *)(a3 + 300);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  if (v72(v69, 1, v70))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v74 = *(int *)(a3 + 304);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  if (v72(&a2[v74], 1, v70))
  {
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v75, v76, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v75, 0, 1, v70);
  }
  uint64_t v78 = *(int *)(a3 + 308);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  uint64_t v81 = sub_24EE55A60();
  uint64_t v82 = *(void *)(v81 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
  {
    uint64_t v83 = sub_24EE57430();
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v79, v80, v81);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  uint64_t v84 = *(int *)(a3 + 312);
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  uint64_t v87 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
  uint64_t v88 = *(int *)(a3 + 316);
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
  *((void *)v89 + 2) = *((void *)v90 + 2);
  return a1;
}

char *sub_24ED92BF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 104);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, 1, v8);
  int v12 = v10(a2, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v8);
      goto LABEL_7;
    }
    uint64_t v22 = sub_24EE55880();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
    uint64_t v23 = *(int *)(v8 + 52);
    uint64_t v24 = &a2[v23];
    uint64_t v119 = *(void *)(v7 - 8);
    uint64_t v25 = *(uint64_t (**)(void))(v119 + 48);
    uint64_t v121 = &a1[v23];
    int v26 = v25();
    int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v24, 1, v7);
    if (v26)
    {
      if (v27)
      {
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v121;
LABEL_48:
        memcpy(v29, v24, v28);
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v121, v24, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v121, 0, 1, v7);
    }
    else
    {
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v7);
        size_t v28 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
        uint64_t v29 = v121;
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v121, v24, v7);
    }
LABEL_51:
    uint64_t v113 = *(int *)(v8 + 56);
    uint64_t v114 = &a2[v113];
    uint64_t v115 = *(void *)(v6 - 8);
    uint64_t v116 = *(uint64_t (**)(void))(v115 + 48);
    __src = &a1[v113];
    int v117 = v116();
    int v118 = ((uint64_t (*)(char *, uint64_t, uint64_t))v116)(v114, 1, v6);
    if (v117)
    {
      if (!v118)
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 32))(__src, v114, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(__src, 0, 1, v6);
        goto LABEL_17;
      }
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v114;
    }
    else
    {
      if (!v118)
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 40))(__src, v114, v6);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v115 + 8))(__src, v6);
      size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
      uint64_t v20 = __src;
      uint64_t v21 = v114;
    }
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_24EE57430() - 8) + 64);
    uint64_t v20 = a1;
    uint64_t v21 = a2;
    goto LABEL_8;
  }
  uint64_t v13 = sub_24EE55880();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  uint64_t v14 = *(int *)(v8 + 52);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v7))
  {
    uint64_t v18 = sub_24EE57430();
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v16, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v7);
  }
  uint64_t v30 = *(int *)(v8 + 56);
  uint64_t v31 = &a1[v30];
  long long v32 = &a2[v30];
  uint64_t v33 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v6))
  {
    uint64_t v34 = sub_24EE57430();
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v6);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
LABEL_17:
  *(void *)&a1[*(int *)(a3 + 244)] = *(void *)&a2[*(int *)(a3 + 244)];
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(a3 + 252);
  a1[*(int *)(a3 + 248)] = a2[*(int *)(a3 + 248)];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)(a3 + 120);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(&a1[v35], 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_22:
    uint64_t v43 = sub_24EE57430();
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
LABEL_23:
  uint64_t v44 = *(int *)(a3 + 256);
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  long long v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  uint64_t v48 = *(int *)(a3 + 260);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  *((void *)v49 + 2) = *((void *)v50 + 2);
  a1[*(int *)(a3 + 264)] = a2[*(int *)(a3 + 264)];
  (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 128) - 8) + 40))(&a1[*(int *)(a3 + 268)], &a2[*(int *)(a3 + 268)]);
  uint64_t v51 = *(int *)(a3 + 272);
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = *(int *)(a3 + 276);
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  uint64_t v58 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = *(int *)(a3 + 280);
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  uint64_t v62 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = *(int *)(a3 + 284);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  uint64_t v67 = *(int *)(a3 + 288);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  *(_OWORD *)&a1[v67] = *(_OWORD *)&a2[v67];
  swift_release();
  uint64_t v70 = *(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44);
  uint64_t v71 = &v68[v70];
  uint64_t v72 = &v69[v70];
  uint64_t v73 = sub_24EE55A00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 40))(v71, v72, v73);
  uint64_t v74 = *(int *)(a3 + 292);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
  uint64_t v78 = *(int *)(a3 + 296);
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  swift_getTupleTypeMetadata2();
  uint64_t v81 = sub_24EE559E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 40))(v79, v80, v81);
  uint64_t v82 = *(int *)(a3 + 300);
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  LODWORD(v65) = v87(v83, 1, v85);
  int v88 = v87(v84, 1, v85);
  if (v65)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v84, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
LABEL_28:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_29:
  uint64_t v90 = *(int *)(a3 + 304);
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = v87(&a1[v90], 1, v85);
  int v94 = v87(v92, 1, v85);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v91, v92, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v91, 0, 1, v85);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v85);
LABEL_34:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v91, v92, v85);
LABEL_35:
  uint64_t v96 = *(int *)(a3 + 308);
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = sub_24EE55A60();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  int v102 = v101(v97, 1, v99);
  int v103 = v101(v98, 1, v99);
  if (!v102)
  {
    if (!v103)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v97, v98, v99);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v99);
    goto LABEL_40;
  }
  if (v103)
  {
LABEL_40:
    uint64_t v104 = sub_24EE57430();
    memcpy(v97, v98, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
LABEL_41:
  uint64_t v105 = *(int *)(a3 + 312);
  unint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  uint64_t v108 = sub_24EE55940();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 40))(v106, v107, v108);
  uint64_t v109 = *(int *)(a3 + 316);
  uint64_t v110 = &a1[v109];
  uint64_t v111 = &a2[v109];
  *(void *)uint64_t v110 = *(void *)v111;
  v110[8] = v111[8];
  *((void *)v110 + 2) = *((void *)v111 + 2);
  swift_release();
  return a1;
}

uint64_t sub_24ED93ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24ED93AD0);
}

uint64_t sub_24ED93AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t v6 = sub_24EE57430();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 244));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
  else
  {
    uint64_t v10 = sub_24EE57430();
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 - 8);
      uint64_t v13 = *(int *)(a3 + 252);
    }
    else
    {
      uint64_t v11 = *(void *)(a3 + 128);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
      {
        uint64_t v12 = *(void *)(*(void *)(a3 + 128) - 8);
        uint64_t v13 = *(int *)(a3 + 268);
      }
      else
      {
        uint64_t v14 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
        {
          uint64_t v11 = v14;
          uint64_t v12 = *(void *)(v14 - 8);
          uint64_t v13 = *(int *)(a3 + 272);
        }
        else
        {
          uint64_t v15 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
          {
            uint64_t v11 = v15;
            uint64_t v12 = *(void *)(v15 - 8);
            uint64_t v13 = *(int *)(a3 + 276);
          }
          else
          {
            uint64_t v16 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
            {
              uint64_t v11 = v16;
              uint64_t v12 = *(void *)(v16 - 8);
              uint64_t v13 = *(int *)(a3 + 280);
            }
            else
            {
              sub_24EE57430();
              __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
              swift_getTupleTypeMetadata2();
              uint64_t v17 = sub_24EE559E0();
              if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
              {
                uint64_t v11 = v17;
                uint64_t v12 = *(void *)(v17 - 8);
                uint64_t v13 = *(int *)(a3 + 284);
              }
              else
              {
                uint64_t v18 = type metadata accessor for EquatableViewModifierBuilder();
                if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
                {
                  uint64_t v11 = v18;
                  uint64_t v12 = *(void *)(v18 - 8);
                  uint64_t v13 = *(int *)(a3 + 288);
                }
                else
                {
                  uint64_t v19 = sub_24EE559E0();
                  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
                  {
                    uint64_t v11 = v19;
                    uint64_t v12 = *(void *)(v19 - 8);
                    uint64_t v13 = *(int *)(a3 + 292);
                  }
                  else
                  {
                    swift_getTupleTypeMetadata2();
                    uint64_t v20 = sub_24EE559E0();
                    if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
                    {
                      uint64_t v11 = v20;
                      uint64_t v12 = *(void *)(v20 - 8);
                      uint64_t v13 = *(int *)(a3 + 296);
                    }
                    else
                    {
                      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                      if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
                      {
                        uint64_t v11 = v21;
                        uint64_t v12 = *(void *)(v21 - 8);
                        uint64_t v13 = *(int *)(a3 + 300);
                      }
                      else
                      {
                        sub_24EE55A60();
                        uint64_t v22 = sub_24EE57430();
                        if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a2)
                        {
                          uint64_t v23 = sub_24EE55940();
                          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(a1 + *(int *)(a3 + 312), a2, v23);
                        }
                        uint64_t v11 = v22;
                        uint64_t v12 = *(void *)(v22 - 8);
                        uint64_t v13 = *(int *)(a3 + 308);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v13, a2, v11);
  }
}

uint64_t sub_24ED94024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24ED94038);
}

uint64_t sub_24ED94038(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CanvasSectionHeader();
  uint64_t result = sub_24EE57430();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 244)) = (a2 - 1);
    return result;
  }
  uint64_t v10 = sub_24EE57430();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a3)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(int *)(a4 + 252);
  }
  else
  {
    uint64_t v11 = *(void *)(a4 + 128);
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a3)
    {
      uint64_t v12 = *(void *)(*(void *)(a4 + 128) - 8);
      uint64_t v13 = *(int *)(a4 + 268);
    }
    else
    {
      uint64_t v14 = sub_24EE559E0();
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
      {
        uint64_t v11 = v14;
        uint64_t v12 = *(void *)(v14 - 8);
        uint64_t v13 = *(int *)(a4 + 272);
      }
      else
      {
        uint64_t v15 = sub_24EE559E0();
        if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
        {
          uint64_t v11 = v15;
          uint64_t v12 = *(void *)(v15 - 8);
          uint64_t v13 = *(int *)(a4 + 276);
        }
        else
        {
          uint64_t v16 = sub_24EE559E0();
          if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
          {
            uint64_t v11 = v16;
            uint64_t v12 = *(void *)(v16 - 8);
            uint64_t v13 = *(int *)(a4 + 280);
          }
          else
          {
            sub_24EE57430();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
            swift_getTupleTypeMetadata2();
            uint64_t v17 = sub_24EE559E0();
            if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
            {
              uint64_t v11 = v17;
              uint64_t v12 = *(void *)(v17 - 8);
              uint64_t v13 = *(int *)(a4 + 284);
            }
            else
            {
              uint64_t v18 = type metadata accessor for EquatableViewModifierBuilder();
              if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
              {
                uint64_t v11 = v18;
                uint64_t v12 = *(void *)(v18 - 8);
                uint64_t v13 = *(int *)(a4 + 288);
              }
              else
              {
                uint64_t v19 = sub_24EE559E0();
                if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
                {
                  uint64_t v11 = v19;
                  uint64_t v12 = *(void *)(v19 - 8);
                  uint64_t v13 = *(int *)(a4 + 292);
                }
                else
                {
                  swift_getTupleTypeMetadata2();
                  uint64_t v20 = sub_24EE559E0();
                  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
                  {
                    uint64_t v11 = v20;
                    uint64_t v12 = *(void *)(v20 - 8);
                    uint64_t v13 = *(int *)(a4 + 296);
                  }
                  else
                  {
                    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F0);
                    if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
                    {
                      uint64_t v11 = v21;
                      uint64_t v12 = *(void *)(v21 - 8);
                      uint64_t v13 = *(int *)(a4 + 300);
                    }
                    else
                    {
                      sub_24EE55A60();
                      uint64_t v22 = sub_24EE57430();
                      if (*(_DWORD *)(*(void *)(v22 - 8) + 84) != a3)
                      {
                        uint64_t v23 = sub_24EE55940();
                        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8)
                                                                                             + 56))(a1 + *(int *)(a4 + 312), a2, a2, v23);
                      }
                      uint64_t v11 = v22;
                      uint64_t v12 = *(void *)(v22 - 8);
                      uint64_t v13 = *(int *)(a4 + 308);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1 + v13, a2, a2, v11);
}

uint64_t sub_24ED94594()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24ED95888()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED85494);
}

uint64_t sub_24ED958A0()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED8E10C);
}

uint64_t sub_24ED958B8()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED8F244);
}

uint64_t sub_24ED958D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = v2[3];
  uint64_t v40 = v2[2];
  uint64_t v37 = v2[5];
  uint64_t v38 = v2[4];
  uint64_t v35 = v2[7];
  uint64_t v36 = v2[6];
  uint64_t v33 = v2[9];
  uint64_t v34 = v2[8];
  uint64_t v31 = v2[11];
  uint64_t v32 = v2[10];
  uint64_t v29 = v2[13];
  uint64_t v30 = v2[12];
  uint64_t v27 = v2[15];
  uint64_t v28 = v2[14];
  uint64_t v25 = v2[17];
  uint64_t v26 = v2[16];
  uint64_t v23 = v2[19];
  uint64_t v24 = v2[18];
  uint64_t v3 = v2[21];
  uint64_t v22 = v2[20];
  uint64_t v4 = v2[22];
  uint64_t v5 = v2[23];
  uint64_t v6 = v2[24];
  uint64_t v7 = v2[25];
  uint64_t v9 = v2[26];
  uint64_t v8 = v2[27];
  uint64_t v11 = v2[28];
  uint64_t v10 = (void (*)(void))v2[29];
  type metadata accessor for OrthogonalView();
  *(void *)&long long v21 = v9;
  *((void *)&v21 + 1) = v8;
  *(void *)&long long v20 = v6;
  *((void *)&v20 + 1) = v7;
  *(void *)&long long v19 = v4;
  *((void *)&v19 + 1) = v5;
  *(void *)&long long v18 = v22;
  *((void *)&v18 + 1) = v3;
  *(void *)&long long v17 = v26;
  *((void *)&v17 + 1) = v25;
  *(void *)&long long v16 = v28;
  *((void *)&v16 + 1) = v27;
  *(void *)&long long v15 = v30;
  *((void *)&v15 + 1) = v29;
  *(void *)&long long v14 = v32;
  *((void *)&v14 + 1) = v31;
  *(void *)&long long v13 = v34;
  *((void *)&v13 + 1) = v33;
  return sub_24ED8ED04(a1, v40, v39, v38, v37, v36, v35, a2, v13, v14, v15, v16, v17, v24, v23, v18, v19, v20, v21,
           v11,
           v10);
}

uint64_t sub_24ED95A74()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED86960);
}

uint64_t sub_24ED95A8C()
{
  return sub_24ED95AA4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ED87F90);
}

uint64_t sub_24ED95AA4(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[30], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19],
           v1[20],
           v1[21],
           v1[22],
           v1[23],
           v1[24],
           v1[25],
           v1[26],
           v1[27],
           v1[28],
           v1[29]);
}

uint64_t sub_24ED95B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = v3[3];
  uint64_t v33 = v3[2];
  uint64_t v30 = v3[5];
  uint64_t v31 = v3[4];
  uint64_t v28 = v3[7];
  uint64_t v29 = v3[6];
  uint64_t v26 = v3[9];
  uint64_t v27 = v3[8];
  uint64_t v24 = v3[11];
  uint64_t v25 = v3[10];
  uint64_t v22 = v3[13];
  uint64_t v23 = v3[12];
  uint64_t v20 = v3[15];
  uint64_t v21 = v3[14];
  uint64_t v18 = v3[17];
  uint64_t v19 = v3[16];
  uint64_t v16 = v3[19];
  uint64_t v17 = v3[18];
  uint64_t v4 = v3[21];
  uint64_t v15 = v3[20];
  uint64_t v5 = v3[22];
  uint64_t v6 = v3[23];
  uint64_t v7 = v3[24];
  uint64_t v8 = v3[25];
  uint64_t v9 = v3[26];
  uint64_t v10 = v3[27];
  uint64_t v12 = v3[28];
  uint64_t v11 = v3[29];
  uint64_t v13 = *(void *)(type metadata accessor for OrthogonalView() - 8);
  return sub_24ED893A4(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v33, v32, v31, v30, v29, a3, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19,
           v18,
           v17,
           v16,
           v15,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10,
           v12,
           v11);
}

uint64_t sub_24ED95CD4()
{
  uint64_t v42 = *((void *)v0 + 2);
  uint64_t v1 = *((void *)v0 + 18);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v46 = *(void *)(v2 + 64);
  uint64_t v4 = *((void *)v0 + 13);
  uint64_t v43 = *((void *)v0 + 15);
  uint64_t v44 = *((void *)v0 + 16);
  uint64_t v5 = (int *)type metadata accessor for OrthogonalView();
  uint64_t v45 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v3], v1);
  uint64_t v6 = &v0[(v3 + v46 + v45) & ~v45];
  uint64_t v7 = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
  {
    uint64_t v9 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    uint64_t v10 = &v6[*(int *)(v8 + 52)];
    uint64_t v11 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v7)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
    }
    uint64_t v12 = &v6[*(int *)(v8 + 56)];
    uint64_t v13 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v42)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v42);
    }
  }
  swift_bridgeObjectRelease();
  long long v14 = &v6[v5[63]];
  uint64_t v15 = *(void *)(v43 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v43)) {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v14, v43);
  }
  (*(void (**)(char *))(*(void *)(v44 - 8) + 8))(&v6[v5[67]]);
  uint64_t v16 = &v6[v5[68]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v6[v5[69]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v6[v5[70]];
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = &v6[v5[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v23 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = &v6[v5[72]];
  swift_release();
  uint64_t v25 = &v24[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v26 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v6[v5[73]];
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = &v6[v5[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v30 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = &v6[v5[75]];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (!v34(v31, 1, v32)) {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
  }
  uint64_t v35 = &v6[v5[76]];
  if (!v34(v35, 1, v32)) {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  }
  uint64_t v36 = &v6[v5[77]];
  uint64_t v37 = sub_24EE55A60();
  uint64_t v38 = *(void *)(v37 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  }
  uint64_t v39 = &v6[v5[78]];
  uint64_t v40 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24ED96590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = v1[2];
  uint64_t v23 = v1[4];
  unint64_t v24 = v1[3];
  unint64_t v21 = v1[6];
  uint64_t v22 = v1[5];
  uint64_t v19 = v1[8];
  uint64_t v20 = v1[7];
  uint64_t v17 = v1[10];
  uint64_t v18 = v1[9];
  uint64_t v15 = v1[12];
  uint64_t v16 = v1[11];
  uint64_t v13 = v1[14];
  uint64_t v14 = v1[13];
  uint64_t v11 = v1[16];
  uint64_t v12 = v1[15];
  uint64_t v10 = v1[17];
  uint64_t v8 = v1[19];
  uint64_t v9 = v1[18];
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v9 - 8) + 64);
  uint64_t v27 = v1[20];
  uint64_t v28 = v1[21];
  uint64_t v29 = v1[22];
  uint64_t v30 = v1[23];
  uint64_t v31 = v1[24];
  uint64_t v32 = v1[25];
  uint64_t v33 = v1[26];
  uint64_t v34 = v1[27];
  uint64_t v35 = v1[28];
  uint64_t v36 = v1[29];
  uint64_t v2 = *(void *)(type metadata accessor for OrthogonalView() - 8);
  unint64_t v3 = (v7 + v6 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  *(void *)&long long v5 = v19;
  *((void *)&v5 + 1) = v18;
  return sub_24ED8A8B8((uint64_t)v1 + v7, (uint64_t)v1 + v3, *(void *)((char *)v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8)), v25, v24, v23, v22, v21, a1, v20, v5, v17, v16, v15, v14, v13, v12, v11, v10,
           v9,
           v8,
           v27,
           v28,
           v29,
           v30,
           v31,
           v32,
           v33,
           v34,
           v35,
           v36);
}

uint64_t sub_24ED967F4()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 13);
  uint64_t v3 = *((void *)v0 + 15);
  uint64_t v4 = *((void *)v0 + 18);
  uint64_t v41 = *((void *)v0 + 16);
  long long v5 = (int *)type metadata accessor for OrthogonalView();
  uint64_t v45 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v43 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v44 = (v45 + 240) & ~v45;
  uint64_t v6 = &v0[v44];
  uint64_t v47 = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(&v0[v44], 1, v7))
  {
    uint64_t v8 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    uint64_t v9 = &v6[*(int *)(v7 + 52)];
    uint64_t v10 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v2)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v2);
    }
    uint64_t v11 = &v6[*(int *)(v7 + 56)];
    uint64_t v12 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = &v6[v5[63]];
  uint64_t v14 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v3);
  }
  (*(void (**)(char *))(*(void *)(v41 - 8) + 8))(&v6[v5[67]]);
  uint64_t v15 = &v6[v5[68]];
  uint64_t v16 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = &v6[v5[69]];
  uint64_t v18 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = &v6[v5[70]];
  uint64_t v20 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  unint64_t v21 = &v6[v5[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = &v6[v5[72]];
  swift_release();
  unint64_t v24 = &v23[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v25 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = &v6[v5[73]];
  uint64_t v27 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = &v6[v5[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v29 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = &v6[v5[75]];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (!v33(v30, 1, v31)) {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v34 = &v6[v5[76]];
  if (!v33(v34, 1, v31)) {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  }
  uint64_t v35 = &v6[v5[77]];
  uint64_t v36 = sub_24EE55A60();
  uint64_t v37 = *(void *)(v36 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v38 = &v6[v5[78]];
  uint64_t v39 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(&v0[(v44 + v43 + v42) & ~v42], v47);
  return swift_deallocObject();
}

uint64_t sub_24ED97070()
{
  uint64_t v37 = v0[3];
  uint64_t v38 = v0[2];
  uint64_t v35 = v0[5];
  uint64_t v36 = v0[4];
  uint64_t v33 = v0[7];
  uint64_t v34 = v0[6];
  uint64_t v31 = v0[9];
  uint64_t v32 = v0[8];
  uint64_t v29 = v0[11];
  uint64_t v30 = v0[10];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[12];
  uint64_t v25 = v0[15];
  uint64_t v26 = v0[14];
  uint64_t v23 = v0[17];
  uint64_t v24 = v0[16];
  uint64_t v1 = v0[18];
  uint64_t v21 = v0[20];
  uint64_t v22 = v0[19];
  uint64_t v20 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v9 = v0[29];
  uint64_t v10 = *(void *)(type metadata accessor for OrthogonalView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  *((void *)&v19 + 1) = v6;
  *((void *)&v18 + 1) = v4;
  *(void *)&long long v19 = v5;
  *((void *)&v17 + 1) = v2;
  *(void *)&long long v18 = v3;
  *((void *)&v16 + 1) = v21;
  *(void *)&long long v17 = v20;
  *(void *)&long long v16 = v22;
  *(void *)&long long v15 = v26;
  *((void *)&v15 + 1) = v25;
  *(void *)&long long v14 = v28;
  *((void *)&v14 + 1) = v27;
  *(void *)&long long v13 = v32;
  *((void *)&v13 + 1) = v31;
  return sub_24ED8CF64((uint64_t)v0 + v11, (uint64_t)v0+ ((v11 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v38, v37, v36, v35, v34, v33, v13, v30, v29, v14, v15, v24, v23, v1, v16, v17,
           v18,
           v19,
           v7,
           v8,
           v9);
}

uint64_t sub_24ED97260(uint64_t a1)
{
  return sub_24ED97294(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED8D36C);
}

uint64_t sub_24ED9727C(uint64_t a1)
{
  return sub_24ED97294(a1, (uint64_t (*)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED8D7A4);
}

uint64_t sub_24ED97294(uint64_t a1, uint64_t (*a2)(uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v32 = *((void *)v2 + 3);
  uint64_t v33 = *((void *)v2 + 2);
  uint64_t v30 = *((void *)v2 + 5);
  uint64_t v31 = *((void *)v2 + 4);
  uint64_t v28 = *((void *)v2 + 7);
  uint64_t v29 = *((void *)v2 + 6);
  uint64_t v26 = *((void *)v2 + 9);
  uint64_t v27 = *((void *)v2 + 8);
  uint64_t v24 = *((void *)v2 + 11);
  uint64_t v25 = *((void *)v2 + 10);
  uint64_t v22 = *((void *)v2 + 13);
  uint64_t v23 = *((void *)v2 + 12);
  uint64_t v20 = *((void *)v2 + 15);
  uint64_t v21 = *((void *)v2 + 14);
  uint64_t v18 = *((void *)v2 + 17);
  uint64_t v19 = *((void *)v2 + 16);
  uint64_t v16 = *((void *)v2 + 19);
  uint64_t v17 = *((void *)v2 + 18);
  uint64_t v3 = *((void *)v2 + 21);
  uint64_t v15 = *((void *)v2 + 20);
  uint64_t v4 = *((void *)v2 + 22);
  uint64_t v5 = *((void *)v2 + 23);
  uint64_t v6 = *((void *)v2 + 24);
  uint64_t v7 = *((void *)v2 + 25);
  uint64_t v8 = *((void *)v2 + 26);
  uint64_t v9 = *((void *)v2 + 27);
  uint64_t v11 = *((void *)v2 + 28);
  uint64_t v10 = *((void *)v2 + 29);
  uint64_t v12 = *(void *)(type metadata accessor for OrthogonalView() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return a2(a1, &v2[v13], *(void *)&v2[(*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8], v33, v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18,
           v17,
           v16,
           v15,
           v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v11,
           v10);
}

uint64_t sub_24ED97478()
{
  return sub_24ED97CB0((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED8DBD4);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[15];
  uint64_t v40 = v0[16];
  uint64_t v4 = (int *)type metadata accessor for OrthogonalView();
  uint64_t v41 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (char *)v0 + ((v41 + 240) & ~v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for CanvasSectionHeader();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_24EE55880();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = &v5[*(int *)(v6 + 52)];
    uint64_t v9 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v8, 1)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v2);
    }
    uint64_t v10 = &v5[*(int *)(v6 + 56)];
    uint64_t v11 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v1)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v1);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = &v5[v4[63]];
  uint64_t v13 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v3)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v3);
  }
  (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(&v5[v4[67]]);
  long long v14 = &v5[v4[68]];
  uint64_t v15 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = &v5[v4[69]];
  uint64_t v17 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = &v5[v4[70]];
  uint64_t v19 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = &v5[v4[71]];
  sub_24EE57430();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE560);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = &v5[v4[72]];
  swift_release();
  uint64_t v23 = &v22[*(int *)(type metadata accessor for EquatableViewModifierBuilder() + 44)];
  uint64_t v24 = sub_24EE55A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = &v5[v4[73]];
  uint64_t v26 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = &v5[v4[74]];
  swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_24EE559E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = &v5[v4[75]];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699654F8);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (!v32(v29, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  uint64_t v33 = &v5[v4[76]];
  if (!v32(v33, 1, v30)) {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  uint64_t v34 = &v5[v4[77]];
  uint64_t v35 = sub_24EE55A60();
  uint64_t v36 = *(void *)(v35 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  }
  uint64_t v37 = &v5[v4[78]];
  uint64_t v38 = sub_24EE55940();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24ED97C98()
{
  return sub_24ED97CB0((uint64_t (*)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24ED8DE70);
}

uint64_t sub_24ED97CB0(uint64_t (*a1)(char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v32 = *((void *)v1 + 2);
  uint64_t v30 = *((void *)v1 + 4);
  uint64_t v31 = *((void *)v1 + 3);
  uint64_t v28 = *((void *)v1 + 6);
  uint64_t v29 = *((void *)v1 + 5);
  uint64_t v26 = *((void *)v1 + 8);
  uint64_t v27 = *((void *)v1 + 7);
  uint64_t v24 = *((void *)v1 + 10);
  uint64_t v25 = *((void *)v1 + 9);
  uint64_t v22 = *((void *)v1 + 12);
  uint64_t v23 = *((void *)v1 + 11);
  uint64_t v20 = *((void *)v1 + 14);
  uint64_t v21 = *((void *)v1 + 13);
  uint64_t v18 = *((void *)v1 + 16);
  uint64_t v19 = *((void *)v1 + 15);
  uint64_t v16 = *((void *)v1 + 18);
  uint64_t v17 = *((void *)v1 + 17);
  uint64_t v2 = *((void *)v1 + 21);
  uint64_t v14 = *((void *)v1 + 20);
  uint64_t v15 = *((void *)v1 + 19);
  uint64_t v3 = *((void *)v1 + 22);
  uint64_t v4 = *((void *)v1 + 23);
  uint64_t v5 = *((void *)v1 + 24);
  uint64_t v6 = *((void *)v1 + 25);
  uint64_t v7 = *((void *)v1 + 26);
  uint64_t v8 = *((void *)v1 + 27);
  uint64_t v9 = *((void *)v1 + 28);
  uint64_t v10 = *((void *)v1 + 29);
  uint64_t v11 = *(void *)(type metadata accessor for OrthogonalView() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a1(&v1[v12], *(void *)&v1[(*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8], v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, v16,
           v15,
           v14,
           v2,
           v3,
           v4,
           v5,
           v6,
           v7,
           v8,
           v9,
           v10);
}

uint64_t sub_24ED97E7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24ED97F78(char a1)
{
  if (a1) {
    return 0x6C6F686563616C70;
  }
  else {
    return 1835365481;
  }
}

BOOL sub_24ED97FB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24ECB08AC(*a1, *a2);
}

uint64_t sub_24ED98004()
{
  return sub_24ECB0B4C();
}

uint64_t sub_24ED98058()
{
  return sub_24ECB08BC();
}

uint64_t sub_24ED980A4()
{
  return sub_24EE578B0();
}

uint64_t sub_24ED9810C()
{
  return sub_24ED97F78(*v0);
}

uint64_t sub_24ED98160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ED97E7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24ED981B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ECB370C();
  *a1 = result;
  return result;
}

uint64_t sub_24ED9820C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED98260(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ED982B8@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ED983EC(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24ECB0F04, a2);
}

uint64_t sub_24ED982D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED98324(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24ED98378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24ECB0BC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24ED983D4@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24ED983EC(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EDAC798, a2);
}

uint64_t sub_24ED983EC@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24ED9844C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24ED984A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t LazyCanvasItemDescriptor.encode(to:)(void *a1, void *a2)
{
  uint64_t v74 = a1;
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[5];
  uint64_t v76 = a2[4];
  uint64_t v7 = a2[6];
  uint64_t v6 = a2[7];
  uint64_t v8 = a2[9];
  uint64_t v78 = a2[8];
  uint64_t v79 = v4;
  uint64_t v72 = v8;
  uint64_t v9 = a2[11];
  uint64_t v77 = a2[10];
  uint64_t v10 = a2[12];
  uint64_t v11 = a2[13];
  uint64_t v71 = a2[14];
  uint64_t v70 = a2[15];
  uint64_t v82 = v3;
  uint64_t v83 = v4;
  uint64_t v12 = v3;
  uint64_t v96 = v3;
  uint64_t v84 = v76;
  uint64_t v85 = v5;
  uint64_t v86 = v7;
  uint64_t v87 = v6;
  uint64_t v13 = v7;
  uint64_t v81 = v7;
  uint64_t v14 = v6;
  uint64_t v67 = v6;
  uint64_t v88 = v78;
  uint64_t v89 = v8;
  uint64_t v90 = v77;
  uint64_t v91 = v9;
  uint64_t v92 = v10;
  uint64_t v93 = v11;
  uint64_t v15 = v10;
  uint64_t v94 = v71;
  uint64_t v95 = v70;
  uint64_t v60 = type metadata accessor for LazyCanvasItemDescriptor.PlaceholderCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = sub_24EE577C0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v61 = (char *)v51 - v16;
  uint64_t v80 = v5;
  uint64_t v82 = v5;
  uint64_t v83 = v9;
  uint64_t v68 = v9;
  uint64_t v17 = v15;
  uint64_t v66 = v15;
  uint64_t v84 = v15;
  uint64_t v85 = v11;
  uint64_t v63 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v58 = (char *)v51 - v18;
  uint64_t v82 = v12;
  uint64_t v19 = v78;
  uint64_t v20 = v79;
  uint64_t v83 = v79;
  uint64_t v84 = v76;
  uint64_t v85 = v5;
  uint64_t v86 = v13;
  uint64_t v87 = v14;
  uint64_t v88 = v78;
  uint64_t v21 = v72;
  uint64_t v22 = v77;
  uint64_t v89 = v72;
  uint64_t v90 = v77;
  uint64_t v91 = v9;
  uint64_t v92 = v17;
  uint64_t v69 = v11;
  uint64_t v23 = v71;
  uint64_t v93 = v11;
  uint64_t v94 = v71;
  uint64_t v24 = v70;
  uint64_t v95 = v70;
  uint64_t v25 = type metadata accessor for LazyCanvasItemDescriptor.ItemCodingKeys();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v54 = v25;
  v51[1] = v26;
  uint64_t v57 = sub_24EE577C0();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)v51 - v27;
  uint64_t v82 = v96;
  uint64_t v83 = v20;
  uint64_t v28 = v76;
  uint64_t v84 = v76;
  uint64_t v85 = v80;
  uint64_t v29 = v67;
  uint64_t v86 = v81;
  uint64_t v87 = v67;
  uint64_t v88 = v19;
  uint64_t v89 = v21;
  uint64_t v90 = v22;
  uint64_t v30 = v68;
  uint64_t v31 = v66;
  uint64_t v91 = v68;
  uint64_t v92 = v66;
  uint64_t v93 = v11;
  uint64_t v94 = v23;
  uint64_t v95 = v24;
  uint64_t v32 = v24;
  uint64_t v53 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  v51[0] = (char *)v51 - v33;
  uint64_t v73 = *(a2 - 1);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v96;
  uint64_t v83 = v79;
  uint64_t v84 = v28;
  uint64_t v85 = v80;
  uint64_t v86 = v81;
  uint64_t v87 = v29;
  uint64_t v88 = v78;
  uint64_t v89 = v21;
  uint64_t v90 = v77;
  uint64_t v91 = v30;
  uint64_t v92 = v31;
  uint64_t v93 = v69;
  uint64_t v94 = v23;
  uint64_t v95 = v32;
  type metadata accessor for LazyCanvasItemDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v96 = sub_24EE577C0();
  uint64_t v81 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v38 = (char *)v51 - v37;
  __swift_project_boxed_opaque_existential_1(v74, v74[3]);
  sub_24EE578D0();
  (*(void (**)(char *, uint64_t, void *))(v73 + 16))(v36, v75, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = v62;
    uint64_t v40 = v58;
    uint64_t v41 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v58, v36, v63);
    LOBYTE(v82) = 1;
    uint64_t v42 = v61;
    uint64_t v43 = v96;
    sub_24EE57740();
    swift_getWitnessTable();
    uint64_t v44 = v65;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v44);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  }
  else
  {
    uint64_t v45 = v52;
    uint64_t v46 = v51[0];
    uint64_t v47 = v53;
    (*(void (**)(void, char *, uint64_t))(v52 + 32))(v51[0], v36, v53);
    LOBYTE(v82) = 0;
    uint64_t v48 = v55;
    uint64_t v43 = v96;
    sub_24EE57740();
    swift_getWitnessTable();
    uint64_t v49 = v57;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v49);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v38, v43);
}

uint64_t type metadata accessor for LazyCanvasItemDescriptor.PlaceholderCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for LazyCanvasItemDescriptor.ItemCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for LazyCanvasItemDescriptor.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t LazyCanvasItemDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v119 = a8;
  uint64_t v104 = a6;
  uint64_t v101 = a1;
  uint64_t v75 = a9;
  uint64_t v95 = a16;
  uint64_t v94 = a15;
  uint64_t v99 = a12;
  uint64_t v102 = a11;
  *(void *)&long long v107 = a2;
  *((void *)&v107 + 1) = a3;
  *(void *)&long long v103 = a2;
  *((void *)&v103 + 1) = a3;
  *(void *)&long long v108 = a4;
  *((void *)&v108 + 1) = a5;
  uint64_t v93 = a4;
  uint64_t v109 = a6;
  uint64_t v110 = a7;
  uint64_t v111 = a8;
  uint64_t v112 = a10;
  uint64_t v92 = a10;
  uint64_t v113 = a11;
  uint64_t v114 = a12;
  uint64_t v115 = a13;
  uint64_t v116 = a14;
  uint64_t v100 = a13;
  uint64_t v98 = a14;
  uint64_t v117 = a15;
  uint64_t v118 = a16;
  uint64_t v85 = type metadata accessor for LazyCanvasItemDescriptor.PlaceholderCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v78 = sub_24EE57730();
  uint64_t v80 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v86 = (char *)&v71 - v21;
  *(void *)&long long v107 = a2;
  *((void *)&v107 + 1) = a3;
  *(void *)&long long v108 = a4;
  *((void *)&v108 + 1) = a5;
  uint64_t v22 = a5;
  uint64_t v97 = a5;
  uint64_t v23 = v104;
  uint64_t v109 = v104;
  uint64_t v110 = a7;
  uint64_t v24 = a7;
  uint64_t v96 = a7;
  uint64_t v25 = v119;
  uint64_t v111 = v119;
  uint64_t v112 = a10;
  uint64_t v113 = a11;
  uint64_t v114 = a12;
  uint64_t v115 = a13;
  uint64_t v116 = a14;
  uint64_t v117 = a15;
  uint64_t v118 = a16;
  uint64_t v26 = type metadata accessor for LazyCanvasItemDescriptor.ItemCodingKeys();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v82 = v26;
  uint64_t v81 = v27;
  uint64_t v77 = sub_24EE57730();
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v83 = (char *)&v71 - v28;
  long long v107 = v103;
  uint64_t v29 = v93;
  *(void *)&long long v108 = v93;
  *((void *)&v108 + 1) = v22;
  uint64_t v109 = v23;
  uint64_t v110 = v24;
  uint64_t v30 = v92;
  uint64_t v111 = v25;
  uint64_t v112 = v92;
  uint64_t v113 = a11;
  uint64_t v114 = a12;
  uint64_t v31 = v100;
  uint64_t v32 = v98;
  uint64_t v115 = v100;
  uint64_t v116 = v98;
  uint64_t v117 = a15;
  uint64_t v118 = a16;
  type metadata accessor for LazyCanvasItemDescriptor.CodingKeys();
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v89 = sub_24EE57730();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v34 = (char *)&v71 - v33;
  long long v107 = v103;
  uint64_t v35 = v29;
  uint64_t v36 = v34;
  *(void *)&long long v108 = v35;
  uint64_t v37 = v101;
  *((void *)&v108 + 1) = v97;
  uint64_t v109 = v104;
  uint64_t v110 = v96;
  uint64_t v111 = v119;
  uint64_t v112 = v30;
  uint64_t v113 = v102;
  uint64_t v114 = a12;
  uint64_t v115 = v31;
  uint64_t v116 = v32;
  uint64_t v117 = a15;
  uint64_t v118 = a16;
  uint64_t v88 = type metadata accessor for LazyCanvasItemDescriptor();
  uint64_t v76 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v39 = (char *)&v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v71 - v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v71 - v44;
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v46 = v91;
  sub_24EE578C0();
  if (!v46)
  {
    uint64_t v73 = v39;
    uint64_t v74 = v42;
    uint64_t v72 = v45;
    uint64_t v47 = v88;
    uint64_t v90 = 0;
    uint64_t v48 = v89;
    uint64_t v91 = v36;
    *(void *)&long long v107 = sub_24EE57720();
    sub_24EE571B0();
    swift_getWitnessTable();
    *(void *)&long long v105 = sub_24EE57480();
    *((void *)&v105 + 1) = v49;
    *(void *)&long long v106 = v50;
    *((void *)&v106 + 1) = v51;
    sub_24EE57470();
    swift_getWitnessTable();
    sub_24EE573A0();
    char v52 = v107;
    if (v107 == 2 || (long long v71 = v105, v107 = v105, v108 = v106, (sub_24EE573C0() & 1) == 0))
    {
      uint64_t v58 = sub_24EE57560();
      swift_allocError();
      uint64_t v60 = v59;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
      *uint64_t v60 = v47;
      uint64_t v61 = v91;
      sub_24EE576A0();
      sub_24EE57550();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v58 - 8) + 104))(v60, *MEMORY[0x263F8DCB0], v58);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v48);
    }
    else
    {
      if (v52)
      {
        LOBYTE(v107) = 1;
        uint64_t v64 = v86;
        uint64_t v54 = v91;
        uint64_t v65 = v90;
        sub_24EE57690();
        if (!v65)
        {
          *(void *)&long long v107 = v97;
          *((void *)&v107 + 1) = v99;
          *(void *)&long long v108 = v100;
          *((void *)&v108 + 1) = v98;
          type metadata accessor for CanvasItemPlaceholder();
          swift_getWitnessTable();
          uint64_t v56 = v73;
          uint64_t v66 = v78;
          sub_24EE57710();
          uint64_t v67 = v87;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v64, v66);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v48);
          uint64_t v68 = v47;
          goto LABEL_14;
        }
      }
      else
      {
        LOBYTE(v107) = 0;
        uint64_t v53 = v83;
        uint64_t v54 = v91;
        uint64_t v55 = v90;
        sub_24EE57690();
        if (!v55)
        {
          long long v107 = v103;
          *(void *)&long long v108 = v93;
          *((void *)&v108 + 1) = v97;
          uint64_t v109 = v104;
          uint64_t v110 = v96;
          uint64_t v111 = v119;
          uint64_t v112 = v92;
          uint64_t v113 = v102;
          uint64_t v114 = v99;
          uint64_t v115 = v100;
          uint64_t v116 = v98;
          uint64_t v117 = v94;
          uint64_t v118 = v95;
          type metadata accessor for CanvasItemDescriptor();
          swift_getWitnessTable();
          uint64_t v56 = v74;
          uint64_t v57 = v77;
          sub_24EE57710();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v57);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v48);
          uint64_t v68 = v47;
LABEL_14:
          swift_storeEnumTagMultiPayload();
          uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
          uint64_t v70 = v72;
          v69(v72, v56, v47);
          v69(v75, v70, v68);
          uint64_t v62 = (uint64_t)v101;
          return __swift_destroy_boxed_opaque_existential_1(v62);
        }
      }
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v48);
    }
    uint64_t v37 = v101;
  }
  uint64_t v62 = (uint64_t)v37;
  return __swift_destroy_boxed_opaque_existential_1(v62);
}

uint64_t type metadata accessor for LazyCanvasItemDescriptor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24ED9985C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return LazyCanvasItemDescriptor.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9], a2[10], a2[11], a2[12], a2[13], a2[14], a2[15]);
}

uint64_t sub_24ED998AC(void *a1, void *a2)
{
  return LazyCanvasItemDescriptor.encode(to:)(a1, a2);
}

uint64_t LazyCanvasItemDescriptor.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)&long long v27 = *(void *)(a2 + 40);
  uint64_t v6 = v27;
  *((void *)&v27 + 1) = v7;
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  uint64_t v10 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 80);
  long long v27 = *(_OWORD *)(a2 + 16);
  uint64_t v28 = v14;
  uint64_t v29 = v6;
  long long v16 = *(_OWORD *)(a2 + 64);
  long long v30 = *(_OWORD *)(a2 + 48);
  long long v31 = v16;
  uint64_t v32 = v15;
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  long long v36 = *(_OWORD *)(a2 + 112);
  uint64_t v17 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v27 - v19;
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16))(v24, v3, a2, v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v24, v10);
    sub_24EE57880();
    CanvasItemPlaceholder.hash(into:)(a1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v24, v17);
    sub_24EE57880();
    CanvasItemDescriptor.hash(into:)(a1, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t static LazyCanvasItemDescriptor.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v67 = a4;
  uint64_t v68 = a8;
  uint64_t v70 = a7;
  uint64_t v71 = a6;
  uint64_t v66 = a3;
  uint64_t v64 = a2;
  uint64_t v63 = a1;
  uint64_t v65 = a16;
  uint64_t v69 = a15;
  uint64_t v72 = a12;
  uint64_t v73 = a13;
  uint64_t v74 = a14;
  uint64_t v58 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v50 = (char *)&v48 - v20;
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t v73 = (uint64_t)a5;
  uint64_t v74 = a6;
  uint64_t v21 = v68;
  uint64_t v75 = v70;
  uint64_t v76 = v68;
  uint64_t v77 = a9;
  uint64_t v78 = a10;
  uint64_t v79 = a11;
  uint64_t v80 = a12;
  uint64_t v81 = a13;
  uint64_t v82 = a14;
  uint64_t v83 = a15;
  uint64_t v84 = a16;
  uint64_t v56 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v49 = (char *)&v48 - v22;
  uint64_t v71 = v66;
  uint64_t v72 = v67;
  uint64_t v54 = a5;
  uint64_t v73 = (uint64_t)a5;
  uint64_t v74 = a6;
  uint64_t v62 = a6;
  uint64_t v75 = v70;
  uint64_t v76 = v21;
  uint64_t v53 = a9;
  uint64_t v77 = a9;
  uint64_t v78 = a10;
  uint64_t v52 = a10;
  uint64_t v51 = a11;
  uint64_t v79 = a11;
  uint64_t v80 = a12;
  uint64_t v59 = a12;
  uint64_t v60 = a13;
  uint64_t v81 = a13;
  uint64_t v82 = a14;
  uint64_t v61 = a14;
  uint64_t v83 = v69;
  uint64_t v84 = a16;
  uint64_t v23 = type metadata accessor for LazyCanvasItemDescriptor();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v48 - v28;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v32 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v34 = (char *)&v48 - v33;
  long long v36 = (char *)&v48 + *(int *)(v35 + 48) - v33;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16);
  v37((char *)&v48 - v33, v63, v23, v32);
  ((void (*)(char *, uint64_t, uint64_t))v37)(v36, v64, v23);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(char *, char *, uint64_t))v37)(v29, v34, v23);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v43 = v55;
      uint64_t v44 = (uint64_t)v49;
      uint64_t v45 = v56;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v49, v36, v56);
      char v41 = static CanvasItemDescriptor.== infix(_:_:)((uint64_t)v29, v44, v66, v67, v54, v62, v70, v68, v53, v52, v51, v59, v60, v61, v69, v65);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v46(v44, v45);
      v46((uint64_t)v29, v45);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v56);
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v37)(v26, v34, v23);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
LABEL_7:
    char v41 = 0;
    uint64_t v24 = v31;
    uint64_t v23 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  uint64_t v38 = v57;
  uint64_t v39 = (uint64_t)v50;
  uint64_t v40 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v50, v36, v58);
  char v41 = static CanvasItemPlaceholder.== infix(_:_:)((uint64_t)v26, v39, v62, v59, v60, v61);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v42(v39, v40);
  v42((uint64_t)v26, v40);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v23);
  return v41 & 1;
}

uint64_t LazyCanvasItemDescriptor.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  LazyCanvasItemDescriptor.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24ED9A1C4(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  LazyCanvasItemDescriptor.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24ED9A208()
{
  return swift_getWitnessTable();
}

uint64_t sub_24ED9A224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static LazyCanvasItemDescriptor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(char **)(a3 + 32), *(void *)(a3 + 40), *(void *)(a3 + 48), *(void *)(a3 + 56), *(void *)(a3 + 64), *(void *)(a3 + 72), *(void *)(a3 + 80), *(void *)(a3 + 88), *(void *)(a3 + 96), *(void *)(a3 + 104), *(void *)(a3 + 112), *(void *)(a3 + 120)) & 1;
}

uint64_t sub_24ED9A270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 120);
}

uint64_t sub_24ED9A278()
{
  uint64_t result = type metadata accessor for CanvasItemDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CanvasItemPlaceholder();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24ED9A3A4(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v373 = a3[5];
  uint64_t v397 = *(void *)(v373 - 8);
  uint64_t v400 = *(void *)(v397 + 64);
  uint64_t v369 = a3[3];
  uint64_t v394 = *(void *)(v369 - 8);
  uint64_t v370 = v394;
  int v380 = *(_DWORD *)(v394 + 80);
  uint64_t v4 = v380;
  uint64_t v371 = sub_24EE55880();
  uint64_t v383 = *(void *)(v371 - 8);
  int v378 = *(_DWORD *)(v383 + 80);
  uint64_t v5 = v378;
  uint64_t v367 = a3[2];
  uint64_t v390 = *(void *)(v367 - 8);
  int v376 = *(_DWORD *)(v390 + 80);
  uint64_t v6 = sub_24EE55960();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v332 = v7;
  uint64_t v333 = v6;
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v362 = a3[7];
  uint64_t v9 = *(void *)(v362 - 8);
  int v374 = *(_DWORD *)(v9 + 80);
  uint64_t v354 = v380 + 248;
  unint64_t v10 = *(void *)(v394 + 64);
  unint64_t v11 = v10 + v378;
  uint64_t v356 = v11 + 1 + ((v4 + 248) & ~v4);
  uint64_t v372 = v383;
  unint64_t v12 = *(void *)(v383 + 64);
  if (*(_DWORD *)(v383 + 84)) {
    size_t v13 = *(void *)(v383 + 64);
  }
  else {
    size_t v13 = v12 + 1;
  }
  size_t v14 = v13 + v378;
  size_t v15 = v13 + v376;
  uint64_t v16 = *(void *)(v390 + 64);
  uint64_t v364 = v16 + v376;
  uint64_t v366 = v390;
  if (*(_DWORD *)(v390 + 84)) {
    size_t v17 = *(void *)(v390 + 64);
  }
  else {
    size_t v17 = v16 + 1;
  }
  unint64_t v18 = ((v16
        + v376
        + ((v13
          + v376
          + ((v13
            + v378
            + ((v13 + v378 + (v356 & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)) & ~(unint64_t)v376)
      + v17;
  uint64_t v363 = *(void *)(v394 + 64);
  if (v12 <= v10) {
    unint64_t v19 = *(void *)(v394 + 64);
  }
  else {
    unint64_t v19 = *(void *)(v383 + 64);
  }
  size_t v331 = v13 + v8;
  uint64_t v391 = *(_DWORD *)(v7 + 80);
  unint64_t v20 = ((v13 + v8 + (v14 & ~(unint64_t)v378)) & ~v8) + *(void *)(v7 + 64);
  if (v20 > v19) {
    unint64_t v19 = v20;
  }
  uint64_t v346 = v380 + 224;
  size_t v357 = v17 + v376;
  size_t v358 = v17 + v374;
  uint64_t v361 = *(void *)(v362 - 8);
  unint64_t v21 = *(void *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84)) {
    size_t v22 = *(void *)(v9 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  size_t __n = v22;
  unint64_t v23 = ((v17
        + v374
        + ((v17
          + v376
          + ((v15
            + ((v14
              + ((v14
                + ((v11 + 1 + ((v380 + 224) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)) & ~(unint64_t)v376)) & ~(unint64_t)v374)
      + v22;
  uint64_t v344 = v378 + 64;
  size_t v24 = v13 + (v11 & ~(unint64_t)v378);
  unint64_t v25 = ((v24 + v378) & ~(unint64_t)v378) + v13;
  uint64_t v360 = v378 + 24;
  unint64_t v26 = ((v360 + (v24 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v378) + v13;
  uint64_t v336 = v380 + 24;
  uint64_t v337 = v380 + 104;
  uint64_t v340 = v380 + 160;
  uint64_t v395 = v376;
  size_t v365 = v17;
  uint64_t v335 = v380 + 56;
  unint64_t v27 = ((v14
        + ((v14 + ((v11 + (v335 & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
      + v13;
  uint64_t v339 = v380 + 64;
  unint64_t v28 = ((v11 + (v339 & ~(unint64_t)v380)) & ~(unint64_t)v378) + v13;
  unint64_t v350 = v26;
  unint64_t v351 = ((v15 + ((v14 + (v344 & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)
       + v17;
  if (v26 <= v18) {
    unint64_t v26 = v18;
  }
  unint64_t v342 = v19 + 1;
  unint64_t v359 = v19;
  if (v26 <= v19 + 1) {
    unint64_t v26 = v19 + 1;
  }
  unint64_t v352 = v23;
  if (v26 <= v23) {
    unint64_t v26 = v23;
  }
  if (v26 <= ((v15
              + ((v14 + ((v378 + 64) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)
            + v17)
    unint64_t v26 = ((v15
          + ((v14 + ((v378 + 64) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)
        + v17;
  unint64_t v348 = ((v14
         + ((v11 + ((v380 + 24) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
       + v13;
  unint64_t v349 = ((v25 + v378) & ~(unint64_t)v378) + v13;
  if (v26 <= v349) {
    unint64_t v26 = ((v25 + v378) & ~(unint64_t)v378) + v13;
  }
  if (v26 <= ((v14
              + ((v11 + ((v380 + 24) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
            + v13)
    unint64_t v26 = ((v14
          + ((v11 + ((v380 + 24) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
        + v13;
  unint64_t v347 = ((v14
         + ((v14
           + ((v11 + ((v380 + 104) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
       + v13;
  if (v26 <= v347) {
    unint64_t v26 = ((v14
  }
          + ((v14
            + ((v11 + ((v380 + 104) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
        + v13;
  unint64_t v345 = ((v15
         + ((v14
           + ((v14
             + ((v14
               + ((v11 + ((v380 + 160) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)
       + v17;
  if (v26 <= v345) {
    unint64_t v26 = ((v15
  }
          + ((v14
            + ((v14
              + ((v14
                + ((v11 + ((v380 + 160) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v376)
        + v17;
  if (v26 <= v27) {
    unint64_t v26 = ((v14
  }
          + ((v14
            + ((v11 + ((v380 + 56) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
        + v13;
  size_t v343 = v28 + 1;
  if (v26 <= v28 + 1) {
    unint64_t v29 = v28 + 1;
  }
  else {
    unint64_t v29 = v26;
  }
  uint64_t v338 = v380 + 128;
  unint64_t v368 = v10 + v378;
  unint64_t v341 = ((v14
         + ((v14 + ((v11 + (v338 & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
       + v13;
  if (v29 <= v341) {
    unint64_t v29 = ((v14
  }
          + ((v14
            + ((v11 + ((v380 + 128) & ~(unint64_t)v380)) & ~(unint64_t)v378)) & ~(unint64_t)v378)) & ~(unint64_t)v378)
        + v13;
  size_t v353 = v25;
  if (v29 <= v25) {
    unint64_t v29 = v25;
  }
  size_t v355 = v21;
  if (v29 <= v21) {
    unint64_t v30 = v21;
  }
  else {
    unint64_t v30 = v29;
  }
  uint64_t v31 = a3[4];
  uint64_t v32 = *(void *)(v31 - 8);
  if (*(_DWORD *)(v32 + 84)) {
    uint64_t v33 = *(void *)(v32 + 64);
  }
  else {
    uint64_t v33 = *(void *)(v32 + 64) + 1;
  }
  uint64_t v34 = a3[6];
  uint64_t v35 = *(void *)(v34 - 8);
  int v36 = *(_DWORD *)(v35 + 80);
  uint64_t v384 = v374;
  unint64_t v37 = v378 | (unint64_t)v380 | v376 | v8 | v374;
  uint64_t v38 = *(_DWORD *)(v32 + 80);
  uint64_t v39 = v30 + v38 + 1;
  uint64_t v40 = v37 | 7;
  uint64_t v41 = (v37 | 7) + v400;
  uint64_t v42 = v36;
  uint64_t v43 = v33 + v36;
  if (*(_DWORD *)(v35 + 84)) {
    uint64_t v44 = *(void *)(v35 + 64);
  }
  else {
    uint64_t v44 = *(void *)(v35 + 64) + 1;
  }
  if (((v400 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= ((v44
                                                    + 7
                                                    + ((v43
                                                      + ((v39 + (v41 & ~(v37 | 7))) & ~(unint64_t)*(_DWORD *)(v32 + 80))) & ~(unint64_t)v36)) & 0xFFFFFFFFFFFFFFF8)
                                                  + 8)
    unint64_t v45 = ((v44
          + 7
          + ((v43 + ((v39 + (v41 & ~(v37 | 7))) & ~(unint64_t)*(_DWORD *)(v32 + 80))) & ~(unint64_t)v36)) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  else {
    unint64_t v45 = ((v400 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unint64_t v46 = v37 | v36 | *(_DWORD *)(v397 + 80) & 0xF8 | v38 | 7;
  if (v46 != 7
    || ((v378 | v380 | v376 | *(_DWORD *)(v332 + 80) | v374 | *(_DWORD *)(v32 + 80) | v36 | *(_DWORD *)(v397 + 80)) & 0x100000) != 0
    || v45 > 0x17)
  {
    uint64_t v51 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v49 = (void *)(v51 + ((v46 + 16) & ~v46));
    swift_retain();
    return v49;
  }
  unint64_t v321 = v27;
  size_t v322 = v13 + v376;
  uint64_t v328 = *(void *)(v31 - 8);
  uint64_t v329 = v31;
  uint64_t v325 = *(void *)(v34 - 8);
  uint64_t v330 = v34;
  unsigned int v47 = a2[v45];
  size_t v379 = v30;
  if (v47 < 2)
  {
    uint64_t v49 = a1;
  }
  else
  {
    if (v45 <= 3) {
      int v48 = v45;
    }
    else {
      int v48 = 4;
    }
    uint64_t v49 = a1;
    if (v48)
    {
      if (v48 == 4)
      {
        int v50 = *(_DWORD *)a2;
        if (v45 >= 4)
        {
LABEL_62:
          unsigned int v47 = v50 + 2;
          goto LABEL_67;
        }
      }
      else
      {
        int v50 = *a2;
        if (v45 >= 4) {
          goto LABEL_62;
        }
      }
      unsigned int v47 = (v50 | ((v47 - 2) << (8 * v45))) + 2;
    }
  }
LABEL_67:
  size_t v377 = v13 + v5;
  uint64_t v326 = v30 + *(_DWORD *)(v32 + 80) + 1;
  uint64_t v327 = v33 + v36;
  size_t v323 = v33;
  size_t v324 = v44;
  uint64_t v375 = v44 + 7;
  unint64_t v381 = v45;
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v397 + 16))(v49, a2, v373);
  if (v47 == 1)
  {
    unint64_t v52 = (unint64_t)&a2[v400 + 7] & 0xFFFFFFFFFFFFFFF8;
    unsigned int v53 = *(unsigned __int8 *)(v52 + 248);
    if (v53 >= 0xB) {
      unsigned int v53 = *(_DWORD *)v52 + 11;
    }
    unint64_t v54 = ((unint64_t)v49 + v400 + 7) & 0xFFFFFFFFFFFFFFF8;
    switch(v53)
    {
      case 0u:
        long long v55 = *(_OWORD *)v52;
        long long v56 = *(_OWORD *)(v52 + 16);
        long long v57 = *(_OWORD *)(v52 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 48) = v57;
        *(_OWORD *)unint64_t v54 = v55;
        *(_OWORD *)(v54 + 16) = v56;
        long long v58 = *(_OWORD *)(v52 + 64);
        long long v59 = *(_OWORD *)(v52 + 80);
        long long v60 = *(_OWORD *)(v52 + 112);
        *(_OWORD *)(v54 + 96) = *(_OWORD *)(v52 + 96);
        *(_OWORD *)(v54 + 112) = v60;
        *(_OWORD *)(v54 + 64) = v58;
        *(_OWORD *)(v54 + 80) = v59;
        long long v61 = *(_OWORD *)(v52 + 128);
        long long v62 = *(_OWORD *)(v52 + 144);
        long long v63 = *(_OWORD *)(v52 + 176);
        *(_OWORD *)(v54 + 160) = *(_OWORD *)(v52 + 160);
        *(_OWORD *)(v54 + 176) = v63;
        *(_OWORD *)(v54 + 128) = v61;
        *(_OWORD *)(v54 + 144) = v62;
        long long v64 = *(_OWORD *)(v52 + 192);
        long long v65 = *(_OWORD *)(v52 + 208);
        long long v66 = *(_OWORD *)(v52 + 224);
        *(void *)(v54 + 240) = *(void *)(v52 + 240);
        *(_OWORD *)(v54 + 208) = v65;
        *(_OWORD *)(v54 + 224) = v66;
        *(_OWORD *)(v54 + 192) = v64;
        *(unsigned char *)(v54 + 248) = 0;
        break;
      case 1u:
        long long v97 = *(_OWORD *)(v52 + 16);
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v52;
        *(_OWORD *)(v54 + 16) = v97;
        long long v98 = *(_OWORD *)(v52 + 32);
        long long v99 = *(_OWORD *)(v52 + 48);
        long long v100 = *(_OWORD *)(v52 + 80);
        *(_OWORD *)(v54 + 64) = *(_OWORD *)(v52 + 64);
        *(_OWORD *)(v54 + 80) = v100;
        *(_OWORD *)(v54 + 32) = v98;
        *(_OWORD *)(v54 + 48) = v99;
        long long v101 = *(_OWORD *)(v52 + 96);
        long long v102 = *(_OWORD *)(v52 + 112);
        long long v103 = *(_OWORD *)(v52 + 144);
        *(_OWORD *)(v54 + 128) = *(_OWORD *)(v52 + 128);
        *(_OWORD *)(v54 + 144) = v103;
        *(_OWORD *)(v54 + 96) = v101;
        *(_OWORD *)(v54 + 112) = v102;
        long long v104 = *(_OWORD *)(v52 + 160);
        long long v105 = *(_OWORD *)(v52 + 176);
        long long v106 = *(_OWORD *)(v52 + 208);
        *(_OWORD *)(v54 + 192) = *(_OWORD *)(v52 + 192);
        *(_OWORD *)(v54 + 208) = v106;
        *(_OWORD *)(v54 + 160) = v104;
        *(_OWORD *)(v54 + 176) = v105;
        *(unsigned char *)(v54 + 248) = 1;
        break;
      case 2u:
        long long v107 = *(_OWORD *)v52;
        long long v108 = *(_OWORD *)(v52 + 16);
        long long v109 = *(_OWORD *)(v52 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 48) = v109;
        *(_OWORD *)unint64_t v54 = v107;
        *(_OWORD *)(v54 + 16) = v108;
        *(unsigned char *)(v54 + 248) = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v52;
        *(unsigned char *)(v54 + 248) = 3;
        break;
      case 4u:
        long long v110 = *(_OWORD *)v52;
        *(void *)(v54 + 16) = *(void *)(v52 + 16);
        *(_OWORD *)unint64_t v54 = v110;
        *(unsigned char *)(v54 + 248) = 4;
        break;
      case 5u:
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v52;
        *(unsigned char *)(v54 + 248) = 5;
        break;
      case 6u:
        long long v111 = *(_OWORD *)v52;
        long long v112 = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 16) = *(_OWORD *)(v52 + 16);
        *(_OWORD *)(v54 + 32) = v112;
        *(_OWORD *)unint64_t v54 = v111;
        long long v113 = *(_OWORD *)(v52 + 48);
        long long v114 = *(_OWORD *)(v52 + 64);
        long long v115 = *(_OWORD *)(v52 + 80);
        *(void *)(v54 + 96) = *(void *)(v52 + 96);
        *(_OWORD *)(v54 + 64) = v114;
        *(_OWORD *)(v54 + 80) = v115;
        *(_OWORD *)(v54 + 48) = v113;
        *(unsigned char *)(v54 + 248) = 6;
        break;
      case 7u:
        long long v116 = *(_OWORD *)(v52 + 16);
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v52;
        *(_OWORD *)(v54 + 16) = v116;
        long long v117 = *(_OWORD *)(v52 + 32);
        long long v118 = *(_OWORD *)(v52 + 48);
        long long v119 = *(_OWORD *)(v52 + 80);
        *(_OWORD *)(v54 + 64) = *(_OWORD *)(v52 + 64);
        *(_OWORD *)(v54 + 80) = v119;
        *(_OWORD *)(v54 + 32) = v117;
        *(_OWORD *)(v54 + 48) = v118;
        long long v120 = *(_OWORD *)(v52 + 96);
        long long v121 = *(_OWORD *)(v52 + 112);
        long long v122 = *(_OWORD *)(v52 + 144);
        *(_OWORD *)(v54 + 128) = *(_OWORD *)(v52 + 128);
        *(_OWORD *)(v54 + 144) = v122;
        *(_OWORD *)(v54 + 96) = v120;
        *(_OWORD *)(v54 + 112) = v121;
        *(unsigned char *)(v54 + 248) = 7;
        break;
      case 8u:
        long long v123 = *(_OWORD *)v52;
        long long v124 = *(_OWORD *)(v52 + 16);
        long long v125 = *(_OWORD *)(v52 + 32);
        *(void *)(v54 + 48) = *(void *)(v52 + 48);
        *(_OWORD *)(v54 + 16) = v124;
        *(_OWORD *)(v54 + 32) = v125;
        *(_OWORD *)unint64_t v54 = v123;
        *(unsigned char *)(v54 + 248) = 8;
        break;
      case 9u:
        long long v126 = *(_OWORD *)v52;
        long long v127 = *(_OWORD *)(v52 + 16);
        long long v128 = *(_OWORD *)(v52 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 48) = v128;
        *(_OWORD *)unint64_t v54 = v126;
        *(_OWORD *)(v54 + 16) = v127;
        *(unsigned char *)(v54 + 248) = 9;
        break;
      case 0xAu:
        long long v129 = *(_OWORD *)v52;
        long long v130 = *(_OWORD *)(v52 + 16);
        long long v131 = *(_OWORD *)(v52 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 48) = v131;
        *(_OWORD *)unint64_t v54 = v129;
        *(_OWORD *)(v54 + 16) = v130;
        long long v132 = *(_OWORD *)(v52 + 64);
        long long v133 = *(_OWORD *)(v52 + 80);
        long long v134 = *(_OWORD *)(v52 + 112);
        *(_OWORD *)(v54 + 96) = *(_OWORD *)(v52 + 96);
        *(_OWORD *)(v54 + 112) = v134;
        *(_OWORD *)(v54 + 64) = v132;
        *(_OWORD *)(v54 + 80) = v133;
        *(unsigned char *)(v54 + 248) = 10;
        break;
      default:
        long long v135 = *(_OWORD *)v52;
        long long v136 = *(_OWORD *)(v52 + 16);
        long long v137 = *(_OWORD *)(v52 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v52 + 32);
        *(_OWORD *)(v54 + 48) = v137;
        *(_OWORD *)unint64_t v54 = v135;
        *(_OWORD *)(v54 + 16) = v136;
        long long v138 = *(_OWORD *)(v52 + 64);
        long long v139 = *(_OWORD *)(v52 + 80);
        long long v140 = *(_OWORD *)(v52 + 112);
        *(_OWORD *)(v54 + 96) = *(_OWORD *)(v52 + 96);
        *(_OWORD *)(v54 + 112) = v140;
        *(_OWORD *)(v54 + 64) = v138;
        *(_OWORD *)(v54 + 80) = v139;
        long long v141 = *(_OWORD *)(v52 + 128);
        long long v142 = *(_OWORD *)(v52 + 144);
        long long v143 = *(_OWORD *)(v52 + 176);
        *(_OWORD *)(v54 + 160) = *(_OWORD *)(v52 + 160);
        *(_OWORD *)(v54 + 176) = v143;
        *(_OWORD *)(v54 + 128) = v141;
        *(_OWORD *)(v54 + 144) = v142;
        long long v144 = *(_OWORD *)(v52 + 192);
        long long v145 = *(_OWORD *)(v52 + 208);
        long long v146 = *(_OWORD *)(v52 + 224);
        *(_OWORD *)(v54 + 233) = *(_OWORD *)(v52 + 233);
        *(_OWORD *)(v54 + 208) = v145;
        *(_OWORD *)(v54 + 224) = v146;
        *(_OWORD *)(v54 + 192) = v144;
        break;
    }
    *((unsigned char *)v49 + v381) = 1;
  }
  else
  {
    uint64_t v67 = (_OWORD *)(((unint64_t)v49 + v41) & ~v40);
    uint64_t v68 = (unsigned __int8 *)((unint64_t)&a2[v41] & ~v40);
    unsigned int v69 = v68[v379];
    unsigned int v70 = v69 - 15;
    if (v69 >= 0xF)
    {
      if (v379 <= 3) {
        uint64_t v71 = v379;
      }
      else {
        uint64_t v71 = 4;
      }
      switch(v71)
      {
        case 1:
          int v72 = *v68;
          if (v379 < 4) {
            goto LABEL_80;
          }
          goto LABEL_84;
        case 2:
          int v72 = *(unsigned __int16 *)v68;
          if (v379 < 4) {
            goto LABEL_80;
          }
          goto LABEL_84;
        case 3:
          int v72 = *(unsigned __int16 *)v68 | (v68[2] << 16);
          if (v379 < 4) {
            goto LABEL_80;
          }
          goto LABEL_84;
        case 4:
          int v72 = *(_DWORD *)v68;
          if (v379 < 4) {
LABEL_80:
          }
            unsigned int v69 = (v72 | (v70 << (8 * v379))) + 15;
          else {
LABEL_84:
          }
            unsigned int v69 = v72 + 15;
          break;
        default:
          break;
      }
    }
    size_t v401 = v13;
    uint64_t v73 = ~v4;
    uint64_t v74 = ~v5;
    uint64_t v75 = ~v395;
    uint64_t v76 = ~v391;
    uint64_t v77 = ~v384;
    uint64_t v78 = ~v38;
    uint64_t v396 = ~v42;
    uint64_t v398 = v68;
    switch(v69)
    {
      case 1u:
        unint64_t v147 = v359;
        unsigned int v148 = v68[v359];
        unsigned int v149 = v148 - 3;
        if (v148 < 3)
        {
          uint64_t v82 = v67;
          uint64_t v151 = v372;
        }
        else
        {
          if (v359 <= 3) {
            uint64_t v150 = v359;
          }
          else {
            uint64_t v150 = 4;
          }
          uint64_t v82 = v67;
          uint64_t v151 = v372;
          switch(v150)
          {
            case 1:
              int v152 = *v68;
              goto LABEL_279;
            case 2:
              int v152 = *(unsigned __int16 *)v68;
              goto LABEL_279;
            case 3:
              int v152 = *(unsigned __int16 *)v68 | (v68[2] << 16);
              goto LABEL_279;
            case 4:
              int v152 = *(_DWORD *)v68;
LABEL_279:
              if (v359 < 4) {
                unsigned int v148 = (v152 | (v149 << (8 * v359))) + 3;
              }
              else {
                unsigned int v148 = v152 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v148 == 2)
        {
          uint64_t v393 = v78;
          uint64_t v318 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v151 + 48);
          if (v318(v68, 1, v371))
          {
            memcpy(v82, v68, v401);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v151 + 16))(v82, v68, v371);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v151 + 56))(v82, 0, 1, v371);
          }
          uint64_t v319 = (void *)(((unint64_t)v82 + v377) & v74);
          uint64_t v320 = (void *)((unint64_t)&v68[v377] & v74);
          uint64_t v204 = v325;
          if (v318((unsigned __int8 *)v320, 1, v371))
          {
            memcpy(v319, v320, v401);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v372 + 16))(v319, v320, v371);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v319, 0, 1, v371);
          }
          uint64_t v251 = v396;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v332 + 16))(((unint64_t)v319 + v331) & v76, ((unint64_t)v320 + v331) & v76, v333);
          char v317 = 2;
          uint64_t v49 = a1;
          uint64_t v250 = v326;
          size_t v248 = v379;
          uint64_t v247 = v393;
          unint64_t v147 = v359;
        }
        else
        {
          uint64_t v247 = v78;
          if (v148 == 1)
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v151 + 16))(v82, v68, v371);
            size_t v248 = v379;
            char v317 = 1;
            uint64_t v204 = v325;
            uint64_t v250 = v326;
            uint64_t v49 = a1;
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v370 + 16))(v82, v68, v369);
            char v317 = 0;
            uint64_t v204 = v325;
            uint64_t v250 = v326;
            uint64_t v49 = a1;
            size_t v248 = v379;
          }
          uint64_t v251 = v396;
        }
        *((unsigned char *)v82 + v147) = v317;
        char v249 = 1;
        goto LABEL_268;
      case 2u:
        uint64_t v386 = v75;
        uint64_t v392 = ~v38;
        long long v153 = *((_OWORD *)v68 + 1);
        *uint64_t v67 = *(_OWORD *)v68;
        v67[1] = v153;
        long long v154 = *((_OWORD *)v68 + 2);
        long long v155 = *((_OWORD *)v68 + 3);
        long long v156 = *((_OWORD *)v68 + 5);
        v67[4] = *((_OWORD *)v68 + 4);
        v67[5] = v156;
        v67[2] = v154;
        v67[3] = v155;
        long long v157 = *((_OWORD *)v68 + 6);
        long long v158 = *((_OWORD *)v68 + 7);
        long long v159 = *((_OWORD *)v68 + 9);
        v67[8] = *((_OWORD *)v68 + 8);
        v67[9] = v159;
        v67[6] = v157;
        v67[7] = v158;
        long long v160 = *((_OWORD *)v68 + 10);
        long long v161 = *((_OWORD *)v68 + 11);
        long long v162 = *((_OWORD *)v68 + 13);
        v67[12] = *((_OWORD *)v68 + 12);
        v67[13] = v162;
        v67[10] = v160;
        v67[11] = v161;
        uint64_t v163 = ((unint64_t)v67 + v346) & v73;
        unint64_t v164 = (unint64_t)&v68[v346] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v163, v164, v369);
        *(unsigned char *)(v163 + v363) = *(unsigned char *)(v164 + v363);
        uint64_t v165 = (void *)((v5 + 1 + v163 + v363) & v74);
        uint64_t v166 = (const void *)((v5 + 1 + v164 + v363) & v74);
        uint64_t v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v167(v166, 1, v371))
        {
          uint64_t v168 = v165;
          memcpy(v165, v166, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v165, v166, v371);
          uint64_t v168 = v165;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v165, 0, 1, v371);
        }
        uint64_t v254 = (void *)(((unint64_t)v168 + v377) & v74);
        uint64_t v255 = (const void *)(((unint64_t)v166 + v377) & v74);
        if (v167(v255, 1, v371))
        {
          memcpy(v254, v255, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v254, v255, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v254, 0, 1, v371);
        }
        uint64_t v273 = (void *)(((unint64_t)v254 + v377) & v74);
        uint64_t v274 = (const void *)(((unint64_t)v255 + v377) & v74);
        if (v167(v274, 1, v371))
        {
          memcpy(v273, v274, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v273, v274, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v273, 0, 1, v371);
        }
        uint64_t v251 = v396;
        uint64_t v287 = (void *)(((unint64_t)v273 + v322) & v386);
        uint64_t v288 = (const void *)(((unint64_t)v274 + v322) & v386);
        uint64_t v289 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v366 + 48);
        if (v289(v288, 1, v367))
        {
          memcpy(v287, v288, v365);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v366 + 16))(v287, v288, v367);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v287, 0, 1, v367);
        }
        uint64_t v49 = a1;
        uint64_t v292 = (void *)(((unint64_t)v287 + v357) & v386);
        uint64_t v293 = (const void *)(((unint64_t)v288 + v357) & v386);
        if (v289(v293, 1, v367))
        {
          memcpy(v292, v293, v365);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v366 + 16))(v292, v293, v367);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v292, 0, 1, v367);
        }
        uint64_t v296 = (void *)(((unint64_t)v292 + v358) & v77);
        unint64_t v297 = (const void *)(((unint64_t)v293 + v358) & v77);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v361 + 48))(v297, 1, v362))
        {
          memcpy(v296, v297, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v361 + 16))(v296, v297, v362);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v361 + 56))(v296, 0, 1, v362);
        }
        char v249 = 2;
        uint64_t v204 = v325;
        uint64_t v250 = v326;
        size_t v248 = v379;
        uint64_t v82 = v67;
        break;
      case 3u:
        uint64_t v387 = v75;
        uint64_t v392 = ~v38;
        long long v169 = *(_OWORD *)v68;
        long long v170 = *((_OWORD *)v68 + 1);
        long long v171 = *((_OWORD *)v68 + 3);
        uint64_t v82 = v67;
        v67[2] = *((_OWORD *)v68 + 2);
        v67[3] = v171;
        *uint64_t v67 = v169;
        v67[1] = v170;
        uint64_t v172 = (void *)(((unint64_t)v67 + v344) & v74);
        unint64_t v173 = (const void *)((unint64_t)&v68[v344] & v74);
        uint64_t v174 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v174(v173, 1, v371))
        {
          memcpy(v172, v173, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v172, v173, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v172, 0, 1, v371);
        }
        unint64_t v256 = (void *)(((unint64_t)v172 + v377) & v74);
        uint64_t v257 = (const void *)(((unint64_t)v173 + v377) & v74);
        if (v174(v257, 1, v371))
        {
          memcpy(v256, v257, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v256, v257, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v256, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v251 = v396;
        uint64_t v275 = (void *)(((unint64_t)v256 + v322) & v387);
        uint64_t v276 = (const void *)(((unint64_t)v257 + v322) & v387);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v366 + 48))(v276, 1, v367))
        {
          memcpy(v275, v276, v365);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v366 + 16))(v275, v276, v367);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v275, 0, 1, v367);
        }
        char v249 = 3;
        goto LABEL_237;
      case 4u:
        uint64_t v392 = ~v38;
        uint64_t v82 = v67;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v370 + 16))(v67, v68, v369);
        uint64_t v175 = (void *)(((unint64_t)v67 + v368) & v74);
        uint64_t v176 = (const void *)((unint64_t)&v68[v368] & v74);
        long long v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v177(v176, 1, v371))
        {
          memcpy(v175, v176, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v175, v176, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v175, 0, 1, v371);
        }
        uint64_t v258 = (void *)(((unint64_t)v175 + v377) & v74);
        uint64_t v259 = (const void *)(((unint64_t)v176 + v377) & v74);
        if (v177(v259, 1, v371))
        {
          memcpy(v258, v259, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v258, v259, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v258, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v277 = (void *)(((unint64_t)v258 + v377) & v74);
        uint64_t v278 = (const void *)(((unint64_t)v259 + v377) & v74);
        if (v177(v278, 1, v371))
        {
          memcpy(v277, v278, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v277, v278, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v277, 0, 1, v371);
        }
        char v249 = 4;
        goto LABEL_266;
      case 5u:
        uint64_t v392 = ~v38;
        uint64_t v82 = v67;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v370 + 16))(v67, v68, v369);
        unint64_t v219 = (void *)(((unint64_t)v67 + v368) & v74);
        uint64_t v220 = (const void *)((unint64_t)&v68[v368] & v74);
        uint64_t v389 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v389(v220, 1, v371))
        {
          size_t v221 = v401;
          memcpy(v219, v220, v401);
          uint64_t v204 = v325;
          uint64_t v222 = v371;
          uint64_t v49 = a1;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v219, v220, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v219, 0, 1, v371);
          uint64_t v204 = v325;
          uint64_t v222 = v371;
          uint64_t v49 = a1;
          size_t v221 = v401;
        }
        *((unsigned char *)v219 + v221) = *((unsigned char *)v220 + v221);
        unint64_t v298 = ((unint64_t)v219 + v221) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v299 = ((unint64_t)v220 + v221) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v298 + 8) = *(_OWORD *)(v299 + 8);
        unint64_t v300 = (void *)((v360 + v298) & v74);
        uint64_t v301 = (const void *)((v360 + v299) & v74);
        if (v389(v301, 1, v222))
        {
          memcpy(v300, v301, v221);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v300, v301, v222);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v300, 0, 1, v222);
        }
        char v249 = 5;
        goto LABEL_266;
      case 6u:
        uint64_t v392 = ~v38;
        long long v223 = *(_OWORD *)v68;
        uint64_t v82 = v67;
        *((void *)v67 + 2) = *((void *)v68 + 2);
        *uint64_t v67 = v223;
        uint64_t v224 = ((unint64_t)v67 + v336) & v73;
        unint64_t v225 = (unint64_t)&v68[v336] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v224, v225, v369);
        uint64_t v226 = (void *)((v368 + v224) & v74);
        uint64_t v227 = (const void *)((v368 + v225) & v74);
        uint64_t v228 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v228(v227, 1, v371))
        {
          memcpy(v226, v227, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v226, v227, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v226, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v302 = (void *)(((unint64_t)v226 + v377) & v74);
        uint64_t v303 = (const void *)(((unint64_t)v227 + v377) & v74);
        if (v228(v303, 1, v371))
        {
          memcpy(v302, v303, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v302, v303, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v302, 0, 1, v371);
        }
        char v249 = 6;
        goto LABEL_266;
      case 7u:
        uint64_t v392 = ~v38;
        uint64_t v82 = v67;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v370 + 16))(v67, v68, v369);
        long long v178 = (void *)(((unint64_t)v67 + v368) & v74);
        uint64_t v179 = (const void *)((unint64_t)&v68[v368] & v74);
        uint64_t v180 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v180(v179, 1, v371))
        {
          size_t v181 = v401;
          memcpy(v178, v179, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v178, v179, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v178, 0, 1, v371);
          size_t v181 = v401;
        }
        *((unsigned char *)v178 + v181) = *((unsigned char *)v179 + v181);
        unint64_t v260 = ((unint64_t)v178 + v181) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v261 = ((unint64_t)v179 + v181) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v260 + 8) = *(_OWORD *)(v261 + 8);
        uint64_t v262 = (void *)((v360 + v260) & v74);
        uint64_t v263 = (const void *)((v360 + v261) & v74);
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        if (v180(v263, 1, v371))
        {
          memcpy(v262, v263, v181);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v262, v263, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v262, 0, 1, v371);
        }
        char v249 = 7;
        goto LABEL_266;
      case 8u:
        uint64_t v392 = ~v38;
        long long v229 = *(_OWORD *)v68;
        long long v230 = *((_OWORD *)v68 + 2);
        uint64_t v82 = v67;
        v67[1] = *((_OWORD *)v68 + 1);
        v67[2] = v230;
        *uint64_t v67 = v229;
        long long v231 = *((_OWORD *)v68 + 3);
        long long v232 = *((_OWORD *)v68 + 4);
        long long v233 = *((_OWORD *)v68 + 5);
        *((void *)v67 + 12) = *((void *)v68 + 12);
        v67[4] = v232;
        v67[5] = v233;
        v67[3] = v231;
        uint64_t v234 = ((unint64_t)v67 + v337) & v73;
        unint64_t v235 = (unint64_t)&v68[v337] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v234, v235, v369);
        uint64_t v236 = (void *)((v368 + v234) & v74);
        unint64_t v237 = (const void *)((v368 + v235) & v74);
        uint64_t v238 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v238(v237, 1, v371))
        {
          memcpy(v236, v237, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v236, v237, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v236, 0, 1, v371);
        }
        uint64_t v304 = (void *)(((unint64_t)v236 + v377) & v74);
        uint64_t v305 = (const void *)(((unint64_t)v237 + v377) & v74);
        if (v238(v305, 1, v371))
        {
          memcpy(v304, v305, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v304, v305, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v304, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v308 = (void *)(((unint64_t)v304 + v377) & v74);
        uint64_t v309 = (const void *)(((unint64_t)v305 + v377) & v74);
        if (v238(v309, 1, v371))
        {
          memcpy(v308, v309, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v308, v309, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v308, 0, 1, v371);
        }
        char v249 = 8;
        goto LABEL_266;
      case 9u:
        uint64_t v388 = v75;
        uint64_t v392 = ~v38;
        long long v182 = *((_OWORD *)v68 + 1);
        uint64_t v82 = v67;
        *uint64_t v67 = *(_OWORD *)v68;
        v67[1] = v182;
        long long v183 = *((_OWORD *)v68 + 2);
        long long v184 = *((_OWORD *)v68 + 3);
        long long v185 = *((_OWORD *)v68 + 5);
        v67[4] = *((_OWORD *)v68 + 4);
        v67[5] = v185;
        v67[2] = v183;
        v67[3] = v184;
        long long v186 = *((_OWORD *)v68 + 6);
        long long v187 = *((_OWORD *)v68 + 7);
        long long v188 = *((_OWORD *)v68 + 9);
        v67[8] = *((_OWORD *)v68 + 8);
        v67[9] = v188;
        v67[6] = v186;
        v67[7] = v187;
        uint64_t v189 = ((unint64_t)v67 + v340) & v73;
        unint64_t v190 = (unint64_t)&v68[v340] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v189, v190, v369);
        uint64_t v191 = (void *)((v368 + v189) & v74);
        uint64_t v192 = (const void *)((v368 + v190) & v74);
        uint64_t v193 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v193(v192, 1, v371))
        {
          memcpy(v191, v192, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v191, v192, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v191, 0, 1, v371);
        }
        uint64_t v264 = (void *)(((unint64_t)v191 + v377) & v74);
        uint64_t v265 = (const void *)(((unint64_t)v192 + v377) & v74);
        if (v193(v265, 1, v371))
        {
          memcpy(v264, v265, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v264, v265, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v264, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v279 = (void *)(((unint64_t)v264 + v377) & v74);
        uint64_t v280 = (const void *)(((unint64_t)v265 + v377) & v74);
        if (v193(v280, 1, v371))
        {
          memcpy(v279, v280, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v279, v280, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v279, 0, 1, v371);
        }
        uint64_t v290 = (void *)(((unint64_t)v279 + v377) & v74);
        uint64_t v291 = (const void *)(((unint64_t)v280 + v377) & v74);
        if (v193(v291, 1, v371))
        {
          memcpy(v290, v291, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v290, v291, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v290, 0, 1, v371);
        }
        uint64_t v251 = v396;
        uint64_t v294 = (void *)(((unint64_t)v290 + v322) & v388);
        uint64_t v295 = (const void *)(((unint64_t)v291 + v322) & v388);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v366 + 48))(v295, 1, v367))
        {
          memcpy(v294, v295, v365);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v366 + 16))(v294, v295, v367);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v294, 0, 1, v367);
        }
        char v249 = 9;
        goto LABEL_237;
      case 0xAu:
        uint64_t v392 = ~v38;
        long long v239 = *(_OWORD *)v68;
        long long v240 = *((_OWORD *)v68 + 1);
        long long v241 = *((_OWORD *)v68 + 2);
        uint64_t v82 = v67;
        *((void *)v67 + 6) = *((void *)v68 + 6);
        v67[1] = v240;
        v67[2] = v241;
        *uint64_t v67 = v239;
        uint64_t v242 = ((unint64_t)v67 + v335) & v73;
        unint64_t v243 = (unint64_t)&v68[v335] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v242, v243, v369);
        uint64_t v244 = (void *)((v368 + v242) & v74);
        uint64_t v245 = (const void *)((v368 + v243) & v74);
        uint64_t v246 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v246(v245, 1, v371))
        {
          memcpy(v244, v245, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v244, v245, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v244, 0, 1, v371);
        }
        uint64_t v306 = (void *)(((unint64_t)v244 + v377) & v74);
        uint64_t v307 = (const void *)(((unint64_t)v245 + v377) & v74);
        if (v246(v307, 1, v371))
        {
          memcpy(v306, v307, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v306, v307, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v306, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v310 = (void *)(((unint64_t)v306 + v377) & v74);
        uint64_t v311 = (const void *)(((unint64_t)v307 + v377) & v74);
        if (v246(v311, 1, v371))
        {
          memcpy(v310, v311, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v310, v311, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v310, 0, 1, v371);
        }
        char v249 = 10;
        goto LABEL_266;
      case 0xBu:
        uint64_t v194 = v75;
        uint64_t v195 = ~v38;
        long long v196 = *(_OWORD *)v68;
        long long v197 = *((_OWORD *)v68 + 1);
        long long v198 = *((_OWORD *)v68 + 3);
        uint64_t v82 = v67;
        v67[2] = *((_OWORD *)v68 + 2);
        v67[3] = v198;
        *uint64_t v67 = v196;
        v67[1] = v197;
        uint64_t v199 = ((unint64_t)v67 + v339) & v73;
        unint64_t v200 = (unint64_t)&v68[v339] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v199, v200, v369);
        uint64_t v201 = (void *)((v368 + v199) & v74);
        uint64_t v202 = (const void *)((v368 + v200) & v74);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48))(v202, 1, v371))
        {
          size_t v203 = v401;
          memcpy(v201, v202, v401);
          uint64_t v204 = v325;
          uint64_t v49 = a1;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v201, v202, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v201, 0, 1, v371);
          uint64_t v204 = v325;
          uint64_t v49 = a1;
          size_t v203 = v401;
        }
        *((unsigned char *)v201 + v203) = *((unsigned char *)v202 + v203);
        size_t v266 = ((v364 + ((v322 + ((v377 + (((v356 | v5) + v203) & v74)) & v74)) & v194)) & v194) + v365;
        if (v342 > v266) {
          size_t v266 = v342;
        }
        if (v352 > v266) {
          size_t v266 = v352;
        }
        if (v351 > v266) {
          size_t v266 = v351;
        }
        if (v349 > v266) {
          size_t v266 = v349;
        }
        if (v350 > v266) {
          size_t v266 = v350;
        }
        if (v348 > v266) {
          size_t v266 = v348;
        }
        if (v350 > v266) {
          size_t v266 = v350;
        }
        if (v347 > v266) {
          size_t v266 = v347;
        }
        if (v345 > v266) {
          size_t v266 = v345;
        }
        if (v321 > v266) {
          size_t v266 = v321;
        }
        if (v343 > v266) {
          size_t v266 = v343;
        }
        if (v341 > v266) {
          size_t v266 = v341;
        }
        if (v355 > v266) {
          size_t v266 = v355;
        }
        if (v353 <= v266) {
          size_t v248 = v266;
        }
        else {
          size_t v248 = v353;
        }
        char v249 = 11;
        uint64_t v250 = v326;
        uint64_t v251 = v396;
        uint64_t v247 = v195;
        goto LABEL_268;
      case 0xCu:
        uint64_t v392 = ~v38;
        long long v205 = *(_OWORD *)v68;
        long long v206 = *((_OWORD *)v68 + 1);
        long long v207 = *((_OWORD *)v68 + 3);
        uint64_t v82 = v67;
        v67[2] = *((_OWORD *)v68 + 2);
        v67[3] = v207;
        *uint64_t v67 = v205;
        v67[1] = v206;
        long long v208 = *((_OWORD *)v68 + 4);
        long long v209 = *((_OWORD *)v68 + 5);
        long long v210 = *((_OWORD *)v68 + 7);
        v67[6] = *((_OWORD *)v68 + 6);
        v67[7] = v210;
        v67[4] = v208;
        v67[5] = v209;
        uint64_t v211 = ((unint64_t)v67 + v338) & v73;
        unint64_t v212 = (unint64_t)&v68[v338] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v211, v212, v369);
        uint64_t v213 = (void *)((v368 + v211) & v74);
        uint64_t v214 = (const void *)((v368 + v212) & v74);
        uint64_t v215 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v215(v214, 1, v371))
        {
          memcpy(v213, v214, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v213, v214, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v213, 0, 1, v371);
        }
        uint64_t v267 = (void *)(((unint64_t)v213 + v377) & v74);
        uint64_t v268 = (const void *)(((unint64_t)v214 + v377) & v74);
        if (v215(v268, 1, v371))
        {
          memcpy(v267, v268, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v267, v268, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v267, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v281 = (void *)(((unint64_t)v267 + v377) & v74);
        uint64_t v282 = (const void *)(((unint64_t)v268 + v377) & v74);
        if (v215(v282, 1, v371))
        {
          memcpy(v281, v282, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v281, v282, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v281, 0, 1, v371);
        }
        char v249 = 12;
        goto LABEL_266;
      case 0xDu:
        uint64_t v82 = v67;
        uint64_t v247 = ~v38;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v361 + 16))(v67, v68, v362);
        size_t v248 = v379;
        char v249 = 13;
        uint64_t v204 = v325;
        uint64_t v250 = v326;
        uint64_t v49 = a1;
        uint64_t v251 = v396;
        goto LABEL_268;
      case 0xEu:
        uint64_t v392 = ~v38;
        uint64_t v82 = v67;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v370 + 16))(v67, v68, v369);
        uint64_t v216 = (void *)(((unint64_t)v67 + v368) & v74);
        uint64_t v217 = (const void *)((unint64_t)&v68[v368] & v74);
        uint64_t v218 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v218(v217, 1, v371))
        {
          memcpy(v216, v217, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v216, v217, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v216, 0, 1, v371);
        }
        uint64_t v269 = (void *)(((unint64_t)v216 + v377) & v74);
        uint64_t v270 = (const void *)(((unint64_t)v217 + v377) & v74);
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        if (v218(v270, 1, v371))
        {
          memcpy(v269, v270, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v269, v270, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v269, 0, 1, v371);
        }
        char v249 = 14;
LABEL_266:
        uint64_t v250 = v326;
        size_t v248 = v379;
        uint64_t v251 = v396;
        break;
      default:
        uint64_t v385 = v75;
        uint64_t v392 = ~v38;
        long long v79 = *(_OWORD *)v68;
        long long v80 = *((_OWORD *)v68 + 1);
        long long v81 = *((_OWORD *)v68 + 3);
        uint64_t v82 = v67;
        v67[2] = *((_OWORD *)v68 + 2);
        v67[3] = v81;
        *uint64_t v67 = v79;
        v67[1] = v80;
        long long v83 = *((_OWORD *)v68 + 4);
        long long v84 = *((_OWORD *)v68 + 5);
        long long v85 = *((_OWORD *)v68 + 7);
        v67[6] = *((_OWORD *)v68 + 6);
        v67[7] = v85;
        v67[4] = v83;
        v67[5] = v84;
        long long v86 = *((_OWORD *)v68 + 8);
        long long v87 = *((_OWORD *)v68 + 9);
        long long v88 = *((_OWORD *)v68 + 11);
        v67[10] = *((_OWORD *)v68 + 10);
        v67[11] = v88;
        v67[8] = v86;
        v67[9] = v87;
        long long v89 = *((_OWORD *)v68 + 12);
        long long v90 = *((_OWORD *)v68 + 13);
        long long v91 = *((_OWORD *)v68 + 14);
        *((void *)v67 + 30) = *((void *)v68 + 30);
        v67[13] = v90;
        v67[14] = v91;
        v67[12] = v89;
        uint64_t v92 = ((unint64_t)v67 + v354) & v73;
        unint64_t v93 = (unint64_t)&v68[v354] & v73;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v370 + 16))(v92, v93, v369);
        *(unsigned char *)(v92 + v363) = *(unsigned char *)(v93 + v363);
        uint64_t v94 = (void *)((v5 + 1 + v92 + v363) & v74);
        uint64_t v95 = (const void *)((v5 + 1 + v93 + v363) & v74);
        uint64_t v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v372 + 48);
        if (v96(v95, 1, v371))
        {
          memcpy(v94, v95, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v94, v95, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v94, 0, 1, v371);
        }
        uint64_t v252 = (void *)(((unint64_t)v94 + v377) & v74);
        uint64_t v253 = (const void *)(((unint64_t)v95 + v377) & v74);
        if (v96(v253, 1, v371))
        {
          memcpy(v252, v253, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v252, v253, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v252, 0, 1, v371);
        }
        uint64_t v204 = v325;
        uint64_t v49 = a1;
        uint64_t v271 = (void *)(((unint64_t)v252 + v377) & v74);
        uint64_t v272 = (const void *)(((unint64_t)v253 + v377) & v74);
        if (v96(v272, 1, v371))
        {
          memcpy(v271, v272, v401);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v372 + 16))(v271, v272, v371);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v271, 0, 1, v371);
        }
        uint64_t v251 = v396;
        unint64_t v283 = ((unint64_t)v271 + v322) & v385;
        unint64_t v284 = ((unint64_t)v272 + v322) & v385;
        uint64_t v402 = *(void (**)(unint64_t, unint64_t, uint64_t))(v366 + 16);
        v402(v283, v284, v367);
        uint64_t v285 = (void *)((v364 + v283) & v385);
        uint64_t v286 = (const void *)((v364 + v284) & v385);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v366 + 48))(v286, 1, v367))
        {
          memcpy(v285, v286, v365);
        }
        else
        {
          v402((unint64_t)v285, (unint64_t)v286, v367);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v285, 0, 1, v367);
        }
        char v249 = 0;
LABEL_237:
        uint64_t v250 = v326;
        size_t v248 = v379;
        break;
    }
    uint64_t v247 = v392;
LABEL_268:
    *((unsigned char *)v82 + v248) = v249;
    uint64_t v312 = (void *)(((unint64_t)v82 + v250) & v247);
    uint64_t v313 = (const void *)((unint64_t)&v398[v250] & v247);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v328 + 48))(v313, 1, v329))
    {
      memcpy(v312, v313, v323);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v328 + 16))(v312, v313, v329);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v328 + 56))(v312, 0, 1, v329);
    }
    uint64_t v314 = (void *)(((unint64_t)v312 + v327) & v251);
    uint64_t v315 = (const void *)(((unint64_t)v313 + v327) & v251);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v204 + 48))(v315, 1, v330))
    {
      memcpy(v314, v315, v324);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v204 + 16))(v314, v315, v330);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v204 + 56))(v314, 0, 1, v330);
    }
    *(void *)(((unint64_t)v314 + v375) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v315 + v375) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v49 + v381) = 0;
    swift_bridgeObjectRetain();
  }
  return v49;
}

uint64_t sub_24ED9CF28(unsigned __int8 *a1, void *a2)
{
  uint64_t v175 = a2[5];
  uint64_t v173 = *(void *)(v175 - 8);
  uint64_t v172 = *(void *)(v173 + 64);
  uint64_t v137 = a2[3];
  uint64_t v177 = *(void *)(v137 - 8);
  uint64_t v138 = v177;
  uint64_t v3 = *(unsigned __int8 *)(v177 + 80);
  uint64_t v145 = sub_24EE55880();
  uint64_t v4 = *(void *)(v145 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v135 = a2[2];
  uint64_t v169 = *(void *)(v135 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v169 + 80);
  uint64_t v7 = sub_24EE55960();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v126 = v8;
  uint64_t v127 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = a2;
  uint64_t v132 = a2[7];
  uint64_t v11 = *(void *)(v132 - 8);
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v3 | v5 | v6 | v9;
  unint64_t v15 = *(void *)(v177 + 64);
  uint64_t v16 = v15 + v5;
  uint64_t v17 = v15 + v5 + 1;
  uint64_t v140 = v17 + ((v3 + 248) & ~v3);
  uint64_t v167 = v4;
  int v128 = *(_DWORD *)(v4 + 84);
  if (v128) {
    uint64_t v18 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v19 = v18 + v5;
  uint64_t v20 = v18 + v6;
  uint64_t v21 = *(void *)(v169 + 64);
  uint64_t v168 = v21 + v6;
  uint64_t v136 = v169;
  unint64_t v22 = *(void *)(v4 + 64);
  if (*(_DWORD *)(v169 + 84)) {
    uint64_t v23 = *(void *)(v169 + 64);
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  unint64_t v24 = ((v21 + v6 + ((v18 + v6 + ((v18 + v5 + ((v18 + v5 + (v140 & ~v5)) & ~v5)) & ~v5)) & ~v6)) & ~v6) + v23;
  if (v22 > v15) {
    unint64_t v15 = *(void *)(v4 + 64);
  }
  uint64_t v125 = v18 + v9;
  uint64_t v143 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v25 = ((v18 + v9 + (v19 & ~v5)) & ~v9) + *(void *)(v8 + 64);
  if (v25 <= v15) {
    unint64_t v26 = v15;
  }
  else {
    unint64_t v26 = v25;
  }
  uint64_t v133 = v17;
  uint64_t v129 = v23 + v6;
  uint64_t v130 = v23 + v13;
  uint64_t v131 = *(void *)(v132 - 8);
  unint64_t v27 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    unint64_t v28 = *(void *)(v11 + 64);
  }
  else {
    unint64_t v28 = v27 + 1;
  }
  unint64_t v29 = v28
      + ((v23
        + v13
        + ((v23 + v6 + ((v20 + ((v19 + ((v19 + ((v17 + ((v3 + 224) & ~v3)) & ~v5)) & ~v5)) & ~v5)) & ~v6)) & ~v6)) & ~v13);
  unint64_t v30 = ((v20 + ((v19 + ((v5 + 64) & ~v5)) & ~v5)) & ~v6) + v23;
  uint64_t v31 = v18 + (v16 & ~v5);
  unint64_t v32 = ((v31 + v5) & ~v5) + v18;
  unint64_t v33 = ((v5 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v5) + v18;
  uint64_t v139 = v18 + v6;
  uint64_t v144 = v6;
  uint64_t v166 = v23;
  unint64_t v34 = ((v20 + ((v19 + ((v19 + ((v19 + ((v16 + ((v3 + 160) & ~v3)) & ~v5)) & ~v5)) & ~v5)) & ~v5)) & ~v6) + v23;
  uint64_t v35 = ((v16 + ((v3 + 64) & ~v3)) & ~v5) + v18;
  unint64_t v161 = v33;
  if (v33 <= v24) {
    unint64_t v33 = v24;
  }
  unint64_t v150 = v26 + 1;
  unint64_t v134 = v26;
  if (v33 <= v26 + 1) {
    unint64_t v33 = v26 + 1;
  }
  unint64_t v162 = v30;
  unint64_t v163 = v29;
  if (v33 <= v29) {
    unint64_t v33 = v29;
  }
  if (v33 <= v30) {
    unint64_t v33 = v30;
  }
  unint64_t v159 = ((v19 + ((v16 + ((v3 + 24) & ~v3)) & ~v5)) & ~v5) + v18;
  unint64_t v160 = ((v32 + v5) & ~v5) + v18;
  if (v33 <= v160) {
    unint64_t v33 = ((v32 + v5) & ~v5) + v18;
  }
  if (v33 <= ((v19 + ((v16 + ((v3 + 24) & ~v3)) & ~v5)) & (unint64_t)~v5) + v18) {
    unint64_t v33 = ((v19 + ((v16 + ((v3 + 24) & ~v3)) & ~v5)) & ~v5) + v18;
  }
  unint64_t v157 = v34;
  unint64_t v158 = ((v19 + ((v19 + ((v16 + ((v3 + 104) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  if (v33 <= v158) {
    unint64_t v33 = ((v19 + ((v19 + ((v16 + ((v3 + 104) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  }
  if (v33 <= v34) {
    unint64_t v33 = v34;
  }
  unint64_t v156 = ((v19 + ((v19 + ((v16 + ((v3 + 56) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  if (v33 <= v156) {
    unint64_t v33 = ((v19 + ((v19 + ((v16 + ((v3 + 56) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  }
  unint64_t v151 = v35 + 1;
  if (v33 <= v35 + 1) {
    unint64_t v36 = v35 + 1;
  }
  else {
    unint64_t v36 = v33;
  }
  uint64_t v141 = v18 + v5;
  uint64_t v170 = v18;
  unint64_t v149 = ((v19 + ((v19 + ((v16 + ((v3 + 128) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  if (v36 <= v149) {
    unint64_t v36 = ((v19 + ((v19 + ((v16 + ((v3 + 128) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v18;
  }
  unint64_t v164 = v32;
  unint64_t v165 = v27;
  if (v36 <= v32) {
    unint64_t v36 = v32;
  }
  if (v36 <= v27) {
    unint64_t v37 = v27;
  }
  else {
    unint64_t v37 = v36;
  }
  uint64_t v153 = v10[4];
  uint64_t v38 = *(void *)(v153 - 8);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v152 = v38;
  if (*(_DWORD *)(v38 + 84)) {
    uint64_t v40 = *(void *)(*(void *)(v153 - 8) + 64);
  }
  else {
    uint64_t v40 = *(void *)(*(void *)(v153 - 8) + 64) + 1;
  }
  uint64_t v155 = v10[6];
  uint64_t v41 = *(void *)(v155 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v154 = v41;
  uint64_t v43 = *(void *)(v41 + 64);
  uint64_t v142 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v44 = v14 | v13 | 7;
  uint64_t v178 = v39;
  uint64_t v148 = v40 + v42;
  uint64_t v45 = (v40 + v42 + ((v39 + ((v44 + v172) & ~v44) + v37 + 1) & ~v39)) & ~v42;
  if (!*(_DWORD *)(v41 + 84)) {
    ++v43;
  }
  unint64_t v46 = ((v43 + 7 + v45) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v172 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 > v46) {
    unint64_t v46 = ((v172 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unsigned int v47 = a1[v46];
  if (v47 >= 2)
  {
    int v48 = v46 <= 3 ? v46 : 4;
    if (v48)
    {
      if (v48 == 4)
      {
        int v49 = *(_DWORD *)a1;
        if (v46 < 4)
        {
LABEL_57:
          unsigned int v47 = (v49 | ((v47 - 2) << (8 * v46))) + 2;
          goto LABEL_60;
        }
      }
      else
      {
        int v49 = *a1;
        if (v46 < 4) {
          goto LABEL_57;
        }
      }
      unsigned int v47 = v49 + 2;
    }
  }
LABEL_60:
  uint64_t result = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v173 + 8))(a1, v175);
  if (v47 != 1)
  {
    uint64_t v51 = (unsigned __int8 *)((unint64_t)&a1[v44 + v172] & ~v44);
    unsigned int v52 = v51[v37];
    unsigned int v53 = v52 - 15;
    if (v52 < 0xF)
    {
      uint64_t v55 = v145;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v54 = v37;
      }
      else {
        uint64_t v54 = 4;
      }
      uint64_t v55 = v145;
      switch(v54)
      {
        case 1:
          int v56 = *v51;
          if (v37 < 4) {
            goto LABEL_74;
          }
          goto LABEL_75;
        case 2:
          int v56 = *(unsigned __int16 *)v51;
          if (v37 >= 4) {
            goto LABEL_75;
          }
          goto LABEL_74;
        case 3:
          int v56 = *(unsigned __int16 *)((unint64_t)&a1[v44 + v172] & ~v44) | (*(unsigned __int8 *)(((unint64_t)&a1[v44 + v172] & ~v44) + 2) << 16);
          if (v37 >= 4) {
            goto LABEL_75;
          }
          goto LABEL_74;
        case 4:
          int v56 = *(_DWORD *)v51;
          if (v37 < 4) {
LABEL_74:
          }
            v56 |= v53 << (8 * v37);
LABEL_75:
          unsigned int v52 = v56 + 15;
          break;
        default:
          break;
      }
    }
    uint64_t v57 = ~v3;
    uint64_t v176 = ~v5;
    uint64_t v58 = ~v6;
    uint64_t v174 = ~v42;
    long long v124 = v51;
    switch(v52)
    {
      case 1u:
        unsigned int v76 = v51[v134];
        unsigned int v77 = v76 - 3;
        if (v76 < 3)
        {
          uint64_t v65 = v141;
          uint64_t v79 = v167;
        }
        else
        {
          if (v134 <= 3) {
            uint64_t v78 = v134;
          }
          else {
            uint64_t v78 = 4;
          }
          uint64_t v65 = v141;
          uint64_t v79 = v167;
          switch(v78)
          {
            case 1:
              int v80 = *v51;
              goto LABEL_149;
            case 2:
              int v80 = *(unsigned __int16 *)v51;
              goto LABEL_149;
            case 3:
              int v80 = *(unsigned __int16 *)v51 | (v51[2] << 16);
              goto LABEL_149;
            case 4:
              int v80 = *(_DWORD *)v51;
LABEL_149:
              if (v134 < 4) {
                unsigned int v76 = (v80 | (v77 << (8 * v134))) + 3;
              }
              else {
                unsigned int v76 = v80 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v76 == 2)
        {
          long long v119 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v79 + 48);
          if (!v119(v51, 1, v55)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v79 + 8))(v51, v55);
          }
          unint64_t v120 = (unint64_t)&v51[v5 + v170] & v176;
          if (!v119((unsigned __int8 *)v120, 1, v55)) {
            (*(void (**)(unint64_t, uint64_t))(v79 + 8))(v120, v55);
          }
          (*(void (**)(unint64_t, uint64_t))(v126 + 8))((v125 + v120) & ~v143, v127);
        }
        else if (v76 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v79 + 8))(v51, v55);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v138 + 8))(v51, v137);
        }
        uint64_t v66 = v139;
        uint64_t v64 = v140;
        break;
      case 2u:
        uint64_t v146 = ~v6;
        uint64_t v81 = (unint64_t)&v51[v3 + 224] & v57;
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v81, v137);
        uint64_t v82 = (v133 + v81) & v176;
        long long v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v83(v82, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v82, v55);
        }
        uint64_t v65 = v141;
        uint64_t v84 = (v141 + v82) & v176;
        uint64_t v66 = v139;
        if (!v83(v84, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v84, v55);
        }
        uint64_t v85 = (v141 + v84) & v176;
        if (!v83(v85, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v85, v55);
        }
        uint64_t v58 = ~v144;
        uint64_t v86 = (v139 + v85) & v146;
        long long v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
        uint64_t v64 = v140;
        if (!v87(v86, 1, v135)) {
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v86, v135);
        }
        uint64_t v88 = (v129 + v86) & v146;
        if (!v87(v88, 1, v135)) {
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v88, v135);
        }
        uint64_t v89 = (v130 + v88) & ~v142;
        uint64_t v91 = v131;
        uint64_t v90 = v132;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v89, 1, v132)) {
          goto LABEL_125;
        }
        break;
      case 3u:
        uint64_t v92 = (unint64_t)&v51[v5 + 64] & v176;
        unint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v93(v92, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v92, v55);
        }
        uint64_t v65 = v141;
        uint64_t v94 = (v141 + v92) & v176;
        if (!v93(v94, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v94, v55);
        }
        uint64_t v95 = v139 + v94;
        uint64_t v66 = v139;
        uint64_t v89 = v95 & v58;
        uint64_t v90 = v135;
        uint64_t v91 = v136;
        goto LABEL_124;
      case 4u:
        uint64_t v147 = ~v6;
        (*(void (**)(unsigned __int8 *, uint64_t))(v138 + 8))(v51, v137);
        unint64_t v96 = (unint64_t)&v51[v16];
        goto LABEL_133;
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v138 + 8))(v51, v137);
        uint64_t v59 = v167;
        long long v60 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v60((unint64_t)&v51[v16] & v176, 1, v55)) {
          (*(void (**)(unint64_t, uint64_t))(v167 + 8))((unint64_t)&v51[v16] & v176, v55);
        }
        unint64_t v61 = (v5 + 24 + ((((unint64_t)&v51[v16] & v176) + v170) & 0xFFFFFFFFFFFFFFF8)) & v176;
        unsigned int v62 = v60(v61, 1, v55);
        uint64_t v63 = v55;
        uint64_t v64 = v140;
        uint64_t v65 = v141;
        uint64_t v66 = v139;
        if (!v62) {
          goto LABEL_144;
        }
        break;
      case 6u:
        uint64_t v97 = (unint64_t)&v51[v3 + 24] & v57;
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v97, v137);
        unint64_t v98 = v16 + v97;
        goto LABEL_141;
      case 8u:
        uint64_t v147 = ~v6;
        uint64_t v99 = v3 + 104;
        goto LABEL_132;
      case 9u:
        uint64_t v100 = (unint64_t)&v51[v3 + 160] & v57;
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v100, v137);
        uint64_t v101 = (v16 + v100) & v176;
        long long v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v102(v101, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v101, v55);
        }
        uint64_t v65 = v141;
        uint64_t v103 = (v141 + v101) & v176;
        if (!v102(v103, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v103, v55);
        }
        uint64_t v104 = (v141 + v103) & v176;
        if (!v102(v104, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v104, v55);
        }
        uint64_t v105 = (v141 + v104) & v176;
        unsigned int v106 = v102(v105, 1, v55);
        uint64_t v90 = v135;
        uint64_t v91 = v136;
        if (!v106) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v105, v55);
        }
        uint64_t v107 = v139 + v105;
        uint64_t v66 = v139;
        uint64_t v89 = v107 & v58;
LABEL_124:
        uint64_t v64 = v140;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90)) {
LABEL_125:
        }
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
        break;
      case 0xAu:
        uint64_t v147 = ~v6;
        uint64_t v99 = v3 + 56;
        goto LABEL_132;
      case 0xBu:
        uint64_t v108 = (unint64_t)&v51[v3 + 64] & v57;
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v108, v137);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))((v16 + v108) & v176, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))((v16 + v108) & v176, v55);
        }
        uint64_t v64 = v140;
        uint64_t v65 = v141;
        uint64_t v66 = v139;
        if (!v128) {
          break;
        }
        goto LABEL_163;
      case 0xCu:
        uint64_t v147 = ~v6;
        uint64_t v99 = v3 + 128;
LABEL_132:
        unint64_t v109 = (unint64_t)&v51[v99] & v57;
        (*(void (**)(unint64_t, uint64_t))(v138 + 8))(v109, v137);
        unint64_t v96 = v16 + v109;
LABEL_133:
        unint64_t v110 = v96 & v176;
        long long v111 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v111(v96 & v176, 1, v55)) {
          (*(void (**)(unint64_t, uint64_t))(v167 + 8))(v110, v55);
        }
        uint64_t v65 = v141;
        unint64_t v112 = (v141 + v110) & v176;
        unsigned int v113 = v111(v112, 1, v55);
        uint64_t v114 = v55;
        uint64_t v66 = v139;
        uint64_t v64 = v140;
        if (!v113) {
          (*(void (**)(unint64_t, uint64_t))(v167 + 8))(v112, v114);
        }
        uint64_t v115 = (v141 + v112) & v176;
        uint64_t v58 = v147;
        if (!v111(v115, 1, v114)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v115, v114);
        }
        break;
      case 0xDu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v131 + 8))(v51, v132);
        uint64_t v64 = v140;
        uint64_t v65 = v141;
        uint64_t v66 = v139;
        break;
      case 0xEu:
        (*(void (**)(unsigned __int8 *, uint64_t))(v138 + 8))(v51, v137);
        unint64_t v98 = (unint64_t)&v51[v16];
LABEL_141:
        unint64_t v116 = v98 & v176;
        uint64_t v59 = v167;
        long long v117 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v117(v98 & v176, 1, v55)) {
          (*(void (**)(unint64_t, uint64_t))(v167 + 8))(v116, v55);
        }
        uint64_t v65 = v141;
        unint64_t v61 = (v141 + v116) & v176;
        unsigned int v118 = v117(v61, 1, v55);
        uint64_t v63 = v55;
        uint64_t v64 = v140;
        uint64_t v66 = v139;
        if (!v118) {
LABEL_144:
        }
          (*(void (**)(unint64_t, uint64_t))(v59 + 8))(v61, v63);
        break;
      default:
        uint64_t v67 = (unint64_t)&v51[v3 + 248] & v57;
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v67, v137);
        uint64_t v68 = (v133 + v67) & v176;
        unsigned int v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        if (!v69(v68, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v68, v55);
        }
        uint64_t v65 = v141;
        uint64_t v70 = (v141 + v68) & v176;
        if (!v69(v70, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v70, v55);
        }
        uint64_t v71 = (v141 + v70) & v176;
        if (!v69(v71, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v71, v55);
        }
        uint64_t v72 = v139 + v71;
        uint64_t v66 = v139;
        uint64_t v73 = v72 & v58;
        uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
        v74(v72 & v58, v135);
        uint64_t v75 = (v168 + v73) & v58;
        uint64_t v64 = v140;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v75, 1, v135)) {
          v74(v75, v135);
        }
        break;
    }
    unint64_t v22 = v170;
LABEL_163:
    unint64_t v121 = ((v168 + ((v66 + ((v65 + (((v64 | v5) + v22) & v176)) & v176)) & v58)) & v58) + v166;
    if (v150 > v121) {
      unint64_t v121 = v150;
    }
    if (v163 > v121) {
      unint64_t v121 = v163;
    }
    if (v162 > v121) {
      unint64_t v121 = v162;
    }
    if (v160 > v121) {
      unint64_t v121 = v160;
    }
    if (v161 > v121) {
      unint64_t v121 = v161;
    }
    if (v159 > v121) {
      unint64_t v121 = v159;
    }
    if (v161 > v121) {
      unint64_t v121 = v161;
    }
    if (v158 > v121) {
      unint64_t v121 = v158;
    }
    if (v157 > v121) {
      unint64_t v121 = v157;
    }
    if (v156 > v121) {
      unint64_t v121 = v156;
    }
    if (v151 > v121) {
      unint64_t v121 = v151;
    }
    if (v149 > v121) {
      unint64_t v121 = v149;
    }
    if (v165 > v121) {
      unint64_t v121 = v165;
    }
    if (v164 > v121) {
      unint64_t v121 = v164;
    }
    uint64_t v122 = (((unint64_t)v124 | 1) + v178 + v121) & ~v178;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v122, 1, v153)) {
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v122, v153);
    }
    uint64_t v123 = (v148 + v122) & v174;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v123, 1, v155)) {
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v123, v155);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24ED9E384(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v395 = a3[5];
  uint64_t v393 = *(void *)(v395 - 8);
  uint64_t v403 = *(void *)(v393 + 64);
  uint64_t v363 = a3[3];
  uint64_t v386 = *(void *)(v363 - 8);
  uint64_t v364 = v386;
  uint64_t v4 = *(unsigned __int8 *)(v386 + 80);
  uint64_t v365 = sub_24EE55880();
  uint64_t v5 = *(void *)(v365 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v357 = a3[2];
  uint64_t v383 = *(void *)(v357 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v383 + 80);
  uint64_t v8 = sub_24EE55960();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v354 = a3[7];
  uint64_t v10 = *(void *)(v354 - 8);
  uint64_t v323 = v9;
  uint64_t v324 = v8;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v4 | v6 | v7 | v11;
  uint64_t v345 = v4 + 248;
  unint64_t v14 = *(void *)(v386 + 64);
  uint64_t v15 = v14 + v6;
  uint64_t v16 = v14 + v6 + 1;
  uint64_t v348 = v16 + ((v4 + 248) & ~v4);
  uint64_t v380 = v5;
  unint64_t v17 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v18 = *(void *)(v5 + 64);
  }
  else {
    size_t v18 = v17 + 1;
  }
  size_t v19 = v18 + v6;
  size_t v20 = v18 + v7;
  uint64_t v21 = *(void *)(v383 + 64);
  uint64_t v355 = *(void *)(v386 + 64);
  uint64_t v356 = v21 + v7;
  uint64_t v358 = v383;
  if (*(_DWORD *)(v383 + 84)) {
    size_t v22 = *(void *)(v383 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  unint64_t v23 = ((v21 + v7 + ((v18 + v7 + ((v18 + v6 + ((v18 + v6 + (v348 & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7) + v22;
  if (v17 <= v14) {
    size_t v24 = *(void *)(v386 + 64);
  }
  else {
    size_t v24 = *(void *)(v5 + 64);
  }
  size_t v322 = v18 + v11;
  uint64_t v371 = *(unsigned __int8 *)(v9 + 80);
  size_t v25 = ((v18 + v11 + (v19 & ~v6)) & ~v11) + *(void *)(v9 + 64);
  if (v25 <= v24) {
    size_t v25 = v24;
  }
  size_t v346 = v25 + 1;
  size_t v351 = v25;
  if (v25 + 1 > v23) {
    unint64_t v26 = v25 + 1;
  }
  else {
    unint64_t v26 = v23;
  }
  uint64_t v338 = v4 + 224;
  size_t v349 = v22 + v7;
  size_t v350 = v22 + v12;
  uint64_t v27 = (v22
       + v12
       + ((v22 + v7 + ((v20 + ((v19 + ((v19 + ((v16 + ((v4 + 224) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7)) & ~v12;
  uint64_t v353 = *(void *)(v354 - 8);
  unint64_t v28 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v29 = *(void *)(v10 + 64);
  }
  else {
    size_t v29 = v28 + 1;
  }
  size_t __n = v29;
  unint64_t v30 = v27 + v29;
  unint64_t v343 = v30;
  if (v30 <= v26) {
    unint64_t v30 = v26;
  }
  uint64_t v332 = v6 + 64;
  unint64_t v342 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v342 > v30) {
    unint64_t v30 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  size_t v31 = v18 + (v15 & ~v6);
  unint64_t v32 = ((v31 + v6) & ~v6) + v18;
  unint64_t v341 = ((v32 + v6) & ~v6) + v18;
  if (v341 > v30) {
    unint64_t v30 = ((v32 + v6) & ~v6) + v18;
  }
  uint64_t v352 = v6 + 24;
  unint64_t v33 = (v6 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  if (v33 + v18 > v30) {
    unint64_t v30 = v33 + v18;
  }
  uint64_t v328 = v4 + 24;
  unint64_t v339 = ((v19 + ((v15 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v18;
  unint64_t v340 = v33 + v18;
  if (v339 > v30) {
    unint64_t v30 = ((v19 + ((v15 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v18;
  }
  if (v33 + v18 > v30) {
    unint64_t v30 = v33 + v18;
  }
  uint64_t v327 = v4 + 104;
  unint64_t v337 = ((v19 + ((v19 + ((v15 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v337 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v331 = v4 + 160;
  size_t v359 = v18 + v7;
  uint64_t v373 = v7;
  unint64_t v336 = ((v20 + ((v19 + ((v19 + ((v19 + ((v15 + ((v4 + 160) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v336 > v30) {
    unint64_t v30 = ((v20 + ((v19 + ((v19 + ((v19 + ((v15 + ((v4 + 160) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  uint64_t v326 = v4 + 56;
  unint64_t v335 = ((v19 + ((v19 + ((v15 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v335 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v330 = v4 + 64;
  size_t v34 = ((v15 + ((v4 + 64) & ~v4)) & ~v6) + v18;
  size_t v334 = v34 + 1;
  if (v34 + 1 > v30) {
    unint64_t v30 = v34 + 1;
  }
  uint64_t v329 = v4 + 128;
  uint64_t v362 = v14 + v6;
  size_t v381 = v18 + v6;
  size_t v384 = v18;
  unint64_t v333 = ((v19 + ((v19 + ((v15 + ((v4 + 128) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v333 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 128) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  unint64_t v347 = v28;
  if (v28 > v30) {
    unint64_t v30 = v28;
  }
  size_t v344 = v32;
  if (v32 <= v30) {
    unint64_t v35 = v30;
  }
  else {
    unint64_t v35 = v32;
  }
  uint64_t v369 = a3[4];
  uint64_t v36 = *(void *)(v369 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v382 = v36;
  if (*(_DWORD *)(v36 + 84)) {
    uint64_t v38 = *(void *)(*(void *)(v369 - 8) + 64);
  }
  else {
    uint64_t v38 = *(void *)(*(void *)(v369 - 8) + 64) + 1;
  }
  uint64_t v370 = a3[6];
  uint64_t v39 = *(void *)(v370 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v366 = v39;
  uint64_t v41 = v13 | v12 | 7;
  unint64_t v387 = v35;
  uint64_t v42 = v41 + v403;
  uint64_t v368 = v35 + v37 + 1;
  size_t v360 = v38;
  uint64_t v379 = v38 + v40;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v43 = *(void *)(*(void *)(v370 - 8) + 64);
  }
  else {
    uint64_t v43 = *(void *)(*(void *)(v370 - 8) + 64) + 1;
  }
  size_t v361 = v43;
  uint64_t v367 = v43 + 7;
  if (((v403 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= ((v43
                                                    + 7
                                                    + ((v38 + v40 + ((v368 + ((v41 + v403) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8)
                                                  + 8)
    unint64_t v44 = ((v43 + 7 + ((v38 + v40 + ((v368 + ((v41 + v403) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8) + 8;
  else {
    unint64_t v44 = ((v403 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unsigned int v45 = a2[v44];
  if (v45 >= 2)
  {
    int v46 = v44 <= 3 ? v44 : 4;
    if (v46)
    {
      if (v46 == 4)
      {
        int v47 = *(_DWORD *)a2;
        if (v44 >= 4)
        {
LABEL_61:
          unsigned int v45 = v47 + 2;
          goto LABEL_64;
        }
      }
      else
      {
        int v47 = *a2;
        if (v44 >= 4) {
          goto LABEL_61;
        }
      }
      unsigned int v45 = (v47 | ((v45 - 2) << (8 * v44))) + 2;
    }
  }
LABEL_64:
  unint64_t v388 = v44;
  uint64_t v48 = a1;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v393 + 16))(a1, a2, v395);
  if (v45 == 1)
  {
    unint64_t v49 = (unint64_t)&a2[v403 + 7] & 0xFFFFFFFFFFFFFFF8;
    unsigned int v50 = *(unsigned __int8 *)(v49 + 248);
    if (v50 >= 0xB) {
      unsigned int v50 = *(_DWORD *)v49 + 11;
    }
    unint64_t v51 = (a1 + v403 + 7) & 0xFFFFFFFFFFFFFFF8;
    switch(v50)
    {
      case 0u:
        long long v52 = *(_OWORD *)v49;
        long long v53 = *(_OWORD *)(v49 + 16);
        long long v54 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v54;
        *(_OWORD *)unint64_t v51 = v52;
        *(_OWORD *)(v51 + 16) = v53;
        long long v55 = *(_OWORD *)(v49 + 64);
        long long v56 = *(_OWORD *)(v49 + 80);
        long long v57 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v57;
        *(_OWORD *)(v51 + 64) = v55;
        *(_OWORD *)(v51 + 80) = v56;
        long long v58 = *(_OWORD *)(v49 + 128);
        long long v59 = *(_OWORD *)(v49 + 144);
        long long v60 = *(_OWORD *)(v49 + 176);
        *(_OWORD *)(v51 + 160) = *(_OWORD *)(v49 + 160);
        *(_OWORD *)(v51 + 176) = v60;
        *(_OWORD *)(v51 + 128) = v58;
        *(_OWORD *)(v51 + 144) = v59;
        long long v61 = *(_OWORD *)(v49 + 192);
        long long v62 = *(_OWORD *)(v49 + 208);
        long long v63 = *(_OWORD *)(v49 + 224);
        *(void *)(v51 + 240) = *(void *)(v49 + 240);
        *(_OWORD *)(v51 + 208) = v62;
        *(_OWORD *)(v51 + 224) = v63;
        *(_OWORD *)(v51 + 192) = v61;
        *(unsigned char *)(v51 + 248) = 0;
        break;
      case 1u:
        long long v94 = *(_OWORD *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(_OWORD *)(v51 + 16) = v94;
        long long v95 = *(_OWORD *)(v49 + 32);
        long long v96 = *(_OWORD *)(v49 + 48);
        long long v97 = *(_OWORD *)(v49 + 80);
        *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 64);
        *(_OWORD *)(v51 + 80) = v97;
        *(_OWORD *)(v51 + 32) = v95;
        *(_OWORD *)(v51 + 48) = v96;
        long long v98 = *(_OWORD *)(v49 + 96);
        long long v99 = *(_OWORD *)(v49 + 112);
        long long v100 = *(_OWORD *)(v49 + 144);
        *(_OWORD *)(v51 + 128) = *(_OWORD *)(v49 + 128);
        *(_OWORD *)(v51 + 144) = v100;
        *(_OWORD *)(v51 + 96) = v98;
        *(_OWORD *)(v51 + 112) = v99;
        long long v101 = *(_OWORD *)(v49 + 160);
        long long v102 = *(_OWORD *)(v49 + 176);
        long long v103 = *(_OWORD *)(v49 + 208);
        *(_OWORD *)(v51 + 192) = *(_OWORD *)(v49 + 192);
        *(_OWORD *)(v51 + 208) = v103;
        *(_OWORD *)(v51 + 160) = v101;
        *(_OWORD *)(v51 + 176) = v102;
        *(unsigned char *)(v51 + 248) = 1;
        break;
      case 2u:
        long long v104 = *(_OWORD *)v49;
        long long v105 = *(_OWORD *)(v49 + 16);
        long long v106 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v106;
        *(_OWORD *)unint64_t v51 = v104;
        *(_OWORD *)(v51 + 16) = v105;
        *(unsigned char *)(v51 + 248) = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(unsigned char *)(v51 + 248) = 3;
        break;
      case 4u:
        long long v107 = *(_OWORD *)v49;
        *(void *)(v51 + 16) = *(void *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = v107;
        *(unsigned char *)(v51 + 248) = 4;
        break;
      case 5u:
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(unsigned char *)(v51 + 248) = 5;
        break;
      case 6u:
        long long v108 = *(_OWORD *)v49;
        long long v109 = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 16) = *(_OWORD *)(v49 + 16);
        *(_OWORD *)(v51 + 32) = v109;
        *(_OWORD *)unint64_t v51 = v108;
        long long v110 = *(_OWORD *)(v49 + 48);
        long long v111 = *(_OWORD *)(v49 + 64);
        long long v112 = *(_OWORD *)(v49 + 80);
        *(void *)(v51 + 96) = *(void *)(v49 + 96);
        *(_OWORD *)(v51 + 64) = v111;
        *(_OWORD *)(v51 + 80) = v112;
        *(_OWORD *)(v51 + 48) = v110;
        *(unsigned char *)(v51 + 248) = 6;
        break;
      case 7u:
        long long v113 = *(_OWORD *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(_OWORD *)(v51 + 16) = v113;
        long long v114 = *(_OWORD *)(v49 + 32);
        long long v115 = *(_OWORD *)(v49 + 48);
        long long v116 = *(_OWORD *)(v49 + 80);
        *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 64);
        *(_OWORD *)(v51 + 80) = v116;
        *(_OWORD *)(v51 + 32) = v114;
        *(_OWORD *)(v51 + 48) = v115;
        long long v117 = *(_OWORD *)(v49 + 96);
        long long v118 = *(_OWORD *)(v49 + 112);
        long long v119 = *(_OWORD *)(v49 + 144);
        *(_OWORD *)(v51 + 128) = *(_OWORD *)(v49 + 128);
        *(_OWORD *)(v51 + 144) = v119;
        *(_OWORD *)(v51 + 96) = v117;
        *(_OWORD *)(v51 + 112) = v118;
        *(unsigned char *)(v51 + 248) = 7;
        break;
      case 8u:
        long long v120 = *(_OWORD *)v49;
        long long v121 = *(_OWORD *)(v49 + 16);
        long long v122 = *(_OWORD *)(v49 + 32);
        *(void *)(v51 + 48) = *(void *)(v49 + 48);
        *(_OWORD *)(v51 + 16) = v121;
        *(_OWORD *)(v51 + 32) = v122;
        *(_OWORD *)unint64_t v51 = v120;
        *(unsigned char *)(v51 + 248) = 8;
        break;
      case 9u:
        long long v123 = *(_OWORD *)v49;
        long long v124 = *(_OWORD *)(v49 + 16);
        long long v125 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v125;
        *(_OWORD *)unint64_t v51 = v123;
        *(_OWORD *)(v51 + 16) = v124;
        *(unsigned char *)(v51 + 248) = 9;
        break;
      case 0xAu:
        long long v126 = *(_OWORD *)v49;
        long long v127 = *(_OWORD *)(v49 + 16);
        long long v128 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v128;
        *(_OWORD *)unint64_t v51 = v126;
        *(_OWORD *)(v51 + 16) = v127;
        long long v129 = *(_OWORD *)(v49 + 64);
        long long v130 = *(_OWORD *)(v49 + 80);
        long long v131 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v131;
        *(_OWORD *)(v51 + 64) = v129;
        *(_OWORD *)(v51 + 80) = v130;
        *(unsigned char *)(v51 + 248) = 10;
        break;
      default:
        long long v132 = *(_OWORD *)v49;
        long long v133 = *(_OWORD *)(v49 + 16);
        long long v134 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v134;
        *(_OWORD *)unint64_t v51 = v132;
        *(_OWORD *)(v51 + 16) = v133;
        long long v135 = *(_OWORD *)(v49 + 64);
        long long v136 = *(_OWORD *)(v49 + 80);
        long long v137 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v137;
        *(_OWORD *)(v51 + 64) = v135;
        *(_OWORD *)(v51 + 80) = v136;
        long long v138 = *(_OWORD *)(v49 + 128);
        long long v139 = *(_OWORD *)(v49 + 144);
        long long v140 = *(_OWORD *)(v49 + 176);
        *(_OWORD *)(v51 + 160) = *(_OWORD *)(v49 + 160);
        *(_OWORD *)(v51 + 176) = v140;
        *(_OWORD *)(v51 + 128) = v138;
        *(_OWORD *)(v51 + 144) = v139;
        long long v141 = *(_OWORD *)(v49 + 192);
        long long v142 = *(_OWORD *)(v49 + 208);
        long long v143 = *(_OWORD *)(v49 + 224);
        *(_OWORD *)(v51 + 233) = *(_OWORD *)(v49 + 233);
        *(_OWORD *)(v51 + 208) = v142;
        *(_OWORD *)(v51 + 224) = v143;
        *(_OWORD *)(v51 + 192) = v141;
        break;
    }
    *(unsigned char *)(a1 + v388) = 1;
  }
  else
  {
    uint64_t v64 = ~v41;
    uint64_t v65 = (_OWORD *)((v42 + a1) & ~v41);
    uint64_t v66 = (unsigned __int8 *)((unint64_t)&a2[v42] & v64);
    unsigned int v67 = v66[v387];
    unsigned int v68 = v67 - 15;
    if (v67 >= 0xF)
    {
      if (v387 <= 3) {
        uint64_t v69 = v387;
      }
      else {
        uint64_t v69 = 4;
      }
      switch(v69)
      {
        case 1:
          int v70 = *v66;
          if (v387 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 2:
          int v70 = *(unsigned __int16 *)v66;
          if (v387 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 3:
          int v70 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          if (v387 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 4:
          int v70 = *(_DWORD *)v66;
          if (v387 < 4) {
LABEL_77:
          }
            unsigned int v67 = (v70 | (v68 << (8 * v387))) + 15;
          else {
LABEL_81:
          }
            unsigned int v67 = v70 + 15;
          break;
        default:
          break;
      }
    }
    size_t v394 = v22;
    uint64_t v71 = ~v4;
    uint64_t v72 = ~v6;
    uint64_t v73 = ~v12;
    uint64_t v74 = ~v37;
    uint64_t v75 = ~v40;
    size_t v76 = v384;
    switch(v67)
    {
      case 1u:
        size_t v144 = v351;
        unsigned int v145 = v66[v351];
        unsigned int v146 = v145 - 3;
        if (v145 < 3)
        {
          uint64_t v148 = v380;
        }
        else
        {
          if (v351 <= 3) {
            uint64_t v147 = v351;
          }
          else {
            uint64_t v147 = 4;
          }
          uint64_t v148 = v380;
          switch(v147)
          {
            case 1:
              int v149 = *v66;
              goto LABEL_282;
            case 2:
              int v149 = *(unsigned __int16 *)v66;
              goto LABEL_282;
            case 3:
              int v149 = *(unsigned __int16 *)v66 | (v66[2] << 16);
              goto LABEL_282;
            case 4:
              int v149 = *(_DWORD *)v66;
LABEL_282:
              if (v351 < 4) {
                unsigned int v145 = (v149 | (v146 << (8 * v351))) + 3;
              }
              else {
                unsigned int v145 = v149 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v145 == 2)
        {
          uint64_t v405 = v74;
          char v317 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v148 + 48);
          uint64_t v399 = v75;
          if (v317(v66, 1, v365))
          {
            size_t v318 = v384;
            memcpy(v65, v66, v384);
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v148 + 16))(v65, v66, v365);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v148 + 56))(v65, 0, 1, v365);
            size_t v318 = v384;
          }
          uint64_t v392 = v65;
          uint64_t v319 = (void *)(((unint64_t)v65 + v6 + v318) & v72);
          uint64_t v320 = (void *)((unint64_t)&v66[v6 + v318] & v72);
          uint64_t v219 = v367;
          if (v317((unsigned __int8 *)v320, 1, v365))
          {
            memcpy(v319, v320, v318);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v380 + 16))(v319, v320, v365);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v319, 0, 1, v365);
          }
          uint64_t v48 = a1;
          uint64_t v249 = v369;
          size_t v144 = v351;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16))(((unint64_t)v319 + v322) & ~v371, ((unint64_t)v320 + v322) & ~v371, v324);
          char v316 = 2;
          uint64_t v248 = v370;
          uint64_t v218 = v366;
          uint64_t v250 = v368;
          uint64_t v65 = v392;
          size_t v246 = v387;
          uint64_t v75 = v399;
          uint64_t v245 = v405;
        }
        else
        {
          uint64_t v315 = v74;
          if (v145 == 1)
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v148 + 16))(v65, v66, v365);
            uint64_t v245 = v315;
            size_t v246 = v387;
            char v316 = 1;
            uint64_t v249 = v369;
            uint64_t v248 = v370;
            uint64_t v218 = v366;
            uint64_t v219 = v367;
            uint64_t v250 = v368;
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v364 + 16))(v65, v66, v363);
            char v316 = 0;
            uint64_t v249 = v369;
            uint64_t v248 = v370;
            uint64_t v218 = v366;
            uint64_t v219 = v367;
            uint64_t v250 = v368;
            size_t v246 = v387;
            uint64_t v245 = v315;
          }
        }
        *((unsigned char *)v65 + v144) = v316;
        char v247 = 1;
        goto LABEL_271;
      case 2u:
        uint64_t v375 = ~v373;
        uint64_t v404 = v74;
        uint64_t v397 = v75;
        long long v150 = *((_OWORD *)v66 + 1);
        *uint64_t v65 = *(_OWORD *)v66;
        v65[1] = v150;
        long long v151 = *((_OWORD *)v66 + 2);
        long long v152 = *((_OWORD *)v66 + 3);
        long long v153 = *((_OWORD *)v66 + 5);
        v65[4] = *((_OWORD *)v66 + 4);
        void v65[5] = v153;
        v65[2] = v151;
        v65[3] = v152;
        long long v154 = *((_OWORD *)v66 + 6);
        long long v155 = *((_OWORD *)v66 + 7);
        long long v156 = *((_OWORD *)v66 + 9);
        v65[8] = *((_OWORD *)v66 + 8);
        v65[9] = v156;
        v65[6] = v154;
        v65[7] = v155;
        long long v157 = *((_OWORD *)v66 + 10);
        long long v158 = *((_OWORD *)v66 + 11);
        long long v159 = *((_OWORD *)v66 + 13);
        v65[12] = *((_OWORD *)v66 + 12);
        v65[13] = v159;
        v65[10] = v157;
        v65[11] = v158;
        uint64_t v391 = v65;
        unint64_t v160 = ((unint64_t)v65 + v338) & v71;
        unint64_t v161 = (unint64_t)&v66[v338] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v160, v161, v363);
        uint64_t v162 = v161 + v355;
        *(unsigned char *)(v160 + v355) = *(unsigned char *)(v161 + v355);
        unint64_t v163 = (void *)((v6 + 1 + v160 + v355) & v72);
        unint64_t v164 = (const void *)((v6 + 1 + v162) & v72);
        unint64_t v165 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v165(v164, 1, v365))
        {
          memcpy(v163, v164, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v163, v164, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v163, 0, 1, v365);
        }
        uint64_t v253 = (void *)(((unint64_t)v163 + v381) & v72);
        uint64_t v254 = (const void *)(((unint64_t)v164 + v381) & v72);
        uint64_t v218 = v366;
        if (v165(v254, 1, v365))
        {
          memcpy(v253, v254, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v253, v254, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v253, 0, 1, v365);
        }
        uint64_t v272 = (void *)(((unint64_t)v253 + v381) & v72);
        uint64_t v273 = (const void *)(((unint64_t)v254 + v381) & v72);
        if (v165(v273, 1, v365))
        {
          memcpy(v272, v273, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v272, v273, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v272, 0, 1, v365);
        }
        uint64_t v249 = v369;
        uint64_t v285 = (void *)(((unint64_t)v272 + v359) & v375);
        uint64_t v286 = (const void *)(((unint64_t)v273 + v359) & v375);
        uint64_t v287 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v358 + 48);
        if (v287(v286, 1, v357))
        {
          memcpy(v285, v286, v394);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v358 + 16))(v285, v286, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v358 + 56))(v285, 0, 1, v357);
        }
        uint64_t v75 = v397;
        uint64_t v290 = (void *)(((unint64_t)v285 + v349) & v375);
        uint64_t v291 = (const void *)(((unint64_t)v286 + v349) & v375);
        uint64_t v292 = v66;
        if (v287(v291, 1, v357))
        {
          memcpy(v290, v291, v394);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v358 + 16))(v290, v291, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v358 + 56))(v290, 0, 1, v357);
        }
        uint64_t v248 = v370;
        uint64_t v294 = (void *)(((unint64_t)v290 + v350) & v73);
        uint64_t v295 = (const void *)(((unint64_t)v291 + v350) & v73);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v353 + 48))(v295, 1, v354))
        {
          memcpy(v294, v295, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v353 + 16))(v294, v295, v354);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v353 + 56))(v294, 0, 1, v354);
        }
        char v247 = 2;
        uint64_t v48 = a1;
        uint64_t v219 = v367;
        uint64_t v250 = v368;
        uint64_t v66 = v292;
        goto LABEL_237;
      case 3u:
        uint64_t v376 = ~v373;
        uint64_t v404 = v74;
        uint64_t v398 = v75;
        long long v166 = *(_OWORD *)v66;
        long long v167 = *((_OWORD *)v66 + 1);
        long long v168 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v168;
        *uint64_t v65 = v166;
        v65[1] = v167;
        uint64_t v391 = v65;
        uint64_t v169 = (void *)(((unint64_t)v65 + v332) & v72);
        uint64_t v170 = v66;
        long long v171 = (const void *)((unint64_t)&v66[v332] & v72);
        uint64_t v172 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v172(v171, 1, v365))
        {
          memcpy(v169, v171, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v169, v171, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v169, 0, 1, v365);
        }
        uint64_t v255 = (void *)(((unint64_t)v169 + v381) & v72);
        unint64_t v256 = (const void *)(((unint64_t)v171 + v381) & v72);
        if (v172(v256, 1, v365))
        {
          memcpy(v255, v256, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v255, v256, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v255, 0, 1, v365);
        }
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v66 = v170;
        uint64_t v385 = (void *)(((unint64_t)v255 + v359) & v376);
        uint64_t v274 = (const void *)(((unint64_t)v256 + v359) & v376);
        uint64_t v75 = v398;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v358 + 48))(v274, 1, v357))
        {
          memcpy(v385, v274, v394);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v358 + 16))(v385, v274, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v358 + 56))(v385, 0, 1, v357);
        }
        char v247 = 3;
        goto LABEL_234;
      case 4u:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v364 + 16))(v65, v66, v363);
        uint64_t v173 = v65;
        uint64_t v174 = (void *)(((unint64_t)v65 + v362) & v72);
        uint64_t v175 = (const void *)((unint64_t)&v66[v362] & v72);
        uint64_t v176 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v176(v175, 1, v365))
        {
          memcpy(v174, v175, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v174, v175, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v174, 0, 1, v365);
        }
        uint64_t v257 = (void *)(((unint64_t)v174 + v381) & v72);
        uint64_t v258 = (const void *)(((unint64_t)v175 + v381) & v72);
        if (v176(v258, 1, v365))
        {
          memcpy(v257, v258, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v257, v258, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v257, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v275 = (void *)(((unint64_t)v257 + v381) & v72);
        uint64_t v276 = (const void *)(((unint64_t)v258 + v381) & v72);
        if (v176(v276, 1, v365))
        {
          memcpy(v275, v276, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v275, v276, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v275, 0, 1, v365);
        }
        char v247 = 4;
        goto LABEL_267;
      case 5u:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v364 + 16))(v65, v66, v363);
        uint64_t v390 = v65;
        uint64_t v214 = (void *)(((unint64_t)v65 + v362) & v72);
        unint64_t v321 = v66;
        uint64_t v215 = (const void *)((unint64_t)&v66[v362] & v72);
        uint64_t v216 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v216(v215, 1, v365))
        {
          size_t v217 = v384;
          memcpy(v214, v215, v384);
          uint64_t v218 = v366;
          uint64_t v219 = v367;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v214, v215, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v214, 0, 1, v365);
          uint64_t v218 = v366;
          uint64_t v219 = v367;
          size_t v217 = v384;
        }
        *((unsigned char *)v214 + v217) = *((unsigned char *)v215 + v217);
        unint64_t v296 = ((unint64_t)v214 + v217) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v297 = ((unint64_t)v215 + v217) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v296 + 8) = *(_OWORD *)(v297 + 8);
        unint64_t v298 = (void *)((v352 + v296) & v72);
        unint64_t v299 = (const void *)((v352 + v297) & v72);
        if (v216(v299, 1, v365))
        {
          memcpy(v298, v299, v217);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v298, v299, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v298, 0, 1, v365);
        }
        char v247 = 5;
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        goto LABEL_252;
      case 6u:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v220 = *(_OWORD *)v66;
        *((void *)v65 + 2) = *((void *)v66 + 2);
        *uint64_t v65 = v220;
        uint64_t v390 = v65;
        unint64_t v221 = ((unint64_t)v65 + v328) & v71;
        uint64_t v178 = v66;
        unint64_t v222 = (unint64_t)&v66[v328] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v221, v222, v363);
        long long v223 = (void *)((v362 + v221) & v72);
        uint64_t v224 = (const void *)((v362 + v222) & v72);
        unint64_t v225 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v225(v224, 1, v365))
        {
          memcpy(v223, v224, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v223, v224, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v223, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        unint64_t v300 = (void *)(((unint64_t)v223 + v381) & v72);
        uint64_t v301 = (const void *)(((unint64_t)v224 + v381) & v72);
        if (v225(v301, 1, v365))
        {
          memcpy(v300, v301, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v300, v301, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v300, 0, 1, v365);
        }
        char v247 = 6;
        goto LABEL_255;
      case 7u:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v364 + 16))(v65, v66, v363);
        uint64_t v390 = v65;
        uint64_t v177 = (void *)(((unint64_t)v65 + v362) & v72);
        uint64_t v178 = v66;
        uint64_t v179 = (const void *)((unint64_t)&v66[v362] & v72);
        uint64_t v180 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v180(v179, 1, v365))
        {
          memcpy(v177, v179, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v177, v179, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v177, 0, 1, v365);
        }
        *((unsigned char *)v177 + v384) = *((unsigned char *)v179 + v384);
        unint64_t v259 = ((unint64_t)v177 + v384) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v260 = ((unint64_t)v179 + v384) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v259 + 8) = *(_OWORD *)(v260 + 8);
        unint64_t v261 = (void *)((v352 + v259) & v72);
        uint64_t v262 = (const void *)((v352 + v260) & v72);
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        if (v180(v262, 1, v365))
        {
          memcpy(v261, v262, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v261, v262, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v261, 0, 1, v365);
        }
        char v247 = 7;
        goto LABEL_255;
      case 8u:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v226 = *(_OWORD *)v66;
        long long v227 = *((_OWORD *)v66 + 2);
        v65[1] = *((_OWORD *)v66 + 1);
        v65[2] = v227;
        *uint64_t v65 = v226;
        long long v228 = *((_OWORD *)v66 + 3);
        long long v229 = *((_OWORD *)v66 + 4);
        long long v230 = *((_OWORD *)v66 + 5);
        *((void *)v65 + 12) = *((void *)v66 + 12);
        v65[4] = v229;
        void v65[5] = v230;
        v65[3] = v228;
        uint64_t v173 = v65;
        unint64_t v231 = ((unint64_t)v65 + v327) & v71;
        unint64_t v232 = (unint64_t)&v66[v327] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v231, v232, v363);
        long long v233 = (void *)((v362 + v231) & v72);
        uint64_t v234 = (const void *)((v362 + v232) & v72);
        unint64_t v235 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v235(v234, 1, v365))
        {
          memcpy(v233, v234, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v233, v234, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v233, 0, 1, v365);
        }
        uint64_t v302 = (void *)(((unint64_t)v233 + v381) & v72);
        uint64_t v303 = (const void *)(((unint64_t)v234 + v381) & v72);
        if (v235(v303, 1, v365))
        {
          memcpy(v302, v303, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v302, v303, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v302, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v306 = (void *)(((unint64_t)v302 + v381) & v72);
        uint64_t v307 = (const void *)(((unint64_t)v303 + v381) & v72);
        if (v235(v307, 1, v365))
        {
          memcpy(v306, v307, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v306, v307, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v306, 0, 1, v365);
        }
        char v247 = 8;
        goto LABEL_267;
      case 9u:
        uint64_t v377 = ~v373;
        uint64_t v404 = v74;
        uint64_t v181 = v75;
        long long v182 = *((_OWORD *)v66 + 1);
        *uint64_t v65 = *(_OWORD *)v66;
        v65[1] = v182;
        long long v183 = *((_OWORD *)v66 + 2);
        long long v184 = *((_OWORD *)v66 + 3);
        long long v185 = *((_OWORD *)v66 + 5);
        v65[4] = *((_OWORD *)v66 + 4);
        void v65[5] = v185;
        v65[2] = v183;
        v65[3] = v184;
        long long v186 = *((_OWORD *)v66 + 6);
        long long v187 = *((_OWORD *)v66 + 7);
        long long v188 = *((_OWORD *)v66 + 9);
        v65[8] = *((_OWORD *)v66 + 8);
        v65[9] = v188;
        v65[6] = v186;
        v65[7] = v187;
        uint64_t v391 = v65;
        unint64_t v189 = ((unint64_t)v65 + v331) & v71;
        unint64_t v190 = (unint64_t)&v66[v331] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v189, v190, v363);
        uint64_t v191 = (void *)((v362 + v189) & v72);
        uint64_t v192 = (const void *)((v362 + v190) & v72);
        uint64_t v372 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v372(v192, 1, v365))
        {
          memcpy(v191, v192, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v191, v192, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v191, 0, 1, v365);
        }
        uint64_t v263 = (void *)(((unint64_t)v191 + v381) & v72);
        uint64_t v264 = (const void *)(((unint64_t)v192 + v381) & v72);
        uint64_t v75 = v181;
        if (v372(v264, 1, v365))
        {
          memcpy(v263, v264, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v263, v264, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v263, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v277 = (void *)(((unint64_t)v263 + v381) & v72);
        uint64_t v278 = (const void *)(((unint64_t)v264 + v381) & v72);
        if (v372(v278, 1, v365))
        {
          memcpy(v277, v278, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v277, v278, v365);
          size_t v76 = v384;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v277, 0, 1, v365);
        }
        uint64_t v288 = (void *)(((unint64_t)v277 + v381) & v72);
        uint64_t v289 = (const void *)(((unint64_t)v278 + v381) & v72);
        if (v372(v289, 1, v365))
        {
          memcpy(v288, v289, v76);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v288, v289, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v288, 0, 1, v365);
        }
        uint64_t v48 = a1;
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        uint64_t v402 = (void *)(((unint64_t)v288 + v359) & v377);
        uint64_t v293 = (const void *)(((unint64_t)v289 + v359) & v377);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v358 + 48))(v293, 1, v357))
        {
          memcpy(v402, v293, v394);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v358 + 16))(v402, v293, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v358 + 56))(v402, 0, 1, v357);
        }
        char v247 = 9;
LABEL_234:
        uint64_t v250 = v368;
LABEL_237:
        uint64_t v65 = v391;
        size_t v246 = v387;
        goto LABEL_270;
      case 0xAu:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v236 = *(_OWORD *)v66;
        long long v237 = *((_OWORD *)v66 + 1);
        long long v238 = *((_OWORD *)v66 + 2);
        *((void *)v65 + 6) = *((void *)v66 + 6);
        v65[1] = v237;
        v65[2] = v238;
        *uint64_t v65 = v236;
        uint64_t v173 = v65;
        unint64_t v239 = ((unint64_t)v65 + v326) & v71;
        unint64_t v240 = (unint64_t)&v66[v326] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v239, v240, v363);
        long long v241 = (void *)((v362 + v239) & v72);
        uint64_t v242 = (const void *)((v362 + v240) & v72);
        unint64_t v243 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v243(v242, 1, v365))
        {
          memcpy(v241, v242, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v241, v242, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v241, 0, 1, v365);
        }
        uint64_t v304 = (void *)(((unint64_t)v241 + v381) & v72);
        uint64_t v305 = (const void *)(((unint64_t)v242 + v381) & v72);
        if (v243(v305, 1, v365))
        {
          memcpy(v304, v305, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v304, v305, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v304, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v308 = (void *)(((unint64_t)v304 + v381) & v72);
        uint64_t v309 = (const void *)(((unint64_t)v305 + v381) & v72);
        if (v243(v309, 1, v365))
        {
          memcpy(v308, v309, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v308, v309, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v308, 0, 1, v365);
        }
        char v247 = 10;
        goto LABEL_267;
      case 0xBu:
        uint64_t v378 = ~v373;
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v193 = *(_OWORD *)v66;
        long long v194 = *((_OWORD *)v66 + 1);
        long long v195 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v195;
        *uint64_t v65 = v193;
        v65[1] = v194;
        unint64_t v196 = ((unint64_t)v65 + v330) & v71;
        unint64_t v197 = (unint64_t)&v66[v330] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v196, v197, v363);
        long long v198 = (void *)((v362 + v196) & v72);
        uint64_t v199 = (const void *)((v362 + v197) & v72);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48))(v199, 1, v365))
        {
          memcpy(v198, v199, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v198, v199, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v198, 0, 1, v365);
        }
        uint64_t v248 = v370;
        *((unsigned char *)v198 + v384) = *((unsigned char *)v199 + v384);
        size_t v265 = ((v356 + ((v359 + ((v381 + (((v348 | v6) + v384) & v72)) & v72)) & v378)) & v378) + v394;
        if (v346 > v265) {
          size_t v265 = v346;
        }
        if (v343 > v265) {
          size_t v265 = v343;
        }
        if (v342 > v265) {
          size_t v265 = v342;
        }
        if (v341 > v265) {
          size_t v265 = v341;
        }
        if (v340 > v265) {
          size_t v265 = v340;
        }
        if (v339 > v265) {
          size_t v265 = v339;
        }
        if (v340 > v265) {
          size_t v265 = v340;
        }
        if (v337 > v265) {
          size_t v265 = v337;
        }
        if (v336 > v265) {
          size_t v265 = v336;
        }
        if (v335 > v265) {
          size_t v265 = v335;
        }
        if (v334 > v265) {
          size_t v265 = v334;
        }
        if (v333 > v265) {
          size_t v265 = v333;
        }
        if (v347 > v265) {
          size_t v265 = v347;
        }
        if (v344 <= v265) {
          size_t v246 = v265;
        }
        else {
          size_t v246 = v344;
        }
        char v247 = 11;
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v250 = v368;
        uint64_t v249 = v369;
        goto LABEL_269;
      case 0xCu:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v200 = *(_OWORD *)v66;
        long long v201 = *((_OWORD *)v66 + 1);
        long long v202 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v202;
        *uint64_t v65 = v200;
        v65[1] = v201;
        long long v203 = *((_OWORD *)v66 + 4);
        long long v204 = *((_OWORD *)v66 + 5);
        long long v205 = *((_OWORD *)v66 + 7);
        v65[6] = *((_OWORD *)v66 + 6);
        v65[7] = v205;
        v65[4] = v203;
        void v65[5] = v204;
        uint64_t v173 = v65;
        unint64_t v206 = ((unint64_t)v65 + v329) & v71;
        unint64_t v207 = (unint64_t)&v66[v329] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v206, v207, v363);
        long long v208 = (void *)((v362 + v206) & v72);
        long long v209 = (const void *)((v362 + v207) & v72);
        long long v210 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v210(v209, 1, v365))
        {
          memcpy(v208, v209, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v208, v209, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v208, 0, 1, v365);
        }
        size_t v266 = (void *)(((unint64_t)v208 + v381) & v72);
        uint64_t v267 = (const void *)(((unint64_t)v209 + v381) & v72);
        if (v210(v267, 1, v365))
        {
          memcpy(v266, v267, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v266, v267, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v266, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v279 = (void *)(((unint64_t)v266 + v381) & v72);
        uint64_t v280 = (const void *)(((unint64_t)v267 + v381) & v72);
        if (v210(v280, 1, v365))
        {
          memcpy(v279, v280, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v279, v280, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v279, 0, 1, v365);
        }
        char v247 = 12;
LABEL_267:
        uint64_t v48 = a1;
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        uint64_t v250 = v368;
        uint64_t v65 = v173;
        goto LABEL_268;
      case 0xDu:
        uint64_t v244 = v74;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v353 + 16))(v65, v66, v354);
        uint64_t v245 = v244;
        size_t v246 = v387;
        char v247 = 13;
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v250 = v368;
        goto LABEL_271;
      case 0xEu:
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v364 + 16))(v65, v66, v363);
        uint64_t v390 = v65;
        uint64_t v211 = (void *)(((unint64_t)v65 + v362) & v72);
        uint64_t v178 = v66;
        unint64_t v212 = (const void *)((unint64_t)&v66[v362] & v72);
        uint64_t v213 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v213(v212, 1, v365))
        {
          memcpy(v211, v212, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v211, v212, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v211, 0, 1, v365);
        }
        uint64_t v268 = (void *)(((unint64_t)v211 + v381) & v72);
        uint64_t v269 = (const void *)(((unint64_t)v212 + v381) & v72);
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        if (v213(v269, 1, v365))
        {
          memcpy(v268, v269, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v268, v269, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v268, 0, 1, v365);
        }
        char v247 = 14;
LABEL_255:
        uint64_t v249 = v369;
        uint64_t v248 = v370;
        uint64_t v250 = v368;
        uint64_t v66 = v178;
        goto LABEL_256;
      default:
        uint64_t v374 = ~v373;
        uint64_t v404 = v74;
        uint64_t v396 = v75;
        long long v77 = *(_OWORD *)v66;
        long long v78 = *((_OWORD *)v66 + 1);
        long long v79 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v79;
        *uint64_t v65 = v77;
        v65[1] = v78;
        long long v80 = *((_OWORD *)v66 + 4);
        long long v81 = *((_OWORD *)v66 + 5);
        long long v82 = *((_OWORD *)v66 + 7);
        v65[6] = *((_OWORD *)v66 + 6);
        v65[7] = v82;
        v65[4] = v80;
        void v65[5] = v81;
        long long v83 = *((_OWORD *)v66 + 8);
        long long v84 = *((_OWORD *)v66 + 9);
        long long v85 = *((_OWORD *)v66 + 11);
        v65[10] = *((_OWORD *)v66 + 10);
        v65[11] = v85;
        v65[8] = v83;
        v65[9] = v84;
        long long v86 = *((_OWORD *)v66 + 12);
        long long v87 = *((_OWORD *)v66 + 13);
        long long v88 = *((_OWORD *)v66 + 14);
        *((void *)v65 + 30) = *((void *)v66 + 30);
        v65[13] = v87;
        v65[14] = v88;
        v65[12] = v86;
        uint64_t v390 = v65;
        unint64_t v89 = ((unint64_t)v65 + v345) & v71;
        unint64_t v90 = (unint64_t)&v66[v345] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v364 + 16))(v89, v90, v363);
        *(unsigned char *)(v89 + v355) = *(unsigned char *)(v90 + v355);
        uint64_t v91 = (void *)((v6 + 1 + v89 + v355) & v72);
        uint64_t v92 = (const void *)((v6 + 1 + v90 + v355) & v72);
        unint64_t v93 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48);
        if (v93(v92, 1, v365))
        {
          memcpy(v91, v92, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v91, v92, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v91, 0, 1, v365);
        }
        uint64_t v251 = (void *)(((unint64_t)v91 + v381) & v72);
        uint64_t v252 = (const void *)(((unint64_t)v92 + v381) & v72);
        if (v93(v252, 1, v365))
        {
          memcpy(v251, v252, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v251, v252, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v251, 0, 1, v365);
        }
        uint64_t v218 = v366;
        uint64_t v219 = v367;
        uint64_t v270 = (void *)(((unint64_t)v251 + v381) & v72);
        uint64_t v271 = (const void *)(((unint64_t)v252 + v381) & v72);
        unint64_t v321 = v66;
        if (v93(v271, 1, v365))
        {
          memcpy(v270, v271, v384);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v270, v271, v365);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v270, 0, 1, v365);
        }
        uint64_t v48 = a1;
        uint64_t v249 = v369;
        unint64_t v281 = ((unint64_t)v270 + v359) & v374;
        unint64_t v282 = ((unint64_t)v271 + v359) & v374;
        size_t v401 = *(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 16);
        v401(v281, v282, v357);
        unint64_t v283 = (void *)((v356 + v281) & v374);
        unint64_t v284 = (const void *)((v356 + v282) & v374);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v358 + 48))(v284, 1, v357))
        {
          memcpy(v283, v284, v394);
        }
        else
        {
          v401((unint64_t)v283, (unint64_t)v284, v357);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v358 + 56))(v283, 0, 1, v357);
        }
        char v247 = 0;
        uint64_t v248 = v370;
LABEL_252:
        uint64_t v250 = v368;
        uint64_t v66 = v321;
LABEL_256:
        uint64_t v65 = v390;
LABEL_268:
        size_t v246 = v387;
LABEL_269:
        uint64_t v75 = v396;
LABEL_270:
        uint64_t v245 = v404;
LABEL_271:
        *((unsigned char *)v65 + v246) = v247;
        uint64_t v310 = (void *)(((unint64_t)v65 + v250) & v245);
        uint64_t v311 = (const void *)((unint64_t)&v66[v250] & v245);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v382 + 48))(v311, 1, v249))
        {
          memcpy(v310, v311, v360);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v382 + 16))(v310, v311, v249);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v382 + 56))(v310, 0, 1, v249);
        }
        uint64_t v312 = (void *)(((unint64_t)v310 + v379) & v75);
        uint64_t v313 = (const void *)(((unint64_t)v311 + v379) & v75);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v218 + 48))(v313, 1, v248))
        {
          memcpy(v312, v313, v361);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v218 + 16))(v312, v313, v248);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v218 + 56))(v312, 0, 1, v248);
        }
        *(void *)(((unint64_t)v312 + v219) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v313 + v219) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v48 + v388) = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return v48;
}

unsigned __int8 *sub_24EDA0F3C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v444 = a3[5];
  uint64_t v443 = *(void *)(v444 - 8);
  uint64_t v438 = *(void *)(v443 + 64);
  uint64_t v420 = a3[3];
  uint64_t v441 = *(void *)(v420 - 8);
  uint64_t v421 = v441;
  uint64_t v3 = *(unsigned __int8 *)(v441 + 80);
  uint64_t v430 = sub_24EE55880();
  uint64_t v5 = *(void *)(v430 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v396 = a3[2];
  uint64_t v439 = *(void *)(v396 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v439 + 80);
  uint64_t v8 = sub_24EE55960();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v393 = a3[7];
  uint64_t v10 = *(void *)(v393 - 8);
  uint64_t v376 = v9;
  uint64_t v377 = v8;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v387 = v3 + 248;
  size_t v13 = *(void *)(v441 + 64);
  uint64_t v14 = v13 + v6;
  uint64_t v15 = v13 + v6 + 1;
  uint64_t v413 = v15 + ((v3 + 248) & ~v3);
  uint64_t v435 = v5;
  size_t v16 = *(void *)(v5 + 64);
  int v17 = *(_DWORD *)(v435 + 84);
  if (v17) {
    size_t v18 = v16;
  }
  else {
    size_t v18 = v16 + 1;
  }
  size_t v19 = v18 + v6;
  size_t v20 = v18 + v7;
  uint64_t v21 = *(void *)(v439 + 64);
  uint64_t v414 = v21 + v7;
  uint64_t v397 = v439;
  if (*(_DWORD *)(v439 + 84)) {
    size_t v22 = *(void *)(v439 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  unint64_t v23 = ((v21 + v7 + ((v18 + v7 + ((v18 + v6 + ((v18 + v6 + (v413 & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7) + v22;
  uint64_t v388 = *(void *)(v441 + 64);
  if (v16 <= v13) {
    size_t v24 = *(void *)(v441 + 64);
  }
  else {
    size_t v24 = v16;
  }
  size_t v375 = v18 + v11;
  size_t v25 = ((v18 + v11 + (v19 & ~v6)) & ~v11) + *(void *)(v9 + 64);
  if (v25 <= v24) {
    size_t v25 = v24;
  }
  size_t v411 = v25 + 1;
  size_t v391 = v25;
  if (v25 + 1 > v23) {
    unint64_t v26 = v25 + 1;
  }
  else {
    unint64_t v26 = v23;
  }
  uint64_t v385 = v3 + 224;
  size_t v389 = v22 + v7;
  size_t v390 = v22 + v12;
  uint64_t v415 = *(void *)(v393 - 8);
  unint64_t v27 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v28 = *(void *)(v10 + 64);
  }
  else {
    size_t v28 = v27 + 1;
  }
  size_t v373 = v28;
  unint64_t v29 = ((v22
        + v12
        + ((v22 + v7 + ((v20 + ((v19 + ((v19 + ((v15 + ((v3 + 224) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7)) & ~v12)
      + v28;
  unint64_t v409 = v29;
  if (v29 <= v26) {
    unint64_t v29 = v26;
  }
  uint64_t v384 = v6 + 64;
  unint64_t v408 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v408 > v29) {
    unint64_t v29 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  size_t v30 = v18 + (v14 & ~v6);
  unint64_t v31 = ((v30 + v6) & ~v6) + v18;
  unint64_t v407 = ((v31 + v6) & ~v6) + v18;
  if (v407 > v29) {
    unint64_t v29 = ((v31 + v6) & ~v6) + v18;
  }
  uint64_t v392 = v6 + 24;
  unint64_t v32 = (v6 + 24 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v33 = v32 + v18;
  if (v32 + v18 > v29) {
    unint64_t v29 = v32 + v18;
  }
  uint64_t v380 = v3 + 24;
  unint64_t v406 = ((v19 + ((v14 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v18;
  if (v406 > v29) {
    unint64_t v29 = ((v19 + ((v14 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v18;
  }
  if (v33 > v29) {
    unint64_t v29 = v32 + v18;
  }
  uint64_t v379 = v3 + 104;
  unint64_t v405 = ((v19 + ((v19 + ((v14 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v405 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v383 = v3 + 160;
  size_t v419 = v18 + v7;
  size_t __n = v22;
  unint64_t v404 = ((v20 + ((v19 + ((v19 + ((v19 + ((v14 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v404 > v29) {
    unint64_t v29 = ((v20 + ((v19 + ((v19 + ((v19 + ((v14 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  uint64_t v378 = v3 + 56;
  unint64_t v403 = ((v19 + ((v19 + ((v14 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v403 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v382 = v3 + 64;
  size_t v34 = ((v14 + ((v3 + 64) & ~v3)) & ~v6) + v18;
  size_t v402 = v34 + 1;
  if (v34 + 1 > v29) {
    unint64_t v29 = v34 + 1;
  }
  uint64_t v381 = v3 + 128;
  uint64_t v418 = v13 + v6;
  uint64_t v440 = v6;
  size_t v431 = v18;
  unint64_t v401 = ((v19 + ((v19 + ((v14 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v401 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  unint64_t v412 = v27;
  if (v27 > v29) {
    unint64_t v29 = v27;
  }
  unint64_t v410 = v31;
  if (v31 <= v29) {
    unint64_t v35 = v29;
  }
  else {
    unint64_t v35 = v31;
  }
  uint64_t v433 = a3[4];
  uint64_t v36 = *(void *)(v433 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v428 = v36;
  if (*(_DWORD *)(v36 + 84)) {
    uint64_t v38 = *(void *)(*(void *)(v433 - 8) + 64);
  }
  else {
    uint64_t v38 = *(void *)(*(void *)(v433 - 8) + 64) + 1;
  }
  uint64_t v436 = a3[6];
  uint64_t v39 = *(void *)(v436 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v432 = v39;
  uint64_t v41 = v3 | v6 | v7 | v11 | v12 | 7;
  unint64_t v437 = v35;
  uint64_t v423 = v41 + v438;
  uint64_t v398 = v35 + v37 + 1;
  size_t v394 = v38;
  uint64_t v427 = v38 + v40;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v42 = *(void *)(*(void *)(v436 - 8) + 64);
  }
  else {
    uint64_t v42 = *(void *)(*(void *)(v436 - 8) + 64) + 1;
  }
  size_t v395 = v42;
  uint64_t v429 = v42 + 7;
  if (((v438 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= ((v42
                                                    + 7
                                                    + ((v38 + v40 + ((v398 + ((v41 + v438) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8)
                                                  + 8)
    unint64_t v43 = ((v42 + 7 + ((v38 + v40 + ((v398 + ((v41 + v438) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8) + 8;
  else {
    unint64_t v43 = ((v438 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unsigned int v44 = a1[v43];
  if (v44 >= 2)
  {
    int v45 = v43 <= 3 ? v43 : 4;
    if (v45)
    {
      if (v45 == 4)
      {
        int v46 = *(_DWORD *)a1;
        if (v43 >= 4)
        {
LABEL_62:
          unsigned int v44 = v46 + 2;
          goto LABEL_65;
        }
      }
      else
      {
        int v46 = *a1;
        if (v43 >= 4) {
          goto LABEL_62;
        }
      }
      unsigned int v44 = (v46 | ((v44 - 2) << (8 * v43))) + 2;
    }
  }
LABEL_65:
  unint64_t v442 = v43;
  uint64_t v422 = ~v41;
  uint64_t v400 = ~v3;
  uint64_t v47 = ~v6;
  uint64_t v48 = ~v7;
  uint64_t v374 = ~v11;
  uint64_t v386 = ~v12;
  uint64_t v399 = v37;
  uint64_t v425 = ~v37;
  uint64_t v426 = ~v40;
  (*(void (**)(unsigned __int8 *, uint64_t))(v443 + 8))(a1, v444);
  uint64_t v434 = ~v440;
  uint64_t v417 = ~v7;
  if (v44 != 1)
  {
    unint64_t v49 = (unsigned __int8 *)((unint64_t)&a1[v423] & v422);
    unsigned int v50 = v49[v437];
    unsigned int v51 = v50 - 15;
    if (v50 >= 0xF)
    {
      if (v437 <= 3) {
        uint64_t v52 = v437;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v49;
          if (v437 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 2:
          int v53 = *(unsigned __int16 *)v49;
          if (v437 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 3:
          int v53 = *(unsigned __int16 *)((unint64_t)&a1[v423] & v422) | (*(unsigned __int8 *)(((unint64_t)&a1[v423] & v422)
                                                                                                + 2) << 16);
          if (v437 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 4:
          int v53 = *(_DWORD *)v49;
          if (v437 < 4) {
LABEL_74:
          }
            unsigned int v50 = (v53 | (v51 << (8 * v437))) + 15;
          else {
LABEL_78:
          }
            unsigned int v50 = v53 + 15;
          break;
        default:
          break;
      }
    }
    switch(v50)
    {
      case 1u:
        unsigned int v66 = v49[v391];
        unsigned int v67 = v66 - 3;
        if (v66 < 3)
        {
          uint64_t v69 = v435;
        }
        else
        {
          if (v391 <= 3) {
            uint64_t v68 = v391;
          }
          else {
            uint64_t v68 = 4;
          }
          uint64_t v69 = v435;
          switch(v68)
          {
            case 1:
              int v70 = *v49;
              goto LABEL_150;
            case 2:
              int v70 = *(unsigned __int16 *)v49;
              goto LABEL_150;
            case 3:
              int v70 = *(unsigned __int16 *)v49 | (*(unsigned __int8 *)(((unint64_t)&a1[v423] & v422) + 2) << 16);
              goto LABEL_150;
            case 4:
              int v70 = *(_DWORD *)v49;
LABEL_150:
              if (v391 < 4) {
                unsigned int v66 = (v70 | (v67 << (8 * v391))) + 3;
              }
              else {
                unsigned int v66 = v70 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v66 == 2)
        {
          long long v97 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v69 + 48);
          if (!v97((unint64_t)&a1[v423] & v422, 1, v430)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v69 + 8))(v49, v430);
          }
          unint64_t v98 = (unint64_t)&v49[v440 + v431] & v434;
          if (!v97(v98, 1, v430)) {
            (*(void (**)(unint64_t, uint64_t))(v69 + 8))(v98, v430);
          }
          (*(void (**)(size_t, uint64_t))(v376 + 8))((v375 + v98) & v374, v377);
          uint64_t v47 = ~v440;
          uint64_t v48 = ~v7;
          break;
        }
        if (v66 == 1)
        {
          uint64_t v95 = v69;
          goto LABEL_141;
        }
        uint64_t v89 = v420;
        uint64_t v90 = v421;
        goto LABEL_162;
      case 2u:
        (*(void (**)(unint64_t, uint64_t))(v421 + 8))((unint64_t)&v49[v385] & v400, v420);
        unint64_t v71 = (v15 + ((unint64_t)&v49[v385] & v400)) & v47;
        uint64_t v72 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        if (!v72(v71, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v71, v430);
        }
        unint64_t v73 = (v19 + v71) & v47;
        if (!v72(v73, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v73, v430);
        }
        size_t v74 = (v19 + v73) & v47;
        if (!v72(v74, 1, v430)) {
          (*(void (**)(size_t, uint64_t))(v435 + 8))(v74, v430);
        }
        size_t v75 = (v419 + v74) & v417;
        size_t v76 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v397 + 48);
        if (!v76(v75, 1, v396)) {
          (*(void (**)(size_t, uint64_t))(v397 + 8))(v75, v396);
        }
        size_t v77 = (v389 + v75) & v417;
        if (!v76(v77, 1, v396)) {
          (*(void (**)(size_t, uint64_t))(v397 + 8))(v77, v396);
        }
        unint64_t v49 = (unsigned __int8 *)((v390 + v77) & v386);
        uint64_t v48 = ~v7;
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v415 + 48))(v49, 1, v393)) {
          goto LABEL_108;
        }
        break;
      case 3u:
        unint64_t v78 = (unint64_t)&v49[v384] & v47;
        long long v79 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        if (!v79(v78, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v78, v430);
        }
        unint64_t v80 = (v19 + v78) & v47;
        if (!v79(v80, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v80, v430);
        }
        uint64_t v48 = ~v7;
        unint64_t v49 = (unsigned __int8 *)((v419 + v80) & v417);
        uint64_t v47 = ~v440;
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v397 + 48))(v49, 1, v396)) {
          goto LABEL_130;
        }
        break;
      case 4u:
        goto LABEL_135;
      case 5u:
      case 7u:
        (*(void (**)(unint64_t, uint64_t))(v421 + 8))((unint64_t)&a1[v423] & v422, v420);
        unint64_t v54 = (unint64_t)&v49[v418] & v47;
        long long v55 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        uint64_t v56 = v47;
        uint64_t v57 = v430;
        if (!v55(v54, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v54, v430);
        }
        size_t v58 = v392 + ((v54 + v431) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_119;
      case 6u:
        unint64_t v49 = (unsigned __int8 *)((unint64_t)&v49[v380] & v400);
        goto LABEL_116;
      case 8u:
        uint64_t v91 = v379;
        goto LABEL_134;
      case 9u:
        unint64_t v83 = (unint64_t)&v49[v383] & v400;
        (*(void (**)(unint64_t, uint64_t))(v421 + 8))(v83, v420);
        unint64_t v84 = (v418 + v83) & v47;
        long long v85 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        if (!v85(v84, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v84, v430);
        }
        size_t v86 = (v19 + v84) & v47;
        if (!v85(v86, 1, v430)) {
          (*(void (**)(size_t, uint64_t))(v435 + 8))(v86, v430);
        }
        size_t v87 = (v19 + v86) & v47;
        if (!v85(v87, 1, v430)) {
          (*(void (**)(size_t, uint64_t))(v435 + 8))(v87, v430);
        }
        size_t v88 = (v19 + v87) & v47;
        if (!v85(v88, 1, v430)) {
          (*(void (**)(size_t, uint64_t))(v435 + 8))(v88, v430);
        }
        uint64_t v48 = ~v7;
        unint64_t v49 = (unsigned __int8 *)((v419 + v88) & v417);
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v397 + 48))(v49, 1, v396))
        {
LABEL_130:
          uint64_t v89 = v396;
          uint64_t v90 = v397;
LABEL_162:
          (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v49, v89);
        }
        break;
      case 0xAu:
        uint64_t v91 = v378;
        goto LABEL_134;
      case 0xBu:
        (*(void (**)(unint64_t, uint64_t))(v421 + 8))((unint64_t)&v49[v382] & v400, v420);
        unint64_t v96 = (v418 + ((unint64_t)&v49[v382] & v400)) & v47;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48))(v96, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v96, v430);
        }
        if (!v17) {
          break;
        }
        goto LABEL_164;
      case 0xCu:
        uint64_t v91 = v381;
LABEL_134:
        unint64_t v49 = (unsigned __int8 *)((unint64_t)&v49[v91] & v400);
LABEL_135:
        (*(void (**)(unsigned __int8 *, uint64_t))(v421 + 8))(v49, v420);
        unint64_t v92 = (unint64_t)&v49[v418] & v47;
        unint64_t v93 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        if (!v93(v92, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v92, v430);
        }
        unint64_t v94 = (v19 + v92) & v47;
        if (!v93(v94, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v94, v430);
        }
        unint64_t v49 = (unsigned __int8 *)((v19 + v94) & v47);
        uint64_t v48 = ~v7;
        if (!v93((unint64_t)v49, 1, v430)) {
          goto LABEL_140;
        }
        break;
      case 0xDu:
LABEL_108:
        (*(void (**)(unsigned __int8 *, uint64_t))(v415 + 8))(v49, v393);
        break;
      case 0xEu:
LABEL_116:
        (*(void (**)(unsigned __int8 *, uint64_t))(v421 + 8))(v49, v420);
        unint64_t v81 = (unint64_t)&v49[v418] & v47;
        long long v55 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        uint64_t v56 = v47;
        uint64_t v57 = v430;
        if (!v55(v81, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v81, v430);
        }
        size_t v58 = v19 + v81;
LABEL_119:
        unint64_t v49 = (unsigned __int8 *)(v58 & v56);
        unsigned int v82 = v55(v58 & v56, 1, v57);
        uint64_t v47 = v56;
        uint64_t v48 = ~v7;
        if (!v82)
        {
LABEL_140:
          uint64_t v95 = v435;
LABEL_141:
          (*(void (**)(unsigned __int8 *, uint64_t))(v95 + 8))(v49, v430);
        }
        break;
      default:
        (*(void (**)(unint64_t, uint64_t))(v421 + 8))((unint64_t)&v49[v387] & v400, v420);
        unint64_t v59 = (v15 + ((unint64_t)&v49[v387] & v400)) & v47;
        long long v60 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v435 + 48);
        if (!v60(v59, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v59, v430);
        }
        unint64_t v61 = (v19 + v59) & v47;
        if (!v60(v61, 1, v430)) {
          (*(void (**)(unint64_t, uint64_t))(v435 + 8))(v61, v430);
        }
        size_t v62 = (v19 + v61) & v47;
        if (!v60(v62, 1, v430)) {
          (*(void (**)(size_t, uint64_t))(v435 + 8))(v62, v430);
        }
        size_t v63 = (v419 + v62) & v417;
        uint64_t v64 = *(void (**)(size_t, uint64_t))(v397 + 8);
        v64(v63, v396);
        uint64_t v65 = (v414 + v63) & v417;
        uint64_t v48 = ~v7;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v397 + 48))(v65, 1, v396)) {
          v64(v65, v396);
        }
        break;
    }
    size_t v16 = v431;
LABEL_164:
    size_t v99 = ((v414 + ((v419 + ((v19 + (((v413 | v440) + v16) & v47)) & v47)) & v48)) & v48) + __n;
    if (v411 > v99) {
      size_t v99 = v411;
    }
    if (v409 > v99) {
      size_t v99 = v409;
    }
    if (v408 > v99) {
      size_t v99 = v408;
    }
    if (v407 > v99) {
      size_t v99 = v407;
    }
    if (v33 > v99) {
      size_t v99 = v33;
    }
    if (v406 > v99) {
      size_t v99 = v406;
    }
    if (v33 > v99) {
      size_t v99 = v33;
    }
    if (v405 > v99) {
      size_t v99 = v405;
    }
    if (v404 > v99) {
      size_t v99 = v404;
    }
    if (v403 > v99) {
      size_t v99 = v403;
    }
    if (v402 > v99) {
      size_t v99 = v402;
    }
    if (v401 > v99) {
      size_t v99 = v401;
    }
    if (v412 > v99) {
      size_t v99 = v412;
    }
    if (v410 > v99) {
      size_t v99 = v410;
    }
    uint64_t v100 = (((unint64_t)&a1[v423] & v422 | 1) + v399 + v99) & v425;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v428 + 48))(v100, 1, v433)) {
      (*(void (**)(uint64_t, uint64_t))(v428 + 8))(v100, v433);
    }
    uint64_t v101 = (v427 + v100) & v426;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v432 + 48))(v101, 1, v436)) {
      (*(void (**)(uint64_t, uint64_t))(v432 + 8))(v101, v436);
    }
    swift_bridgeObjectRelease();
  }
  unsigned int v102 = a2[v442];
  if (v102 < 2) {
    goto LABEL_207;
  }
  int v103 = v442 <= 3 ? v442 : 4;
  if (!v103) {
    goto LABEL_207;
  }
  if (v103 == 4)
  {
    int v104 = *(_DWORD *)a2;
    if (v442 >= 4)
    {
LABEL_204:
      unsigned int v102 = v104 + 2;
      goto LABEL_207;
    }
  }
  else
  {
    int v104 = *a2;
    if (v442 >= 4) {
      goto LABEL_204;
    }
  }
  unsigned int v102 = (v104 | ((v102 - 2) << (8 * v442))) + 2;
LABEL_207:
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v443 + 16))(a1, a2, v444);
  if (v102 == 1)
  {
    unint64_t v105 = (unint64_t)&a2[v438 + 7] & 0xFFFFFFFFFFFFFFF8;
    unsigned int v106 = *(unsigned __int8 *)(v105 + 248);
    if (v106 >= 0xB) {
      unsigned int v106 = *(_DWORD *)v105 + 11;
    }
    unint64_t v107 = (unint64_t)&a1[v438 + 7] & 0xFFFFFFFFFFFFFFF8;
    switch(v106)
    {
      case 0u:
        long long v108 = *(_OWORD *)v105;
        long long v109 = *(_OWORD *)(v105 + 16);
        long long v110 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v110;
        *(_OWORD *)unint64_t v107 = v108;
        *(_OWORD *)(v107 + 16) = v109;
        long long v111 = *(_OWORD *)(v105 + 64);
        long long v112 = *(_OWORD *)(v105 + 80);
        long long v113 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v113;
        *(_OWORD *)(v107 + 64) = v111;
        *(_OWORD *)(v107 + 80) = v112;
        long long v114 = *(_OWORD *)(v105 + 128);
        long long v115 = *(_OWORD *)(v105 + 144);
        long long v116 = *(_OWORD *)(v105 + 176);
        *(_OWORD *)(v107 + 160) = *(_OWORD *)(v105 + 160);
        *(_OWORD *)(v107 + 176) = v116;
        *(_OWORD *)(v107 + 128) = v114;
        *(_OWORD *)(v107 + 144) = v115;
        long long v117 = *(_OWORD *)(v105 + 192);
        long long v118 = *(_OWORD *)(v105 + 208);
        long long v119 = *(_OWORD *)(v105 + 224);
        *(void *)(v107 + 240) = *(void *)(v105 + 240);
        *(_OWORD *)(v107 + 208) = v118;
        *(_OWORD *)(v107 + 224) = v119;
        *(_OWORD *)(v107 + 192) = v117;
        *(unsigned char *)(v107 + 248) = 0;
        break;
      case 1u:
        long long v147 = *(_OWORD *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(_OWORD *)(v107 + 16) = v147;
        long long v148 = *(_OWORD *)(v105 + 32);
        long long v149 = *(_OWORD *)(v105 + 48);
        long long v150 = *(_OWORD *)(v105 + 80);
        *(_OWORD *)(v107 + 64) = *(_OWORD *)(v105 + 64);
        *(_OWORD *)(v107 + 80) = v150;
        *(_OWORD *)(v107 + 32) = v148;
        *(_OWORD *)(v107 + 48) = v149;
        long long v151 = *(_OWORD *)(v105 + 96);
        long long v152 = *(_OWORD *)(v105 + 112);
        long long v153 = *(_OWORD *)(v105 + 144);
        *(_OWORD *)(v107 + 128) = *(_OWORD *)(v105 + 128);
        *(_OWORD *)(v107 + 144) = v153;
        *(_OWORD *)(v107 + 96) = v151;
        *(_OWORD *)(v107 + 112) = v152;
        long long v154 = *(_OWORD *)(v105 + 160);
        long long v155 = *(_OWORD *)(v105 + 176);
        long long v156 = *(_OWORD *)(v105 + 208);
        *(_OWORD *)(v107 + 192) = *(_OWORD *)(v105 + 192);
        *(_OWORD *)(v107 + 208) = v156;
        *(_OWORD *)(v107 + 160) = v154;
        *(_OWORD *)(v107 + 176) = v155;
        *(unsigned char *)(v107 + 248) = 1;
        break;
      case 2u:
        long long v157 = *(_OWORD *)v105;
        long long v158 = *(_OWORD *)(v105 + 16);
        long long v159 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v159;
        *(_OWORD *)unint64_t v107 = v157;
        *(_OWORD *)(v107 + 16) = v158;
        *(unsigned char *)(v107 + 248) = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(unsigned char *)(v107 + 248) = 3;
        break;
      case 4u:
        long long v160 = *(_OWORD *)v105;
        *(void *)(v107 + 16) = *(void *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = v160;
        *(unsigned char *)(v107 + 248) = 4;
        break;
      case 5u:
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(unsigned char *)(v107 + 248) = 5;
        break;
      case 6u:
        long long v161 = *(_OWORD *)v105;
        long long v162 = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 16) = *(_OWORD *)(v105 + 16);
        *(_OWORD *)(v107 + 32) = v162;
        *(_OWORD *)unint64_t v107 = v161;
        long long v163 = *(_OWORD *)(v105 + 48);
        long long v164 = *(_OWORD *)(v105 + 64);
        long long v165 = *(_OWORD *)(v105 + 80);
        *(void *)(v107 + 96) = *(void *)(v105 + 96);
        *(_OWORD *)(v107 + 64) = v164;
        *(_OWORD *)(v107 + 80) = v165;
        *(_OWORD *)(v107 + 48) = v163;
        *(unsigned char *)(v107 + 248) = 6;
        break;
      case 7u:
        long long v166 = *(_OWORD *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(_OWORD *)(v107 + 16) = v166;
        long long v167 = *(_OWORD *)(v105 + 32);
        long long v168 = *(_OWORD *)(v105 + 48);
        long long v169 = *(_OWORD *)(v105 + 80);
        *(_OWORD *)(v107 + 64) = *(_OWORD *)(v105 + 64);
        *(_OWORD *)(v107 + 80) = v169;
        *(_OWORD *)(v107 + 32) = v167;
        *(_OWORD *)(v107 + 48) = v168;
        long long v170 = *(_OWORD *)(v105 + 96);
        long long v171 = *(_OWORD *)(v105 + 112);
        long long v172 = *(_OWORD *)(v105 + 144);
        *(_OWORD *)(v107 + 128) = *(_OWORD *)(v105 + 128);
        *(_OWORD *)(v107 + 144) = v172;
        *(_OWORD *)(v107 + 96) = v170;
        *(_OWORD *)(v107 + 112) = v171;
        *(unsigned char *)(v107 + 248) = 7;
        break;
      case 8u:
        long long v173 = *(_OWORD *)v105;
        long long v174 = *(_OWORD *)(v105 + 16);
        long long v175 = *(_OWORD *)(v105 + 32);
        *(void *)(v107 + 48) = *(void *)(v105 + 48);
        *(_OWORD *)(v107 + 16) = v174;
        *(_OWORD *)(v107 + 32) = v175;
        *(_OWORD *)unint64_t v107 = v173;
        *(unsigned char *)(v107 + 248) = 8;
        break;
      case 9u:
        long long v176 = *(_OWORD *)v105;
        long long v177 = *(_OWORD *)(v105 + 16);
        long long v178 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v178;
        *(_OWORD *)unint64_t v107 = v176;
        *(_OWORD *)(v107 + 16) = v177;
        *(unsigned char *)(v107 + 248) = 9;
        break;
      case 0xAu:
        long long v179 = *(_OWORD *)v105;
        long long v180 = *(_OWORD *)(v105 + 16);
        long long v181 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v181;
        *(_OWORD *)unint64_t v107 = v179;
        *(_OWORD *)(v107 + 16) = v180;
        long long v182 = *(_OWORD *)(v105 + 64);
        long long v183 = *(_OWORD *)(v105 + 80);
        long long v184 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v184;
        *(_OWORD *)(v107 + 64) = v182;
        *(_OWORD *)(v107 + 80) = v183;
        *(unsigned char *)(v107 + 248) = 10;
        break;
      default:
        long long v185 = *(_OWORD *)v105;
        long long v186 = *(_OWORD *)(v105 + 16);
        long long v187 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v187;
        *(_OWORD *)unint64_t v107 = v185;
        *(_OWORD *)(v107 + 16) = v186;
        long long v188 = *(_OWORD *)(v105 + 64);
        long long v189 = *(_OWORD *)(v105 + 80);
        long long v190 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v190;
        *(_OWORD *)(v107 + 64) = v188;
        *(_OWORD *)(v107 + 80) = v189;
        long long v191 = *(_OWORD *)(v105 + 128);
        long long v192 = *(_OWORD *)(v105 + 144);
        long long v193 = *(_OWORD *)(v105 + 176);
        *(_OWORD *)(v107 + 160) = *(_OWORD *)(v105 + 160);
        *(_OWORD *)(v107 + 176) = v193;
        *(_OWORD *)(v107 + 128) = v191;
        *(_OWORD *)(v107 + 144) = v192;
        long long v194 = *(_OWORD *)(v105 + 192);
        long long v195 = *(_OWORD *)(v105 + 208);
        long long v196 = *(_OWORD *)(v105 + 224);
        *(_OWORD *)(v107 + 233) = *(_OWORD *)(v105 + 233);
        *(_OWORD *)(v107 + 208) = v195;
        *(_OWORD *)(v107 + 224) = v196;
        *(_OWORD *)(v107 + 192) = v194;
        break;
    }
    a1[v442] = 1;
  }
  else
  {
    long long v120 = (_OWORD *)((unint64_t)&a1[v423] & v422);
    long long v121 = (unsigned __int8 *)((unint64_t)&a2[v423] & v422);
    size_t v122 = v437;
    unsigned int v123 = v121[v437];
    unsigned int v124 = v123 - 15;
    if (v123 < 0xF)
    {
      uint64_t v126 = v415;
      uint64_t v127 = v436;
    }
    else
    {
      if (v437 <= 3) {
        uint64_t v125 = v437;
      }
      else {
        uint64_t v125 = 4;
      }
      uint64_t v126 = v415;
      uint64_t v127 = v436;
      switch(v125)
      {
        case 1:
          int v128 = *v121;
          if (v437 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 2:
          int v128 = *(unsigned __int16 *)v121;
          if (v437 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 3:
          int v128 = *(unsigned __int16 *)((unint64_t)&a2[v423] & v422) | (*(unsigned __int8 *)(((unint64_t)&a2[v423] & v422)
                                                                                                 + 2) << 16);
          if (v437 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 4:
          int v128 = *(_DWORD *)v121;
          if (v437 < 4) {
LABEL_221:
          }
            unsigned int v123 = (v128 | (v124 << (8 * v437))) + 15;
          else {
LABEL_225:
          }
            unsigned int v123 = v128 + 15;
          break;
        default:
          break;
      }
    }
    switch(v123)
    {
      case 1u:
        unsigned int v197 = v121[v391];
        unsigned int v198 = v197 - 3;
        if (v197 < 3)
        {
          uint64_t v201 = v433;
          uint64_t v200 = v435;
        }
        else
        {
          if (v391 <= 3) {
            uint64_t v199 = v391;
          }
          else {
            uint64_t v199 = 4;
          }
          uint64_t v200 = v435;
          uint64_t v201 = v433;
          switch(v199)
          {
            case 1:
              int v202 = *v121;
              goto LABEL_420;
            case 2:
              int v202 = *(unsigned __int16 *)v121;
              goto LABEL_420;
            case 3:
              int v202 = *(unsigned __int16 *)v121 | (*(unsigned __int8 *)(((unint64_t)&a2[v423] & v422) + 2) << 16);
              goto LABEL_420;
            case 4:
              int v202 = *(_DWORD *)v121;
LABEL_420:
              if (v391 < 4) {
                unsigned int v197 = (v202 | (v198 << (8 * v391))) + 3;
              }
              else {
                unsigned int v197 = v202 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v197 == 2)
        {
          uint64_t v368 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v200 + 48);
          if (v368((unint64_t)&a2[v423] & v422, 1, v430))
          {
            size_t v369 = v431;
            memcpy(v120, v121, v431);
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v200 + 16))(v120, v121, v430);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v200 + 56))(v120, 0, 1, v430);
            size_t v369 = v431;
          }
          uint64_t v370 = (void *)(((unint64_t)v120 + v440 + v369) & v434);
          uint64_t v371 = (const void *)((unint64_t)&v121[v440 + v369] & v434);
          unsigned int v372 = v368((unint64_t)v371, 1, v430);
          uint64_t v296 = v432;
          if (v372)
          {
            memcpy(v370, v371, v369);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v370, v371, v430);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v370, 0, 1, v430);
          }
          uint64_t v201 = v433;
          size_t v122 = v437;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v376 + 16))(((unint64_t)v370 + v375) & v374, ((unint64_t)v371 + v375) & v374, v377);
          char v367 = 2;
          uint64_t v297 = v398;
          long long v120 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        }
        else
        {
          if (v197 == 1)
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v200 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v430);
            size_t v366 = v391;
            char v367 = 1;
            uint64_t v296 = v432;
            uint64_t v297 = v398;
            goto LABEL_435;
          }
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v420);
          char v367 = 0;
          uint64_t v296 = v432;
          uint64_t v297 = v398;
        }
        size_t v366 = v391;
LABEL_435:
        *((unsigned char *)v120 + v366) = v367;
        char v295 = 1;
LABEL_409:
        *((unsigned char *)v120 + v122) = v295;
        size_t v361 = (void *)(((unint64_t)v120 + v297) & v425);
        uint64_t v362 = (const void *)((unint64_t)&v121[v297] & v425);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v428 + 48))(v362, 1, v201))
        {
          memcpy(v361, v362, v394);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v428 + 16))(v361, v362, v201);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v428 + 56))(v361, 0, 1, v201);
        }
        uint64_t v363 = (void *)(((unint64_t)v361 + v427) & v426);
        uint64_t v364 = (const void *)(((unint64_t)v362 + v427) & v426);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v296 + 48))(v364, 1, v127))
        {
          memcpy(v363, v364, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v296 + 16))(v363, v364, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v296 + 56))(v363, 0, 1, v127);
        }
        *(void *)(((unint64_t)v363 + v429) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v364 + v429) & 0xFFFFFFFFFFFFFFF8);
        a1[v442] = 0;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        long long v203 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        *long long v120 = *(_OWORD *)v121;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v203;
        long long v204 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x20);
        long long v205 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        long long v206 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x50);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x40) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x40);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x50) = v206;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = v204;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v205;
        long long v207 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x60);
        long long v208 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x70);
        long long v209 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x90);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x80) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x80);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x90) = v209;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x60) = v207;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x70) = v208;
        long long v210 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xA0);
        long long v211 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xB0);
        long long v212 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xD0);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xC0) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0xC0);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xD0) = v212;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xA0) = v210;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xB0) = v211;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v213 = ((unint64_t)v120 + v385) & v400;
        unint64_t v214 = (unint64_t)&v121[v385] & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v213, v214, v420);
        uint64_t v215 = v214 + v388;
        *(unsigned char *)(v213 + v388) = *(unsigned char *)(v214 + v388);
        uint64_t v216 = (void *)((v440 + 1 + v213 + v388) & v434);
        size_t v217 = (const void *)((v440 + 1 + v215) & v434);
        uint64_t v218 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v218(v217, 1, v430))
        {
          size_t v219 = v431;
          memcpy(v216, v217, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v216, v217, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v216, 0, 1, v430);
          size_t v219 = v431;
        }
        unint64_t v300 = (void *)(((unint64_t)v216 + v19) & v434);
        uint64_t v301 = (const void *)(((unint64_t)v217 + v19) & v434);
        if (v218(v301, 1, v430))
        {
          memcpy(v300, v301, v219);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v300, v301, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v300, 0, 1, v430);
        }
        uint64_t v296 = v432;
        uint64_t v320 = (void *)(((unint64_t)v300 + v19) & v434);
        unint64_t v321 = (const void *)(((unint64_t)v301 + v19) & v434);
        if (v218(v321, 1, v430))
        {
          memcpy(v320, v321, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v320, v321, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v320, 0, 1, v430);
        }
        uint64_t v201 = v433;
        unint64_t v336 = (void *)(((unint64_t)v320 + v419) & v417);
        unint64_t v337 = (const void *)(((unint64_t)v321 + v419) & v417);
        uint64_t v338 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v397 + 48);
        if (v338(v337, 1, v396))
        {
          memcpy(v336, v337, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v397 + 16))(v336, v337, v396);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v397 + 56))(v336, 0, 1, v396);
        }
        unint64_t v341 = (void *)(((unint64_t)v336 + v389) & v417);
        unint64_t v342 = (const void *)(((unint64_t)v337 + v389) & v417);
        if (v338(v342, 1, v396))
        {
          memcpy(v341, v342, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v397 + 16))(v341, v342, v396);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v397 + 56))(v341, 0, 1, v396);
        }
        size_t v122 = v437;
        uint64_t v345 = (void *)(((unint64_t)v341 + v390) & v386);
        size_t v346 = (const void *)(((unint64_t)v342 + v390) & v386);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v415 + 48))(v346, 1, v393))
        {
          memcpy(v345, v346, v373);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v415 + 16))(v345, v346, v393);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v415 + 56))(v345, 0, 1, v393);
        }
        char v295 = 2;
        uint64_t v127 = v436;
        uint64_t v297 = v398;
        goto LABEL_408;
      case 3u:
        long long v220 = *(_OWORD *)v121;
        long long v221 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        long long v222 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v222;
        *long long v120 = v220;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v221;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        long long v223 = (void *)(((unint64_t)v120 + v384) & v434);
        uint64_t v224 = (const void *)((unint64_t)&v121[v384] & v434);
        unint64_t v225 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v225(v224, 1, v430))
        {
          size_t v226 = v431;
          memcpy(v223, v224, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v223, v224, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v223, 0, 1, v430);
          size_t v226 = v431;
        }
        uint64_t v302 = (void *)(((unint64_t)v223 + v19) & v434);
        uint64_t v303 = (const void *)(((unint64_t)v224 + v19) & v434);
        if (v225(v303, 1, v430))
        {
          memcpy(v302, v303, v226);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v302, v303, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v302, 0, 1, v430);
        }
        uint64_t v127 = v436;
        size_t v122 = v437;
        uint64_t v296 = v432;
        uint64_t v201 = v433;
        size_t v322 = (void *)(((unint64_t)v302 + v419) & v417);
        uint64_t v323 = (const void *)(((unint64_t)v303 + v419) & v417);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v397 + 48))(v323, 1, v396))
        {
          memcpy(v322, v323, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v397 + 16))(v322, v323, v396);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v397 + 56))(v322, 0, 1, v396);
        }
        char v295 = 3;
        uint64_t v297 = v398;
        goto LABEL_408;
      case 4u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v420);
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        long long v227 = (void *)(((unint64_t)v120 + v418) & v434);
        long long v228 = (const void *)((unint64_t)&v121[v418] & v434);
        long long v229 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v229(v228, 1, v430))
        {
          size_t v230 = v431;
          memcpy(v227, v228, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v227, v228, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v227, 0, 1, v430);
          size_t v230 = v431;
        }
        uint64_t v304 = (void *)(((unint64_t)v227 + v19) & v434);
        uint64_t v305 = (const void *)(((unint64_t)v228 + v19) & v434);
        if (v229(v305, 1, v430))
        {
          memcpy(v304, v305, v230);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v304, v305, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v304, 0, 1, v430);
        }
        uint64_t v296 = v432;
        uint64_t v324 = (void *)(((unint64_t)v304 + v19) & v434);
        uint64_t v325 = (const void *)(((unint64_t)v305 + v19) & v434);
        if (v229(v325, 1, v430))
        {
          memcpy(v324, v325, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v324, v325, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v324, 0, 1, v430);
        }
        char v295 = 4;
        goto LABEL_406;
      case 5u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v420);
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        uint64_t v268 = (void *)(((unint64_t)v120 + v418) & v434);
        uint64_t v269 = (const void *)((unint64_t)&v121[v418] & v434);
        uint64_t v270 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v270(v269, 1, v430))
        {
          size_t v271 = v431;
          memcpy(v268, v269, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v268, v269, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v268, 0, 1, v430);
          size_t v271 = v431;
        }
        uint64_t v296 = v432;
        *((unsigned char *)v268 + v271) = *((unsigned char *)v269 + v271);
        unint64_t v347 = ((unint64_t)v268 + v271) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v348 = ((unint64_t)v269 + v271) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v347 + 8) = *(_OWORD *)(v348 + 8);
        size_t v349 = (void *)((v392 + v347) & v434);
        size_t v350 = (const void *)((v392 + v348) & v434);
        if (v270(v350, 1, v430))
        {
          memcpy(v349, v350, v271);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v349, v350, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v349, 0, 1, v430);
        }
        char v295 = 5;
        goto LABEL_407;
      case 6u:
        long long v272 = *(_OWORD *)v121;
        *(void *)(((unint64_t)&a1[v423] & v422) + 0x10) = *(void *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x10);
        *long long v120 = v272;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v273 = ((unint64_t)v120 + v380) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v273, (unint64_t)&v121[v380] & v400, v420);
        uint64_t v274 = (void *)((v418 + v273) & v434);
        uint64_t v275 = (const void *)((v418 + ((unint64_t)&v121[v380] & v400)) & v434);
        uint64_t v276 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v276(v275, 1, v430))
        {
          memcpy(v274, v275, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v274, v275, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v274, 0, 1, v430);
        }
        uint64_t v296 = v432;
        size_t v351 = (void *)(((unint64_t)v274 + v19) & v434);
        uint64_t v352 = (const void *)(((unint64_t)v275 + v19) & v434);
        if (v276(v352, 1, v430))
        {
          memcpy(v351, v352, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v351, v352, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v351, 0, 1, v430);
        }
        char v295 = 6;
        goto LABEL_406;
      case 7u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v420);
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v231 = (void *)(((unint64_t)v120 + v418) & v434);
        unint64_t v232 = (const void *)((unint64_t)&v121[v418] & v434);
        long long v233 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v233(v232, 1, v430))
        {
          size_t v234 = v431;
          memcpy(v231, v232, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v231, v232, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v231, 0, 1, v430);
          size_t v234 = v431;
        }
        *((unsigned char *)v231 + v234) = *((unsigned char *)v232 + v234);
        unint64_t v306 = ((unint64_t)v231 + v234) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v307 = ((unint64_t)v232 + v234) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v306 + 8) = *(_OWORD *)(v307 + 8);
        uint64_t v308 = (void *)((v392 + v306) & v434);
        uint64_t v309 = (const void *)((v392 + v307) & v434);
        unsigned int v310 = v233(v309, 1, v430);
        uint64_t v296 = v432;
        if (v310)
        {
          memcpy(v308, v309, v234);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v308, v309, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v308, 0, 1, v430);
        }
        char v295 = 7;
        goto LABEL_407;
      case 8u:
        long long v277 = *(_OWORD *)v121;
        long long v278 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x10);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = v278;
        *long long v120 = v277;
        long long v279 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        long long v280 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x40);
        long long v281 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x50);
        *(void *)(((unint64_t)&a1[v423] & v422) + 0x60) = *(void *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x40) = v280;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x50) = v281;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v279;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v282 = ((unint64_t)v120 + v379) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v282, (unint64_t)&v121[v379] & v400, v420);
        unint64_t v283 = (void *)((v418 + v282) & v434);
        unint64_t v284 = (const void *)((v418 + ((unint64_t)&v121[v379] & v400)) & v434);
        uint64_t v285 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v285(v284, 1, v430))
        {
          size_t v286 = v431;
          memcpy(v283, v284, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v283, v284, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v283, 0, 1, v430);
          size_t v286 = v431;
        }
        uint64_t v353 = (void *)(((unint64_t)v283 + v19) & v434);
        uint64_t v354 = (const void *)(((unint64_t)v284 + v19) & v434);
        if (v285(v354, 1, v430))
        {
          memcpy(v353, v354, v286);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v353, v354, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v353, 0, 1, v430);
        }
        uint64_t v296 = v432;
        uint64_t v357 = (void *)(((unint64_t)v353 + v19) & v434);
        uint64_t v358 = (const void *)(((unint64_t)v354 + v19) & v434);
        if (v285(v358, 1, v430))
        {
          memcpy(v357, v358, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v357, v358, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v357, 0, 1, v430);
        }
        char v295 = 8;
        goto LABEL_406;
      case 9u:
        long long v235 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        *long long v120 = *(_OWORD *)v121;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v235;
        long long v236 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x20);
        long long v237 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        long long v238 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x50);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x40) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x40);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x50) = v238;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = v236;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v237;
        long long v239 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x60);
        long long v240 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x70);
        long long v241 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x90);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x80) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x80);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x90) = v241;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x60) = v239;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x70) = v240;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v242 = ((unint64_t)v120 + v383) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v242, (unint64_t)&v121[v383] & v400, v420);
        unint64_t v243 = (void *)((v418 + v242) & v434);
        uint64_t v244 = (const void *)((v418 + ((unint64_t)&v121[v383] & v400)) & v434);
        uint64_t v245 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v245(v244, 1, v430))
        {
          size_t v246 = v431;
          memcpy(v243, v244, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v243, v244, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v243, 0, 1, v430);
          size_t v246 = v431;
        }
        uint64_t v311 = (void *)(((unint64_t)v243 + v19) & v434);
        uint64_t v312 = (const void *)(((unint64_t)v244 + v19) & v434);
        if (v245(v312, 1, v430))
        {
          memcpy(v311, v312, v246);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v311, v312, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v311, 0, 1, v430);
        }
        uint64_t v296 = v432;
        uint64_t v326 = v396;
        uint64_t v327 = (void *)(((unint64_t)v311 + v19) & v434);
        uint64_t v328 = (const void *)(((unint64_t)v312 + v19) & v434);
        if (v245(v328, 1, v430))
        {
          memcpy(v327, v328, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v327, v328, v430);
          uint64_t v326 = v396;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v327, 0, 1, v430);
        }
        unint64_t v339 = (void *)(((unint64_t)v327 + v19) & v434);
        unint64_t v340 = (const void *)(((unint64_t)v328 + v19) & v434);
        if (v245(v340, 1, v430))
        {
          memcpy(v339, v340, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v339, v340, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v339, 0, 1, v430);
        }
        uint64_t v127 = v436;
        size_t v122 = v437;
        uint64_t v201 = v433;
        unint64_t v343 = (void *)(((unint64_t)v339 + v419) & v417);
        size_t v344 = (const void *)(((unint64_t)v340 + v419) & v417);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v397 + 48))(v344, 1, v326))
        {
          memcpy(v343, v344, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v397 + 16))(v343, v344, v326);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v397 + 56))(v343, 0, 1, v326);
        }
        char v295 = 9;
        uint64_t v297 = v398;
        goto LABEL_408;
      case 0xAu:
        long long v287 = *(_OWORD *)v121;
        long long v288 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        long long v289 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x20);
        *(void *)(((unint64_t)&a1[v423] & v422) + 0x30) = *(void *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v288;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = v289;
        *long long v120 = v287;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v290 = ((unint64_t)v120 + v378) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v290, (unint64_t)&v121[v378] & v400, v420);
        uint64_t v291 = (void *)((v418 + v290) & v434);
        uint64_t v292 = (const void *)((v418 + ((unint64_t)&v121[v378] & v400)) & v434);
        uint64_t v293 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v293(v292, 1, v430))
        {
          size_t v294 = v431;
          memcpy(v291, v292, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v291, v292, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v291, 0, 1, v430);
          size_t v294 = v431;
        }
        uint64_t v355 = (void *)(((unint64_t)v291 + v19) & v434);
        uint64_t v356 = (const void *)(((unint64_t)v292 + v19) & v434);
        if (v293(v356, 1, v430))
        {
          memcpy(v355, v356, v294);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v355, v356, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v355, 0, 1, v430);
        }
        uint64_t v296 = v432;
        size_t v359 = (void *)(((unint64_t)v355 + v19) & v434);
        size_t v360 = (const void *)(((unint64_t)v356 + v19) & v434);
        if (v293(v360, 1, v430))
        {
          memcpy(v359, v360, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v359, v360, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v359, 0, 1, v430);
        }
        char v295 = 10;
        goto LABEL_406;
      case 0xBu:
        long long v247 = *(_OWORD *)v121;
        long long v248 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        long long v249 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v249;
        *long long v120 = v247;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v248;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v250 = ((unint64_t)v120 + v382) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v250, (unint64_t)&v121[v382] & v400, v420);
        uint64_t v251 = (void *)((v418 + v250) & v434);
        uint64_t v252 = (const void *)((v418 + ((unint64_t)&v121[v382] & v400)) & v434);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48))(v252, 1, v430))
        {
          size_t v253 = v431;
          memcpy(v251, v252, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v251, v252, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v251, 0, 1, v430);
          size_t v253 = v431;
        }
        *((unsigned char *)v251 + v253) = *((unsigned char *)v252 + v253);
        size_t v313 = ((v414 + ((v419 + ((v19 + (((v413 | v440) + v253) & v434)) & v434)) & v417)) & v417) + __n;
        if (v411 > v313) {
          size_t v313 = v411;
        }
        if (v409 > v313) {
          size_t v313 = v409;
        }
        if (v408 > v313) {
          size_t v313 = v408;
        }
        if (v407 > v313) {
          size_t v313 = v407;
        }
        if (v33 > v313) {
          size_t v313 = v33;
        }
        if (v406 > v313) {
          size_t v313 = v406;
        }
        if (v33 > v313) {
          size_t v313 = v33;
        }
        if (v405 > v313) {
          size_t v313 = v405;
        }
        if (v404 > v313) {
          size_t v313 = v404;
        }
        if (v403 > v313) {
          size_t v313 = v403;
        }
        if (v402 > v313) {
          size_t v313 = v402;
        }
        if (v401 > v313) {
          size_t v313 = v401;
        }
        if (v412 > v313) {
          size_t v313 = v412;
        }
        if (v410 <= v313) {
          size_t v122 = v313;
        }
        else {
          size_t v122 = v410;
        }
        char v295 = 11;
        uint64_t v296 = v432;
        uint64_t v201 = v433;
        uint64_t v297 = v398;
        goto LABEL_408;
      case 0xCu:
        long long v254 = *(_OWORD *)v121;
        long long v255 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        long long v256 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v256;
        *long long v120 = v254;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v255;
        long long v257 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x40);
        long long v258 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x50);
        long long v259 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x70);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x60) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x70) = v259;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x40) = v257;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x50) = v258;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v260 = ((unint64_t)v120 + v381) & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v260, (unint64_t)&v121[v381] & v400, v420);
        unint64_t v261 = (void *)((v418 + v260) & v434);
        uint64_t v262 = (const void *)((v418 + ((unint64_t)&v121[v381] & v400)) & v434);
        uint64_t v263 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v263(v262, 1, v430))
        {
          size_t v264 = v431;
          memcpy(v261, v262, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v261, v262, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v261, 0, 1, v430);
          size_t v264 = v431;
        }
        uint64_t v314 = (void *)(((unint64_t)v261 + v19) & v434);
        uint64_t v315 = (const void *)(((unint64_t)v262 + v19) & v434);
        if (v263(v315, 1, v430))
        {
          memcpy(v314, v315, v264);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v314, v315, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v314, 0, 1, v430);
        }
        uint64_t v296 = v432;
        uint64_t v329 = (void *)(((unint64_t)v314 + v19) & v434);
        uint64_t v330 = (const void *)(((unint64_t)v315 + v19) & v434);
        if (v263(v330, 1, v430))
        {
          memcpy(v329, v330, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v329, v330, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v329, 0, 1, v430);
        }
        char v295 = 12;
        goto LABEL_406;
      case 0xDu:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v393);
        char v295 = 13;
        uint64_t v296 = v432;
        uint64_t v201 = v433;
        uint64_t v297 = v398;
        goto LABEL_409;
      case 0xEu:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))((unint64_t)&a1[v423] & v422, (unint64_t)&a2[v423] & v422, v420);
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        size_t v265 = (void *)(((unint64_t)v120 + v418) & v434);
        size_t v266 = (const void *)((unint64_t)&v121[v418] & v434);
        uint64_t v267 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v267(v266, 1, v430))
        {
          memcpy(v265, v266, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v265, v266, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v265, 0, 1, v430);
        }
        char v316 = (void *)(((unint64_t)v265 + v19) & v434);
        char v317 = (const void *)(((unint64_t)v266 + v19) & v434);
        uint64_t v296 = v432;
        if (v267(v317, 1, v430))
        {
          memcpy(v316, v317, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v316, v317, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v316, 0, 1, v430);
        }
        char v295 = 14;
LABEL_406:
        uint64_t v127 = v436;
LABEL_407:
        uint64_t v201 = v433;
        uint64_t v297 = v398;
        size_t v122 = v437;
        goto LABEL_408;
      default:
        long long v129 = *(_OWORD *)v121;
        long long v130 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x10);
        long long v131 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x30) = v131;
        *long long v120 = v129;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x10) = v130;
        long long v132 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x40);
        long long v133 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x50);
        long long v134 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x70);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x60) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x70) = v134;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x40) = v132;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x50) = v133;
        long long v135 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x80);
        long long v136 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0x90);
        long long v137 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xB0);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xA0) = *(_OWORD *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0xA0);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xB0) = v137;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x80) = v135;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0x90) = v136;
        long long v138 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xC0);
        long long v139 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xD0);
        long long v140 = *(_OWORD *)(((unint64_t)&a2[v423] & v422) + 0xE0);
        *(void *)(((unint64_t)&a1[v423] & v422) + 0xF0) = *(void *)(((unint64_t)&a2[v423] & v422)
                                                                             + 0xF0);
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xD0) = v139;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xE0) = v140;
        *(_OWORD *)(((unint64_t)&a1[v423] & v422) + 0xC0) = v138;
        uint64_t v445 = (_OWORD *)((unint64_t)&a1[v423] & v422);
        unint64_t v141 = ((unint64_t)v120 + v387) & v400;
        unint64_t v142 = (unint64_t)&v121[v387] & v400;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v421 + 16))(v141, v142, v420);
        *(unsigned char *)(v141 + v388) = *(unsigned char *)(v142 + v388);
        long long v143 = (void *)((v440 + 1 + v141 + v388) & v434);
        size_t v144 = (const void *)((v440 + 1 + v142 + v388) & v434);
        unsigned int v145 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v435 + 48);
        if (v145(v144, 1, v430))
        {
          size_t v146 = v431;
          memcpy(v143, v144, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v143, v144, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v143, 0, 1, v430);
          size_t v146 = v431;
        }
        unint64_t v298 = (void *)(((unint64_t)v143 + v19) & v434);
        unint64_t v299 = (const void *)(((unint64_t)v144 + v19) & v434);
        if (v145(v299, 1, v430))
        {
          memcpy(v298, v299, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v298, v299, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v298, 0, 1, v430);
        }
        uint64_t v296 = v432;
        size_t v318 = (void *)(((unint64_t)v298 + v19) & v434);
        uint64_t v319 = (const void *)(((unint64_t)v299 + v19) & v434);
        if (v145(v319, 1, v430))
        {
          memcpy(v318, v319, v431);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v435 + 16))(v318, v319, v430);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v435 + 56))(v318, 0, 1, v430);
        }
        unint64_t v331 = ((unint64_t)v318 + v419) & v417;
        unint64_t v332 = ((unint64_t)v319 + v419) & v417;
        unint64_t v333 = *(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 16);
        v333(v331, v332, v396);
        size_t v334 = (void *)((v414 + v331) & v417);
        unint64_t v335 = (const void *)((v414 + v332) & v417);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v397 + 48))(v335, 1, v396))
        {
          memcpy(v334, v335, __n);
        }
        else
        {
          v333((unint64_t)v334, (unint64_t)v335, v396);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v397 + 56))(v334, 0, 1, v396);
        }
        char v295 = 0;
        uint64_t v201 = v433;
        uint64_t v297 = v398;
        uint64_t v127 = v436;
        size_t v122 = v437;
LABEL_408:
        long long v120 = v445;
        goto LABEL_409;
    }
  }
  return a1;
}

uint64_t sub_24EDA47C4(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v396 = a3[5];
  uint64_t v394 = *(void *)(v396 - 8);
  uint64_t v404 = *(void *)(v394 + 64);
  uint64_t v364 = a3[3];
  uint64_t v387 = *(void *)(v364 - 8);
  uint64_t v365 = v387;
  uint64_t v4 = *(unsigned __int8 *)(v387 + 80);
  uint64_t v366 = sub_24EE55880();
  uint64_t v5 = *(void *)(v366 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v358 = a3[2];
  uint64_t v384 = *(void *)(v358 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v384 + 80);
  uint64_t v8 = sub_24EE55960();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v355 = a3[7];
  uint64_t v10 = *(void *)(v355 - 8);
  uint64_t v324 = v9;
  uint64_t v325 = v8;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v4 | v6 | v7 | v11;
  uint64_t v346 = v4 + 248;
  unint64_t v14 = *(void *)(v387 + 64);
  uint64_t v15 = v14 + v6;
  uint64_t v16 = v14 + v6 + 1;
  uint64_t v349 = v16 + ((v4 + 248) & ~v4);
  uint64_t v381 = v5;
  unint64_t v17 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v18 = *(void *)(v5 + 64);
  }
  else {
    size_t v18 = v17 + 1;
  }
  size_t v19 = v18 + v6;
  size_t v20 = v18 + v7;
  uint64_t v21 = *(void *)(v384 + 64);
  uint64_t v356 = *(void *)(v387 + 64);
  uint64_t v357 = v21 + v7;
  uint64_t v359 = v384;
  if (*(_DWORD *)(v384 + 84)) {
    size_t v22 = *(void *)(v384 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  unint64_t v23 = ((v21 + v7 + ((v18 + v7 + ((v18 + v6 + ((v18 + v6 + (v349 & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7) + v22;
  if (v17 <= v14) {
    size_t v24 = *(void *)(v387 + 64);
  }
  else {
    size_t v24 = *(void *)(v5 + 64);
  }
  size_t v323 = v18 + v11;
  uint64_t v372 = *(unsigned __int8 *)(v9 + 80);
  size_t v25 = ((v18 + v11 + (v19 & ~v6)) & ~v11) + *(void *)(v9 + 64);
  if (v25 <= v24) {
    size_t v25 = v24;
  }
  size_t v347 = v25 + 1;
  size_t v352 = v25;
  if (v25 + 1 > v23) {
    unint64_t v26 = v25 + 1;
  }
  else {
    unint64_t v26 = v23;
  }
  uint64_t v339 = v4 + 224;
  size_t v350 = v22 + v7;
  size_t v351 = v22 + v12;
  uint64_t v27 = (v22
       + v12
       + ((v22 + v7 + ((v20 + ((v19 + ((v19 + ((v16 + ((v4 + 224) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7)) & ~v12;
  uint64_t v354 = *(void *)(v355 - 8);
  unint64_t v28 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v29 = *(void *)(v10 + 64);
  }
  else {
    size_t v29 = v28 + 1;
  }
  size_t __n = v29;
  unint64_t v30 = v27 + v29;
  unint64_t v344 = v30;
  if (v30 <= v26) {
    unint64_t v30 = v26;
  }
  uint64_t v333 = v6 + 64;
  unint64_t v343 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v343 > v30) {
    unint64_t v30 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  size_t v31 = v18 + (v15 & ~v6);
  unint64_t v32 = ((v31 + v6) & ~v6) + v18;
  unint64_t v342 = ((v32 + v6) & ~v6) + v18;
  if (v342 > v30) {
    unint64_t v30 = ((v32 + v6) & ~v6) + v18;
  }
  uint64_t v353 = v6 + 24;
  unint64_t v33 = (v6 + 24 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  if (v33 + v18 > v30) {
    unint64_t v30 = v33 + v18;
  }
  uint64_t v329 = v4 + 24;
  unint64_t v340 = ((v19 + ((v15 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v18;
  unint64_t v341 = v33 + v18;
  if (v340 > v30) {
    unint64_t v30 = ((v19 + ((v15 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v18;
  }
  if (v33 + v18 > v30) {
    unint64_t v30 = v33 + v18;
  }
  uint64_t v328 = v4 + 104;
  unint64_t v338 = ((v19 + ((v19 + ((v15 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v338 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v332 = v4 + 160;
  size_t v360 = v18 + v7;
  uint64_t v374 = v7;
  unint64_t v337 = ((v20 + ((v19 + ((v19 + ((v19 + ((v15 + ((v4 + 160) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v337 > v30) {
    unint64_t v30 = ((v20 + ((v19 + ((v19 + ((v19 + ((v15 + ((v4 + 160) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  uint64_t v327 = v4 + 56;
  unint64_t v336 = ((v19 + ((v19 + ((v15 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v336 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v331 = v4 + 64;
  size_t v34 = ((v15 + ((v4 + 64) & ~v4)) & ~v6) + v18;
  size_t v335 = v34 + 1;
  if (v34 + 1 > v30) {
    unint64_t v30 = v34 + 1;
  }
  uint64_t v330 = v4 + 128;
  uint64_t v363 = v14 + v6;
  size_t v382 = v18 + v6;
  size_t v385 = v18;
  unint64_t v334 = ((v19 + ((v19 + ((v15 + ((v4 + 128) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v334 > v30) {
    unint64_t v30 = ((v19 + ((v19 + ((v15 + ((v4 + 128) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  unint64_t v348 = v28;
  if (v28 > v30) {
    unint64_t v30 = v28;
  }
  size_t v345 = v32;
  if (v32 <= v30) {
    unint64_t v35 = v30;
  }
  else {
    unint64_t v35 = v32;
  }
  uint64_t v370 = a3[4];
  uint64_t v36 = *(void *)(v370 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v383 = v36;
  if (*(_DWORD *)(v36 + 84)) {
    uint64_t v38 = *(void *)(*(void *)(v370 - 8) + 64);
  }
  else {
    uint64_t v38 = *(void *)(*(void *)(v370 - 8) + 64) + 1;
  }
  uint64_t v371 = a3[6];
  uint64_t v39 = *(void *)(v371 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v367 = v39;
  uint64_t v41 = v13 | v12 | 7;
  unint64_t v388 = v35;
  uint64_t v42 = v41 + v404;
  uint64_t v369 = v35 + v37 + 1;
  size_t v361 = v38;
  uint64_t v380 = v38 + v40;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v43 = *(void *)(*(void *)(v371 - 8) + 64);
  }
  else {
    uint64_t v43 = *(void *)(*(void *)(v371 - 8) + 64) + 1;
  }
  size_t v362 = v43;
  uint64_t v368 = v43 + 7;
  if (((v404 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= ((v43
                                                    + 7
                                                    + ((v38 + v40 + ((v369 + ((v41 + v404) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8)
                                                  + 8)
    unint64_t v44 = ((v43 + 7 + ((v38 + v40 + ((v369 + ((v41 + v404) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8) + 8;
  else {
    unint64_t v44 = ((v404 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unsigned int v45 = a2[v44];
  if (v45 >= 2)
  {
    int v46 = v44 <= 3 ? v44 : 4;
    if (v46)
    {
      if (v46 == 4)
      {
        int v47 = *(_DWORD *)a2;
        if (v44 >= 4)
        {
LABEL_61:
          unsigned int v45 = v47 + 2;
          goto LABEL_64;
        }
      }
      else
      {
        int v47 = *a2;
        if (v44 >= 4) {
          goto LABEL_61;
        }
      }
      unsigned int v45 = (v47 | ((v45 - 2) << (8 * v44))) + 2;
    }
  }
LABEL_64:
  unint64_t v389 = v44;
  uint64_t v48 = a1;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v394 + 32))(a1, a2, v396);
  if (v45 == 1)
  {
    unint64_t v49 = (unint64_t)&a2[v404 + 7] & 0xFFFFFFFFFFFFFFF8;
    unsigned int v50 = *(unsigned __int8 *)(v49 + 248);
    if (v50 >= 0xB) {
      unsigned int v50 = *(_DWORD *)v49 + 11;
    }
    unint64_t v51 = (a1 + v404 + 7) & 0xFFFFFFFFFFFFFFF8;
    switch(v50)
    {
      case 0u:
        long long v52 = *(_OWORD *)v49;
        long long v53 = *(_OWORD *)(v49 + 16);
        long long v54 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v54;
        *(_OWORD *)unint64_t v51 = v52;
        *(_OWORD *)(v51 + 16) = v53;
        long long v55 = *(_OWORD *)(v49 + 64);
        long long v56 = *(_OWORD *)(v49 + 80);
        long long v57 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v57;
        *(_OWORD *)(v51 + 64) = v55;
        *(_OWORD *)(v51 + 80) = v56;
        long long v58 = *(_OWORD *)(v49 + 128);
        long long v59 = *(_OWORD *)(v49 + 144);
        long long v60 = *(_OWORD *)(v49 + 176);
        *(_OWORD *)(v51 + 160) = *(_OWORD *)(v49 + 160);
        *(_OWORD *)(v51 + 176) = v60;
        *(_OWORD *)(v51 + 128) = v58;
        *(_OWORD *)(v51 + 144) = v59;
        long long v61 = *(_OWORD *)(v49 + 192);
        long long v62 = *(_OWORD *)(v49 + 208);
        long long v63 = *(_OWORD *)(v49 + 224);
        *(void *)(v51 + 240) = *(void *)(v49 + 240);
        *(_OWORD *)(v51 + 208) = v62;
        *(_OWORD *)(v51 + 224) = v63;
        *(_OWORD *)(v51 + 192) = v61;
        *(unsigned char *)(v51 + 248) = 0;
        goto LABEL_96;
      case 1u:
        long long v94 = *(_OWORD *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(_OWORD *)(v51 + 16) = v94;
        long long v95 = *(_OWORD *)(v49 + 32);
        long long v96 = *(_OWORD *)(v49 + 48);
        long long v97 = *(_OWORD *)(v49 + 80);
        *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 64);
        *(_OWORD *)(v51 + 80) = v97;
        *(_OWORD *)(v51 + 32) = v95;
        *(_OWORD *)(v51 + 48) = v96;
        long long v98 = *(_OWORD *)(v49 + 96);
        long long v99 = *(_OWORD *)(v49 + 112);
        long long v100 = *(_OWORD *)(v49 + 144);
        *(_OWORD *)(v51 + 128) = *(_OWORD *)(v49 + 128);
        *(_OWORD *)(v51 + 144) = v100;
        *(_OWORD *)(v51 + 96) = v98;
        *(_OWORD *)(v51 + 112) = v99;
        long long v101 = *(_OWORD *)(v49 + 160);
        long long v102 = *(_OWORD *)(v49 + 176);
        long long v103 = *(_OWORD *)(v49 + 208);
        *(_OWORD *)(v51 + 192) = *(_OWORD *)(v49 + 192);
        *(_OWORD *)(v51 + 208) = v103;
        *(_OWORD *)(v51 + 160) = v101;
        *(_OWORD *)(v51 + 176) = v102;
        char v104 = 1;
        *(unsigned char *)(v51 + 248) = 1;
        break;
      case 2u:
        long long v105 = *(_OWORD *)v49;
        long long v106 = *(_OWORD *)(v49 + 16);
        long long v107 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v107;
        *(_OWORD *)unint64_t v51 = v105;
        *(_OWORD *)(v51 + 16) = v106;
        *(unsigned char *)(v51 + 248) = 2;
        goto LABEL_96;
      case 3u:
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(unsigned char *)(v51 + 248) = 3;
        goto LABEL_96;
      case 4u:
        long long v108 = *(_OWORD *)v49;
        *(void *)(v51 + 16) = *(void *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = v108;
        *(unsigned char *)(v51 + 248) = 4;
        goto LABEL_96;
      case 5u:
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(unsigned char *)(v51 + 248) = 5;
        goto LABEL_96;
      case 6u:
        long long v109 = *(_OWORD *)v49;
        long long v110 = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 16) = *(_OWORD *)(v49 + 16);
        *(_OWORD *)(v51 + 32) = v110;
        *(_OWORD *)unint64_t v51 = v109;
        long long v111 = *(_OWORD *)(v49 + 48);
        long long v112 = *(_OWORD *)(v49 + 64);
        long long v113 = *(_OWORD *)(v49 + 80);
        *(void *)(v51 + 96) = *(void *)(v49 + 96);
        *(_OWORD *)(v51 + 64) = v112;
        *(_OWORD *)(v51 + 80) = v113;
        *(_OWORD *)(v51 + 48) = v111;
        *(unsigned char *)(v51 + 248) = 6;
        goto LABEL_96;
      case 7u:
        long long v114 = *(_OWORD *)(v49 + 16);
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v49;
        *(_OWORD *)(v51 + 16) = v114;
        long long v115 = *(_OWORD *)(v49 + 32);
        long long v116 = *(_OWORD *)(v49 + 48);
        long long v117 = *(_OWORD *)(v49 + 80);
        *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 64);
        *(_OWORD *)(v51 + 80) = v117;
        *(_OWORD *)(v51 + 32) = v115;
        *(_OWORD *)(v51 + 48) = v116;
        long long v118 = *(_OWORD *)(v49 + 96);
        long long v119 = *(_OWORD *)(v49 + 112);
        long long v120 = *(_OWORD *)(v49 + 144);
        *(_OWORD *)(v51 + 128) = *(_OWORD *)(v49 + 128);
        *(_OWORD *)(v51 + 144) = v120;
        *(_OWORD *)(v51 + 96) = v118;
        *(_OWORD *)(v51 + 112) = v119;
        *(unsigned char *)(v51 + 248) = 7;
        goto LABEL_96;
      case 8u:
        long long v121 = *(_OWORD *)v49;
        long long v122 = *(_OWORD *)(v49 + 16);
        long long v123 = *(_OWORD *)(v49 + 32);
        *(void *)(v51 + 48) = *(void *)(v49 + 48);
        *(_OWORD *)(v51 + 16) = v122;
        *(_OWORD *)(v51 + 32) = v123;
        *(_OWORD *)unint64_t v51 = v121;
        *(unsigned char *)(v51 + 248) = 8;
        goto LABEL_96;
      case 9u:
        long long v124 = *(_OWORD *)v49;
        long long v125 = *(_OWORD *)(v49 + 16);
        long long v126 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v126;
        *(_OWORD *)unint64_t v51 = v124;
        *(_OWORD *)(v51 + 16) = v125;
        *(unsigned char *)(v51 + 248) = 9;
        goto LABEL_96;
      case 0xAu:
        long long v127 = *(_OWORD *)v49;
        long long v128 = *(_OWORD *)(v49 + 16);
        long long v129 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v129;
        *(_OWORD *)unint64_t v51 = v127;
        *(_OWORD *)(v51 + 16) = v128;
        long long v130 = *(_OWORD *)(v49 + 64);
        long long v131 = *(_OWORD *)(v49 + 80);
        long long v132 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v132;
        *(_OWORD *)(v51 + 64) = v130;
        *(_OWORD *)(v51 + 80) = v131;
        *(unsigned char *)(v51 + 248) = 10;
        goto LABEL_96;
      default:
        long long v133 = *(_OWORD *)v49;
        long long v134 = *(_OWORD *)(v49 + 16);
        long long v135 = *(_OWORD *)(v49 + 48);
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 32);
        *(_OWORD *)(v51 + 48) = v135;
        *(_OWORD *)unint64_t v51 = v133;
        *(_OWORD *)(v51 + 16) = v134;
        long long v136 = *(_OWORD *)(v49 + 64);
        long long v137 = *(_OWORD *)(v49 + 80);
        long long v138 = *(_OWORD *)(v49 + 112);
        *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 96);
        *(_OWORD *)(v51 + 112) = v138;
        *(_OWORD *)(v51 + 64) = v136;
        *(_OWORD *)(v51 + 80) = v137;
        long long v139 = *(_OWORD *)(v49 + 128);
        long long v140 = *(_OWORD *)(v49 + 144);
        long long v141 = *(_OWORD *)(v49 + 176);
        *(_OWORD *)(v51 + 160) = *(_OWORD *)(v49 + 160);
        *(_OWORD *)(v51 + 176) = v141;
        *(_OWORD *)(v51 + 128) = v139;
        *(_OWORD *)(v51 + 144) = v140;
        long long v142 = *(_OWORD *)(v49 + 192);
        long long v143 = *(_OWORD *)(v49 + 208);
        long long v144 = *(_OWORD *)(v49 + 224);
        *(_OWORD *)(v51 + 233) = *(_OWORD *)(v49 + 233);
        *(_OWORD *)(v51 + 208) = v143;
        *(_OWORD *)(v51 + 224) = v144;
        *(_OWORD *)(v51 + 192) = v142;
LABEL_96:
        char v104 = 1;
        break;
    }
  }
  else
  {
    uint64_t v64 = ~v41;
    uint64_t v65 = (_OWORD *)((v42 + a1) & ~v41);
    unsigned int v66 = (unsigned __int8 *)((unint64_t)&a2[v42] & v64);
    unsigned int v67 = v66[v388];
    unsigned int v68 = v67 - 15;
    if (v67 >= 0xF)
    {
      if (v388 <= 3) {
        uint64_t v69 = v388;
      }
      else {
        uint64_t v69 = 4;
      }
      switch(v69)
      {
        case 1:
          int v70 = *v66;
          if (v388 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 2:
          int v70 = *(unsigned __int16 *)v66;
          if (v388 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 3:
          int v70 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          if (v388 < 4) {
            goto LABEL_77;
          }
          goto LABEL_81;
        case 4:
          int v70 = *(_DWORD *)v66;
          if (v388 < 4) {
LABEL_77:
          }
            unsigned int v67 = (v70 | (v68 << (8 * v388))) + 15;
          else {
LABEL_81:
          }
            unsigned int v67 = v70 + 15;
          break;
        default:
          break;
      }
    }
    size_t v395 = v22;
    uint64_t v71 = ~v4;
    uint64_t v72 = ~v6;
    uint64_t v73 = ~v12;
    uint64_t v74 = ~v37;
    uint64_t v75 = ~v40;
    size_t v76 = v385;
    switch(v67)
    {
      case 1u:
        size_t v145 = v352;
        unsigned int v146 = v66[v352];
        unsigned int v147 = v146 - 3;
        if (v146 < 3)
        {
          uint64_t v149 = v381;
        }
        else
        {
          if (v352 <= 3) {
            uint64_t v148 = v352;
          }
          else {
            uint64_t v148 = 4;
          }
          uint64_t v149 = v381;
          switch(v148)
          {
            case 1:
              int v150 = *v66;
              goto LABEL_282;
            case 2:
              int v150 = *(unsigned __int16 *)v66;
              goto LABEL_282;
            case 3:
              int v150 = *(unsigned __int16 *)v66 | (v66[2] << 16);
              goto LABEL_282;
            case 4:
              int v150 = *(_DWORD *)v66;
LABEL_282:
              if (v352 < 4) {
                unsigned int v146 = (v150 | (v147 << (8 * v352))) + 3;
              }
              else {
                unsigned int v146 = v150 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v146 == 2)
        {
          uint64_t v406 = v74;
          size_t v318 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v149 + 48);
          uint64_t v400 = v75;
          if (v318(v66, 1, v366))
          {
            size_t v319 = v385;
            memcpy(v65, v66, v385);
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v149 + 32))(v65, v66, v366);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v149 + 56))(v65, 0, 1, v366);
            size_t v319 = v385;
          }
          uint64_t v393 = v65;
          uint64_t v320 = (void *)(((unint64_t)v65 + v6 + v319) & v72);
          unint64_t v321 = (void *)((unint64_t)&v66[v6 + v319] & v72);
          uint64_t v220 = v368;
          if (v318((unsigned __int8 *)v321, 1, v366))
          {
            memcpy(v320, v321, v319);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v381 + 32))(v320, v321, v366);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v320, 0, 1, v366);
          }
          uint64_t v48 = a1;
          uint64_t v250 = v370;
          size_t v145 = v352;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v324 + 32))(((unint64_t)v320 + v323) & ~v372, ((unint64_t)v321 + v323) & ~v372, v325);
          char v317 = 2;
          uint64_t v249 = v371;
          uint64_t v219 = v367;
          uint64_t v251 = v369;
          uint64_t v65 = v393;
          size_t v247 = v388;
          uint64_t v75 = v400;
          uint64_t v246 = v406;
        }
        else
        {
          uint64_t v316 = v74;
          if (v146 == 1)
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v149 + 32))(v65, v66, v366);
            uint64_t v246 = v316;
            size_t v247 = v388;
            char v317 = 1;
            uint64_t v250 = v370;
            uint64_t v249 = v371;
            uint64_t v219 = v367;
            uint64_t v220 = v368;
            uint64_t v251 = v369;
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v365 + 32))(v65, v66, v364);
            char v317 = 0;
            uint64_t v250 = v370;
            uint64_t v249 = v371;
            uint64_t v219 = v367;
            uint64_t v220 = v368;
            uint64_t v251 = v369;
            size_t v247 = v388;
            uint64_t v246 = v316;
          }
        }
        *((unsigned char *)v65 + v145) = v317;
        char v248 = 1;
        goto LABEL_271;
      case 2u:
        uint64_t v376 = ~v374;
        uint64_t v405 = v74;
        uint64_t v398 = v75;
        long long v151 = *((_OWORD *)v66 + 1);
        *uint64_t v65 = *(_OWORD *)v66;
        v65[1] = v151;
        long long v152 = *((_OWORD *)v66 + 2);
        long long v153 = *((_OWORD *)v66 + 3);
        long long v154 = *((_OWORD *)v66 + 5);
        v65[4] = *((_OWORD *)v66 + 4);
        void v65[5] = v154;
        v65[2] = v152;
        v65[3] = v153;
        long long v155 = *((_OWORD *)v66 + 6);
        long long v156 = *((_OWORD *)v66 + 7);
        long long v157 = *((_OWORD *)v66 + 9);
        v65[8] = *((_OWORD *)v66 + 8);
        v65[9] = v157;
        v65[6] = v155;
        v65[7] = v156;
        long long v158 = *((_OWORD *)v66 + 10);
        long long v159 = *((_OWORD *)v66 + 11);
        long long v160 = *((_OWORD *)v66 + 13);
        v65[12] = *((_OWORD *)v66 + 12);
        v65[13] = v160;
        v65[10] = v158;
        v65[11] = v159;
        uint64_t v392 = v65;
        unint64_t v161 = ((unint64_t)v65 + v339) & v71;
        unint64_t v162 = (unint64_t)&v66[v339] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v161, v162, v364);
        uint64_t v163 = v162 + v356;
        *(unsigned char *)(v161 + v356) = *(unsigned char *)(v162 + v356);
        long long v164 = (void *)((v6 + 1 + v161 + v356) & v72);
        long long v165 = (const void *)((v6 + 1 + v163) & v72);
        long long v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v166(v165, 1, v366))
        {
          memcpy(v164, v165, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v164, v165, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v164, 0, 1, v366);
        }
        long long v254 = (void *)(((unint64_t)v164 + v382) & v72);
        long long v255 = (const void *)(((unint64_t)v165 + v382) & v72);
        uint64_t v219 = v367;
        if (v166(v255, 1, v366))
        {
          memcpy(v254, v255, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v254, v255, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v254, 0, 1, v366);
        }
        unint64_t v273 = (void *)(((unint64_t)v254 + v382) & v72);
        uint64_t v274 = (const void *)(((unint64_t)v255 + v382) & v72);
        if (v166(v274, 1, v366))
        {
          memcpy(v273, v274, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v273, v274, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v273, 0, 1, v366);
        }
        uint64_t v250 = v370;
        size_t v286 = (void *)(((unint64_t)v273 + v360) & v376);
        long long v287 = (const void *)(((unint64_t)v274 + v360) & v376);
        long long v288 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v359 + 48);
        if (v288(v287, 1, v358))
        {
          memcpy(v286, v287, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v359 + 32))(v286, v287, v358);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v359 + 56))(v286, 0, 1, v358);
        }
        uint64_t v75 = v398;
        uint64_t v291 = (void *)(((unint64_t)v286 + v350) & v376);
        uint64_t v292 = (const void *)(((unint64_t)v287 + v350) & v376);
        uint64_t v293 = v66;
        if (v288(v292, 1, v358))
        {
          memcpy(v291, v292, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v359 + 32))(v291, v292, v358);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v359 + 56))(v291, 0, 1, v358);
        }
        uint64_t v249 = v371;
        char v295 = (void *)(((unint64_t)v291 + v351) & v73);
        uint64_t v296 = (const void *)(((unint64_t)v292 + v351) & v73);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v354 + 48))(v296, 1, v355))
        {
          memcpy(v295, v296, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v354 + 32))(v295, v296, v355);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v354 + 56))(v295, 0, 1, v355);
        }
        char v248 = 2;
        uint64_t v48 = a1;
        uint64_t v220 = v368;
        uint64_t v251 = v369;
        unsigned int v66 = v293;
        goto LABEL_237;
      case 3u:
        uint64_t v377 = ~v374;
        uint64_t v405 = v74;
        uint64_t v399 = v75;
        long long v167 = *(_OWORD *)v66;
        long long v168 = *((_OWORD *)v66 + 1);
        long long v169 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v169;
        *uint64_t v65 = v167;
        v65[1] = v168;
        uint64_t v392 = v65;
        long long v170 = (void *)(((unint64_t)v65 + v333) & v72);
        long long v171 = v66;
        long long v172 = (const void *)((unint64_t)&v66[v333] & v72);
        long long v173 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v173(v172, 1, v366))
        {
          memcpy(v170, v172, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v170, v172, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v170, 0, 1, v366);
        }
        long long v256 = (void *)(((unint64_t)v170 + v382) & v72);
        long long v257 = (const void *)(((unint64_t)v172 + v382) & v72);
        if (v173(v257, 1, v366))
        {
          memcpy(v256, v257, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v256, v257, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v256, 0, 1, v366);
        }
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        unsigned int v66 = v171;
        uint64_t v386 = (void *)(((unint64_t)v256 + v360) & v377);
        uint64_t v275 = (const void *)(((unint64_t)v257 + v360) & v377);
        uint64_t v75 = v399;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v359 + 48))(v275, 1, v358))
        {
          memcpy(v386, v275, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v359 + 32))(v386, v275, v358);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v359 + 56))(v386, 0, 1, v358);
        }
        char v248 = 3;
        goto LABEL_234;
      case 4u:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v365 + 32))(v65, v66, v364);
        long long v174 = v65;
        long long v175 = (void *)(((unint64_t)v65 + v363) & v72);
        long long v176 = (const void *)((unint64_t)&v66[v363] & v72);
        long long v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v177(v176, 1, v366))
        {
          memcpy(v175, v176, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v175, v176, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v175, 0, 1, v366);
        }
        long long v258 = (void *)(((unint64_t)v175 + v382) & v72);
        long long v259 = (const void *)(((unint64_t)v176 + v382) & v72);
        if (v177(v259, 1, v366))
        {
          memcpy(v258, v259, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v258, v259, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v258, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        uint64_t v276 = (void *)(((unint64_t)v258 + v382) & v72);
        long long v277 = (const void *)(((unint64_t)v259 + v382) & v72);
        if (v177(v277, 1, v366))
        {
          memcpy(v276, v277, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v276, v277, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v276, 0, 1, v366);
        }
        char v248 = 4;
        goto LABEL_267;
      case 5u:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v365 + 32))(v65, v66, v364);
        size_t v391 = v65;
        uint64_t v215 = (void *)(((unint64_t)v65 + v363) & v72);
        size_t v322 = v66;
        uint64_t v216 = (const void *)((unint64_t)&v66[v363] & v72);
        size_t v217 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v217(v216, 1, v366))
        {
          size_t v218 = v385;
          memcpy(v215, v216, v385);
          uint64_t v219 = v367;
          uint64_t v220 = v368;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v215, v216, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v215, 0, 1, v366);
          uint64_t v219 = v367;
          uint64_t v220 = v368;
          size_t v218 = v385;
        }
        *((unsigned char *)v215 + v218) = *((unsigned char *)v216 + v218);
        unint64_t v297 = ((unint64_t)v215 + v218) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v298 = ((unint64_t)v216 + v218) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v297 + 8) = *(_OWORD *)(v298 + 8);
        unint64_t v299 = (void *)((v353 + v297) & v72);
        unint64_t v300 = (const void *)((v353 + v298) & v72);
        if (v217(v300, 1, v366))
        {
          memcpy(v299, v300, v218);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v299, v300, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v299, 0, 1, v366);
        }
        char v248 = 5;
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        goto LABEL_252;
      case 6u:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v221 = *(_OWORD *)v66;
        *((void *)v65 + 2) = *((void *)v66 + 2);
        *uint64_t v65 = v221;
        size_t v391 = v65;
        unint64_t v222 = ((unint64_t)v65 + v329) & v71;
        long long v179 = v66;
        unint64_t v223 = (unint64_t)&v66[v329] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v222, v223, v364);
        uint64_t v224 = (void *)((v363 + v222) & v72);
        unint64_t v225 = (const void *)((v363 + v223) & v72);
        size_t v226 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v226(v225, 1, v366))
        {
          memcpy(v224, v225, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v224, v225, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v224, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        uint64_t v301 = (void *)(((unint64_t)v224 + v382) & v72);
        uint64_t v302 = (const void *)(((unint64_t)v225 + v382) & v72);
        if (v226(v302, 1, v366))
        {
          memcpy(v301, v302, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v301, v302, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v301, 0, 1, v366);
        }
        char v248 = 6;
        goto LABEL_255;
      case 7u:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v365 + 32))(v65, v66, v364);
        size_t v391 = v65;
        long long v178 = (void *)(((unint64_t)v65 + v363) & v72);
        long long v179 = v66;
        long long v180 = (const void *)((unint64_t)&v66[v363] & v72);
        long long v181 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v181(v180, 1, v366))
        {
          memcpy(v178, v180, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v178, v180, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v178, 0, 1, v366);
        }
        *((unsigned char *)v178 + v385) = *((unsigned char *)v180 + v385);
        unint64_t v260 = ((unint64_t)v178 + v385) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v261 = ((unint64_t)v180 + v385) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v260 + 8) = *(_OWORD *)(v261 + 8);
        uint64_t v262 = (void *)((v353 + v260) & v72);
        uint64_t v263 = (const void *)((v353 + v261) & v72);
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        if (v181(v263, 1, v366))
        {
          memcpy(v262, v263, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v262, v263, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v262, 0, 1, v366);
        }
        char v248 = 7;
        goto LABEL_255;
      case 8u:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v227 = *(_OWORD *)v66;
        long long v228 = *((_OWORD *)v66 + 2);
        v65[1] = *((_OWORD *)v66 + 1);
        v65[2] = v228;
        *uint64_t v65 = v227;
        long long v229 = *((_OWORD *)v66 + 3);
        long long v230 = *((_OWORD *)v66 + 4);
        long long v231 = *((_OWORD *)v66 + 5);
        *((void *)v65 + 12) = *((void *)v66 + 12);
        v65[4] = v230;
        void v65[5] = v231;
        v65[3] = v229;
        long long v174 = v65;
        unint64_t v232 = ((unint64_t)v65 + v328) & v71;
        unint64_t v233 = (unint64_t)&v66[v328] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v232, v233, v364);
        size_t v234 = (void *)((v363 + v232) & v72);
        long long v235 = (const void *)((v363 + v233) & v72);
        long long v236 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v236(v235, 1, v366))
        {
          memcpy(v234, v235, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v234, v235, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v234, 0, 1, v366);
        }
        uint64_t v303 = (void *)(((unint64_t)v234 + v382) & v72);
        uint64_t v304 = (const void *)(((unint64_t)v235 + v382) & v72);
        if (v236(v304, 1, v366))
        {
          memcpy(v303, v304, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v303, v304, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v303, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        unint64_t v307 = (void *)(((unint64_t)v303 + v382) & v72);
        uint64_t v308 = (const void *)(((unint64_t)v304 + v382) & v72);
        if (v236(v308, 1, v366))
        {
          memcpy(v307, v308, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v307, v308, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v307, 0, 1, v366);
        }
        char v248 = 8;
        goto LABEL_267;
      case 9u:
        uint64_t v378 = ~v374;
        uint64_t v405 = v74;
        uint64_t v182 = v75;
        long long v183 = *((_OWORD *)v66 + 1);
        *uint64_t v65 = *(_OWORD *)v66;
        v65[1] = v183;
        long long v184 = *((_OWORD *)v66 + 2);
        long long v185 = *((_OWORD *)v66 + 3);
        long long v186 = *((_OWORD *)v66 + 5);
        v65[4] = *((_OWORD *)v66 + 4);
        void v65[5] = v186;
        v65[2] = v184;
        v65[3] = v185;
        long long v187 = *((_OWORD *)v66 + 6);
        long long v188 = *((_OWORD *)v66 + 7);
        long long v189 = *((_OWORD *)v66 + 9);
        v65[8] = *((_OWORD *)v66 + 8);
        v65[9] = v189;
        v65[6] = v187;
        v65[7] = v188;
        uint64_t v392 = v65;
        unint64_t v190 = ((unint64_t)v65 + v332) & v71;
        unint64_t v191 = (unint64_t)&v66[v332] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v190, v191, v364);
        long long v192 = (void *)((v363 + v190) & v72);
        long long v193 = (const void *)((v363 + v191) & v72);
        size_t v373 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v373(v193, 1, v366))
        {
          memcpy(v192, v193, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v192, v193, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v192, 0, 1, v366);
        }
        size_t v264 = (void *)(((unint64_t)v192 + v382) & v72);
        size_t v265 = (const void *)(((unint64_t)v193 + v382) & v72);
        uint64_t v75 = v182;
        if (v373(v265, 1, v366))
        {
          memcpy(v264, v265, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v264, v265, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v264, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        long long v278 = (void *)(((unint64_t)v264 + v382) & v72);
        long long v279 = (const void *)(((unint64_t)v265 + v382) & v72);
        if (v373(v279, 1, v366))
        {
          memcpy(v278, v279, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v278, v279, v366);
          size_t v76 = v385;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v278, 0, 1, v366);
        }
        long long v289 = (void *)(((unint64_t)v278 + v382) & v72);
        unint64_t v290 = (const void *)(((unint64_t)v279 + v382) & v72);
        if (v373(v290, 1, v366))
        {
          memcpy(v289, v290, v76);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v289, v290, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v289, 0, 1, v366);
        }
        uint64_t v48 = a1;
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        unint64_t v403 = (void *)(((unint64_t)v289 + v360) & v378);
        size_t v294 = (const void *)(((unint64_t)v290 + v360) & v378);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v359 + 48))(v294, 1, v358))
        {
          memcpy(v403, v294, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v359 + 32))(v403, v294, v358);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v359 + 56))(v403, 0, 1, v358);
        }
        char v248 = 9;
LABEL_234:
        uint64_t v251 = v369;
LABEL_237:
        uint64_t v65 = v392;
        size_t v247 = v388;
        goto LABEL_270;
      case 0xAu:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v237 = *(_OWORD *)v66;
        long long v238 = *((_OWORD *)v66 + 1);
        long long v239 = *((_OWORD *)v66 + 2);
        *((void *)v65 + 6) = *((void *)v66 + 6);
        v65[1] = v238;
        v65[2] = v239;
        *uint64_t v65 = v237;
        long long v174 = v65;
        unint64_t v240 = ((unint64_t)v65 + v327) & v71;
        unint64_t v241 = (unint64_t)&v66[v327] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v240, v241, v364);
        unint64_t v242 = (void *)((v363 + v240) & v72);
        unint64_t v243 = (const void *)((v363 + v241) & v72);
        uint64_t v244 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v244(v243, 1, v366))
        {
          memcpy(v242, v243, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v242, v243, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v242, 0, 1, v366);
        }
        uint64_t v305 = (void *)(((unint64_t)v242 + v382) & v72);
        unint64_t v306 = (const void *)(((unint64_t)v243 + v382) & v72);
        if (v244(v306, 1, v366))
        {
          memcpy(v305, v306, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v305, v306, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v305, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        uint64_t v309 = (void *)(((unint64_t)v305 + v382) & v72);
        unsigned int v310 = (const void *)(((unint64_t)v306 + v382) & v72);
        if (v244(v310, 1, v366))
        {
          memcpy(v309, v310, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v309, v310, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v309, 0, 1, v366);
        }
        char v248 = 10;
        goto LABEL_267;
      case 0xBu:
        uint64_t v379 = ~v374;
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v194 = *(_OWORD *)v66;
        long long v195 = *((_OWORD *)v66 + 1);
        long long v196 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v196;
        *uint64_t v65 = v194;
        v65[1] = v195;
        unint64_t v197 = ((unint64_t)v65 + v331) & v71;
        unint64_t v198 = (unint64_t)&v66[v331] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v197, v198, v364);
        uint64_t v199 = (void *)((v363 + v197) & v72);
        uint64_t v200 = (const void *)((v363 + v198) & v72);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48))(v200, 1, v366))
        {
          memcpy(v199, v200, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v199, v200, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v199, 0, 1, v366);
        }
        uint64_t v249 = v371;
        *((unsigned char *)v199 + v385) = *((unsigned char *)v200 + v385);
        size_t v266 = ((v357 + ((v360 + ((v382 + (((v349 | v6) + v385) & v72)) & v72)) & v379)) & v379) + v395;
        if (v347 > v266) {
          size_t v266 = v347;
        }
        if (v344 > v266) {
          size_t v266 = v344;
        }
        if (v343 > v266) {
          size_t v266 = v343;
        }
        if (v342 > v266) {
          size_t v266 = v342;
        }
        if (v341 > v266) {
          size_t v266 = v341;
        }
        if (v340 > v266) {
          size_t v266 = v340;
        }
        if (v341 > v266) {
          size_t v266 = v341;
        }
        if (v338 > v266) {
          size_t v266 = v338;
        }
        if (v337 > v266) {
          size_t v266 = v337;
        }
        if (v336 > v266) {
          size_t v266 = v336;
        }
        if (v335 > v266) {
          size_t v266 = v335;
        }
        if (v334 > v266) {
          size_t v266 = v334;
        }
        if (v348 > v266) {
          size_t v266 = v348;
        }
        if (v345 <= v266) {
          size_t v247 = v266;
        }
        else {
          size_t v247 = v345;
        }
        char v248 = 11;
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        uint64_t v251 = v369;
        uint64_t v250 = v370;
        goto LABEL_269;
      case 0xCu:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v201 = *(_OWORD *)v66;
        long long v202 = *((_OWORD *)v66 + 1);
        long long v203 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v203;
        *uint64_t v65 = v201;
        v65[1] = v202;
        long long v204 = *((_OWORD *)v66 + 4);
        long long v205 = *((_OWORD *)v66 + 5);
        long long v206 = *((_OWORD *)v66 + 7);
        v65[6] = *((_OWORD *)v66 + 6);
        v65[7] = v206;
        v65[4] = v204;
        void v65[5] = v205;
        long long v174 = v65;
        unint64_t v207 = ((unint64_t)v65 + v330) & v71;
        unint64_t v208 = (unint64_t)&v66[v330] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v207, v208, v364);
        long long v209 = (void *)((v363 + v207) & v72);
        long long v210 = (const void *)((v363 + v208) & v72);
        long long v211 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v211(v210, 1, v366))
        {
          memcpy(v209, v210, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v209, v210, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v209, 0, 1, v366);
        }
        uint64_t v267 = (void *)(((unint64_t)v209 + v382) & v72);
        uint64_t v268 = (const void *)(((unint64_t)v210 + v382) & v72);
        if (v211(v268, 1, v366))
        {
          memcpy(v267, v268, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v267, v268, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v267, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        long long v280 = (void *)(((unint64_t)v267 + v382) & v72);
        long long v281 = (const void *)(((unint64_t)v268 + v382) & v72);
        if (v211(v281, 1, v366))
        {
          memcpy(v280, v281, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v280, v281, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v280, 0, 1, v366);
        }
        char v248 = 12;
LABEL_267:
        uint64_t v48 = a1;
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        uint64_t v251 = v369;
        uint64_t v65 = v174;
        goto LABEL_268;
      case 0xDu:
        uint64_t v245 = v74;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v354 + 32))(v65, v66, v355);
        uint64_t v246 = v245;
        size_t v247 = v388;
        char v248 = 13;
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        uint64_t v251 = v369;
        goto LABEL_271;
      case 0xEu:
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v365 + 32))(v65, v66, v364);
        size_t v391 = v65;
        long long v212 = (void *)(((unint64_t)v65 + v363) & v72);
        long long v179 = v66;
        unint64_t v213 = (const void *)((unint64_t)&v66[v363] & v72);
        unint64_t v214 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v214(v213, 1, v366))
        {
          memcpy(v212, v213, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v212, v213, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v212, 0, 1, v366);
        }
        uint64_t v269 = (void *)(((unint64_t)v212 + v382) & v72);
        uint64_t v270 = (const void *)(((unint64_t)v213 + v382) & v72);
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        if (v214(v270, 1, v366))
        {
          memcpy(v269, v270, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v269, v270, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v269, 0, 1, v366);
        }
        char v248 = 14;
LABEL_255:
        uint64_t v250 = v370;
        uint64_t v249 = v371;
        uint64_t v251 = v369;
        unsigned int v66 = v179;
        goto LABEL_256;
      default:
        uint64_t v375 = ~v374;
        uint64_t v405 = v74;
        uint64_t v397 = v75;
        long long v77 = *(_OWORD *)v66;
        long long v78 = *((_OWORD *)v66 + 1);
        long long v79 = *((_OWORD *)v66 + 3);
        v65[2] = *((_OWORD *)v66 + 2);
        v65[3] = v79;
        *uint64_t v65 = v77;
        v65[1] = v78;
        long long v80 = *((_OWORD *)v66 + 4);
        long long v81 = *((_OWORD *)v66 + 5);
        long long v82 = *((_OWORD *)v66 + 7);
        v65[6] = *((_OWORD *)v66 + 6);
        v65[7] = v82;
        v65[4] = v80;
        void v65[5] = v81;
        long long v83 = *((_OWORD *)v66 + 8);
        long long v84 = *((_OWORD *)v66 + 9);
        long long v85 = *((_OWORD *)v66 + 11);
        v65[10] = *((_OWORD *)v66 + 10);
        v65[11] = v85;
        v65[8] = v83;
        v65[9] = v84;
        long long v86 = *((_OWORD *)v66 + 12);
        long long v87 = *((_OWORD *)v66 + 13);
        long long v88 = *((_OWORD *)v66 + 14);
        *((void *)v65 + 30) = *((void *)v66 + 30);
        v65[13] = v87;
        v65[14] = v88;
        v65[12] = v86;
        size_t v391 = v65;
        unint64_t v89 = ((unint64_t)v65 + v346) & v71;
        unint64_t v90 = (unint64_t)&v66[v346] & v71;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 32))(v89, v90, v364);
        *(unsigned char *)(v89 + v356) = *(unsigned char *)(v90 + v356);
        uint64_t v91 = (void *)((v6 + 1 + v89 + v356) & v72);
        unint64_t v92 = (const void *)((v6 + 1 + v90 + v356) & v72);
        unint64_t v93 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48);
        if (v93(v92, 1, v366))
        {
          memcpy(v91, v92, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v91, v92, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v91, 0, 1, v366);
        }
        uint64_t v252 = (void *)(((unint64_t)v91 + v382) & v72);
        size_t v253 = (const void *)(((unint64_t)v92 + v382) & v72);
        if (v93(v253, 1, v366))
        {
          memcpy(v252, v253, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v252, v253, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v252, 0, 1, v366);
        }
        uint64_t v219 = v367;
        uint64_t v220 = v368;
        size_t v271 = (void *)(((unint64_t)v252 + v382) & v72);
        long long v272 = (const void *)(((unint64_t)v253 + v382) & v72);
        size_t v322 = v66;
        if (v93(v272, 1, v366))
        {
          memcpy(v271, v272, v385);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v381 + 32))(v271, v272, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v381 + 56))(v271, 0, 1, v366);
        }
        uint64_t v48 = a1;
        uint64_t v250 = v370;
        unint64_t v282 = ((unint64_t)v271 + v360) & v375;
        unint64_t v283 = ((unint64_t)v272 + v360) & v375;
        size_t v402 = *(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 32);
        v402(v282, v283, v358);
        unint64_t v284 = (void *)((v357 + v282) & v375);
        uint64_t v285 = (const void *)((v357 + v283) & v375);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v359 + 48))(v285, 1, v358))
        {
          memcpy(v284, v285, v395);
        }
        else
        {
          v402((unint64_t)v284, (unint64_t)v285, v358);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v359 + 56))(v284, 0, 1, v358);
        }
        char v248 = 0;
        uint64_t v249 = v371;
LABEL_252:
        uint64_t v251 = v369;
        unsigned int v66 = v322;
LABEL_256:
        uint64_t v65 = v391;
LABEL_268:
        size_t v247 = v388;
LABEL_269:
        uint64_t v75 = v397;
LABEL_270:
        uint64_t v246 = v405;
LABEL_271:
        *((unsigned char *)v65 + v247) = v248;
        uint64_t v311 = (void *)(((unint64_t)v65 + v251) & v246);
        uint64_t v312 = (const void *)((unint64_t)&v66[v251] & v246);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v383 + 48))(v312, 1, v250))
        {
          memcpy(v311, v312, v361);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v383 + 32))(v311, v312, v250);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v383 + 56))(v311, 0, 1, v250);
        }
        size_t v313 = (void *)(((unint64_t)v311 + v380) & v75);
        uint64_t v314 = (const void *)(((unint64_t)v312 + v380) & v75);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48))(v314, 1, v249))
        {
          memcpy(v313, v314, v362);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v219 + 32))(v313, v314, v249);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v219 + 56))(v313, 0, 1, v249);
        }
        char v104 = 0;
        *(void *)(((unint64_t)v313 + v220) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v314 + v220) & 0xFFFFFFFFFFFFFFF8);
        break;
    }
  }
  *(unsigned char *)(v48 + v389) = v104;
  return v48;
}

unsigned __int8 *sub_24EDA7374(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v445 = a3[5];
  uint64_t v444 = *(void *)(v445 - 8);
  uint64_t v439 = *(void *)(v444 + 64);
  uint64_t v421 = a3[3];
  uint64_t v442 = *(void *)(v421 - 8);
  uint64_t v422 = v442;
  uint64_t v3 = *(unsigned __int8 *)(v442 + 80);
  uint64_t v431 = sub_24EE55880();
  uint64_t v5 = *(void *)(v431 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v397 = a3[2];
  uint64_t v440 = *(void *)(v397 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v440 + 80);
  uint64_t v8 = sub_24EE55960();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v394 = a3[7];
  uint64_t v10 = *(void *)(v394 - 8);
  uint64_t v377 = v9;
  uint64_t v378 = v8;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v388 = v3 + 248;
  size_t v13 = *(void *)(v442 + 64);
  uint64_t v14 = v13 + v6;
  uint64_t v15 = v13 + v6 + 1;
  uint64_t v414 = v15 + ((v3 + 248) & ~v3);
  uint64_t v436 = v5;
  size_t v16 = *(void *)(v5 + 64);
  int v17 = *(_DWORD *)(v436 + 84);
  if (v17) {
    size_t v18 = v16;
  }
  else {
    size_t v18 = v16 + 1;
  }
  size_t v19 = v18 + v6;
  size_t v20 = v18 + v7;
  uint64_t v21 = *(void *)(v440 + 64);
  uint64_t v415 = v21 + v7;
  uint64_t v398 = v440;
  if (*(_DWORD *)(v440 + 84)) {
    size_t v22 = *(void *)(v440 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  unint64_t v23 = ((v21 + v7 + ((v18 + v7 + ((v18 + v6 + ((v18 + v6 + (v414 & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7) + v22;
  uint64_t v389 = *(void *)(v442 + 64);
  if (v16 <= v13) {
    size_t v24 = *(void *)(v442 + 64);
  }
  else {
    size_t v24 = v16;
  }
  size_t v376 = v18 + v11;
  size_t v25 = ((v18 + v11 + (v19 & ~v6)) & ~v11) + *(void *)(v9 + 64);
  if (v25 <= v24) {
    size_t v25 = v24;
  }
  size_t v412 = v25 + 1;
  size_t v392 = v25;
  if (v25 + 1 > v23) {
    unint64_t v26 = v25 + 1;
  }
  else {
    unint64_t v26 = v23;
  }
  uint64_t v386 = v3 + 224;
  size_t v390 = v22 + v7;
  size_t v391 = v22 + v12;
  uint64_t v416 = *(void *)(v394 - 8);
  unint64_t v27 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v28 = *(void *)(v10 + 64);
  }
  else {
    size_t v28 = v27 + 1;
  }
  size_t v374 = v28;
  unint64_t v29 = ((v22
        + v12
        + ((v22 + v7 + ((v20 + ((v19 + ((v19 + ((v15 + ((v3 + 224) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v7)) & ~v7)) & ~v12)
      + v28;
  unint64_t v410 = v29;
  if (v29 <= v26) {
    unint64_t v29 = v26;
  }
  uint64_t v385 = v6 + 64;
  unint64_t v409 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v409 > v29) {
    unint64_t v29 = ((v20 + ((v19 + ((v6 + 64) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  size_t v30 = v18 + (v14 & ~v6);
  unint64_t v31 = ((v30 + v6) & ~v6) + v18;
  unint64_t v408 = ((v31 + v6) & ~v6) + v18;
  if (v408 > v29) {
    unint64_t v29 = ((v31 + v6) & ~v6) + v18;
  }
  uint64_t v393 = v6 + 24;
  unint64_t v32 = (v6 + 24 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v33 = v32 + v18;
  if (v32 + v18 > v29) {
    unint64_t v29 = v32 + v18;
  }
  uint64_t v381 = v3 + 24;
  unint64_t v407 = ((v19 + ((v14 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v18;
  if (v407 > v29) {
    unint64_t v29 = ((v19 + ((v14 + ((v3 + 24) & ~v3)) & ~v6)) & ~v6) + v18;
  }
  if (v33 > v29) {
    unint64_t v29 = v32 + v18;
  }
  uint64_t v380 = v3 + 104;
  unint64_t v406 = ((v19 + ((v19 + ((v14 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v406 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 104) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v384 = v3 + 160;
  size_t v420 = v18 + v7;
  size_t __n = v22;
  unint64_t v405 = ((v20 + ((v19 + ((v19 + ((v19 + ((v14 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  if (v405 > v29) {
    unint64_t v29 = ((v20 + ((v19 + ((v19 + ((v19 + ((v14 + ((v3 + 160) & ~v3)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v7) + v22;
  }
  uint64_t v379 = v3 + 56;
  unint64_t v404 = ((v19 + ((v19 + ((v14 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v404 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 56) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  uint64_t v383 = v3 + 64;
  size_t v34 = ((v14 + ((v3 + 64) & ~v3)) & ~v6) + v18;
  size_t v403 = v34 + 1;
  if (v34 + 1 > v29) {
    unint64_t v29 = v34 + 1;
  }
  uint64_t v382 = v3 + 128;
  uint64_t v419 = v13 + v6;
  uint64_t v441 = v6;
  size_t v432 = v18;
  unint64_t v402 = ((v19 + ((v19 + ((v14 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  if (v402 > v29) {
    unint64_t v29 = ((v19 + ((v19 + ((v14 + ((v3 + 128) & ~v3)) & ~v6)) & ~v6)) & ~v6) + v18;
  }
  unint64_t v413 = v27;
  if (v27 > v29) {
    unint64_t v29 = v27;
  }
  unint64_t v411 = v31;
  if (v31 <= v29) {
    unint64_t v35 = v29;
  }
  else {
    unint64_t v35 = v31;
  }
  uint64_t v434 = a3[4];
  uint64_t v36 = *(void *)(v434 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v429 = v36;
  if (*(_DWORD *)(v36 + 84)) {
    uint64_t v38 = *(void *)(*(void *)(v434 - 8) + 64);
  }
  else {
    uint64_t v38 = *(void *)(*(void *)(v434 - 8) + 64) + 1;
  }
  uint64_t v437 = a3[6];
  uint64_t v39 = *(void *)(v437 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v433 = v39;
  uint64_t v41 = v3 | v6 | v7 | v11 | v12 | 7;
  unint64_t v438 = v35;
  uint64_t v424 = v41 + v439;
  uint64_t v399 = v35 + v37 + 1;
  size_t v395 = v38;
  uint64_t v428 = v38 + v40;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v42 = *(void *)(*(void *)(v437 - 8) + 64);
  }
  else {
    uint64_t v42 = *(void *)(*(void *)(v437 - 8) + 64) + 1;
  }
  size_t v396 = v42;
  uint64_t v430 = v42 + 7;
  if (((v439 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= ((v42
                                                    + 7
                                                    + ((v38 + v40 + ((v399 + ((v41 + v439) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8)
                                                  + 8)
    unint64_t v43 = ((v42 + 7 + ((v38 + v40 + ((v399 + ((v41 + v439) & ~v41)) & ~v37)) & ~v40)) & 0xFFFFFFFFFFFFFFF8) + 8;
  else {
    unint64_t v43 = ((v439 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  unsigned int v44 = a1[v43];
  if (v44 >= 2)
  {
    int v45 = v43 <= 3 ? v43 : 4;
    if (v45)
    {
      if (v45 == 4)
      {
        int v46 = *(_DWORD *)a1;
        if (v43 >= 4)
        {
LABEL_62:
          unsigned int v44 = v46 + 2;
          goto LABEL_65;
        }
      }
      else
      {
        int v46 = *a1;
        if (v43 >= 4) {
          goto LABEL_62;
        }
      }
      unsigned int v44 = (v46 | ((v44 - 2) << (8 * v43))) + 2;
    }
  }
LABEL_65:
  unint64_t v443 = v43;
  uint64_t v423 = ~v41;
  uint64_t v401 = ~v3;
  uint64_t v47 = ~v6;
  uint64_t v48 = ~v7;
  uint64_t v375 = ~v11;
  uint64_t v387 = ~v12;
  uint64_t v400 = v37;
  uint64_t v426 = ~v37;
  uint64_t v427 = ~v40;
  (*(void (**)(unsigned __int8 *, uint64_t))(v444 + 8))(a1, v445);
  uint64_t v435 = ~v441;
  uint64_t v418 = ~v7;
  if (v44 != 1)
  {
    unint64_t v49 = (unsigned __int8 *)((unint64_t)&a1[v424] & v423);
    unsigned int v50 = v49[v438];
    unsigned int v51 = v50 - 15;
    if (v50 >= 0xF)
    {
      if (v438 <= 3) {
        uint64_t v52 = v438;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v49;
          if (v438 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 2:
          int v53 = *(unsigned __int16 *)v49;
          if (v438 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 3:
          int v53 = *(unsigned __int16 *)((unint64_t)&a1[v424] & v423) | (*(unsigned __int8 *)(((unint64_t)&a1[v424] & v423)
                                                                                                + 2) << 16);
          if (v438 < 4) {
            goto LABEL_74;
          }
          goto LABEL_78;
        case 4:
          int v53 = *(_DWORD *)v49;
          if (v438 < 4) {
LABEL_74:
          }
            unsigned int v50 = (v53 | (v51 << (8 * v438))) + 15;
          else {
LABEL_78:
          }
            unsigned int v50 = v53 + 15;
          break;
        default:
          break;
      }
    }
    switch(v50)
    {
      case 1u:
        unsigned int v66 = v49[v392];
        unsigned int v67 = v66 - 3;
        if (v66 < 3)
        {
          uint64_t v69 = v436;
        }
        else
        {
          if (v392 <= 3) {
            uint64_t v68 = v392;
          }
          else {
            uint64_t v68 = 4;
          }
          uint64_t v69 = v436;
          switch(v68)
          {
            case 1:
              int v70 = *v49;
              goto LABEL_150;
            case 2:
              int v70 = *(unsigned __int16 *)v49;
              goto LABEL_150;
            case 3:
              int v70 = *(unsigned __int16 *)v49 | (*(unsigned __int8 *)(((unint64_t)&a1[v424] & v423) + 2) << 16);
              goto LABEL_150;
            case 4:
              int v70 = *(_DWORD *)v49;
LABEL_150:
              if (v392 < 4) {
                unsigned int v66 = (v70 | (v67 << (8 * v392))) + 3;
              }
              else {
                unsigned int v66 = v70 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v66 == 2)
        {
          long long v97 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v69 + 48);
          if (!v97((unint64_t)&a1[v424] & v423, 1, v431)) {
            (*(void (**)(unsigned __int8 *, uint64_t))(v69 + 8))(v49, v431);
          }
          unint64_t v98 = (unint64_t)&v49[v441 + v432] & v435;
          if (!v97(v98, 1, v431)) {
            (*(void (**)(unint64_t, uint64_t))(v69 + 8))(v98, v431);
          }
          (*(void (**)(size_t, uint64_t))(v377 + 8))((v376 + v98) & v375, v378);
          uint64_t v47 = ~v441;
          uint64_t v48 = ~v7;
          break;
        }
        if (v66 == 1)
        {
          uint64_t v95 = v69;
          goto LABEL_141;
        }
        uint64_t v89 = v421;
        uint64_t v90 = v422;
        goto LABEL_162;
      case 2u:
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))((unint64_t)&v49[v386] & v401, v421);
        unint64_t v71 = (v15 + ((unint64_t)&v49[v386] & v401)) & v47;
        uint64_t v72 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        if (!v72(v71, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v71, v431);
        }
        unint64_t v73 = (v19 + v71) & v47;
        if (!v72(v73, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v73, v431);
        }
        size_t v74 = (v19 + v73) & v47;
        if (!v72(v74, 1, v431)) {
          (*(void (**)(size_t, uint64_t))(v436 + 8))(v74, v431);
        }
        size_t v75 = (v420 + v74) & v418;
        size_t v76 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v398 + 48);
        if (!v76(v75, 1, v397)) {
          (*(void (**)(size_t, uint64_t))(v398 + 8))(v75, v397);
        }
        size_t v77 = (v390 + v75) & v418;
        if (!v76(v77, 1, v397)) {
          (*(void (**)(size_t, uint64_t))(v398 + 8))(v77, v397);
        }
        unint64_t v49 = (unsigned __int8 *)((v391 + v77) & v387);
        uint64_t v48 = ~v7;
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v416 + 48))(v49, 1, v394)) {
          goto LABEL_108;
        }
        break;
      case 3u:
        unint64_t v78 = (unint64_t)&v49[v385] & v47;
        long long v79 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        if (!v79(v78, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v78, v431);
        }
        unint64_t v80 = (v19 + v78) & v47;
        if (!v79(v80, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v80, v431);
        }
        uint64_t v48 = ~v7;
        unint64_t v49 = (unsigned __int8 *)((v420 + v80) & v418);
        uint64_t v47 = ~v441;
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v398 + 48))(v49, 1, v397)) {
          goto LABEL_130;
        }
        break;
      case 4u:
        goto LABEL_135;
      case 5u:
      case 7u:
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))((unint64_t)&a1[v424] & v423, v421);
        unint64_t v54 = (unint64_t)&v49[v419] & v47;
        long long v55 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        uint64_t v56 = v47;
        uint64_t v57 = v431;
        if (!v55(v54, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v54, v431);
        }
        size_t v58 = v393 + ((v54 + v432) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_119;
      case 6u:
        unint64_t v49 = (unsigned __int8 *)((unint64_t)&v49[v381] & v401);
        goto LABEL_116;
      case 8u:
        uint64_t v91 = v380;
        goto LABEL_134;
      case 9u:
        unint64_t v83 = (unint64_t)&v49[v384] & v401;
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))(v83, v421);
        unint64_t v84 = (v419 + v83) & v47;
        long long v85 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        if (!v85(v84, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v84, v431);
        }
        size_t v86 = (v19 + v84) & v47;
        if (!v85(v86, 1, v431)) {
          (*(void (**)(size_t, uint64_t))(v436 + 8))(v86, v431);
        }
        size_t v87 = (v19 + v86) & v47;
        if (!v85(v87, 1, v431)) {
          (*(void (**)(size_t, uint64_t))(v436 + 8))(v87, v431);
        }
        size_t v88 = (v19 + v87) & v47;
        if (!v85(v88, 1, v431)) {
          (*(void (**)(size_t, uint64_t))(v436 + 8))(v88, v431);
        }
        uint64_t v48 = ~v7;
        unint64_t v49 = (unsigned __int8 *)((v420 + v88) & v418);
        if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v398 + 48))(v49, 1, v397))
        {
LABEL_130:
          uint64_t v89 = v397;
          uint64_t v90 = v398;
LABEL_162:
          (*(void (**)(unsigned __int8 *, uint64_t))(v90 + 8))(v49, v89);
        }
        break;
      case 0xAu:
        uint64_t v91 = v379;
        goto LABEL_134;
      case 0xBu:
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))((unint64_t)&v49[v383] & v401, v421);
        unint64_t v96 = (v419 + ((unint64_t)&v49[v383] & v401)) & v47;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48))(v96, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v96, v431);
        }
        if (!v17) {
          break;
        }
        goto LABEL_164;
      case 0xCu:
        uint64_t v91 = v382;
LABEL_134:
        unint64_t v49 = (unsigned __int8 *)((unint64_t)&v49[v91] & v401);
LABEL_135:
        (*(void (**)(unsigned __int8 *, uint64_t))(v422 + 8))(v49, v421);
        unint64_t v92 = (unint64_t)&v49[v419] & v47;
        unint64_t v93 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        if (!v93(v92, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v92, v431);
        }
        unint64_t v94 = (v19 + v92) & v47;
        if (!v93(v94, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v94, v431);
        }
        unint64_t v49 = (unsigned __int8 *)((v19 + v94) & v47);
        uint64_t v48 = ~v7;
        if (!v93((unint64_t)v49, 1, v431)) {
          goto LABEL_140;
        }
        break;
      case 0xDu:
LABEL_108:
        (*(void (**)(unsigned __int8 *, uint64_t))(v416 + 8))(v49, v394);
        break;
      case 0xEu:
LABEL_116:
        (*(void (**)(unsigned __int8 *, uint64_t))(v422 + 8))(v49, v421);
        unint64_t v81 = (unint64_t)&v49[v419] & v47;
        long long v55 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        uint64_t v56 = v47;
        uint64_t v57 = v431;
        if (!v55(v81, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v81, v431);
        }
        size_t v58 = v19 + v81;
LABEL_119:
        unint64_t v49 = (unsigned __int8 *)(v58 & v56);
        unsigned int v82 = v55(v58 & v56, 1, v57);
        uint64_t v47 = v56;
        uint64_t v48 = ~v7;
        if (!v82)
        {
LABEL_140:
          uint64_t v95 = v436;
LABEL_141:
          (*(void (**)(unsigned __int8 *, uint64_t))(v95 + 8))(v49, v431);
        }
        break;
      default:
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))((unint64_t)&v49[v388] & v401, v421);
        unint64_t v59 = (v15 + ((unint64_t)&v49[v388] & v401)) & v47;
        long long v60 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v436 + 48);
        if (!v60(v59, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v59, v431);
        }
        unint64_t v61 = (v19 + v59) & v47;
        if (!v60(v61, 1, v431)) {
          (*(void (**)(unint64_t, uint64_t))(v436 + 8))(v61, v431);
        }
        size_t v62 = (v19 + v61) & v47;
        if (!v60(v62, 1, v431)) {
          (*(void (**)(size_t, uint64_t))(v436 + 8))(v62, v431);
        }
        size_t v63 = (v420 + v62) & v418;
        uint64_t v64 = *(void (**)(size_t, uint64_t))(v398 + 8);
        v64(v63, v397);
        uint64_t v65 = (v415 + v63) & v418;
        uint64_t v48 = ~v7;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v398 + 48))(v65, 1, v397)) {
          v64(v65, v397);
        }
        break;
    }
    size_t v16 = v432;
LABEL_164:
    size_t v99 = ((v415 + ((v420 + ((v19 + (((v414 | v441) + v16) & v47)) & v47)) & v48)) & v48) + __n;
    if (v412 > v99) {
      size_t v99 = v412;
    }
    if (v410 > v99) {
      size_t v99 = v410;
    }
    if (v409 > v99) {
      size_t v99 = v409;
    }
    if (v408 > v99) {
      size_t v99 = v408;
    }
    if (v33 > v99) {
      size_t v99 = v33;
    }
    if (v407 > v99) {
      size_t v99 = v407;
    }
    if (v33 > v99) {
      size_t v99 = v33;
    }
    if (v406 > v99) {
      size_t v99 = v406;
    }
    if (v405 > v99) {
      size_t v99 = v405;
    }
    if (v404 > v99) {
      size_t v99 = v404;
    }
    if (v403 > v99) {
      size_t v99 = v403;
    }
    if (v402 > v99) {
      size_t v99 = v402;
    }
    if (v413 > v99) {
      size_t v99 = v413;
    }
    if (v411 > v99) {
      size_t v99 = v411;
    }
    uint64_t v100 = (((unint64_t)&a1[v424] & v423 | 1) + v400 + v99) & v426;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v429 + 48))(v100, 1, v434)) {
      (*(void (**)(uint64_t, uint64_t))(v429 + 8))(v100, v434);
    }
    uint64_t v101 = (v428 + v100) & v427;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v433 + 48))(v101, 1, v437)) {
      (*(void (**)(uint64_t, uint64_t))(v433 + 8))(v101, v437);
    }
    swift_bridgeObjectRelease();
  }
  unsigned int v102 = a2[v443];
  if (v102 < 2) {
    goto LABEL_207;
  }
  int v103 = v443 <= 3 ? v443 : 4;
  if (!v103) {
    goto LABEL_207;
  }
  if (v103 != 4)
  {
    int v104 = *a2;
    if (v443 >= 4) {
      goto LABEL_204;
    }
LABEL_206:
    unsigned int v102 = (v104 | ((v102 - 2) << (8 * v443))) + 2;
    goto LABEL_207;
  }
  int v104 = *(_DWORD *)a2;
  if (v443 < 4) {
    goto LABEL_206;
  }
LABEL_204:
  unsigned int v102 = v104 + 2;
LABEL_207:
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v444 + 32))(a1, a2, v445);
  if (v102 == 1)
  {
    unint64_t v105 = (unint64_t)&a2[v439 + 7] & 0xFFFFFFFFFFFFFFF8;
    unsigned int v106 = *(unsigned __int8 *)(v105 + 248);
    if (v106 >= 0xB) {
      unsigned int v106 = *(_DWORD *)v105 + 11;
    }
    unint64_t v107 = (unint64_t)&a1[v439 + 7] & 0xFFFFFFFFFFFFFFF8;
    switch(v106)
    {
      case 0u:
        long long v108 = *(_OWORD *)v105;
        long long v109 = *(_OWORD *)(v105 + 16);
        long long v110 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v110;
        *(_OWORD *)unint64_t v107 = v108;
        *(_OWORD *)(v107 + 16) = v109;
        long long v111 = *(_OWORD *)(v105 + 64);
        long long v112 = *(_OWORD *)(v105 + 80);
        long long v113 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v113;
        *(_OWORD *)(v107 + 64) = v111;
        *(_OWORD *)(v107 + 80) = v112;
        long long v114 = *(_OWORD *)(v105 + 128);
        long long v115 = *(_OWORD *)(v105 + 144);
        long long v116 = *(_OWORD *)(v105 + 176);
        *(_OWORD *)(v107 + 160) = *(_OWORD *)(v105 + 160);
        *(_OWORD *)(v107 + 176) = v116;
        *(_OWORD *)(v107 + 128) = v114;
        *(_OWORD *)(v107 + 144) = v115;
        long long v117 = *(_OWORD *)(v105 + 192);
        long long v118 = *(_OWORD *)(v105 + 208);
        long long v119 = *(_OWORD *)(v105 + 224);
        *(void *)(v107 + 240) = *(void *)(v105 + 240);
        *(_OWORD *)(v107 + 208) = v118;
        *(_OWORD *)(v107 + 224) = v119;
        *(_OWORD *)(v107 + 192) = v117;
        *(unsigned char *)(v107 + 248) = 0;
        goto LABEL_240;
      case 1u:
        long long v147 = *(_OWORD *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(_OWORD *)(v107 + 16) = v147;
        long long v148 = *(_OWORD *)(v105 + 32);
        long long v149 = *(_OWORD *)(v105 + 48);
        long long v150 = *(_OWORD *)(v105 + 80);
        *(_OWORD *)(v107 + 64) = *(_OWORD *)(v105 + 64);
        *(_OWORD *)(v107 + 80) = v150;
        *(_OWORD *)(v107 + 32) = v148;
        *(_OWORD *)(v107 + 48) = v149;
        long long v151 = *(_OWORD *)(v105 + 96);
        long long v152 = *(_OWORD *)(v105 + 112);
        long long v153 = *(_OWORD *)(v105 + 144);
        *(_OWORD *)(v107 + 128) = *(_OWORD *)(v105 + 128);
        *(_OWORD *)(v107 + 144) = v153;
        *(_OWORD *)(v107 + 96) = v151;
        *(_OWORD *)(v107 + 112) = v152;
        long long v154 = *(_OWORD *)(v105 + 160);
        long long v155 = *(_OWORD *)(v105 + 176);
        long long v156 = *(_OWORD *)(v105 + 208);
        *(_OWORD *)(v107 + 192) = *(_OWORD *)(v105 + 192);
        *(_OWORD *)(v107 + 208) = v156;
        *(_OWORD *)(v107 + 160) = v154;
        *(_OWORD *)(v107 + 176) = v155;
        char v157 = 1;
        *(unsigned char *)(v107 + 248) = 1;
        break;
      case 2u:
        long long v158 = *(_OWORD *)v105;
        long long v159 = *(_OWORD *)(v105 + 16);
        long long v160 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v160;
        *(_OWORD *)unint64_t v107 = v158;
        *(_OWORD *)(v107 + 16) = v159;
        *(unsigned char *)(v107 + 248) = 2;
        goto LABEL_240;
      case 3u:
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(unsigned char *)(v107 + 248) = 3;
        goto LABEL_240;
      case 4u:
        long long v161 = *(_OWORD *)v105;
        *(void *)(v107 + 16) = *(void *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = v161;
        *(unsigned char *)(v107 + 248) = 4;
        goto LABEL_240;
      case 5u:
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(unsigned char *)(v107 + 248) = 5;
        goto LABEL_240;
      case 6u:
        long long v162 = *(_OWORD *)v105;
        long long v163 = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 16) = *(_OWORD *)(v105 + 16);
        *(_OWORD *)(v107 + 32) = v163;
        *(_OWORD *)unint64_t v107 = v162;
        long long v164 = *(_OWORD *)(v105 + 48);
        long long v165 = *(_OWORD *)(v105 + 64);
        long long v166 = *(_OWORD *)(v105 + 80);
        *(void *)(v107 + 96) = *(void *)(v105 + 96);
        *(_OWORD *)(v107 + 64) = v165;
        *(_OWORD *)(v107 + 80) = v166;
        *(_OWORD *)(v107 + 48) = v164;
        *(unsigned char *)(v107 + 248) = 6;
        goto LABEL_240;
      case 7u:
        long long v167 = *(_OWORD *)(v105 + 16);
        *(_OWORD *)unint64_t v107 = *(_OWORD *)v105;
        *(_OWORD *)(v107 + 16) = v167;
        long long v168 = *(_OWORD *)(v105 + 32);
        long long v169 = *(_OWORD *)(v105 + 48);
        long long v170 = *(_OWORD *)(v105 + 80);
        *(_OWORD *)(v107 + 64) = *(_OWORD *)(v105 + 64);
        *(_OWORD *)(v107 + 80) = v170;
        *(_OWORD *)(v107 + 32) = v168;
        *(_OWORD *)(v107 + 48) = v169;
        long long v171 = *(_OWORD *)(v105 + 96);
        long long v172 = *(_OWORD *)(v105 + 112);
        long long v173 = *(_OWORD *)(v105 + 144);
        *(_OWORD *)(v107 + 128) = *(_OWORD *)(v105 + 128);
        *(_OWORD *)(v107 + 144) = v173;
        *(_OWORD *)(v107 + 96) = v171;
        *(_OWORD *)(v107 + 112) = v172;
        *(unsigned char *)(v107 + 248) = 7;
        goto LABEL_240;
      case 8u:
        long long v174 = *(_OWORD *)v105;
        long long v175 = *(_OWORD *)(v105 + 16);
        long long v176 = *(_OWORD *)(v105 + 32);
        *(void *)(v107 + 48) = *(void *)(v105 + 48);
        *(_OWORD *)(v107 + 16) = v175;
        *(_OWORD *)(v107 + 32) = v176;
        *(_OWORD *)unint64_t v107 = v174;
        *(unsigned char *)(v107 + 248) = 8;
        goto LABEL_240;
      case 9u:
        long long v177 = *(_OWORD *)v105;
        long long v178 = *(_OWORD *)(v105 + 16);
        long long v179 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v179;
        *(_OWORD *)unint64_t v107 = v177;
        *(_OWORD *)(v107 + 16) = v178;
        *(unsigned char *)(v107 + 248) = 9;
        goto LABEL_240;
      case 0xAu:
        long long v180 = *(_OWORD *)v105;
        long long v181 = *(_OWORD *)(v105 + 16);
        long long v182 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v182;
        *(_OWORD *)unint64_t v107 = v180;
        *(_OWORD *)(v107 + 16) = v181;
        long long v183 = *(_OWORD *)(v105 + 64);
        long long v184 = *(_OWORD *)(v105 + 80);
        long long v185 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v185;
        *(_OWORD *)(v107 + 64) = v183;
        *(_OWORD *)(v107 + 80) = v184;
        *(unsigned char *)(v107 + 248) = 10;
        goto LABEL_240;
      default:
        long long v186 = *(_OWORD *)v105;
        long long v187 = *(_OWORD *)(v105 + 16);
        long long v188 = *(_OWORD *)(v105 + 48);
        *(_OWORD *)(v107 + 32) = *(_OWORD *)(v105 + 32);
        *(_OWORD *)(v107 + 48) = v188;
        *(_OWORD *)unint64_t v107 = v186;
        *(_OWORD *)(v107 + 16) = v187;
        long long v189 = *(_OWORD *)(v105 + 64);
        long long v190 = *(_OWORD *)(v105 + 80);
        long long v191 = *(_OWORD *)(v105 + 112);
        *(_OWORD *)(v107 + 96) = *(_OWORD *)(v105 + 96);
        *(_OWORD *)(v107 + 112) = v191;
        *(_OWORD *)(v107 + 64) = v189;
        *(_OWORD *)(v107 + 80) = v190;
        long long v192 = *(_OWORD *)(v105 + 128);
        long long v193 = *(_OWORD *)(v105 + 144);
        long long v194 = *(_OWORD *)(v105 + 176);
        *(_OWORD *)(v107 + 160) = *(_OWORD *)(v105 + 160);
        *(_OWORD *)(v107 + 176) = v194;
        *(_OWORD *)(v107 + 128) = v192;
        *(_OWORD *)(v107 + 144) = v193;
        long long v195 = *(_OWORD *)(v105 + 192);
        long long v196 = *(_OWORD *)(v105 + 208);
        long long v197 = *(_OWORD *)(v105 + 224);
        *(_OWORD *)(v107 + 233) = *(_OWORD *)(v105 + 233);
        *(_OWORD *)(v107 + 208) = v196;
        *(_OWORD *)(v107 + 224) = v197;
        *(_OWORD *)(v107 + 192) = v195;
LABEL_240:
        char v157 = 1;
        break;
    }
  }
  else
  {
    long long v120 = (_OWORD *)((unint64_t)&a1[v424] & v423);
    long long v121 = (unsigned __int8 *)((unint64_t)&a2[v424] & v423);
    size_t v122 = v438;
    unsigned int v123 = v121[v438];
    unsigned int v124 = v123 - 15;
    if (v123 < 0xF)
    {
      uint64_t v126 = v416;
      uint64_t v127 = v437;
    }
    else
    {
      if (v438 <= 3) {
        uint64_t v125 = v438;
      }
      else {
        uint64_t v125 = 4;
      }
      uint64_t v126 = v416;
      uint64_t v127 = v437;
      switch(v125)
      {
        case 1:
          int v128 = *v121;
          if (v438 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 2:
          int v128 = *(unsigned __int16 *)v121;
          if (v438 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 3:
          int v128 = *(unsigned __int16 *)((unint64_t)&a2[v424] & v423) | (*(unsigned __int8 *)(((unint64_t)&a2[v424] & v423)
                                                                                                 + 2) << 16);
          if (v438 < 4) {
            goto LABEL_221;
          }
          goto LABEL_225;
        case 4:
          int v128 = *(_DWORD *)v121;
          if (v438 < 4) {
LABEL_221:
          }
            unsigned int v123 = (v128 | (v124 << (8 * v438))) + 15;
          else {
LABEL_225:
          }
            unsigned int v123 = v128 + 15;
          break;
        default:
          break;
      }
    }
    switch(v123)
    {
      case 1u:
        unsigned int v198 = v121[v392];
        unsigned int v199 = v198 - 3;
        if (v198 < 3)
        {
          uint64_t v202 = v434;
          uint64_t v201 = v436;
        }
        else
        {
          if (v392 <= 3) {
            uint64_t v200 = v392;
          }
          else {
            uint64_t v200 = 4;
          }
          uint64_t v201 = v436;
          uint64_t v202 = v434;
          switch(v200)
          {
            case 1:
              int v203 = *v121;
              goto LABEL_421;
            case 2:
              int v203 = *(unsigned __int16 *)v121;
              goto LABEL_421;
            case 3:
              int v203 = *(unsigned __int16 *)v121 | (*(unsigned __int8 *)(((unint64_t)&a2[v424] & v423) + 2) << 16);
              goto LABEL_421;
            case 4:
              int v203 = *(_DWORD *)v121;
LABEL_421:
              if (v392 < 4) {
                unsigned int v198 = (v203 | (v199 << (8 * v392))) + 3;
              }
              else {
                unsigned int v198 = v203 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v198 == 2)
        {
          uint64_t v369 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v201 + 48);
          if (v369((unint64_t)&a2[v424] & v423, 1, v431))
          {
            size_t v370 = v432;
            memcpy(v120, v121, v432);
          }
          else
          {
            (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v201 + 32))(v120, v121, v431);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v201 + 56))(v120, 0, 1, v431);
            size_t v370 = v432;
          }
          uint64_t v371 = (void *)(((unint64_t)v120 + v441 + v370) & v435);
          uint64_t v372 = (const void *)((unint64_t)&v121[v441 + v370] & v435);
          unsigned int v373 = v369((unint64_t)v372, 1, v431);
          uint64_t v297 = v433;
          if (v373)
          {
            memcpy(v371, v372, v370);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v201 + 32))(v371, v372, v431);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v201 + 56))(v371, 0, 1, v431);
          }
          uint64_t v202 = v434;
          size_t v122 = v438;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(((unint64_t)v371 + v376) & v375, ((unint64_t)v372 + v376) & v375, v378);
          char v368 = 2;
          uint64_t v298 = v399;
          long long v120 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        }
        else
        {
          if (v198 == 1)
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v201 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v431);
            size_t v367 = v392;
            char v368 = 1;
            uint64_t v297 = v433;
            uint64_t v298 = v399;
            goto LABEL_436;
          }
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v421);
          char v368 = 0;
          uint64_t v297 = v433;
          uint64_t v298 = v399;
        }
        size_t v367 = v392;
LABEL_436:
        *((unsigned char *)v120 + v367) = v368;
        char v296 = 1;
LABEL_409:
        *((unsigned char *)v120 + v122) = v296;
        size_t v362 = (void *)(((unint64_t)v120 + v298) & v426);
        uint64_t v363 = (const void *)((unint64_t)&v121[v298] & v426);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v429 + 48))(v363, 1, v202))
        {
          memcpy(v362, v363, v395);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v429 + 32))(v362, v363, v202);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v429 + 56))(v362, 0, 1, v202);
        }
        uint64_t v364 = (void *)(((unint64_t)v362 + v428) & v427);
        uint64_t v365 = (const void *)(((unint64_t)v363 + v428) & v427);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v297 + 48))(v365, 1, v127))
        {
          memcpy(v364, v365, v396);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v297 + 32))(v364, v365, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v297 + 56))(v364, 0, 1, v127);
        }
        char v157 = 0;
        *(void *)(((unint64_t)v364 + v430) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v365 + v430) & 0xFFFFFFFFFFFFFFF8);
        break;
      case 2u:
        long long v204 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        *long long v120 = *(_OWORD *)v121;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v204;
        long long v205 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x20);
        long long v206 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        long long v207 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x50);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x40) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x40);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x50) = v207;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = v205;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v206;
        long long v208 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x60);
        long long v209 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x70);
        long long v210 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x90);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x80) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x80);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x90) = v210;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x60) = v208;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x70) = v209;
        long long v211 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xA0);
        long long v212 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xB0);
        long long v213 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xD0);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xC0) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0xC0);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xD0) = v213;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xA0) = v211;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xB0) = v212;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v214 = ((unint64_t)v120 + v386) & v401;
        unint64_t v215 = (unint64_t)&v121[v386] & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v214, v215, v421);
        uint64_t v216 = v215 + v389;
        *(unsigned char *)(v214 + v389) = *(unsigned char *)(v215 + v389);
        size_t v217 = (void *)((v441 + 1 + v214 + v389) & v435);
        size_t v218 = (const void *)((v441 + 1 + v216) & v435);
        uint64_t v219 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v219(v218, 1, v431))
        {
          size_t v220 = v432;
          memcpy(v217, v218, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v217, v218, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v217, 0, 1, v431);
          size_t v220 = v432;
        }
        uint64_t v301 = (void *)(((unint64_t)v217 + v19) & v435);
        uint64_t v302 = (const void *)(((unint64_t)v218 + v19) & v435);
        if (v219(v302, 1, v431))
        {
          memcpy(v301, v302, v220);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v301, v302, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v301, 0, 1, v431);
        }
        uint64_t v297 = v433;
        unint64_t v321 = (void *)(((unint64_t)v301 + v19) & v435);
        size_t v322 = (const void *)(((unint64_t)v302 + v19) & v435);
        if (v219(v322, 1, v431))
        {
          memcpy(v321, v322, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v321, v322, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v321, 0, 1, v431);
        }
        uint64_t v202 = v434;
        unint64_t v337 = (void *)(((unint64_t)v321 + v420) & v418);
        unint64_t v338 = (const void *)(((unint64_t)v322 + v420) & v418);
        uint64_t v339 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v398 + 48);
        if (v339(v338, 1, v397))
        {
          memcpy(v337, v338, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v398 + 32))(v337, v338, v397);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v398 + 56))(v337, 0, 1, v397);
        }
        unint64_t v342 = (void *)(((unint64_t)v337 + v390) & v418);
        unint64_t v343 = (const void *)(((unint64_t)v338 + v390) & v418);
        if (v339(v343, 1, v397))
        {
          memcpy(v342, v343, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v398 + 32))(v342, v343, v397);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v398 + 56))(v342, 0, 1, v397);
        }
        size_t v122 = v438;
        uint64_t v346 = (void *)(((unint64_t)v342 + v391) & v387);
        size_t v347 = (const void *)(((unint64_t)v343 + v391) & v387);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v416 + 48))(v347, 1, v394))
        {
          memcpy(v346, v347, v374);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v416 + 32))(v346, v347, v394);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v416 + 56))(v346, 0, 1, v394);
        }
        char v296 = 2;
        uint64_t v127 = v437;
        uint64_t v298 = v399;
        goto LABEL_408;
      case 3u:
        long long v221 = *(_OWORD *)v121;
        long long v222 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        long long v223 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v223;
        *long long v120 = v221;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v222;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        uint64_t v224 = (void *)(((unint64_t)v120 + v385) & v435);
        unint64_t v225 = (const void *)((unint64_t)&v121[v385] & v435);
        size_t v226 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v226(v225, 1, v431))
        {
          size_t v227 = v432;
          memcpy(v224, v225, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v224, v225, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v224, 0, 1, v431);
          size_t v227 = v432;
        }
        uint64_t v303 = (void *)(((unint64_t)v224 + v19) & v435);
        uint64_t v304 = (const void *)(((unint64_t)v225 + v19) & v435);
        if (v226(v304, 1, v431))
        {
          memcpy(v303, v304, v227);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v303, v304, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v303, 0, 1, v431);
        }
        uint64_t v127 = v437;
        size_t v122 = v438;
        uint64_t v297 = v433;
        uint64_t v202 = v434;
        size_t v323 = (void *)(((unint64_t)v303 + v420) & v418);
        uint64_t v324 = (const void *)(((unint64_t)v304 + v420) & v418);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v398 + 48))(v324, 1, v397))
        {
          memcpy(v323, v324, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v398 + 32))(v323, v324, v397);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v398 + 56))(v323, 0, 1, v397);
        }
        char v296 = 3;
        uint64_t v298 = v399;
        goto LABEL_408;
      case 4u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v421);
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        long long v228 = (void *)(((unint64_t)v120 + v419) & v435);
        long long v229 = (const void *)((unint64_t)&v121[v419] & v435);
        long long v230 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v230(v229, 1, v431))
        {
          size_t v231 = v432;
          memcpy(v228, v229, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v228, v229, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v228, 0, 1, v431);
          size_t v231 = v432;
        }
        uint64_t v305 = (void *)(((unint64_t)v228 + v19) & v435);
        unint64_t v306 = (const void *)(((unint64_t)v229 + v19) & v435);
        if (v230(v306, 1, v431))
        {
          memcpy(v305, v306, v231);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v305, v306, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v305, 0, 1, v431);
        }
        uint64_t v297 = v433;
        uint64_t v325 = (void *)(((unint64_t)v305 + v19) & v435);
        uint64_t v326 = (const void *)(((unint64_t)v306 + v19) & v435);
        if (v230(v326, 1, v431))
        {
          memcpy(v325, v326, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v325, v326, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v325, 0, 1, v431);
        }
        char v296 = 4;
        goto LABEL_406;
      case 5u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v421);
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        uint64_t v269 = (void *)(((unint64_t)v120 + v419) & v435);
        uint64_t v270 = (const void *)((unint64_t)&v121[v419] & v435);
        size_t v271 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v271(v270, 1, v431))
        {
          size_t v272 = v432;
          memcpy(v269, v270, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v269, v270, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v269, 0, 1, v431);
          size_t v272 = v432;
        }
        uint64_t v297 = v433;
        *((unsigned char *)v269 + v272) = *((unsigned char *)v270 + v272);
        unint64_t v348 = ((unint64_t)v269 + v272) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v349 = ((unint64_t)v270 + v272) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v348 + 8) = *(_OWORD *)(v349 + 8);
        size_t v350 = (void *)((v393 + v348) & v435);
        size_t v351 = (const void *)((v393 + v349) & v435);
        if (v271(v351, 1, v431))
        {
          memcpy(v350, v351, v272);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v350, v351, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v350, 0, 1, v431);
        }
        char v296 = 5;
        goto LABEL_407;
      case 6u:
        long long v273 = *(_OWORD *)v121;
        *(void *)(((unint64_t)&a1[v424] & v423) + 0x10) = *(void *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x10);
        *long long v120 = v273;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v274 = ((unint64_t)v120 + v381) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v274, (unint64_t)&v121[v381] & v401, v421);
        uint64_t v275 = (void *)((v419 + v274) & v435);
        uint64_t v276 = (const void *)((v419 + ((unint64_t)&v121[v381] & v401)) & v435);
        long long v277 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v277(v276, 1, v431))
        {
          memcpy(v275, v276, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v275, v276, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v275, 0, 1, v431);
        }
        uint64_t v297 = v433;
        size_t v352 = (void *)(((unint64_t)v275 + v19) & v435);
        uint64_t v353 = (const void *)(((unint64_t)v276 + v19) & v435);
        if (v277(v353, 1, v431))
        {
          memcpy(v352, v353, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v352, v353, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v352, 0, 1, v431);
        }
        char v296 = 6;
        goto LABEL_406;
      case 7u:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v421);
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v232 = (void *)(((unint64_t)v120 + v419) & v435);
        unint64_t v233 = (const void *)((unint64_t)&v121[v419] & v435);
        size_t v234 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v234(v233, 1, v431))
        {
          size_t v235 = v432;
          memcpy(v232, v233, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v232, v233, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v232, 0, 1, v431);
          size_t v235 = v432;
        }
        *((unsigned char *)v232 + v235) = *((unsigned char *)v233 + v235);
        unint64_t v307 = ((unint64_t)v232 + v235) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v308 = ((unint64_t)v233 + v235) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)(v307 + 8) = *(_OWORD *)(v308 + 8);
        uint64_t v309 = (void *)((v393 + v307) & v435);
        unsigned int v310 = (const void *)((v393 + v308) & v435);
        unsigned int v311 = v234(v310, 1, v431);
        uint64_t v297 = v433;
        if (v311)
        {
          memcpy(v309, v310, v235);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v309, v310, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v309, 0, 1, v431);
        }
        char v296 = 7;
        goto LABEL_407;
      case 8u:
        long long v278 = *(_OWORD *)v121;
        long long v279 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x10);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = v279;
        *long long v120 = v278;
        long long v280 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        long long v281 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x40);
        long long v282 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x50);
        *(void *)(((unint64_t)&a1[v424] & v423) + 0x60) = *(void *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x40) = v281;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x50) = v282;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v280;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v283 = ((unint64_t)v120 + v380) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v283, (unint64_t)&v121[v380] & v401, v421);
        unint64_t v284 = (void *)((v419 + v283) & v435);
        uint64_t v285 = (const void *)((v419 + ((unint64_t)&v121[v380] & v401)) & v435);
        size_t v286 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v286(v285, 1, v431))
        {
          size_t v287 = v432;
          memcpy(v284, v285, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v284, v285, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v284, 0, 1, v431);
          size_t v287 = v432;
        }
        uint64_t v354 = (void *)(((unint64_t)v284 + v19) & v435);
        uint64_t v355 = (const void *)(((unint64_t)v285 + v19) & v435);
        if (v286(v355, 1, v431))
        {
          memcpy(v354, v355, v287);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v354, v355, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v354, 0, 1, v431);
        }
        uint64_t v297 = v433;
        uint64_t v358 = (void *)(((unint64_t)v354 + v19) & v435);
        uint64_t v359 = (const void *)(((unint64_t)v355 + v19) & v435);
        if (v286(v359, 1, v431))
        {
          memcpy(v358, v359, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v358, v359, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v358, 0, 1, v431);
        }
        char v296 = 8;
        goto LABEL_406;
      case 9u:
        long long v236 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        *long long v120 = *(_OWORD *)v121;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v236;
        long long v237 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x20);
        long long v238 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        long long v239 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x50);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x40) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x40);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x50) = v239;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = v237;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v238;
        long long v240 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x60);
        long long v241 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x70);
        long long v242 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x90);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x80) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x80);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x90) = v242;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x60) = v240;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x70) = v241;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v243 = ((unint64_t)v120 + v384) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v243, (unint64_t)&v121[v384] & v401, v421);
        uint64_t v244 = (void *)((v419 + v243) & v435);
        uint64_t v245 = (const void *)((v419 + ((unint64_t)&v121[v384] & v401)) & v435);
        uint64_t v246 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v246(v245, 1, v431))
        {
          size_t v247 = v432;
          memcpy(v244, v245, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v244, v245, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v244, 0, 1, v431);
          size_t v247 = v432;
        }
        uint64_t v312 = (void *)(((unint64_t)v244 + v19) & v435);
        size_t v313 = (const void *)(((unint64_t)v245 + v19) & v435);
        if (v246(v313, 1, v431))
        {
          memcpy(v312, v313, v247);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v312, v313, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v312, 0, 1, v431);
        }
        uint64_t v297 = v433;
        uint64_t v327 = v397;
        uint64_t v328 = (void *)(((unint64_t)v312 + v19) & v435);
        uint64_t v329 = (const void *)(((unint64_t)v313 + v19) & v435);
        if (v246(v329, 1, v431))
        {
          memcpy(v328, v329, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v328, v329, v431);
          uint64_t v327 = v397;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v328, 0, 1, v431);
        }
        unint64_t v340 = (void *)(((unint64_t)v328 + v19) & v435);
        unint64_t v341 = (const void *)(((unint64_t)v329 + v19) & v435);
        if (v246(v341, 1, v431))
        {
          memcpy(v340, v341, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v340, v341, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v340, 0, 1, v431);
        }
        uint64_t v127 = v437;
        size_t v122 = v438;
        uint64_t v202 = v434;
        unint64_t v344 = (void *)(((unint64_t)v340 + v420) & v418);
        size_t v345 = (const void *)(((unint64_t)v341 + v420) & v418);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v398 + 48))(v345, 1, v327))
        {
          memcpy(v344, v345, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v398 + 32))(v344, v345, v327);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v398 + 56))(v344, 0, 1, v327);
        }
        char v296 = 9;
        uint64_t v298 = v399;
        goto LABEL_408;
      case 0xAu:
        long long v288 = *(_OWORD *)v121;
        long long v289 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        long long v290 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x20);
        *(void *)(((unint64_t)&a1[v424] & v423) + 0x30) = *(void *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v289;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = v290;
        *long long v120 = v288;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v291 = ((unint64_t)v120 + v379) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v291, (unint64_t)&v121[v379] & v401, v421);
        uint64_t v292 = (void *)((v419 + v291) & v435);
        uint64_t v293 = (const void *)((v419 + ((unint64_t)&v121[v379] & v401)) & v435);
        size_t v294 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v294(v293, 1, v431))
        {
          size_t v295 = v432;
          memcpy(v292, v293, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v292, v293, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v292, 0, 1, v431);
          size_t v295 = v432;
        }
        uint64_t v356 = (void *)(((unint64_t)v292 + v19) & v435);
        uint64_t v357 = (const void *)(((unint64_t)v293 + v19) & v435);
        if (v294(v357, 1, v431))
        {
          memcpy(v356, v357, v295);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v356, v357, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v356, 0, 1, v431);
        }
        uint64_t v297 = v433;
        size_t v360 = (void *)(((unint64_t)v356 + v19) & v435);
        size_t v361 = (const void *)(((unint64_t)v357 + v19) & v435);
        if (v294(v361, 1, v431))
        {
          memcpy(v360, v361, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v360, v361, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v360, 0, 1, v431);
        }
        char v296 = 10;
        goto LABEL_406;
      case 0xBu:
        long long v248 = *(_OWORD *)v121;
        long long v249 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        long long v250 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v250;
        *long long v120 = v248;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v249;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v251 = ((unint64_t)v120 + v383) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v251, (unint64_t)&v121[v383] & v401, v421);
        uint64_t v252 = (void *)((v419 + v251) & v435);
        size_t v253 = (const void *)((v419 + ((unint64_t)&v121[v383] & v401)) & v435);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48))(v253, 1, v431))
        {
          size_t v254 = v432;
          memcpy(v252, v253, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v252, v253, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v252, 0, 1, v431);
          size_t v254 = v432;
        }
        *((unsigned char *)v252 + v254) = *((unsigned char *)v253 + v254);
        size_t v314 = ((v415 + ((v420 + ((v19 + (((v414 | v441) + v254) & v435)) & v435)) & v418)) & v418) + __n;
        if (v412 > v314) {
          size_t v314 = v412;
        }
        if (v410 > v314) {
          size_t v314 = v410;
        }
        if (v409 > v314) {
          size_t v314 = v409;
        }
        if (v408 > v314) {
          size_t v314 = v408;
        }
        if (v33 > v314) {
          size_t v314 = v33;
        }
        if (v407 > v314) {
          size_t v314 = v407;
        }
        if (v33 > v314) {
          size_t v314 = v33;
        }
        if (v406 > v314) {
          size_t v314 = v406;
        }
        if (v405 > v314) {
          size_t v314 = v405;
        }
        if (v404 > v314) {
          size_t v314 = v404;
        }
        if (v403 > v314) {
          size_t v314 = v403;
        }
        if (v402 > v314) {
          size_t v314 = v402;
        }
        if (v413 > v314) {
          size_t v314 = v413;
        }
        if (v411 <= v314) {
          size_t v122 = v314;
        }
        else {
          size_t v122 = v411;
        }
        char v296 = 11;
        uint64_t v297 = v433;
        uint64_t v202 = v434;
        uint64_t v298 = v399;
        goto LABEL_408;
      case 0xCu:
        long long v255 = *(_OWORD *)v121;
        long long v256 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        long long v257 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v257;
        *long long v120 = v255;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v256;
        long long v258 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x40);
        long long v259 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x50);
        long long v260 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x70);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x60) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x70) = v260;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x40) = v258;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x50) = v259;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v261 = ((unint64_t)v120 + v382) & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v261, (unint64_t)&v121[v382] & v401, v421);
        uint64_t v262 = (void *)((v419 + v261) & v435);
        uint64_t v263 = (const void *)((v419 + ((unint64_t)&v121[v382] & v401)) & v435);
        size_t v264 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v264(v263, 1, v431))
        {
          size_t v265 = v432;
          memcpy(v262, v263, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v262, v263, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v262, 0, 1, v431);
          size_t v265 = v432;
        }
        uint64_t v315 = (void *)(((unint64_t)v262 + v19) & v435);
        uint64_t v316 = (const void *)(((unint64_t)v263 + v19) & v435);
        if (v264(v316, 1, v431))
        {
          memcpy(v315, v316, v265);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v315, v316, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v315, 0, 1, v431);
        }
        uint64_t v297 = v433;
        uint64_t v330 = (void *)(((unint64_t)v315 + v19) & v435);
        uint64_t v331 = (const void *)(((unint64_t)v316 + v19) & v435);
        if (v264(v331, 1, v431))
        {
          memcpy(v330, v331, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v330, v331, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v330, 0, 1, v431);
        }
        char v296 = 12;
        goto LABEL_406;
      case 0xDu:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v394);
        char v296 = 13;
        uint64_t v297 = v433;
        uint64_t v202 = v434;
        uint64_t v298 = v399;
        goto LABEL_409;
      case 0xEu:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))((unint64_t)&a1[v424] & v423, (unint64_t)&a2[v424] & v423, v421);
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        size_t v266 = (void *)(((unint64_t)v120 + v419) & v435);
        uint64_t v267 = (const void *)((unint64_t)&v121[v419] & v435);
        uint64_t v268 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v268(v267, 1, v431))
        {
          memcpy(v266, v267, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v266, v267, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v266, 0, 1, v431);
        }
        char v317 = (void *)(((unint64_t)v266 + v19) & v435);
        size_t v318 = (const void *)(((unint64_t)v267 + v19) & v435);
        uint64_t v297 = v433;
        if (v268(v318, 1, v431))
        {
          memcpy(v317, v318, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v317, v318, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v317, 0, 1, v431);
        }
        char v296 = 14;
LABEL_406:
        uint64_t v127 = v437;
LABEL_407:
        uint64_t v202 = v434;
        uint64_t v298 = v399;
        size_t v122 = v438;
        goto LABEL_408;
      default:
        long long v129 = *(_OWORD *)v121;
        long long v130 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x10);
        long long v131 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x20) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x20);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x30) = v131;
        *long long v120 = v129;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x10) = v130;
        long long v132 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x40);
        long long v133 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x50);
        long long v134 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x70);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x60) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0x60);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x70) = v134;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x40) = v132;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x50) = v133;
        long long v135 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x80);
        long long v136 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0x90);
        long long v137 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xB0);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xA0) = *(_OWORD *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0xA0);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xB0) = v137;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x80) = v135;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0x90) = v136;
        long long v138 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xC0);
        long long v139 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xD0);
        long long v140 = *(_OWORD *)(((unint64_t)&a2[v424] & v423) + 0xE0);
        *(void *)(((unint64_t)&a1[v424] & v423) + 0xF0) = *(void *)(((unint64_t)&a2[v424] & v423)
                                                                             + 0xF0);
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xD0) = v139;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xE0) = v140;
        *(_OWORD *)(((unint64_t)&a1[v424] & v423) + 0xC0) = v138;
        uint64_t v446 = (_OWORD *)((unint64_t)&a1[v424] & v423);
        unint64_t v141 = ((unint64_t)v120 + v388) & v401;
        unint64_t v142 = (unint64_t)&v121[v388] & v401;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v141, v142, v421);
        *(unsigned char *)(v141 + v389) = *(unsigned char *)(v142 + v389);
        long long v143 = (void *)((v441 + 1 + v141 + v389) & v435);
        long long v144 = (const void *)((v441 + 1 + v142 + v389) & v435);
        size_t v145 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v436 + 48);
        if (v145(v144, 1, v431))
        {
          size_t v146 = v432;
          memcpy(v143, v144, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v143, v144, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v143, 0, 1, v431);
          size_t v146 = v432;
        }
        unint64_t v299 = (void *)(((unint64_t)v143 + v19) & v435);
        unint64_t v300 = (const void *)(((unint64_t)v144 + v19) & v435);
        if (v145(v300, 1, v431))
        {
          memcpy(v299, v300, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v299, v300, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v299, 0, 1, v431);
        }
        uint64_t v297 = v433;
        size_t v319 = (void *)(((unint64_t)v299 + v19) & v435);
        uint64_t v320 = (const void *)(((unint64_t)v300 + v19) & v435);
        if (v145(v320, 1, v431))
        {
          memcpy(v319, v320, v432);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v436 + 32))(v319, v320, v431);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v436 + 56))(v319, 0, 1, v431);
        }
        unint64_t v332 = ((unint64_t)v319 + v420) & v418;
        unint64_t v333 = ((unint64_t)v320 + v420) & v418;
        unint64_t v334 = *(void (**)(unint64_t, unint64_t, uint64_t))(v398 + 32);
        v334(v332, v333, v397);
        size_t v335 = (void *)((v415 + v332) & v418);
        unint64_t v336 = (const void *)((v415 + v333) & v418);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v398 + 48))(v336, 1, v397))
        {
          memcpy(v335, v336, __n);
        }
        else
        {
          v334((unint64_t)v335, (unint64_t)v336, v397);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v398 + 56))(v335, 0, 1, v397);
        }
        char v296 = 0;
        uint64_t v202 = v434;
        uint64_t v298 = v399;
        uint64_t v127 = v437;
        size_t v122 = v438;
LABEL_408:
        long long v120 = v446;
        goto LABEL_409;
    }
  }
  a1[v443] = v157;
  return a1;
}

uint64_t sub_24EDAABF0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v65 = *(void *)(*(void *)(a3[5] - 8) + 64);
  uint64_t v4 = *(void *)(a3[3] - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(sub_24EE55880() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v66 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v9 = *(void *)(sub_24EE55960() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a3[7] - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v5 | v7 | v8 | v10 | v12 | 7;
  uint64_t v67 = (v13 + v65) & ~v13;
  unint64_t v14 = *(void *)(v4 + 64);
  uint64_t v15 = v14 + v7;
  uint64_t v16 = v14 + v7 + 1;
  uint64_t v17 = (v16 + ((v5 + 248) & ~v5)) & ~v7;
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= v14) {
    unint64_t v19 = v14;
  }
  else {
    unint64_t v19 = *(void *)(v6 + 64);
  }
  uint64_t v20 = *(void *)(a3[4] - 8);
  uint64_t v21 = *(void *)(a3[6] - 8);
  uint64_t v22 = *(void *)(v66 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    unint64_t v23 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v23 = v18 + 1;
  }
  uint64_t v24 = *(void *)(v9 + 64);
  uint64_t v25 = (v16 + ((v5 + 224) & ~v5)) & ~v7;
  int v26 = *(_DWORD *)(v11 + 84);
  unint64_t v27 = *(void *)(v11 + 64);
  uint64_t v28 = v23 + v7;
  uint64_t v29 = v23 + v8;
  if (*(_DWORD *)(v66 + 84)) {
    uint64_t v30 = *(void *)(v66 + 64);
  }
  else {
    uint64_t v30 = v22 + 1;
  }
  unint64_t v31 = ((v23 + v10 + (v28 & ~v7)) & ~v10) + v24;
  if (v31 <= v19) {
    unint64_t v31 = v19;
  }
  if (v31 + 1 > ((v22 + v8 + ((v23 + v8 + ((v23 + v7 + ((v23 + v7 + v17) & ~v7)) & ~v7)) & ~v8)) & ~v8) + v30) {
    unint64_t v32 = v31 + 1;
  }
  else {
    unint64_t v32 = ((v22 + v8 + ((v23 + v8 + ((v23 + v7 + ((v23 + v7 + v17) & ~v7)) & ~v7)) & ~v8)) & ~v8) + v30;
  }
  BOOL v33 = v26 == 0;
  uint64_t v34 = v15 & ~v7;
  uint64_t v35 = (v15 + ((v5 + 24) & ~v5)) & ~v7;
  uint64_t v36 = (v15 + ((v5 + 104) & ~v5)) & ~v7;
  uint64_t v37 = (v15 + ((v5 + 160) & ~v5)) & ~v7;
  uint64_t v38 = (v15 + ((v5 + 56) & ~v5)) & ~v7;
  uint64_t v39 = (v15 + ((v5 + 64) & ~v5)) & ~v7;
  uint64_t v40 = (v15 + ((v5 + 128) & ~v5)) & ~v7;
  uint64_t v41 = *(unsigned __int8 *)(v20 + 80);
  int v42 = *(_DWORD *)(v20 + 84);
  uint64_t v43 = *(void *)(v20 + 64);
  if (v33) {
    unint64_t v44 = v27 + 1;
  }
  else {
    unint64_t v44 = v27;
  }
  unint64_t v45 = v44 + ((v30 + v12 + ((v30 + v8 + ((v29 + ((v28 + ((v28 + v25) & ~v7)) & ~v7)) & ~v8)) & ~v8)) & ~v12);
  if (v45 <= v32) {
    unint64_t v45 = v32;
  }
  unint64_t v46 = ((v29 + ((v28 + ((v7 + 64) & ~v7)) & ~v7)) & ~v8) + v30;
  if (v46 <= v45) {
    unint64_t v46 = v45;
  }
  unint64_t v47 = ((v23 + v34 + v7) & ~v7) + v23;
  if (((v47 + v7) & ~v7) + v23 > v46) {
    unint64_t v46 = ((v47 + v7) & ~v7) + v23;
  }
  unint64_t v48 = ((v7 + ((v23 + v34) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v23;
  if (v48 > v46) {
    unint64_t v46 = ((v7 + ((v23 + v34) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v23;
  }
  if (((v28 + v35) & ~v7) + v23 > v46) {
    unint64_t v46 = ((v28 + v35) & ~v7) + v23;
  }
  if (v48 > v46) {
    unint64_t v46 = ((v7 + ((v23 + v34) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7) + v23;
  }
  if (((v28 + ((v28 + v36) & ~v7)) & ~v7) + v23 > v46) {
    unint64_t v46 = ((v28 + ((v28 + v36) & ~v7)) & ~v7) + v23;
  }
  unint64_t v49 = ((v29 + ((v28 + ((v28 + ((v28 + v37) & ~v7)) & ~v7)) & ~v7)) & ~v8) + v30;
  if (v49 <= v46) {
    unint64_t v49 = v46;
  }
  if (((v28 + ((v28 + v38) & ~v7)) & ~v7) + v23 > v49) {
    unint64_t v49 = ((v28 + ((v28 + v38) & ~v7)) & ~v7) + v23;
  }
  if (v39 + v23 + 1 > v49) {
    unint64_t v49 = v39 + v23 + 1;
  }
  unint64_t v50 = ((v28 + ((v28 + v40) & ~v7)) & ~v7) + v23;
  if (v50 <= v49) {
    unint64_t v50 = v49;
  }
  if (v27 <= v50) {
    unint64_t v27 = v50;
  }
  if (v47 > v27) {
    unint64_t v27 = ((v23 + v34 + v7) & ~v7) + v23;
  }
  BOOL v33 = v42 == 0;
  uint64_t v51 = *(unsigned __int8 *)(v21 + 80);
  int v52 = *(_DWORD *)(v21 + 84);
  uint64_t v53 = *(void *)(v21 + 64);
  if (v33) {
    ++v43;
  }
  BOOL v33 = v52 == 0;
  unint64_t v54 = ((v65 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  uint64_t v55 = (v43 + v51 + ((v41 + v67 + v27 + 1) & ~v41)) & ~v51;
  if (v33) {
    ++v53;
  }
  unint64_t v56 = ((v53 + v55 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v54 <= v56) {
    unint64_t v54 = v56;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_69;
  }
  unint64_t v57 = v54 + 1;
  char v58 = 8 * (v54 + 1);
  if ((v54 + 1) <= 3)
  {
    unsigned int v61 = ((a2 + ~(-1 << v58) - 254) >> v58) + 1;
    if (HIWORD(v61))
    {
      int v59 = *(_DWORD *)((char *)a1 + v57);
      if (!v59) {
        goto LABEL_69;
      }
      goto LABEL_61;
    }
    if (v61 > 0xFF)
    {
      int v59 = *(unsigned __int16 *)((char *)a1 + v57);
      if (!*(unsigned __int16 *)((char *)a1 + v57)) {
        goto LABEL_69;
      }
      goto LABEL_61;
    }
    if (v61 < 2)
    {
LABEL_69:
      unsigned int v63 = *((unsigned __int8 *)a1 + v54);
      if (v63 >= 2) {
        return (v63 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v59 = *((unsigned __int8 *)a1 + v57);
  if (!*((unsigned char *)a1 + v57)) {
    goto LABEL_69;
  }
LABEL_61:
  int v62 = (v59 - 1) << v58;
  if (v57 > 3) {
    int v62 = 0;
  }
  if (v57)
  {
    if (v57 > 3) {
      LODWORD(v57) = 4;
    }
    switch((int)v57)
    {
      case 2:
        LODWORD(v57) = *a1;
        break;
      case 3:
        LODWORD(v57) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v57) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v57) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v57 | v62) + 255;
}

void sub_24EDAB25C(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v64 = *(void *)(*(void *)(a4[5] - 8) + 64);
  uint64_t v5 = *(void *)(a4[3] - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(sub_24EE55880() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v65 = *(void *)(a4[2] - 8);
  uint64_t v9 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v10 = *(void *)(sub_24EE55960() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(a4[7] - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v6 | v8 | v9 | v11 | v13 | 7;
  uint64_t v66 = (v14 + v64) & ~v14;
  unint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = v15 + v8;
  uint64_t v17 = v15 + v8 + 1;
  uint64_t v18 = (v17 + ((v6 + 248) & ~v6)) & ~v8;
  unint64_t v19 = *(void *)(v7 + 64);
  uint64_t v20 = *(void *)(a4[4] - 8);
  if (v19 <= v15) {
    unint64_t v21 = v15;
  }
  else {
    unint64_t v21 = *(void *)(v7 + 64);
  }
  uint64_t v22 = *(void *)(a4[6] - 8);
  uint64_t v23 = *(void *)(v65 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    unint64_t v24 = *(void *)(v7 + 64);
  }
  else {
    unint64_t v24 = v19 + 1;
  }
  uint64_t v25 = *(void *)(v10 + 64);
  uint64_t v26 = (v17 + ((v6 + 224) & ~v6)) & ~v8;
  int v27 = *(_DWORD *)(v12 + 84);
  unint64_t v28 = *(void *)(v12 + 64);
  uint64_t v29 = v24 + v8;
  uint64_t v30 = v24 + v9;
  if (*(_DWORD *)(v65 + 84)) {
    uint64_t v31 = *(void *)(v65 + 64);
  }
  else {
    uint64_t v31 = v23 + 1;
  }
  unint64_t v32 = ((v24 + v11 + (v29 & ~v8)) & ~v11) + v25;
  if (v32 <= v21) {
    unint64_t v32 = v21;
  }
  if (v32 + 1 > ((v23 + v9 + ((v24 + v9 + ((v24 + v8 + ((v24 + v8 + v18) & ~v8)) & ~v8)) & ~v9)) & ~v9) + v31) {
    unint64_t v33 = v32 + 1;
  }
  else {
    unint64_t v33 = ((v23 + v9 + ((v24 + v9 + ((v24 + v8 + ((v24 + v8 + v18) & ~v8)) & ~v8)) & ~v9)) & ~v9) + v31;
  }
  BOOL v34 = v27 == 0;
  uint64_t v35 = v16 & ~v8;
  uint64_t v36 = (v16 + ((v6 + 24) & ~v6)) & ~v8;
  uint64_t v37 = (v16 + ((v6 + 104) & ~v6)) & ~v8;
  uint64_t v38 = (v16 + ((v6 + 160) & ~v6)) & ~v8;
  uint64_t v39 = (v16 + ((v6 + 56) & ~v6)) & ~v8;
  uint64_t v40 = (v16 + ((v6 + 64) & ~v6)) & ~v8;
  uint64_t v41 = (v16 + ((v6 + 128) & ~v6)) & ~v8;
  uint64_t v42 = *(unsigned __int8 *)(v20 + 80);
  int v43 = *(_DWORD *)(v20 + 84);
  uint64_t v44 = *(void *)(v20 + 64);
  if (v34) {
    unint64_t v45 = v28 + 1;
  }
  else {
    unint64_t v45 = v28;
  }
  unint64_t v46 = v45 + ((v31 + v13 + ((v31 + v9 + ((v30 + ((v29 + ((v29 + v26) & ~v8)) & ~v8)) & ~v9)) & ~v9)) & ~v13);
  if (v46 <= v33) {
    unint64_t v46 = v33;
  }
  unint64_t v47 = ((v30 + ((v29 + ((v8 + 64) & ~v8)) & ~v8)) & ~v9) + v31;
  if (v47 <= v46) {
    unint64_t v47 = v46;
  }
  unint64_t v48 = ((v24 + v35 + v8) & ~v8) + v24;
  if (((v48 + v8) & ~v8) + v24 > v47) {
    unint64_t v47 = ((v48 + v8) & ~v8) + v24;
  }
  unint64_t v49 = ((v8 + ((v24 + v35) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v24;
  if (v49 > v47) {
    unint64_t v47 = ((v8 + ((v24 + v35) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v24;
  }
  if (((v29 + v36) & ~v8) + v24 > v47) {
    unint64_t v47 = ((v29 + v36) & ~v8) + v24;
  }
  if (v49 > v47) {
    unint64_t v47 = ((v8 + ((v24 + v35) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v8) + v24;
  }
  if (((v29 + ((v29 + v37) & ~v8)) & ~v8) + v24 > v47) {
    unint64_t v47 = ((v29 + ((v29 + v37) & ~v8)) & ~v8) + v24;
  }
  unint64_t v50 = ((v30 + ((v29 + ((v29 + ((v29 + v38) & ~v8)) & ~v8)) & ~v8)) & ~v9) + v31;
  if (v50 <= v47) {
    unint64_t v50 = v47;
  }
  if (((v29 + ((v29 + v39) & ~v8)) & ~v8) + v24 > v50) {
    unint64_t v50 = ((v29 + ((v29 + v39) & ~v8)) & ~v8) + v24;
  }
  if (v40 + v24 + 1 > v50) {
    unint64_t v50 = v40 + v24 + 1;
  }
  unint64_t v51 = ((v29 + ((v29 + v41) & ~v8)) & ~v8) + v24;
  if (v51 <= v50) {
    unint64_t v51 = v50;
  }
  if (v28 <= v51) {
    unint64_t v28 = v51;
  }
  if (v48 > v28) {
    unint64_t v28 = ((v24 + v35 + v8) & ~v8) + v24;
  }
  BOOL v34 = v43 == 0;
  uint64_t v52 = *(unsigned __int8 *)(v22 + 80);
  int v53 = *(_DWORD *)(v22 + 84);
  uint64_t v54 = *(void *)(v22 + 64);
  if (v34) {
    ++v44;
  }
  uint64_t v55 = (v44 + v52 + ((v42 + v66 + v28 + 1) & ~v42)) & ~v52;
  if (!v53) {
    ++v54;
  }
  unint64_t v56 = ((v54 + v55 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v64 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 > v56) {
    unint64_t v56 = ((v64 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  size_t v57 = v56 + 1;
  if (a3 < 0xFF)
  {
    int v59 = 0;
    char v58 = a1;
  }
  else
  {
    char v58 = a1;
    if (v57 <= 3)
    {
      unsigned int v62 = ((a3 + ~(-1 << (8 * v57)) - 254) >> (8 * v57)) + 1;
      if (HIWORD(v62))
      {
        int v59 = 4;
      }
      else if (v62 >= 0x100)
      {
        int v59 = 2;
      }
      else
      {
        int v59 = v62 > 1;
      }
    }
    else
    {
      int v59 = 1;
    }
  }
  if (a2 > 0xFE)
  {
    unsigned int v60 = a2 - 255;
    if (v57 < 4)
    {
      int v61 = (v60 >> (8 * v57)) + 1;
      if (v56 != -1)
      {
        int v63 = v60 & ~(-1 << (8 * v57));
        bzero(v58, v57);
        if (v57 == 3)
        {
          *(_WORD *)char v58 = v63;
          v58[2] = BYTE2(v63);
        }
        else if (v57 == 2)
        {
          *(_WORD *)char v58 = v63;
        }
        else
        {
          *char v58 = v63;
        }
      }
    }
    else
    {
      bzero(v58, v56 + 1);
      *(_DWORD *)char v58 = v60;
      int v61 = 1;
    }
    switch(v59)
    {
      case 1:
        v58[v57] = v61;
        break;
      case 2:
        *(_WORD *)&v58[v57] = v61;
        break;
      case 3:
LABEL_81:
        __break(1u);
        JUMPOUT(0x24EDAB938);
      case 4:
        *(_DWORD *)&v58[v57] = v61;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v59)
    {
      case 1:
        v58[v57] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_70;
      case 2:
        *(_WORD *)&v58[v57] = 0;
        goto LABEL_69;
      case 3:
        goto LABEL_81;
      case 4:
        *(_DWORD *)&v58[v57] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_70;
      default:
LABEL_69:
        if (a2) {
LABEL_70:
        }
          v58[v56] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24EDAB960(unsigned __int8 *a1, void *a2)
{
  uint64_t v56 = *(void *)(*(void *)(a2[5] - 8) + 64);
  uint64_t v54 = *(void *)(a2[3] - 8);
  uint64_t v3 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v4 = *(void *)(sub_24EE55880() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(a2[2] - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(sub_24EE55960() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a2[7] - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v3 | v5 | v7 | v9 | v12 | 7;
  uint64_t v14 = (v13 + v56) & ~v13;
  unint64_t v15 = *(void *)(v54 + 64);
  uint64_t v16 = v15 + v5;
  uint64_t v17 = v15 + v5 + 1;
  unint64_t v18 = *(void *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v19 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v19 = v18 + 1;
  }
  uint64_t v20 = v19 + v5;
  uint64_t v21 = v19 + v7;
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v23 = (v22 + v7 + ((v19 + v7 + ((v19 + v5 + ((v19 + v5 + ((v17 + ((v3 + 248) & ~v3)) & ~v5)) & ~v5)) & ~v5)) & ~v7)) & ~v7;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v22;
  }
  unint64_t v24 = v23 + v22;
  if (v18 > v15) {
    unint64_t v15 = *(void *)(v4 + 64);
  }
  unint64_t v25 = ((v19 + v9 + (v20 & ~v5)) & ~v9) + *(void *)(v8 + 64);
  if (v25 <= v15) {
    unint64_t v25 = v15;
  }
  uint64_t v26 = (v22
       + v12
       + ((v22 + v7 + ((v21 + ((v20 + ((v20 + ((v17 + ((v3 + 224) & ~v3)) & ~v5)) & ~v5)) & ~v5)) & ~v7)) & ~v7)) & ~v12;
  unint64_t v27 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    unint64_t v28 = v27;
  }
  else {
    unint64_t v28 = v27 + 1;
  }
  unint64_t v29 = v28 + v26;
  unint64_t v30 = ((v21 + ((v20 + ((v5 + 64) & ~v5)) & ~v5)) & ~v7) + v22;
  unint64_t v31 = v19 + (v16 & ~v5);
  unint64_t v32 = ((v31 + v5) & ~v5) + v19;
  unint64_t v33 = ((v32 + v5) & ~v5) + v19;
  unint64_t v34 = ((v5 + (v31 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v5) + v19;
  unint64_t v35 = ((v20 + ((v16 + ((v3 + 24) & ~v3)) & ~v5)) & ~v5) + v19;
  unint64_t v36 = ((v20 + ((v20 + ((v16 + ((v3 + 104) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v19;
  unint64_t v37 = ((v21 + ((v20 + ((v20 + ((v20 + ((v16 + ((v3 + 160) & ~v3)) & ~v5)) & ~v5)) & ~v5)) & ~v5)) & ~v7) + v22;
  unint64_t v38 = ((v20 + ((v20 + ((v16 + ((v3 + 56) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v19;
  unint64_t v39 = ((v16 + ((v3 + 64) & ~v3)) & ~v5) + v19;
  unint64_t v40 = ((v20 + ((v20 + ((v16 + ((v3 + 128) & ~v3)) & ~v5)) & ~v5)) & ~v5) + v19;
  if (v34 <= v24) {
    unint64_t v41 = v24;
  }
  else {
    unint64_t v41 = v34;
  }
  if (v41 <= v25 + 1) {
    unint64_t v42 = v25 + 1;
  }
  else {
    unint64_t v42 = v41;
  }
  if (v42 <= v29) {
    unint64_t v42 = v29;
  }
  if (v42 <= v30) {
    unint64_t v42 = v30;
  }
  if (v42 <= v33) {
    unint64_t v42 = v33;
  }
  if (v42 <= v35) {
    unint64_t v42 = v35;
  }
  if (v42 <= v36) {
    unint64_t v42 = v36;
  }
  if (v42 <= v37) {
    unint64_t v42 = v37;
  }
  if (v42 <= v38) {
    unint64_t v42 = v38;
  }
  if (v42 <= v39 + 1) {
    unint64_t v42 = v39 + 1;
  }
  if (v42 <= v40) {
    unint64_t v42 = v40;
  }
  if (v42 > v32) {
    unint64_t v32 = v42;
  }
  if (v32 <= v27) {
    unint64_t v32 = v27;
  }
  uint64_t v43 = *(void *)(a2[4] - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + v14 + v32 + 1) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = *(void *)(v43 + 64);
  if (*(_DWORD *)(v43 + 84)) {
    uint64_t v46 = v45;
  }
  else {
    uint64_t v46 = v45 + 1;
  }
  uint64_t v47 = *(void *)(a2[6] - 8);
  unint64_t v48 = (v46 + *(unsigned __int8 *)(v47 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v49 = *(void *)(v47 + 64);
  if (!*(_DWORD *)(v47 + 84)) {
    ++v49;
  }
  unint64_t v50 = ((v49 + v48 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 > v50) {
    unint64_t v50 = ((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
  }
  uint64_t result = a1[v50];
  if (result >= 2)
  {
    int v52 = v50 <= 3 ? v50 : 4;
    if (v52)
    {
      if (v52 == 4)
      {
        int v53 = *(_DWORD *)a1;
        if (v50 < 4) {
          return (v53 | ((result - 2) << (8 * v50))) + 2;
        }
      }
      else
      {
        int v53 = *a1;
        if (v50 < 4) {
          return (v53 | ((result - 2) << (8 * v50))) + 2;
        }
      }
      return (v53 + 2);
    }
  }
  return result;
}

void sub_24EDABEF4(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v56 = *(void *)(*(void *)(a3[5] - 8) + 64);
  uint64_t v53 = *(void *)(a3[3] - 8);
  uint64_t v4 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v5 = *(void *)(sub_24EE55880() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(sub_24EE55960() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a3[7] - 8);
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v4 | v6 | v8 | v10 | v13 | 7;
  uint64_t v15 = (v14 + v56) & ~v14;
  unint64_t v16 = *(void *)(v53 + 64);
  uint64_t v17 = v16 + v6;
  uint64_t v18 = v16 + v6 + 1;
  unint64_t v19 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v20 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v20 = v19 + 1;
  }
  uint64_t v21 = v20 + v6;
  uint64_t v22 = v20 + v8;
  uint64_t v23 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v24 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v24 = v23 + 1;
  }
  unint64_t v25 = ((v23 + v8 + ((v20 + v8 + ((v20 + v6 + ((v20 + v6 + ((v18 + ((v4 + 248) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v8)) & ~v8)
      + v24;
  if (v19 > v16) {
    unint64_t v16 = *(void *)(v5 + 64);
  }
  unint64_t v26 = ((v20 + v10 + (v21 & ~v6)) & ~v10) + *(void *)(v9 + 64);
  if (v26 <= v16) {
    unint64_t v26 = v16;
  }
  if (v26 + 1 > v25) {
    unint64_t v27 = v26 + 1;
  }
  else {
    unint64_t v27 = v25;
  }
  unint64_t v28 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    unint64_t v29 = v28;
  }
  else {
    unint64_t v29 = v28 + 1;
  }
  unint64_t v30 = v29
      + ((v24
        + v13
        + ((v24 + v8 + ((v22 + ((v21 + ((v21 + ((v18 + ((v4 + 224) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v8)) & ~v8)) & ~v13);
  if (v30 <= v27) {
    unint64_t v30 = v27;
  }
  unint64_t v31 = ((v22 + ((v21 + ((v6 + 64) & ~v6)) & ~v6)) & ~v8) + v24;
  if (v31 <= v30) {
    unint64_t v31 = v30;
  }
  unint64_t v32 = v20 + (v17 & ~v6);
  unint64_t v33 = ((v32 + v6) & ~v6) + v20;
  if (((v33 + v6) & ~v6) + v20 > v31) {
    unint64_t v31 = ((v33 + v6) & ~v6) + v20;
  }
  unint64_t v34 = ((v6 + (v32 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v6) + v20;
  if (v34 > v31) {
    unint64_t v31 = v34;
  }
  if (((v21 + ((v17 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v20 > v31) {
    unint64_t v31 = ((v21 + ((v17 + ((v4 + 24) & ~v4)) & ~v6)) & ~v6) + v20;
  }
  if (v34 > v31) {
    unint64_t v31 = v34;
  }
  if (((v21 + ((v21 + ((v17 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v20 > v31) {
    unint64_t v31 = ((v21 + ((v21 + ((v17 + ((v4 + 104) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v20;
  }
  unint64_t v35 = ((v22 + ((v21 + ((v21 + ((v21 + ((v17 + ((v4 + 160) & ~v4)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v8) + v24;
  if (v35 > v31) {
    unint64_t v31 = v35;
  }
  if (((v21 + ((v21 + ((v17 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v20 > v31) {
    unint64_t v31 = ((v21 + ((v21 + ((v17 + ((v4 + 56) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v20;
  }
  unint64_t v36 = ((v17 + ((v4 + 64) & ~v4)) & ~v6) + v20;
  if (v36 + 1 > v31) {
    unint64_t v31 = v36 + 1;
  }
  unint64_t v37 = ((v21 + ((v21 + ((v17 + ((v4 + 128) & ~v4)) & ~v6)) & ~v6)) & ~v6) + v20;
  if (v37 > v31) {
    unint64_t v31 = v37;
  }
  if (v28 > v31) {
    unint64_t v31 = v28;
  }
  uint64_t v38 = *(void *)(a3[4] - 8);
  if (v33 <= v31) {
    unint64_t v33 = v31;
  }
  unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + v15 + v33 + 1) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  int v40 = *(_DWORD *)(v38 + 84);
  uint64_t v41 = *(void *)(v38 + 64);
  if (v40) {
    uint64_t v42 = v41;
  }
  else {
    uint64_t v42 = v41 + 1;
  }
  uint64_t v43 = *(void *)(a3[6] - 8);
  unint64_t v44 = (v42 + *(unsigned __int8 *)(v43 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = *(void *)(v43 + 64);
  BOOL v46 = *(_DWORD *)(v43 + 84) == 0;
  if (a2 > 1)
  {
    unint64_t v48 = ((v45 + v46 + v44 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 <= v48) {
      size_t v49 = v48;
    }
    else {
      size_t v49 = ((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
    }
    if (v49 <= 3) {
      char v50 = ((a2 - 2) >> (8 * v49)) + 2;
    }
    else {
      char v50 = 2;
    }
    if (v49 <= 3) {
      int v51 = (a2 - 2) & ~(-1 << (8 * v49));
    }
    else {
      int v51 = a2 - 2;
    }
    a1[v49] = v50;
    if (v49 >= 4) {
      int v52 = 4;
    }
    else {
      int v52 = v49;
    }
    bzero(a1, v49);
    if (v52 == 1) {
      *a1 = v51;
    }
    else {
      *(_DWORD *)a1 = v51;
    }
  }
  else
  {
    unint64_t v47 = ((v45 + v46 + v44 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249 > v47) {
      unint64_t v47 = ((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 249;
    }
    a1[v47] = a2;
  }
}

unsigned char *sub_24EDAC4E0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDAC5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EDAC5D8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EDAC674);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EDAC69C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC6B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC6D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC6F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC70C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC728()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC744()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC760()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC77C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAC798()
{
  return sub_24ECB0F04();
}

uint64_t static FullWidthItemDescriptor.== infix(_:_:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v117 = a1;
  long long v118 = a2;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DBA00);
  uint64_t v6 = MEMORY[0x270FA5388](v101);
  uint64_t v98 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v103 = (uint64_t)&v96 - v8;
  uint64_t v113 = sub_24EE55960();
  uint64_t v109 = *(void *)(v113 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v113);
  unsigned int v102 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v105 = (char *)&v96 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v96 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v99 = (uint64_t)&v96 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v110 = (uint64_t)&v96 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v111 = (uint64_t)&v96 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v104 = (uint64_t)&v96 - v21;
  uint64_t v116 = sub_24EE55880();
  uint64_t v114 = *(void *)(v116 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v116);
  long long v97 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (char *)&v96 - v25;
  uint64_t v106 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = a3;
  uint64_t v108 = a4;
  uint64_t v28 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v32 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  unint64_t v35 = (char *)&v96 - v34;
  MEMORY[0x270FA5388](v33);
  unint64_t v37 = (char *)&v96 - v36;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v115 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v41 = (char *)&v96 - v40;
  uint64_t v42 = (char *)&v96 + *(int *)(v39 + 48) - v40;
  uint64_t v112 = v29;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v43((char *)&v96 - v40, v117, v28);
  v43(v42, (uint64_t)v118, v28);
  long long v118 = v41;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v52 = v106;
    uint64_t v53 = v107;
    v43(v37, (uint64_t)v118, v28);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v27, v42, v53);
      char v49 = sub_24EE57040();
      unint64_t v73 = *(void (**)(char *, uint64_t))(v52 + 8);
      v73(v27, v53);
      v73(v37, v53);
      uint64_t v51 = v112;
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
LABEL_13:
    char v49 = 0;
    uint64_t v51 = v115;
    uint64_t v28 = TupleTypeMetadata2;
LABEL_15:
    uint64_t v45 = v118;
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v43(v32, (uint64_t)v118, v28);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B18);
    uint64_t v55 = *(int *)(v54 + 48);
    uint64_t v56 = *(int *)(v54 + 64);
    size_t v57 = &v32[v56];
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v58 = (uint64_t)&v42[v55];
      int v59 = &v42[v56];
      uint64_t v60 = (uint64_t)v42;
      uint64_t v61 = v104;
      sub_24ECB04CC(v60, v104);
      sub_24ECB04CC((uint64_t)&v32[v55], v111);
      uint64_t v62 = v109;
      int v63 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
      uint64_t v64 = v113;
      v63(v105, v57, v113);
      sub_24ECB04CC(v58, v110);
      uint64_t v65 = v102;
      v63(v102, v59, v64);
      uint64_t v66 = v101;
      uint64_t v67 = v103;
      uint64_t v68 = v103 + *(int *)(v101 + 48);
      sub_24ECB04CC((uint64_t)v32, v103);
      sub_24ECF30E4(v61, v68);
      uint64_t v69 = v114;
      int v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
      uint64_t v71 = v116;
      if (v70(v67, 1, v116) == 1)
      {
        int v72 = v70(v68, 1, v71);
        uint64_t v45 = v118;
        if (v72 == 1)
        {
          sub_24EC88758(v103, &qword_26B1DB9F0);
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v75 = v99;
        sub_24ECF30E4(v67, v99);
        if (v70(v68, 1, v71) != 1)
        {
          unint64_t v78 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v97, v68, v71);
          sub_24EDAFC0C(&qword_26B1DB9E8, MEMORY[0x263F06828]);
          char v79 = sub_24EE57040();
          unint64_t v80 = *(void (**)(char *, uint64_t))(v69 + 8);
          unint64_t v81 = v78;
          uint64_t v62 = v109;
          v80(v81, v116);
          v80((char *)v75, v116);
          uint64_t v71 = v116;
          uint64_t v65 = v102;
          sub_24EC88758(v67, &qword_26B1DB9F0);
          uint64_t v45 = v118;
          uint64_t v66 = v101;
          if (v79)
          {
LABEL_22:
            uint64_t v82 = *(int *)(v66 + 48);
            uint64_t v83 = v98;
            uint64_t v84 = v98 + v82;
            sub_24ECF30E4(v111, v98);
            sub_24ECF30E4(v110, v84);
            if (v70(v83, 1, v71) == 1)
            {
              int v85 = v70(v84, 1, v71);
              uint64_t v51 = v112;
              if (v85 == 1)
              {
                sub_24EC88758(v83, &qword_26B1DB9F0);
                uint64_t v86 = v113;
LABEL_30:
                unint64_t v93 = v65;
                unint64_t v94 = v105;
                char v49 = MEMORY[0x25334C010](v105, v93);
                uint64_t v95 = *(void (**)(char *, uint64_t))(v62 + 8);
                v95(v93, v86);
                sub_24EC88758(v110, &qword_26B1DB9F0);
                v95(v94, v86);
                sub_24EC88758(v111, &qword_26B1DB9F0);
                sub_24EC88758(v104, &qword_26B1DB9F0);
                goto LABEL_16;
              }
            }
            else
            {
              uint64_t v87 = v96;
              sub_24ECF30E4(v83, v96);
              if (v70(v84, 1, v71) != 1)
              {
                uint64_t v89 = v114;
                uint64_t v90 = v87;
                uint64_t v91 = v97;
                (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v97, v84, v71);
                sub_24EDAFC0C(&qword_26B1DB9E8, MEMORY[0x263F06828]);
                LODWORD(v118) = sub_24EE57040();
                unint64_t v92 = *(void (**)(char *, uint64_t))(v89 + 8);
                v92(v91, v71);
                v92((char *)v90, v71);
                sub_24EC88758(v83, &qword_26B1DB9F0);
                uint64_t v51 = v112;
                uint64_t v86 = v113;
                if (v118) {
                  goto LABEL_30;
                }
LABEL_28:
                size_t v88 = *(void (**)(char *, uint64_t))(v62 + 8);
                v88(v65, v86);
                sub_24EC88758(v110, &qword_26B1DB9F0);
                v88(v105, v86);
                sub_24EC88758(v111, &qword_26B1DB9F0);
                sub_24EC88758(v104, &qword_26B1DB9F0);
                char v49 = 0;
                goto LABEL_16;
              }
              (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v87, v71);
              uint64_t v51 = v112;
            }
            sub_24EC88758(v83, &qword_26B1DBA00);
            uint64_t v86 = v113;
            goto LABEL_28;
          }
LABEL_20:
          size_t v76 = *(void (**)(char *, uint64_t))(v62 + 8);
          uint64_t v77 = v113;
          v76(v65, v113);
          sub_24EC88758(v110, &qword_26B1DB9F0);
          v76(v105, v77);
          sub_24EC88758(v111, &qword_26B1DB9F0);
          sub_24EC88758(v104, &qword_26B1DB9F0);
          char v49 = 0;
          uint64_t v51 = v112;
          goto LABEL_16;
        }
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v75, v71);
        uint64_t v45 = v118;
      }
      sub_24EC88758(v103, &qword_26B1DBA00);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v109 + 8))(&v32[v56], v113);
    sub_24EC88758((uint64_t)&v32[v55], &qword_26B1DB9F0);
    sub_24EC88758((uint64_t)v32, &qword_26B1DB9F0);
    goto LABEL_13;
  }
  uint64_t v45 = v118;
  v43(v35, (uint64_t)v118, v28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = v114;
    unint64_t v47 = v100;
    uint64_t v48 = v116;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v100, v42, v116);
    char v49 = sub_24EE55800();
    char v50 = *(void (**)(char *, uint64_t))(v46 + 8);
    v50(v47, v48);
    v50(v35, v48);
    uint64_t v51 = v112;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v35, v116);
    char v49 = 0;
    uint64_t v51 = v115;
    uint64_t v28 = TupleTypeMetadata2;
  }
LABEL_16:
  (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v28);
  return v49 & 1;
}

uint64_t type metadata accessor for FullWidthItemDescriptor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EDAD42C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EDAD4B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7475626972747461 && a2 == 0xEF656C7469546465)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EDAD560(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F74747562 && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69646E61707865 && a2 == 0xED00007478655467)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EDAD6D4(char a1)
{
  if (!a1) {
    return 0x6B726F77747261;
  }
  if (a1 == 1) {
    return 0x6E6F74747562;
  }
  return 0x6E69646E61707865;
}

uint64_t sub_24EDAD734(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475626972747461 && a2 == 0xEF656C7469546465;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEE00747865546465 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EDAD8C4(unsigned __int8 a1)
{
  uint64_t result = 0x7475626972747461;
  if (a1 >= 2u) {
    return 0x656C61636F6CLL;
  }
  return result;
}

uint64_t sub_24EDAD924()
{
  return 0x6B726F77747261;
}

uint64_t sub_24EDAD93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDAD42C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EDAD970(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EDAD9C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EDADA18()
{
  return 0x7475626972747461;
}

uint64_t sub_24EDADA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDAD4B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EDADA70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EDADAC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

BOOL sub_24EDADB18(char *a1, char *a2)
{
  return sub_24EC97258(*a1, *a2);
}

uint64_t sub_24EDADB2C()
{
  return sub_24EC974A4();
}

uint64_t sub_24EDADB4C()
{
  return sub_24EC97268();
}

uint64_t sub_24EDADB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24EDADC98(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24EC97268);
}

uint64_t sub_24EDADB70()
{
  return sub_24EDAD6D4(*v0);
}

uint64_t sub_24EDADB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDAD560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDADBAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ED03D20();
  *a1 = result;
  return result;
}

uint64_t sub_24EDADBD8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EDADC2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EDADC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24EDADC98(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24ED03D2C);
}

uint64_t sub_24EDADC98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_24EE57870();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_24EE578B0();
}

uint64_t sub_24EDADCF0()
{
  return sub_24EDAD8C4(*v0);
}

uint64_t sub_24EDADCFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDAD734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDADD2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EDADD80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t FullWidthItemDescriptor.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for FullWidthItemDescriptor.ExpandingTextCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v6;
  uint64_t v75 = sub_24EE577C0();
  uint64_t v51 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v66 = (char *)&v50 - v7;
  uint64_t v69 = sub_24EE55960();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  int v72 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v74 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v50 - v12;
  uint64_t v13 = type metadata accessor for FullWidthItemDescriptor.ButtonCodingKeys();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v57 = v13;
  uint64_t v56 = v14;
  uint64_t v61 = sub_24EE577C0();
  uint64_t v50 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  int v59 = (char *)&v50 - v15;
  uint64_t v73 = sub_24EE55880();
  uint64_t v60 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v58 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FullWidthItemDescriptor.ArtworkCodingKeys();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v55 = sub_24EE577C0();
  uint64_t v52 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v71 = (char *)&v50 - v17;
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v18);
  int v70 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = v4;
  uint64_t v62 = v5;
  type metadata accessor for FullWidthItemDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v79 = sub_24EE577C0();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v25 = (char *)&v50 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v78 = v25;
  sub_24EE578D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v80, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v34 = v52;
    uint64_t v35 = v54;
    uint64_t v36 = v65;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v70, v23, v65);
    char v81 = 0;
    unint64_t v32 = v78;
    uint64_t v31 = v79;
    sub_24EE57740();
    uint64_t v37 = v55;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v71, v37);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v70, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v32, v31);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v27 = v60;
    uint64_t v28 = v58;
    uint64_t v29 = v73;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v23, v73);
    char v82 = 1;
    uint64_t v30 = v59;
    unint64_t v32 = v78;
    uint64_t v31 = v79;
    sub_24EE57740();
    sub_24EDAFC0C(&qword_26B1DB9D8, MEMORY[0x263F06828]);
    uint64_t v33 = v61;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v33);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v32, v31);
  }
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B18);
  uint64_t v40 = (uint64_t)&v23[*(int *)(v39 + 48)];
  uint64_t v41 = &v23[*(int *)(v39 + 64)];
  uint64_t v42 = v68;
  sub_24ECB04CC((uint64_t)v23, v68);
  sub_24ECB04CC(v40, v74);
  uint64_t v43 = v67;
  uint64_t v44 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v72, v41, v69);
  char v86 = 2;
  uint64_t v45 = v66;
  uint64_t v46 = v78;
  uint64_t v47 = v79;
  sub_24EE57740();
  char v85 = 0;
  sub_24EDAFC0C(&qword_26B1DB9D8, MEMORY[0x263F06828]);
  uint64_t v48 = v77;
  sub_24EE57760();
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v75);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v72, v44);
  }
  else
  {
    char v84 = 1;
    sub_24EE57760();
    char v83 = 2;
    sub_24EDAFC0C(&qword_269965FC0, MEMORY[0x263F07690]);
    char v49 = v72;
    sub_24EE577B0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v75);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v44);
  }
  sub_24EC88758(v74, &qword_26B1DB9F0);
  sub_24EC88758(v42, &qword_26B1DB9F0);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v46, v47);
}

uint64_t type metadata accessor for FullWidthItemDescriptor.ExpandingTextCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FullWidthItemDescriptor.ButtonCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FullWidthItemDescriptor.ArtworkCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FullWidthItemDescriptor.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FullWidthItemDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v91 = a4;
  uint64_t v7 = type metadata accessor for FullWidthItemDescriptor.ExpandingTextCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v88 = v7;
  uint64_t v80 = sub_24EE57730();
  uint64_t v76 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v89 = (char *)&v69 - v8;
  uint64_t v9 = type metadata accessor for FullWidthItemDescriptor.ButtonCodingKeys();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v85 = v9;
  uint64_t v84 = v10;
  uint64_t v78 = sub_24EE57730();
  uint64_t v75 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  char v86 = (char *)&v69 - v11;
  uint64_t v12 = type metadata accessor for FullWidthItemDescriptor.ArtworkCodingKeys();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v82 = v12;
  uint64_t v81 = v13;
  uint64_t v77 = sub_24EE57730();
  uint64_t v74 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  char v83 = (char *)&v69 - v14;
  type metadata accessor for FullWidthItemDescriptor.CodingKeys();
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v95 = sub_24EE57730();
  uint64_t v92 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v94 = a2;
  uint64_t v79 = a3;
  uint64_t v17 = type metadata accessor for FullWidthItemDescriptor();
  uint64_t v90 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v69 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v69 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v69 - v27;
  uint64_t v29 = a1[3];
  uint64_t v96 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  unint64_t v93 = v16;
  uint64_t v30 = v102;
  sub_24EE578C0();
  uint64_t v102 = v30;
  if (v30) {
    goto LABEL_9;
  }
  uint64_t v71 = v25;
  int v72 = v22;
  uint64_t v73 = v19;
  int v70 = v28;
  uint64_t v97 = v17;
  uint64_t v31 = v95;
  unint64_t v32 = v93;
  *(void *)&long long v98 = sub_24EE57720();
  sub_24EE571B0();
  swift_getWitnessTable();
  *(void *)&long long v100 = sub_24EE57480();
  *((void *)&v100 + 1) = v33;
  *(void *)&long long v101 = v34;
  *((void *)&v101 + 1) = v35;
  sub_24EE57470();
  swift_getWitnessTable();
  sub_24EE573A0();
  int v36 = v98;
  if (v98 != 3)
  {
    long long v69 = v100;
    long long v98 = v100;
    long long v99 = v101;
    if (sub_24EE573C0())
    {
      if (v36)
      {
        if (v36 == 1)
        {
          LOBYTE(v98) = 1;
          uint64_t v37 = v86;
          uint64_t v38 = v102;
          sub_24EE57690();
          uint64_t v39 = v31;
          uint64_t v41 = v90;
          uint64_t v40 = v91;
          uint64_t v102 = v38;
          if (v38) {
            goto LABEL_17;
          }
          sub_24EE55880();
          sub_24EDAFC0C(&qword_2699653D8, MEMORY[0x263F06828]);
          uint64_t v57 = v72;
          uint64_t v58 = v78;
          uint64_t v59 = v102;
          sub_24EE57710();
          uint64_t v102 = v59;
          if (v59)
          {
            (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v58);
LABEL_17:
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v39);
            goto LABEL_9;
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v58);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v39);
          uint64_t v63 = v97;
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
          uint64_t v65 = v70;
          v64(v70, v57, v63);
LABEL_22:
          v64(v40, v65, v63);
          goto LABEL_9;
        }
        LOBYTE(v98) = 2;
        uint64_t v55 = v89;
        uint64_t v56 = v102;
        sub_24EE57690();
        uint64_t v102 = v56;
        if (v56) {
          goto LABEL_14;
        }
        sub_24EE55880();
        LOBYTE(v98) = 0;
        sub_24EDAFC0C(&qword_2699653D8, MEMORY[0x263F06828]);
        uint64_t v60 = (uint64_t)v73;
        uint64_t v61 = v80;
        uint64_t v62 = v102;
        sub_24EE576C0();
        if (v62)
        {
          (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v61);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v95);
          uint64_t v48 = (uint64_t)v96;
          uint64_t v102 = v62;
          return __swift_destroy_boxed_opaque_existential_1(v48);
        }
        uint64_t v66 = v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964B18) + 48);
        LOBYTE(v98) = 1;
        sub_24EE576C0();
        uint64_t v102 = 0;
        uint64_t v67 = v60;
        sub_24EE55960();
        LOBYTE(v98) = 2;
        sub_24EDAFC0C(&qword_269965FC8, MEMORY[0x263F07690]);
        uint64_t v68 = v102;
        sub_24EE57710();
        uint64_t v102 = v68;
        if (v68)
        {
          (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v61);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v95);
          sub_24EC88758(v66, &qword_26B1DB9F0);
          sub_24EC88758(v60, &qword_26B1DB9F0);
          goto LABEL_9;
        }
        (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v61);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v95);
        uint64_t v63 = v97;
        swift_storeEnumTagMultiPayload();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
        uint64_t v65 = v70;
        v64(v70, (char *)v67, v63);
      }
      else
      {
        LOBYTE(v98) = 0;
        uint64_t v50 = v83;
        uint64_t v51 = v102;
        sub_24EE57690();
        uint64_t v102 = v51;
        if (v51)
        {
LABEL_14:
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v32, v31);
          goto LABEL_9;
        }
        uint64_t v52 = v71;
        uint64_t v53 = v77;
        sub_24EE57710();
        uint64_t v54 = v92;
        uint64_t v102 = 0;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v50, v53);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v31);
        uint64_t v63 = v97;
        swift_storeEnumTagMultiPayload();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
        uint64_t v65 = v70;
        v64(v70, v52, v63);
      }
      uint64_t v40 = v91;
      goto LABEL_22;
    }
  }
  uint64_t v42 = sub_24EE57560();
  uint64_t v43 = swift_allocError();
  uint64_t v44 = v32;
  uint64_t v45 = v31;
  uint64_t v47 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
  *uint64_t v47 = v97;
  sub_24EE576A0();
  sub_24EE57550();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v47, *MEMORY[0x263F8DCB0], v42);
  uint64_t v102 = v43;
  swift_willThrow();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v44, v45);
LABEL_9:
  uint64_t v48 = (uint64_t)v96;
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

uint64_t sub_24EDAF558@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return FullWidthItemDescriptor.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24EDAF578(void *a1, uint64_t a2)
{
  return FullWidthItemDescriptor.encode(to:)(a1, a2);
}

uint64_t FullWidthItemDescriptor.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v4 = sub_24EE55960();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DB9F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v40 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v45 = (uint64_t)&v39 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v43 = (uint64_t)&v39 - v14;
  uint64_t v15 = sub_24EE55880();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v17);
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, v2, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v26, v15);
      sub_24EE57880();
      sub_24EDAFC0C(&qword_26B1DB9E0, MEMORY[0x263F06828]);
      sub_24EE57000();
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    }
    else
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964B18);
      uint64_t v31 = (uint64_t)&v26[*(int *)(v30 + 48)];
      unint64_t v32 = &v26[*(int *)(v30 + 64)];
      uint64_t v33 = v43;
      sub_24ECB04CC((uint64_t)v26, v43);
      sub_24ECB04CC(v31, v45);
      uint64_t v35 = v41;
      uint64_t v34 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v44, v32, v42);
      sub_24EE57880();
      sub_24ECF30E4(v33, (uint64_t)v11);
      int v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      if (v36(v11, 1, v15) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v11, v15);
        sub_24EE57890();
        sub_24EDAFC0C(&qword_26B1DB9E0, MEMORY[0x263F06828]);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      }
      uint64_t v37 = v40;
      sub_24ECF30E4(v45, v40);
      if (v36((char *)v37, 1, v15) == 1)
      {
        sub_24EE57890();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v19, v37, v15);
        sub_24EE57890();
        sub_24EDAFC0C(&qword_26B1DB9E0, MEMORY[0x263F06828]);
        sub_24EE57000();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      }
      sub_24EDAFC0C(qword_269965FD0, MEMORY[0x263F07690]);
      uint64_t v38 = v44;
      sub_24EE57000();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
      sub_24EC88758(v45, &qword_26B1DB9F0);
      return sub_24EC88758(v43, &qword_26B1DB9F0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v26, v20);
    sub_24EE57880();
    sub_24EE57000();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
}

uint64_t sub_24EDAFC0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FullWidthItemDescriptor.hashValue.getter(uint64_t a1)
{
  sub_24EE57870();
  FullWidthItemDescriptor.hash(into:)((uint64_t)v3, a1);
  return sub_24EE578B0();
}

uint64_t sub_24EDAFCA4(uint64_t a1, uint64_t a2)
{
  sub_24EE57870();
  FullWidthItemDescriptor.hash(into:)((uint64_t)v4, a2);
  return sub_24EE578B0();
}

uint64_t sub_24EDAFCE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDAFD04(uint64_t a1, char *a2, uint64_t a3)
{
  return static FullWidthItemDescriptor.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

void sub_24EDAFD10()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v7 = *(void *)(v0 - 8) + 64;
    uint64_t v2 = sub_24EE55880();
    if (v3 <= 0x3F)
    {
      uint64_t v8 = *(void *)(v2 - 8) + 64;
      sub_24ED02DA0();
      if (v4 <= 0x3F)
      {
        sub_24EE55960();
        if (v5 <= 0x3F)
        {
          swift_getTupleTypeLayout3();
          uint64_t v9 = &v6;
          swift_initEnumMetadataMultiPayload();
        }
      }
    }
  }
}

void *sub_24EDAFE60(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v41 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v41 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = sub_24EE55880();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  if (v9 <= v6) {
    unint64_t v10 = v6;
  }
  else {
    unint64_t v10 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  int v11 = *(_DWORD *)(v8 + 80);
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    size_t v12 = v9 + 1;
  }
  uint64_t v13 = *(_DWORD *)(v8 + 80);
  size_t v43 = v12 + v13;
  uint64_t v14 = sub_24EE55960();
  uint64_t v15 = v5;
  uint64_t v16 = *(void *)(v14 - 8);
  int v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v17;
  unint64_t v19 = (v12 + v18 + ((v12 + v13) & ~(unint64_t)v11)) & ~v18;
  if (v19 + *(void *)(v16 + 64) > v10) {
    unint64_t v10 = v19 + *(void *)(v16 + 64);
  }
  int v20 = v11 | v17 | *(_DWORD *)(v15 + 80);
  uint64_t v21 = (v11 | v17 | *(unsigned char *)(v15 + 80));
  int v22 = v20 & 0x100000;
  if (v21 <= 7 && v22 == 0 && v10 + 1 <= 0x18)
  {
    unsigned int v27 = a2[v10];
    unsigned int v28 = v27 - 3;
    uint64_t v29 = a2;
    if (v27 < 3)
    {
      uint64_t v31 = v7;
      uint64_t v26 = a1;
      if (v27 == 2)
      {
LABEL_26:
        uint64_t v40 = *(void *)(v14 - 8);
        uint64_t v42 = v14;
        uint64_t v33 = ~v13;
        uint64_t v39 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48);
        if (v39(v29, 1, v31))
        {
          memcpy(v26, v29, v12);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(v26, v29, v31);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v31);
        }
        uint64_t v34 = v29;
        uint64_t v35 = (void *)(((unint64_t)v26 + v43) & v33);
        int v36 = (void *)((unint64_t)&v34[v43] & v33);
        if (v39((unsigned __int8 *)v36, 1, v31))
        {
          memcpy(v35, v36, v12);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v35, v36, v31);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v31);
        }
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v40 + 16))(((unint64_t)v35 + v12 + v18) & ~v18, ((unint64_t)v36 + v12 + v18) & ~v18, v42);
        char v37 = 2;
LABEL_38:
        *((unsigned char *)v26 + v10) = v37;
        return v26;
      }
    }
    else
    {
      if (v10 <= 3) {
        uint64_t v30 = v10;
      }
      else {
        uint64_t v30 = 4;
      }
      uint64_t v31 = v7;
      uint64_t v26 = a1;
      switch(v30)
      {
        case 1:
          int v32 = *v29;
          if (v10 < 4) {
            goto LABEL_34;
          }
          goto LABEL_44;
        case 2:
          int v32 = *(unsigned __int16 *)v29;
          if (v10 < 4) {
            goto LABEL_34;
          }
          goto LABEL_44;
        case 3:
          int v32 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          if (v10 < 4) {
            goto LABEL_34;
          }
          goto LABEL_44;
        case 4:
          int v32 = *(_DWORD *)v29;
          if (v10 >= 4)
          {
LABEL_44:
            unsigned int v27 = v32 + 3;
            if (v27 != 2) {
              break;
            }
            goto LABEL_26;
          }
LABEL_34:
          unsigned int v27 = (v32 | (v28 << (8 * v10))) + 3;
LABEL_35:
          if (v27 == 2) {
            goto LABEL_26;
          }
          break;
        default:
          goto LABEL_35;
      }
    }
    if (v27 != 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v15 + 16))(v26, v29, v41);
      *((unsigned char *)v26 + v10) = 0;
      return v26;
    }
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(v26, v29, v31);
    char v37 = 1;
    goto LABEL_38;
  }
  uint64_t v25 = *(void *)a2;
  *a1 = *(void *)a2;
  uint64_t v26 = (void *)(v25 + ((v21 + 16) & ~v21));
  swift_retain();
  return v26;
}

uint64_t sub_24EDB0294(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v27 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v27 + 64);
  uint64_t v5 = sub_24EE55880();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 <= v4) {
    unint64_t v8 = v4;
  }
  else {
    unint64_t v8 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  if (*(_DWORD *)(v6 + 84)) {
    unint64_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    unint64_t v9 = v7 + 1;
  }
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = sub_24EE55960();
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  unint64_t v14 = ((v9 + v13 + ((v9 + v10) & ~v10)) & ~v13) + *(void *)(*(void *)(v12 - 8) + 64);
  if (v14 <= v8) {
    unint64_t v14 = v8;
  }
  unsigned int v15 = a1[v14];
  unsigned int v16 = v15 - 3;
  if (v15 >= 3)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        goto LABEL_18;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v18 = *(_DWORD *)a1;
LABEL_18:
        int v19 = (v18 | (v16 << (8 * v14))) + 3;
        unsigned int v15 = v18 + 3;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 2)
  {
    uint64_t v28 = *(void *)(v12 - 8);
    uint64_t v23 = ~v10;
    uint64_t v24 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v29 + 48);
    if (!v24(a1, 1, v5)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(a1, v5);
    }
    unint64_t v25 = (unint64_t)&a1[v11] & v23;
    if (!v24((unsigned __int8 *)v25, 1, v5)) {
      (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v25, v5);
    }
    uint64_t v21 = (unsigned __int8 *)((v25 + v9 + v13) & ~v13);
    int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v28 + 8);
    uint64_t v22 = v12;
  }
  else if (v15 == 1)
  {
    int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v29 + 8);
    uint64_t v21 = a1;
    uint64_t v22 = v5;
  }
  else
  {
    int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v27 + 8);
    uint64_t v21 = a1;
    uint64_t v22 = v3;
  }
  return v20(v21, v22);
}

void *sub_24EDB0584(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v28 - 8);
  size_t v5 = *(void *)(v26 + 64);
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  if (v8 <= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  if (*(_DWORD *)(v7 + 84)) {
    size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    size_t v10 = v8 + 1;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = v10 + v11;
  uint64_t v13 = sub_24EE55960();
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  if (((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v13 - 8) + 64) > v9) {
    size_t v9 = ((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v15 = a2[v9];
  unsigned int v16 = v15 - 3;
  if (v15 >= 3)
  {
    if (v9 <= 3) {
      uint64_t v17 = v9;
    }
    else {
      uint64_t v17 = 4;
    }
    int v18 = a1;
    switch(v17)
    {
      case 1:
        int v19 = *a2;
        break;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a2;
        break;
      default:
        goto LABEL_16;
    }
    int v21 = (v19 | (v16 << (8 * v9))) + 3;
    unsigned int v15 = v19 + 3;
    if (v9 < 4) {
      unsigned int v15 = v21;
    }
    if (v15 == 2) {
      goto LABEL_26;
    }
LABEL_17:
    if (v15 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(v18, a2, v6);
      char v20 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 16))(v18, a2, v28);
      char v20 = 0;
    }
    goto LABEL_33;
  }
  int v18 = a1;
LABEL_16:
  if (v15 != 2) {
    goto LABEL_17;
  }
LABEL_26:
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  unint64_t v25 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
  if (v25(a2, 1, v6))
  {
    memcpy(v18, a2, v10);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(v18, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  uint64_t v22 = (void *)(((unint64_t)v18 + v12) & ~v11);
  uint64_t v23 = (void *)((unint64_t)&a2[v12] & ~v11);
  if (v25((unsigned __int8 *)v23, 1, v6))
  {
    memcpy(v22, v23, v10);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v22, v23, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 16))(((unint64_t)v22 + v10 + v14) & ~v14, ((unint64_t)v23 + v10 + v14) & ~v14, v29);
  char v20 = 2;
LABEL_33:
  *((unsigned char *)v18 + v9) = v20;
  return v18;
}

unsigned __int8 *sub_24EDB0938(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v38 = *(void *)(a3 + 16);
    uint64_t v37 = *(void *)(v38 - 8);
    size_t v5 = *(void *)(v37 + 64);
    uint64_t v6 = sub_24EE55880();
    uint64_t v7 = *(void *)(v6 - 8);
    size_t v8 = *(void *)(v7 + 64);
    if (v8 <= v5) {
      size_t v9 = v5;
    }
    else {
      size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    if (*(_DWORD *)(v7 + 84)) {
      size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    else {
      size_t v10 = v8 + 1;
    }
    uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
    size_t v39 = v10 + v11;
    uint64_t v12 = sub_24EE55960();
    uint64_t v13 = v12;
    uint64_t v40 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v40 + 80);
    if (((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(v40 + 64) <= v9) {
      size_t v15 = v9;
    }
    else {
      size_t v15 = ((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v12 - 8) + 64);
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_19:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v15))) + 3;
          else {
LABEL_23:
          }
            unsigned int v16 = v19 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = ~v11;
    uint64_t v21 = ~v14;
    if (v16 == 2)
    {
      uint64_t v35 = v12;
      uint64_t v22 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
      if (!v22(a1, 1, v6)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      }
      uint64_t v33 = v20;
      unint64_t v23 = (unint64_t)&a1[v39] & v20;
      if (!v22((unsigned __int8 *)v23, 1, v6)) {
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v23, v6);
      }
      uint64_t v21 = ~v14;
      uint64_t v13 = v35;
      (*(void (**)(unint64_t, uint64_t))(v40 + 8))((v23 + v10 + v14) & ~v14, v35);
      uint64_t v20 = v33;
    }
    else if (v16 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v37 + 8))(a1, v38);
    }
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 >= 3)
    {
      if (v15 <= 3) {
        uint64_t v26 = v15;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *a2;
          if (v15 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_41;
        case 2:
          int v27 = *(unsigned __int16 *)a2;
          if (v15 < 4) {
            goto LABEL_41;
          }
          goto LABEL_49;
        case 3:
          int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_41;
          }
          goto LABEL_49;
        case 4:
          int v27 = *(_DWORD *)a2;
          if (v15 < 4)
          {
LABEL_41:
            unsigned int v24 = (v27 | (v25 << (8 * v15))) + 3;
            break;
          }
LABEL_49:
          unsigned int v24 = v27 + 3;
          if (v24 == 2) {
            goto LABEL_50;
          }
          goto LABEL_43;
        default:
          break;
      }
    }
    if (v24 == 2)
    {
LABEL_50:
      uint64_t v36 = v13;
      uint64_t v29 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v34 = v21;
      if (v29(a2, 1, v6))
      {
        memcpy(a1, a2, v10);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v30 = (void *)((unint64_t)&a1[v39] & v20);
      uint64_t v31 = (void *)((unint64_t)&a2[v39] & v20);
      if (v29((unsigned __int8 *)v31, 1, v6))
      {
        memcpy(v30, v31, v10);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v30, v31, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v40 + 16))(((unint64_t)v30 + v10 + v14) & v34, ((unint64_t)v31 + v10 + v14) & v34, v36);
      char v28 = 2;
    }
    else
    {
LABEL_43:
      if (v24 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
        char v28 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v37 + 16))(a1, a2, v38);
        char v28 = 0;
      }
    }
    a1[v15] = v28;
  }
  return a1;
}

void *sub_24EDB0EA8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v28 - 8);
  size_t v5 = *(void *)(v26 + 64);
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  if (v8 <= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  if (*(_DWORD *)(v7 + 84)) {
    size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    size_t v10 = v8 + 1;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = v10 + v11;
  uint64_t v13 = sub_24EE55960();
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  if (((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v13 - 8) + 64) > v9) {
    size_t v9 = ((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v15 = a2[v9];
  unsigned int v16 = v15 - 3;
  if (v15 >= 3)
  {
    if (v9 <= 3) {
      uint64_t v17 = v9;
    }
    else {
      uint64_t v17 = 4;
    }
    uint64_t v18 = a1;
    switch(v17)
    {
      case 1:
        int v19 = *a2;
        break;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a2;
        break;
      default:
        goto LABEL_16;
    }
    int v21 = (v19 | (v16 << (8 * v9))) + 3;
    unsigned int v15 = v19 + 3;
    if (v9 < 4) {
      unsigned int v15 = v21;
    }
    if (v15 == 2) {
      goto LABEL_26;
    }
LABEL_17:
    if (v15 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(v18, a2, v6);
      char v20 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 32))(v18, a2, v28);
      char v20 = 0;
    }
    goto LABEL_33;
  }
  uint64_t v18 = a1;
LABEL_16:
  if (v15 != 2) {
    goto LABEL_17;
  }
LABEL_26:
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  unsigned int v25 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
  if (v25(a2, 1, v6))
  {
    memcpy(v18, a2, v10);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(v18, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  uint64_t v22 = (void *)(((unint64_t)v18 + v12) & ~v11);
  unint64_t v23 = (void *)((unint64_t)&a2[v12] & ~v11);
  if (v25((unsigned __int8 *)v23, 1, v6))
  {
    memcpy(v22, v23, v10);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v22, v23, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 32))(((unint64_t)v22 + v10 + v14) & ~v14, ((unint64_t)v23 + v10 + v14) & ~v14, v29);
  char v20 = 2;
LABEL_33:
  *((unsigned char *)v18 + v9) = v20;
  return v18;
}

unsigned __int8 *sub_24EDB125C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v38 = *(void *)(a3 + 16);
    uint64_t v37 = *(void *)(v38 - 8);
    size_t v5 = *(void *)(v37 + 64);
    uint64_t v6 = sub_24EE55880();
    uint64_t v7 = *(void *)(v6 - 8);
    size_t v8 = *(void *)(v7 + 64);
    if (v8 <= v5) {
      size_t v9 = v5;
    }
    else {
      size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    if (*(_DWORD *)(v7 + 84)) {
      size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    else {
      size_t v10 = v8 + 1;
    }
    uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
    size_t v39 = v10 + v11;
    uint64_t v12 = sub_24EE55960();
    uint64_t v13 = v12;
    uint64_t v40 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v40 + 80);
    if (((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(v40 + 64) <= v9) {
      size_t v15 = v9;
    }
    else {
      size_t v15 = ((v10 + v14 + ((v10 + v11) & ~v11)) & ~v14) + *(void *)(*(void *)(v12 - 8) + 64);
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 < 4) {
            goto LABEL_19;
          }
          goto LABEL_23;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_19:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v15))) + 3;
          else {
LABEL_23:
          }
            unsigned int v16 = v19 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = ~v11;
    uint64_t v21 = ~v14;
    if (v16 == 2)
    {
      uint64_t v35 = v12;
      uint64_t v22 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
      if (!v22(a1, 1, v6)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      }
      uint64_t v33 = v20;
      unint64_t v23 = (unint64_t)&a1[v39] & v20;
      if (!v22((unsigned __int8 *)v23, 1, v6)) {
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v23, v6);
      }
      uint64_t v21 = ~v14;
      uint64_t v13 = v35;
      (*(void (**)(unint64_t, uint64_t))(v40 + 8))((v23 + v10 + v14) & ~v14, v35);
      uint64_t v20 = v33;
    }
    else if (v16 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v37 + 8))(a1, v38);
    }
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 >= 3)
    {
      if (v15 <= 3) {
        uint64_t v26 = v15;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *a2;
          if (v15 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_41;
        case 2:
          int v27 = *(unsigned __int16 *)a2;
          if (v15 < 4) {
            goto LABEL_41;
          }
          goto LABEL_49;
        case 3:
          int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_41;
          }
          goto LABEL_49;
        case 4:
          int v27 = *(_DWORD *)a2;
          if (v15 < 4)
          {
LABEL_41:
            unsigned int v24 = (v27 | (v25 << (8 * v15))) + 3;
            break;
          }
LABEL_49:
          unsigned int v24 = v27 + 3;
          if (v24 == 2) {
            goto LABEL_50;
          }
          goto LABEL_43;
        default:
          break;
      }
    }
    if (v24 == 2)
    {
LABEL_50:
      uint64_t v36 = v13;
      uint64_t v29 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v34 = v21;
      if (v29(a2, 1, v6))
      {
        memcpy(a1, a2, v10);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v30 = (void *)((unint64_t)&a1[v39] & v20);
      uint64_t v31 = (void *)((unint64_t)&a2[v39] & v20);
      if (v29((unsigned __int8 *)v31, 1, v6))
      {
        memcpy(v30, v31, v10);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v30, v31, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v40 + 32))(((unint64_t)v30 + v10 + v14) & v34, ((unint64_t)v31 + v10 + v14) & v34, v36);
      char v28 = 2;
    }
    else
    {
LABEL_43:
      if (v24 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        char v28 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v37 + 32))(a1, a2, v38);
        char v28 = 0;
      }
    }
    a1[v15] = v28;
  }
  return a1;
}

uint64_t sub_24EDB17CC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(sub_24EE55880() - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(sub_24EE55960() - 8);
  if (v8) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = v7 + 1;
  }
  if (((((v11 + v9) & ~v9) + v11 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
     + *(void *)(v10 + 64) <= v5)
    unint64_t v12 = v5;
  else {
    unint64_t v12 = ((((v11 + v9) & ~v9) + v11 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
  }
        + *(void *)(v10 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_28;
  }
  unint64_t v13 = v12 + 1;
  char v14 = 8 * (v12 + 1);
  if ((v12 + 1) <= 3)
  {
    unsigned int v17 = ((a2 + ~(-1 << v14) - 253) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v17 < 2)
    {
LABEL_28:
      unsigned int v19 = *((unsigned __int8 *)a1 + v12);
      if (v19 >= 3) {
        return (v19 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_28;
  }
LABEL_20:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v13 | v18) + 254;
}

void sub_24EDB19F0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v8 = *(void *)(sub_24EE55880() - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  if (v9 > v7) {
    unint64_t v7 = *(void *)(v8 + 64);
  }
  int v10 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(sub_24EE55960() - 8);
  if (v10) {
    unint64_t v13 = v9;
  }
  else {
    unint64_t v13 = v9 + 1;
  }
  unint64_t v14 = ((((v13 + v11) & ~v11) + v13 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(void *)(v12 + 64);
  if (v14 <= v7) {
    unint64_t v14 = v7;
  }
  size_t v15 = v14 + 1;
  if (a3 < 0xFE)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 + ~(-1 << (8 * v15)) - 253) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v17 = a2 - 254;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v14 != -1)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14 + 1);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        break;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x24EDB1C88);
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v16)
    {
      case 1:
        a1[v15] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v15] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v15] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v14] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24EDB1CB0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(sub_24EE55880() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v6 = v5 + 1;
  }
  unint64_t v7 = (v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = *(void *)(sub_24EE55960() - 8);
  unint64_t v9 = ((v7 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(void *)(v8 + 64);
  if (v9 <= v3) {
    unint64_t v9 = v3;
  }
  uint64_t result = a1[v9];
  if (result >= 3)
  {
    if (v9 <= 3) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_17;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v13 = (v12 | ((result - 3) << (8 * v9))) + 3;
        unsigned int v14 = v12 + 3;
        if (v9 >= 4) {
          uint64_t result = v14;
        }
        else {
          uint64_t result = v13;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24EDB1E48(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(sub_24EE55880() - 8);
  size_t v7 = *(void *)(v6 + 64);
  if (v7 > v5) {
    size_t v5 = *(void *)(v6 + 64);
  }
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (a2 > 2)
  {
    uint64_t v12 = *(void *)(sub_24EE55960() - 8);
    unint64_t v13 = ((v9 + v8 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
        + *(void *)(v12 + 64);
    if (v13 <= v5) {
      size_t v14 = v5;
    }
    else {
      size_t v14 = v13;
    }
    if (v14 <= 3) {
      char v15 = ((a2 - 3) >> (8 * v14)) + 3;
    }
    else {
      char v15 = 3;
    }
    if (v14 <= 3) {
      int v16 = (a2 - 3) & ~(-1 << (8 * v14));
    }
    else {
      int v16 = a2 - 3;
    }
    a1[v14] = v15;
    if (v14 >= 4) {
      int v17 = 4;
    }
    else {
      int v17 = v14;
    }
    bzero(a1, v14);
    switch(v17)
    {
      case 2:
        *(_WORD *)a1 = v16;
        break;
      case 3:
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
        break;
      case 4:
        *(_DWORD *)a1 = v16;
        break;
      default:
        *a1 = v16;
        break;
    }
  }
  else
  {
    uint64_t v10 = *(void *)(sub_24EE55960() - 8);
    unint64_t v11 = ((v9 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + *(void *)(v10 + 64);
    if (v11 <= v5) {
      unint64_t v11 = v5;
    }
    a1[v11] = a2;
  }
}

unsigned char *sub_24EDB2074(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EDB2110);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_24EDB2138(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDB2204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24EDB222C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2248()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2264()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2280()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB229C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB22B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB22D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB22F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB230C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2328()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2344()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB2360()
{
  return swift_getWitnessTable();
}

BOOL static DynamicTypeSize.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

unint64_t sub_24EDB239C(char a1)
{
  unint64_t result = 0x616D536172747865;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C616D73;
      break;
    case 2:
      unint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      unint64_t result = 0x656772616CLL;
      break;
    case 4:
      unint64_t result = 0x72614C6172747865;
      break;
    case 5:
      unint64_t result = 0x7478456172747865;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      unint64_t result = 0x6269737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EDB250C(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3840();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2548(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3840();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2584(uint64_t a1)
{
  unint64_t v2 = sub_24EDB37EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB25C0(uint64_t a1)
{
  unint64_t v2 = sub_24EDB37EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB25FC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3798();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2638(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3798();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2674(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3744();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB26B0(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3744();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB26EC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB36F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2728(uint64_t a1)
{
  unint64_t v2 = sub_24EDB36F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EDB2764()
{
  return sub_24EDB239C(*v0);
}

uint64_t sub_24EDB276C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDB3C10(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EDB2794(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_24EDB27A0(uint64_t a1)
{
  unint64_t v2 = sub_24EDB369C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB27DC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB369C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2818(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3894();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2854(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3894();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2890(uint64_t a1)
{
  unint64_t v2 = sub_24EDB38E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB28CC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB38E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2908(uint64_t a1)
{
  unint64_t v2 = sub_24EDB393C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2944(uint64_t a1)
{
  unint64_t v2 = sub_24EDB393C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2980(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3A8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB29BC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3A8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB29F8(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3990();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2A34(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3990();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2A70(uint64_t a1)
{
  unint64_t v2 = sub_24EDB39E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2AAC(uint64_t a1)
{
  unint64_t v2 = sub_24EDB39E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB2AE8(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3A38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB2B24(uint64_t a1)
{
  unint64_t v2 = sub_24EDB3A38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicTypeSize.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE698);
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v68 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE690);
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE688);
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v62 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE680);
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE678);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE640);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE638);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE668);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE650);
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE660);
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  int v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE658);
  uint64_t v41 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE670);
  uint64_t v40 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unsigned int v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE648);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v72 = v25;
  uint64_t v73 = v26;
  MEMORY[0x270FA5388](v25);
  char v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDB369C();
  sub_24EE578D0();
  switch((char)v71)
  {
    case 1:
      char v75 = 1;
      sub_24EDB3A38();
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v19);
      goto LABEL_15;
    case 2:
      char v76 = 2;
      sub_24EDB39E4();
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v43);
      goto LABEL_15;
    case 3:
      char v77 = 3;
      sub_24EDB3990();
      int v32 = v44;
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
      goto LABEL_15;
    case 4:
      char v78 = 4;
      sub_24EDB393C();
      uint64_t v33 = v47;
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v49);
      goto LABEL_15;
    case 5:
      char v79 = 5;
      sub_24EDB38E8();
      uint64_t v34 = v50;
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
      goto LABEL_15;
    case 6:
      char v80 = 6;
      sub_24EDB3894();
      uint64_t v35 = v53;
      uint64_t v31 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v55);
      goto LABEL_15;
    case 7:
      char v81 = 7;
      sub_24EDB3840();
      uint64_t v36 = v56;
      uint64_t v31 = v72;
      sub_24EE57740();
      uint64_t v38 = v57;
      uint64_t v37 = v58;
      goto LABEL_14;
    case 8:
      char v82 = 8;
      sub_24EDB37EC();
      uint64_t v36 = v59;
      uint64_t v31 = v72;
      sub_24EE57740();
      uint64_t v38 = v60;
      uint64_t v37 = v61;
      goto LABEL_14;
    case 9:
      char v83 = 9;
      sub_24EDB3798();
      uint64_t v36 = v62;
      uint64_t v31 = v72;
      sub_24EE57740();
      uint64_t v38 = v63;
      uint64_t v37 = v64;
      goto LABEL_14;
    case 10:
      char v84 = 10;
      sub_24EDB3744();
      uint64_t v36 = v65;
      uint64_t v31 = v72;
      sub_24EE57740();
      uint64_t v38 = v66;
      uint64_t v37 = v67;
      goto LABEL_14;
    case 11:
      char v85 = 11;
      sub_24EDB36F0();
      uint64_t v36 = v68;
      uint64_t v31 = v72;
      sub_24EE57740();
      uint64_t v38 = v69;
      uint64_t v37 = v70;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v28, v31);
      break;
    default:
      char v74 = 0;
      sub_24EDB3A8C();
      uint64_t v29 = v72;
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v28, v29);
      break;
  }
  return result;
}

unint64_t sub_24EDB369C()
{
  unint64_t result = qword_26B1DD520;
  if (!qword_26B1DD520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD520);
  }
  return result;
}

unint64_t sub_24EDB36F0()
{
  unint64_t result = qword_2699661D8;
  if (!qword_2699661D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699661D8);
  }
  return result;
}

unint64_t sub_24EDB3744()
{
  unint64_t result = qword_2699661E0;
  if (!qword_2699661E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699661E0);
  }
  return result;
}

unint64_t sub_24EDB3798()
{
  unint64_t result = qword_2699661E8;
  if (!qword_2699661E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699661E8);
  }
  return result;
}

unint64_t sub_24EDB37EC()
{
  unint64_t result = qword_2699661F0;
  if (!qword_2699661F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699661F0);
  }
  return result;
}

unint64_t sub_24EDB3840()
{
  unint64_t result = qword_2699661F8;
  if (!qword_2699661F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699661F8);
  }
  return result;
}

unint64_t sub_24EDB3894()
{
  unint64_t result = qword_269966200;
  if (!qword_269966200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966200);
  }
  return result;
}

unint64_t sub_24EDB38E8()
{
  unint64_t result = qword_269966208;
  if (!qword_269966208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966208);
  }
  return result;
}

unint64_t sub_24EDB393C()
{
  unint64_t result = qword_269966210;
  if (!qword_269966210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966210);
  }
  return result;
}

unint64_t sub_24EDB3990()
{
  unint64_t result = qword_26B1DD538;
  if (!qword_26B1DD538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD538);
  }
  return result;
}

unint64_t sub_24EDB39E4()
{
  unint64_t result = qword_269966218;
  if (!qword_269966218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966218);
  }
  return result;
}

unint64_t sub_24EDB3A38()
{
  unint64_t result = qword_269966220;
  if (!qword_269966220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966220);
  }
  return result;
}

unint64_t sub_24EDB3A8C()
{
  unint64_t result = qword_269966228;
  if (!qword_269966228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966228);
  }
  return result;
}

uint64_t DynamicTypeSize.init(from:)(void *a1)
{
  return sub_24EDB4178(a1);
}

uint64_t sub_24EDB3AF8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EDB4178(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24EDB3B24(void *a1)
{
  return DynamicTypeSize.encode(to:)(a1, *v1);
}

BOOL static DynamicTypeSize.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL sub_24EDB3B50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_24EDB3B64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_24EDB3B78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_24EDB3B8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t DynamicTypeSize.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t DynamicTypeSize.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24EDB3C10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x616D536172747865 && a2 == 0xEA00000000006C6CLL || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C616D73 && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72614C6172747865 && a2 == 0xEA00000000006567 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7478456172747865 && a2 == 0xEF656772614C6172 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EE7C8B0 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00317974696C69 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00327974696C69 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00337974696C69 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00347974696C69 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00357974696C69)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v5 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_24EDB4178(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966238);
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  MEMORY[0x270FA5388](v2);
  char v77 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966240);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  char v76 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966248);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x270FA5388](v6);
  char v75 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966250);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  char v74 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966258);
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966260);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  char v80 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966268);
  uint64_t v60 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  char v79 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966270);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  char v78 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966278);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v72 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966280);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v71 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966288);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966290);
  uint64_t v50 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966298);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  char v81 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_24EDB369C();
  uint64_t v26 = v82;
  sub_24EE578C0();
  if (v26) {
    goto LABEL_18;
  }
  uint64_t v47 = v20;
  v46[1] = v18;
  char v82 = v17;
  char v28 = v78;
  uint64_t v27 = v79;
  uint64_t v29 = v80;
  uint64_t v30 = v24;
  uint64_t v31 = sub_24EE57720();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_24EE57560();
    swift_allocError();
    uint64_t v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    *uint64_t v37 = &type metadata for DynamicTypeSize;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v37, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v30, v21);
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v84 = 1;
      sub_24EDB3A38();
      uint64_t v38 = v82;
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
      uint64_t v34 = v38;
      uint64_t v35 = (uint64_t *)&v87;
      goto LABEL_14;
    case 2:
      char v85 = 2;
      sub_24EDB39E4();
      uint64_t v39 = v71;
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v53 + 8);
      uint64_t v34 = v39;
      uint64_t v35 = (uint64_t *)v88;
      goto LABEL_14;
    case 3:
      char v86 = 3;
      sub_24EDB3990();
      uint64_t v40 = v72;
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v55 + 8);
      uint64_t v34 = v40;
      uint64_t v35 = &v89;
      goto LABEL_14;
    case 4:
      v88[0] = 4;
      sub_24EDB393C();
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v34 = v28;
      uint64_t v35 = &v90;
      goto LABEL_14;
    case 5:
      v88[1] = 5;
      sub_24EDB38E8();
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v60 + 8);
      uint64_t v34 = v27;
      uint64_t v35 = &v91;
      goto LABEL_14;
    case 6:
      v88[2] = 6;
      sub_24EDB3894();
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v34 = v29;
      uint64_t v35 = &v92;
      goto LABEL_14;
    case 7:
      v88[3] = 7;
      sub_24EDB3840();
      uint64_t v41 = v73;
      sub_24EE57690();
      uint64_t v43 = v63;
      uint64_t v42 = v64;
      goto LABEL_20;
    case 8:
      v88[4] = 8;
      sub_24EDB37EC();
      uint64_t v44 = v74;
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v34 = v44;
      uint64_t v35 = (uint64_t *)&v81;
      goto LABEL_14;
    case 9:
      v88[5] = 9;
      sub_24EDB3798();
      uint64_t v41 = v75;
      sub_24EE57690();
      uint64_t v43 = v65;
      uint64_t v42 = v66;
      goto LABEL_20;
    case 0xA:
      v88[6] = 10;
      sub_24EDB3744();
      uint64_t v41 = v76;
      sub_24EE57690();
      uint64_t v43 = v67;
      uint64_t v42 = v68;
      goto LABEL_20;
    case 0xB:
      v88[7] = 11;
      sub_24EDB36F0();
      uint64_t v41 = v77;
      sub_24EE57690();
      uint64_t v43 = v69;
      uint64_t v42 = v70;
LABEL_20:
      uint64_t v33 = *(void (**)(char *, uint64_t))(v43 + 8);
      uint64_t v34 = v41;
      break;
    default:
      char v83 = 0;
      sub_24EDB3A8C();
      int v32 = v47;
      sub_24EE57690();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v50 + 8);
      uint64_t v34 = v32;
      uint64_t v35 = (uint64_t *)&v78;
LABEL_14:
      uint64_t v42 = *(v35 - 32);
      break;
  }
  v33(v34, v42);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v30, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  return v24;
}

unint64_t sub_24EDB4E38()
{
  unint64_t result = qword_26B1DD5E8;
  if (!qword_26B1DD5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicTypeSize()
{
  return &type metadata for DynamicTypeSize;
}

uint64_t _s15FitnessCanvasUI15DynamicTypeSizeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15FitnessCanvasUI15DynamicTypeSizeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDB5000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.CodingKeys()
{
  return &type metadata for DynamicTypeSize.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.ExtraSmallCodingKeys()
{
  return &type metadata for DynamicTypeSize.ExtraSmallCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.SmallCodingKeys()
{
  return &type metadata for DynamicTypeSize.SmallCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.MediumCodingKeys()
{
  return &type metadata for DynamicTypeSize.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.LargeCodingKeys()
{
  return &type metadata for DynamicTypeSize.LargeCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.ExtraLargeCodingKeys()
{
  return &type metadata for DynamicTypeSize.ExtraLargeCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.ExtraExtraLargeCodingKeys()
{
  return &type metadata for DynamicTypeSize.ExtraExtraLargeCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.ExtraExtraExtraLargeCodingKeys()
{
  return &type metadata for DynamicTypeSize.ExtraExtraExtraLargeCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.Accessibility1CodingKeys()
{
  return &type metadata for DynamicTypeSize.Accessibility1CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.Accessibility2CodingKeys()
{
  return &type metadata for DynamicTypeSize.Accessibility2CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.Accessibility3CodingKeys()
{
  return &type metadata for DynamicTypeSize.Accessibility3CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.Accessibility4CodingKeys()
{
  return &type metadata for DynamicTypeSize.Accessibility4CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicTypeSize.Accessibility5CodingKeys()
{
  return &type metadata for DynamicTypeSize.Accessibility5CodingKeys;
}

unint64_t sub_24EDB50FC()
{
  unint64_t result = qword_269966230;
  if (!qword_269966230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966230);
  }
  return result;
}

unint64_t sub_24EDB5154()
{
  unint64_t result = qword_26B1DD588;
  if (!qword_26B1DD588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD588);
  }
  return result;
}

unint64_t sub_24EDB51AC()
{
  unint64_t result = qword_26B1DD580;
  if (!qword_26B1DD580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD580);
  }
  return result;
}

unint64_t sub_24EDB5204()
{
  unint64_t result = qword_26B1DD558;
  if (!qword_26B1DD558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD558);
  }
  return result;
}

unint64_t sub_24EDB525C()
{
  unint64_t result = qword_26B1DD550;
  if (!qword_26B1DD550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD550);
  }
  return result;
}

unint64_t sub_24EDB52B4()
{
  unint64_t result = qword_26B1DD568;
  if (!qword_26B1DD568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD568);
  }
  return result;
}

unint64_t sub_24EDB530C()
{
  unint64_t result = qword_26B1DD560;
  if (!qword_26B1DD560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD560);
  }
  return result;
}

unint64_t sub_24EDB5364()
{
  unint64_t result = qword_26B1DD548;
  if (!qword_26B1DD548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD548);
  }
  return result;
}

unint64_t sub_24EDB53BC()
{
  unint64_t result = qword_26B1DD540;
  if (!qword_26B1DD540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD540);
  }
  return result;
}

unint64_t sub_24EDB5414()
{
  unint64_t result = qword_26B1DD578;
  if (!qword_26B1DD578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD578);
  }
  return result;
}

unint64_t sub_24EDB546C()
{
  unint64_t result = qword_26B1DD570;
  if (!qword_26B1DD570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD570);
  }
  return result;
}

unint64_t sub_24EDB54C4()
{
  unint64_t result = qword_26B1DD508;
  if (!qword_26B1DD508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD508);
  }
  return result;
}

unint64_t sub_24EDB551C()
{
  unint64_t result = qword_26B1DD500;
  if (!qword_26B1DD500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD500);
  }
  return result;
}

unint64_t sub_24EDB5574()
{
  unint64_t result = qword_26B1DD518;
  if (!qword_26B1DD518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD518);
  }
  return result;
}

unint64_t sub_24EDB55CC()
{
  unint64_t result = qword_26B1DD510;
  if (!qword_26B1DD510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD510);
  }
  return result;
}

unint64_t sub_24EDB5624()
{
  unint64_t result = qword_26B1DD598;
  if (!qword_26B1DD598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD598);
  }
  return result;
}

unint64_t sub_24EDB567C()
{
  unint64_t result = qword_26B1DD590;
  if (!qword_26B1DD590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD590);
  }
  return result;
}

unint64_t sub_24EDB56D4()
{
  unint64_t result = qword_26B1DD5A8;
  if (!qword_26B1DD5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5A8);
  }
  return result;
}

unint64_t sub_24EDB572C()
{
  unint64_t result = qword_26B1DD5A0;
  if (!qword_26B1DD5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5A0);
  }
  return result;
}

unint64_t sub_24EDB5784()
{
  unint64_t result = qword_26B1DD5B8;
  if (!qword_26B1DD5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5B8);
  }
  return result;
}

unint64_t sub_24EDB57DC()
{
  unint64_t result = qword_26B1DD5B0;
  if (!qword_26B1DD5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5B0);
  }
  return result;
}

unint64_t sub_24EDB5834()
{
  unint64_t result = qword_26B1DD5C8;
  if (!qword_26B1DD5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5C8);
  }
  return result;
}

unint64_t sub_24EDB588C()
{
  unint64_t result = qword_26B1DD5C0;
  if (!qword_26B1DD5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5C0);
  }
  return result;
}

unint64_t sub_24EDB58E4()
{
  unint64_t result = qword_26B1DD5D8;
  if (!qword_26B1DD5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5D8);
  }
  return result;
}

unint64_t sub_24EDB593C()
{
  unint64_t result = qword_26B1DD5D0;
  if (!qword_26B1DD5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD5D0);
  }
  return result;
}

unint64_t sub_24EDB5994()
{
  unint64_t result = qword_26B1DD530;
  if (!qword_26B1DD530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD530);
  }
  return result;
}

unint64_t sub_24EDB59EC()
{
  unint64_t result = qword_26B1DD528;
  if (!qword_26B1DD528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD528);
  }
  return result;
}

uint64_t dispatch thunk of static CanvasArtworkProtocol.placeholder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_24EDB5A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE55E80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_24EDB5E5C(&qword_26B1DE2F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE510);
  sub_24EDB5E00();
  sub_24EE57490();
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v23 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v11)
  {
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v16 = v15 | (v13 << 6);
LABEL_26:
    switch(*(unsigned char *)(*(void *)(a1 + 48) + v16))
    {
      case 1:
        sub_24EE55E70();
        goto LABEL_5;
      case 2:
        sub_24EE55E50();
        goto LABEL_5;
      case 3:
        continue;
      default:
        sub_24EE55E60();
LABEL_5:
        sub_24EDB5E5C(&qword_26B1DE2E8);
        sub_24EE57130();
        uint64_t v14 = *v12;
        (*v12)(a2, v4);
        sub_24EE57130();
        uint64_t v26 = v24 | v25;
        sub_24EDB5E5C(&qword_26B1DE2F8);
        sub_24EE57910();
        v14((uint64_t)v7, v4);
        break;
    }
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v17 >= v23) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v22 + 8 * v17);
  ++v13;
  if (v18) {
    goto LABEL_25;
  }
  int64_t v13 = v17 + 1;
  if (v17 + 1 >= v23) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v22 + 8 * v13);
  if (v18) {
    goto LABEL_25;
  }
  int64_t v13 = v17 + 2;
  if (v17 + 2 >= v23) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v22 + 8 * v13);
  if (v18) {
    goto LABEL_25;
  }
  int64_t v13 = v17 + 3;
  if (v17 + 3 >= v23) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v22 + 8 * v13);
  if (v18) {
    goto LABEL_25;
  }
  int64_t v13 = v17 + 4;
  if (v17 + 4 >= v23) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v22 + 8 * v13);
  if (v18)
  {
LABEL_25:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    goto LABEL_26;
  }
  int64_t v19 = v17 + 5;
  if (v19 < v23)
  {
    unint64_t v18 = *(void *)(v22 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v13 >= v23) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v22 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_25;
        }
      }
LABEL_31:
      __break(1u);
      JUMPOUT(0x24EDB5DF0);
    }
    int64_t v13 = v19;
    goto LABEL_25;
  }
  return swift_release();
}

unint64_t sub_24EDB5E00()
{
  unint64_t result = qword_26B1DE518;
  if (!qword_26B1DE518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DE518);
  }
  return result;
}

uint64_t sub_24EDB5E5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24EE55E80();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t View.magicPocketTarget()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24EE55DD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - v9;
  MEMORY[0x25334D0C0](v8);
  unint64_t v11 = sub_24EDB602C();
  v14[0] = a2;
  v14[1] = v11;
  swift_getWitnessTable();
  sub_24EC90894(v6);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  sub_24EC90894(v10);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v3);
}

unint64_t sub_24EDB602C()
{
  unint64_t result = qword_2699662A8[0];
  if (!qword_2699662A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699662A8);
  }
  return result;
}

uint64_t View.magicPocket<A, B>(backgroundStyle:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v41 = a7;
  uint64_t v36 = a5;
  uint64_t v37 = a8;
  v35[0] = a4;
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v38 = a1;
  uint64_t v42 = a9;
  uint64_t v11 = *(void *)(a6 - 8);
  v35[1] = a10;
  MEMORY[0x270FA5388](a1);
  int64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  uint64_t v47 = v16;
  uint64_t v48 = v17;
  uint64_t v18 = type metadata accessor for MagicPocketViewModifier();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v35 - v20;
  uint64_t v22 = sub_24EE55DD0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v35 - v28;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v38, a6, v27);
  uint64_t v30 = v39;
  swift_retain();
  sub_24EDB63A4((uint64_t)v13, v40, v30, v36, a6, (uint64_t)v21);
  uint64_t v31 = v41;
  MEMORY[0x25334D0C0](v21, v35[0], v18, v41);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = v31;
  uint64_t v44 = WitnessTable;
  swift_getWitnessTable();
  sub_24EC90894(v25);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v23 + 8);
  v33(v25, v22);
  sub_24EC90894(v29);
  return ((uint64_t (*)(char *, uint64_t))v33)(v29, v22);
}

uint64_t type metadata accessor for MagicPocketViewModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EDB63A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v11 = type metadata accessor for MagicPocketViewModifier();
  uint64_t v12 = (void *)(a6 + *(int *)(v11 + 52));
  *uint64_t v12 = a2;
  v12[1] = a3;
  int64_t v13 = (void *)(a6 + *(int *)(v11 + 56));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269966360);
  uint64_t result = sub_24EE56B30();
  *int64_t v13 = a4;
  v13[1] = a5;
  return result;
}

uint64_t sub_24EDB6488()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB64EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDB6590()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24EDB6638(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    int64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *int64_t v13 = *v14;
    v13[1] = v14[1];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24EDB6768(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24EDB67F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  __n128 v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24EDB68A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  __n128 v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24EDB696C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  __n128 v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24EDB69F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *int v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v10 = *(void *)v9;
  swift_bridgeObjectRelease();
  v10[1] = *(void *)(v9 + 8);
  swift_release();
  return a1;
}

uint64_t sub_24EDB6AA8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24EDB6BFCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_24EDB6C10(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24EDB6E04);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for MagicPocketTargetViewModifier()
{
  return &type metadata for MagicPocketTargetViewModifier;
}

uint64_t sub_24EDB6E3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EDB6E80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269966340);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24EE60F90;
  *(void *)(v4 + 32) = a1;
  uint64_t v6 = v4;
  sub_24EE57150();
  *a2 = v6;
  return swift_retain();
}

uint64_t sub_24EDB6F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EE56B80();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269966338);
  unsigned int v7 = (uint64_t *)(a2 + *(int *)(result + 36));
  *unsigned int v7 = v4;
  v7[1] = (uint64_t)sub_24EDB6E80;
  v7[2] = 0;
  return result;
}

void sub_24EDB6FA4()
{
  qword_2699662A0 = MEMORY[0x263F8EE78];
}

uint64_t sub_24EDB6FB8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v1 = v3;
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v8 = *(void *)(v3 + 24) >> 1;
    if (v8 >= v5)
    {
      unint64_t v9 = *(void *)(a1 + 16);
      if (v9) {
        goto LABEL_5;
      }
LABEL_17:
      if (!v2) {
        goto LABEL_18;
      }
      goto LABEL_22;
    }
  }
  if (v4 <= v5) {
    v4 += v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x25334DC00](isUniquelyReferenced_nonNull_native, v4, 1, v3);
  swift_bridgeObjectRelease();
  *unint64_t v1 = v3;
  uint64_t v8 = *(void *)(v3 + 24) >> 1;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v3 + 16);
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v11 = v3 + 8 * v10 + 32;
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9) {
    goto LABEL_25;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269966370);
  swift_arrayInitWithCopy();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(*v1 + 16);
  BOOL v14 = __OFADD__(v13, v9);
  uint64_t v15 = v13 + v9;
  if (v14)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    uint64_t result = sub_24EE57680();
    __break(1u);
    return result;
  }
  *(void *)(*v1 + 16) = v15;
LABEL_18:
  swift_bridgeObjectRelease();
  return sub_24EE57150();
}

uint64_t sub_24EDB7164@<X0>(void *a1@<X8>)
{
  if (qword_2699648F0 != -1) {
    swift_once();
  }
  *a1 = qword_2699662A0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EDB71D0(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  return sub_24EDB6FB8(v3);
}

uint64_t sub_24EDB721C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v51 = a3;
  uint64_t v48 = *(a2 - 1);
  uint64_t v50 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v47 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_24EE562F0();
  uint64_t v52 = a2[2];
  sub_24EE55DD0();
  uint64_t v41 = a2[3];
  uint64_t v36 = a2[5];
  uint64_t v5 = v36;
  sub_24EE563A0();
  sub_24EE55DD0();
  sub_24EE56240();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F1B428];
  uint64_t v68 = MEMORY[0x263F1B428];
  uint64_t v69 = WitnessTable;
  uint64_t v8 = MEMORY[0x263F18E48];
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = v7;
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56210();
  uint64_t v9 = sub_24EE55DD0();
  uint64_t v10 = a2[4];
  uint64_t v64 = v10;
  uint64_t v65 = MEMORY[0x263F19100];
  uint64_t v35 = v10;
  uint64_t v42 = v8;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v62 = v11;
  uint64_t v63 = v12;
  uint64_t v38 = v9;
  swift_getWitnessTable();
  uint64_t v40 = sub_24EE560E0();
  uint64_t v13 = sub_24EE55DD0();
  uint64_t v44 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v37 = (char *)&v35 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966348);
  uint64_t v15 = sub_24EE55DD0();
  uint64_t v45 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v43 = (char *)&v35 - v18;
  uint64_t v19 = v41;
  uint64_t v53 = v52;
  uint64_t v54 = v41;
  uint64_t v55 = v10;
  uint64_t v56 = v5;
  uint64_t v20 = v46;
  uint64_t v57 = v46;
  sub_24EE56130();
  uint64_t v34 = swift_getWitnessTable();
  sub_24EE567D0();
  uint64_t v21 = v48;
  uint64_t v22 = v47;
  (*(void (**)(char *, uint64_t, void *))(v48 + 16))(v47, v20, a2);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v52;
  *((void *)v24 + 3) = v19;
  uint64_t v25 = v36;
  *((void *)v24 + 4) = v35;
  *((void *)v24 + 5) = v25;
  (*(void (**)(char *, char *, void *))(v21 + 32))(&v24[v23], v22, a2);
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v60 = v34;
  uint64_t v61 = v26;
  uint64_t v27 = swift_getWitnessTable();
  sub_24EDB8748();
  sub_24EDB87D8(&qword_269966358, &qword_269966360, (void (*)(void))sub_24EDB879C);
  uint64_t v28 = v39;
  uint64_t v29 = v37;
  sub_24EE56860();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v13);
  uint64_t v30 = sub_24EC8C218(&qword_269966380, &qword_269966348);
  uint64_t v58 = v27;
  uint64_t v59 = v30;
  swift_getWitnessTable();
  uint64_t v31 = v43;
  sub_24EC90894(v28);
  int v32 = *(void (**)(char *, uint64_t))(v45 + 8);
  v32(v28, v15);
  sub_24EC90894(v31);
  return ((uint64_t (*)(char *, uint64_t))v32)(v31, v15);
}

uint64_t sub_24EDB78FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v41 = a1;
  uint64_t v44 = a6;
  uint64_t v42 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v39 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24EE55DD0();
  uint64_t v43 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v31 - v10;
  uint64_t v32 = a3;
  uint64_t v11 = a5;
  uint64_t v31 = a5;
  sub_24EE563A0();
  sub_24EE55DD0();
  sub_24EE56240();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = MEMORY[0x263F1B428];
  uint64_t v60 = MEMORY[0x263F1B428];
  uint64_t v61 = WitnessTable;
  uint64_t v37 = MEMORY[0x263F18E48];
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = v13;
  swift_getWitnessTable();
  uint64_t v35 = sub_24EE55D00();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v36 = sub_24EE56210();
  uint64_t v14 = sub_24EE55DD0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v31 - v19;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v21 = v40;
  uint64_t v56 = v40;
  uint64_t v57 = v11;
  uint64_t v22 = type metadata accessor for MagicPocketViewModifier();
  uint64_t v23 = v41;
  uint64_t v24 = v39;
  (*(void (**)(void))(v41 + *(int *)(v22 + 52)))();
  sub_24EE56DA0();
  uint64_t v25 = v38;
  sub_24EE56980();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, a2);
  uint64_t v45 = a2;
  uint64_t v46 = v32;
  uint64_t v47 = v21;
  uint64_t v48 = v31;
  uint64_t v49 = v23;
  sub_24EE56DA0();
  uint64_t v52 = v21;
  uint64_t v53 = MEMORY[0x263F19100];
  uint64_t v26 = v33;
  uint64_t v27 = swift_getWitnessTable();
  sub_24EE566D0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v26);
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v50 = v27;
  uint64_t v51 = v28;
  swift_getWitnessTable();
  sub_24EC90894(v17);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v17, v14);
  sub_24EC90894(v20);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v14);
}

uint64_t sub_24EDB7E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v22[1] = a6;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v11 = type metadata accessor for MagicPocketViewModifier();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v22 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)v22 - v14, a1, v11, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a2;
  *((void *)v17 + 3) = a3;
  *((void *)v17 + 4) = a4;
  *((void *)v17 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v16], v15, v11);
  sub_24EE563A0();
  sub_24EE55DD0();
  sub_24EE56240();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = MEMORY[0x263F1B428];
  uint64_t v27 = MEMORY[0x263F1B428];
  uint64_t v28 = WitnessTable;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v19;
  swift_getWitnessTable();
  uint64_t v23 = sub_24EE55CF0();
  uint64_t v24 = v20;
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EC90894(&v23);
  swift_release();
  uint64_t v23 = v29;
  uint64_t v24 = v30;
  sub_24EC90894(&v23);
  return swift_release();
}

uint64_t sub_24EDB80C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v35 = a6;
  uint64_t v34 = sub_24EE563A0();
  uint64_t v10 = sub_24EE55DD0();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = sub_24EE56240();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v30 - v18;
  v44[0] = a2;
  v44[1] = a3;
  v44[2] = a4;
  v44[3] = a5;
  uint64_t v20 = type metadata accessor for MagicPocketViewModifier();
  char v21 = sub_24EDB84B0(v31, v20);
  uint64_t v22 = sub_24EE56AB0();
  uint64_t v23 = MEMORY[0x263F1B428];
  v44[0] = v22;
  if (v21)
  {
    sub_24EE564E0();
    sub_24EE566E0();
    swift_release();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v36 = v23;
    uint64_t v37 = WitnessTable;
    swift_getWitnessTable();
    sub_24EC90894(v12);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v30 + 8);
    v25(v12, v10);
    sub_24EC90894(v15);
    sub_24EC908D0((uint64_t)v12, v10);
    v25(v12, v10);
    v25(v15, v10);
  }
  else
  {
    uint64_t v26 = swift_getWitnessTable();
    uint64_t v42 = v23;
    uint64_t v43 = v26;
    swift_getWitnessTable();
    sub_24EC909C8((uint64_t)v44, v10, MEMORY[0x263F1B440]);
    swift_release();
  }
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v40 = v23;
  uint64_t v41 = v27;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v23;
  uint64_t v28 = v32;
  swift_getWitnessTable();
  sub_24EC90894(v19);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v19, v28);
}

uint64_t sub_24EDB84B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (CGFloat *)(v2 + *(int *)(a2 + 56));
  CGFloat v4 = *v3;
  CGFloat v5 = v3[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269966388);
  sub_24EE56B40();
  uint64_t v6 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_24EE55C00();
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    sub_24EE56B40();
    uint64_t v6 = *(void *)(v17 + 16);
    if (v6)
    {
      type metadata accessor for CGRect(0);
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      uint64_t v12 = v6 - 1;
      do
      {
        swift_retain();
        sub_24EE55C40();
        v19.origin.x = v4;
        v19.origin.y = v5;
        v19.size.width = v15;
        v19.size.height = v16;
        v18.origin.x = 0.0;
        v18.origin.y = 0.0;
        v18.size.width = v8;
        v18.size.height = v10;
        uint64_t v6 = CGRectIntersectsRect(v18, v19);
        swift_release();
        if (v6) {
          break;
        }
      }
      while (v12 != v11++);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_24EDB85F0()
{
  return sub_24EE56B50();
}

uint64_t sub_24EDB866C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EDB8688@<X0>(uint64_t a1@<X8>)
{
  return sub_24EDB78FC(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24EDB869C()
{
  type metadata accessor for MagicPocketViewModifier();
  return sub_24EDB85F0();
}

unint64_t sub_24EDB8748()
{
  unint64_t result = qword_269966350;
  if (!qword_269966350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966350);
  }
  return result;
}

uint64_t sub_24EDB879C()
{
  return sub_24EDB87D8(&qword_269966368, &qword_269966370, (void (*)(void))sub_24EDB8844);
}

uint64_t sub_24EDB87D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EDB8844()
{
  unint64_t result = qword_269966378;
  if (!qword_269966378)
  {
    type metadata accessor for CGRect(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966378);
  }
  return result;
}

uint64_t sub_24EDB889C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EDB7E2C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24EDB88B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  type metadata accessor for MagicPocketViewModifier();
  return sub_24EDB80C8(a1, v5, v6, v7, v8, a2);
}

ValueMetadata *type metadata accessor for MagicPocketTargetBoundsPreferenceKey()
{
  return &type metadata for MagicPocketTargetBoundsPreferenceKey;
}

unint64_t sub_24EDB8980()
{
  unint64_t result = qword_269966390;
  if (!qword_269966390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966338);
    sub_24EC8C218(&qword_269966398, &qword_269966330);
    sub_24EC8C218(&qword_2699663A0, &qword_2699663A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966390);
  }
  return result;
}

uint64_t sub_24EDB8A44()
{
  return swift_getWitnessTable();
}

uint64_t CanvasLayout.densityFactor<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = type metadata accessor for CanvasVerticalGridLayout();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  MEMORY[0x270FA5388](v9);
  char v80 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v85 = (char *)&v78 - v12;
  uint64_t v13 = type metadata accessor for CanvasHorizontalGridLayout();
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  MEMORY[0x270FA5388](v13);
  char v78 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v79 = (char *)&v78 - v16;
  uint64_t v17 = type metadata accessor for CanvasGridAxis();
  uint64_t v86 = *(void *)(v17 - 8);
  uint64_t v87 = v17;
  MEMORY[0x270FA5388](v17);
  CGRect v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v88 = (char *)&v78 - v21;
  uint64_t v89 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v78 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v78 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v78 - v32;
  uint64_t v93 = v7;
  unint64_t v94 = a3;
  uint64_t v95 = v8;
  uint64_t v96 = a4;
  uint64_t v34 = type metadata accessor for CanvasSectionLayout();
  __n128 v35 = MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v78 - v36;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v38 + 16))((char *)&v78 - v36, v92, v34, v35);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v40 = v89;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v33, v37, v7);
      MEMORY[0x25334D690](&v93, v33, *(void *)(v90 + 56), v7, &type metadata for CanvasSectionDensityFactor, *(void *)(v8 + 24));
      v41.n128_u64[0] = v94;
      if ((_BYTE)v96) {
        uint64_t v42 = 1;
      }
      else {
        uint64_t v42 = v93;
      }
      if ((_BYTE)v96) {
        double v43 = 0.0;
      }
      else {
        double v43 = *(double *)&v94;
      }
      if ((_BYTE)v96) {
        uint64_t v44 = 1;
      }
      else {
        uint64_t v44 = v95;
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v33, v7, v41);
      goto LABEL_22;
    case 2:
      uint64_t v45 = v89;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v24, v37, v7);
      MEMORY[0x25334D690](&v93, v24, *(void *)(v90 + 56), v7, &type metadata for CanvasSectionDensityFactor, *(void *)(v8 + 24));
      v46.n128_u64[0] = v94;
      if ((_BYTE)v96) {
        uint64_t v42 = 1;
      }
      else {
        uint64_t v42 = v93;
      }
      if ((_BYTE)v96) {
        double v43 = 0.0;
      }
      else {
        double v43 = *(double *)&v94;
      }
      if ((_BYTE)v96) {
        uint64_t v44 = 1;
      }
      else {
        uint64_t v44 = v95;
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, __n128))(v45 + 8))(v24, v7, v46);
LABEL_22:
      uint64_t v47 = v91;
      *uint64_t v91 = v42;
      *((double *)v47 + 1) = v43;
      _OWORD v47[2] = v44;
      return result;
    case 3:
      uint64_t v50 = v86;
      uint64_t v49 = v87;
      uint64_t v51 = v88;
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v37, v87);
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v19, v51, v49);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v52 = v81;
        uint64_t v53 = v79;
        uint64_t v54 = v19;
        uint64_t v55 = v82;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v79, v54, v82);
        uint64_t v56 = (uint64_t *)v78;
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v78, v53, v55);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v58 = v91;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v59 = (char *)v56 + *(int *)(swift_getTupleTypeMetadata2() + 48);
          uint64_t v60 = v89;
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v30, v59, v7);
          MEMORY[0x25334D690](&v93, v30, *(void *)(v90 + 56), v7, &type metadata for CanvasSectionDensityFactor, *(void *)(v8 + 24));
          v61.n128_u64[0] = v94;
          uint64_t v62 = v55;
          if ((_BYTE)v96) {
            uint64_t v63 = 1;
          }
          else {
            uint64_t v63 = v93;
          }
          uint64_t v92 = v63;
          if ((_BYTE)v96) {
            double v64 = 0.0;
          }
          else {
            double v64 = *(double *)&v94;
          }
          if ((_BYTE)v96) {
            uint64_t v65 = 1;
          }
          else {
            uint64_t v65 = v95;
          }
          (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v30, v7, v61);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v62);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v88, v49);
          *uint64_t v58 = v92;
LABEL_48:
          *((double *)v58 + 1) = v64;
          v58[2] = v65;
          return result;
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v55);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v88, v49);
        uint64_t v76 = *v56;
        uint64_t v77 = v56[2];
      }
      else
      {
        uint64_t v66 = v83;
        uint64_t v67 = v85;
        uint64_t v68 = v19;
        uint64_t v69 = v84;
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v85, v68, v84);
        uint64_t v70 = v80;
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v80, v67, v69);
        int v71 = swift_getEnumCaseMultiPayload();
        uint64_t v58 = v91;
        if (v71 == 1)
        {
          uint64_t v72 = v89;
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v27, v70, v7);
          MEMORY[0x25334D690](&v93, v27, *(void *)(v90 + 56), v7, &type metadata for CanvasSectionDensityFactor, *(void *)(v8 + 24));
          v73.n128_u64[0] = v94;
          uint64_t v74 = v69;
          if ((_BYTE)v96) {
            uint64_t v75 = 1;
          }
          else {
            uint64_t v75 = v93;
          }
          if ((_BYTE)v96) {
            double v64 = 0.0;
          }
          else {
            double v64 = *(double *)&v94;
          }
          if ((_BYTE)v96) {
            uint64_t v65 = 1;
          }
          else {
            uint64_t v65 = v95;
          }
          (*(void (**)(char *, uint64_t, __n128))(v72 + 8))(v27, v7, v73);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v85, v74);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v88, v49);
          *uint64_t v58 = v75;
          goto LABEL_48;
        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v69);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v88, v49);
        uint64_t v76 = *(void *)v70;
        uint64_t v77 = *((void *)v70 + 1);
      }
      *uint64_t v58 = v76;
      v58[1] = v77;
      v58[2] = 1;
      return result;
    case 4:
      uint64_t result = (*(uint64_t (**)(char *, unint64_t))(*(void *)(a3 - 8) + 8))(v37, a3);
      goto LABEL_24;
    default:
LABEL_24:
      uint64_t v48 = v91;
      *uint64_t v91 = 1;
      v48[1] = 0;
      v48[2] = 1;
      return result;
  }
}

uint64_t CanvasSectionDescriptor.transformed()@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = a2;
  uint64_t v4 = sub_24EE57430();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 72);
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 160);
  v26[0] = v8;
  v26[1] = v22;
  _OWORD v26[2] = v9;
  _OWORD v26[3] = v10;
  type metadata accessor for CanvasSectionHeader();
  uint64_t v11 = sub_24EE57430();
  __n128 v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = v2[1];
  uint64_t v21 = *v2;
  (*(void (**)(char *, char *, __n128))(v16 + 16))((char *)&v20 - v13, (char *)v2 + *(int *)(a1 + 184), v12);
  uint64_t v17 = *(int *)(a1 + 192);
  LOBYTE(v26[0]) = *((unsigned char *)v2 + *(int *)(a1 + 188));
  uint64_t v18 = *(uint64_t *)((char *)v2 + v17);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, (char *)v2 + *(int *)(a1 + 196), v4);
  CanvasSectionViewDescriptor.init(identifier:header:footer:items:metrics:)(v21, v15, (uint64_t)v14, (char *)v26, v18, (uint64_t)v7, v25);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LazyCanvasSectionViewDescriptor.transformed(with:missingPlaceholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v51 = a2;
  __n128 v61 = a4;
  uint64_t v55 = *(void *)(a3 + 56);
  uint64_t v7 = v55;
  uint64_t v8 = sub_24EE57430();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v46 - v9;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v11 = *(void *)(a3 + 80);
  uint64_t v12 = *(void *)(a3 + 144);
  uint64_t v72 = *(void *)(a3 + 16);
  uint64_t v73 = v12;
  uint64_t v94 = v72;
  uint64_t v95 = v10;
  uint64_t v13 = v72;
  uint64_t v14 = v10;
  uint64_t v54 = v10;
  uint64_t v96 = v11;
  uint64_t v97 = v12;
  uint64_t v15 = v11;
  type metadata accessor for CanvasSectionHeader();
  uint64_t v16 = sub_24EE57430();
  __n128 v17 = MEMORY[0x270FA5388](v16);
  CGRect v19 = (char *)&v46 - v18;
  uint64_t v20 = *v4;
  uint64_t v21 = v4[1];
  uint64_t v56 = v19;
  uint64_t v57 = v20;
  uint64_t v53 = v21;
  (*(void (**)(__n128))(v22 + 16))(v17);
  uint64_t v23 = *(int *)(a3 + 168);
  uint64_t v24 = *(int *)(a3 + 172);
  uint64_t v52 = v4;
  v109[0] = *((unsigned char *)v4 + v23);
  uint64_t v108 = *(uint64_t *)((char *)v4 + v24);
  uint64_t v25 = *(void *)(a3 + 24);
  uint64_t v70 = *(void *)(a3 + 32);
  uint64_t v71 = v25;
  uint64_t v74 = v13;
  uint64_t v75 = v25;
  uint64_t v26 = *(void *)(a3 + 40);
  uint64_t v68 = *(void *)(a3 + 48);
  uint64_t v69 = v26;
  uint64_t v76 = v70;
  uint64_t v77 = v26;
  uint64_t v78 = v68;
  uint64_t v79 = v7;
  uint64_t v27 = *(void *)(a3 + 72);
  uint64_t v80 = v14;
  uint64_t v81 = v27;
  uint64_t v28 = v27;
  uint64_t v67 = v27;
  uint64_t v29 = *(void *)(a3 + 96);
  uint64_t v66 = *(void *)(a3 + 88);
  uint64_t v30 = v15;
  uint64_t v82 = v15;
  uint64_t v83 = v66;
  uint64_t v31 = *(void *)(a3 + 104);
  uint64_t v64 = *(void *)(a3 + 112);
  uint64_t v65 = v31;
  uint64_t v84 = v29;
  uint64_t v85 = v31;
  uint64_t v32 = *(void *)(a3 + 120);
  uint64_t v33 = *(void *)(a3 + 128);
  uint64_t v47 = v15;
  uint64_t v48 = v32;
  uint64_t v63 = v33;
  uint64_t v86 = v64;
  uint64_t v87 = v32;
  uint64_t v34 = *(void *)(a3 + 136);
  uint64_t v49 = v29;
  uint64_t v50 = v34;
  uint64_t v88 = v33;
  uint64_t v89 = v34;
  uint64_t v62 = *(void *)(a3 + 152);
  uint64_t v90 = v73;
  uint64_t v91 = v62;
  uint64_t v92 = a1;
  uint64_t v93 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v71;
  uint64_t v35 = v72;
  uint64_t v94 = v72;
  uint64_t v95 = v71;
  uint64_t v37 = v70;
  uint64_t v96 = v70;
  uint64_t v97 = v26;
  uint64_t v38 = v68;
  uint64_t v98 = v68;
  uint64_t v99 = v28;
  uint64_t v100 = v30;
  uint64_t v40 = v65;
  uint64_t v39 = v66;
  uint64_t v101 = v66;
  uint64_t v102 = v29;
  uint64_t v41 = v64;
  uint64_t v103 = v65;
  uint64_t v104 = v64;
  uint64_t v42 = v48;
  uint64_t v105 = v48;
  uint64_t v106 = v63;
  uint64_t v107 = v62;
  type metadata accessor for LazyCanvasItemDescriptor();
  uint64_t v51 = sub_24EE571B0();
  uint64_t v94 = v35;
  uint64_t v95 = v36;
  uint64_t v96 = v37;
  uint64_t v97 = v69;
  uint64_t v98 = v38;
  uint64_t v99 = v67;
  uint64_t v100 = v47;
  uint64_t v101 = v39;
  uint64_t v102 = v49;
  uint64_t v103 = v40;
  uint64_t v104 = v41;
  uint64_t v105 = v42;
  uint64_t v106 = v63;
  uint64_t v107 = v62;
  type metadata accessor for CanvasItemDescriptor();
  swift_getWitnessTable();
  uint64_t v43 = sub_24EE570F0();
  swift_bridgeObjectRelease();
  uint64_t v44 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, (char *)v52 + *(int *)(a3 + 176), v60);
  return CanvasSectionViewDescriptor.init(identifier:header:footer:items:metrics:)(v57, v53, (uint64_t)v56, v109, v43, v44, v61);
}

uint64_t sub_24EDB9C14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)type metadata accessor for LazyCanvasItemDescriptor();
  LazyCanvasItemDescriptor.transformed(with:missingPlaceholders:)(a1, a2, v4, a3);
  uint64_t v5 = type metadata accessor for CanvasItemDescriptor();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

uint64_t sub_24EDB9D58@<X0>(uint64_t a1@<X8>)
{
  return sub_24EDB9C14(*(void *)(v1 + 160), *(void *)(v1 + 168), a1);
}

BOOL static CanvasItemRedactionReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EDB9DC8()
{
  uint64_t result = 0x6C6F686563616C70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79636176697270;
      break;
    case 2:
      uint64_t result = 0x6164696C61766E69;
      break;
    case 3:
      uint64_t result = 0x6F5464656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EDB9E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDBB328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDB9E9C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB9ED8(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB9F14(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB9F50(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDB9F8C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA5DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDB9FC8(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA5DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDBA004(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA684();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBA040(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA684();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDBA07C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA630();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBA0B8(uint64_t a1)
{
  unint64_t v2 = sub_24EDBA630();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CanvasItemRedactionReason.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE620);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE610);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE608);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE618);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE600);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBA534();
  sub_24EE578D0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_24EDBA630();
      __n128 v17 = v23;
      sub_24EE57740();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_24EDBA5DC();
      __n128 v17 = v26;
      sub_24EE57740();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_24EDBA588();
      __n128 v17 = v29;
      sub_24EE57740();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EDBA684();
      sub_24EE57740();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EDBA534()
{
  unint64_t result = qword_26B1DCE00;
  if (!qword_26B1DCE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE00);
  }
  return result;
}

unint64_t sub_24EDBA588()
{
  unint64_t result = qword_2699663B0;
  if (!qword_2699663B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699663B0);
  }
  return result;
}

unint64_t sub_24EDBA5DC()
{
  unint64_t result = qword_2699663B8;
  if (!qword_2699663B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699663B8);
  }
  return result;
}

unint64_t sub_24EDBA630()
{
  unint64_t result = qword_2699663C0;
  if (!qword_2699663C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699663C0);
  }
  return result;
}

unint64_t sub_24EDBA684()
{
  unint64_t result = qword_26B1DCE38;
  if (!qword_26B1DCE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE38);
  }
  return result;
}

uint64_t CanvasItemRedactionReason.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663C8);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663D0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663D8);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663E0);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663E8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  __n128 v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24EDBA534();
  uint64_t v19 = v52;
  sub_24EE578C0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_24EE57720();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_24EE57560();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    *uint64_t v29 = &type metadata for CanvasItemRedactionReason;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_24EDBA630();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_24EE57690();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_24EDBA5DC();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_24EE57690();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_24EDBA588();
      uint64_t v37 = v52;
      sub_24EE57690();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_24EDBA684();
      uint64_t v26 = v52;
      sub_24EE57690();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_24EDBAD0C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CanvasItemRedactionReason.init(from:)(a1, a2);
}

uint64_t sub_24EDBAD24(void *a1)
{
  return CanvasItemRedactionReason.encode(to:)(a1);
}

uint64_t CanvasItemRedactionReason.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t CanvasItemRedactionReason.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24EDBADB4()
{
  unint64_t result = qword_26B1DCE68[0];
  if (!qword_26B1DCE68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DCE68);
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason()
{
  return &type metadata for CanvasItemRedactionReason;
}

unsigned char *_s15FitnessCanvasUI25CanvasItemRedactionReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDBAEE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason.CodingKeys()
{
  return &type metadata for CanvasItemRedactionReason.CodingKeys;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason.PlaceholderCodingKeys()
{
  return &type metadata for CanvasItemRedactionReason.PlaceholderCodingKeys;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason.PrivacyCodingKeys()
{
  return &type metadata for CanvasItemRedactionReason.PrivacyCodingKeys;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason.InvalidatedCodingKeys()
{
  return &type metadata for CanvasItemRedactionReason.InvalidatedCodingKeys;
}

ValueMetadata *type metadata accessor for CanvasItemRedactionReason.FailedToFetchCodingKeys()
{
  return &type metadata for CanvasItemRedactionReason.FailedToFetchCodingKeys;
}

unint64_t sub_24EDBAF64()
{
  unint64_t result = qword_2699663F0;
  if (!qword_2699663F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699663F0);
  }
  return result;
}

unint64_t sub_24EDBAFBC()
{
  unint64_t result = qword_26B1DCE48;
  if (!qword_26B1DCE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE48);
  }
  return result;
}

unint64_t sub_24EDBB014()
{
  unint64_t result = qword_26B1DCE40;
  if (!qword_26B1DCE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE40);
  }
  return result;
}

unint64_t sub_24EDBB06C()
{
  unint64_t result = qword_26B1DCE20;
  if (!qword_26B1DCE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE20);
  }
  return result;
}

unint64_t sub_24EDBB0C4()
{
  unint64_t result = qword_26B1DCE18;
  if (!qword_26B1DCE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE18);
  }
  return result;
}

unint64_t sub_24EDBB11C()
{
  unint64_t result = qword_26B1DCE30;
  if (!qword_26B1DCE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE30);
  }
  return result;
}

unint64_t sub_24EDBB174()
{
  unint64_t result = qword_26B1DCE28;
  if (!qword_26B1DCE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE28);
  }
  return result;
}

unint64_t sub_24EDBB1CC()
{
  unint64_t result = qword_26B1DCE58;
  if (!qword_26B1DCE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE58);
  }
  return result;
}

unint64_t sub_24EDBB224()
{
  unint64_t result = qword_26B1DCE50;
  if (!qword_26B1DCE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE50);
  }
  return result;
}

unint64_t sub_24EDBB27C()
{
  unint64_t result = qword_26B1DCE10;
  if (!qword_26B1DCE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE10);
  }
  return result;
}

unint64_t sub_24EDBB2D4()
{
  unint64_t result = qword_26B1DCE08;
  if (!qword_26B1DCE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCE08);
  }
  return result;
}

uint64_t sub_24EDBB328(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636176697270 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6164696C61766E69 && a2 == 0xEB00000000646574 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F5464656C696166 && a2 == 0xED00006863746546)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static CanvasSectionRedactionReason.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_24EDBB540()
{
  return 0x6F5464656C696166;
}

uint64_t sub_24EDBB564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F5464656C696166 && a2 == 0xED00006863746546)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EE577E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24EDBB620(uint64_t a1)
{
  unint64_t v2 = sub_24EDBB8E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBB65C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBB8E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDBB698(uint64_t a1)
{
  unint64_t v2 = sub_24EDBB934();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBB6D4(uint64_t a1)
{
  unint64_t v2 = sub_24EDBB934();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CanvasSectionRedactionReason.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966400);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBB8E0();
  sub_24EE578D0();
  sub_24EDBB934();
  sub_24EE57740();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_24EDBB8E0()
{
  unint64_t result = qword_269966408;
  if (!qword_269966408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966408);
  }
  return result;
}

unint64_t sub_24EDBB934()
{
  unint64_t result = qword_269966410;
  if (!qword_269966410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966410);
  }
  return result;
}

uint64_t CanvasSectionRedactionReason.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966418);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966420);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBB8E0();
  sub_24EE578C0();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_24EE57720() + 16) == 1)
    {
      sub_24EDBB934();
      sub_24EE57690();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_24EE57560();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
      *uint64_t v13 = &type metadata for CanvasSectionRedactionReason;
      sub_24EE576A0();
      sub_24EE57550();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EDBBC70(void *a1)
{
  return CanvasSectionRedactionReason.init(from:)(a1);
}

uint64_t sub_24EDBBC88(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699663F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966400);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBB8E0();
  sub_24EE578D0();
  sub_24EDBB934();
  sub_24EE57740();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CanvasSectionRedactionReason.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t CanvasSectionRedactionReason.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24EDBBEC8()
{
  unint64_t result = qword_26B1DD0A0;
  if (!qword_26B1DD0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DD0A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasSectionRedactionReason()
{
  return &type metadata for CanvasSectionRedactionReason;
}

unsigned char *_s15FitnessCanvasUI28CanvasSectionRedactionReasonOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EDBBFCCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasSectionRedactionReason.CodingKeys()
{
  return &type metadata for CanvasSectionRedactionReason.CodingKeys;
}

ValueMetadata *type metadata accessor for CanvasSectionRedactionReason.FailedToFetchCodingKeys()
{
  return &type metadata for CanvasSectionRedactionReason.FailedToFetchCodingKeys;
}

unint64_t sub_24EDBC018()
{
  unint64_t result = qword_269966428;
  if (!qword_269966428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966428);
  }
  return result;
}

unint64_t sub_24EDBC070()
{
  unint64_t result = qword_269966430;
  if (!qword_269966430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966430);
  }
  return result;
}

unint64_t sub_24EDBC0C8()
{
  unint64_t result = qword_269966438;
  if (!qword_269966438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966438);
  }
  return result;
}

unint64_t sub_24EDBC120()
{
  unint64_t result = qword_269966440;
  if (!qword_269966440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966440);
  }
  return result;
}

unint64_t sub_24EDBC178()
{
  unint64_t result = qword_269966448;
  if (!qword_269966448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966448);
  }
  return result;
}

uint64_t sub_24EDBC1CC(uint64_t a1)
{
  uint64_t v2 = sub_24EE55D70();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == *MEMORY[0x263F18D48]) {
    return 0;
  }
  if (v4 == *MEMORY[0x263F18D20]) {
    return 1;
  }
  if (v4 == *MEMORY[0x263F18D28]) {
    return 2;
  }
  if (v4 == *MEMORY[0x263F18D10]) {
    return 3;
  }
  if (v4 == *MEMORY[0x263F18D38]) {
    return 4;
  }
  if (v4 == *MEMORY[0x263F18D60]) {
    return 5;
  }
  if (v4 == *MEMORY[0x263F18D70]) {
    return 6;
  }
  if (v4 == *MEMORY[0x263F18CB8]) {
    return 7;
  }
  if (v4 == *MEMORY[0x263F18CC8]) {
    return 8;
  }
  if (v4 == *MEMORY[0x263F18CD8]) {
    return 9;
  }
  if (v4 == *MEMORY[0x263F18CF0]) {
    return 10;
  }
  if (v4 != *MEMORY[0x263F18CF8])
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return 3;
  }
  return 11;
}

uint64_t CanvasSectionDensityFactor.init(count:span:spacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(void *)(a3 + 16) = a2;
  return result;
}

BOOL static CanvasSectionDensityFactor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t CanvasSectionDensityFactor.count.getter()
{
  return *(void *)v0;
}

double CanvasSectionDensityFactor.spacing.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t CanvasSectionDensityFactor.span.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_24EDBC424()
{
  uint64_t v1 = 0x676E6963617073;
  if (*v0 != 1) {
    uint64_t v1 = 1851879539;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E756F63;
  }
}

uint64_t sub_24EDBC474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDBCD68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDBC49C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBC6D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBC4D8(uint64_t a1)
{
  unint64_t v2 = sub_24EDBC6D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CanvasSectionDensityFactor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE628);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBC6D0();
  sub_24EE578D0();
  char v14 = 0;
  sub_24EE577A0();
  if (!v2)
  {
    uint64_t v13 = v8;
    char v12 = 1;
    sub_24ECB1664();
    sub_24EE577B0();
    char v11 = 2;
    sub_24EE577A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EDBC6D0()
{
  unint64_t result = qword_26B1DCF70;
  if (!qword_26B1DCF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCF70);
  }
  return result;
}

uint64_t CanvasSectionDensityFactor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966450);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBC6D0();
  sub_24EE578C0();
  if (!v2)
  {
    char v15 = 0;
    uint64_t v9 = sub_24EE57700();
    v13[15] = 1;
    sub_24ECB1F14();
    sub_24EE57710();
    uint64_t v11 = v14;
    v13[14] = 2;
    uint64_t v12 = sub_24EE57700();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EDBC914@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CanvasSectionDensityFactor.init(from:)(a1, a2);
}

uint64_t sub_24EDBC92C(void *a1)
{
  return CanvasSectionDensityFactor.encode(to:)(a1);
}

uint64_t CanvasSectionDensityFactor.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t CanvasSectionDensityFactor.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24EDBCA04()
{
  return sub_24EE57880();
}

uint64_t sub_24EDBCA50()
{
  return sub_24EE578B0();
}

unint64_t sub_24EDBCAC0()
{
  unint64_t result = qword_26B1DCF90[0];
  if (!qword_26B1DCF90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DCF90);
  }
  return result;
}

BOOL sub_24EDBCB14(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

ValueMetadata *type metadata accessor for CanvasSectionDensityFactor()
{
  return &type metadata for CanvasSectionDensityFactor;
}

unsigned char *storeEnumTagSinglePayload for CanvasSectionDensityFactor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDBCC28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasSectionDensityFactor.CodingKeys()
{
  return &type metadata for CanvasSectionDensityFactor.CodingKeys;
}

unint64_t sub_24EDBCC64()
{
  unint64_t result = qword_269966458[0];
  if (!qword_269966458[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269966458);
  }
  return result;
}

unint64_t sub_24EDBCCBC()
{
  unint64_t result = qword_26B1DCF80;
  if (!qword_26B1DCF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCF80);
  }
  return result;
}

unint64_t sub_24EDBCD14()
{
  unint64_t result = qword_26B1DCF78;
  if (!qword_26B1DCF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DCF78);
  }
  return result;
}

uint64_t sub_24EDBCD68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851879539 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EDBCEA8(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t sub_24EDBCEC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t sub_24EDBCF3C(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24EDBD008(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_24EDBD058(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_24EDBD0A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_24EDBD104(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_24EDBD11C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CanvasLayoutProviderSource()
{
  return swift_getGenericMetadata();
}

BOOL static CanvasSectionFooter.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EDBD178()
{
  if (*v0) {
    return 0x72656469766964;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_24EDBD1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDBDFD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDBD1D4(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD5E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBD210(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD5E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDBD24C(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD634();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBD288(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD634();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EDBD2C4(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EDBD300(uint64_t a1)
{
  unint64_t v2 = sub_24EDBD688();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CanvasSectionFooter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5F8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5F0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5E8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBD5E0();
  sub_24EE578D0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24EDBD634();
    uint64_t v14 = v18;
    sub_24EE57740();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24EDBD688();
    sub_24EE57740();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_24EDBD5E0()
{
  unint64_t result = qword_26B1DC5B0;
  if (!qword_26B1DC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5B0);
  }
  return result;
}

unint64_t sub_24EDBD634()
{
  unint64_t result = qword_2699664E0;
  if (!qword_2699664E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699664E0);
  }
  return result;
}

unint64_t sub_24EDBD688()
{
  unint64_t result = qword_26B1DC5C8;
  if (!qword_26B1DC5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5C8);
  }
  return result;
}

uint64_t CanvasSectionFooter.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699664E8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699664F0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699664F8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EDBD5E0();
  uint64_t v11 = v32;
  sub_24EE578C0();
  if (v11) {
    goto LABEL_6;
  }
  char v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24EE57720();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24EE57560();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269964B58);
    void *v22 = &type metadata for CanvasSectionFooter;
    sub_24EE576A0();
    sub_24EE57550();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24EDBD634();
    uint64_t v18 = v14;
    sub_24EE57690();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24EDBD688();
    sub_24EE57690();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24EDBDB34@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CanvasSectionFooter.init(from:)(a1, a2);
}

uint64_t sub_24EDBDB4C(void *a1)
{
  return CanvasSectionFooter.encode(to:)(a1);
}

uint64_t CanvasSectionFooter.hash(into:)()
{
  return sub_24EE57880();
}

uint64_t CanvasSectionFooter.hashValue.getter()
{
  return sub_24EE578B0();
}

unint64_t sub_24EDBDBDC()
{
  unint64_t result = qword_269966500;
  if (!qword_269966500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966500);
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasSectionFooter()
{
  return &type metadata for CanvasSectionFooter;
}

unsigned char *_s15FitnessCanvasUI19CanvasSectionFooterOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDBDD10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasSectionFooter.CodingKeys()
{
  return &type metadata for CanvasSectionFooter.CodingKeys;
}

ValueMetadata *type metadata accessor for CanvasSectionFooter.NoneCodingKeys()
{
  return &type metadata for CanvasSectionFooter.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for CanvasSectionFooter.DividerCodingKeys()
{
  return &type metadata for CanvasSectionFooter.DividerCodingKeys;
}

unint64_t sub_24EDBDD6C()
{
  unint64_t result = qword_269966508;
  if (!qword_269966508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966508);
  }
  return result;
}

unint64_t sub_24EDBDDC4()
{
  unint64_t result = qword_26B1DC5D8;
  if (!qword_26B1DC5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5D8);
  }
  return result;
}

unint64_t sub_24EDBDE1C()
{
  unint64_t result = qword_26B1DC5D0;
  if (!qword_26B1DC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5D0);
  }
  return result;
}

unint64_t sub_24EDBDE74()
{
  unint64_t result = qword_26B1DC5E8;
  if (!qword_26B1DC5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5E8);
  }
  return result;
}

unint64_t sub_24EDBDECC()
{
  unint64_t result = qword_26B1DC5E0;
  if (!qword_26B1DC5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5E0);
  }
  return result;
}

unint64_t sub_24EDBDF24()
{
  unint64_t result = qword_26B1DC5C0;
  if (!qword_26B1DC5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5C0);
  }
  return result;
}

unint64_t sub_24EDBDF7C()
{
  unint64_t result = qword_26B1DC5B8;
  if (!qword_26B1DC5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1DC5B8);
  }
  return result;
}

uint64_t sub_24EDBDFD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766964 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t dispatch thunk of CanvasSectionMetricsProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CanvasSectionMetricsProtocol.identifierType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CanvasSectionMetricsProtocol.impressionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CanvasSectionMetricsProtocol.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CanvasSectionMetricsProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_24EDBE118()
{
  type metadata accessor for CanvasItemPlaceholderFetcherProvider();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = type metadata accessor for CanvasItemPlaceholderCacheProvider();
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE5A0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  *(void *)(v2 + 16) = result;
  v0[5] = v1;
  v0[6] = &off_2700914A0;
  v0[2] = v2;
  qword_26B1DD0B0 = (uint64_t)v0;
  return result;
}

uint64_t static CanvasItemPlaceholderFetcherProvider.shared.getter()
{
  if (qword_26B1DD0B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static CanvasItemPlaceholderFetcherProvider.shared.setter(uint64_t a1)
{
  if (qword_26B1DD0B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26B1DD0B0 = a1;
  return swift_release();
}

uint64_t (*static CanvasItemPlaceholderFetcherProvider.shared.modify())()
{
  if (qword_26B1DD0B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CanvasItemPlaceholderFetcherProvider.cacheProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EDBEDE4(v1 + 16, a1);
}

uint64_t CanvasItemPlaceholderFetcherProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t CanvasItemPlaceholderFetcherProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t CanvasItemPlaceholderFetcherProvider.makeFetcher<A, B, C, D, E, F>(fetchItemForPlaceholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v20 = v17[5];
  uint64_t v19 = v17[6];
  __swift_project_boxed_opaque_existential_1(v17 + 2, v20);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(v59, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, v20, v19);
  uint64_t v33 = a3;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  uint64_t v51 = a10;
  uint64_t v52 = a11;
  uint64_t v53 = a12;
  uint64_t v54 = a13;
  uint64_t v55 = a14;
  uint64_t v56 = a15;
  uint64_t v57 = a16;
  uint64_t v58 = a17;
  uint64_t v21 = type metadata accessor for CanvasItemPlaceholderFetcher();
  swift_retain();
  char v22 = sub_24EDC8638((uint64_t)v59, a1, a2);
  swift_release();
  if (qword_26B1DDF60 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_24EE55AA0();
  __swift_project_value_buffer(v23, (uint64_t)qword_26B1E6E50);
  sub_24EDBEDE4((uint64_t)v59, (uint64_t)v44);
  swift_retain();
  uint64_t v24 = sub_24EE55A80();
  os_log_type_t v25 = sub_24EE57420();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v43 = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v28 = sub_24EDC8200();
    uint64_t v45 = sub_24EDBE78C(v28, v29, &v43);
    sub_24EE57450();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    sub_24EDBEDE4((uint64_t)v44, (uint64_t)v42);
    uint64_t v45 = v33;
    uint64_t v46 = a4;
    uint64_t v47 = a5;
    uint64_t v48 = a6;
    uint64_t v49 = a7;
    uint64_t v50 = a8;
    swift_getExtendedExistentialTypeMetadata();
    uint64_t v30 = sub_24EE57070();
    uint64_t v45 = sub_24EDBE78C(v30, v31, &v43);
    sub_24EE57450();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    _os_log_impl(&dword_24EC82000, v24, v25, "Making a new fetcher (%s) from %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25334E5B0](v27, -1, -1);
    MEMORY[0x25334E5B0](v26, -1, -1);
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }

  a9[3] = v21;
  a9[4] = swift_getWitnessTable();
  *a9 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_24EDBE748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return CanvasItemPlaceholderFetcherProvider.makeFetcher<A, B, C, D, E, F>(fetchItemForPlaceholders:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_24EDBE78C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24EDBE860(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24ED75440((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24ED75440((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24EDBE860(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24EE57460();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24EDBEA1C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24EE57570();
  if (!v8)
  {
    sub_24EE57620();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24EE57680();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24EDBEA1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24EDBEAB4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24EDBEC94(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24EDBEC94(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24EDBEAB4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24EDBEC2C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24EE57510();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24EE57620();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24EE570C0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24EE57680();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24EE57620();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24EDBEC2C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269966510);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24EDBEC94(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269966510);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24EE57680();
  __break(1u);
  return result;
}

uint64_t sub_24EDBEDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t dispatch thunk of CanvasItemPlaceholderFetcherProviding.makeFetcher<A, B, C, D, E, F>(fetchItemForPlaceholders:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(a18 + 8))();
}

uint64_t type metadata accessor for CanvasItemPlaceholderFetcherProvider()
{
  return self;
}

uint64_t method lookup function for CanvasItemPlaceholderFetcherProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CanvasItemPlaceholderFetcherProvider);
}

uint64_t sub_24EDBEEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9, a1, a12);
  uint64_t v19 = (int *)type metadata accessor for WideBrickView();
  uint64_t v20 = (void *)(a9 + v19[10]);
  *uint64_t v20 = a2;
  v20[1] = a3;
  void v20[2] = a4;
  v20[3] = a5;
  uint64_t v21 = (void *)(a9 + v19[11]);
  *uint64_t v21 = a6;
  v21[1] = a7;
  void v21[2] = a8;
  _OWORD v21[3] = a10;
  uint64_t v22 = a9 + v19[9];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32);
  return v24(v22, a11, v23);
}

uint64_t WideBrickView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_24EE55E40();
  uint64_t v39 = v4;
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v47 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966518);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v10 = sub_24EE55DD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = MEMORY[0x263F198F8];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  uint64_t v44 = v10;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v13 = sub_24EE56BA0();
  uint64_t v45 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)&v35 - v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v38 = v15;
  uint64_t v37 = sub_24ED7B258(&qword_26B1DE2E0, MEMORY[0x263F18FD0]);
  uint64_t v54 = v13;
  uint64_t v55 = v4;
  uint64_t v56 = v15;
  uint64_t v57 = v37;
  uint64_t v41 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v42 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v36 = (char *)&v35 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v2, a1, v20);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v26 = v46;
  *(void *)(v23 + 16) = v46;
  *(void *)(v23 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v9, v24);
  uint64_t v51 = v26;
  uint64_t v52 = v25;
  uint64_t v53 = v2;
  uint64_t v27 = v40;
  sub_24EE56B90();
  uint64_t v28 = v48;
  _s7SwiftUI20PrimitiveButtonStyleP013FitnessCanvasB0AA05PlaindE0VRszrlE10searchCardAFvgZ_0();
  uint64_t v29 = v39;
  uint64_t v30 = v38;
  uint64_t v31 = v37;
  sub_24EE56720();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v13);
  uint64_t v54 = v13;
  uint64_t v55 = v29;
  uint64_t v56 = v30;
  uint64_t v57 = v31;
  swift_getOpaqueTypeConformance2();
  char v32 = v36;
  sub_24EC90894(v18);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v42 + 8);
  v33(v18, OpaqueTypeMetadata2);
  sub_24EC90894(v32);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, OpaqueTypeMetadata2);
}

uint64_t sub_24EDBF61C()
{
  return sub_24EE55A40();
}

uint64_t type metadata accessor for WideBrickView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EDBF678()
{
  type metadata accessor for WideBrickView();
  return sub_24EDBF61C();
}

uint64_t sub_24EDBF6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v28 = a1;
  uint64_t v31 = a4;
  uint64_t v5 = sub_24EE55E90();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_OWORD *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966518);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EE56C50();
  uint64_t v30 = sub_24EE55DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE050);
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v32 = a2;
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  sub_24EE56DA0();
  sub_24EE56C40();
  long long v44 = v39;
  long long v45 = v40;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EE56700();
  swift_release();
  long long v39 = v46;
  long long v40 = v47;
  uint64_t v41 = v48;
  char v42 = v49;
  char v43 = v50;
  char v16 = (char *)v7 + *(int *)(v5 + 20);
  uint64_t v17 = *MEMORY[0x263F19860];
  uint64_t v18 = sub_24EE560D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v7 = _Q0;
  uint64_t v37 = WitnessTable;
  uint64_t v38 = MEMORY[0x263F198F8];
  uint64_t v24 = swift_getWitnessTable();
  sub_24ED7B258(&qword_26B1DE300, MEMORY[0x263F19048]);
  sub_24EE56A50();
  sub_24ECB9178((uint64_t)v7);
  swift_release();
  uint64_t v25 = sub_24EC8C218(&qword_26B1DE048, &qword_26B1DE050);
  uint64_t v35 = v24;
  uint64_t v36 = v25;
  swift_getWitnessTable();
  sub_24EC90894(v11);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v11, v8);
  sub_24EC90894(v14);
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v8);
}

uint64_t sub_24EDBFB6C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EDBF6FC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24EDBFB78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EDBFBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WideBrickView();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v15 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966518);
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v15 = sub_24EE55CF0();
  uint64_t v16 = v13;
  sub_24EE55D00();
  swift_getWitnessTable();
  sub_24EC90894(&v15);
  swift_release();
  uint64_t v15 = v17;
  uint64_t v16 = v18;
  sub_24EC90894(&v15);
  return swift_release();
}

uint64_t sub_24EDBFDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966520);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966518);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v18);
  __n128 v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v37 = a4;
  sub_24EC90894(a2);
  *(void *)uint64_t v10 = sub_24EE560C0();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966528);
  sub_24EDC00F0(a2, (uint64_t)&v10[*(int *)(v24 + 44)]);
  LOBYTE(a2) = sub_24EE564E0();
  sub_24EE55AD0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_24EC884D4((uint64_t)v10, (uint64_t)v13, &qword_269966520);
  uint64_t v33 = &v13[*(int *)(v11 + 36)];
  *uint64_t v33 = a2;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_24EC88758((uint64_t)v10, &qword_269966520);
  sub_24ED10C70((uint64_t)v13, (uint64_t)v16, &qword_269966518);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v23, a3);
  v43[0] = v20;
  sub_24EC884D4((uint64_t)v16, (uint64_t)v13, &qword_269966518);
  v43[1] = v13;
  v42[0] = a3;
  v42[1] = v11;
  uint64_t v40 = v37;
  unint64_t v41 = sub_24EDC1FF8();
  sub_24EDCC8A0((uint64_t)v43, 2uLL, (uint64_t)v42);
  sub_24EC88758((uint64_t)v16, &qword_269966518);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
  v34(v23, a3);
  sub_24EC88758((uint64_t)v13, &qword_269966518);
  return ((uint64_t (*)(char *, uint64_t))v34)(v20, a3);
}

uint64_t sub_24EDC00F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966548);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - v12;
  *(void *)uint64_t v6 = sub_24EE56140();
  *((void *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966550);
  sub_24EDC0308(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  sub_24EE55C00();
  sub_24EE56DA0();
  sub_24EE55BF0();
  sub_24EC884D4((uint64_t)v6, (uint64_t)v10, &qword_269966540);
  uint64_t v15 = &v10[*(int *)(v8 + 44)];
  long long v16 = v19[1];
  *(_OWORD *)uint64_t v15 = v19[0];
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v19[2];
  sub_24EC88758((uint64_t)v6, &qword_269966540);
  sub_24ED10C70((uint64_t)v10, (uint64_t)v13, &qword_269966548);
  sub_24EC884D4((uint64_t)v13, (uint64_t)v10, &qword_269966548);
  sub_24EC884D4((uint64_t)v10, a2, &qword_269966548);
  uint64_t v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269966558) + 48);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 0;
  sub_24EC88758((uint64_t)v13, &qword_269966548);
  return sub_24EC88758((uint64_t)v10, &qword_269966548);
}

uint64_t sub_24EDC0308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966560);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966568);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v21 - v14;
  *(void *)uint64_t v15 = sub_24EE560C0();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966570);
  sub_24EDC052C(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = sub_24EE560C0();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966578);
  sub_24EDC0930(a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_24EC884D4((uint64_t)v15, (uint64_t)v12, &qword_269966568);
  sub_24EC884D4((uint64_t)v9, (uint64_t)v6, &qword_269966560);
  sub_24EC884D4((uint64_t)v12, a2, &qword_269966568);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269966580);
  sub_24EC884D4((uint64_t)v6, a2 + *(int *)(v18 + 48), &qword_269966560);
  uint64_t v19 = a2 + *(int *)(v18 + 64);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 0;
  sub_24EC88758((uint64_t)v9, &qword_269966560);
  sub_24EC88758((uint64_t)v15, &qword_269966568);
  sub_24EC88758((uint64_t)v6, &qword_269966560);
  return sub_24EC88758((uint64_t)v12, &qword_269966568);
}

uint64_t sub_24EDC052C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D80) - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = sub_24EE56600();
  uint64_t v5 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D88) - 8;
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964DD0) - 8;
  MEMORY[0x270FA5388](v36);
  uint64_t v34 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (uint64_t)&v29 - v12;
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WideBrickView() + 44));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = v13[2];
  uint64_t v17 = v13[3];
  sub_24EC8BFE0(*v13, v15, v16, v17);
  int v31 = sub_24EE56320();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = swift_getKeyPath();
  uint64_t v18 = v38;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1A7A0], v38);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = *(int *)(v3 + 36);
  uint64_t v21 = v33;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v33 + v20, v7, v18);
  *uint64_t v21 = v19;
  uint64_t v22 = (uint64_t)v21;
  sub_24EC884D4((uint64_t)v21, (uint64_t)&v9[*(int *)(v32 + 44)], &qword_269964D80);
  *(void *)uint64_t v9 = v14;
  *((void *)v9 + 1) = v15;
  *((void *)v9 + 2) = v16;
  *((void *)v9 + 3) = v17;
  *((_DWORD *)v9 + 8) = v31;
  uint64_t v23 = v29;
  *((void *)v9 + 5) = KeyPath;
  *((void *)v9 + 6) = 3;
  v9[56] = 0;
  *((void *)v9 + 8) = v23;
  v9[72] = 0;
  sub_24EC8BFE0(v14, v15, v16, v17);
  swift_retain();
  swift_retain();
  sub_24EC88758(v22, &qword_269964D80);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v38);
  sub_24ECB9668(v14, v15, v16, v17);
  swift_release();
  swift_release();
  uint64_t v24 = v34;
  sub_24EC884D4((uint64_t)v9, v34, &qword_269964D88);
  *(void *)(v24 + *(int *)(v36 + 44)) = 0x4000000000000000;
  sub_24EC88758((uint64_t)v9, &qword_269964D88);
  uint64_t v25 = v35;
  sub_24ED10C70(v24, v35, &qword_269964DD0);
  sub_24EC884D4(v25, v24, &qword_269964DD0);
  uint64_t v26 = v37;
  sub_24EC884D4(v24, v37, &qword_269964DD0);
  uint64_t v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269966590) + 48);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 0;
  sub_24EC88758(v25, &qword_269964DD0);
  return sub_24EC88758(v24, &qword_269964DD0);
}

uint64_t sub_24EDC0930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D80) - 8;
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (uint64_t *)((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_24EE56600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964D88);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v38 = (uint64_t)&v30 - v13;
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WideBrickView() + 40));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v17 = v14[3];
  uint64_t v35 = v14[2];
  sub_24EC8BFE0(v16, v15, v35, v17);
  int v34 = sub_24EE56320();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v18 = *MEMORY[0x263F1A7A0];
  uint64_t v33 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v7, v18, v4);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = v36;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v22 = v4;
  v21((char *)v36 + *(int *)(v37 + 36), v7, v4);
  *uint64_t v20 = v19;
  uint64_t v23 = (uint64_t)&v11[*(int *)(v9 + 44)];
  uint64_t v24 = (uint64_t)v20;
  sub_24EC884D4((uint64_t)v20, v23, &qword_269964D80);
  *(void *)uint64_t v11 = v16;
  *((void *)v11 + 1) = v15;
  LOBYTE(v20) = v35;
  *((void *)v11 + 2) = v35;
  *((void *)v11 + 3) = v17;
  *((_DWORD *)v11 + 8) = v34;
  uint64_t v25 = v31;
  *((void *)v11 + 5) = KeyPath;
  *((void *)v11 + 6) = 2;
  v11[56] = 0;
  *((void *)v11 + 8) = v25;
  v11[72] = 0;
  sub_24EC8BFE0(v16, v15, (char)v20, v17);
  swift_retain();
  swift_retain();
  sub_24EC88758(v24, &qword_269964D80);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v22);
  sub_24ECB9668(v16, v15, (char)v20, v17);
  swift_release();
  swift_release();
  uint64_t v26 = v38;
  sub_24ED10C70((uint64_t)v11, v38, &qword_269964D88);
  sub_24EC884D4(v26, (uint64_t)v11, &qword_269964D88);
  uint64_t v27 = v39;
  sub_24EC884D4((uint64_t)v11, v39, &qword_269964D88);
  uint64_t v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269966588) + 48);
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 0;
  sub_24EC88758(v26, &qword_269964D88);
  return sub_24EC88758((uint64_t)v11, &qword_269964D88);
}

void sub_24EDC0CB8()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24EC8B890();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_24EDC0D90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  unint64_t v14 = ((((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 32;
  unsigned int v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v8;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    unint64_t v22 = (v13 + (((unint64_t)a1 + v11) & v20)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v13 + v21) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v23 + 24) < 0xFFFFFFFFuLL)
    {
      long long v27 = *(_OWORD *)(v23 + 16);
      *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 16) = v27;
    }
    else
    {
      uint64_t v24 = *(void *)v23;
      uint64_t v25 = *(void *)(v23 + 8);
      char v26 = *(unsigned char *)(v23 + 16);
      sub_24EC8A97C(*(void *)v23, v25, v26);
      *(void *)unint64_t v22 = v24;
      *(void *)(v22 + 8) = v25;
      *(unsigned char *)(v22 + 16) = v26;
      *(void *)(v22 + 24) = *(void *)(v23 + 24);
      swift_bridgeObjectRetain();
    }
    unint64_t v28 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v23 + 39) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)(v29 + 24) < 0xFFFFFFFFuLL)
    {
      long long v33 = *(_OWORD *)(v29 + 16);
      *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 16) = v33;
    }
    else
    {
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *(void *)(v29 + 8);
      char v32 = *(unsigned char *)(v29 + 16);
      sub_24EC8A97C(*(void *)v29, v31, v32);
      *(void *)unint64_t v28 = v30;
      *(void *)(v28 + 8) = v31;
      *(unsigned char *)(v28 + 16) = v32;
      *(void *)(v28 + 24) = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_24EDC0FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v10 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v10 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v11 = (v10 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v11 + 24) >= 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v11, *(void *)(v11 + 8), *(unsigned char *)(v11 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EDC10FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v16 + 24) < 0xFFFFFFFFuLL)
  {
    long long v20 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v20;
  }
  else
  {
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    sub_24EC8A97C(*(void *)v16, v18, v19);
    *(void *)unint64_t v15 = v17;
    *(void *)(v15 + 8) = v18;
    *(unsigned char *)(v15 + 16) = v19;
    *(void *)(v15 + 24) = *(void *)(v16 + 24);
    swift_bridgeObjectRetain();
  }
  unint64_t v21 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v22 + 24) < 0xFFFFFFFFuLL)
  {
    long long v26 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v26;
  }
  else
  {
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 8);
    char v25 = *(unsigned char *)(v22 + 16);
    sub_24EC8A97C(*(void *)v22, v24, v25);
    *(void *)unint64_t v21 = v23;
    *(void *)(v21 + 8) = v24;
    *(unsigned char *)(v21 + 16) = v25;
    *(void *)(v21 + 24) = *(void *)(v22 + 24);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24EDC1274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = *(void *)(v16 + 24);
  if (*(void *)(v15 + 24) < 0xFFFFFFFFuLL)
  {
    if (v17 >= 0xFFFFFFFF)
    {
      uint64_t v24 = *(void *)v16;
      uint64_t v25 = *(void *)(v16 + 8);
      char v26 = *(unsigned char *)(v16 + 16);
      sub_24EC8A97C(*(void *)v16, v25, v26);
      *(void *)unint64_t v15 = v24;
      *(void *)(v15 + 8) = v25;
      *(unsigned char *)(v15 + 16) = v26;
      *(void *)(v15 + 24) = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v17 >= 0xFFFFFFFF)
    {
      uint64_t v18 = *(void *)v16;
      uint64_t v19 = *(void *)(v16 + 8);
      char v20 = *(unsigned char *)(v16 + 16);
      sub_24EC8A97C(*(void *)v16, v19, v20);
      uint64_t v21 = *(void *)v15;
      uint64_t v22 = *(void *)(v15 + 8);
      char v23 = *(unsigned char *)(v15 + 16);
      *(void *)unint64_t v15 = v18;
      *(void *)(v15 + 8) = v19;
      *(unsigned char *)(v15 + 16) = v20;
      sub_24EC8AAA0(v21, v22, v23);
      *(void *)(v15 + 24) = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_24EC8AAA0(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
    swift_bridgeObjectRelease();
  }
  long long v27 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v27;
LABEL_8:
  unint64_t v28 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = *(void *)(v29 + 24);
  if (*(void *)(v28 + 24) < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      uint64_t v37 = *(void *)v29;
      uint64_t v38 = *(void *)(v29 + 8);
      char v39 = *(unsigned char *)(v29 + 16);
      sub_24EC8A97C(*(void *)v29, v38, v39);
      *(void *)unint64_t v28 = v37;
      *(void *)(v28 + 8) = v38;
      *(unsigned char *)(v28 + 16) = v39;
      *(void *)(v28 + 24) = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_14:
    long long v40 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v40;
    return a1;
  }
  if (v30 < 0xFFFFFFFF)
  {
    sub_24EC8AAA0(*(void *)v28, *(void *)(v28 + 8), *(unsigned char *)(v28 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v31 = *(void *)v29;
  uint64_t v32 = *(void *)(v29 + 8);
  char v33 = *(unsigned char *)(v29 + 16);
  sub_24EC8A97C(*(void *)v29, v32, v33);
  uint64_t v34 = *(void *)v28;
  uint64_t v35 = *(void *)(v28 + 8);
  char v36 = *(unsigned char *)(v28 + 16);
  *(void *)unint64_t v28 = v31;
  *(void *)(v28 + 8) = v32;
  *(unsigned char *)(v28 + 16) = v33;
  sub_24EC8AAA0(v34, v35, v36);
  *(void *)(v28 + 24) = *(void *)(v29 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EDC14DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = v16[1];
  *unint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (_OWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)(((unint64_t)v16 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  return a1;
}

uint64_t sub_24EDC15CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL)
  {
    if (*(void *)(v16 + 24) >= 0xFFFFFFFFuLL)
    {
      char v17 = *(unsigned char *)(v16 + 16);
      uint64_t v18 = *(void *)v15;
      uint64_t v19 = *(void *)(v15 + 8);
      char v20 = *(unsigned char *)(v15 + 16);
      *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      *(unsigned char *)(v15 + 16) = v17;
      sub_24EC8AAA0(v18, v19, v20);
      *(void *)(v15 + 24) = *(void *)(v16 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24EC8AAA0(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
    swift_bridgeObjectRelease();
  }
  long long v21 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v21;
LABEL_6:
  unint64_t v22 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v22 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_10:
    long long v28 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v28;
    return a1;
  }
  if (*(void *)(v23 + 24) < 0xFFFFFFFFuLL)
  {
    sub_24EC8AAA0(*(void *)v22, *(void *)(v22 + 8), *(unsigned char *)(v22 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v24 = *(unsigned char *)(v23 + 16);
  uint64_t v25 = *(void *)v22;
  uint64_t v26 = *(void *)(v22 + 8);
  char v27 = *(unsigned char *)(v22 + 16);
  *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = v24;
  sub_24EC8AAA0(v25, v26, v27);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EDC1784(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269964958);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 32;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24EDC1A00);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    char v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v24(a1, v7, v5);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)(((v14 + v25) & 0xFFFFFFFFFFFFFFF8) + 24);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      if ((v27 + 1) >= 2) {
        return v27;
      }
      else {
        return 0;
      }
    }
  }
}

double sub_24EDC1A14(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269964958) - 8);
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v12 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  uint64_t v15 = *(void *)(v8 + 64) + v13;
  uint64_t v16 = *(void *)(v10 + 64) + 7;
  unint64_t v17 = ((((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 >= a3)
  {
    int v20 = 0;
    int v21 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_19:
      uint64_t v22 = ~v13;
      switch(v20)
      {
        case 1:
          *((unsigned char *)a1 + v17) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v17) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)((char *)a1 + v17) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v9 == v14)
            {
              unint64_t v25 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v29 + 56);
              v25(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v26 = ((unint64_t)a1 + v15) & v22;
              if (v12 == v14)
              {
                unint64_t v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v27(v26, a2);
              }
              else
              {
                unint64_t v28 = (v16 + v26) & 0xFFFFFFFFFFFFFFF8;
                if (a2 > 0x7FFFFFFE)
                {
                  double result = 0.0;
                  *(_OWORD *)unint64_t v28 = 0u;
                  *(_OWORD *)(v28 + 16) = 0u;
                  *(_DWORD *)unint64_t v28 = a2 - 0x7FFFFFFF;
                }
                else
                {
                  *(void *)(v28 + 24) = a2;
                }
              }
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    if (((((v16 + (v15 & ~v13)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      unsigned int v18 = a3 - v14 + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
    int v21 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_19;
    }
  }
  if (((((v16 + (v15 & ~v13)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFE0) {
    int v23 = v21;
  }
  else {
    int v23 = 1;
  }
  if (((((v16 + (v15 & ~v13)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFE0)
  {
    int v24 = ~v14 + a2;
    bzero(a1, ((((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 32);
    *a1 = v24;
  }
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v17) = v23;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v17) = v23;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x24EDC1D00);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = v23;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EDC1D28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EDC1F4C()
{
  return sub_24EDBFBBC(v0[4], v0[2], v0[3]);
}

uint64_t sub_24EDC1F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for WideBrickView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_24EDBFDE0(a1, v8, v5, v6, a2);
}

unint64_t sub_24EDC1FF8()
{
  unint64_t result = qword_269966530;
  if (!qword_269966530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269966518);
    sub_24EC8C218(&qword_269966538, &qword_269966520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269966530);
  }
  return result;
}

uint64_t sub_24EDC20A8()
{
  return sub_24EE55F20();
}

uint64_t sub_24EDC20CC()
{
  return sub_24EE55F20();
}

uint64_t sub_24EDC20F0(uint64_t a1)
{
  uint64_t v2 = sub_24EE56600();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24EE55F30();
}

uint64_t CanvasSectionHeader.init(title:subtitle:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24EE55880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for CanvasSectionHeader();
  uint64_t v10 = a4 + *(int *)(v9 + 52);
  uint64_t v11 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + *(int *)(v9 + 56);
  uint64_t v13 = sub_24EE57430();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a3, v13);
}

uint64_t type metadata accessor for CanvasSectionHeader()
{
  return swift_getGenericMetadata();
}

uint64_t CanvasSectionHeader.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24EE55880();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CanvasSectionHeader.subtitle.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CanvasSectionHeader.action.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  uint64_t v5 = sub_24EE57430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_24EDC2464(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EE577E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EE577E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EDC25AC(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x656C746974627573;
  }
  return 0x6E6F69746361;
}

BOOL sub_24EDC25FC(char *a1, char *a2)
{
  return sub_24EC97258(*a1, *a2);
}

uint64_t sub_24EDC2614()
{
  return sub_24EC974A4();
}

uint64_t sub_24EDC2624()
{
  return sub_24EC97268();
}

uint64_t sub_24EDC2634()
{
  return sub_24EE578B0();
}

uint64_t sub_24EDC2680()
{
  return sub_24EDC25AC(*v0);
}

uint64_t sub_24EDC2690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EDC2464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EDC26C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24ED03D20();
  *a1 = result;
  return result;
}

uint64_t sub_24EDC26F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EDC274C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CanvasSectionHeader.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v3 = a2[3];
  uint64_t v5 = a2[5];
  uint64_t v13 = a2[4];
  uint64_t v14 = v4;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  uint64_t v15 = v5;
  uint64_t v16 = v3;
  uint64_t v19 = v13;
  uint64_t v20 = v5;
  type metadata accessor for CanvasSectionHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_24EE577C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EE578D0();
  LOBYTE(v17) = 0;
  sub_24EE55880();
  sub_24ECF314C(&qword_26B1DB9D8);
  uint64_t v10 = v21;
  sub_24EE577B0();
  if (!v10)
  {
    LOBYTE(v17) = 1;
    sub_24EE57760();
    LOBYTE(v17) = 2;
    sub_24EE57760();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for CanvasSectionHeader.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t CanvasSectionHeader.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v11 = sub_24EE57430();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)&v31 - v12;
  uint64_t v13 = sub_24EE57430();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v41 = (char *)&v31 - v14;
  uint64_t v48 = sub_24EE55880();
  uint64_t v39 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  long long v46 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  type metadata accessor for CanvasSectionHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v47 = sub_24EE57730();
  uint64_t v40 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v44 = a3;
  uint64_t v45 = a5;
  uint64_t v38 = a4;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v18 = type metadata accessor for CanvasSectionHeader();
  uint64_t v33 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v31 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v49 = v17;
  uint64_t v21 = v54;
  sub_24EE578C0();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v41;
  uint64_t v54 = v20;
  uint64_t v32 = v18;
  uint64_t v31 = a2;
  uint64_t v24 = v42;
  uint64_t v23 = v43;
  LOBYTE(v50) = 0;
  sub_24ECF314C(&qword_2699653D8);
  sub_24EE57710();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v54, v46, v48);
  LOBYTE(v50) = 1;
  sub_24EE576C0();
  uint64_t v25 = v32;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v54[*(int *)(v32 + 52)], v22, v23);
  LOBYTE(v50) = 2;
  unint64_t v26 = v37;
  uint64_t v27 = v47;
  sub_24EE576C0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v49, v27);
  unint64_t v28 = v54;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v54[*(int *)(v25 + 56)], v26, v35);
  uint64_t v29 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v36, v28, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v25);
}

uint64_t sub_24EDC2FAC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return CanvasSectionHeader.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_24EDC2FD0(void *a1, void *a2)
{
  return CanvasSectionHeader.encode(to:)(a1, a2);
}

uint64_t CanvasSectionHeader.hash(into:)()
{
  return sub_24EE57440();
}

BOOL static CanvasSectionHeader.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v101 = a5;
  uint64_t v102 = a6;
  uint64_t v97 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v91 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = v10;
  uint64_t v11 = sub_24EE57430();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v93 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v96 = (char *)&v83 - v13;
  uint64_t v95 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v92 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v98 = (char *)&v83 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v83 - v19;
  uint64_t v103 = *((void *)a4 - 1);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = a4;
  uint64_t v23 = sub_24EE57430();
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v100 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v106 = (char *)&v83 - v26;
  uint64_t v105 = *(void *)(v23 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v83 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v83 - v33;
  if ((sub_24EE55800() & 1) == 0) {
    return 0;
  }
  uint64_t v88 = v29;
  uint64_t v84 = v22;
  uint64_t v90 = v20;
  uint64_t v87 = v11;
  uint64_t v35 = v107;
  uint64_t v108 = v104;
  uint64_t v109 = v107;
  uint64_t v110 = v101;
  uint64_t v111 = v102;
  uint64_t v36 = type metadata accessor for CanvasSectionHeader();
  uint64_t v37 = *(int *)(v36 + 52);
  uint64_t v86 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  v38(v34, a1 + v37, v23);
  uint64_t v85 = v36;
  uint64_t v39 = a2;
  v38(v32, a2 + *(int *)(v36 + 52), v23);
  uint64_t v89 = v24;
  uint64_t v40 = v106;
  unint64_t v41 = &v106[*(int *)(v24 + 48)];
  v38(v106, (uint64_t)v34, v23);
  uint64_t v94 = v41;
  v38(v41, (uint64_t)v32, v23);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, char *))(v103 + 48);
  int v43 = v42(v40, 1, v35);
  uint64_t v44 = v34;
  if (v43 != 1)
  {
    uint64_t v83 = v39;
    char v49 = v32;
    uint64_t v50 = v105;
    uint64_t v47 = v106;
    uint64_t v51 = v88;
    v38(v88, (uint64_t)v106, v23);
    int v52 = v42(v94, 1, v107);
    uint64_t v48 = v100;
    if (v52 != 1)
    {
      uint64_t v54 = v51;
      uint64_t v55 = v103;
      uint64_t v56 = v84;
      uint64_t v57 = v107;
      (*(void (**)(char *, char *, char *))(v103 + 32))(v84, v94, v107);
      char v58 = sub_24EE57040();
      uint64_t v59 = *(void (**)(char *, char *))(v55 + 8);
      v59(v56, v57);
      uint64_t v60 = *(void (**)(char *, uint64_t))(v50 + 8);
      v60(v49, v23);
      v60(v44, v23);
      v59(v54, v57);
      v60(v106, v23);
      uint64_t v39 = v83;
      if ((v58 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
    v53(v49, v23);
    v53(v44, v23);
    (*(void (**)(char *, char *))(v103 + 8))(v51, v107);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v89);
    return 0;
  }
  uint64_t v45 = *(void (**)(char *, uint64_t))(v105 + 8);
  v45(v32, v23);
  v45(v34, v23);
  int v46 = v42(v94, 1, v107);
  uint64_t v47 = v106;
  uint64_t v48 = v100;
  if (v46 != 1) {
    goto LABEL_7;
  }
  v45(v106, v23);
LABEL_9:
  uint64_t v61 = v85;
  uint64_t v62 = v95;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
  uint64_t v64 = v39;
  uint64_t v65 = v90;
  uint64_t v66 = v87;
  v63(v90, v86 + *(int *)(v85 + 56), v87);
  uint64_t v67 = v98;
  v63(v98, v64 + *(int *)(v61 + 56), v66);
  uint64_t v68 = v96;
  uint64_t v69 = &v96[*(int *)(TupleTypeMetadata2 + 48)];
  v63(v96, (uint64_t)v65, v66);
  uint64_t v107 = v69;
  v63(v69, (uint64_t)v67, v66);
  uint64_t v70 = v97;
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  if (v71(v68, 1, v104) == 1)
  {
    uint64_t v72 = *(void (**)(char *, uint64_t))(v62 + 8);
    v72(v67, v66);
    v72(v65, v66);
    uint64_t v73 = v68;
    if (v71(v107, 1, v104) == 1)
    {
      v72(v68, v66);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v74 = v92;
  v63(v92, (uint64_t)v68, v66);
  uint64_t v75 = v107;
  uint64_t v76 = v104;
  uint64_t v73 = v68;
  if (v71(v107, 1, v104) == 1)
  {
    uint64_t v77 = *(void (**)(char *, uint64_t))(v62 + 8);
    v77(v98, v66);
    v77(v90, v66);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v76);
LABEL_14:
    (*(void (**)(char *, uint64_t))(v93 + 8))(v73, TupleTypeMetadata2);
    return 0;
  }
  uint64_t v78 = v91;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v91, v75, v76);
  char v79 = sub_24EE57040();
  uint64_t v80 = *(void (**)(char *, uint64_t))(v70 + 8);
  v80(v78, v76);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v62 + 8);
  v81(v98, v66);
  v81(v90, v66);
  v80(v74, v76);
  v81(v73, v66);
  return (v79 & 1) != 0;
}

uint64_t CanvasSectionHeader.hashValue.getter()
{
  return sub_24EE578B0();
}

uint64_t sub_24EDC3A9C()
{
  return sub_24EE578B0();
}

BOOL sub_24EDC3AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CanvasSectionHeader.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_24EDC3AF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDC3B0C()
{
  uint64_t result = sub_24EE55880();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EE57430();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24EE57430();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24EDC3C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = (v8 + v13) & ~v13;
  if (*(_DWORD *)(v11 + 84)) {
    size_t v16 = *(void *)(v11 + 64);
  }
  else {
    size_t v16 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v17 = *(void *)(v9 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80);
  size_t v19 = v16 + v18;
  size_t v20 = (v16 + v18 + v15) & ~v18;
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v21 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v21 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  int v22 = v12 | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v17 + 80);
  uint64_t v23 = v22;
  int v24 = v22 & 0x100000;
  if (v23 <= 7 && v21 + v20 <= 0x18 && v24 == 0)
  {
    uint64_t v35 = *(void *)(a3 + 16);
    uint64_t v28 = ~v13;
    size_t __n = v21;
    uint64_t v34 = ~v18;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v29 = (const void *)(((unint64_t)a2 + v14) & v28);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v10))
    {
      memcpy((void *)(((unint64_t)a1 + v14) & v28), v29, v16);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v11 + 16))(((unint64_t)a1 + v14) & v28, v29, v10);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v11 + 56))(((unint64_t)a1 + v14) & v28, 0, 1, v10);
    }
    uint64_t v30 = (void *)((v19 + (((unint64_t)a1 + v14) & v28)) & v34);
    uint64_t v31 = (const void *)(((unint64_t)v29 + v19) & v34);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v31, 1, v35))
    {
      memcpy(v30, v31, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v30, v31, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v35);
    }
  }
  else
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v23 + 16) & ~v23));
    swift_retain();
  }
  return a1;
}

uint64_t sub_24EDC3EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EE55880();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(v10 - 8);
  unint64_t v11 = *(void *)(v8 + 64) + v9;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v11;
  }
  unint64_t v12 = (v11 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v12, 1, v10);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(v15 + 8);
    return v14(v12, v10);
  }
  return result;
}

uint64_t sub_24EDC40B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 48) + v10;
  unint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v19 + v22;
  int v24 = (void *)(((unint64_t)v12 + v23) & ~v22);
  uint64_t v25 = (const void *)(((unint64_t)v13 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    if (*(_DWORD *)(v21 + 84)) {
      size_t v26 = *(void *)(v21 + 64);
    }
    else {
      size_t v26 = *(void *)(v21 + 64) + 1;
    }
    memcpy(v24, v25, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v24, v25, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_24EDC42E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  unint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (void *)((v11 + a2) & ~v10);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v15 = v14(v12, 1, v8);
  int v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v17 = *(_DWORD *)(v9 + 84);
    size_t v18 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v17 = *(_DWORD *)(v9 + 84);
    size_t v18 = *(void *)(v9 + 64);
  }
  if (v17) {
    size_t v19 = v18;
  }
  else {
    size_t v19 = v18 + 1;
  }
  memcpy(v12, v13, v19);
LABEL_12:
  uint64_t v20 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v20;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (void *)(((unint64_t)v12 + v24) & ~v23);
  size_t v26 = (void *)(((unint64_t)v13 + v24) & ~v23);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v28 = v27(v25, 1, v21);
  int v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v25, v26, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      return a1;
    }
    int v30 = *(_DWORD *)(v22 + 84);
    size_t v31 = *(void *)(v22 + 64);
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v25, v26, v21);
      return a1;
    }
    uint64_t v33 = *(void (**)(void *, uint64_t))(v22 + 8);
    uint64_t v32 = v22 + 8;
    v33(v25, v21);
    int v30 = *(_DWORD *)(v32 + 76);
    size_t v31 = *(void *)(v32 + 56);
  }
  if (v30) {
    size_t v34 = v31;
  }
  else {
    size_t v34 = v31 + 1;
  }
  memcpy(v25, v26, v34);
  return a1;
}

uint64_t sub_24EDC460C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 32) + v10;
  unint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    size_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (void *)(((unint64_t)v12 + v23) & ~v22);
  uint64_t v25 = (const void *)(((unint64_t)v13 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    if (*(_DWORD *)(v21 + 84)) {
      size_t v26 = *(void *)(v21 + 64);
    }
    else {
      size_t v26 = *(void *)(v21 + 64) + 1;
    }
    memcpy(v24, v25, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v24, v25, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_24EDC4844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 24) + v10;
  unint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (void *)((v11 + a2) & ~v10);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v15 = v14(v12, 1, v8);
  int v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v17 = *(_DWORD *)(v9 + 84);
    size_t v18 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v17 = *(_DWORD *)(v9 + 84);
    size_t v18 = *(void *)(v9 + 64);
  }
  if (v17) {
    size_t v19 = v18;
  }
  else {
    size_t v19 = v18 + 1;
  }
  memcpy(v12, v13, v19);
LABEL_12:
  uint64_t v20 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v20;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (void *)(((unint64_t)v12 + v24) & ~v23);
  size_t v26 = (void *)(((unint64_t)v13 + v24) & ~v23);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v28 = v27(v25, 1, v21);
  int v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v25, v26, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      return a1;
    }
    int v30 = *(_DWORD *)(v22 + 84);
    size_t v31 = *(void *)(v22 + 64);
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v25, v26, v21);
      return a1;
    }
    uint64_t v33 = *(void (**)(void *, uint64_t))(v22 + 8);
    uint64_t v32 = v22 + 8;
    v33(v25, v21);
    int v30 = *(_DWORD *)(v32 + 76);
    size_t v31 = *(void *)(v32 + 56);
  }
  if (v30) {
    size_t v34 = v31;
  }
  else {
    size_t v34 = v31 + 1;
  }
  memcpy(v25, v26, v34);
  return a1;
}

uint64_t sub_24EDC4B68(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_24EE55880();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  unsigned int v17 = v14 - 1;
  if (!v14) {
    unsigned int v17 = 0;
  }
  if (v17 <= v12) {
    unsigned int v17 = v12;
  }
  if (v10) {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + 1;
  }
  if (v14) {
    uint64_t v19 = *(void *)(v13 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v13 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(*(void *)(v6 - 8) + 64) + v15;
  if (a2 <= v17) {
    goto LABEL_37;
  }
  uint64_t v21 = v19 + ((v18 + v16 + (v20 & ~v15)) & ~v16);
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v24 = ((a2 - v17 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v24))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v24 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v24 < 2)
    {
LABEL_37:
      if (v17)
      {
        if (v8 == v17)
        {
          int v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
          return v28(a1, v8, v6);
        }
        else
        {
          unint64_t v30 = ((unint64_t)a1 + v20) & ~v15;
          if (v11 == v17) {
            unsigned int v31 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v30);
          }
          else {
            unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t))(v13 + 48))((v30 + v18 + v16) & ~v16, v14, *(void *)(a3 + 16), v7);
          }
          if (v31 >= 2) {
            return v31 - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v23 = *((unsigned __int8 *)a1 + v21);
  if (!*((unsigned char *)a1 + v21)) {
    goto LABEL_37;
  }
LABEL_27:
  int v25 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v25 = 0;
  }
  if (v21)
  {
    if (v21 <= 3) {
      int v26 = v21;
    }
    else {
      int v26 = 4;
    }
    switch(v26)
    {
      case 2:
        int v27 = *a1;
        break;
      case 3:
        int v27 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v27 = *(_DWORD *)a1;
        break;
      default:
        int v27 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v27 = 0;
  }
  return v17 + (v27 | v25) + 1;
}

void sub_24EDC4E70(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_24EE55880();
  int v9 = 0;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(void *)(*(void *)(a4 + 24) - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  if (v13) {
    unsigned int v14 = v13 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v14 <= v11) {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int *)(v17 + 84);
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v17 + 80);
  unsigned int v21 = v18 - 1;
  if (!v18) {
    unsigned int v21 = 0;
  }
  if (v21 > v15) {
    unsigned int v15 = v21;
  }
  if (v13) {
    uint64_t v22 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + 1;
  }
  uint64_t v23 = *(void *)(*(void *)(v8 - 8) + 64) + v19;
  if (v18) {
    size_t v24 = *(void *)(v17 + 64);
  }
  else {
    size_t v24 = *(void *)(v17 + 64) + 1;
  }
  size_t v25 = ((v22 + v20 + (v23 & ~v19)) & ~v20) + v24;
  if (a3 <= v15) {
    goto LABEL_25;
  }
  if (v25 <= 3)
  {
    unsigned int v26 = ((a3 - v15 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
    if (HIWORD(v26))
    {
      int v9 = 4;
      if (v15 >= a2) {
        goto LABEL_33;
      }
LABEL_26:
      unsigned int v27 = ~v15 + a2;
      if (v25 < 4)
      {
        int v28 = (v27 >> (8 * v25)) + 1;
        if (v25)
        {
          int v29 = v27 & ~(-1 << (8 * v25));
          bzero(a1, v25);
          if (v25 == 3)
          {
            *(_WORD *)a1 = v29;
            a1[2] = BYTE2(v29);
          }
          else if (v25 == 2)
          {
            *(_WORD *)a1 = v29;
          }
          else
          {
            *a1 = v29;
          }
        }
      }
      else
      {
        bzero(a1, v25);
        *(_DWORD *)a1 = v27;
        int v28 = 1;
      }
      switch(v9)
      {
        case 1:
          a1[v25] = v28;
          break;
        case 2:
          *(_WORD *)&a1[v25] = v28;
          break;
        case 3:
LABEL_71:
          __break(1u);
          JUMPOUT(0x24EDC52BCLL);
        case 4:
          *(_DWORD *)&a1[v25] = v28;
          break;
        default:
          return;
      }
      return;
    }
    if (v26 >= 0x100) {
      int v9 = 2;
    }
    else {
      int v9 = v26 > 1;
    }
LABEL_25:
    if (v15 >= a2) {
      goto LABEL_33;
    }
    goto LABEL_26;
  }
  int v9 = 1;
  if (v15 < a2) {
    goto LABEL_26;
  }
LABEL_33:
  uint64_t v30 = ~v19;
  switch(v9)
  {
    case 1:
      a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 2:
      *(_WORD *)&a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_38;
    case 3:
      goto LABEL_71;
    case 4:
      *(_DWORD *)&a1[v25] = 0;
      goto LABEL_37;
    default:
LABEL_37:
      if (!a2) {
        return;
      }
LABEL_38:
      if (v11 == v15)
      {
        unsigned int v31 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
        uint64_t v32 = a1;
        uint64_t v33 = a2;
        uint64_t v34 = v11;
        uint64_t v35 = v8;
LABEL_41:
        v31(v32, v33, v34, v35);
        return;
      }
      unint64_t v36 = (unint64_t)&a1[v23] & v30;
      if (v14 == v15)
      {
        uint64_t v37 = *(void (**)(unint64_t, void))(v12 + 56);
        v37(v36, (a2 + 1));
      }
      else
      {
        uint64_t v38 = v36 + v22 + v20;
        uint64_t v39 = (unsigned char *)(v38 & ~v20);
        if (v21 >= a2)
        {
          uint64_t v33 = (a2 + 1);
          unsigned int v31 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
          uint64_t v32 = (unsigned char *)(v38 & ~v20);
          uint64_t v34 = v18;
          uint64_t v35 = v16;
          goto LABEL_41;
        }
        if (v24 <= 3) {
          int v40 = ~(-1 << (8 * v24));
        }
        else {
          int v40 = -1;
        }
        if (v24)
        {
          int v41 = v40 & (~v21 + a2);
          if (v24 <= 3) {
            int v42 = v24;
          }
          else {
            int v42 = 4;
          }
          bzero(v39, v24);
          switch(v42)
          {
            case 2:
              *(_WORD *)uint64_t v39 = v41;
              break;
            case 3:
              *(_WORD *)uint64_t v39 = v41;
              v39[2] = BYTE2(v41);
              break;
            case 4:
              *(_DWORD *)uint64_t v39 = v41;
              break;
            default:
              *uint64_t v39 = v41;
              break;
          }
        }
      }
      break;
  }
}

unsigned char *sub_24EDC52F4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EDC53C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24EDC53E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDC5404()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EDC5420()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of CanvasItemPlaceholderFetching.fetchPlaceholders(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 120) + **(int **)(a3 + 120));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24ED08050;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CanvasItemPlaceholderFetching.invalidatePlaceholders(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 128) + **(int **)(a3 + 128));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24EDC86BC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CanvasItemPlaceholderFetching.transformResolvedItems<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 136)
                                                                                     + **(int **)(a6 + 136));
  int v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *int v13 = v6;
  v13[1] = sub_24EDC86BC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_24EDC5770()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24EDC57CC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  int v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  unsigned int v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_24EE57370();
  if (!v18) {
    return sub_24EE57170();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_24EE575B0();
  uint64_t v32 = sub_24EE575C0();
  sub_24EE57590();
  uint64_t v36 = v8;
  uint64_t result = sub_24EE57360();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      unsigned int v21 = (void (*)(char *, void))sub_24EE573D0();
      uint64_t v22 = v11;
      uint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_24EE575A0();
      sub_24EE57390();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

void *sub_24EDC5BCC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_24EDC5C4C()
{
  sub_24EDC5BCC();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for CanvasItemPlaceholderFetcher()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EDC5C90()
{
  return v0;
}

uint64_t sub_24EDC5C9C()
{
  return sub_24EDC5C90();
}

uint64_t sub_24EDC5CB8(uint64_t a1)
{
  v2[49] = a1;
  v2[50] = v1;
  v2[51] = *v1;
  return MEMORY[0x270FA2498](sub_24EDC5D00, v1, 0);
}

uint64_t sub_24EDC5D00()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = v1[19];
  uint64_t v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 144) + **(int **)(v3 + 144));
  unsigned int v4 = (void *)swift_task_alloc();
  v0[52] = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_24EDC5E0C;
  uint64_t v5 = v0[49];
  return v7(v5, v2, v3);
}

uint64_t sub_24EDC5E0C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 424) = a1;
  *(void *)(v4 + 432) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 400);
  if (v1) {
    uint64_t v6 = sub_24EDC707C;
  }
  else {
    uint64_t v6 = sub_24EDC5F40;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_24EDC5F40()
{
  uint64_t v17 = v0;
  if (qword_26B1DDF60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EE55AA0();
  *(void *)(v0 + 440) = __swift_project_value_buffer(v1, (uint64_t)qword_26B1E6E50);
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v2 = sub_24EE55A80();
  os_log_type_t v3 = sub_24EE57420();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 408);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v7 = sub_24EDC8200();
    *(void *)(v0 + 368) = sub_24EDBE78C(v7, v8, &v16);
    sub_24EE57450();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t v9 = *(void *)(v4 + 168);
    long long v10 = *(_OWORD *)(v4 + 152);
    *(void *)(v0 + 128) = *(void *)(v4 + 104);
    *(_OWORD *)(v0 + 136) = v10;
    *(void *)(v0 + 152) = v9;
    type metadata accessor for CanvasItemPlaceholder();
    swift_getWitnessTable();
    uint64_t v11 = sub_24EE572B0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 384) = v11;
    sub_24EE57450();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EC82000, v2, v3, "%{public}s fetching %ld", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25334E5B0](v6, -1, -1);
    MEMORY[0x25334E5B0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
  }

  uint64_t v15 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 400) + 112)
                                        + **(int **)(*(void *)(v0 + 400) + 112));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_24EDC6250;
  uint64_t v13 = *(void *)(v0 + 424);
  return v15(v13);
}

uint64_t sub_24EDC6250(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 456) = a1;
  *(void *)(v4 + 464) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 400);
  if (v1) {
    uint64_t v6 = sub_24EDC71AC;
  }
  else {
    uint64_t v6 = sub_24EDC6384;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_24EDC6384()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[58];
  uint64_t v2 = (void *)v0[51];
  uint64_t v33 = v0[57];
  v0[32] = v0[49];
  uint64_t v3 = (void *)swift_task_alloc();
  uint64_t v41 = v2[10];
  v0[59] = v41;
  v3[2] = v41;
  uint64_t v32 = v2[11];
  v0[60] = v32;
  v3[3] = v32;
  uint64_t v31 = v2[12];
  v0[61] = v31;
  v3[4] = v31;
  uint64_t v4 = v2[13];
  v0[62] = v4;
  v3[5] = v4;
  uint64_t v30 = v2[14];
  v0[63] = v30;
  v3[6] = v30;
  uint64_t v29 = v2[15];
  v0[64] = v29;
  v3[7] = v29;
  uint64_t v28 = v2[16];
  v0[65] = v28;
  v3[8] = v28;
  uint64_t v39 = v2[17];
  v0[66] = v39;
  v3[9] = v39;
  uint64_t v38 = v2[18];
  v0[67] = v38;
  v3[10] = v38;
  uint64_t v5 = v2[19];
  v0[68] = v5;
  v3[11] = v5;
  uint64_t v6 = v5;
  uint64_t v35 = v5;
  uint64_t v7 = v2[20];
  v0[69] = v7;
  v3[12] = v7;
  uint64_t v34 = v7;
  uint64_t v8 = v2[21];
  v0[70] = v8;
  v3[13] = v8;
  uint64_t v37 = v2[22];
  v0[71] = v37;
  v3[14] = v37;
  uint64_t v36 = v2[23];
  v0[72] = v36;
  v3[15] = v36;
  v0[24] = v4;
  v0[25] = v6;
  v0[26] = v7;
  v0[27] = v8;
  v0[73] = type metadata accessor for CanvasItemPlaceholder();
  v0[74] = swift_getWitnessTable();
  uint64_t v9 = sub_24EE57330();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_24EDC57CC((void (*)(char *, char *))sub_24EDC8474, (uint64_t)v3, v9, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
  swift_task_dealloc();
  v0[34] = v13;
  sub_24EE571B0();
  swift_getWitnessTable();
  uint64_t v27 = sub_24EE56F50();
  v0[2] = v41;
  v0[75] = v27;
  v0[36] = v33;
  v0[3] = v32;
  v0[4] = v31;
  v0[5] = v4;
  v0[6] = v30;
  v0[7] = v29;
  v0[8] = v28;
  v0[9] = v39;
  v0[10] = v38;
  v0[11] = v35;
  v0[12] = v34;
  v0[13] = v8;
  v0[14] = v37;
  v0[15] = v36;
  type metadata accessor for CanvasItemDescriptor();
  v0[38] = sub_24EE56F30();
  unsigned int v14 = (void *)swift_task_alloc();
  void v14[2] = v41;
  v14[3] = v32;
  v14[4] = v31;
  v14[5] = v4;
  v14[6] = v30;
  v14[7] = v29;
  v14[8] = v28;
  v14[9] = v39;
  v14[10] = v38;
  v14[11] = v35;
  v14[12] = v34;
  v14[13] = v8;
  v14[14] = v37;
  v14[15] = v36;
  unsigned char v14[16] = v27;
  swift_getWitnessTable();
  v0[76] = sub_24EE57330();
  sub_24EE56FB0();
  v0[77] = swift_getWitnessTable();
  sub_24EE57110();
  v0[78] = v1;
  swift_task_dealloc();
  uint64_t v15 = v0[35];
  v0[79] = v15;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v16 = sub_24EE55A80();
  os_log_type_t v17 = sub_24EE57420();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v43[0] = v40;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_24EDC8200();
    v0[44] = sub_24EDBE78C(v19, v20, v43);
    sub_24EE57450();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v21 = sub_24EE56F70();
    swift_bridgeObjectRelease();
    v0[45] = v21;
    sub_24EE57450();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EC82000, v16, v17, "%{public}s registering %ld resolved items(s)", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25334E5B0](v40, -1, -1);
    MEMORY[0x25334E5B0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
  }

  uint64_t v22 = (void *)v0[50];
  uint64_t v23 = v22[19];
  uint64_t v24 = v22[20];
  __swift_project_boxed_opaque_existential_1(v22 + 16, v23);
  int v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 152) + **(int **)(v24 + 152));
  uint64_t v25 = (void *)swift_task_alloc();
  v0[80] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_24EDC6A04;
  return v42(v15, v23, v24);
}

uint64_t sub_24EDC6A04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 400);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24EDC6B30, v1, 0);
}

uint64_t sub_24EDC6B30()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 600);
  *(void *)(v0 + 312) = *(void *)(v0 + 456);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 488);
  long long v4 = *(_OWORD *)(v0 + 504);
  long long v5 = *(_OWORD *)(v0 + 520);
  long long v6 = *(_OWORD *)(v0 + 536);
  long long v7 = *(_OWORD *)(v0 + 552);
  long long v8 = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(_OWORD *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 80) = v6;
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v8;
  *(void *)(v2 + 128) = v1;
  uint64_t v9 = sub_24EE570F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(void *)(v0 + 320) = v9;
  sub_24EE571B0();
  swift_getWitnessTable();
  uint64_t v10 = sub_24EE57290();
  *(void *)(v0 + 648) = v10;
  swift_bridgeObjectRelease();
  if (sub_24EE572B0() >= 1)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v11 = sub_24EE55A80();
    os_log_type_t v12 = sub_24EE57400();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v27[0] = v26;
      *(_DWORD *)uint64_t v13 = 136446722;
      uint64_t v14 = sub_24EDC8200();
      *(void *)(v0 + 328) = sub_24EDBE78C(v14, v15, v27);
      sub_24EE57450();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v13 + 12) = 2048;
      uint64_t v16 = sub_24EE572B0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 336) = v16;
      sub_24EE57450();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      uint64_t v17 = sub_24EE57270();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 344) = sub_24EDBE78C(v17, v19, v27);
      sub_24EE57450();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EC82000, v11, v12, "%{public}s Unexpected missing placeholders (%ld) in fetchItemsForPlaceholders response: %s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25334E5B0](v26, -1, -1);
      MEMORY[0x25334E5B0](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release();
    }
  }
  unint64_t v20 = *(void **)(v0 + 400);
  uint64_t v21 = v20[19];
  uint64_t v22 = v20[20];
  __swift_project_boxed_opaque_existential_1(v20 + 16, v21);
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 136) + **(int **)(v22 + 136));
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 656) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_24EDC6F68;
  return v25(v10, v21, v22);
}

uint64_t sub_24EDC6F68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EDC707C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  *(void *)(v0 + 376) = v1;
  MEMORY[0x25334E380](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE748);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    if (*(unsigned char *)(v0 + 248) != 1)
    {
      if (v2 >= 1)
      {
        MEMORY[0x25334E370](v1);
        MEMORY[0x25334E370](*(void *)(v0 + 376));
        long long v5 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_7;
      }
      sub_24EDC8420();
      swift_allocError();
      *(void *)uint64_t v6 = v2;
      *(void *)(v6 + 8) = v3;
      *(void *)(v6 + 16) = v4;
      *(unsigned char *)(v6 + 24) = 0;
      swift_willThrow();
      MEMORY[0x25334E370](v1);
    }
  }
  MEMORY[0x25334E370](*(void *)(v0 + 376));
  long long v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v5();
}

uint64_t sub_24EDC71AC()
{
  uint64_t v18 = v0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v1 = sub_24EE55A80();
  os_log_type_t v2 = sub_24EE57400();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 408);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v5 = sub_24EDC8200();
    *(void *)(v0 + 296) = sub_24EDBE78C(v5, v6, &v17);
    sub_24EE57450();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 160) = *(void *)(v3 + 104);
    *(_WORD *)(v4 + 12) = 2048;
    uint64_t v7 = *(void *)(v3 + 168);
    *(_OWORD *)(v0 + 168) = *(_OWORD *)(v3 + 152);
    *(void *)(v0 + 184) = v7;
    type metadata accessor for CanvasItemPlaceholder();
    swift_getWitnessTable();
    uint64_t v8 = sub_24EE572B0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 264) = v8;
    sub_24EE57450();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EC82000, v1, v2, "%{public}s Failed to fetch placeholders placeholders (%ld)", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25334E5B0](v16, -1, -1);
    MEMORY[0x25334E5B0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
  }

  uint64_t v9 = *(void **)(v0 + 400);
  uint64_t v10 = v9[19];
  uint64_t v11 = v9[20];
  __swift_project_boxed_opaque_existential_1(v9 + 16, v10);
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 160) + **(int **)(v11 + 160));
  os_log_type_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v12;
  *os_log_type_t v12 = v0;
  v12[1] = sub_24EDC7494;
  uint64_t v13 = *(void *)(v0 + 424);
  return v15(v13, v10, v11);
}

uint64_t sub_24EDC7494()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 400);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24EDC75C0, v1, 0);
}

uint64_t sub_24EDC75C0()
{
  swift_willThrow();
  uint64_t v1 = *(void *)(v0 + 464);
  *(void *)(v0 + 376) = v1;
  MEMORY[0x25334E380](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1DE748);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    if (*(unsigned char *)(v0 + 248) != 1)
    {
      if (v2 >= 1)
      {
        MEMORY[0x25334E370](v1);
        MEMORY[0x25334E370](*(void *)(v0 + 376));
        uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_7;
      }
      sub_24EDC8420();
      swift_allocError();
      *(void *)uint64_t v6 = v2;
      *(void *)(v6 + 8) = v3;
      *(void *)(v6 + 16) = v4;
      *(unsigned char *)(v6 + 24) = 0;
      swift_willThrow();
      MEMORY[0x25334E370](v1);
    }
  }
  MEMORY[0x25334E370](*(void *)(v0 + 376));
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v5();
}

uint64_t sub_24EDC76F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v7 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v7, a1, v6);
}

uint64_t sub_24EDC77EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v39 = a3;
  uint64_t v53 = a2;
  uint64_t v38 = a1;
  uint64_t v44 = a8;
  long long v45 = a9;
  uint64_t v46 = a10;
  uint64_t v47 = a11;
  uint64_t v48 = a12;
  uint64_t v49 = a13;
  uint64_t v50 = a14;
  uint64_t v51 = a15;
  uint64_t v52 = a16;
  uint64_t v37 = type metadata accessor for CanvasItemDescriptor();
  uint64_t v17 = sub_24EE57430();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v36 = (char *)&v36 - v18;
  uint64_t v40 = a7;
  uint64_t v41 = a12;
  uint64_t v42 = a13;
  uint64_t v43 = a14;
  uint64_t v19 = type metadata accessor for CanvasItemPlaceholder();
  uint64_t v20 = sub_24EE57430();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v36 - v30;
  MEMORY[0x25334D690](v53, v39, a7, v19, a14, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v19) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v23, v19);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v31, v19);
  uint64_t v34 = v36;
  uint64_t v33 = v37;
  uint64_t v35 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v53, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v34, 0, 1, v33);
  swift_getWitnessTable();
  sub_24EE56FB0();
  sub_24EE56FE0();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v19);
}

uint64_t sub_24EDC7B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_24EDC7B80, v4, 0);
}

uint64_t sub_24EDC7B80()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v1[19];
  uint64_t v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 184)
                                                                                     + **(int **)(v3 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EDC7C90;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  return v10(v7, v8, v5, v6, v2, v3);
}

uint64_t sub_24EDC7C90()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EDC7D84(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24EDC7DA4, v1, 0);
}

uint64_t sub_24EDC7DA4()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[19];
  uint64_t v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 176) + **(int **)(v3 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EDC7EB0;
  uint64_t v5 = v0[2];
  return v7(v5, v2, v3);
}

uint64_t sub_24EDC7EB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EDC7FA8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24ED08050;
  v5[49] = a1;
  v5[50] = v4;
  v5[51] = *v4;
  return MEMORY[0x270FA2498](sub_24EDC5D00, v4, 0);
}

uint64_t sub_24EDC8080(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_24EDC86BC;
  return MEMORY[0x270FA2498](sub_24EDC7DA4, v4, 0);
}

uint64_t sub_24EDC8130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[5] = a4;
  v11[6] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v11[1] = sub_24EDC86BC;
  v11[2] = a1;
  return MEMORY[0x270FA2498](sub_24EDC7B80, v10, 0);
}

uint64_t sub_24EDC8200()
{
  return 0;
}

uint64_t sub_24EDC83EC()
{
  return sub_24EDC8200();
}

uint64_t sub_24EDC8410(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 176);
}

uint64_t sub_24EDC8418(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 184);
}

unint64_t sub_24EDC8420()
{
  unint64_t result = qword_26B1DCBF8[0];
  if (!qword_26B1DCBF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1DCBF8);
  }
  return result;
}

uint64_t sub_24EDC8474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EDC76F8(a1, *(void *)(v2 + 40), a2);
}

uint64_t sub_24EDC84C4(uint64_t a1, uint64_t a2)
{
  return sub_24EDC77EC(a1, a2, *(void *)(v2 + 128), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(_OWORD *)(v2 + 56), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120));
}

uint64_t sub_24EDC8510(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[16];
  uint64_t v6 = type metadata accessor for CanvasItemPlaceholder();
  return MEMORY[0x25334D690](a1, v5, v3, v6, v4);
}

void *sub_24EDC8598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_defaultActor_initialize();
  sub_24EDBEDE4(a1, (uint64_t)(v4 + 16));
  v4[14] = a2;
  v4[15] = a3;
  uint64_t v8 = v4[19];
  uint64_t v9 = v4[20];
  __swift_project_boxed_opaque_existential_1(v4 + 16, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 120);
  swift_retain();
  v10(v8, v9);
  return v4;
}

void *sub_24EDC8638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24EDC8598(a1, a2, a3);
}

uint64_t sub_24EDC86C0()
{
  uint64_t result = sub_24EE57430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EE57430();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_24EDC87B4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v8 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  if ((v10 | v7) > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || v11 + ((v8 + v10 + ((v7 + 48) & ~v7)) & ~v10) > 0x18)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v15 = v14 + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16));
    swift_retain();
  }
  else
  {
    size_t v29 = v11;
    uint64_t v33 = *(void *)(a3 + 16);
    unint64_t v34 = a1;
    uint64_t v30 = ~v10;
    size_t __n = v8;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    uint64_t v32 = v5;
    unint64_t v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_24EC8A97C(*(void *)v17, v19, v20);
    *(void *)unint64_t v16 = v18;
    *(void *)(v16 + 8) = v19;
    *(unsigned char *)(v16 + 16) = v20;
    *(void *)(v16 + 24) = *(void *)(v17 + 24);
    uint64_t v21 = (void *)((v16 + v7 + 32) & ~v7);
    uint64_t v22 = (const void *)((v17 + v7 + 32) & ~v7);
    uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    if (v23(v22, 1, v32))
    {
      size_t v24 = __n;
      memcpy(v21, v22, __n);
      uint64_t v25 = v33;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v32);
      uint64_t v25 = v33;
      size_t v24 = __n;
    }
    uint64_t v26 = (void *)(((unint64_t)v21 + v24 + v10) & v30);
    uint64_t v27 = (const void *)(((unint64_t)v22 + v24 + v10) & v30);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v27, 1, v25))
    {
      memcpy(v26, v27, v29);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v26, v27, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v25);
    }
    return v34;
  }
  return v15;
}

uint64_t sub_24EDC8AAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_24EC8AAA0(*(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(v7 - 8);
  unint64_t v8 = *(void *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v8;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v9, 1, v7);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v7);
  }
  return result;
}

unint64_t sub_24EDC8C40(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  char v9 = *(unsigned char *)(v6 + 16);
  sub_24EC8A97C(*(void *)v6, v8, v9);
  *(void *)unint64_t v5 = v7;
  *(void *)(v5 + 8) = v8;
  *(unsigned char *)(v5 + 16) = v9;
  *(void *)(v5 + 24) = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (void *)((v12 + 32 + v5) & ~v12);
  uint64_t v14 = (const void *)((v12 + 32 + v6) & ~v12);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v15(v14, 1, v10))
  {
    int v16 = *(_DWORD *)(v11 + 84);
    size_t v17 = *(void *)(v11 + 64);
    if (v16) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v17 + 1;
    }
    memcpy(v13, v14, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    char v20 = *(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v19 = v11 + 56;
    v20(v13, 0, 1, v10);
    int v16 = *(_DWORD *)(v19 + 28);
    size_t v17 = *(void *)(v19 + 8);
  }
  if (v16) {
    size_t v21 = v17;
  }
  else {
    size_t v21 = v17 + 1;
  }
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v21 + v24;
  uint64_t v26 = (void *)(((unint64_t)v13 + v25) & ~v24);
  uint64_t v27 = (const void *)(((unint64_t)v14 + v25) & ~v24);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v27, 1, v22))
  {
    if (*(_DWORD *)(v23 + 84)) {
      size_t v28 = *(void *)(v23 + 64);
    }
    else {
      size_t v28 = *(void *)(v23 + 64) + 1;
    }
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v26, v27, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
  }
  return a1;
}

unint64_t sub_24EDC8E90(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  char v9 = *(unsigned char *)(v6 + 16);
  sub_24EC8A97C(*(void *)v6, v8, v9);
  uint64_t v10 = *(void *)v5;
  uint64_t v11 = *(void *)(v5 + 8);
  char v12 = *(unsigned char *)(v5 + 16);
  *(void *)unint64_t v5 = v7;
  *(void *)(v5 + 8) = v8;
  *(unsigned char *)(v5 + 16) = v9;
  sub_24EC8AAA0(v10, v11, v12);
  *(void *)(v5 + 24) = *(void *)(v6 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  int v16 = (void *)((v15 + 32 + v5) & ~v15);
  size_t v17 = (void *)((v15 + 32 + v6) & ~v15);
  size_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v5) = v18(v16, 1, v13);
  int v19 = v18(v17, 1, v13);
  if (v5)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v16, v17, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v14 + 84);
    size_t v21 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v16, v17, v13);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    int v20 = *(_DWORD *)(v14 + 84);
    size_t v21 = *(void *)(v14 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy(v16, v17, v22);
LABEL_12:
  uint64_t v23 = *(void *)(v14 + 64);
  if (!*(_DWORD *)(v14 + 84)) {
    ++v23;
  }
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = v23 + v26;
  size_t v28 = (void *)(((unint64_t)v16 + v27) & ~v26);
  size_t v29 = (void *)(((unint64_t)v17 + v27) & ~v26);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v31 = v30(v28, 1, v24);
  int v32 = v30(v29, 1, v24);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v28, v29, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
      return a1;
    }
    int v33 = *(_DWORD *)(v25 + 84);
    size_t v34 = *(void *)(v25 + 64);
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v28, v29, v24);
      return a1;
    }
    uint64_t v36 = *(void (**)(void *, uint64_t))(v25 + 8);
    uint64_t v35 = v25 + 8;
    v36(v28, v24);
    int v33 = *(_DWORD *)(v35 + 76);
    size_t v34 = *(void *)(v35 + 56);
  }
  if (v33) {
    size_t v37 = v34;
  }
  else {
    size_t v37 = v34 + 1;
  }
  memcpy(v28, v29, v37);
  return a1;
}

unint64_t sub_24EDC91DC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v5 = (_OWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v7 = v6[1];
  *unint64_t v5 = *v6;
  v5[1] = v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)(((unint64_t)v5 + v10 + 32) & ~v10);
  char v12 = (const void *)(((unint64_t)v6 + v10 + 32) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
    size_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v16 = v9 + 56;
    v17(v11, 0, 1, v8);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = (void *)(((unint64_t)v11 + v22) & ~v21);
  uint64_t v24 = (const void *)(((unint64_t)v12 + v22) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19))
  {
    if (*(_DWORD *)(v20 + 84)) {
      size_t v25 = *(void *)(v20 + 64);
    }
    else {
      size_t v25 = *(void *)(v20 + 64) + 1;
    }
    memcpy(v23, v24, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v23, v24, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
  }
  return a1;
}

unint64_t sub_24EDC9414(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  char v7 = *(unsigned char *)(v6 + 16);
  uint64_t v8 = *(void *)v5;
  uint64_t v9 = *(void *)(v5 + 8);
  char v10 = *(unsigned char *)(v5 + 16);
  *(_OWORD *)unint64_t v5 = *(_OWORD *)v6;
  *(unsigned char *)(v5 + 16) = v7;
  sub_24EC8AAA0(v8, v9, v10);
  *(void *)(v5 + 24) = *(void *)(v6 + 24);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  size_t v14 = (void *)((v13 + 32 + v5) & ~v13);
  size_t v15 = (void *)((v13 + 32 + v6) & ~v13);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v17 = v16(v14, 1, v11);
  int v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
    int v19 = *(_DWORD *)(v12 + 84);
    size_t v20 = *(void *)(v12 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy(v14, v15, v21);
LABEL_12:
  uint64_t v22 = *(void *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84)) {
    ++v22;
  }
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v22 + v25;
  uint64_t v27 = (void *)(((unint64_t)v14 + v26) & ~v25);
  size_t v28 = (void *)(((unint64_t)v15 + v26) & ~v25);
  size_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v30 = v29(v27, 1, v23);
  int v31 = v29(v28, 1, v23);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v27, v28, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
      return a1;
    }
    int v32 = *(_DWORD *)(v24 + 84);
    size_t v33 = *(void *)(v24 + 64);
  }
  else
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v27, v28, v23);
      return a1;
    }
    uint64_t v35 = *(void (**)(void *, uint64_t))(v24 + 8);
    uint64_t v34 = v24 + 8;
    v35(v27, v23);
    int v32 = *(_DWORD *)(v34 + 76);
    size_t v33 = *(void *)(v34 + 56);
  }
  if (v32) {
    size_t v36 = v33;
  }
  else {
    size_t v36 = v33 + 1;
  }
  memcpy(v27, v28, v36);
  return a1;
}

uint64_t sub_24EDC9748(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v6 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v6;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v5) {
    ++v13;
  }
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v16;
  }
  if (!a2) {
    return 0;
  }
  int v17 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_36;
  }
  uint64_t v18 = v16 + ((v13 + v15 + ((v14 + 48) & ~v14)) & ~v15);
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v21 = ((v17 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      int v20 = *(_DWORD *)(a1 + v18);
      if (!v20) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v21 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v21 < 2)
    {
LABEL_36:
      unint64_t v25 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
      if ((v11 & 0x80000000) == 0)
      {
        unint64_t v26 = *(void *)(v25 + 24);
        if (v26 >= 0xFFFFFFFF) {
          LODWORD(v26) = -1;
        }
        return (v26 + 1);
      }
      uint64_t v28 = (v25 + v14 + 32) & ~v14;
      if (v6 == v12)
      {
        if (v5 >= 2)
        {
          unsigned int v29 = (*(uint64_t (**)(uint64_t))(v4 + 48))(v28);
          goto LABEL_46;
        }
      }
      else if (v9 >= 2)
      {
        unsigned int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v28 + v13 + v15) & ~v15, v9, v7);
LABEL_46:
        if (v29 >= 2) {
          return v29 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v20 = *(unsigned __int8 *)(a1 + v18);
  if (!*(unsigned char *)(a1 + v18)) {
    goto LABEL_36;
  }
LABEL_26:
  int v22 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v22 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v23 = v18;
    }
    else {
      int v23 = 4;
    }
    switch(v23)
    {
      case 2:
        int v24 = *(unsigned __int16 *)a1;
        break;
      case 3:
        int v24 = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        int v24 = *(_DWORD *)a1;
        break;
      default:
        int v24 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v24 = 0;
  }
  return v12 + (v24 | v22) + 1;
}

void sub_24EDC99F4(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  unsigned int v15 = v12 - 1;
  if (!v12) {
    unsigned int v15 = 0;
  }
  if (v9 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v8) {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + 1;
  }
  if (v12) {
    uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  size_t v20 = v19 + ((v18 + v14 + ((v13 + 48) & ~v13)) & ~v14);
  BOOL v21 = a3 >= v17;
  unsigned int v22 = a3 - v17;
  if (v22 == 0 || !v21)
  {
LABEL_27:
    if (v17 < a2) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  if (v20 > 3)
  {
    int v6 = 1;
    if (v17 < a2) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  unsigned int v23 = ((v22 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
  if (!HIWORD(v23))
  {
    if (v23 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v23 > 1;
    }
    goto LABEL_27;
  }
  int v6 = 4;
  if (v17 < a2)
  {
LABEL_28:
    unsigned int v24 = ~v17 + a2;
    if (v20 < 4)
    {
      int v25 = (v24 >> (8 * v20)) + 1;
      if (v20)
      {
        int v26 = v24 & ~(-1 << (8 * v20));
        bzero((void *)a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v26;
          *(unsigned char *)(a1 + 2) = BYTE2(v26);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *(unsigned char *)a1 = v26;
        }
      }
    }
    else
    {
      bzero((void *)a1, v20);
      *(_DWORD *)a1 = v24;
      int v25 = 1;
    }
    switch(v6)
    {
      case 1:
        *(unsigned char *)(a1 + v20) = v25;
        return;
      case 2:
        *(_WORD *)(a1 + v20) = v25;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)(a1 + v20) = v25;
        return;
      default:
        return;
    }
  }
LABEL_35:
  switch(v6)
  {
    case 1:
      *(unsigned char *)(a1 + v20) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)(a1 + v20) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x24EDC9D5CLL);
    case 4:
      *(_DWORD *)(a1 + v20) = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (a2)
      {
LABEL_40:
        uint64_t v27 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
        if ((v16 & 0x80000000) != 0)
        {
          uint64_t v28 = ((unint64_t)v27 + v13 + 32) & ~v13;
          if (v9 == v17)
          {
            if (v8 >= 2)
            {
              uint64_t v29 = a2 + 1;
              int v30 = *(void (**)(uint64_t, uint64_t))(v7 + 56);
              v30(v28, v29);
            }
          }
          else if (v12 >= 2)
          {
            uint64_t v31 = (v28 + v18 + v14) & ~v14;
            uint64_t v32 = a2 + 1;
            size_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
            v33(v31, v32, v12, v10);
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          uint64_t v27[2] = 0;
          v27[3] = 0;
          *uint64_t v27 = a2 ^ 0x80000000;
          v27[1] = 0;
        }
        else
        {
          v27[3] = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CanvasSectionHeaderView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EDC9D9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EDC9DE0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  *(unsigned char *)a8 = a1;
  *(double *)(a8 + 8) = a9;
  *(void *)(a8 + 16) = a2;
  *(void *)(a8 + 24) = a3;
  *(unsigned char *)(a8 + 32) = a4 & 1;
  *(void *)(a8 + 40) = a5;
  uint64_t v12 = type metadata accessor for CanvasSectionHeaderView();
  uint64_t v13 = a8 + *(int *)(v12 + 60);
  uint64_t v14 = sub_24EE57430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a6, v14);
  uint64_t v15 = a8 + *(int *)(v12 + 64);
  uint64_t v16 = sub_24EE57430();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a7, v16);
}

uint64_t sub_24EDC9EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE128);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v24 = a1;
  uint64_t v21 = v3;
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  uint64_t v4 = *(void *)(a1 + 24);
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  sub_24EE57430();
  swift_getTupleTypeMetadata3();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56C30();
  v20[1] = sub_24EE55DD0();
  sub_24EE56240();
  uint64_t v5 = sub_24EE56B10();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t v8 = sub_24EE55DD0();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v27 = v21;
  uint64_t v28 = v4;
  long long v29 = *(_OWORD *)(v24 + 32);
  uint64_t v30 = v25;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = MEMORY[0x263F19100];
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v34 = WitnessTable;
  uint64_t v35 = v15;
  uint64_t v16 = swift_getWitnessTable();
  sub_24EE56B00();
  sub_24EE56500();
  uint64_t v33 = v16;
  uint64_t v17 = swift_getWitnessTable();
  sub_24EE569E0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  uint64_t v31 = v17;
  uint64_t v32 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_24EC90894(v10);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v23 + 8);
  v18(v10, v8);
  sub_24EC90894(v13);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v8);
}

uint64_t sub_24EDCA3A4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v44 = a4;
  uint64_t v43 = a3;
  uint64_t v49 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE128);
  sub_24EE57430();
  uint64_t v42 = a2;
  sub_24EE57430();
  swift_getTupleTypeMetadata3();
  v36[1] = sub_24EE56E20();
  v36[0] = swift_getWitnessTable();
  uint64_t v8 = sub_24EE56C30();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)v36 - v9;
  uint64_t v50 = v10;
  uint64_t v11 = sub_24EE55DD0();
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)v36 - v14;
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  sub_24EE56BC0();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v15 = sub_24EE56C30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v36 - v20;
  uint64_t v22 = sub_24EE56240();
  uint64_t v47 = *(void *)(v22 - 8);
  uint64_t v48 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v46 = (char *)v36 - v23;
  LODWORD(a2) = *a1;
  sub_24EE56140();
  uint64_t v51 = v42;
  uint64_t v52 = v43;
  uint64_t v53 = v44;
  uint64_t v54 = v45;
  uint64_t v55 = a1;
  if (a2 > 6)
  {
    uint64_t v26 = v38;
    sub_24EE56C20();
    sub_24EE56DB0();
    uint64_t v34 = v50;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v27 = (uint64_t)v37;
    sub_24EE56980();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v34);
    uint64_t v62 = WitnessTable;
    uint64_t v63 = MEMORY[0x263F19100];
    swift_getWitnessTable();
    uint64_t v28 = v40;
    sub_24EC90894(v27);
    long long v29 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v29(v27, v11);
    sub_24EC90894(v28);
    swift_getWitnessTable();
    uint64_t v25 = v46;
    sub_24EC909C8(v27, v15, v11);
    v29(v27, v11);
    v29((uint64_t)v28, v11);
  }
  else
  {
    sub_24EE56C20();
    swift_getWitnessTable();
    sub_24EC90894(v18);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
    v24(v18, v15);
    sub_24EC90894(v21);
    uint64_t v56 = swift_getWitnessTable();
    uint64_t v57 = MEMORY[0x263F19100];
    swift_getWitnessTable();
    uint64_t v25 = v46;
    sub_24EC908D0((uint64_t)v18, v15);
    v24(v18, v15);
    v24(v21, v15);
  }
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = MEMORY[0x263F19100];
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v58 = v30;
  uint64_t v59 = v31;
  uint64_t v32 = v48;
  swift_getWitnessTable();
  sub_24EC90894(v25);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v25, v32);
}

uint64_t sub_24EDCAB80@<X0>(char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v68 = a6;
  uint64_t v65 = *((void *)a3 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v57 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v55 - v12;
  uint64_t v13 = sub_24EE57430();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)&v55 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v72 = (uint64_t)&v55 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1DE128);
  uint64_t v67 = a2;
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  sub_24EE57430();
  swift_getTupleTypeMetadata2();
  sub_24EE56E20();
  swift_getWitnessTable();
  uint64_t v19 = sub_24EE56BC0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v66 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v55 - v23;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v55 - v26;
  sub_24EE560C0();
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v28 = v60;
  uint64_t v77 = v60;
  sub_24EE56BB0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v27;
  uint64_t v61 = WitnessTable;
  sub_24EC90894(v24);
  uint64_t v30 = v20;
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v58 = v19;
  uint64_t v63 = v20 + 8;
  uint64_t v62 = v31;
  v31(v24, v19);
  uint64_t v82 = v67;
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  uint64_t v67 = a5;
  uint64_t v32 = &v28[*(int *)(type metadata accessor for CanvasSectionHeaderView() + 60)];
  uint64_t v33 = v59;
  uint64_t v60 = *(char **)(v69 + 16);
  ((void (*)(char *, char *, uint64_t))v60)(v59, v32, v70);
  uint64_t v34 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v65 + 48))(v33, 1, a3) == 1)
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v69 + 8);
    uint64_t v36 = v33;
    uint64_t v37 = v70;
    v35(v36, v70);
    uint64_t v38 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v34 + 56))(v71, 1, 1, a3);
    uint64_t v39 = v37;
    uint64_t v40 = v67;
    sub_24ED6076C(v38, v72);
    v35((char *)v38, v39);
  }
  else
  {
    uint64_t v41 = v56;
    (*(void (**)(char *, char *, char *))(v34 + 32))(v56, v33, a3);
    uint64_t v42 = v57;
    uint64_t v43 = v67;
    sub_24EC90894(v41);
    uint64_t v44 = *(void (**)(char *, char *))(v34 + 8);
    v44(v41, a3);
    uint64_t v45 = (uint64_t)v71;
    sub_24EC90894(v42);
    v44(v42, a3);
    uint64_t v40 = v43;
    (*(void (**)(uint64_t, void, uint64_t, char *))(v34 + 56))(v45, 0, 1, a3);
    sub_24ED6076C(v45, v72);
    uint64_t v39 = v70;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v69 + 8);
    v35((char *)v45, v70);
  }
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v47 = v66;
  uint64_t v48 = v64;
  uint64_t v49 = v58;
  v46(v66, v64, v58);
  uint64_t v82 = v47;
  uint64_t v50 = v71;
  uint64_t v51 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v60)(v71, v72, v39);
  uint64_t v83 = v50;
  v81[0] = v49;
  v81[1] = v39;
  uint64_t v78 = v40;
  uint64_t v79 = v61;
  uint64_t v80 = swift_getWitnessTable();
  sub_24EDCC8A0((uint64_t)&v82, 2uLL, (uint64_t)v81);
  v35((char *)v51, v39);
  uint64_t v52 = v48;
  uint64_t v53 = v62;
  v62(v52, v49);
  v35(v50, v39);
  return v53(v47, v49);
}