void sub_2528A4F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  void *v14;
  void *v15;
  void *v16;
  va_list va;

  va_start(va, a12);
  cva::PoseRefiner<double>::~PoseRefiner(va);
  v14 = (void *)STACK[0x208];
  if (STACK[0x208])
  {
    STACK[0x210] = (unint64_t)v14;
    operator delete(v14);
  }
  v15 = *(void **)(v12 - 136);
  if (v15)
  {
    *(void *)(v12 - 128) = v15;
    operator delete(v15);
  }
  v16 = *(void **)(v12 - 160);
  if (v16)
  {
    *(void *)(v12 - 152) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(a1);
}

void std::vector<cva::Matrix<double,2u,1u,false>>::reserve(void **a1, unint64_t a2)
{
  v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<cva::Matrix<double,2u,1u,false>>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    v9 = &v6[16 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void std::vector<cva::Matrix<double,3u,1u,false>>::reserve(void **a1, unint64_t a2)
{
  v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = ((unsigned char *)a1[1] - (unsigned char *)*a1) / 24;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<cva::Matrix<double,3u,1u,false>>>(v3, a2);
    v7 = &v6[24 * v5];
    v9 = &v6[24 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *(_OWORD *)(v10 - 24);
        *((void *)v12 - 1) = *((void *)v10 - 1);
        *(_OWORD *)(v12 - 24) = v13;
        v12 -= 24;
        v10 -= 24;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t cva::PoseRefiner<double>::refinePose(uint64_t a1, uint64_t *a2, uint64_t a3, double *a4)
{
  uint64_t v8 = (double **)(a1 + 400);
  unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  v41 = a2;
  if (v9 > (uint64_t)(*(void *)(a1 + 408) - *(void *)(a1 + 400)) >> 3)
  {
    std::vector<double>::resize(a1 + 400, v9);
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 4) < v9) {
    std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::resize((uint64_t *)(a1 + 32), v9);
  }
  v10 = a2;
  if (*(int *)(a1 + 4) < 1) {
    return 1;
  }
  for (int i = 0; i < *(_DWORD *)(a1 + 4); ++i)
  {
    cva::PoseRefiner<double>::computeError(a1, v10, a3);
    unint64_t v12 = *(unsigned int *)(a1 + 392);
    BOOL v13 = v12 > 4;
    if (v12 < 5) {
      break;
    }
    double v14 = 0.0;
    long long v15 = 0uLL;
    if (*(_DWORD *)a1 == 1)
    {
      v16 = a4;
      v17 = *v8;
      v18 = *v8;
      uint64_t v19 = *(unsigned int *)(a1 + 392);
      do
      {
        double v20 = *v18;
        if (*v18 < 0.0) {
          double v20 = -*v18;
        }
        *v18++ = v20;
        --v19;
      }
      while (v19);
      double v21 = std::__nth_element[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(v17, &v17[v12 >> 1], &v17[v12], v20);
      v22 = *v8;
      double v23 = (*v8)[v12 >> 1];
      if (v12)
      {
        long long v15 = 0uLL;
      }
      else
      {
        uint64_t v24 = (v12 >> 1) - 1;
        if (v24 != v12)
        {
          std::__nth_element[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(v22, &v22[v24], &v22[v12], v21);
          v22 = *v8;
        }
        long long v15 = 0uLL;
        double v23 = (v23 + v22[v24]) * 0.5;
      }
      double v14 = v23 * 3.0;
      a4 = v16;
      v10 = v41;
      if (v23 * 3.0 < 1.0e-10) {
        double v14 = 1.0e-10;
      }
    }
    *(_OWORD *)(a1 + 360) = v15;
    *(_OWORD *)(a1 + 376) = v15;
    *(_OWORD *)(a1 + 328) = v15;
    *(_OWORD *)(a1 + 344) = v15;
    *(_OWORD *)(a1 + 296) = v15;
    *(_OWORD *)(a1 + 312) = v15;
    *(_OWORD *)(a1 + 264) = v15;
    *(_OWORD *)(a1 + 280) = v15;
    *(_OWORD *)(a1 + 232) = v15;
    *(_OWORD *)(a1 + 248) = v15;
    *(_OWORD *)(a1 + 200) = v15;
    *(_OWORD *)(a1 + 216) = v15;
    *(_OWORD *)(a1 + 168) = v15;
    *(_OWORD *)(a1 + 184) = v15;
    *(_OWORD *)(a1 + 136) = v15;
    *(_OWORD *)(a1 + 152) = v15;
    *(_OWORD *)(a1 + 104) = v15;
    *(_OWORD *)(a1 + 120) = v15;
    *(_OWORD *)(a1 + 72) = v15;
    *(_OWORD *)(a1 + 88) = v15;
    *(_OWORD *)(a1 + 56) = v15;
    cva::PoseRefiner<double>::accumuateJacobian(a1, a4, v14);
    long long v25 = *(_OWORD *)(a1 + 360);
    *(_OWORD *)v47 = *(_OWORD *)(a1 + 344);
    *(_OWORD *)&v47[16] = v25;
    *(_OWORD *)&v47[32] = *(_OWORD *)(a1 + 376);
    memcpy(__dst, (const void *)(a1 + 56), sizeof(__dst));
    if (!cva::ldlt<double,6u,1u>()) {
      return 0;
    }
    long long v26 = *(_OWORD *)v47;
    double v42 = *(double *)&v47[16];
    long long v44 = *(_OWORD *)&v47[24];
    double v45 = *(double *)&v47[40];
    float64x2_t v48 = (float64x2_t)xmmword_252953200;
    long long v49 = *(_OWORD *)algn_252953210;
    long long v50 = xmmword_252953220;
    long long v51 = unk_252953230;
    *(void *)&long long v52 = 0x3FF0000000000000;
    float64x2_t v27 = vmulq_f64(*(float64x2_t *)&v47[8], *(float64x2_t *)&v47[8]);
    cva::ExponentialCoefficients<double,3>::ExponentialCoefficients(&v56, *(double *)&v26 * *(double *)&v26 + v27.f64[0] + v27.f64[1]);
    *(double *)&long long v52 = v56 + v58 * v42 * v42;
    double v28 = *(double *)&v26 * v58 * *((double *)&v26 + 1);
    double v29 = *(double *)&v26 * v58 * v42;
    double v30 = v58 * *((double *)&v26 + 1) * v42;
    v48.f64[0] = v56 + *(double *)&v26 * v58 * *(double *)&v26;
    v48.f64[1] = v28 + v57 * v42;
    *(double *)&long long v51 = v57 * *((double *)&v26 + 1) + v29;
    *((double *)&v51 + 1) = v30 - *(double *)&v26 * v57;
    *((double *)&v49 + 1) = v28 - v57 * v42;
    *(double *)&long long v49 = v29 - v57 * *((double *)&v26 + 1);
    *(double *)&long long v50 = v56 + v58 * *((double *)&v26 + 1) * *((double *)&v26 + 1);
    *((double *)&v50 + 1) = *(double *)&v26 * v57 + v30;
    cva::SE3GroupStorage<double,cva::Matrix<double,4u,4u,false>>::SE3GroupStorage(v43, (uint64_t *)&v48, (uint64_t)&v44);
    double v56 = COERCE_DOUBLE(v43);
    double v57 = *(double *)&a3;
    float64x2_t v48 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    cva::assign<false,false,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>>(&v48, (float64x2_t **)&v56);
    long long v31 = v53;
    *(_OWORD *)(a3 + 64) = v52;
    *(_OWORD *)(a3 + 80) = v31;
    long long v32 = v55;
    *(_OWORD *)(a3 + 96) = v54;
    *(_OWORD *)(a3 + 112) = v32;
    long long v33 = v49;
    *(float64x2_t *)a3 = v48;
    *(_OWORD *)(a3 + 16) = v33;
    long long v34 = v51;
    *(_OWORD *)(a3 + 32) = v50;
    *(_OWORD *)(a3 + 48) = v34;
    cva::SE3GroupStorage<double,cva::Matrix<double,4u,4u,false>>::log(a3, (uint64_t)&v56);
    double v35 = v56 * v56 + v57 * v57 + v58 * v58;
    if (v35 >= 9.8706044) {
      cva::PoseRefiner<double>::refinePose();
    }
    long long v52 = xmmword_2529531C0;
    long long v53 = unk_2529531D0;
    long long v54 = xmmword_2529531E0;
    long long v55 = unk_2529531F0;
    float64x2_t v48 = (float64x2_t)xmmword_252953180;
    long long v49 = *(_OWORD *)algn_252953190;
    long long v50 = xmmword_2529531A0;
    long long v51 = unk_2529531B0;
    cva::ExponentialCoefficients<double,3>::ExponentialCoefficients(v59, v35);
    cva::computeExponentialMatrix<double,cva::Matrix<double,6u,1u,false>,cva::Matrix<double,4u,4u,false>>((uint64_t *)&v56, v59, (uint64_t)&v48);
    long long v36 = v53;
    *(_OWORD *)(a3 + 64) = v52;
    *(_OWORD *)(a3 + 80) = v36;
    long long v37 = v55;
    *(_OWORD *)(a3 + 96) = v54;
    *(_OWORD *)(a3 + 112) = v37;
    long long v38 = v49;
    *(float64x2_t *)a3 = v48;
    *(_OWORD *)(a3 + 16) = v38;
    long long v39 = v51;
    *(_OWORD *)(a3 + 32) = v50;
    *(_OWORD *)(a3 + 48) = v39;
    if (i >= *(_DWORD *)(a1 + 24)
      && sqrt(*(double *)&v26 * *(double *)&v26 + *((double *)&v26 + 1) * *((double *)&v26 + 1) + v42 * v42) < *(double *)(a1 + 8)
      && sqrt(*(double *)&v44 * *(double *)&v44 + *((double *)&v44 + 1) * *((double *)&v44 + 1) + v45 * v45) < *(double *)(a1 + 16))
    {
      return 1;
    }
  }
  return v13;
}

void std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_265383AD0, MEMORY[0x263F8C060]);
}

void sub_2528A5678(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<cva::Matrix<double,2u,1u,false>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<cva::Matrix<double,3u,1u,false>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

void *std::vector<std::pair<cva::Matrix<double,3u,1u,false>,cva::Matrix<double,2u,1u,false>>>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<std::pair<cva::Matrix<double,3u,1u,false>,cva::Matrix<double,2u,1u,false>>>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    size_t v5 = 40 * ((40 * a2 - 40) / 0x28) + 40;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_2528A57F4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<std::pair<cva::Matrix<double,3u,1u,false>,cva::Matrix<double,2u,1u,false>>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<cva::Matrix<double,3u,1u,false>,cva::Matrix<double,2u,1u,false>>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[40 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<cva::Matrix<double,3u,1u,false>,cva::Matrix<double,2u,1u,false>>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

void *cva::PoseRefiner<double>::~PoseRefiner(void *a1)
{
  v2 = (void *)a1[50];
  if (v2)
  {
    a1[51] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  return a1;
}

void std::vector<double>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    std::vector<double>::__append((char **)a1, a2 - v2);
  }
}

void std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::resize(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 4);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::__append(a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + 80 * a2;
  }
}

void cva::PoseRefiner<double>::computeError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  *(_DWORD *)(a1 + 392) = 0;
  uint64_t v3 = *a2;
  if (a2[1] != *a2)
  {
    unint64_t v7 = 0;
    uint64_t v8 = a3 + 96;
    do
    {
      uint64_t v9 = *(void *)(a1 + 32);
      v28[0] = a3;
      v28[1] = 4;
      v29[0] = (double *)v28;
      v29[1] = (double *)(v3 + 40 * v7);
      memset(v30, 0, 24);
      cva::assign<false,false,cva::Matrix<double,3u,1u,false>,cva::MatrixRef<double const,3u,3u,false>,cva::Matrix<double,3u,1u,false>>((uint64_t)v30, v29);
      uint64_t v10 = 0;
      long long v26 = 0uLL;
      uint64_t v27 = 0;
      do
      {
        *(double *)((char *)&v26 + v10 * 8) = *(double *)&v29[v10 + 3] + *(double *)(v8 + v10 * 8);
        ++v10;
      }
      while (v10 != 3);
      char v11 = 0;
      uint64_t v12 = v9 + 80 * v7;
      *(void *)(v12 + 24) = v27;
      *(_OWORD *)(v12 + 8) = v26;
      double v13 = *(double *)(v12 + 24);
      if (v13 < 0.0) {
        double v14 = -1.0e-15;
      }
      else {
        double v14 = 1.0e-15;
      }
      if (v13 > -1.0e-15 && v13 < 1.0e-15) {
        double v13 = v14;
      }
      double v16 = 1.0 / v13;
      double v17 = *(double *)(v12 + 8) * (1.0 / v13);
      double v18 = *(double *)(v12 + 16) * (1.0 / v13);
      *(double *)(v12 + 32) = v17;
      *(double *)(v12 + 40) = v18;
      *(double *)(v12 + 48) = v16;
      if (v16 >= 0.0 && v16 <= 1.0e14)
      {
        uint64_t v19 = v3 + 40 * v7;
        double v20 = *(double *)(v19 + 24) - v17;
        double v21 = (double *)(v9 + 80 * v7);
        v21[7] = v20;
        double v22 = *(double *)(v19 + 32) - v18;
        if (v20 < 0.0) {
          double v20 = -v20;
        }
        double v23 = -v22;
        if (v22 >= 0.0) {
          double v23 = v22;
        }
        double v24 = v20 + v23;
        v21[8] = v22;
        v21[9] = v24;
        uint64_t v25 = *(unsigned int *)(a1 + 392);
        *(double *)(*(void *)(a1 + 400) + 8 * v25) = v24;
        *(_DWORD *)(a1 + 392) = v25 + 1;
        char v11 = 1;
      }
      *(unsigned char *)uint64_t v12 = v11;
      ++v7;
      uint64_t v3 = *a2;
    }
    while (v7 < 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3));
  }
}

uint64_t cva::PoseRefiner<double>::accumuateJacobian(uint64_t result, double *a2, double a3)
{
  *a2 = 0.0;
  unint64_t v3 = *(unsigned int *)(result + 392);
  if (v3)
  {
    unint64_t v4 = 0;
    double v58 = a3 * a3;
    size_t v5 = (double *)(*(void *)(result + 32) + 72);
    double v62 = 0.0;
    double v63 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    double v15 = 0.0;
    double v16 = 0.0;
    double v17 = 0.0;
    double v18 = 0.0;
    double v73 = 0.0;
    double v74 = 0.0;
    double v19 = 0.0;
    double v71 = 0.0;
    double v72 = 0.0;
    double v20 = 0.0;
    double v21 = 0.0;
    double v22 = 0.0;
    double v68 = 0.0;
    double v70 = 0.0;
    double v65 = 0.0;
    double v66 = 0.0;
    double v23 = 0.0;
    double v64 = 0.0;
    do
    {
      if (*((unsigned char *)v5 - 72))
      {
        ++v4;
        double v24 = *v5;
        double v25 = 1.0;
        if (*(_DWORD *)result != 1
          || v24 * v24 < v58 && (double v25 = (1.0 - v24 * v24 / v58) * (1.0 - v24 * v24 / v58), v25 >= 0.00000001))
        {
          double v26 = -v24;
          if (v24 >= 0.0) {
            double v26 = *v5;
          }
          double v61 = v23 + v25 * v26;
          *a2 = v61;
          double v27 = *(v5 - 3);
          double v28 = *(v5 - 8);
          double v29 = *(v5 - 7);
          double v30 = v27 * v27 * (v28 * v29);
          double v31 = v28 * v28 * (v27 * v27) + 1.0;
          double v32 = -(v29 * v29) * (v27 * v27) + -1.0;
          double v33 = -(v29 * v27);
          double v34 = -(v29 * (v27 * v27));
          double v35 = -(v28 * (v27 * v27));
          double v36 = -(v30 * v25);
          double v37 = v63 - v36 * v30;
          double v38 = v6 + v36 * v31;
          double v39 = v7 + v36 * v33;
          double v60 = v8 + v36 * v27;
          double v59 = v9 + v36 * 0.0;
          double v40 = v10 + v36 * v35;
          double v41 = v62 + v25 * v31 * v31;
          double v42 = v11 + v25 * v31 * v33;
          double v43 = v12 + v25 * v31 * v27;
          double v44 = v13 + v25 * v31 * 0.0;
          double v45 = v14 + v25 * v31 * v35;
          double v46 = v15 + v25 * v33 * v33;
          double v47 = v16 + v25 * v33 * v27;
          double v48 = v17 + v25 * v33 * 0.0;
          double v49 = v18 + v25 * v33 * v35;
          double v50 = v25 * *(v5 - 2);
          double v67 = v66 + v50 * v31;
          double v69 = v68 + v50 * v33;
          double v51 = v22 + v50 * v35;
          double v52 = v64 - v50 * v30;
          double v53 = v70 + v50 * v27;
          double v54 = v71 + v50 * 0.0;
          double v55 = v27 * v28;
          double v63 = v37 + v25 * v32 * v32;
          double v9 = v59 + v25 * v32 * v27;
          double v10 = v40 + v25 * v32 * v34;
          double v62 = v41 + v25 * v30 * v30;
          double v11 = v42 + v25 * v30 * v55;
          double v12 = v43 + v25 * v30 * 0.0;
          double v13 = v44 + v25 * v30 * v27;
          double v14 = v45 + v25 * v30 * v34;
          double v15 = v46 + v25 * v55 * v55;
          double v16 = v47 + v25 * v55 * 0.0;
          double v17 = v48 + v25 * v55 * v27;
          double v18 = v49 + v25 * v55 * v34;
          double v74 = v74 + v25 * v27 * v27 + v25 * 0.0 * 0.0;
          double v73 = v73 + v25 * v27 * 0.0 + v25 * 0.0 * v27;
          double v7 = v39 + v25 * v32 * v55;
          double v19 = v19 + v25 * v27 * v35 + v25 * 0.0 * v34;
          double v6 = v38 + v25 * v32 * v30;
          double v8 = v60 + v25 * v32 * 0.0;
          double v72 = v72 + v25 * 0.0 * 0.0 + v25 * v27 * v27;
          double v20 = v20 + v25 * 0.0 * v35 + v25 * v27 * v34;
          double v21 = v21 + v25 * v35 * v35 + v25 * v34 * v34;
          double v65 = v65 + v25;
          double v56 = v25 * *(v5 - 1);
          double v64 = v52 + v56 * v32;
          double v66 = v67 + v56 * v30;
          double v68 = v69 + v56 * v55;
          double v22 = v51 + v56 * v34;
          double v23 = v61;
          double v70 = v53 + v56 * 0.0;
          double v71 = v54 + v56 * v27;
        }
      }
      v5 += 10;
    }
    while (v4 < v3);
  }
  else
  {
    double v62 = 0.0;
    double v63 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    double v15 = 0.0;
    double v16 = 0.0;
    double v17 = 0.0;
    double v18 = 0.0;
    double v73 = 0.0;
    double v74 = 0.0;
    double v19 = 0.0;
    double v71 = 0.0;
    double v72 = 0.0;
    double v20 = 0.0;
    double v21 = 0.0;
    double v66 = 0.0;
    double v68 = 0.0;
    double v70 = 0.0;
    double v22 = 0.0;
    double v64 = 0.0;
    double v65 = 0.0;
  }
  *(double *)(result + 56) = v63;
  *(double *)(result + 64) = v6;
  *(double *)(result + 72) = v7;
  *(double *)(result + 80) = v8;
  *(double *)(result + 88) = v9;
  *(double *)(result + 96) = v10;
  *(double *)(result + 104) = v6;
  *(double *)(result + 112) = v62;
  *(double *)(result + 152) = v7;
  *(double *)(result + 160) = v11;
  *(double *)(result + 120) = v11;
  *(double *)(result + 128) = v12;
  *(double *)(result + 200) = v8;
  *(double *)(result + 208) = v12;
  *(double *)(result + 248) = v9;
  *(double *)(result + 256) = v13;
  *(double *)(result + 136) = v13;
  *(double *)(result + 144) = v14;
  *(double *)(result + 296) = v10;
  *(double *)(result + 304) = v14;
  *(double *)(result + 168) = v15;
  *(double *)(result + 176) = v16;
  *(double *)(result + 184) = v17;
  *(double *)(result + 192) = v18;
  *(double *)(result + 216) = v16;
  *(double *)(result + 224) = v74;
  *(double *)(result + 264) = v17;
  *(double *)(result + 272) = v73;
  *(double *)(result + 232) = v73;
  *(double *)(result + 240) = v19;
  *(double *)(result + 312) = v18;
  *(double *)(result + 320) = v19;
  *(double *)(result + 280) = v72;
  *(double *)(result + 288) = v20;
  *(double *)(result + 328) = v20;
  *(double *)(result + 336) = v21;
  *(double *)(result + 344) = v64;
  *(double *)(result + 352) = v66;
  *(double *)(result + 360) = v68;
  *(double *)(result + 368) = v70;
  *(double *)(result + 376) = v71;
  *(double *)(result + 384) = v22;
  if (v65 <= 1.0e-10) {
    double v57 = 1.79769313e308;
  }
  else {
    double v57 = *a2 / v65;
  }
  *a2 = v57;
  return result;
}

BOOL cva::ldlt<double,6u,1u>()
{
  v7[0] = 0;
  v7[1] = 0;
  cva::MatrixData<int,0ul,0ul,false>::allocate(v7, 6);
  int v8 = 6;
  int v6 = 0;
  uint64_t v5 = 0;
  cva::vecLib::sysv<double>();
  v3[0] = 0;
  v3[1] = 0;
  cva::MatrixData<double,0ul,0ul,false>::allocate(v3, (int)0.0);
  int v4 = (int)0.0;
  v0 = (cva::Logger *)cva::vecLib::sysv<double>();
  if (v6 < 0) {
    __assert_rtn("ldlt", "linearalgebra.h", 2235, "(0 <= info) || cva::detail::assertMessage(\"sysv() Linear system failed to be solved!\")");
  }
  if (v6)
  {
    cva::Logger::instance(v0);
    cva::Logger::logInCategory();
  }
  free(v3[0]);
  BOOL v1 = v6 == 0;
  free(v7[0]);
  return v1;
}

void sub_2528A60F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  free(*(void **)(v13 - 56));
  _Unwind_Resume(a1);
}

void std::vector<double>::__append(char **a1, unint64_t a2)
{
  int v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  double v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    int v8 = *a1;
    uint64_t v9 = v7 - *a1;
    unint64_t v10 = a2 + (v9 >> 3);
    if (v10 >> 61) {
      std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v9 >> 3;
    uint64_t v12 = v5 - v8;
    if (v12 >> 2 > v10) {
      unint64_t v10 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v10;
    }
    if (v13)
    {
      double v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<double>>(v4, v13);
      int v8 = *a1;
      double v7 = a1[1];
    }
    else
    {
      double v14 = 0;
    }
    double v15 = &v14[8 * v11];
    double v16 = &v14[8 * v13];
    bzero(v15, 8 * a2);
    double v17 = &v15[8 * a2];
    while (v7 != v8)
    {
      uint64_t v18 = *((void *)v7 - 1);
      v7 -= 8;
      *((void *)v15 - 1) = v18;
      v15 -= 8;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<double>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xCCCCCCCCCCCCCCCDLL * ((v6 - v7) >> 4) >= a2)
  {
    if (a2)
    {
      size_t v13 = 80 * ((80 * a2 - 80) / 0x50) + 80;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((v7 - *a1) >> 4);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x333333333333333) {
      std::vector<cva::Matrix<double,2u,1u,false>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - *a1) >> 4);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x199999999999999) {
      unint64_t v11 = 0x333333333333333;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<cva::PoseRefiner<double>::projData>>(v4, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    __p = v12;
    double v16 = &v12[80 * v8];
    uint64_t v18 = &v12[80 * v11];
    size_t v14 = 80 * ((80 * a2 - 80) / 0x50) + 80;
    bzero(v16, v14);
    double v17 = &v16[v14];
    std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::__swap_out_circular_buffer(a1, &__p);
    if (v17 != v16) {
      double v17 = &v16[(v17 - v16 - 80) % 0x50uLL];
    }
    if (__p) {
      operator delete(__p);
    }
  }
}

void sub_2528A63FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::vector<cva::PoseRefiner<double>::projData,std::allocator<cva::PoseRefiner<double>::projData>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  if (v2 != *result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v4 + v5;
      *(unsigned char *)(v6 - 80) = *(unsigned char *)(v2 + v5 - 80);
      long long v7 = *(_OWORD *)(v2 + v5 - 72);
      *(void *)(v6 - 56) = *(void *)(v2 + v5 - 56);
      *(_OWORD *)(v6 - 72) = v7;
      *(_OWORD *)(v6 - 48) = *(_OWORD *)(v2 + v5 - 48);
      *(void *)(v6 - 32) = *(void *)(v2 + v5 - 32);
      *(_OWORD *)(v6 - 24) = *(_OWORD *)(v2 + v5 - 24);
      *(void *)(v6 - 8) = *(void *)(v2 + v5 - 8);
      v5 -= 80;
    }
    while (v2 + v5 != v3);
    v4 += v5;
  }
  a2[1] = v4;
  uint64_t v8 = *result;
  char *result = v4;
  a2[1] = v8;
  uint64_t v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<cva::PoseRefiner<double>::projData>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(80 * a2);
}

double cva::assign<false,false,cva::Matrix<double,3u,1u,false>,cva::MatrixRef<double const,3u,3u,false>,cva::Matrix<double,3u,1u,false>>(uint64_t a1, double **a2)
{
  uint64_t v3 = *(void *)*a2;
  if (v3 - 8 * *((unsigned int *)*a2 + 3) == a1 || (uint64_t v4 = a2[1], v4 == (double *)a1))
  {
    long long v11 = 0uLL;
    uint64_t v12 = 0;
    cva::assign<false,false,cva::Matrix<double,3u,1u,false>,cva::MatrixRef<double const,3u,3u,false>,cva::Matrix<double,3u,1u,false>>(&v11);
    double result = *(double *)&v11;
    *(_OWORD *)a1 = v11;
    *(void *)(a1 + 16) = v12;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = *((unsigned int *)*a2 + 2);
    do
    {
      if (v6)
      {
        uint64_t v7 = 0;
        double result = 0.0;
        uint64_t v9 = v4;
        do
        {
          double v10 = *v9++;
          double result = result + *(double *)(v3 + v7) * v10;
          v7 += 8 * v6;
        }
        while (8 * (3 * v6) != v7);
      }
      else
      {
        double result = 0.0;
      }
      *(double *)(a1 + 8 * v5++) = result;
      v3 += 8;
    }
    while (v5 != 3);
  }
  return result;
}

double std::__nth_element[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(double *a1, double *a2, double *a3, double result)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    do
    {
      unint64_t v7 = v4 - a1;
      if (v7 < 2) {
        break;
      }
      if (v7 == 3)
      {
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(a1, a1 + 1, v4 - 1);
        return result;
      }
      if (v7 == 2)
      {
        double result = *(v4 - 1);
        double v30 = *a1;
        if (result < *a1)
        {
          *a1 = result;
          *(v4 - 1) = v30;
        }
        return result;
      }
      if ((char *)v4 - (char *)a1 <= 63)
      {
        return std::__selection_sort[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(a1, v4, result);
      }
      uint64_t v8 = &a1[v7 >> 1];
      uint64_t v9 = v4 - 1;
      int v10 = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(a1, v8, v4 - 1);
      double result = *a1;
      if (*a1 >= *v8)
      {
        long long v11 = v4 - 1;
        while (--v11 != a1)
        {
          if (*v11 < *v8)
          {
            *a1 = *v11;
            double *v11 = result;
            ++v10;
            goto LABEL_13;
          }
        }
        double v21 = a1 + 1;
        if (result >= *v9)
        {
          while (v21 != v9)
          {
            double v22 = *v21;
            if (result < *v21)
            {
              *v21++ = *v9;
              double *v9 = v22;
              goto LABEL_45;
            }
            ++v21;
          }
          return result;
        }
LABEL_45:
        if (v21 == v9) {
          return result;
        }
        while (1)
        {
          double v25 = *a1;
          do
          {
            double v26 = *v21++;
            double result = v26;
          }
          while (v25 >= v26);
          double v27 = v21 - 1;
          do
          {
            double v28 = *--v9;
            double v29 = v28;
          }
          while (v25 < v28);
          if (v27 >= v9) {
            break;
          }
          *double v27 = v29;
          double *v9 = result;
        }
        a1 = v21 - 1;
        if (v27 > a2) {
          return result;
        }
      }
      else
      {
        long long v11 = v4 - 1;
LABEL_13:
        uint64_t v12 = a1 + 1;
        if (a1 + 1 >= v11)
        {
          double v16 = a1 + 1;
        }
        else
        {
          size_t v13 = a1 + 1;
          while (1)
          {
            double v14 = *v8;
            do
            {
              double v15 = *v13++;
              double result = v15;
            }
            while (v15 < v14);
            double v16 = v13 - 1;
            do
            {
              double v17 = *--v11;
              double v18 = v17;
            }
            while (v17 >= v14);
            if (v16 >= v11) {
              break;
            }
            double *v16 = v18;
            double *v11 = result;
            ++v10;
            if (v16 == v8) {
              uint64_t v8 = v11;
            }
          }
        }
        if (v16 != v8)
        {
          double result = *v8;
          double v19 = *v16;
          if (*v8 < *v16)
          {
            double *v16 = result;
            *uint64_t v8 = v19;
            ++v10;
          }
        }
        if (v16 == a2) {
          return result;
        }
        if (!v10)
        {
          if (v16 <= a2)
          {
            double v23 = v16 + 1;
            while (v23 != v4)
            {
              double v24 = *(v23 - 1);
              double result = *v23++;
              if (result < v24) {
                goto LABEL_29;
              }
            }
          }
          else
          {
            while (v12 != v16)
            {
              double v20 = *(v12 - 1);
              double result = *v12++;
              if (result < v20) {
                goto LABEL_29;
              }
            }
          }
          return result;
        }
LABEL_29:
        if (v16 <= a2) {
          a1 = v16 + 1;
        }
        else {
          uint64_t v4 = v16;
        }
      }
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(double *a1, double *a2, double *a3)
{
  double v3 = *a2;
  double v4 = *a1;
  double v5 = *a3;
  if (*a2 < *a1)
  {
    if (v5 < v3)
    {
      *a1 = v5;
      *a3 = v4;
      return 1;
    }
    *a1 = v3;
    *a2 = v4;
    if (*a3 >= v4) {
      return 1;
    }
    *a2 = *a3;
    *a3 = v4;
    return 2;
  }
  if (v5 < v3)
  {
    *a2 = v5;
    *a3 = v3;
    double v6 = *a1;
    if (*a2 >= *a1) {
      return 1;
    }
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

double std::__selection_sort[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::__wrap_iter<double *>>(double *a1, double *a2, double result)
{
  while (a1 != a2 - 1)
  {
    double v3 = a1++;
    if (v3 != a2 && a1 != a2)
    {
      double result = *v3;
      double v4 = a1;
      double v5 = v3;
      double v6 = a1;
      do
      {
        double v7 = *v6++;
        double v8 = v7;
        if (v7 < result)
        {
          double result = v8;
          double v5 = v4;
        }
        double v4 = v6;
      }
      while (v6 != a2);
      if (v5 != v3)
      {
        double result = *v3;
        *double v3 = *v5;
        *double v5 = result;
      }
    }
  }
  return result;
}

uint64_t cva::MatrixData<int,0ul,0ul,false>::allocate(void **a1, uint64_t a2)
{
  if (*a1) {
    cva::MatrixData<int,0ul,0ul,false>::allocate();
  }
  size_t v3 = (4 * a2 + 31) & 0xFFFFFFFFFFFFFFE0;
  a1[1] = (void *)(v3 >> 2);
  memptr = 0;
  uint64_t result = malloc_type_posix_memalign(&memptr, 0x20uLL, v3, 0x49090899uLL);
  double v5 = memptr;
  *a1 = memptr;
  if (!v5) {
    cva::MatrixData<int,0ul,0ul,false>::allocate();
  }
  return result;
}

uint64_t cva::MatrixData<double,0ul,0ul,false>::allocate(void **a1, uint64_t a2)
{
  if (*a1) {
    cva::MatrixData<int,0ul,0ul,false>::allocate();
  }
  size_t v3 = (8 * a2 + 31) & 0xFFFFFFFFFFFFFFE0;
  a1[1] = (void *)(v3 >> 3);
  memptr = 0;
  uint64_t result = malloc_type_posix_memalign(&memptr, 0x20uLL, v3, 0x49090899uLL);
  double v5 = memptr;
  *a1 = memptr;
  if (!v5) {
    cva::MatrixData<int,0ul,0ul,false>::allocate();
  }
  return result;
}

double *cva::ExponentialCoefficients<double,3>::ExponentialCoefficients(double *a1, double a2)
{
  if (a2 >= 0.0000002635)
  {
    double v8 = sqrt(a2);
    __double2 v9 = __sincos_stret(v8);
    double cosval = v9.__cosval;
    double v6 = v9.__sinval / v8;
    double v4 = 1.0 / a2 * (1.0 - v9.__cosval);
    double v5 = 1.0 / a2 * (1.0 - v9.__sinval / v8);
  }
  else
  {
    double v4 = 0.5 - a2 * (a2 / -720.0 + 0.0416666667);
    double v5 = 0.166666667 - a2 * (a2 / -5040.0 + 0.00833333333);
    double v6 = 1.0 - a2 * v5;
    double cosval = 1.0 - a2 * v4;
  }
  a1[2] = v4;
  a1[3] = v5;
  *a1 = cosval;
  a1[1] = v6;
  return a1;
}

double cva::SE3GroupStorage<double,cva::Matrix<double,4u,4u,false>>::SE3GroupStorage(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = 0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  unint64_t v4 = 0x100000000;
  *a1 = 0u;
  a1[1] = 0u;
  do
  {
    uint64_t v5 = *a2++;
    *((void *)a1 + v3) = v5;
    unint64_t v6 = HIDWORD(v4);
    BOOL v7 = (int)v4 < 2;
    if ((int)v4 < 2) {
      unint64_t v6 = 0;
    }
    uint64_t v8 = v3 + v6;
    uint64_t v9 = (v4 + 1);
    unint64_t v10 = v4 & 0xFFFFFFFF00000000;
    if (!v7) {
      uint64_t v9 = 0;
    }
    unint64_t v4 = v9 | v10;
    uint64_t v3 = v8 + 1;
  }
  while (v3 != 12);
  for (uint64_t i = 0; i != 24; i += 8)
  {
    double result = *(double *)(a3 + i);
    *(double *)((char *)a1 + i + 96) = result;
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  double v15 = (char *)a1 + 24;
  do
  {
    while (v14 == 4)
    {
      *(void *)&v15[32 * v13++] = 0;
      if (v13 == 4) {
        return result;
      }
    }
    double result = dbl_252953248[v14];
    uint64_t v16 = v14 + 1;
    *(double *)&v15[32 * v13++] = result;
    ++v14;
  }
  while (v13 != 4);
  if (v16 != 4) {
    cva::SE3GroupStorage<double,cva::Matrix<double,4u,4u,false>>::SE3GroupStorage();
  }
  return result;
}

float64_t cva::assign<false,false,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>>(float64x2_t *a1, float64x2_t **a2)
{
  uint64_t v3 = *a2;
  if (*a2 == a1 || (unint64_t v4 = a2[1], v4 == a1))
  {
    float64x2_t v25 = 0u;
    float64x2_t v26 = 0u;
    float64x2_t v23 = 0u;
    float64x2_t v24 = 0u;
    float64x2_t v21 = 0u;
    float64x2_t v22 = 0u;
    float64x2_t v19 = 0u;
    float64x2_t v20 = 0u;
    cva::assign<false,false,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>,cva::Matrix<double,4u,4u,false>>(&v19);
    float64x2_t v14 = v24;
    a1[4] = v23;
    a1[5] = v14;
    float64x2_t v15 = v26;
    a1[6] = v25;
    a1[7] = v15;
    float64x2_t v16 = v20;
    *a1 = v19;
    a1[1] = v16;
    v7.f64[0] = v21.f64[0];
    float64x2_t v17 = v22;
    a1[2] = v21;
    a1[3] = v17;
  }
  else
  {
    for (uint64_t i = 0; i != 4; ++i)
    {
      uint64_t v6 = 0;
      float64x2_t v7 = 0uLL;
      uint64_t v8 = v3;
      float64x2_t v9 = 0uLL;
      do
      {
        double v10 = v4->f64[v6];
        float64x2_t v11 = *v8;
        float64x2_t v12 = v8[1];
        v8 += 2;
        float64x2_t v9 = vmlaq_n_f64(v9, v12, v10);
        float64x2_t v7 = vmlaq_n_f64(v7, v11, v10);
        ++v6;
      }
      while (v6 != 4);
      uint64_t v13 = &a1[2 * i];
      *uint64_t v13 = v7;
      v13[1] = v9;
      v4 += 2;
    }
  }
  return v7.f64[0];
}

double *cva::SE3GroupStorage<double,cva::Matrix<double,4u,4u,false>>::log@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v31[4] = *MEMORY[0x263EF8340];
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(void *)&long long v28 = a1;
  *((void *)&v28 + 1) = 4;
  float64x2_t v23 = (double *)a2;
  uint64_t v24 = 6;
  cva::computeLogarithmVector<cva::MatrixRef<double const,3u,3u,false>,cva::MatrixRef<double,3u,1u,false>>((uint64_t)&v28, &v23);
  double v4 = *(double *)a2 * *(double *)a2
     + *(double *)(a2 + 8) * *(double *)(a2 + 8)
     + *(double *)(a2 + 16) * *(double *)(a2 + 16);
  double result = cva::ExponentialCoefficients<double,3>::ExponentialCoefficients(&v19, v4);
  if (v4 >= 2.775e-15)
  {
    double v6 = (v21 + v20 * -0.5) / (v4 * v21);
    if (v4 <= 9.0) {
      double v6 = -(v22 - v21 * 0.5) / v20;
    }
  }
  else
  {
    double v6 = v4 * 0.00138888889 + 0.0833333333 + v4 * 0.0000330687831;
  }
  uint64_t v7 = 0;
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v8 = a1 + 96;
  v17[0] = 0;
  v17[1] = 0;
  uint64_t v18 = 0;
  double v11 = *(double *)a2;
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(v8 + 16);
  *((void *)&v28 + 1) = *(void *)(a2 + 8);
  uint64_t v29 = v12;
  double v30 = v11;
  v31[0] = v13;
  v31[1] = v9;
  v31[2] = v10;
  uint64_t v24 = v12;
  double v25 = v11;
  uint64_t v26 = *((void *)&v28 + 1);
  v27[0] = v10;
  v27[1] = v13;
  v27[2] = v9;
  do
  {
    *(double *)&v17[v7] = *(double *)((char *)&v28 + v7 * 8 + 8) * *(double *)&v31[v7]
                        - *(double *)&(&v23)[v7 + 1] * *(double *)&v27[v7];
    ++v7;
  }
  while (v7 != 3);
  uint64_t v14 = 0;
  long long v28 = 0uLL;
  uint64_t v29 = 0;
  unint64_t v15 = 2;
  do
  {
    if (v14 == 2) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v14 + 1;
    }
    *((double *)&v28 + v14) = *(double *)(v8 + 8 * v14)
                            + *(double *)&v17[v14] * -0.5
                            + v6
                            * (*(double *)(a2 + 8 * v16) * *((double *)&v18 + v14 + -3 * (v15 / 3))
                             - *(double *)(a2 + 16 - 24 * (v15 / 3) + 8 * v14) * *(double *)&v17[v16]);
    ++v15;
    ++v14;
  }
  while (v14 != 3);
  *(_OWORD *)(a2 + 24) = v28;
  *(void *)(a2 + 40) = v29;
  return result;
}

void cva::computeLogarithmVector<cva::MatrixRef<double const,3u,3u,false>,cva::MatrixRef<double,3u,1u,false>>(uint64_t a1, double **a2)
{
  uint64_t v2 = *(double **)a1;
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  uint64_t v4 = (v3 + 2);
  uint64_t v5 = (2 * v3) | 1u;
  double v6 = (*(double *)(*(void *)a1 + 8 * v4) - *(double *)(*(void *)a1 + 8 * v5)) * 0.5;
  uint64_t v7 = *a2;
  double *v7 = v6;
  uint64_t v8 = (float64x2_t *)&v2[(2 * v3)];
  double v9 = (v8->f64[0] - v2[2]) * 0.5;
  v7[1] = v9;
  double v10 = (v2[1] - v2[v3]) * 0.5;
  v7[2] = v10;
  double v11 = *v2;
  double v12 = v2[(v3 + 1)];
  double v13 = v2[(2 * v3 + 2)];
  double v14 = -1.0;
  double v15 = (*v2 + v12 + v13 + -1.0) * 0.5;
  double v16 = v9 * v9 + v6 * v6 + v10 * v10;
  if (v15 >= -1.0 || v15 + 1.0 <= -0.00001)
  {
    BOOL v17 = v15 > 1.0;
    if (v15 + -1.0 >= 0.00001) {
      BOOL v17 = 0;
    }
    if (v15 > 0.99 || v17)
    {
      double v19 = v16 * (v16 * (v16 * 5.0 / 112.0 + 0.075) + 0.166666667) + 1.0;
LABEL_12:
      double *v7 = v6 * v19;
      v7[1] = v9 * v19;
      double v20 = v10 * v19;
LABEL_23:
      v7[2] = v20;
      return;
    }
    if (v15 > -0.99)
    {
      double v19 = acos(v15) / sqrt(v16);
      goto LABEL_12;
    }
    double v14 = (*v2 + v12 + v13 + -1.0) * 0.5;
  }
  long double v21 = asin(sqrt(v16));
  double v22 = (3.14159265 - v21) * (3.14159265 - v21) / (1.0 - v14);
  double v23 = (v11 - v14) * v22;
  double v24 = (v12 - v14) * v22;
  double v25 = (v13 - v14) * v22;
  if (v23 <= v24)
  {
    double v30 = v22 * 0.5;
    if (v24 > v25)
    {
      double v31 = sqrt(v24);
      if (v9 < 0.0) {
        double v31 = -v31;
      }
      v7[1] = v31;
      double v32 = 1.0 / v31;
      double v33 = v2[v5] + v2[v4];
      double *v7 = v32 * (v30 * (v2[v3] + v2[1]));
      double v20 = v32 * (v30 * v33);
      goto LABEL_23;
    }
    double v37 = sqrt(v25);
    if (v10 < 0.0) {
      double v37 = -v37;
    }
    v7[2] = v37;
    v38.f64[0] = v2[2];
    v38.f64[1] = v2[v4];
    *(float64x2_t *)uint64_t v7 = vmulq_n_f64(vmulq_n_f64(vaddq_f64(*v8, v38), v30), 1.0 / v37);
  }
  else
  {
    double v26 = v22 * 0.5;
    double v27 = v26 * (v8->f64[0] + v2[2]);
    if (v23 <= v25)
    {
      double v34 = sqrt(v25);
      if (v10 < 0.0) {
        double v34 = -v34;
      }
      v7[2] = v34;
      double v35 = 1.0 / v34;
      double v36 = v35 * (v26 * (v2[v5] + v2[v4]));
      double *v7 = v35 * v27;
      v7[1] = v36;
    }
    else
    {
      double v28 = sqrt(v23);
      if (v6 < 0.0) {
        double v28 = -v28;
      }
      double *v7 = v28;
      double v29 = 1.0 / v28;
      v7[1] = v29 * (v26 * (v2[v3] + v2[1]));
      v7[2] = v29 * v27;
    }
  }
}

double cva::computeExponentialMatrix<double,cva::Matrix<double,6u,1u,false>,cva::Matrix<double,4u,4u,false>>(uint64_t *a1, double *a2, uint64_t a3)
{
  v34[4] = *MEMORY[0x263EF8340];
  double v6 = *a2;
  double v7 = a2[1];
  double v8 = a2[2];
  *(void *)&long long v31 = a1;
  *((void *)&v31 + 1) = 6;
  uint64_t v26 = a3;
  uint64_t v27 = 4;
  cva::computeExponentialMatrix<double,cva::MatrixRef<double const,3u,1u,false>,cva::MatrixRef<double,3u,3u,false>>((double **)&v31, (uint64_t)&v26, v6, v7, v8);
  uint64_t v9 = 0;
  v24[0] = 0;
  v24[1] = 0;
  uint64_t v25 = 0;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v14 = a1[5];
  *((void *)&v31 + 1) = a1[1];
  uint64_t v32 = v11;
  uint64_t v33 = v10;
  v34[0] = v14;
  v34[1] = v12;
  v34[2] = v13;
  uint64_t v27 = v11;
  uint64_t v28 = v10;
  uint64_t v29 = *((void *)&v31 + 1);
  v30[0] = v13;
  v30[1] = v14;
  v30[2] = v12;
  do
  {
    *(double *)&v24[v9] = *(double *)((char *)&v31 + v9 * 8 + 8) * *(double *)&v34[v9]
                        - *(double *)((char *)&v26 + v9 * 8 + 8) * *(double *)&v30[v9];
    ++v9;
  }
  while (v9 != 3);
  double result = a2[2];
  double v16 = a2[3];
  BOOL v17 = (double *)(a3 + 96);
  if (a1 == (uint64_t *)a3)
  {
    uint64_t v21 = 0;
    long long v31 = 0uLL;
    uint64_t v32 = 0;
    unint64_t v22 = 2;
    do
    {
      if (v21 == 2) {
        uint64_t v23 = 0;
      }
      else {
        uint64_t v23 = v21 + 1;
      }
      *((double *)&v31 + v21) = *(double *)&a1[v21 + 3]
                              + result * *(double *)&v24[v21]
                              + v16
                              * (*(double *)&a1[v23] * *((double *)&v25 + v21 + -3 * (v22 / 3))
                               - *(double *)&a1[v21 + 2 + -3 * (v22 / 3)] * *(double *)&v24[v23]);
      ++v22;
      ++v21;
    }
    while (v21 != 3);
    double result = *(double *)&v31;
    *(_OWORD *)BOOL v17 = v31;
    *(void *)(a3 + 112) = v32;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = 2;
    do
    {
      if (v18 == 2) {
        uint64_t v20 = 0;
      }
      else {
        uint64_t v20 = v18 + 1;
      }
      v17[v18] = *(double *)&a1[v18 + 3]
               + result * *(double *)&v24[v18]
               + v16
               * (*(double *)&a1[v20] * *((double *)&v25 + v18 + -3 * (v19 / 3))
                - *(double *)&a1[v18 + 2 + -3 * (v19 / 3)] * *(double *)&v24[v20]);
      ++v19;
      ++v18;
    }
    while (v18 != 3);
  }
  return result;
}

double cva::computeExponentialMatrix<double,cva::MatrixRef<double const,3u,1u,false>,cva::MatrixRef<double,3u,3u,false>>(double **a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5 = *a1;
  double v6 = **a1;
  double v7 = v6 * a5;
  double v8 = (*a1)[1] * a5;
  double v9 = (*a1)[2] * a5;
  uint64_t v10 = *(double **)a2;
  double *v10 = a3 + v7 * v6;
  uint64_t v11 = *(unsigned int *)(a2 + 8);
  v10[(v11 + 1)] = a3 + v8 * v5[1];
  int v12 = 2 * v11;
  v10[v12 + 2] = a3 + v9 * v5[2];
  double v13 = v5[1];
  double v14 = v7 * v13;
  double v15 = v5[2];
  double v16 = v7 * v15;
  double v17 = v8 * v15;
  double v18 = *v5 * a4;
  double v19 = v13 * a4;
  double v20 = v15 * a4;
  v10[v11] = v14 - v20;
  v10[v12] = v19 + v16;
  v10[1] = v14 + v20;
  v10[(2 * v11) | 1u] = v17 - v18;
  v10[2] = v16 - v19;
  double result = v17 + v18;
  v10[(v11 + 2)] = v17 + v18;
  return result;
}

uint64_t TensorKey.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TensorKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TensorKey.rawValue.modify())()
{
  return nullsub_1;
}

Human::TensorKey __swiftcall TensorKey.init(rawValue:)(Human::TensorKey rawValue)
{
  Human::TensorKey *v1 = rawValue;
  return rawValue;
}

void static TensorKey.image.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025295A0B0;
}

void static TensorKey.cameraIntrinsics.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000023;
  a1[1] = 0x800000025295A0D0;
}

void static TensorKey.inverseCameraIntrinsics.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002ALL;
  a1[1] = 0x800000025295A100;
}

void static TensorKey.rects.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x800000025295A130;
}

void static TensorKey.skeleton2D.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025295A150;
}

void static TensorKey.skeleton3D.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025295A170;
}

void static TensorKey.fusedSkeleton.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025295A190;
}

void static TensorKey.repetitions.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x800000025295A1B0;
}

void static TensorKey.bodyAnchor.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x800000025295A1D0;
}

void *sub_2528A76DC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_2528A76E8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_2528A76F8()
{
  unint64_t result = qword_269C31900;
  if (!qword_269C31900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31900);
  }
  return result;
}

uint64_t sub_2528A774C()
{
  return sub_2529521C8();
}

uint64_t sub_2528A77A8()
{
  swift_bridgeObjectRetain();
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2528A7800()
{
  return sub_2529521C8();
}

uint64_t sub_2528A7858(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_252952108();
  }
}

void *initializeBufferWithCopyOfBuffer for TensorKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TensorKey()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for TensorKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for TensorKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorKey()
{
  return &type metadata for TensorKey;
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for OneEuroFilter(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OneEuroFilter(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

uint64_t sub_2528A7A64(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2528A7A84(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2528A7AD4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2528A7AF4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

uint64_t _s8KeypointVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2528A7B8C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2528A7BAC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
}

uint64_t sub_2528A7BF8(uint64_t a1, uint64_t a2)
{
  return sub_2528A811C(a1, a2, MEMORY[0x270FA9BA8]);
}

uint64_t sub_2528A7C10(uint64_t a1, id *a2)
{
  uint64_t result = sub_252951AC8();
  *a2 = 0;
  return result;
}

uint64_t sub_2528A7C88(uint64_t a1, id *a2)
{
  char v3 = sub_252951AD8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2528A7D08@<X0>(uint64_t *a1@<X8>)
{
  sub_252951AE8();
  uint64_t v2 = sub_252951AB8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2528A7D4C(uint64_t a1, uint64_t a2)
{
  return sub_2528A811C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_2528A7D74(uint64_t a1)
{
  uint64_t v2 = sub_2528A80D4(&qword_269C31AC0, type metadata accessor for DeviceType);
  uint64_t v3 = sub_2528A80D4(&qword_269C31AC8, type metadata accessor for DeviceType);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2528A7E30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_252951AB8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2528A7E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_252951AE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2528A7EA4(uint64_t a1)
{
  uint64_t v2 = sub_2528A80D4(&qword_269C31AB0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_2528A80D4(&qword_269C31AB8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

__n128 __swift_memcpy32_16(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2528A7F80(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2528A7FA0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CoreIKTransform(uint64_t a1)
{
}

void type metadata accessor for DeviceType(uint64_t a1)
{
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

uint64_t sub_2528A8044()
{
  return sub_2528A80D4(&qword_269C31A80, type metadata accessor for DeviceType);
}

uint64_t sub_2528A808C()
{
  return sub_2528A80D4(&qword_269C31A88, type metadata accessor for DeviceType);
}

uint64_t sub_2528A80D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2528A811C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_252951AE8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2528A8160()
{
  sub_252951AE8();
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2528A81B4()
{
  sub_252951AE8();
  sub_252952198();
  sub_252951AF8();
  uint64_t v0 = sub_2529521C8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2528A8228()
{
  uint64_t v0 = sub_252951AE8();
  uint64_t v2 = v1;
  if (v0 == sub_252951AE8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2528A82B4()
{
  return sub_2528A80D4(&qword_269C31A90, type metadata accessor for DeviceType);
}

uint64_t sub_2528A82FC()
{
  return sub_2528A80D4(&qword_269C31A98, type metadata accessor for URLResourceKey);
}

uint64_t sub_2528A8344()
{
  return sub_2528A80D4(&qword_269C31AA0, type metadata accessor for URLResourceKey);
}

uint64_t sub_2528A838C()
{
  return sub_2528A80D4(&qword_269C31AA8, type metadata accessor for URLResourceKey);
}

void type metadata accessor for simd_quatf(uint64_t a1)
{
}

void sub_2528A83E8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

ValueMetadata *type metadata accessor for MedianFilter()
{
  return &type metadata for MedianFilter;
}

_UNKNOWN **sub_2528A8454()
{
  return &protocol witness table for MLTensor;
}

uint64_t sub_2528A8460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C10);
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_252951678();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_252951A08();
  v3[19] = v7;
  v3[20] = *(void *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528A8684, 0, 0);
}

uint64_t sub_2528A8684()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[6], v2);
  uint64_t v4 = sub_252951898();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v0[25] = v5;
  v0[26] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v6 = v5(v1, v2);
  if (v4 != 2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = v0[7];
  sub_2529516E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_252953740;
  uint64_t v12 = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x270EE76F8](v6, v7, v8, v9, v10);
  }
  uint64_t v13 = v0[22];
  uint64_t v14 = v0[21];
  uint64_t v16 = v0[18];
  uint64_t v15 = v0[19];
  uint64_t v18 = v0[16];
  uint64_t v17 = v0[17];
  uint64_t v19 = v12 / 2;
  *(void *)(v6 + 32) = v19;
  *(void *)(v6 + 40) = v19;
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v16, *MEMORY[0x263F00BF0], v18);
  sub_252951958();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v5(v14, v15);
  sub_252951708();
  v5(v13, v15);
  double v20 = (void *)swift_task_alloc();
  v0[27] = v20;
  *double v20 = v0;
  v20[1] = sub_2528A88BC;
  uint64_t v6 = v0[15];
  uint64_t v7 = MEMORY[0x263F8D5C8];
  uint64_t v9 = MEMORY[0x263F00C58];
  uint64_t v10 = MEMORY[0x263F00C50];
  uint64_t v8 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v6, v7, v8, v9, v10);
}

uint64_t sub_2528A88BC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528A89B8, 0, 0);
}

uint64_t sub_2528A89B8()
{
  uint64_t result = sub_252951558();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)(result + 32);
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v0[12] + 8);
    uint64_t v28 = (void (**)(uint64_t, uint64_t))(v0[9] + 8);
    uint64_t v29 = v0[12];
    unint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v30 = v2;
    do
    {
      uint64_t v5 = v0[13];
      uint64_t v6 = v0[10];
      uint64_t v7 = v0[11];
      uint64_t v9 = v0[7];
      uint64_t v8 = v0[8];
      sub_252951578();
      sub_2528AB6E8(&qword_269C31C20, &qword_269C31C10);
      uint64_t v10 = sub_2529515D8();
      (*v28)(v6, v8);
      uint64_t v11 = sub_2528A8EA4(v10, v9);
      swift_bridgeObjectRelease();
      v0[2] = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_252953740;
      *(void *)(v12 + 32) = *(void *)(v11 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
      sub_2528AB6E8(&qword_269C31C38, &qword_269C31C30);
      sub_252951568();
      sub_252951538();
      (*v27)(v5, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v4 = sub_2528C4314(0, *(void *)(v4 + 16) + 1, 1, v4);
      }
      unint64_t v14 = *(void *)(v4 + 16);
      unint64_t v13 = *(void *)(v4 + 24);
      if (v14 >= v13 >> 1) {
        unint64_t v4 = sub_2528C4314(v13 > 1, v14 + 1, 1, v4);
      }
      ++v3;
      uint64_t v15 = v0[14];
      uint64_t v16 = v0[11];
      *(void *)(v4 + 16) = v14 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v4+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v14, v15, v16);
    }
    while (v30 != v3);
  }
  else
  {
    unint64_t v4 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[25];
  uint64_t v17 = v0[23];
  uint64_t v24 = v0[15];
  uint64_t v25 = v0[19];
  uint64_t v18 = v0[12];
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[8];
  uint64_t v21 = v0[9];
  uint64_t v23 = v0[11];
  v0[3] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C40);
  sub_2528AB6E8(&qword_269C31C48, &qword_269C31C40);
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515A8();
  sub_2529515B8();
  sub_2528AB6E8(&qword_269C31C20, &qword_269C31C10);
  v0[4] = sub_2529515D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  sub_2529518E8();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v24, v23);
  v26(v17, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_2528A8EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (v2 < 0) {
    uint64_t v2 = a2;
  }
  unint64_t v5 = v2 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = v4 - v5;
  if (__OFSUB__(v4, v5)) {
    goto LABEL_36;
  }
  if (v6 < 0)
  {
LABEL_37:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  if (v6)
  {
    uint64_t v8 = 0;
    uint64_t v22 = v4 + 1;
    if (a2 <= v4 + 1) {
      uint64_t v9 = v4 + 1;
    }
    else {
      uint64_t v9 = a2;
    }
    uint64_t v20 = a1 + 32;
    uint64_t v21 = v9 - a2;
    unint64_t v10 = (unint64_t)a2 >> 1;
    unint64_t v11 = (2 * a2) | 1;
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
    while (v6 != v8)
    {
      if (a2 < 0) {
        goto LABEL_31;
      }
      if (v22 == v8) {
        goto LABEL_32;
      }
      if (v21 == v8) {
        goto LABEL_33;
      }
      sub_252952118();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = MEMORY[0x263F8EE78];
      }
      uint64_t v14 = *(void *)(v13 + 16);
      swift_release();
      if (v14 == a2)
      {
        uint64_t v15 = swift_dynamicCastClass();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_2528A9398(a1, v20, v8, v11);
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = v15;
      sub_2528A932C(&v23);
      if (v10 >= *(void *)(v23 + 16)) {
        goto LABEL_34;
      }
      int v16 = *(_DWORD *)(v23 + 4 * v10 + 32);
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_2528C4204(0, *((void *)v12 + 2) + 1, 1, v12);
      }
      unint64_t v18 = *((void *)v12 + 2);
      unint64_t v17 = *((void *)v12 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v12 = sub_2528C4204((char *)(v17 > 1), v18 + 1, 1, v12);
      }
      ++v8;
      *((void *)v12 + 2) = v18 + 1;
      *(_DWORD *)&v12[4 * v18 + 32] = v16;
      swift_bridgeObjectRelease();
      v11 += 2;
      if (v6 == v8) {
        return (uint64_t)v12;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2528A90FC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528A91AC;
  return sub_2528A8460(a1, a2, v6);
}

uint64_t sub_2528A91AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2528A932C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2528AB1BC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2528A96C8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2528A9398(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 4 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 4 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 29;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 2);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

void *sub_2528A9508(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C78);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_2528AB484((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_252951F38();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

int64_t *sub_2528A9600(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x263F8EE78];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      void v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    uint64_t result = sub_2528AB20C(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2528A96C8(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2529520B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v83 = *(float *)(v81 + 4 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          v88 = v11;
          v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_2528A9D5C((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(void *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v88 = sub_2528AA3C4((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          v92 = &v88[16 * v87 + 32];
          *(void *)v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_252951BD8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  v94 = v2;
  uint64_t v95 = *v2 - 4;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 4 * v9);
      float v15 = *(float *)(v10 + 4 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        float v16 = v14;
        while (1)
        {
          float v17 = v16;
          float v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          unint64_t v18 = (int *)(v95 + 4 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              int v22 = *v21;
              *uint64_t v21 = *v18;
              int *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (float *)(v95 + 4 * v9);
      do
      {
        float v25 = *(float *)(v10 + 4 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          float v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2528A9FCC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_2528A9FCC((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    uint64_t v32 = &v11[16 * v30 + 32];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          float64x2_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          double v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            double v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        double v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        double v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        double v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        double v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_2528A9D5C((float *)(v10 + 4 * *(void *)v73), (float *)(v10 + 4 * *(void *)v76), v10 + 4 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)double v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_252951F18();
  __break(1u);
  return result;
}

uint64_t sub_2528A9D5C(float *__src, float *a2, unint64_t a3, float *__dst)
{
  int64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      float v16 = &v4[v13];
      int v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        float v17 = (float *)(a3 - 4);
        while (1)
        {
          unint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          float v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            int v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              float *v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              float *v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    float v14 = &v4[v10];
    int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            float *v7 = *v4;
          }
          uint64_t v23 = ++v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            float *v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2528AA0C8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528A9FCC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  float v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2528AA0C8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_252951F78();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_2528AA184(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_252951F78();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_2528AA250(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_252951F78();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_2528AA308(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_252951F78();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_2528AA3C4(uint64_t a1)
{
  return sub_2528A9FCC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2528AA3D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  float v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AA538(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CA8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    memcpy(v12, v13, 40 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AA6B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  float v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AA80C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_2528AAB48(a1, a2, a3, a4, &qword_269C31C98, MEMORY[0x263F00C20]);
}

uint64_t sub_2528AA82C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 208);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 208 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AA9AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AAB28(char a1, int64_t a2, char a3, void *a4)
{
  return sub_2528AAB48(a1, a2, a3, a4, &qword_269C31CA0, (uint64_t (*)(void))type metadata accessor for Hand);
}

uint64_t sub_2528AAB48(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    float v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  float v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  int v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AAD90(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AAEFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AB05C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C70);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528AB1BC(uint64_t a1)
{
  return sub_2528AA3D8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2528AB1D0(uint64_t a1)
{
  return sub_2528AA538(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2528AB1E4(uint64_t a1)
{
  return sub_2528AA6B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_2528AB1F8()
{
}

int64_t *sub_2528AB20C(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    char *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1;
      int64_t v5 = a5;
      goto LABEL_7;
    }
    unint64_t v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2)) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      int64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_252953750);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *unint64_t v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      int64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 2;
      int64_t v10 = a2;
    }
    size_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      int64_t *v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_2528AB34C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  int64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2528AB3FC(v6, a2, a3);
  return sub_2528AB3B4;
}

void sub_2528AB3B4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2528AB3FC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2533C0860](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_2528AB47C;
  }
  __break(1u);
  return result;
}

void sub_2528AB47C(id *a1)
{
}

uint64_t sub_2528AB484(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_252951F38();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_252951F38();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2528AB6E8(&qword_269C31C90, &qword_269C31C88);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C88);
          unint64_t v12 = sub_2528AB34C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2528AB6A8();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

unint64_t sub_2528AB6A8()
{
  unint64_t result = qword_269C31C80;
  if (!qword_269C31C80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C31C80);
  }
  return result;
}

uint64_t sub_2528AB6E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t MeshError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000038;
  if (*(void *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_252951E48();
    sub_252951B08();
    sub_252951B08();
    sub_252951B08();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v1;
}

unint64_t MeshError.debugDescription.getter()
{
  unint64_t v1 = 0xD000000000000038;
  if (*(void *)(v0 + 8))
  {
    sub_252951E48();
    sub_252951B08();
    sub_252951B08();
    sub_252951B08();
    return 0;
  }
  return v1;
}

uint64_t sub_2528AB8AC()
{
  return sub_252951168();
}

uint64_t sub_2528AB8C4()
{
  return sub_252951178();
}

uint64_t sub_2528AB8DC()
{
  return sub_252951158();
}

uint64_t _s5Human9MeshErrorO2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }

  return sub_252952108();
}

unint64_t sub_2528AB988()
{
  unint64_t result = qword_269C31CC8;
  if (!qword_269C31CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31CC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MeshError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MeshError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_2528ABA80(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2528ABA98(void *result, int a2)
{
  if (a2 < 0)
  {
    char *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshError()
{
  return &type metadata for MeshError;
}

unint64_t ActionError.errorDescription.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (!*(unsigned char *)(v0 + 16))
  {
    swift_bridgeObjectRetain();
    sub_252951E48();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD00000000000002DLL;
    MEMORY[0x2533C0590](v1, MEMORY[0x263F8D310]);
    sub_252951B08();
    swift_bridgeObjectRelease();
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    unsigned __int8 v5 = 0;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
    sub_252951E48();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000026;
    sub_252951B08();
    sub_252951B08();
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    unsigned __int8 v5 = 1;
LABEL_5:
    sub_2528ABD80(v3, v4, v5);
    return v7;
  }
  if (v1 | v2) {
    return 0xD00000000000003ALL;
  }
  else {
    return 0xD00000000000002BLL;
  }
}

unint64_t ActionError.debugDescription.getter()
{
  uint64_t v1 = *v0;
  if (!*((unsigned char *)v0 + 16))
  {
    sub_252951E48();
    swift_bridgeObjectRelease();
    unint64_t v3 = 0xD00000000000002DLL;
    MEMORY[0x2533C0590](v1, MEMORY[0x263F8D310]);
    sub_252951B08();
    swift_bridgeObjectRelease();
    return v3;
  }
  if (*((unsigned char *)v0 + 16) == 1)
  {
    sub_252951E48();
    swift_bridgeObjectRelease();
    unint64_t v3 = 0xD000000000000026;
    sub_252951B08();
    sub_252951B08();
    return v3;
  }
  if (*(_OWORD *)v0 == 0) {
    return 0xD00000000000002BLL;
  }
  else {
    return 0xD00000000000003ALL;
  }
}

uint64_t sub_2528ABD80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5Human11ActionErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  int v4 = *((unsigned __int8 *)a1 + 16);
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  int v7 = *((unsigned __int8 *)a2 + 16);
  if (!*((unsigned char *)a1 + 16))
  {
    if (!*((unsigned char *)a2 + 16))
    {
      int v10 = sub_25294B678((void *)*a1, (void *)*a2);
      sub_2528ABFE8(v6, v5, 0);
      sub_2528ABFE8(v3, v2, 0);
      sub_2528ABD80(v3, v2, 0);
      sub_2528ABD80(v6, v5, 0);
      return v10 & 1;
    }
    goto LABEL_25;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_252952108();
      }
      sub_2528ABFE8(v6, v5, 1u);
      sub_2528ABFE8(v3, v2, 1u);
      sub_2528ABD80(v3, v2, 1u);
      sub_2528ABD80(v6, v5, 1u);
      return v9 & 1;
    }
    goto LABEL_25;
  }
  if (!(v3 | v2))
  {
    if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_2528ABD80(*a1, v2, 2u);
      sub_2528ABD80(0, 0, 2u);
      char v9 = 1;
      return v9 & 1;
    }
    goto LABEL_25;
  }
  if (v7 != 2 || v6 != 1 || v5 != 0)
  {
LABEL_25:
    sub_2528ABFE8(*a2, a2[1], v7);
    sub_2528ABFE8(v3, v2, v4);
    sub_2528ABD80(v3, v2, v4);
    sub_2528ABD80(v6, v5, v7);
    char v9 = 0;
    return v9 & 1;
  }
  sub_2528ABD80(*a1, v2, 2u);
  char v9 = 1;
  sub_2528ABD80(1, 0, 2u);
  return v9 & 1;
}

unint64_t sub_2528ABF90()
{
  unint64_t result = qword_269C31CD0;
  if (!qword_269C31CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31CD0);
  }
  return result;
}

uint64_t sub_2528ABFE8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ActionError(uint64_t a1)
{
  return sub_2528ABD80(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s5Human11ActionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2528ABFE8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ActionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2528ABFE8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2528ABD80(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2528ABD80(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2528AC1A0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2528AC1B8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t RGBtoYUVConverter.applied(to:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for ImageDescriptor();
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_252951598();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528AC2D4, 0, 0);
}

uint64_t sub_2528AC2D4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  sub_252951588();
  sub_2528AC618(v2, v1);
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  int v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  void *v4 = v0;
  v4[1] = sub_2528AC3BC;
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return MEMORY[0x270EE76C0](v7, v5, &unk_269C31CE8, v3, v6);
}

uint64_t sub_2528AC3BC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void **)v1;
  v5[11] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528AC59C, 0, 0);
  }
  else
  {
    sub_2528AE3B8(v5[5]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
}

uint64_t sub_2528AC59C()
{
  sub_2528AE3B8(*(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528AC618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528AC67C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  v2[8] = type metadata accessor for ImageDescriptor();
  v2[9] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_252951A08();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  v2[33] = v5;
  v2[2] = 0xD00000000000001DLL;
  v2[3] = 0x800000025295A0B0;
  uint64_t v6 = (void *)swift_task_alloc();
  v2[34] = (uint64_t)v6;
  void *v6 = v2;
  v6[1] = sub_2528AC91C;
  return ImageDescriptor.tensor(for:)(v5, v2 + 2);
}

uint64_t sub_2528AC91C()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528AE198;
  }
  else {
    uint64_t v2 = sub_2528ACA30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528ACA30()
{
  uint64_t v1 = sub_252951648();
  uint64_t v2 = v0[33];
  if (v1 == MEMORY[0x263F8D5C8])
  {
    sub_252951838();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[36] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_2528ACCCC;
    uint64_t v9 = v0[13];
    uint64_t v10 = MEMORY[0x263F8D5C8];
    uint64_t v11 = MEMORY[0x263F00C58];
    uint64_t v12 = MEMORY[0x263F00C50];
    uint64_t v13 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE76F8](v9, v10, v13, v11, v12);
  }
  else
  {
    uint64_t v4 = v0[14];
    uint64_t v3 = v0[15];
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v5 = 2;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 0;
    *(unsigned char *)(v5 + 32) = 6;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_2528ACCCC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  uint64_t v3 = *(void *)(*v0 + 120);
  uint64_t v4 = *(void *)(*v0 + 112);
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 296) = v5;
  *(void *)(v1 + 304) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return MEMORY[0x270FA2498](sub_2528ACE30, 0, 0);
}

uint64_t sub_2528ACE30()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  *(void *)(v0 + 312) = sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515C8();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 320) = v4;
  *(void *)(v0 + 328) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  if (*(unsigned char *)(v0 + 348))
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v8 = 3;
    *(void *)(v8 + 8) = 0;
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    *(unsigned char *)(v8 + 32) = 6;
    swift_willThrow();
    v5(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    *(_DWORD *)(v0 + 360) = *(_DWORD *)(v0 + 344);
    sub_252951858();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v11;
    void *v11 = v0;
    v11[1] = sub_2528AD128;
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = MEMORY[0x263F8D5C8];
    uint64_t v14 = MEMORY[0x263F00C58];
    uint64_t v15 = MEMORY[0x263F00C50];
    uint64_t v16 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE76F8](v12, v13, v16, v14, v15);
  }
}

uint64_t sub_2528AD128()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 296);
  uint64_t v2 = *(void *)(*(void *)v0 + 256);
  uint64_t v3 = *(void *)(*(void *)v0 + 112);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_2528AD288, 0, 0);
}

void *sub_2528AD288()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_2529515C8();
  v1(v2, v3);
  if ((*(unsigned char *)(v0 + 356) & 1) == 0 && *(float *)(v0 + 352) >= 0.0 && *(float *)(v0 + 360) <= 1.0)
  {
    uint64_t v12 = sub_252951898();
    uint64_t v13 = v12;
    if (v12 == 3)
    {
      __n128 result = (void *)sub_2529518F8();
      if (!result[2])
      {
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v14 = result[4];
      swift_bridgeObjectRelease();
      if (v14 == 3)
      {
        uint64_t v15 = sub_252951908();
        if (*(void *)(v15 + 16)) {
          goto LABEL_17;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
      uint64_t v30 = *(void *)(v0 + 264);
    }
    else
    {
      if (v12 != 4)
      {
LABEL_26:
        uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
        uint64_t v6 = *(void *)(v0 + 264);
        uint64_t v7 = *(void *)(v0 + 112);
        sub_2528AE4D0();
        swift_allocError();
        *(void *)uint64_t v8 = v13;
        *(void *)(v8 + 8) = 0;
        *(void *)(v8 + 16) = 0;
        *(void *)(v8 + 24) = 0;
        char v9 = 4;
        goto LABEL_8;
      }
      __n128 result = (void *)sub_2529518F8();
      if (result[2] < 2uLL)
      {
LABEL_34:
        __break(1u);
        return result;
      }
      uint64_t v14 = result[5];
      swift_bridgeObjectRelease();
      unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
      uint64_t v30 = *(void *)(v0 + 264);
      if (v14 == 3)
      {
        uint64_t v31 = *(void *)(v0 + 256);
        uint64_t v32 = *(void *)(v0 + 112);
        sub_252951708();
        uint64_t v15 = sub_252951908();
        v29(v31, v32);
        if (*(void *)(v15 + 16))
        {
LABEL_17:
          uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
          uint64_t v17 = *(void *)(v0 + 256);
          uint64_t v18 = *(void *)(v0 + 240);
          uint64_t v20 = *(void *)(v0 + 112);
          uint64_t v19 = *(void *)(v0 + 120);
          unint64_t v61 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
          uint64_t v70 = *(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16);
          v70(v17, v15 + v61, v20);
          sub_2529516C8();
          sub_252951738();
          v16(v18, v20);
          __n128 result = (void *)((uint64_t (*)(uint64_t, uint64_t))v16)(v17, v20);
          if (*(void *)(v15 + 16) >= 2uLL)
          {
            uint64_t v59 = v13;
            uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
            uint64_t v22 = *(void *)(v0 + 256);
            uint64_t v23 = *(void *)(v0 + 240);
            uint64_t v24 = *(void *)(v0 + 112);
            uint64_t v66 = *(void *)(*(void *)(v0 + 120) + 72);
            v70(v22, v15 + v61 + v66, v24);
            sub_2529516C8();
            sub_252951738();
            v21(v23, v24);
            __n128 result = (void *)((uint64_t (*)(uint64_t, uint64_t))v21)(v22, v24);
            if (*(void *)(v15 + 16) >= 3uLL)
            {
              unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
              uint64_t v62 = *(void *)(v0 + 256);
              uint64_t v26 = *(void *)(v0 + 240);
              uint64_t v46 = *(void *)(v0 + 192);
              uint64_t v47 = *(void *)(v0 + 184);
              uint64_t v48 = *(void *)(v0 + 168);
              uint64_t v50 = *(void *)(v0 + 160);
              unint64_t v63 = *(void *)(v0 + 136);
              unint64_t v64 = *(void *)(v0 + 144);
              uint64_t v27 = *(void *)(v0 + 112);
              unint64_t v52 = *(void *)(v0 + 128);
              uint64_t v54 = *(void *)(v0 + 72);
              uint64_t v57 = *(void *)(v0 + 56);
              v70(v62, v15 + v61 + 2 * v66, v27);
              swift_bridgeObjectRelease();
              sub_2529516C8();
              sub_252951738();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529518F8();
              sub_2528AE524();
              sub_2528AE578();
              sub_252951918();
              sub_2529518F8();
              sub_252951888();
              sub_2529516C8();
              sub_252951738();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v46, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v47, v27);
              sub_252951768();
              v25(v46, v27);
              v25(v26, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v46, v27);
              sub_252951768();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v48, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v50, v27);
              sub_252951768();
              v25(v48, v27);
              v25(v47, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v48, v27);
              sub_252951768();
              v25(v47, v27);
              v25(v46, v27);
              sub_2529516C8();
              sub_252951718();
              v25(v46, v27);
              v25(v26, v27);
              sub_2529516C8();
              sub_252951768();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v48, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v50, v27);
              sub_252951768();
              v25(v48, v27);
              v25(v47, v27);
              sub_2529516C8();
              sub_252951738();
              v25(v48, v27);
              sub_252951768();
              v25(v47, v27);
              v25(v46, v27);
              sub_2529516C8();
              sub_252951718();
              v25(v46, v27);
              v25(v26, v27);
              sub_2529516C8();
              sub_252951768();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529518B8();
              sub_252951518();
              v25(v46, v27);
              sub_252951528();
              v25(v26, v27);
              sub_2529516C8();
              sub_252951718();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529518B8();
              sub_252951518();
              v25(v46, v27);
              sub_252951528();
              v25(v26, v27);
              sub_2529516C8();
              sub_252951718();
              v25(v26, v27);
              v25(v62, v27);
              sub_2529518B8();
              sub_252951518();
              v25(v46, v27);
              sub_252951528();
              v25(v26, v27);
              sub_2529516C8();
              sub_252951718();
              v25(v26, v27);
              v25(v62, v27);
              sub_2528AC618(v57, v54);
              __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
              uint64_t v28 = swift_allocObject();
              *(_OWORD *)(v28 + 16) = xmmword_252953970;
              v70(v28 + v61, v64, v27);
              v70(v28 + v61 + v66, v63, v27);
              v70(v28 + v61 + 2 * v66, v52, v27);
              if (v59 == 3)
              {
                *(void *)(v0 + 40) = v28;
                __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
                sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
                sub_2529516D8();
              }
              else
              {
                uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
                uint64_t v36 = *(void *)(v0 + 240);
                uint64_t v37 = *(void *)(v0 + 112);
                *(void *)(v0 + 32) = v28;
                __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
                sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
                sub_2529516D8();
                sub_2529516E8();
                v35(v36, v37);
              }
              float64x2_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
              unint64_t v39 = *(void *)(v0 + 256);
              uint64_t v58 = *(void *)(v0 + 248);
              uint64_t v60 = *(void *)(v0 + 264);
              uint64_t v56 = *(void *)(v0 + 232);
              uint64_t v40 = *(void *)(v0 + 216);
              uint64_t v53 = *(void *)(v0 + 224);
              uint64_t v49 = *(void *)(v0 + 208);
              uint64_t v65 = *(void *)(v0 + 200);
              uint64_t v67 = *(void *)(v0 + 176);
              uint64_t v41 = *(void *)(v0 + 136);
              uint64_t v68 = *(void *)(v0 + 152);
              uint64_t v69 = *(void *)(v0 + 144);
              uint64_t v43 = *(void *)(v0 + 120);
              uint64_t v42 = *(void *)(v0 + 128);
              uint64_t v44 = *(void *)(v0 + 112);
              uint64_t v51 = *(void *)(v0 + 72);
              uint64_t v45 = v51 + *(int *)(*(void *)(v0 + 64) + 36);
              uint64_t v55 = *(void *)(v0 + 48);
              sub_2528AE5CC(v45);
              v70(v45, v39, v44);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v45, 0, 1, v44);
              v38(v39, v44);
              v38(v42, v44);
              v38(v41, v44);
              v38(v69, v44);
              v38(v68, v44);
              v38(v67, v44);
              v38(v65, v44);
              v38(v49, v44);
              v38(v40, v44);
              v38(v53, v44);
              v38(v56, v44);
              v38(v58, v44);
              v38(v60, v44);
              sub_2528AE62C(v51, v55);
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
              goto LABEL_10;
            }
            goto LABEL_33;
          }
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        goto LABEL_25;
      }
    }
    uint64_t v33 = *(void *)(v0 + 112);
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v34 = v14;
    *(void *)(v34 + 8) = 0;
    *(void *)(v34 + 16) = 0;
    *(void *)(v34 + 24) = 0;
    *(unsigned char *)(v34 + 32) = 5;
    swift_willThrow();
    v29(v30, v33);
    goto LABEL_9;
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 112);
  sub_2528AE4D0();
  swift_allocError();
  *(void *)uint64_t v8 = 3;
  *(void *)(v8 + 8) = 0;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  char v9 = 6;
LABEL_8:
  *(unsigned char *)(v8 + 32) = v9;
  swift_willThrow();
  v5(v6, v7);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return (void *)v10();
}

uint64_t sub_2528AE198()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528AE318(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528AC67C(a1, v4);
}

uint64_t sub_2528AE3B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_UNKNOWN **sub_2528AE414()
{
  return &protocol witness table for ImageDescriptor;
}

uint64_t sub_2528AE420(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return RGBtoYUVConverter.applied(to:)(a1, a2);
}

ValueMetadata *type metadata accessor for RGBtoYUVConverter()
{
  return &type metadata for RGBtoYUVConverter;
}

unint64_t sub_2528AE4D0()
{
  unint64_t result = qword_269C31CF8;
  if (!qword_269C31CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31CF8);
  }
  return result;
}

unint64_t sub_2528AE524()
{
  unint64_t result = qword_269C31D00;
  if (!qword_269C31D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31D00);
  }
  return result;
}

unint64_t sub_2528AE578()
{
  unint64_t result = qword_269C31D08;
  if (!qword_269C31D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31D08);
  }
  return result;
}

uint64_t sub_2528AE5CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528AE62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t ImageSourceError.debugDescription.getter()
{
  type metadata accessor for ImageSourceError();
  MEMORY[0x270FA5388]();
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528AED08(v0, (uint64_t)v2);
  unint64_t v3 = 0xD00000000000002CLL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = sub_252951268();
      uint64_t v5 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v7 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v2, v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD00000000000001FLL;
      unint64_t v14 = 0x800000025295A5B0;
      goto LABEL_5;
    case 2u:
      uint64_t v4 = sub_252951268();
      uint64_t v5 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v7 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v2, v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD00000000000001ALL;
      unint64_t v14 = 0x800000025295A560;
LABEL_5:
      sub_252951258();
      sub_252951B08();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 3u:
      uint64_t v4 = sub_252951268();
      uint64_t v5 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v7 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v2, v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_252951E48();
      sub_252951B08();
      sub_2528AED6C();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 4u:
      uint64_t v4 = sub_252951268();
      uint64_t v5 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v7 = (char *)&v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v2, v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD00000000000001ALL;
      unint64_t v14 = 0x800000025295A4C0;
      sub_2528AED6C();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 5u:
      return v3;
    case 6u:
      return 0xD000000000000022;
    case 7u:
      return 0xD000000000000026;
    default:
      uint64_t v4 = sub_252951268();
      uint64_t v5 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v2, v4);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_252951E48();
      sub_252951B08();
      sub_252951258();
      sub_252951B08();
      swift_bridgeObjectRelease();
LABEL_8:
      sub_252951B08();
LABEL_9:
      unint64_t v3 = v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v3;
  }
}

uint64_t type metadata accessor for ImageSourceError()
{
  uint64_t result = qword_269C31D38;
  if (!qword_269C31D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528AED08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageSourceError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2528AED6C()
{
  unint64_t result = qword_269C31D28;
  if (!qword_269C31D28)
  {
    sub_252951268();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31D28);
  }
  return result;
}

uint64_t _s5Human16ImageSourceErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ImageSourceError();
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v61 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D48);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_2528AED08(a1, (uint64_t)v21);
  sub_2528AED08(a2, v22);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2528AED08((uint64_t)v21, (uint64_t)v15);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v28 = sub_252951268();
      uint64_t v29 = v28;
      uint64_t v30 = *(void *)(v28 - 8);
      if (EnumCaseMultiPayload == 1)
      {
        MEMORY[0x270FA5388](v28);
        uint64_t v32 = (char *)&v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v32, v22, v29);
        char v33 = MEMORY[0x2533BFC10](v15, v32);
        uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
        v34(v32, v29);
        v34(v15, v29);
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v15, v28);
      goto LABEL_23;
    case 2u:
      sub_2528AED08((uint64_t)v21, (uint64_t)v12);
      int v35 = swift_getEnumCaseMultiPayload();
      uint64_t v36 = sub_252951268();
      uint64_t v37 = v36;
      uint64_t v38 = *(void *)(v36 - 8);
      if (v35 == 2)
      {
        MEMORY[0x270FA5388](v36);
        uint64_t v40 = (char *)&v61 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v40, v22, v37);
        char v33 = MEMORY[0x2533BFC10](v12, v40);
        uint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
        v41(v40, v37);
        v41(v12, v37);
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v12, v36);
      goto LABEL_23;
    case 3u:
      sub_2528AED08((uint64_t)v21, (uint64_t)v9);
      int v42 = swift_getEnumCaseMultiPayload();
      uint64_t v43 = sub_252951268();
      uint64_t v44 = v43;
      uint64_t v45 = *(void *)(v43 - 8);
      if (v42 == 3)
      {
        MEMORY[0x270FA5388](v43);
        uint64_t v47 = (char *)&v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v47, v22, v44);
        char v33 = MEMORY[0x2533BFC10](v9, v47);
        uint64_t v48 = *(void (**)(char *, uint64_t))(v45 + 8);
        v48(v47, v44);
        uint64_t v49 = v9;
        uint64_t v50 = v44;
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v9, v43);
      goto LABEL_23;
    case 4u:
      sub_2528AED08((uint64_t)v21, (uint64_t)v6);
      int v51 = swift_getEnumCaseMultiPayload();
      uint64_t v52 = sub_252951268();
      uint64_t v53 = v52;
      uint64_t v54 = *(void *)(v52 - 8);
      if (v51 != 4)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v6, v52);
        goto LABEL_23;
      }
      MEMORY[0x270FA5388](v52);
      uint64_t v56 = (char *)&v61 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v56, v22, v53);
      char v33 = MEMORY[0x2533BFC10](v6, v56);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v54 + 8);
      v48(v56, v53);
      uint64_t v49 = v6;
      uint64_t v50 = v53;
LABEL_12:
      v48(v49, v50);
      goto LABEL_25;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_23;
      }
      goto LABEL_18;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_23;
      }
      goto LABEL_18;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_23;
      }
LABEL_18:
      sub_2528AFC8C((uint64_t)v21);
      char v33 = 1;
      return v33 & 1;
    default:
      sub_2528AED08((uint64_t)v21, (uint64_t)v17);
      int v23 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = sub_252951268();
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(v24 - 8);
      if (v23)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v17, v24);
LABEL_23:
        sub_2528B022C((uint64_t)v21);
        char v33 = 0;
      }
      else
      {
        MEMORY[0x270FA5388](v24);
        uint64_t v58 = (char *)&v61 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v58, v22, v25);
        char v33 = MEMORY[0x2533BFC10](v17, v58);
        uint64_t v59 = *(void (**)(char *, uint64_t))(v26 + 8);
        v59(v58, v25);
        v59(v17, v25);
LABEL_25:
        sub_2528AFC8C((uint64_t)v21);
      }
      return v33 & 1;
  }
}

unint64_t sub_2528AF4F4()
{
  unint64_t result = qword_269C31D30;
  if (!qword_269C31D30)
  {
    type metadata accessor for ImageSourceError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31D30);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageSourceError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        uint64_t v7 = sub_252951268();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ImageSourceError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 4)
  {
    uint64_t v3 = sub_252951268();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for ImageSourceError(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      uint64_t v6 = sub_252951268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for ImageSourceError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2528AFC8C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        uint64_t v6 = sub_252951268();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2528AFC8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageSourceError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ImageSourceError(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      uint64_t v6 = sub_252951268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for ImageSourceError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2528AFC8C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        uint64_t v6 = sub_252951268();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageSourceError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ImageSourceError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2528B018C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2528B019C()
{
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2528B022C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2528B028C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_2528B0358(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2528B03BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2528B0438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2528B04B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2528B0530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2528B05AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528B05C0);
}

uint64_t sub_2528B05C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951A08();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2528B062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528B0640);
}

uint64_t sub_2528B0640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951A08();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GaussianFilter()
{
  uint64_t result = qword_269C31D50;
  if (!qword_269C31D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528B06FC()
{
  uint64_t result = sub_252951A08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2528B0794@<X0>(int64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = sub_252951A08();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v60 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v60 - v18;
  if (a1 >= 1 && (a1 & 0x8000000000000001) == 1)
  {
    uint64_t v20 = sub_2528EC14C(a1, 0);
    if ((unint64_t)(a1 - 1) < *(void *)(v20 + 16))
    {
      uint64_t v2 = (char *)v20;
      *(float *)&long long v21 = (float)((float)a1 + -1.0) * 0.5;
      long long v68 = v21;
      float v3 = (float)((float)(*(float *)&v21 + -1.0) * 0.3) + 0.8;
      float v4 = v3 + v3;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_5;
      }
      goto LABEL_28;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t v2 = sub_252939C74((uint64_t)v2);
LABEL_5:
  uint64_t v60 = v11;
  uint64_t v61 = v17;
  uint64_t v63 = a2;
  *(float *)&long long v22 = v3 * v4;
  long long v67 = v22;
  if ((unint64_t)a1 < 4)
  {
    int64_t v23 = 0;
    float v24 = *(float *)&v68;
    do
    {
LABEL_10:
      float v38 = expf((float)-(float)((float)((float)v23 - v24) * (float)((float)v23 - v24)) / *(float *)&v22);
      LODWORD(v22) = v67;
      float v24 = *(float *)&v68;
      *(float *)&v2[4 * v23++ + 32] = v38;
    }
    while (a1 != v23);
    goto LABEL_11;
  }
  int64_t v23 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  float32x4_t v65 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v22, 0);
  float32x4_t v66 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v68, 0);
  int64x2_t v25 = (int64x2_t)xmmword_252953AF0;
  int64x2_t v26 = (int64x2_t)xmmword_252953750;
  unint64_t v27 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v28 = v2 + 32;
  int64x2_t v64 = vdupq_n_s64(4uLL);
  do
  {
    int64x2_t v69 = v26;
    int64x2_t v70 = v25;
    float32x4_t v29 = vsubq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v26)), vcvtq_f64_s64(v25)), v66);
    float32x4_t v72 = vdivq_f32(vmulq_f32(v29, vnegq_f32(v29)), v65);
    *(float *)&uint64_t v30 = expf(v72.f32[1]);
    *(void *)&long long v71 = v30;
    *(float *)&long long v31 = expf(v72.f32[0]);
    DWORD1(v31) = v71;
    long long v71 = v31;
    float v32 = expf(v72.f32[2]);
    long long v33 = v71;
    *((float *)&v33 + 2) = v32;
    long long v71 = v33;
    float v34 = expf(v72.f32[3]);
    int64x2_t v35 = v70;
    long long v36 = v71;
    *((float *)&v36 + 3) = v34;
    int64x2_t v37 = v69;
    *v28++ = v36;
    int64x2_t v25 = vaddq_s64(v35, v64);
    int64x2_t v26 = vaddq_s64(v37, v64);
    v27 -= 4;
  }
  while (v27);
  LODWORD(v22) = v67;
  float v24 = *(float *)&v68;
  if (v23 != a1) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v39 = *((void *)v2 + 2);
  uint64_t v62 = v8;
  if (!v39)
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x263F8EE78];
    goto LABEL_25;
  }
  if (v39 == 1)
  {
    uint64_t v40 = 0;
    float v41 = 0.0;
LABEL_18:
    int64_t v45 = v39 - v40;
    uint64_t v46 = (float *)&v2[4 * v40 + 32];
    do
    {
      float v47 = *v46++;
      float v41 = v41 + v47;
      --v45;
    }
    while (v45);
    goto LABEL_20;
  }
  uint64_t v40 = v39 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v43 = (float *)(v2 + 36);
  float v41 = 0.0;
  uint64_t v44 = v39 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    float v41 = (float)(v41 + *(v43 - 1)) + *v43;
    v43 += 2;
    v44 -= 2;
  }
  while (v44);
  if (v39 != v40) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v73 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_252922EC8(0, v39, 0);
  uint64_t v48 = 0;
  uint64_t v42 = v73;
  unint64_t v49 = *(void *)(v73 + 16);
  do
  {
    float v50 = *(float *)&v2[4 * v48 + 32];
    uint64_t v73 = v42;
    unint64_t v51 = *(void *)(v42 + 24);
    if (v49 >= v51 >> 1)
    {
      sub_252922EC8(v51 > 1, v49 + 1, 1);
      uint64_t v42 = v73;
    }
    ++v48;
    *(void *)(v42 + 16) = v49 + 1;
    *(float *)(v42 + 4 * v49++ + 32) = v50 / v41;
  }
  while (v39 != v48);
  swift_bridgeObjectRelease_n();
LABEL_25:
  uint64_t v73 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528B1180();
  sub_252951A38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v52 = swift_allocObject();
  float32x4_t v72 = (float32x4_t)xmmword_252953B00;
  *(_OWORD *)(v52 + 16) = xmmword_252953B00;
  *(void *)(v52 + 32) = a1;
  *(void *)(v52 + 40) = 1;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_allocObject();
  *(float32x4_t *)(v53 + 16) = v72;
  *(void *)(v53 + 32) = 1;
  *(void *)(v53 + 40) = a1;
  uint64_t v54 = v60;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  uint64_t v55 = v61;
  sub_252951948();
  uint64_t v56 = v62;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v62 + 8);
  v57(v54, v7);
  v57(v14, v7);
  sub_252951868();
  sub_2529517C8();
  v57(v14, v7);
  v57(v19, v7);
  uint64_t v58 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v63, v55, v7);
  uint64_t result = type metadata accessor for GaussianFilter();
  *(void *)(v58 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t sub_2528B0D30(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_252951678();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528B0E6C, 0, 0);
}

uint64_t sub_2528B0E6C()
{
  uint64_t v1 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252953B10;
  *(int64x2_t *)(v2 + 32) = vdupq_n_s64(1uLL);
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for GaussianFilter() + 20));
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v3;
  sub_2529519A8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v9 = v0[8];
    uint64_t v16 = v0[7];
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    uint64_t v12 = v5 / 2;
    uint64_t v17 = v0[12];
    sub_2529516E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C18);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_252953B00;
    *(void *)(v13 + 32) = v12;
    *(void *)(v13 + 40) = v12;
    *(void *)(v13 + 48) = v12;
    *(void *)(v13 + 56) = v12;
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v16, *MEMORY[0x263F00BF0], v11);
    sub_252951958();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v16, v11);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v7, v9);
    sub_252951638();
    sub_252951708();
    v14(v7, v9);
    v14(v6, v9);
    v14(v17, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  return result;
}

uint64_t sub_2528B10D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528B0D30(a1, a2);
}

unint64_t sub_2528B1180()
{
  unint64_t result = qword_269C31C58;
  if (!qword_269C31C58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C31C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31C58);
  }
  return result;
}

uint64_t Skeleton.Connection.parent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  int v4 = *(_DWORD *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t Skeleton.Connection.child.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 80);
  int v4 = *(_DWORD *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 48);
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 64);
  *(void *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  return swift_bridgeObjectRetain();
}

float Skeleton.Connection.confidence.getter()
{
  return (float)(*(float *)(v0 + 40) + *(float *)(v0 + 88)) * 0.5;
}

float Skeleton.Connection.length.getter()
{
  float32x2_t v1 = vsub_f32(v0[10], v0[4]);
  return sqrtf(vaddv_f32(vmul_f32(v1, v1)));
}

float32x2_t Skeleton.Connection.unitDirection.getter()
{
  float32x2_t v1 = vsub_f32(v0[10], v0[4]);
  float32x2_t v2 = vmul_f32(v1, v1);
  v2.i32[0] = vadd_f32(v2, (float32x2_t)vdup_lane_s32((int32x2_t)v2, 1)).u32[0];
  float32x2_t v3 = vrsqrte_f32((float32x2_t)v2.u32[0]);
  float32x2_t v4 = vmul_f32(v3, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v3, v3)));
  return vmul_n_f32(v1, vmul_f32(v4, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v4, v4))).f32[0]);
}

BOOL Skeleton.Connection.isValid.getter()
{
  return *(float *)(v0 + 88) >= 0.6 && *(float *)(v0 + 40) >= 0.6;
}

uint64_t Skeleton.Connection.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t Skeleton.Connection.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_2528B1368()
{
  return sub_2529521C8();
}

uint64_t sub_2528B13C8()
{
  return sub_2529521A8();
}

uint64_t sub_2528B1408()
{
  return sub_2529521C8();
}

uint64_t _s5Human8SkeletonV10ConnectionV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a2[6];
  uint64_t v5 = a2[7];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_252952108(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_252952108();
    }
  }
  return result;
}

unint64_t sub_2528B150C()
{
  unint64_t result = qword_269C31D70;
  if (!qword_269C31D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C31D70);
  }
  return result;
}

uint64_t _s10ConnectionVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s10ConnectionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10ConnectionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy92_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 76) = *(_OWORD *)(a2 + 76);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s10ConnectionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

uint64_t _s10ConnectionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 92)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10ConnectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 92) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 92) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton.Connection()
{
  return &type metadata for Skeleton.Connection;
}

uint64_t sub_2528B1808()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BodyMeshGenerator.InternalBundleHelper()
{
  return self;
}

uint64_t destroy for BodyMeshGenerator()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BodyMeshGenerator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BodyMeshGenerator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BodyMeshGenerator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BodyMeshGenerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyMeshGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyMeshGenerator()
{
  return &type metadata for BodyMeshGenerator;
}

uint64_t sub_2528B1A3C(uint64_t a1, float a2, float a3, float a4)
{
  *(float *)(v5 + 592) = a4;
  *(float *)(v5 + 588) = a3;
  *(float *)(v5 + 584) = a2;
  *(void *)(v5 + 312) = a1;
  *(void *)(v5 + 320) = v4;
  uint64_t v6 = sub_252951A08();
  *(void *)(v5 + 328) = v6;
  *(void *)(v5 + 336) = *(void *)(v6 - 8);
  *(void *)(v5 + 344) = swift_task_alloc();
  *(void *)(v5 + 352) = swift_task_alloc();
  *(void *)(v5 + 360) = swift_task_alloc();
  *(void *)(v5 + 368) = swift_task_alloc();
  *(void *)(v5 + 376) = swift_task_alloc();
  *(void *)(v5 + 384) = swift_task_alloc();
  *(void *)(v5 + 392) = swift_task_alloc();
  *(void *)(v5 + 400) = swift_task_alloc();
  *(void *)(v5 + 408) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528B1B98, 0, 0);
}

uint64_t sub_2528B1B98()
{
  sub_252951258();
  char v1 = sub_252951B28();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for BodyMeshGenerator.InternalBundleHelper();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    *(void *)(v0 + 416) = v3;
    uint64_t v4 = sub_252951268();
    *(void *)(v0 + 424) = v4;
    uint64_t v5 = *(void **)(v4 - 8);
    uint64_t v6 = v5;
    *(void *)(v0 + 432) = v5;
    *(void *)(v0 + 440) = v5[8];
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 448) = v7;
    uint64_t v8 = (void *)sub_252951AB8();
    uint64_t v9 = (void *)sub_252951AB8();
    id v10 = objc_msgSend(v3, sel_URLForResource_withExtension_, v8, v9);

    __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
    uint64_t v11 = swift_task_alloc();
    uint64_t v12 = v11;
    if (v10)
    {
      uint64_t v13 = swift_task_alloc();
      sub_252951238();

      uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t))v6[4];
      v14(v12, v13, v4);
      int64x2_t v64 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6[7];
      v64(v12, 0, 1, v4);
      swift_task_dealloc();
      uint64_t v15 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v6[6];
      if (v15(v12, 1, v4) != 1)
      {
        uint64_t v60 = v15;
        uint64_t v62 = v14;
        v14(v7, v12, v4);
        swift_task_dealloc();
        uint64_t v16 = swift_task_alloc();
        *(void *)(v0 + 456) = v16;
        uint64_t v17 = (void *)sub_252951AB8();
        uint64_t v18 = sub_252951AB8();
        uint64_t v19 = v3;
        uint64_t v20 = (void *)v18;
        id v61 = v19;
        id v21 = objc_msgSend(v19, sel_URLForResource_withExtension_, v17, v18);

        uint64_t v22 = swift_task_alloc();
        uint64_t v23 = v22;
        if (v21)
        {
          uint64_t v24 = swift_task_alloc();
          sub_252951238();

          v62(v23, v24, v4);
          v64(v23, 0, 1, v4);
          swift_task_dealloc();
          if (v60(v23, 1, v4) != 1)
          {
            v62(v16, v23, v4);
            swift_task_dealloc();
            uint64_t v59 = swift_task_alloc();
            *(void *)(v0 + 464) = v59;
            int64x2_t v25 = (void *)sub_252951AB8();
            int64x2_t v26 = (void *)sub_252951AB8();
            id v27 = objc_msgSend(v61, sel_URLForResource_withExtension_, v25, v26);

            uint64_t v28 = swift_task_alloc();
            uint64_t v29 = v28;
            if (v27)
            {
              uint64_t v30 = swift_task_alloc();
              sub_252951238();

              v62(v29, v30, v4);
              v64(v29, 0, 1, v4);
              swift_task_dealloc();
              if (v60(v29, 1, v4) != 1)
              {
                v62(v59, v29, v4);
                swift_task_dealloc();
                uint64_t v31 = sub_252951278();
                *(void *)(v0 + 472) = v31;
                *(void *)(v0 + 480) = v32;
                uint64_t v33 = v31;
                unint64_t v34 = v32;
                uint64_t v35 = sub_252951278();
                *(void *)(v0 + 488) = v35;
                *(void *)(v0 + 496) = v36;
                uint64_t v37 = v35;
                unint64_t v38 = v36;
                uint64_t v39 = sub_252951278();
                *(void *)(v0 + 504) = v39;
                *(void *)(v0 + 512) = v40;
                unint64_t v44 = v40;
                uint64_t v66 = v39;
                int64_t v45 = *(void **)(v0 + 320);
                *(void *)(v0 + 520) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
                uint64_t result = swift_allocObject();
                *(_OWORD *)(result + 16) = xmmword_252953B00;
                float v47 = v45;
                uint64_t v48 = v45[1];
                *(void *)(v0 + 528) = v48;
                if ((unsigned __int128)(v48 * (__int128)3) >> 64 == (3 * v48) >> 63)
                {
                  float32x4_t v65 = v47;
                  *(void *)(result + 32) = 3 * v48;
                  uint64_t v63 = *v47;
                  *(void *)(result + 40) = *v47;
                  sub_2528B6E98(v33, v34);
                  sub_2529518C8();
                  uint64_t v49 = swift_allocObject();
                  *(_OWORD *)(v49 + 16) = xmmword_252953B00;
                  *(void *)(v49 + 32) = v48;
                  *(void *)(v49 + 40) = 3;
                  sub_2528B6E98(v37, v38);
                  sub_2529518C8();
                  uint64_t result = swift_allocObject();
                  *(_OWORD *)(result + 16) = xmmword_252953B00;
                  uint64_t v50 = v65[2];
                  uint64_t v51 = (unsigned __int128)(v50 * (__int128)3) >> 64;
                  uint64_t v52 = 3 * v50;
                  if (v51 == v52 >> 63)
                  {
                    float v53 = 1.0 - *(float *)(v0 + 584);
                    *(void *)(result + 32) = v52;
                    *(void *)(result + 40) = v63;
                    uint64_t v54 = *(void *)(v0 + 588);
                    sub_2528B6E98(v66, v44);
                    sub_2529518C8();
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
                    uint64_t v55 = swift_allocObject();
                    *(_OWORD *)(v55 + 16) = xmmword_252953970;
                    *(float *)(v55 + 32) = v53;
                    *(void *)(v55 + 36) = v54;
                    *(void *)(v0 + 280) = v55;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
                    sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
                    sub_252951A38();
                    uint64_t v56 = (void *)swift_task_alloc();
                    *(void *)(v0 + 536) = v56;
                    *uint64_t v56 = v0;
                    v56[1] = sub_2528B2728;
                    uint64_t v58 = *(void *)(v0 + 376);
                    uint64_t v57 = *(void *)(v0 + 384);
                    return sub_2528B3ABC(v57, v58);
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                return result;
              }
            }
            else
            {
              v64(v28, 1, 1, v4);
            }

            uint64_t v43 = (void (*)(uint64_t, uint64_t))v6[1];
            v43(v16, v4);
            v43(v7, v4);
            sub_2528B8494(v29, qword_269C32880);
            swift_task_dealloc();
            goto LABEL_16;
          }
        }
        else
        {
          v64(v22, 1, 1, v4);
        }

        ((void (*)(uint64_t, uint64_t))v6[1])(v7, v4);
        sub_2528B8494(v23, qword_269C32880);
LABEL_16:
        swift_task_dealloc();
        goto LABEL_17;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6[7])(v11, 1, 1, v4);
    }

    sub_2528B8494(v12, qword_269C32880);
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_18;
  }
  sub_2528AB988();
  swift_allocError();
  void *v41 = 0;
  v41[1] = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
LABEL_18:
  return v42();
}

uint64_t sub_2528B2728()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 376);
  uint64_t v3 = *(void *)(*v0 + 336);
  uint64_t v4 = *(void *)(*v0 + 328);
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 544) = v5;
  *(void *)(v1 + 552) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return MEMORY[0x270FA2498](sub_2528B28C4, 0, 0);
}

uint64_t sub_2528B28C4()
{
  uint64_t v1 = v0[66];
  sub_252951948();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252953B00;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = 3;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  sub_252951768();
  sub_252951948();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[70] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2528B2A2C;
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[44];
  return sub_2528B4E28(v5, v4);
}

uint64_t sub_2528B2A2C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 568) = a1;
  *(void *)(v3 + 576) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2528B37B4;
  }
  else {
    uint64_t v4 = sub_2528B2B70;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528B2B70()
{
  uint64_t v1 = swift_task_alloc();
  sub_252951218();
  id v2 = objc_msgSend(self, sel_defaultManager);
  sub_252951258();
  uint64_t v3 = (void *)sub_252951AB8();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  if ((v4 & 1) == 0)
  {
    sub_252951258();
    uint64_t v18 = (void *)sub_252951AB8();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 272) = 0;
    unsigned int v19 = objc_msgSend(v2, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v18, 1, 0, v0 + 272);

    uint64_t v20 = *(void **)(v0 + 272);
    if (v19)
    {
      id v21 = *(void **)(v0 + 568);
      id v22 = v20;
      uint64_t v23 = (void *)sub_252951208();
      objc_msgSend(v21, sel_writeToURL_options_delegate_progressHandler_, v23, 0, 0, 0);

      sub_252951258();
      uint64_t v24 = (void *)sub_252951AB8();
      swift_bridgeObjectRelease();
      unsigned __int8 v25 = objc_msgSend(v2, sel_fileExistsAtPath_, v24);

      if (v25) {
        goto LABEL_6;
      }
      v113 = v2;
      uint64_t v116 = v1;
      sub_252951AE8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_252953740;
      *(void *)(inited + 32) = sub_252951AE8();
      *(void *)(inited + 40) = v39;
      sub_252951E48();
      swift_bridgeObjectRelease();
      sub_2529511C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      *(void *)(inited + 72) = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = 0xD000000000000028;
      *(void *)(inited + 56) = 0x800000025295A6F0;
      sub_2528EF69C(inited);
      id v40 = objc_allocWithZone(MEMORY[0x263F087E0]);
      float v41 = (void *)sub_252951AB8();
      swift_bridgeObjectRelease();
      uint64_t v42 = (void *)sub_252951A98();
      swift_bridgeObjectRelease();
      id v37 = objc_msgSend(v40, sel_initWithDomain_code_userInfo_, v41, 513, v42);

      swift_willThrow();
    }
    else
    {
      v113 = v2;
      uint64_t v116 = v1;
      id v36 = v20;
      id v37 = (id)sub_2529511A8();

      swift_willThrow();
    }
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    int64x2_t v64 = *(void **)(v0 + 568);
    uint64_t v66 = *(void *)(v0 + 504);
    unint64_t v68 = *(void *)(v0 + 512);
    uint64_t v71 = *(void *)(v0 + 488);
    unint64_t v74 = *(void *)(v0 + 496);
    uint64_t v77 = *(void *)(v0 + 472);
    unint64_t v83 = *(void *)(v0 + 480);
    uint64_t v86 = *(void *)(v0 + 432);
    uint64_t v107 = *(void *)(v0 + 400);
    uint64_t v110 = *(void *)(v0 + 408);
    uint64_t v101 = *(void *)(v0 + 384);
    uint64_t v104 = *(void *)(v0 + 392);
    uint64_t v95 = *(void *)(v0 + 360);
    uint64_t v98 = *(void *)(v0 + 368);
    uint64_t v89 = *(void *)(v0 + 424);
    uint64_t v92 = *(void *)(v0 + 352);
    uint64_t v80 = *(void *)(v0 + 344);
    uint64_t v44 = *(void *)(v0 + 328);
    sub_252951AE8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C0);
    uint64_t v45 = swift_initStackObject();
    *(_OWORD *)(v45 + 16) = xmmword_252953740;
    *(void *)(v45 + 32) = sub_252951AE8();
    *(void *)(v45 + 40) = v46;
    sub_252951E48();
    *(void *)(v0 + 256) = 0;
    *(void *)(v0 + 264) = 0xE000000000000000;
    sub_252951B08();
    *(void *)(v0 + 288) = v37;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    sub_252951F08();
    uint64_t v47 = *(void *)(v0 + 256);
    uint64_t v48 = *(void *)(v0 + 264);
    *(void *)(v45 + 72) = MEMORY[0x263F8D310];
    *(void *)(v45 + 48) = v47;
    *(void *)(v45 + 56) = v48;
    sub_2528EF69C(v45);
    uint64_t v49 = v37;
    id v50 = objc_allocWithZone(MEMORY[0x263F087E0]);
    uint64_t v51 = (void *)sub_252951AB8();
    swift_bridgeObjectRelease();
    uint64_t v52 = (void *)sub_252951A98();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v50, sel_initWithDomain_code_userInfo_, v51, 513, v52);

    swift_willThrow();
    sub_2528B3A64(v66, v68);
    sub_2528B3A64(v71, v74);
    sub_2528B3A64(v77, v83);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v116, v89);
    v43(v80, v44);
    v43(v92, v44);
    v43(v95, v44);
    v43(v98, v44);
    v43(v101, v44);
    v43(v104, v44);
    v43(v107, v44);
    v43(v110, v44);
    goto LABEL_10;
  }
  uint64_t v5 = *(void **)(v0 + 568);
  uint64_t v6 = (void *)sub_252951208();
  objc_msgSend(v5, sel_writeToURL_options_delegate_progressHandler_, v6, 0, 0, 0);

  sub_252951258();
  uint64_t v7 = (void *)sub_252951AB8();
  swift_bridgeObjectRelease();
  unsigned __int8 v8 = objc_msgSend(v2, sel_fileExistsAtPath_, v7);

  if ((v8 & 1) == 0)
  {
    uint64_t v67 = *(void **)(v0 + 568);
    v111 = v2;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    uint64_t v65 = *(void *)(v0 + 504);
    unint64_t v69 = *(void *)(v0 + 512);
    uint64_t v72 = *(void *)(v0 + 488);
    unint64_t v75 = *(void *)(v0 + 496);
    uint64_t v78 = *(void *)(v0 + 472);
    uint64_t v10 = *(void *)(v0 + 432);
    unint64_t v84 = *(void *)(v0 + 480);
    uint64_t v87 = *(void *)(v0 + 424);
    uint64_t v105 = *(void *)(v0 + 400);
    uint64_t v108 = *(void *)(v0 + 408);
    uint64_t v99 = *(void *)(v0 + 384);
    uint64_t v102 = *(void *)(v0 + 392);
    uint64_t v93 = *(void *)(v0 + 360);
    uint64_t v96 = *(void *)(v0 + 368);
    uint64_t v90 = *(void *)(v0 + 352);
    uint64_t v81 = *(void *)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 328);
    sub_252951AE8();
    uint64_t v114 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C0);
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_252953740;
    *(void *)(v12 + 32) = sub_252951AE8();
    *(void *)(v12 + 40) = v13;
    sub_252951E48();
    swift_bridgeObjectRelease();
    sub_2529511C8();
    sub_252951B08();
    swift_bridgeObjectRelease();
    *(void *)(v12 + 72) = MEMORY[0x263F8D310];
    *(void *)(v12 + 48) = 0xD000000000000028;
    *(void *)(v12 + 56) = 0x800000025295A6F0;
    sub_2528EF69C(v12);
    id v14 = objc_allocWithZone(MEMORY[0x263F087E0]);
    uint64_t v15 = (void *)sub_252951AB8();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)sub_252951A98();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v15, 513, v16);

    swift_willThrow();
    sub_2528B3A64(v65, v69);
    sub_2528B3A64(v72, v75);
    sub_2528B3A64(v78, v84);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v114, v87);
    v9(v81, v11);
    v9(v90, v11);
    v9(v93, v11);
    v9(v96, v11);
    v9(v99, v11);
    v9(v102, v11);
    v9(v105, v11);
    v9(v108, v11);
LABEL_10:
    swift_task_dealloc();
    *(void *)(v0 + 304) = v17;
    id v53 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    sub_2528BA6BC(0, &qword_269C31D80);
    int v54 = swift_dynamicCast();
    uint64_t v55 = *(void *)(v0 + 456);
    uint64_t v56 = *(void *)(v0 + 464);
    uint64_t v57 = *(void *)(v0 + 448);
    uint64_t v58 = *(void *)(v0 + 424);
    uint64_t v59 = *(void *)(v0 + 432);
    uint64_t v60 = *(void **)(v0 + 416);
    if (v54)
    {

      id v61 = *(id *)(v0 + 296);
      swift_willThrow();
    }
    else
    {
    }
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    v62(v56, v58);
    v62(v55, v58);
    v62(v57, v58);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
LABEL_6:
  int64x2_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
  uint64_t v27 = *(void *)(v0 + 504);
  unint64_t v70 = *(void *)(v0 + 512);
  uint64_t v73 = *(void *)(v0 + 488);
  unint64_t v85 = *(void *)(v0 + 480);
  unint64_t v79 = *(void *)(v0 + 496);
  uint64_t v82 = *(void *)(v0 + 472);
  uint64_t v109 = *(void *)(v0 + 464);
  uint64_t v112 = *(void *)(v0 + 456);
  uint64_t v115 = *(void *)(v0 + 448);
  uint64_t v29 = *(void *)(v0 + 424);
  uint64_t v28 = *(void *)(v0 + 432);
  uint64_t v30 = v2;
  uint64_t v31 = *(void **)(v0 + 416);
  uint64_t v103 = *(void *)(v0 + 400);
  uint64_t v106 = *(void *)(v0 + 408);
  uint64_t v97 = *(void *)(v0 + 384);
  uint64_t v100 = *(void *)(v0 + 392);
  uint64_t v91 = *(void *)(v0 + 360);
  uint64_t v94 = *(void *)(v0 + 368);
  uint64_t v88 = *(void *)(v0 + 352);
  uint64_t v76 = *(void *)(v0 + 344);
  uint64_t v32 = v1;
  uint64_t v33 = *(void *)(v0 + 328);

  sub_2528B3A64(v27, v70);
  sub_2528B3A64(v73, v79);
  sub_2528B3A64(v82, v85);
  unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v34(v32, v29);
  v26(v76, v33);
  v26(v88, v33);
  v26(v91, v33);
  v26(v94, v33);
  v26(v97, v33);
  v26(v100, v33);
  v26(v103, v33);
  v26(v106, v33);
  v34(v109, v29);
  v34(v112, v29);
  v34(v115, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return v35();
}

uint64_t sub_2528B37B4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 488);
  unint64_t v2 = *(void *)(v0 + 496);
  uint64_t v5 = *(void *)(v0 + 472);
  unint64_t v4 = *(void *)(v0 + 480);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 408);
  uint64_t v24 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v22 = *(void *)(v0 + 360);
  uint64_t v23 = *(void *)(v0 + 368);
  uint64_t v7 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 328);
  sub_2528B3A64(*(void *)(v0 + 504), *(void *)(v0 + 512));
  sub_2528B3A64(v3, v2);
  sub_2528B3A64(v5, v4);
  v1(v7, v8);
  v1(v6, v8);
  v1(v22, v8);
  v1(v23, v8);
  v1(v24, v8);
  v1(v25, v8);
  v1(v26, v8);
  v1(v27, v8);
  uint64_t v9 = *(void **)(v0 + 576);
  *(void *)(v0 + 304) = v9;
  id v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  sub_2528BA6BC(0, &qword_269C31D80);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void *)(v0 + 456);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v16 = *(void *)(v0 + 424);
  uint64_t v15 = *(void *)(v0 + 432);
  id v17 = *(void **)(v0 + 416);
  if (v11)
  {

    id v18 = *(id *)(v0 + 296);
    swift_willThrow();
  }
  else
  {
  }
  unsigned int v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v19(v13, v16);
  v19(v12, v16);
  v19(v14, v16);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_2528B3A64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_2528B3ABC(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528B3C3C, 0, 0);
}

uint64_t sub_2528B3C3C()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[5], v2);
  uint64_t v4 = (void *)sub_2529518F8();
  BOOL v5 = sub_25294B740(v4, qword_2702CF998);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v6;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v7 = v6(v1, v2);
  if (v5)
  {
    v0[2] = &unk_2702CF9C0;
    v0[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
    v0[23] = sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
    sub_252951A38();
    sub_252951798();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[24] = v12;
    void *v12 = v0;
    v12[1] = sub_2528B3DF4;
    uint64_t v7 = v0[12];
    uint64_t v8 = MEMORY[0x263F8D5C8];
    uint64_t v10 = MEMORY[0x263F00C58];
    uint64_t v11 = MEMORY[0x263F00C50];
    uint64_t v9 = MEMORY[0x263F8D5C8];
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270EE76F8](v7, v8, v9, v10, v11);
}

uint64_t sub_2528B3DF4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B3EF0, 0, 0);
}

uint64_t sub_2528B3EF0()
{
  uint64_t v1 = (uint64_t *)v0[6];
  v0[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252953B00;
  uint64_t v3 = *v1;
  v0[26] = *v1;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = 1;
  v0[27] = sub_2528AE524();
  v0[28] = sub_2528AE578();
  uint64_t v4 = MEMORY[0x263F8D5C8];
  uint64_t v5 = MEMORY[0x263F00C50];
  sub_252951918();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[29] = v6;
  void *v6 = v0;
  v6[1] = sub_2528B4038;
  uint64_t v7 = v0[11];
  uint64_t v8 = MEMORY[0x263F00C58];
  return MEMORY[0x270EE76F8](v7, v4, v4, v8, v5);
}

uint64_t sub_2528B4038()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 160);
  uint64_t v2 = *(void *)(*(void *)v0 + 128);
  uint64_t v3 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_2528B4198, 0, 0);
}

uint64_t sub_2528B4198()
{
  uint64_t v1 = MEMORY[0x263F8D5C8];
  uint64_t v2 = MEMORY[0x263F00C50];
  sub_252951918();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2528B4280;
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = MEMORY[0x263F00C58];
  return MEMORY[0x270EE76F8](v4, v1, v1, v5, v2);
}

uint64_t sub_2528B4280()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B437C, 0, 0);
}

uint64_t sub_2528B437C()
{
  *(void *)(v0 + 248) = sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515F8();
  float v1 = *(float *)(v0 + 296);
  sub_2529515F8();
  float v2 = powf(v1, *(float *)(v0 + 280));
  sub_2529515F8();
  float v3 = *(float *)(v0 + 284);
  sub_2529515F8();
  float v4 = v2 * powf(v3, *(float *)(v0 + 288));
  sub_2529515F8();
  float v5 = *(float *)(v0 + 292);
  sub_2529515F8();
  float v6 = v4 * powf(v5, *(float *)(v0 + 316));
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_252953B00;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0;
  *(float *)(v0 + 300) = v6;
  sub_252951608();
  *(void *)(v0 + 256) = 1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2528B45C4;
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 128);
  return sub_2528B55F0(v9, 3, v10);
}

uint64_t sub_2528B45C4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B46C0, 0, 0);
}

uint64_t sub_2528B46C0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t))(v0 + 160))(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  float v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v5;
  *float v5 = v0;
  v5[1] = sub_2528B47B4;
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = MEMORY[0x263F8D5C8];
  uint64_t v8 = MEMORY[0x263F00C58];
  uint64_t v9 = MEMORY[0x263F00C50];
  uint64_t v10 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v6, v7, v10, v8, v9);
}

uint64_t sub_2528B47B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B48B0, 0, 0);
}

uint64_t sub_2528B48B0()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  float v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  uint64_t result = sub_2529515F8();
  float v7 = *(float *)(v0 + 304);
  if ((~LODWORD(v7) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v7 <= -9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 >= 9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t result = sub_2529515F8();
  float v8 = *(float *)(v0 + 308);
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 >= 9.2234e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = (uint64_t)v7 + (uint64_t)v8;
  if (__OFADD__((uint64_t)v7, (uint64_t)v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = sub_2529515F8();
  float v10 = *(float *)(v0 + 312);
  if ((~LODWORD(v10) & 0x7F800000) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v10 <= -9.2234e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= 9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (__OFADD__(v9, (uint64_t)v10))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v9 + (uint64_t)v10 > 2)
  {
    uint64_t v28 = *(void *)(v0 + 208);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 88);
    uint64_t v33 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_252953B00;
    *(void *)(v15 + 32) = v28;
    *(void *)(v15 + 40) = 1;
    *(void *)(v0 + 24) = sub_2529515D8();
    sub_2529518E8();
    v5(v33, v14);
    v11(v29, v12);
    v5(v13, v14);
    v5(v30, v14);
    v11(v31, v12);
    v11(v32, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  uint64_t v17 = *(void *)(v0 + 256);
  *(void *)(v0 + 248) = sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515F8();
  float v18 = *(float *)(v0 + 296);
  sub_2529515F8();
  float v19 = powf(v18, *(float *)(v0 + 280));
  sub_2529515F8();
  float v20 = *(float *)(v0 + 284);
  sub_2529515F8();
  float v21 = v19 * powf(v20, *(float *)(v0 + 288));
  sub_2529515F8();
  float v22 = *(float *)(v0 + 292);
  sub_2529515F8();
  float v23 = v21 * powf(v22, *(float *)(v0 + 316));
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_252953B00;
  *(void *)(v24 + 32) = v17;
  *(void *)(v24 + 40) = 0;
  *(float *)(v0 + 300) = v23;
  uint64_t result = sub_252951608();
  *(void *)(v0 + 256) = v17 + 1;
  if (__OFADD__(v17, 1))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_2528B45C4;
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 128);
  return sub_2528B55F0(v26, 3, v27);
}

uint64_t sub_2528B4E28(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  uint64_t v5 = sub_252951A08();
  v3[15] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[16] = v6;
  v3[17] = *(void *)(v6 + 64);
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D98);
  v3[19] = swift_task_alloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_269C31DA0 + dword_269C31DA0);
  float v7 = (void *)swift_task_alloc();
  v3[20] = v7;
  void *v7 = v3;
  v7[1] = sub_2528B4F6C;
  return v9(a1);
}

uint64_t sub_2528B4F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    float v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 168) = a2;
    *(void *)(v6 + 176) = a1;
    return MEMORY[0x270FA2498](sub_2528B50C4, 0, 0);
  }
}

uint64_t sub_2528B50C4()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[22];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C78);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_252953BF0;
  *(void *)(v3 + 32) = v2;
  sub_252951BB8();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252953BF0;
  *(void *)(v4 + 32) = v1;
  sub_252951BB8();
  sub_2528BA6BC(0, &qword_269C31DA8);
  id v5 = v2;
  id v6 = v1;
  uint64_t v7 = (void *)sub_252951B88();
  swift_bridgeObjectRelease();
  sub_2528BA6BC(0, &qword_269C31DB0);
  float v8 = (void *)sub_252951B88();
  swift_bridgeObjectRelease();
  v0[23] = objc_msgSend(self, sel_geometryWithSources_elements_, v7, v8);

  return MEMORY[0x270FA2498](sub_2528B5244, 0, 0);
}

uint64_t sub_2528B5244()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v19 = v2;
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[13];
  v0[2] = v0;
  v0[7] = v0 + 12;
  v0[3] = sub_2528B5464;
  uint64_t v20 = swift_continuation_init();
  uint64_t v8 = sub_252951C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v0[10] = *(void *)(v6 + 24);
  v0[11] = *(void *)(v6 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7, v5);
  sub_252951C48();
  sub_2528B8224((uint64_t)(v0 + 10));
  sub_2528B8224((uint64_t)(v0 + 11));
  id v9 = v1;
  uint64_t v10 = sub_252951C38();
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v12 = (v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8F500];
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(v6 + 32);
  long long v16 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)v6;
  *(_OWORD *)(v13 + 48) = v16;
  *(void *)(v13 + 64) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v13 + v11, v3, v5);
  *(void *)(v13 + v12) = v9;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_2528B6D10(v19, (uint64_t)&unk_269C31DC0, v13);
  swift_release();
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2528B5464()
{
  *(void *)(*(void *)v0 + 192) = *(void *)(*(void *)v0 + 96);
  return MEMORY[0x270FA2498](sub_2528B5560, 0, 0);
}

uint64_t sub_2528B5560()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 168);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 192);
  return v3(v4);
}

uint64_t sub_2528B55F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528B56B8, 0, 0);
}

uint64_t sub_2528B56B8()
{
  v0[18] = sub_2529518F8();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  void *v1 = v0;
  v1[1] = sub_2528B577C;
  uint64_t v2 = v0[17];
  uint64_t v3 = MEMORY[0x263F8D5C8];
  uint64_t v4 = MEMORY[0x263F00C58];
  uint64_t v5 = MEMORY[0x263F00C50];
  uint64_t v6 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v2, v3, v6, v4, v5);
}

uint64_t sub_2528B577C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B5878, 0, 0);
}

void sub_2528B5878()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = v1 - 1;
  if (v1 < 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_252953740;
  *(void *)(v3 + 32) = v2;
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515F8();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 104);
  if (*(float *)(v0 + 172) > 0.0)
  {
    uint64_t v5 = v2;
LABEL_4:
    if (v4 == 1)
    {
      sub_2529515F8();
      float v6 = *(float *)(v0 + 176);
      if ((~LODWORD(v6) & 0x7F800000) == 0)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v6 <= -9.2234e18)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v6 >= 9.2234e18)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v7 = (uint64_t)v6 + 1;
      if (__OFADD__((uint64_t)v6, 1))
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v8 = *(void *)(v0 + 104);
    }
    else
    {
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_252953740;
      *(void *)(v14 + 32) = v5;
      sub_2529515F8();
      swift_bridgeObjectRelease();
      float v15 = *(float *)(v0 + 164);
      if ((~LODWORD(v15) & 0x7F800000) == 0)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (v15 <= -9.2234e18)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v15 >= 9.2234e18)
      {
LABEL_35:
        __break(1u);
        return;
      }
      uint64_t v7 = (uint64_t)v15;
      uint64_t v8 = v5;
    }
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_252953740;
    *(void *)(v16 + 32) = v5;
    *(_DWORD *)(v0 + 160) = 0;
    sub_252951608();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_252953740;
    if (!__OFSUB__(v8, 1))
    {
      *(void *)(v17 + 32) = v8 - 1;
      uint64_t v18 = (void (*)(uint64_t, void))sub_2529515E8();
      *uint64_t v19 = *v19 + 1.0;
      v18(v0 + 48, 0);
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_252953740;
      *(void *)(v20 + 32) = v2;
      if (!__OFSUB__(v7, 1))
      {
        uint64_t v21 = *(void *)(v0 + 136);
        uint64_t v22 = *(void *)(v0 + 120);
        uint64_t v23 = *(void *)(v0 + 128);
        uint64_t v24 = (void (*)(uint64_t, void))sub_2529515E8();
        *uint64_t v25 = *v25 + (float)(v7 - 1);
        v24(v0 + 16, 0);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 80) = sub_2529515D8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
        sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
        sub_2529518E8();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        goto LABEL_22;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (--v4)
  {
    while (v4 + 1 >= 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_252953740;
      uint64_t v5 = v4 - 1;
      *(void *)(v9 + 32) = v4 - 1;
      sub_2529515F8();
      swift_bridgeObjectRelease();
      if (*(float *)(v0 + 172) > 0.0) {
        goto LABEL_4;
      }
      if (!--v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
LABEL_14:
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_252953740;
  *(void *)(v13 + 32) = v2;
  *(_DWORD *)(v0 + 168) = 1065353216;
  sub_252951608();
  *(void *)(v0 + 88) = sub_2529515D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  sub_2529518E8();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
LABEL_22:
  swift_task_dealloc();
  uint64_t v26 = *(void (**)(void))(v0 + 8);
  v26();
}

uint64_t sub_2528B5DB0(uint64_t __src, uint64_t a2)
{
  if (__src)
  {
    if ((unint64_t)(a2 - 0x2000000000000000) >> 62 == 3)
    {
      uint64_t v3 = 4 * a2;
      if (4 * a2)
      {
        if (v3 <= 14)
        {
          return sub_2528F561C((unsigned char *)__src, (unsigned char *)(__src + v3));
        }
        else
        {
          sub_252951148();
          swift_allocObject();
          sub_252951138();
          if ((unint64_t)v3 >= 0x7FFFFFFF)
          {
            sub_252951298();
            __src = swift_allocObject();
            *(void *)(__src + 16) = 0;
            *(void *)(__src + 24) = v3;
          }
          else
          {
            return a2 << 34;
          }
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return __src;
}

uint64_t sub_2528B5E88(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  sub_252951C48();
  v2[10] = sub_252951C38();
  uint64_t v5 = sub_252951BF8();
  v2[11] = v5;
  v2[12] = v4;
  return MEMORY[0x270FA2498](sub_2528B5F80, v5, v4);
}

uint64_t sub_2528B5F80()
{
  v0[13] = sub_2528B9C90();
  uint64_t v1 = v0 + 4;
  uint64_t v2 = v0[6];
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A90]), sel_init);
  v0[14] = v3;
  uint64_t v4 = (void *)sub_252951AB8();
  id v32 = v3;
  objc_msgSend(v3, sel_setName_, v4);

  v0[4] = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(v2 + 24);
  v0[2] = v5;
  uint64_t v6 = *(void *)(v5 + 16);
  v0[15] = v6;
  uint64_t v31 = v0;
  if (v6)
  {
    uint64_t v7 = (uint64_t)(v0 + 2);
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      id v9 = objc_allocWithZone(MEMORY[0x263F16A90]);
      swift_bridgeObjectRetain();
      id v10 = objc_msgSend(v9, sel_init);
      uint64_t v11 = (void *)sub_252951AB8();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setName_, v11);

      id v12 = v10;
      MEMORY[0x2533C0560]();
      if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_252951BC8();
      }
      sub_252951BE8();
      sub_252951BB8();

      v8 += 16;
      --v6;
    }
    while (v6);
    sub_2528BA740(v7);
    uint64_t v0 = v31;
  }
  uint64_t v13 = *(void *)(v0[6] + 32);
  v0[3] = v13;
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
    uint64_t v16 = *v1;
LABEL_24:
    v0[16] = v16;
    uint64_t v29 = (void *)swift_task_alloc();
    v0[17] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_2528B6330;
    unint64_t v26 = v0[9];
    uint64_t v18 = MEMORY[0x263F8D5C8];
    uint64_t v20 = MEMORY[0x263F00C58];
    uint64_t v21 = MEMORY[0x263F00C50];
    uint64_t v19 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE76F8](v26, v18, v19, v20, v21);
  }
  uint64_t v15 = v13 + 32;
  uint64_t v16 = *v1;
  unint64_t v17 = v16 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  unint64_t v22 = 0;
  while (1)
  {
    unint64_t v26 = *(void *)(v15 + 8 * v22);
    if ((v26 & 0x8000000000000000) == 0) {
      break;
    }
    if (v17)
    {
      id v28 = (id)MEMORY[0x2533C0860](v22, v16);
    }
    else
    {
      if (v22 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_29;
      }
      id v28 = *(id *)(v16 + 8 * v22 + 32);
    }
    uint64_t v23 = v28;
    objc_msgSend(v32, sel_addChildNode_, v28);
LABEL_12:
    ++v22;

    if (v14 == v22)
    {
      sub_2528BA740((uint64_t)(v0 + 3));
      uint64_t v0 = v31;
      goto LABEL_24;
    }
  }
  if (v17)
  {
    uint64_t v23 = (void *)MEMORY[0x2533C0860]();
    id v24 = (id)MEMORY[0x2533C0860](v22, v16);
LABEL_11:
    uint64_t v25 = v24;
    objc_msgSend(v23, sel_addChildNode_, v24);

    goto LABEL_12;
  }
  unint64_t v27 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v26 < v27)
  {
    unint64_t v26 = (unint64_t)*(id *)(v16 + 32 + 8 * v26);
    if (v22 >= v27) {
      goto LABEL_28;
    }
    uint64_t v23 = (void *)v26;
    id v24 = *(id *)(v16 + 8 * v22 + 32);
    goto LABEL_11;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return MEMORY[0x270EE76F8](v26, v18, v19, v20, v21);
}

uint64_t sub_2528B6330()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_2528B6450, v3, v2);
}

void sub_2528B6450()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  if (!v1)
  {
LABEL_21:
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    id v53 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    uint64_t v54 = *(void *)(v0 + 128);
    uint64_t v55 = *(void *)(v0 + 112);
    v53(v54, v55);
    return;
  }
  unint64_t v2 = 0;
  unint64_t v3 = 0;
  uint64_t v4 = *(void *)(v0 + 128);
  unint64_t v67 = v4 & 0xC000000000000001;
  uint64_t v66 = v4 & 0xFFFFFFFFFFFFFF8;
  uint64_t v64 = *(void *)(v0 + 104);
  uint64_t v65 = v4 + 32;
  uint64_t v5 = (float *)(v64 + 40);
  float32x4_t v63 = (float32x4_t)xmmword_252953C10;
  float32x4_t v62 = (float32x4_t)xmmword_252953C20;
  float32x4_t v61 = (float32x4_t)xmmword_252953C30;
  float32x4_t v60 = (float32x4_t)xmmword_252953C40;
  float32x4_t v59 = (float32x4_t)xmmword_252953C50;
  float32x4_t v58 = (float32x4_t)xmmword_252953C60;
  float32x4_t v57 = (float32x4_t)xmmword_252953C70;
  float32x4_t v56 = (float32x4_t)xmmword_252953C80;
  while (v67)
  {
    id v8 = (id)MEMORY[0x2533C0860](v3, *(void *)(v0 + 128));
LABEL_8:
    unint64_t v70 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_252953B00;
    *(void *)(v9 + 32) = v2;
    *(void *)(v9 + 40) = 0;
    sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
    sub_2529515F8();
    swift_bridgeObjectRelease();
    int v10 = *(_DWORD *)(v0 + 144);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_252953B00;
    *(void *)(v11 + 32) = v2 + 1;
    *(void *)(v11 + 40) = 0;
    sub_2529515F8();
    swift_bridgeObjectRelease();
    int v12 = *(_DWORD *)(v0 + 148);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_252953B00;
    if (v2 == 0x7FFFFFFFFFFFFFFELL) {
      goto LABEL_25;
    }
    *(void *)(v13 + 32) = v2 + 2;
    *(void *)(v13 + 40) = 0;
    sub_2529515F8();
    swift_bridgeObjectRelease();
    int v14 = *(_DWORD *)(v0 + 152);
    id v15 = objc_msgSend(v70, sel_parentNode);
    if (!v15) {
      goto LABEL_29;
    }
    uint64_t v19 = v15;
    LODWORD(v16) = v10;
    LODWORD(v17) = v12;
    LODWORD(v18) = v14;
    objc_msgSend(v15, sel_convertPosition_fromNode_, *(void *)(v0 + 112), v16, v17, v18);
    int v21 = v20;
    int v23 = v22;
    int v25 = v24;

    LODWORD(v26) = v21;
    LODWORD(v27) = v23;
    LODWORD(v28) = v25;
    objc_msgSend(v70, sel_setPosition_, v26, v27, v28);
    unint64_t v29 = *(void *)(v64 + 16);
    if (v2 >= v29) {
      goto LABEL_26;
    }
    if (v2 + 1 >= v29) {
      goto LABEL_27;
    }
    if (v2 + 2 >= v29) {
      goto LABEL_28;
    }
    float v30 = *(v5 - 1);
    float v31 = *v5;
    unint64_t v32 = (unint64_t)__sincosf_stret(*(v5 - 2));
    LODWORD(v33) = HIDWORD(v32);
    *((float *)&v33 + 1) = -*(float *)&v32;
    float32x4_t v68 = (float32x4_t)v33;
    __float2 v34 = __sincosf_stret(v30);
    __float2 v36 = __sincosf_stret(v31);
    v35.f32[0] = v36.__sinval;
    float32x4_t v37 = vmlaq_n_f32(vmlaq_f32(vmulq_n_f32(v68, v34.__cosval), (float32x4_t)0, (float32x4_t)v32), (float32x4_t)xmmword_252953C00, v34.__sinval);
    float32x4_t v38 = vaddq_f32(vaddq_f32((float32x4_t)v32, vmulq_f32(v68, (float32x4_t)0)), (float32x4_t)0);
    float32x4_t v39 = vmlaq_n_f32(vmlaq_f32(vmulq_n_f32(v68, -v34.__sinval), (float32x4_t)0, (float32x4_t)v32), (float32x4_t)xmmword_252953C00, v34.__cosval);
    float32x4_t v40 = vmulq_f32(v37, (float32x4_t)0);
    float32x4_t v41 = vmlsq_lane_f32(vmlaq_n_f32(v40, v38, v36.__cosval), v39, v35, 0);
    v72.columns[2] = (simd_float3)vmlaq_n_f32(vmlaq_n_f32(v40, v38, v36.__sinval), v39, v36.__cosval);
    v72.columns[0] = (simd_float3)vmlaq_f32(vmlaq_f32(v37, (float32x4_t)0, v38), (float32x4_t)0, v39);
    v72.columns[1] = (simd_float3)v41;
    *(double *)v42.i64 = simd_quaternion(v72);
    float32x4_t v69 = v42;
    id v43 = objc_msgSend(v70, sel_name);
    if (v43 && (uint64_t v48 = v43, v49 = sub_252951AE8(), v51 = v50, v48, v51))
    {
      if (v49 == 1684104552 && v51 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        float32x4_t v6 = v69;
LABEL_19:
        float32x4_t v44 = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32(v63, *(float32x2_t *)v6.f32, 1), v62, v6.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32(v61, v6, 3), v60, v6, 2));
        float32x4_t v45 = vmlaq_n_f32(vmulq_lane_f32(v59, *(float32x2_t *)v44.f32, 1), v58, v44.f32[0]);
        HIDWORD(v47) = v56.i32[1];
        float32x4_t v46 = vmlaq_laneq_f32(vmulq_laneq_f32(v57, v44, 3), v56, v44, 2);
        float32x4_t v6 = vaddq_f32(v45, v46);
        goto LABEL_4;
      }
      char v52 = sub_252952108();
      swift_bridgeObjectRelease();
      float32x4_t v6 = v69;
      if (v52) {
        goto LABEL_19;
      }
    }
    else
    {
      float32x4_t v6 = v69;
    }
LABEL_4:
    ++v3;
    uint64_t v7 = *(void *)(v0 + 120);
    v45.i32[0] = v6.i32[1];
    LODWORD(v47) = v6.i32[3];
    v46.i32[0] = v6.i32[2];
    v44.i32[0] = v6.i32[0];
    objc_msgSend(v70, sel_setOrientation_, *(double *)v44.i64, *(double *)v45.i64, *(double *)v46.i64, v47, *(_OWORD *)&v56, *(_OWORD *)&v57, *(_OWORD *)&v58, *(_OWORD *)&v59, *(_OWORD *)&v60, *(_OWORD *)&v61, *(_OWORD *)&v62, *(_OWORD *)&v63);

    v2 += 3;
    v5 += 3;
    if (v3 == v7) {
      goto LABEL_21;
    }
  }
  if (v3 < *(void *)(v66 + 16))
  {
    id v8 = *(id *)(v65 + 8 * v3);
    goto LABEL_8;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_2528B6994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a4;
  v7[5] = sub_252951C48();
  v7[6] = sub_252951C38();
  uint64_t v9 = (void *)swift_task_alloc();
  v7[7] = v9;
  void *v9 = v7;
  v9[1] = sub_2528B6A58;
  return sub_2528B5E88(a5);
}

uint64_t sub_2528B6A58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[8] = a2;
  v5[9] = v2;
  swift_task_dealloc();
  uint64_t v7 = sub_252951BF8();
  if (v2)
  {
    id v8 = sub_2528B6CAC;
  }
  else
  {
    v5[10] = a1;
    id v8 = sub_2528B6BC8;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_2528B6BC8()
{
  uint64_t v2 = v0[9];
  unint64_t v1 = v0[10];
  unint64_t v3 = (void *)v0[8];
  uint64_t v5 = v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_release();
  id v6 = sub_2528BA4C8(v4, v3, v1, *(void *)(v5 + 8), *(void *)(v5 + 16));
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)v0[8];
  if (!v2)
  {
    **(void **)(*(void *)(v0[4] + 64) + 40) = v6;
    swift_continuation_resume();
  }

  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2528B6CAC()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528B6D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_252951C68();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_252951C58();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2528B8494(a1, &qword_269C31D98);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_252951BF8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2528B6E98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_2528B6EF0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2528AB1E4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2528B6F5C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2528B6F5C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2529520B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_2528B7650((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_2528AA3C4((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31DE0);
    uint64_t v8 = sub_252951BD8();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  int v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        double v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              int v23 = (_OWORD *)(v11 + v16);
              int v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *int v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      double v28 = (float *)(v11 + 16 * v10);
      do
      {
        unint64_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)unint64_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v12 = sub_2528A9FCC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      unint64_t v83 = sub_2528A9FCC((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      int v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    float32x2_t v35 = v12 + 32;
    __float2 v36 = &v12[16 * v34 + 32];
    *(void *)__float2 v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          float32x4_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            simd_float3x3 v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        float32x4_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        float32x4_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_2528B7650((float *)(v11 + 16 * *(void *)v78), (float *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        int v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_252951F18();
  __break(1u);
  return result;
}

uint64_t sub_2528B7650(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (float *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            uint64_t v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            int v23 = v6;
            v20 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            int v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 4;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 4;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_2528AA250((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 4);
    }
    float v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          uint64_t v4 = v16 + 4;
          double v18 = v16;
          float v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          float v17 = v6 + 4;
          double v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528B78DC(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v5) {
      break;
    }
    uint64_t v25 = MEMORY[0x263F8EE78];
    uint64_t result = sub_252951ED8();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v15 = v3;
    unint64_t v3 = a1 & 0xC000000000000001;
    uint64_t v7 = self;
    uint64_t v8 = 0;
    int64_t v9 = (long long *)MEMORY[0x263F16BA8];
    while (v5 != v8)
    {
      if (v3) {
        id v10 = (id)MEMORY[0x2533C0860](v8, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      ++v8;
      long long v12 = v9[1];
      long long v21 = *v9;
      long long v22 = v12;
      long long v13 = v9[3];
      long long v23 = v9[2];
      long long v24 = v13;
      objc_msgSend(v10, sel_convertTransform_fromNode_, &v21, a2, v15);
      long long v21 = v17;
      long long v22 = v18;
      long long v23 = v19;
      long long v24 = v20;
      id v14 = objc_msgSend(v7, sel_valueWithSCNMatrix4_, &v21);

      sub_252951EB8();
      sub_252951EE8();
      sub_252951EF8();
      sub_252951EC8();
      if (v5 == v8) {
        return v25;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_252951F38();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2528B7A7C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528B7B40, 0, 0);
}

uint64_t sub_2528B7B40()
{
  type metadata accessor for BodyMeshGenerator.InternalBundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_252951268();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_252951AB8();
  uint64_t v7 = (void *)sub_252951AB8();
  id v8 = objc_msgSend(v2, sel_URLForResource_withExtension_, v6, v7);

  __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = v9;
  if (v8)
  {
    uint64_t v11 = swift_task_alloc();
    sub_252951238();

    long long v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v12(v10, v11, v3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1)
    {
      v12(v5, v10, v3);
      swift_task_dealloc();
      uint64_t v13 = sub_252951278();
      v0[6] = v17;
      v0[7] = v13;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);

      swift_task_dealloc();
      long long v18 = (void *)swift_task_alloc();
      v0[8] = v18;
      void *v18 = v0;
      v18[1] = sub_2528B7F34;
      uint64_t v19 = v0[5];
      uint64_t v20 = MEMORY[0x263F8D5C8];
      uint64_t v21 = MEMORY[0x263F00C58];
      uint64_t v22 = MEMORY[0x263F00C50];
      uint64_t v23 = MEMORY[0x263F8D5C8];
      return MEMORY[0x270EE76F8](v19, v20, v23, v21, v22);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
  }
  sub_2528B8494(v10, qword_269C32880);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2528AB988();
  swift_allocError();
  *id v14 = 0xD000000000000019;
  v14[1] = 0x800000025295A8D0;
  swift_willThrow();

  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_2528B7F34()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528B8030, 0, 0);
}

uint64_t sub_2528B8030()
{
  unint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[3];
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  uint64_t v6 = sub_2529515D8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_2528B5DB0(v6 + 32, v7);
  unint64_t v10 = v9;
  id v11 = (id)*MEMORY[0x263F16B48];
  long long v12 = (void *)sub_2529512B8();
  id v13 = objc_msgSend(self, sel_geometrySourceWithData_semantic_vectorCount_floatComponents_componentsPerVector_bytesPerComponent_dataOffset_dataStride_, v12, v11, 12542, 1, 3, 4, 0, 12);

  sub_2528B6E98(v1, v2);
  id v14 = (void *)sub_2529512B8();
  sub_2528B3A64(v1, v2);
  id v15 = objc_msgSend(self, sel_geometryElementWithData_primitiveType_primitiveCount_bytesPerIndex_, v14, 0, 25080, 4);

  sub_2528B3A64(v8, v10);
  sub_2528B3A64(v1, v2);
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(id, id))v0[1];
  return v16(v13, v15);
}

uint64_t sub_2528B8224(uint64_t a1)
{
  return a1;
}

uint64_t sub_2528B8250()
{
  uint64_t v1 = sub_252951A08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_2528B8350(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_252951A08() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + 32;
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *id v13 = v2;
  v13[1] = sub_2528A91AC;
  return sub_2528B6994(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_2528B8494(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_2528B84F0@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252953C90;
  *(void *)(v2 + 32) = 1953460082;
  *(void *)(v2 + 40) = 0xE400000000000000;
  *(void *)(v2 + 48) = 1936746856;
  *(void *)(v2 + 56) = 0xE400000000000000;
  *(void *)(v2 + 64) = 0x656C70757466656CLL;
  *(void *)(v2 + 72) = 0xE900000000000067;
  *(void *)(v2 + 80) = 0x67656C7466656CLL;
  *(void *)(v2 + 88) = 0xE700000000000000;
  *(void *)(v2 + 96) = 0x746F6F667466656CLL;
  *(void *)(v2 + 104) = 0xE800000000000000;
  *(void *)(v2 + 112) = 0x73656F747466656CLL;
  *(void *)(v2 + 120) = 0xE800000000000000;
  *(void *)(v2 + 128) = 0x73656F747466656CLL;
  *(void *)(v2 + 136) = 0xEB00000000646E65;
  *(void *)(v2 + 144) = 0x6C70757468676972;
  *(void *)(v2 + 152) = 0xEA00000000006765;
  *(void *)(v2 + 160) = 0x67656C7468676972;
  *(void *)(v2 + 168) = 0xE800000000000000;
  *(void *)(v2 + 176) = 0x6F6F667468676972;
  *(void *)(v2 + 184) = 0xE900000000000074;
  *(void *)(v2 + 192) = 0x656F747468676972;
  *(void *)(v2 + 200) = 0xE900000000000073;
  strcpy((char *)(v2 + 208), "righttoesend");
  *(unsigned char *)(v2 + 221) = 0;
  *(_WORD *)(v2 + 222) = -5120;
  *(void *)(v2 + 224) = 0x31656E697073;
  *(void *)(v2 + 232) = 0xE600000000000000;
  *(void *)(v2 + 240) = 0x32656E697073;
  *(void *)(v2 + 248) = 0xE600000000000000;
  *(void *)(v2 + 256) = 0x33656E697073;
  *(void *)(v2 + 264) = 0xE600000000000000;
  *(void *)(v2 + 272) = 0x34656E697073;
  *(void *)(v2 + 280) = 0xE600000000000000;
  *(void *)(v2 + 288) = 0x35656E697073;
  *(void *)(v2 + 296) = 0xE600000000000000;
  *(void *)(v2 + 304) = 0x36656E697073;
  *(void *)(v2 + 312) = 0xE600000000000000;
  *(void *)(v2 + 320) = 0x37656E697073;
  *(void *)(v2 + 328) = 0xE600000000000000;
  *(void *)(v2 + 336) = 0x316B63656ELL;
  *(void *)(v2 + 344) = 0xE500000000000000;
  *(void *)(v2 + 352) = 0x326B63656ELL;
  *(void *)(v2 + 360) = 0xE500000000000000;
  *(void *)(v2 + 368) = 0x336B63656ELL;
  *(void *)(v2 + 376) = 0xE500000000000000;
  *(void *)(v2 + 384) = 0x346B63656ELL;
  *(void *)(v2 + 392) = 0xE500000000000000;
  *(void *)(v2 + 400) = 1684104552;
  *(void *)(v2 + 408) = 0xE400000000000000;
  *(void *)(v2 + 416) = 1702063982;
  *(void *)(v2 + 424) = 0xE400000000000000;
  *(void *)(v2 + 432) = 7823722;
  *(void *)(v2 + 440) = 0xE300000000000000;
  *(void *)(v2 + 448) = 1852401763;
  *(void *)(v2 + 456) = 0xE400000000000000;
  *(void *)(v2 + 464) = 0x6579657466656CLL;
  *(void *)(v2 + 472) = 0xE700000000000000;
  *(void *)(v2 + 480) = 0x626579657466656CLL;
  *(void *)(v2 + 488) = 0xEB000000006C6C61;
  *(void *)(v2 + 496) = 0x756579657466656CLL;
  *(void *)(v2 + 504) = 0xEF64696C72657070;
  *(void *)(v2 + 512) = 0x6C6579657466656CLL;
  *(void *)(v2 + 520) = 0xEF64696C7265776FLL;
  *(void *)(v2 + 528) = 0x6579657468676972;
  *(void *)(v2 + 536) = 0xE800000000000000;
  strcpy((char *)(v2 + 544), "righteyeball");
  *(unsigned char *)(v2 + 557) = 0;
  *(_WORD *)(v2 + 558) = -5120;
  *(void *)(v2 + 560) = 0xD000000000000010;
  *(void *)(v2 + 568) = 0x800000025295A8F0;
  *(void *)(v2 + 576) = 0xD000000000000010;
  *(void *)(v2 + 584) = 0x800000025295A910;
  strcpy((char *)(v2 + 592), "leftshoulder1");
  *(_WORD *)(v2 + 606) = -4864;
  *(void *)(v2 + 608) = 0x6D72617466656CLL;
  *(void *)(v2 + 616) = 0xE700000000000000;
  *(void *)(v2 + 624) = 0x65726F667466656CLL;
  *(void *)(v2 + 632) = 0xEB000000006D7261;
  *(void *)(v2 + 640) = 0x646E61687466656CLL;
  *(void *)(v2 + 648) = 0xE800000000000000;
  *(void *)(v2 + 656) = 0xD000000000000012;
  *(void *)(v2 + 664) = 0x800000025295A930;
  strcpy((char *)(v2 + 672), "lefthandpinky1");
  *(unsigned char *)(v2 + 687) = -18;
  strcpy((char *)(v2 + 688), "lefthandpinky2");
  *(unsigned char *)(v2 + 703) = -18;
  strcpy((char *)(v2 + 704), "lefthandpinky3");
  *(unsigned char *)(v2 + 719) = -18;
  *(void *)(v2 + 720) = 0xD000000000000010;
  *(void *)(v2 + 728) = 0x800000025295A950;
  *(void *)(v2 + 736) = 0xD000000000000011;
  *(void *)(v2 + 744) = 0x800000025295A970;
  strcpy((char *)(v2 + 752), "lefthandring1");
  *(_WORD *)(v2 + 766) = -4864;
  strcpy((char *)(v2 + 768), "lefthandring2");
  *(_WORD *)(v2 + 782) = -4864;
  strcpy((char *)(v2 + 784), "lefthandring3");
  *(_WORD *)(v2 + 798) = -4864;
  *(void *)(v2 + 800) = 0x646E61687466656CLL;
  *(void *)(v2 + 808) = 0xEF646E65676E6972;
  *(void *)(v2 + 816) = 0xD000000000000010;
  *(void *)(v2 + 824) = 0x800000025295A990;
  strcpy((char *)(v2 + 832), "lefthandmid1");
  *(unsigned char *)(v2 + 845) = 0;
  *(_WORD *)(v2 + 846) = -5120;
  strcpy((char *)(v2 + 848), "lefthandmid2");
  *(unsigned char *)(v2 + 861) = 0;
  *(_WORD *)(v2 + 862) = -5120;
  strcpy((char *)(v2 + 864), "lefthandmid3");
  *(unsigned char *)(v2 + 877) = 0;
  *(_WORD *)(v2 + 878) = -5120;
  strcpy((char *)(v2 + 880), "lefthandmidend");
  *(unsigned char *)(v2 + 895) = -18;
  *(void *)(v2 + 896) = 0xD000000000000012;
  *(void *)(v2 + 904) = 0x800000025295A9B0;
  strcpy((char *)(v2 + 912), "lefthandindex1");
  *(unsigned char *)(v2 + 927) = -18;
  strcpy((char *)(v2 + 928), "lefthandindex2");
  *(unsigned char *)(v2 + 943) = -18;
  strcpy((char *)(v2 + 944), "lefthandindex3");
  *(unsigned char *)(v2 + 959) = -18;
  *(void *)(v2 + 960) = 0xD000000000000010;
  *(void *)(v2 + 968) = 0x800000025295A9D0;
  *(void *)(v2 + 976) = 0xD000000000000012;
  *(void *)(v2 + 984) = 0x800000025295A9F0;
  strcpy((char *)(v2 + 992), "lefthandthumb1");
  *(unsigned char *)(v2 + 1007) = -18;
  strcpy((char *)(v2 + 1008), "lefthandthumb2");
  *(unsigned char *)(v2 + 1023) = -18;
  *(void *)(v2 + 1024) = 0xD000000000000010;
  *(void *)(v2 + 1032) = 0x800000025295AA10;
  strcpy((char *)(v2 + 1040), "rightshoulder1");
  *(unsigned char *)(v2 + 1055) = -18;
  *(void *)(v2 + 1056) = 0x6D72617468676972;
  *(void *)(v2 + 1064) = 0xE800000000000000;
  strcpy((char *)(v2 + 1072), "rightforearm");
  *(unsigned char *)(v2 + 1085) = 0;
  *(_WORD *)(v2 + 1086) = -5120;
  *(void *)(v2 + 1088) = 0x6E61687468676972;
  *(void *)(v2 + 1096) = 0xE900000000000064;
  *(void *)(v2 + 1104) = 0xD000000000000013;
  *(void *)(v2 + 1112) = 0x800000025295AA30;
  *(void *)(v2 + 1120) = 0x6E61687468676972;
  *(void *)(v2 + 1128) = 0xEF31796B6E697064;
  *(void *)(v2 + 1136) = 0x6E61687468676972;
  *(void *)(v2 + 1144) = 0xEF32796B6E697064;
  *(void *)(v2 + 1152) = 0x6E61687468676972;
  *(void *)(v2 + 1160) = 0xEF33796B6E697064;
  *(void *)(v2 + 1168) = 0xD000000000000011;
  *(void *)(v2 + 1176) = 0x800000025295AA50;
  *(void *)(v2 + 1184) = 0xD000000000000012;
  *(void *)(v2 + 1192) = 0x800000025295AA70;
  strcpy((char *)(v2 + 1200), "righthandring1");
  *(unsigned char *)(v2 + 1215) = -18;
  strcpy((char *)(v2 + 1216), "righthandring2");
  *(unsigned char *)(v2 + 1231) = -18;
  strcpy((char *)(v2 + 1232), "righthandring3");
  *(unsigned char *)(v2 + 1247) = -18;
  *(void *)(v2 + 1248) = 0xD000000000000010;
  *(void *)(v2 + 1256) = 0x800000025295AA90;
  *(void *)(v2 + 1264) = 0xD000000000000011;
  *(void *)(v2 + 1272) = 0x800000025295AAB0;
  strcpy((char *)(v2 + 1280), "righthandmid1");
  *(_WORD *)(v2 + 1294) = -4864;
  strcpy((char *)(v2 + 1296), "righthandmid2");
  *(_WORD *)(v2 + 1310) = -4864;
  strcpy((char *)(v2 + 1312), "righthandmid3");
  *(_WORD *)(v2 + 1326) = -4864;
  *(void *)(v2 + 1328) = 0x6E61687468676972;
  *(void *)(v2 + 1336) = 0xEF646E6564696D64;
  *(void *)(v2 + 1344) = 0xD000000000000013;
  *(void *)(v2 + 1352) = 0x800000025295AAD0;
  *(void *)(v2 + 1360) = 0x6E61687468676972;
  *(void *)(v2 + 1368) = 0xEF317865646E6964;
  *(void *)(v2 + 1376) = 0x6E61687468676972;
  *(void *)(v2 + 1384) = 0xEF327865646E6964;
  *(void *)(v2 + 1392) = 0x6E61687468676972;
  *(void *)(v2 + 1400) = 0xEF337865646E6964;
  *(void *)(v2 + 1408) = 0xD000000000000011;
  *(void *)(v2 + 1416) = 0x800000025295AAF0;
  *(void *)(v2 + 1424) = 0xD000000000000013;
  *(void *)(v2 + 1432) = 0x800000025295AB10;
  *(void *)(v2 + 1440) = 0x6E61687468676972;
  *(void *)(v2 + 1448) = 0xEF31626D75687464;
  *(void *)(v2 + 1456) = 0x6E61687468676972;
  *(void *)(v2 + 1464) = 0xEF32626D75687464;
  *(void *)(v2 + 1472) = 0xD000000000000011;
  *(void *)(v2 + 1480) = 0x800000025295AB30;
  uint64_t v3 = ((uint64_t (*)(void))nullsub_1)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_252918DE4(v4, 91);
  *(_OWORD *)uint64_t v6 = xmmword_252953CA0;
  *(_OWORD *)(v6 + 16) = xmmword_252953740;
  *(_OWORD *)(v6 + 32) = xmmword_252953CB0;
  *(_OWORD *)(v6 + 48) = xmmword_252953CC0;
  *(_OWORD *)(v6 + 64) = xmmword_252953CD0;
  *(_OWORD *)(v6 + 80) = xmmword_252953CE0;
  *(_OWORD *)(v6 + 96) = xmmword_252953CF0;
  *(_OWORD *)(v6 + 112) = xmmword_252953D00;
  *(_OWORD *)(v6 + 128) = xmmword_252953D10;
  *(_OWORD *)(v6 + 144) = xmmword_252953D20;
  *(_OWORD *)(v6 + 160) = xmmword_252953D30;
  *(_OWORD *)(v6 + 176) = xmmword_252953D40;
  *(int64x2_t *)(v6 + 192) = vdupq_n_s64(0x17uLL);
  *(_OWORD *)(v6 + 208) = xmmword_252953D50;
  *(int64x2_t *)(v6 + 224) = vdupq_n_s64(0x1BuLL);
  *(_OWORD *)(v6 + 240) = xmmword_252953D60;
  *(int64x2_t *)(v6 + 256) = vdupq_n_s64(0x1FuLL);
  *(_OWORD *)(v6 + 272) = xmmword_252953D70;
  *(_OWORD *)(v6 + 288) = xmmword_252953D80;
  *(_OWORD *)(v6 + 304) = xmmword_252953D90;
  *(_OWORD *)(v6 + 320) = xmmword_252953DA0;
  *(_OWORD *)(v6 + 336) = xmmword_252953DB0;
  *(_OWORD *)(v6 + 352) = xmmword_252953DC0;
  *(_OWORD *)(v6 + 368) = xmmword_252953DD0;
  *(_OWORD *)(v6 + 384) = xmmword_252953DE0;
  *(_OWORD *)(v6 + 400) = xmmword_252953DF0;
  *(_OWORD *)(v6 + 416) = xmmword_252953E00;
  *(_OWORD *)(v6 + 432) = xmmword_252953E10;
  *(_OWORD *)(v6 + 448) = xmmword_252953E20;
  *(_OWORD *)(v6 + 464) = xmmword_252953E30;
  *(_OWORD *)(v6 + 480) = xmmword_252953E40;
  *(_OWORD *)(v6 + 496) = xmmword_252953E50;
  *(_OWORD *)(v6 + 512) = xmmword_252953E60;
  *(_OWORD *)(v6 + 528) = xmmword_252953E70;
  *(_OWORD *)(v6 + 544) = xmmword_252953E80;
  *(_OWORD *)(v6 + 560) = xmmword_252953E90;
  *(_OWORD *)(v6 + 576) = xmmword_252953EA0;
  *(_OWORD *)(v6 + 592) = xmmword_252953EB0;
  *(_OWORD *)(v6 + 608) = xmmword_252953EC0;
  *(_OWORD *)(v6 + 624) = xmmword_252953ED0;
  *(_OWORD *)(v6 + 640) = xmmword_252953EE0;
  *(_OWORD *)(v6 + 656) = xmmword_252953EF0;
  *(_OWORD *)(v6 + 672) = xmmword_252953F00;
  *(_OWORD *)(v6 + 688) = xmmword_252953F10;
  *(_OWORD *)(v6 + 704) = xmmword_252953F20;
  *(void *)(v6 + 720) = 89;
  uint64_t v7 = nullsub_1(v5);
  *(void *)&double result = 10;
  *(_OWORD *)a1 = xmmword_252953F30;
  *(void *)(a1 + 16) = 91;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v7;
  return result;
}

uint64_t *sub_2528B8F88(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BodyMeshGenerator.InternalBundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = (uint64_t *)sub_252951268();
  uint64_t v7 = *(v6 - 1);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  float32x4_t v42 = (char *)&v39 - v9;
  uint64_t v10 = (void *)sub_252951AB8();
  uint64_t v11 = (void *)sub_252951AB8();
  id v43 = v5;
  id v12 = objc_msgSend(v5, sel_URLForResource_withExtension_, v10, v11);

  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v44 = (uint64_t)&v39;
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v7 + 56))(v16, 1, 1, v6);
    goto LABEL_6;
  }
  uint64_t v47 = v6;
  uint64_t v6 = &v39;
  MEMORY[0x270FA5388](v14);
  sub_252951238();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t *))(v7 + 32);
  v17(v16, (char *)&v39 - v9, v47);
  (*(void (**)(char *, void, uint64_t, uint64_t *))(v7 + 56))(v16, 0, 1, v47);
  uint64_t v18 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t *))(v7 + 48))(v16, 1, v47) == 1)
  {
LABEL_6:
    sub_2528B8494((uint64_t)v16, qword_269C32880);
    sub_2528AB988();
    swift_allocError();
    void *v22 = 0xD00000000000001ELL;
    v22[1] = 0x800000025295A7A0;
    swift_willThrow();
    goto LABEL_7;
  }
  uint64_t v6 = (uint64_t *)v42;
  v17(v42, v16, v18);
  uint64_t v19 = v41;
  uint64_t v20 = sub_252951278();
  if (!v19)
  {
    int64_t v24 = v21;
    uint64_t v25 = v20;
    unint64_t v26 = 0;
    switch(v21 >> 62)
    {
      case 1uLL:
        LODWORD(v27) = HIDWORD(v25) - v25;
        if (__OFSUB__(HIDWORD(v25), v25)) {
          goto LABEL_50;
        }
        int v28 = v27 + 3;
        if ((int)v27 >= 0) {
          int v28 = HIDWORD(v25) - v25;
        }
        unint64_t v26 = (uint64_t)v28 >> 2;
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v25 + 16);
        uint64_t v29 = *(void *)(v25 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v27 = v29 - v30;
        if (v31) {
          goto LABEL_51;
        }
        unint64_t v26 = v27 / 4;
        break;
      case 3uLL:
        goto LABEL_18;
      default:
        LOBYTE(v27) = BYTE6(v21);
        unint64_t v26 = BYTE6(v21) >> 2;
        break;
    }
    if ((v27 & 3) == 0)
    {
LABEL_18:
      uint64_t v44 = v26;
      uint64_t v32 = sub_2528EC14C(v26, 0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_46;
      }
      while (1)
      {
        uint64_t v41 = v25;
        if (*(void *)(v32 + 16) >> 61) {
          break;
        }
        uint64_t v25 = v32;
        uint64_t v33 = v32 + 32;
        uint64_t v45 = v41;
        int64_t v46 = v24;
        sub_2528BA6F8();
        sub_252951128();
        uint64_t v34 = sub_2528EC14C(v44, 0);
        if (a2 < 0) {
          goto LABEL_48;
        }
        uint64_t v6 = (uint64_t *)v34;
        unint64_t v40 = v24;
        if (!a2)
        {
LABEL_38:
          (*(void (**)(char *, uint64_t *))(v7 + 8))(v42, v47);
          sub_2528B3A64(v41, v40);
          swift_bridgeObjectRelease();

          return v6;
        }
        if (a1 < 0) {
          goto LABEL_49;
        }
        uint64_t v32 = 0;
        int64_t v24 = 0;
        uint64_t v44 = 4 * a1;
        while (v24 != a2)
        {
          if (a1)
          {
            if ((unsigned __int128)(v24 * (__int128)a1) >> 64 != (v24 * a1) >> 63) {
              goto LABEL_45;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v6 = (uint64_t *)sub_252939C74((uint64_t)v6);
            }
            uint64_t v35 = 0;
            unint64_t v36 = *(void *)(v25 + 16);
            while (1)
            {
              uint64_t v37 = v35 * a2;
              if ((unsigned __int128)(v35 * (__int128)a2) >> 64 != (v35 * a2) >> 63) {
                break;
              }
              BOOL v31 = __OFADD__(v37, v24);
              unint64_t v38 = v37 + v24;
              if (v31) {
                goto LABEL_40;
              }
              if (v32 + v35 >= v36) {
                goto LABEL_41;
              }
              if ((v38 & 0x8000000000000000) != 0) {
                goto LABEL_42;
              }
              if (v38 >= v6[2]) {
                goto LABEL_43;
              }
              *((_DWORD *)v6 + v38 + 8) = *(_DWORD *)(v33 + 4 * v35++);
              if (a1 == v35) {
                goto LABEL_24;
              }
            }
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            break;
          }
LABEL_24:
          ++v24;
          v33 += v44;
          v32 += a1;
          if (v24 == a2) {
            goto LABEL_38;
          }
        }
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        uint64_t v32 = (uint64_t)sub_252939C74(v32);
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
    }
    sub_252951F28();
    __break(1u);
    JUMPOUT(0x2528B9568);
  }
  (*(void (**)(uint64_t *, uint64_t *))(v7 + 8))(v6, v18);
LABEL_7:

  return v6;
}

uint64_t sub_2528B9578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_2528B8F88(a2, a3);
  if (v3) {
    return (uint64_t)v4;
  }
  uint64_t v62 = a3;
  uint64_t v9 = a1;
  int64_t v10 = a2 * a1;
  uint64_t v66 = v9;
  if ((unsigned __int128)(a2 * (__int128)v9) >> 64 == v10 >> 63)
  {
    uint64_t v11 = (uint64_t)v8;
    uint64_t v63 = a2;
    uint64_t v12 = sub_2528EC14C(v10, 0);
    uint64_t v13 = sub_2528EC240(0, v10);
    uint64_t v14 = a2;
    if (a2 < 0) {
      goto LABEL_94;
    }
    uint64_t v4 = (char *)v13;
    if (a2)
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v60 = v11 + 32;
      uint64_t v69 = 32;
      uint64_t v68 = 32;
      uint64_t v61 = v11;
      uint64_t v17 = a3;
      while (v16 != v14)
      {
        uint64_t v18 = v16 * v17;
        uint64_t v64 = v16;
        if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63) {
          goto LABEL_85;
        }
        uint64_t v19 = v18 + v17;
        if (__OFADD__(v18, v17)) {
          goto LABEL_86;
        }
        uint64_t v20 = v17;
        if (v19 < v18) {
          goto LABEL_87;
        }
        if (v18 < 0) {
          goto LABEL_88;
        }
        unint64_t v21 = *(void *)(v11 + 16);
        if (v21 < v18 || (uint64_t)v21 < v19) {
          goto LABEL_89;
        }
        uint64_t v67 = v15;
        sub_252952118();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v22 = swift_dynamicCastClass();
        if (!v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = MEMORY[0x263F8EE78];
        }
        uint64_t v23 = *(void *)(v22 + 16);
        swift_release();
        if (v23 == v20)
        {
          uint64_t v24 = swift_dynamicCastClass();
          if (!v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v24 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_2528A9398(v11, v60, v18, (2 * v19) | 1);
        }
        swift_bridgeObjectRelease();
        uint64_t v70 = MEMORY[0x263F8EE78];
        sub_252922EE8(0, 0, 0);
        uint64_t v25 = v70;
        uint64_t v26 = *(void *)(v24 + 16);
        if (v26)
        {
          uint64_t v27 = v24 + 32;
          uint64_t v28 = *(void *)(v70 + 16);
          swift_retain();
          uint64_t v29 = 0;
          uint64_t v30 = 16 * v28;
          do
          {
            int v31 = *(_DWORD *)(v27 + 4 * v29);
            uint64_t v70 = v25;
            unint64_t v32 = *(void *)(v25 + 24);
            if (v28 + v29 >= v32 >> 1)
            {
              sub_252922EE8(v32 > 1, v28 + v29 + 1, 1);
              uint64_t v25 = v70;
            }
            *(void *)(v25 + 16) = v28 + v29 + 1;
            uint64_t v33 = v25 + v30;
            *(void *)(v33 + 32) = v29;
            *(_DWORD *)(v33 + 40) = v31;
            v30 += 16;
            ++v29;
          }
          while (v26 != v29);
          swift_release();
        }
        swift_release();
        uint64_t v70 = v25;
        swift_bridgeObjectRetain();
        sub_2528B6EF0(&v70);
        swift_release();
        uint64_t v34 = v66;
        if (v66 < 0) {
          goto LABEL_90;
        }
        uint64_t v35 = v70;
        if (v66)
        {
          unint64_t v36 = *(void *)(v70 + 16);
          int64_t v37 = v66;
          if (v36 < v66)
          {
            int64_t v37 = *(void *)(v70 + 16);
            if (!v36) {
              goto LABEL_33;
            }
          }
          float v38 = 0.0;
          uint64_t v39 = 40;
          int64_t v40 = v37;
          do
          {
            float v38 = v38 + *(float *)(v70 + v39);
            v39 += 16;
            --v40;
          }
          while (v40);
          if (v38 != 0.0)
          {
            uint64_t v70 = MEMORY[0x263F8EE78];
            sub_252922EC8(0, v37, 0);
            uint64_t v46 = 0;
            uint64_t v47 = v70;
            uint64_t v48 = v37 & ~(v37 >> 63);
            uint64_t v49 = 40;
            int64_t v65 = v37;
            while (v48 != v46)
            {
              float v50 = *(float *)(v35 + v49);
              uint64_t v70 = v47;
              unint64_t v52 = *(void *)(v47 + 16);
              unint64_t v51 = *(void *)(v47 + 24);
              if (v52 >= v51 >> 1)
              {
                sub_252922EC8(v51 > 1, v52 + 1, 1);
                int64_t v37 = v65;
                uint64_t v47 = v70;
              }
              *(void *)(v47 + 16) = v52 + 1;
              *(float *)(v47 + 4 * v52 + 32) = v50 / v38;
              ++v46;
              v49 += 16;
              if (v37 == v46)
              {
                if ((unsigned __int128)(v64 * (__int128)v66) >> 64 != (v64 * v66) >> 63) {
                  goto LABEL_92;
                }
                swift_retain();
                unint64_t v53 = 0;
                uint64_t v54 = 32;
                while (v48 != v53)
                {
                  if (v53 >= *(void *)(v47 + 16)) {
                    goto LABEL_80;
                  }
                  unint64_t v55 = *(void *)(v35 + v54);
                  int v56 = *(_DWORD *)(v47 + 32 + 4 * v53);
                  if (swift_isUniquelyReferenced_nonNull_native())
                  {
                    uint64_t v57 = v67;
                    if (v67 < 0) {
                      goto LABEL_81;
                    }
                  }
                  else
                  {
                    uint64_t v12 = (uint64_t)sub_252939C74(v12);
                    uint64_t v57 = v67;
                    if (v67 < 0) {
                      goto LABEL_81;
                    }
                  }
                  unint64_t v58 = v57 + v53;
                  if (v57 + v53 >= *(void *)(v12 + 16)) {
                    goto LABEL_82;
                  }
                  *(_DWORD *)(v12 + v69 + 4 * v53) = v56;
                  if ((v55 & 0x8000000000000000) != 0 || v55 >= 0x10000) {
                    goto LABEL_95;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v4 = sub_252939C88((uint64_t)v4);
                  }
                  if (v58 >= *((void *)v4 + 2)) {
                    goto LABEL_83;
                  }
                  *(_WORD *)&v4[2 * v53 + v68] = v55;
                  v54 += 16;
                  if (v65 == ++v53)
                  {
                    swift_release();
                    swift_release_n();
LABEL_70:
                    uint64_t v34 = v66;
                    goto LABEL_7;
                  }
                }
                goto LABEL_79;
              }
            }
          }
          else
          {
LABEL_33:
            if ((unsigned __int128)(v64 * (__int128)v66) >> 64 != (v64 * v66) >> 63) {
              goto LABEL_91;
            }
            int64_t v41 = 0;
            uint64_t v42 = 32;
            while ((v66 & ~(v66 >> 63)) != v41)
            {
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                uint64_t v43 = v67;
                if (v67 < 0) {
                  goto LABEL_75;
                }
              }
              else
              {
                uint64_t v12 = (uint64_t)sub_252939C74(v12);
                uint64_t v43 = v67;
                if (v67 < 0) {
                  goto LABEL_75;
                }
              }
              unint64_t v44 = v43 + v41;
              if ((unint64_t)(v43 + v41) >= *(void *)(v12 + 16)) {
                goto LABEL_76;
              }
              LOWORD(v45) = 0;
              *(_DWORD *)(v12 + v69 + 4 * v41) = 0;
              if (v41 < v37)
              {
                unint64_t v45 = *(void *)(v35 + v42);
                if ((v45 & 0x8000000000000000) != 0 || v45 >= 0x10000) {
                  goto LABEL_95;
                }
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v4 = sub_252939C88((uint64_t)v4);
              }
              if (v44 >= *((void *)v4 + 2)) {
                goto LABEL_77;
              }
              *(_WORD *)&v4[2 * v41 + v68] = v45;
              v42 += 16;
              if (v66 == ++v41)
              {
                swift_release();
                goto LABEL_70;
              }
            }
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
          }
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
          break;
        }
        swift_release();
LABEL_7:
        uint64_t v16 = v64 + 1;
        uint64_t v15 = v67 + v34;
        v68 += 2 * v66;
        v69 += 4 * v66;
        uint64_t v17 = v62;
        uint64_t v14 = v63;
        uint64_t v11 = v61;
        if (v64 + 1 == v63) {
          goto LABEL_72;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
LABEL_72:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  sub_252951F18();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t *sub_2528B9C90()
{
  type metadata accessor for BodyMeshGenerator.InternalBundleHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_252951268();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v36 = (char *)&v32 - v5;
  uint64_t v6 = (void *)sub_252951AB8();
  uint64_t v7 = (void *)sub_252951AB8();
  id v8 = objc_msgSend(v1, sel_URLForResource_withExtension_, v6, v7);

  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  int64_t v10 = &v32;
  uint64_t v11 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v13, 1, 1, v2);
    goto LABEL_6;
  }
  MEMORY[0x270FA5388](v11);
  sub_252951238();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v13, (char *)&v32 - v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
  {
LABEL_6:
    sub_2528B8494((uint64_t)v13, qword_269C32880);
    goto LABEL_7;
  }
  uint64_t v15 = v36;
  v14(v36, v13, v2);
  uint64_t v16 = (void *)v33;
  uint64_t v17 = sub_252951278();
  if (v16)
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v2);
LABEL_7:
    sub_2528AB988();
    swift_allocError();
    *uint64_t v19 = 0xD000000000000030;
    v19[1] = 0x800000025295A840;
    swift_willThrow();

    return v10;
  }
  unint64_t v21 = v18;
  uint64_t v22 = v17;
  unint64_t v23 = 0;
  switch(v18 >> 62)
  {
    case 1uLL:
      int v25 = HIDWORD(v22) - v22;
      if (__OFSUB__(HIDWORD(v22), v22)) {
        goto LABEL_24;
      }
      int v26 = v25 + 3;
      if (v25 >= 0) {
        int v26 = HIDWORD(v22) - v22;
      }
      unint64_t v23 = (uint64_t)v26 >> 2;
      if ((v25 & 3) == 0) {
        goto LABEL_19;
      }
      goto LABEL_11;
    case 2uLL:
      uint64_t v28 = *(void *)(v22 + 16);
      uint64_t v27 = *(void *)(v22 + 24);
      BOOL v29 = __OFSUB__(v27, v28);
      uint64_t v30 = v27 - v28;
      if (v29) {
        goto LABEL_25;
      }
      unint64_t v23 = v30 / 4;
      if ((v30 & 3) != 0)
      {
LABEL_11:
        sub_2528AB988();
        swift_allocError();
        *uint64_t v24 = 0xD000000000000040;
        v24[1] = 0x800000025295A880;
        swift_willThrow();
        sub_2528B3A64(v22, v21);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v2);
      }
      else
      {
LABEL_19:
        int64_t v10 = (uint64_t *)sub_2528EC14C(v23, 0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v10 = (uint64_t *)sub_252939C74((uint64_t)v10);
        }
        unint64_t v31 = v10[2];
        if (v31 >> 61)
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          JUMPOUT(0x2528BA170);
        }
        uint64_t v33 = (uint64_t)v10 + 4 * v31 + 32;
        uint64_t v34 = v22;
        unint64_t v35 = v21;
        sub_2528BA6F8();
        sub_252951128();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
        sub_2528B3A64(v22, v21);
      }
      break;
    case 3uLL:
      goto LABEL_19;
    default:
      unint64_t v23 = BYTE6(v18) >> 2;
      if ((v18 & 0x3000000000000) != 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
  }
  return v10;
}

uint64_t sub_2528BA180(void *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v10 = a3;
  id v11 = (id)sub_2528B78DC(a2, (uint64_t)v10);

  uint64_t result = sub_2528B9578(4, a4, a5);
  if (v5)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  uint64_t v39 = a1;
  unint64_t v14 = *(void *)(v13 + 16);
  if (v14 >> 61)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = result;
    uint64_t result = sub_2528F56E0((unsigned char *)(v13 + 32), 4 * v14);
    uint64_t v17 = *(void *)(v15 + 16);
    if (v17 + 0x4000000000000000 >= 0)
    {
      uint64_t v18 = result;
      unint64_t v19 = v16;
      uint64_t v20 = sub_2528F56E0((unsigned char *)(v15 + 32), 2 * v17);
      unint64_t v36 = v21;
      id v38 = v10;
      uint64_t v22 = (void *)*MEMORY[0x263F16B28];
      sub_2528B6E98(v18, v19);
      id v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v37 = v18;
      uint64_t v24 = (void *)sub_2529512B8();
      int v25 = self;
      id v26 = objc_msgSend(v25, sel_geometrySourceWithData_semantic_vectorCount_floatComponents_componentsPerVector_bytesPerComponent_dataOffset_dataStride_, v24, v23, v14, 1, 4, 4, 0, 16);

      sub_2528B3A64(v18, v19);
      uint64_t v27 = (void *)*MEMORY[0x263F16B20];
      sub_2528B6E98(v20, v36);
      id v28 = v27;
      swift_bridgeObjectRelease();
      BOOL v29 = (void *)sub_2529512B8();
      id v30 = objc_msgSend(v25, sel_geometrySourceWithData_semantic_vectorCount_floatComponents_componentsPerVector_bytesPerComponent_dataOffset_dataStride_, v29, v28, v17, 0, 4, 2, 0, 8);

      sub_2528B3A64(v20, v36);
      sub_2528BA6BC(0, &qword_269C31DD0);
      swift_bridgeObjectRetain();
      id v31 = v26;
      id v32 = v30;
      id v33 = v39;
      uint64_t v34 = (void *)sub_252951B88();
      swift_bridgeObjectRelease();
      sub_2528BA6BC(0, &qword_269C31DD8);
      unint64_t v35 = (void *)sub_252951B88();
      swift_bridgeObjectRelease();
      id v11 = objc_msgSend(self, sel_skinnerWithBaseGeometry_bones_boneInverseBindTransforms_boneWeights_boneIndices_, v33, v34, v35, v31, v32);

      objc_msgSend(v11, sel_setSkeleton_, v38);
      sub_2528B3A64(v20, v36);
      sub_2528B3A64(v37, v19);
      return (uint64_t)v11;
    }
  }
  __break(1u);
  return result;
}

id sub_2528BA4C8(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16AD0]), sel_init);
  id v12 = objc_msgSend(v11, sel_rootNode);
  objc_msgSend(v12, sel_addChildNode_, a2);

  id v13 = objc_msgSend(self, sel_nodeWithGeometry_, a1);
  uint64_t v14 = sub_2528BA180(a1, a3, a2, a4, a5);
  if (v5)
  {
    id v15 = v11;
  }
  else
  {
    unint64_t v16 = (void *)v14;
    objc_msgSend(v13, sel_setSkinner_, v14);

    id v17 = objc_msgSend(v11, sel_rootNode);
    objc_msgSend(v17, sel_addChildNode_, v13);

    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A78]), sel_init);
    objc_msgSend(v15, sel_setType_, *MEMORY[0x263F16B78]);
    objc_msgSend(v15, sel_setCastsShadow_, 1);
    id v18 = objc_msgSend(v11, sel_rootNode);
    objc_msgSend(v18, sel_setLight_, v15);

    id v19 = objc_msgSend(v11, sel_rootNode);
    LODWORD(v20) = 10.0;
    objc_msgSend(v19, sel_setPosition_, 0.0, 0.0, v20);

    id v13 = v19;
  }

  return v11;
}

uint64_t sub_2528BA6BC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2528BA6F8()
{
  unint64_t result = qword_269C31DE8;
  if (!qword_269C31DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C31DE8);
  }
  return result;
}

uint64_t sub_2528BA740(uint64_t a1)
{
  return a1;
}

double simd_quaternion(simd_float3x3 a1)
{
  float v1 = a1.columns[2].f32[2] + (float)(a1.columns[0].f32[0] + a1.columns[1].f32[1]);
  if (v1 >= 0.0)
  {
    float v8 = sqrtf(v1 + 1.0);
    float32x2_t v9 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(v8 + v8));
    float32x2_t v10 = vmul_f32(v9, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v8 + v8), v9));
    float32x2_t v20 = vmul_n_f32(vsub_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL), *(int32x2_t *)a1.columns[2].f32), (float32x2_t)vext_s8(*(int8x8_t *)a1.columns[2].f32, (int8x8_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), 4uLL)), vmul_f32(v10, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v8 + v8), v10)).f32[0]);
  }
  else if (a1.columns[0].f32[0] < a1.columns[1].f32[1] || a1.columns[0].f32[0] < a1.columns[2].f32[2])
  {
    float v3 = 1.0 - a1.columns[0].f32[0];
    if (a1.columns[1].f32[1] >= a1.columns[2].f32[2])
    {
      float v21 = sqrtf(a1.columns[1].f32[1] + (float)(v3 - a1.columns[2].f32[2]));
      *(float *)&unsigned int v22 = v21 + v21;
      float32x2_t v23 = vrecpe_f32((float32x2_t)v22);
      float32x2_t v24 = vmul_f32(v23, vrecps_f32((float32x2_t)v22, v23));
      v25.i32[0] = vmul_f32(v24, vrecps_f32((float32x2_t)v22, v24)).u32[0];
      v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_lane_s32(*(int32x2_t *)a1.columns[0].f32, 1), *(float32x2_t *)a1.columns[1].f32).u32[0];
      v24.i32[1] = v22;
      v25.i32[1] = 0.25;
      float32x2_t v20 = vmul_f32(v24, v25);
    }
    else
    {
      float32x2_t v4 = (float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[2].f32[2] + (float)(v3 - a1.columns[1].f32[1]))));
      *(float32x2_t *)a1.columns[2].f32 = vadd_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL)), *(float32x2_t *)a1.columns[2].f32);
      *(int32x2_t *)a1.columns[1].f32 = vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
      a1.columns[1].i32[0] = 2.0;
      a1.columns[1].i32[0] = vmul_f32(v4, *(float32x2_t *)a1.columns[1].f32).u32[0];
      float32x2_t v5 = vrecpe_f32((float32x2_t)a1.columns[1].u32[0]);
      float32x2_t v6 = vmul_f32(v5, vrecps_f32((float32x2_t)a1.columns[1].u32[0], v5));
      float32x2_t v20 = vmul_n_f32(*(float32x2_t *)a1.columns[2].f32, vmul_f32(v6, vrecps_f32((float32x2_t)a1.columns[1].u32[0], v6)).f32[0]);
      __asm { FMOV            V2.2S, #0.25 }
    }
  }
  else
  {
    float32x2_t v11 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
    float32x2_t v12 = vadd_f32(*(float32x2_t *)a1.columns[0].f32, v11);
    v11.i32[0] = 2.0;
    v11.i32[0] = vmul_f32((float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[0].f32[0]+ (float)((float)(1.0 - a1.columns[1].f32[1]) - a1.columns[2].f32[2])))), v11).u32[0];
    v11.i32[1] = v12.i32[1];
    float32x2_t v13 = vrecpe_f32((float32x2_t)v11.u32[0]);
    float32x2_t v14 = vmul_f32(v13, vrecps_f32((float32x2_t)v11.u32[0], v13));
    unsigned __int32 v15 = vmul_f32(v14, vrecps_f32((float32x2_t)v11.u32[0], v14)).u32[0];
    __asm { FMOV            V5.2S, #0.25 }
    _D5.i32[1] = v15;
    float32x2_t v20 = vmul_f32(v11, _D5);
  }
  return *(double *)&v20;
}

unint64_t BoundingBoxError.errorDescription.getter()
{
  unint64_t result = 0xD000000000000036;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000033;
      break;
    case 2:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000039;
      break;
    case 4:
      unint64_t result = 0xD000000000000038;
      break;
    case 6:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000003ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t BoundingBoxError.debugDescription.getter()
{
  unint64_t result = 0xD000000000000036;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000033;
      break;
    case 2:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000039;
      break;
    case 4:
      unint64_t result = 0xD000000000000038;
      break;
    case 6:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000003ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t BoundingBoxError.hash(into:)()
{
  return sub_2529521A8();
}

BOOL static BoundingBoxError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BoundingBoxError.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t _s5Human12CameraSourceV0B13ConfigurationV8PositionO9hashValueSivg_0()
{
  return sub_2529521C8();
}

uint64_t sub_2528BABE0()
{
  return sub_2529521A8();
}

uint64_t sub_2528BAC0C()
{
  return sub_2529521C8();
}

unint64_t sub_2528BAC54()
{
  unint64_t result = qword_269C31DF8;
  if (!qword_269C31DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31DF8);
  }
  return result;
}

unint64_t sub_2528BACAC()
{
  unint64_t result = qword_269C31E00;
  if (!qword_269C31E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31E00);
  }
  return result;
}

BOOL sub_2528BAD04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BoundingBoxError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BoundingBoxError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528BAE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_2528BAEAC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2528BAEB4(unsigned char *result, char a2)
{
  void *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BoundingBoxError()
{
  return &type metadata for BoundingBoxError;
}

uint64_t VideoAdaptor.Result.timestamp.getter()
{
  return *(void *)v0;
}

id VideoAdaptor.Result.imageBuffer.getter@<X0>(void *a1@<X8>)
{
  int v2 = *(void **)(v1 + 8);
  *a1 = v2;
  return v2;
}

uint64_t VideoAdaptor.Result.boundingBoxes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s6ResultVwxx(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

void *_s6ResultVwCP_0(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s6ResultVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdaptor.Result()
{
  return &type metadata for VideoAdaptor.Result;
}

unint64_t sub_2528BB0C0(int64_t a1, int64_t a2, int64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_2528BB27C(a1, a2, a3, a4, a5);
  if (!v5)
  {
    if (sub_252951898() == 3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_252953970;
      *(_OWORD *)(v11 + 32) = 0u;
      *(_OWORD *)(v11 + 48) = 0u;
      *(void *)(v11 + 64) = 0;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E10);
      *(void *)(v11 + 96) = v12;
      unint64_t result = sub_2528BB89C();
      *(void *)(v11 + 104) = result;
      if (a3 < a1)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v11 + 72) = a1;
        *(void *)(v11 + 80) = a3;
        *(void *)(v11 + 136) = v12;
        *(void *)(v11 + 144) = result;
        if (a4 >= a2)
        {
          *(void *)(v11 + 112) = a2;
          *(void *)(v11 + 120) = a4;
LABEL_10:
          sub_252951A58();
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
      goto LABEL_15;
    }
    if (sub_252951898() == 4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_252953B10;
      *(_OWORD *)(v13 + 32) = 0u;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 64) = 0u;
      *(_OWORD *)(v13 + 80) = 0u;
      *(_OWORD *)(v13 + 96) = 0u;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E10);
      *(void *)(v13 + 136) = v14;
      unint64_t result = sub_2528BB89C();
      *(void *)(v13 + 144) = result;
      if (a3 >= a1)
      {
        *(void *)(v13 + 112) = a1;
        *(void *)(v13 + 120) = a3;
        *(void *)(v13 + 176) = v14;
        *(void *)(v13 + 184) = result;
        if (a4 >= a2)
        {
          *(void *)(v13 + 152) = a2;
          *(void *)(v13 + 160) = a4;
          goto LABEL_10;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      return result;
    }
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v15 = 1;
    *(void *)(v15 + 8) = 0;
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(unsigned char *)(v15 + 32) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2528BB27C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v61 = a3;
  uint64_t v9 = sub_252951A08();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v60 = (char *)v58 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)v58 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)v58 - v18;
  float32x2_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v64 = a5;
  uint64_t v21 = a5;
  uint64_t v23 = v22;
  uint64_t v62 = v20;
  v20((char *)v58 - v18, v21, v22);
  unint64_t v63 = a1;
  if ((a1 & 0x8000000000000000) != 0)
  {
    BOOL v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v19, v23);
LABEL_25:
    v62(v17, v64, v23);
    goto LABEL_26;
  }
  v58[0] = a4;
  uint64_t v24 = sub_2529518F8();
  uint64_t result = sub_252951898();
  unint64_t v26 = result - 2;
  if (__OFSUB__(result, 2))
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if ((v26 & 0x8000000000000000) != 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v26 >= *(void *)(v24 + 16))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v27 = a2;
  uint64_t v28 = *(void *)(v24 + 8 * v26 + 32);
  swift_bridgeObjectRelease();
  BOOL v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v58[1] = v10 + 8;
  v29(v19, v23);
  if (v28 <= (uint64_t)v63)
  {
    a2 = v27;
    goto LABEL_25;
  }
  v62(v17, v64, v23);
  a2 = v27;
  if (v27 < 0)
  {
LABEL_26:
    v29(v17, v23);
    goto LABEL_27;
  }
  uint64_t v30 = sub_2529518F8();
  uint64_t result = sub_252951898();
  unint64_t v31 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v32 = v64;
  if ((v31 & 0x8000000000000000) != 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v31 >= *(void *)(v30 + 16))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v33 = *(void *)(v30 + 8 * v31 + 32);
  swift_bridgeObjectRelease();
  v29(v17, v23);
  if (v33 <= v27)
  {
LABEL_27:
    uint64_t v48 = sub_2529518F8();
    uint64_t result = sub_252951898();
    unint64_t v49 = result - 2;
    if (__OFSUB__(result, 2))
    {
      __break(1u);
    }
    else if ((v49 & 0x8000000000000000) == 0)
    {
      if (v49 < *(void *)(v48 + 16))
      {
        uint64_t v50 = *(void *)(v48 + 8 * v49 + 32);
        swift_bridgeObjectRelease();
        uint64_t v51 = sub_2529518F8();
        uint64_t result = sub_252951898();
        unint64_t v52 = result - 1;
        if (!__OFSUB__(result, 1))
        {
          if ((v52 & 0x8000000000000000) == 0)
          {
            if (v52 < *(void *)(v51 + 16))
            {
              uint64_t v53 = *(void *)(v51 + 8 * v52 + 32);
              swift_bridgeObjectRelease();
              sub_2528AE4D0();
              swift_allocError();
              *(void *)uint64_t v46 = v63;
              *(void *)(v46 + 8) = a2;
LABEL_34:
              *(void *)(v46 + 16) = v50;
              *(void *)(v46 + 24) = v53;
              char v47 = 1;
              goto LABEL_35;
            }
            goto LABEL_54;
          }
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v34 = v60;
  v62(v60, v32, v23);
  uint64_t v35 = v61;
  if ((v61 & 0x8000000000000000) != 0)
  {
    v29(v34, v23);
LABEL_38:
    uint64_t v39 = v59;
    v62(v59, v32, v23);
    goto LABEL_39;
  }
  uint64_t v36 = sub_2529518F8();
  uint64_t result = sub_252951898();
  unint64_t v37 = result - 2;
  if (__OFSUB__(result, 2))
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if ((v37 & 0x8000000000000000) != 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v37 >= *(void *)(v36 + 16))
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v38 = *(void *)(v36 + 8 * v37 + 32);
  swift_bridgeObjectRelease();
  v29(v60, v23);
  if (v38 <= v35) {
    goto LABEL_38;
  }
  uint64_t v39 = v59;
  v62(v59, v32, v23);
  if ((v58[0] & 0x8000000000000000) != 0)
  {
LABEL_39:
    v29(v39, v23);
    uint64_t v43 = v58[0];
    goto LABEL_40;
  }
  uint64_t v40 = sub_2529518F8();
  uint64_t result = sub_252951898();
  unint64_t v41 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if ((v41 & 0x8000000000000000) != 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v41 >= *(void *)(v40 + 16))
  {
LABEL_72:
    __break(1u);
    return result;
  }
  uint64_t v42 = *(void *)(v40 + 8 * v41 + 32);
  swift_bridgeObjectRelease();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v39, v23);
  uint64_t v43 = v58[0];
  if (v42 <= v58[0])
  {
LABEL_40:
    uint64_t v54 = sub_2529518F8();
    uint64_t result = sub_252951898();
    unint64_t v55 = result - 2;
    if (!__OFSUB__(result, 2))
    {
      if ((v55 & 0x8000000000000000) == 0)
      {
        if (v55 < *(void *)(v54 + 16))
        {
          uint64_t v50 = *(void *)(v54 + 8 * v55 + 32);
          swift_bridgeObjectRelease();
          uint64_t v56 = sub_2529518F8();
          uint64_t result = sub_252951898();
          unint64_t v57 = result - 1;
          if (!__OFSUB__(result, 1))
          {
            if ((v57 & 0x8000000000000000) == 0)
            {
              if (v57 < *(void *)(v56 + 16))
              {
                uint64_t v53 = *(void *)(v56 + 8 * v57 + 32);
                swift_bridgeObjectRelease();
                sub_2528AE4D0();
                swift_allocError();
                *(void *)uint64_t v46 = v61;
                *(void *)(v46 + 8) = v43;
                goto LABEL_34;
              }
              goto LABEL_66;
            }
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  unint64_t v44 = v63;
  unint64_t v45 = v61;
  if (v61 < v63)
  {
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v46 = v44;
    *(void *)(v46 + 8) = v45;
    *(void *)(v46 + 16) = 0;
    *(void *)(v46 + 24) = 0;
    char v47 = 2;
LABEL_35:
    *(unsigned char *)(v46 + 32) = v47;
    return swift_willThrow();
  }
  if (v58[0] < a2)
  {
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v46 = a2;
    *(void *)(v46 + 8) = v43;
    *(void *)(v46 + 16) = 0;
    *(void *)(v46 + 24) = 0;
    char v47 = 3;
    goto LABEL_35;
  }
  return result;
}

unint64_t sub_2528BB89C()
{
  unint64_t result = qword_269C31E18;
  if (!qword_269C31E18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C31E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31E18);
  }
  return result;
}

uint64_t dispatch thunk of TensorProvider.tensor(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_2528A91AC;
  return v11(a1, a2, a3, a4);
}

void sub_2528BBA08()
{
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E28);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_252953B00;
  BOOL v7 = (void *)*MEMORY[0x263EF9650];
  int v8 = (void *)*MEMORY[0x263EF9668];
  *(void *)(v6 + 32) = *MEMORY[0x263EF9650];
  *(void *)(v6 + 40) = v8;
  uint64_t v9 = (void *)*MEMORY[0x263EF9D50];
  type metadata accessor for DeviceType(0);
  id v10 = v7;
  id v11 = v8;
  id v12 = v9;
  uint64_t v13 = (void *)sub_252951B88();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_discoverySessionWithDeviceTypes_mediaType_position_, v13, v12, 0);

  unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_devices);
  sub_2528BA6BC(0, &qword_269C31E30);
  unint64_t v16 = sub_252951B98();

  unint64_t v58 = MEMORY[0x263F8EE78];
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_252951F38();
    if (v17) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    unint64_t v20 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_13;
  }
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_61;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      MEMORY[0x2533C0860](i, v16);
    }
    else {
      id v19 = *(id *)(v16 + 8 * i + 32);
    }
    MEMORY[0x2533C0560]();
    if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_252951BC8();
    }
    sub_252951BE8();
    sub_252951BB8();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = v1;
  unint64_t v20 = v58;
LABEL_14:
  swift_bridgeObjectRelease();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_252951F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_2528BCAB8();
    swift_allocError();
    *(void *)uint64_t v22 = 2;
    *(unsigned char *)(v22 + 8) = 1;
    swift_willThrow();
    goto LABEL_20;
  }
  unint64_t v16 = *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_cameraSession);
  objc_msgSend((id)v16, sel_beginConfiguration);
  sub_2528BC400(v14);
  if (v4)
  {
LABEL_18:
    objc_msgSend((id)v16, sel_commitConfiguration);
LABEL_20:

    return;
  }
  if (objc_msgSend((id)v16, sel_isMultitaskingCameraAccessSupported)) {
    objc_msgSend((id)v16, sel_setMultitaskingCameraAccessEnabled_, 1);
  }
  unint64_t v2 = (char **)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration);
  if (*(unsigned char *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration))
  {
    sub_25293F268();
    uint64_t v23 = &OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_backCamera;
  }
  else
  {
    sub_25293F23C();
    uint64_t v23 = &OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_frontCamera;
  }
  uint64_t v24 = *(void **)(v5 + *v23);
  if (!v24)
  {
    sub_2528BCAB8();
    swift_allocError();
    *(void *)uint64_t v27 = 2;
    *(unsigned char *)(v27 + 8) = 1;
    swift_willThrow();
    goto LABEL_18;
  }
  double v25 = *((double *)v2 + 1);
  id v26 = v24;
  sub_2528BC8AC(v26, v25);
  id v57 = v14;

  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA6A8]), sel_init);
  uint64_t v29 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutput;
  uint64_t v30 = *(void **)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutput);
  *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutput) = v28;

  unint64_t v55 = *(void **)(v5 + v29);
  uint64_t v56 = v29;
  if (!v55)
  {
    __break(1u);
    goto LABEL_67;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E40);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_252953B00;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_252953970;
  *(void *)(v32 + 32) = 0xD000000000000012;
  *(void *)(v32 + 40) = 0x800000025295AD50;
  *(void *)(v32 + 48) = 0xD000000000000013;
  *(void *)(v32 + 56) = 0x800000025295AD70;
  *(void *)(v32 + 64) = 0x6C75466E616D7548;
  *(void *)(v32 + 72) = 0xEF736569646F426CLL;
  *(void *)(v31 + 32) = v32;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_252953970;
  *(void *)(v33 + 32) = 0xD000000000000012;
  *(void *)(v33 + 40) = 0x800000025295AD50;
  *(void *)(v33 + 48) = 0xD000000000000013;
  *(void *)(v33 + 56) = 0x800000025295AD70;
  *(void *)(v33 + 64) = 0x6E61486E616D7548;
  *(void *)(v33 + 72) = 0xEA00000000007364;
  *(void *)(v31 + 40) = v33;
  id v34 = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E48);
  uint64_t v35 = (void *)sub_252951B88();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setRequestedBufferAttachments_, v35);

  uint64_t v36 = *(void **)(v5 + v29);
  if (!v36)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v37 = v36;
  sub_2528BCB0C(v37);

  if (!*(void *)(v5 + v29))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  int v3 = &selRef_parentNode;
  id v14 = v57;
  if (objc_msgSend((id)v16, sel_canAddOutput_))
  {
    if (*(void *)(v5 + v56))
    {
      objc_msgSend((id)v16, sel_addOutput_);
      uint64_t v38 = *(void **)(v5 + v56);
      if (*((unsigned char *)v2 + 17) != 1)
      {
        if (v38)
        {
          objc_msgSend(*(id *)(v5 + v56), sel_setSampleBufferDelegate_queue_, v5, *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dispatchQueue));
          goto LABEL_49;
        }
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      if (v38)
      {
        unint64_t v2 = &selRef_parentNode;
        unint64_t v15 = v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_synchronizedOutputs;
        swift_beginAccess();
        id v39 = v38;
        MEMORY[0x2533C0560]();
        if (*(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
          goto LABEL_65;
        while (1)
        {
          sub_252951BE8();
          sub_252951BB8();
          swift_endAccess();
          id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA580]), sel_init);
          uint64_t v41 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_depthDataOutput;
          uint64_t v42 = *(void **)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_depthDataOutput);
          *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_depthDataOutput) = v40;

          uint64_t v43 = *(void **)(v5 + v41);
          if (!v43) {
            goto LABEL_71;
          }
          objc_msgSend(v43, sel_setFilteringEnabled_, 0);
          if (!*(void *)(v5 + v41)) {
            goto LABEL_72;
          }
          if ([(id)v16 v3[11]])
          {
            if (!*(void *)(v5 + v41)) {
              goto LABEL_74;
            }
            [(id)v16 (SEL)v2 + 1163];
            unint64_t v44 = *(void **)(v5 + v41);
            if (!v44) {
              goto LABEL_75;
            }
            swift_beginAccess();
            id v45 = v44;
            MEMORY[0x2533C0560]();
            if (*(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
              sub_252951BC8();
            sub_252951BE8();
            sub_252951BB8();
            swift_endAccess();
          }
          id v46 = objc_allocWithZone(MEMORY[0x263EFA578]);
          sub_2528BA6BC(0, &qword_269C31E58);
          swift_bridgeObjectRetain();
          char v47 = (void *)sub_252951B88();
          swift_bridgeObjectRelease();
          id v48 = objc_msgSend(v46, sel_initWithDataOutputs_, v47);

          uint64_t v49 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutputSynchronizer;
          uint64_t v50 = *(void **)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutputSynchronizer);
          *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutputSynchronizer) = v48;

          uint64_t v51 = *(void **)(v5 + v49);
          id v14 = v57;
          if (v51) {
            objc_msgSend(v51, sel_setDelegate_queue_, v5, *(void *)(v5 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dispatchQueue));
          }
LABEL_49:
          id v52 = objc_msgSend((id)v16, sel_connections);
          sub_2528BA6BC(0, &qword_269C31E50);
          unint64_t v15 = sub_252951B98();

          if (v15 >> 62)
          {
LABEL_61:
            swift_bridgeObjectRetain();
            uint64_t v5 = sub_252951F38();
            swift_bridgeObjectRelease();
            if (!v5)
            {
LABEL_62:
              swift_bridgeObjectRelease();
              goto LABEL_18;
            }
          }
          else
          {
            uint64_t v5 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v5) {
              goto LABEL_62;
            }
          }
          if ((v15 & 0xC000000000000001) != 0) {
            break;
          }
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v53 = *(id *)(v15 + 32);
LABEL_54:
            uint64_t v54 = v53;
            swift_bridgeObjectRelease();
            if (objc_msgSend(v54, sel_isCameraIntrinsicMatrixDeliverySupported)) {
              objc_msgSend(v54, sel_setCameraIntrinsicMatrixDeliveryEnabled_, 1);
            }
            if (objc_msgSend(v54, sel_isVideoStabilizationSupported)) {
              objc_msgSend(v54, sel_setPreferredVideoStabilizationMode_, 0);
            }

            goto LABEL_18;
          }
          __break(1u);
LABEL_65:
          sub_252951BC8();
        }
        id v53 = (id)MEMORY[0x2533C0860](0, v15);
        goto LABEL_54;
      }
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
LABEL_76:
  sub_252951F28();
  __break(1u);
}

void sub_2528BC400(void *a1)
{
  uint64_t v2 = v1;
  v39[1] = *MEMORY[0x263EF8340];
  id v3 = objc_msgSend(a1, sel_devices);
  sub_2528BA6BC(0, &qword_269C31E30);
  unint64_t v4 = sub_252951B98();

  v39[0] = MEMORY[0x263F8EE78];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_252951F38();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 < 1) {
    __break(1u);
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      MEMORY[0x2533C0860](i, v4);
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    MEMORY[0x2533C0560]();
    if (*(void *)((v39[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_252951BC8();
    }
    sub_252951BE8();
    sub_252951BB8();
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v39[0];
LABEL_14:
  swift_bridgeObjectRelease();
  if (v8 >> 62) {
    goto LABEL_34;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    uint64_t v37 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_backCamera;
    uint64_t v35 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_backCameraInput;
    uint64_t v36 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_frontCamera;
    unint64_t v10 = v8 & 0xC000000000000001;
    uint64_t v34 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_frontCameraInput;
    uint64_t v11 = 4;
    unint64_t v38 = v8;
    while (1)
    {
      id v14 = v10 ? (id)MEMORY[0x2533C0860](v11 - 4, v8) : *(id *)(v8 + 8 * v11);
      uint64_t v13 = v14;
      uint64_t v15 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      id v16 = objc_msgSend(v14, sel_position);
      if (v16 == (id)1)
      {
        uint64_t v17 = *(void **)(v2 + v37);
        *(void *)(v2 + v37) = v13;
        id v18 = v13;

        id v19 = objc_allocWithZone(MEMORY[0x263EFA5C0]);
        v39[0] = 0;
        id v20 = v18;
        id v21 = objc_msgSend(v19, sel_initWithDevice_error_, v20, v39);
        uint64_t v22 = (void *)v39[0];
        if (!v21) {
          goto LABEL_32;
        }
        id v23 = v21;
        uint64_t v24 = v35;
      }
      else
      {
        if (v16 != (id)2)
        {
          if (!v16)
          {
            swift_bridgeObjectRelease();
            sub_2528BCAB8();
            swift_allocError();
            *(void *)uint64_t v32 = 2;
            *(unsigned char *)(v32 + 8) = 1;
            swift_willThrow();

            return;
          }
          goto LABEL_18;
        }
        double v25 = *(void **)(v2 + v36);
        *(void *)(v2 + v36) = v13;
        id v26 = v13;

        id v27 = objc_allocWithZone(MEMORY[0x263EFA5C0]);
        v39[0] = 0;
        id v20 = v26;
        id v28 = objc_msgSend(v27, sel_initWithDevice_error_, v20, v39);
        uint64_t v22 = (void *)v39[0];
        if (!v28)
        {
LABEL_32:
          id v29 = v22;
          uint64_t v30 = (void *)sub_2529511A8();

          swift_willThrow();
          swift_bridgeObjectRelease();

          sub_2528BCAB8();
          swift_allocError();
          *(void *)uint64_t v31 = 2;
          *(unsigned char *)(v31 + 8) = 1;
          swift_willThrow();

          return;
        }
        id v23 = v28;
        uint64_t v24 = v34;
      }
      id v12 = v22;

      uint64_t v13 = *(void **)(v2 + v24);
      *(void *)(v2 + v24) = v23;
      unint64_t v8 = v38;
LABEL_18:

      ++v11;
      if (v15 == v9)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_252951F38();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_2528BCAB8();
  swift_allocError();
  *(void *)uint64_t v33 = 2;
  *(unsigned char *)(v33 + 8) = 1;
  swift_willThrow();
}

void sub_2528BC8AC(void *a1, double a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a2 <= -2147483650.0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (a2 >= 2147483650.0) {
    goto LABEL_12;
  }
  uint64_t v5 = (void *)sub_252951D78();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = 4 * *(char *)(v2 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration + 19);
  uint64_t v11 = sub_2528BCC4C(a1, *(_DWORD *)((char *)&unk_25295410C + v10), *(_DWORD *)((char *)&unk_2529540F8 + v10), a2);
  if (v11)
  {
    id v12 = v11;
    id v16 = 0;
    if (objc_msgSend(a1, sel_lockForConfiguration_, &v16))
    {
      id v13 = v16;
      objc_msgSend(a1, sel_setActiveFormat_, v12);
      id v16 = v5;
      uint64_t v17 = v7;
      uint64_t v18 = v9;
      objc_msgSend(a1, sel_setActiveVideoMinFrameDuration_, &v16);
      id v16 = v5;
      uint64_t v17 = v7;
      uint64_t v18 = v9;
      objc_msgSend(a1, sel_setActiveVideoMaxFrameDuration_, &v16);
      objc_msgSend(a1, sel_unlockForConfiguration);
    }
    else
    {
      id v15 = v16;
      sub_2529511A8();

      swift_willThrow();
    }
  }
  else
  {
    sub_2528BCAB8();
    swift_allocError();
    *(void *)uint64_t v14 = 3;
    *(unsigned char *)(v14 + 8) = 1;
    swift_willThrow();
  }
}

unint64_t sub_2528BCAB8()
{
  unint64_t result = qword_269C31E38;
  if (!qword_269C31E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31E38);
  }
  return result;
}

id sub_2528BCB0C(void *a1)
{
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C0);
  if (v3)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_252953740;
    *(void *)(inited + 32) = sub_252951AE8();
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    uint64_t v6 = 875704422;
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_252953740;
    *(void *)(inited + 32) = sub_252951AE8();
    *(void *)(inited + 40) = v7;
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    uint64_t v6 = 1111970369;
  }
  *(void *)(inited + 48) = v6;
  sub_2528EF69C(inited);
  uint64_t v8 = (void *)sub_252951A98();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setVideoSettings_, v8);

  return objc_msgSend(a1, sel_setAlwaysDiscardsLateVideoFrames_, 1);
}

void *sub_2528BCC4C(void *a1, int a2, int a3, double a4)
{
  LODWORD(v4) = a3;
  LODWORD(v5) = a2;
  id v7 = objc_msgSend(a1, sel_formats);
  sub_2528BA6BC(0, &qword_269C31E60);
  unint64_t v8 = sub_252951B98();

  if (v8 >> 62) {
    goto LABEL_28;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    unint64_t v10 = 0;
    unint64_t v11 = v8 & 0xC000000000000001;
    uint64_t v12 = v8 & 0xFFFFFFFFFFFFFF8;
    unint64_t v13 = v8 + 32;
    int v28 = v5;
    int v29 = v4;
    uint64_t v27 = v9;
    while (1)
    {
      if (v11)
      {
        id v15 = (id)MEMORY[0x2533C0860](v10, v8);
      }
      else
      {
        if (v10 >= *(void *)(v12 + 16)) {
          goto LABEL_27;
        }
        id v15 = *(id *)(v13 + 8 * v10);
      }
      id v16 = v15;
      if (__OFADD__(v10++, 1)) {
        break;
      }
      id v14 = objc_msgSend(v15, sel_formatDescription);
      if (sub_252951D58() == __PAIR64__(v4, v5))
      {
        id v18 = objc_msgSend(v16, sel_videoSupportedFrameRateRanges);
        sub_2528BA6BC(0, &qword_269C31E68);
        unint64_t v19 = sub_252951B98();

        if (v19 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_252951F38();
          swift_bridgeObjectRelease();
          if (v20)
          {
LABEL_14:
            unint64_t v5 = v19 & 0xC000000000000001;
            uint64_t v4 = 4;
            while (1)
            {
              id v21 = v5 ? (id)MEMORY[0x2533C0860](v4 - 4, v19) : *(id *)(v19 + 8 * v4);
              uint64_t v22 = v21;
              uint64_t v23 = v4 - 3;
              if (__OFADD__(v4 - 4, 1)) {
                break;
              }
              objc_msgSend(v21, sel_maxFrameRate);
              double v25 = v24;

              if (v25 >= a4)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                return v16;
              }
              ++v4;
              if (v23 == v20) {
                goto LABEL_21;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v20) {
            goto LABEL_14;
          }
        }
LABEL_21:

        swift_bridgeObjectRelease();
        LODWORD(v5) = v28;
        LODWORD(v4) = v29;
        unint64_t v11 = v8 & 0xC000000000000001;
        uint64_t v9 = v27;
        unint64_t v13 = v8 + 32;
        uint64_t v12 = v8 & 0xFFFFFFFFFFFFFF8;
      }
      else
      {

        id v14 = v16;
      }

      if (v10 == v9) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_252951F38();
    swift_bridgeObjectRelease();
  }
LABEL_29:
  swift_bridgeObjectRelease();
  return 0;
}

void __swiftcall BodyMeshCreator.init()(Human::BodyMeshCreator *__return_ptr retstr)
{
  sub_2528B84F0((uint64_t)&v3);
  Swift::Int v2 = v4;
  *(_OWORD *)&retstr->meshGenerator.componentSize = v3;
  retstr->meshGenerator.numberOfJoints = v2;
  *(_OWORD *)&retstr->meshGenerator.jointNames._rawValue = v5;
}

uint64_t BodyMeshCreator.generate(to:gender:height:weight:)(uint64_t a1, float a2, float a3, float a4)
{
  long long v10 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v4;
  *(_OWORD *)(v5 + 32) = v10;
  *(void *)(v5 + 48) = *(void *)(v4 + 32);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 72) = v11;
  void *v11 = v5;
  v11[1] = sub_2528BD024;
  return sub_2528B1A3C(a1, a2, a3, a4);
}

uint64_t sub_2528BD024()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528BD158, 0, 0);
  }
  else
  {
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2528BD158()
{
  uint64_t v1 = *(void **)(v0 + 80);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  sub_2528BD220();
  if (swift_dynamicCast())
  {

    swift_willThrow();
  }

  long long v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

unint64_t sub_2528BD220()
{
  unint64_t result = qword_269C31D80;
  if (!qword_269C31D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_269C31D80);
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyMeshCreator()
{
  return &type metadata for BodyMeshCreator;
}

id sub_2528BD340()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s16FeatureExtractorV8ObserverCMa()
{
  return self;
}

void _s16FeatureExtractorVwxx(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 24);
}

void *_s16FeatureExtractorVwcp(void *a1, void *a2)
{
  long long v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = a2[4];
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void *_s16FeatureExtractorVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  id v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  long long v10 = (void *)a2[3];
  unint64_t v11 = (void *)a1[3];
  a1[3] = v10;
  id v12 = v10;

  a1[4] = a2[4];
  return a1;
}

uint64_t _s16FeatureExtractorVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s16FeatureExtractorVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16FeatureExtractorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16FeatureExtractorVMa()
{
  return &_s16FeatureExtractorVN;
}

ValueMetadata *_s16FeatureExtractorV10ANSTTensorVMa()
{
  return &_s16FeatureExtractorV10ANSTTensorVN;
}

id sub_2528BD5CC(void *a1)
{
  unint64_t v2 = (void *)qword_269C3D760;
  qword_269C3D760 = (uint64_t)a1;

  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCVV5Human19VFMActionClassifier16FeatureExtractor8Observer_continuation);
  if (v3)
  {
    *(void *)(v1 + OBJC_IVAR____TtCVV5Human19VFMActionClassifier16FeatureExtractor8Observer_continuation) = 0;
    **(void **)(*(void *)(v3 + 64) + 40) = a1;
    id v4 = a1;
    return (id)swift_continuation_throwingResume();
  }
  else
  {
    return a1;
  }
}

uint64_t Skeleton.Joint.index.getter()
{
  return *(void *)v0;
}

uint64_t Skeleton.Joint.parentIndex.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t Skeleton.Joint.kind.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

__n128 Skeleton.Joint.position.getter()
{
  return v0[2];
}

void Skeleton.Joint.position.setter(__n128 a1)
{
  v1[2] = a1;
}

uint64_t (*Skeleton.Joint.position.modify())()
{
  return nullsub_1;
}

__n128 Skeleton.Joint.eulerAngles.getter()
{
  return v0[3];
}

__n128 Skeleton.Joint.modelTransform.getter()
{
  return v0[4];
}

__n128 Skeleton.Joint.localTransform.getter()
{
  return v0[8];
}

uint64_t Skeleton.Joint.isValid.getter()
{
  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t Skeleton.Joint.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t Skeleton.Joint.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_2528BD764()
{
  return sub_2529521C8();
}

uint64_t sub_2528BD7AC()
{
  return sub_2529521A8();
}

uint64_t sub_2528BD7D8()
{
  return sub_2529521C8();
}

uint64_t _s5Human8SkeletonV5JointV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    long long v5 = *(_OWORD *)(a1 + 32);
    long long v4 = *(_OWORD *)(a1 + 48);
    float32x4_t v6 = *(float32x4_t *)(a1 + 64);
    float32x4_t v7 = *(float32x4_t *)(a1 + 80);
    float32x4_t v8 = *(float32x4_t *)(a1 + 96);
    float32x4_t v9 = *(float32x4_t *)(a1 + 112);
    float32x4_t v10 = *(float32x4_t *)(a1 + 128);
    float32x4_t v11 = *(float32x4_t *)(a1 + 144);
    float32x4_t v12 = *(float32x4_t *)(a1 + 160);
    float32x4_t v13 = *(float32x4_t *)(a1 + 176);
    int v14 = *(unsigned __int8 *)(a1 + 192);
    long long v16 = *(_OWORD *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 48);
    float32x4_t v17 = *(float32x4_t *)(a2 + 64);
    float32x4_t v18 = *(float32x4_t *)(a2 + 80);
    float32x4_t v19 = *(float32x4_t *)(a2 + 96);
    float32x4_t v20 = *(float32x4_t *)(a2 + 112);
    float32x4_t v21 = *(float32x4_t *)(a2 + 128);
    float32x4_t v22 = *(float32x4_t *)(a2 + 144);
    float32x4_t v23 = *(float32x4_t *)(a2 + 160);
    float32x4_t v24 = *(float32x4_t *)(a2 + 176);
    int v25 = *(unsigned __int8 *)(a2 + 192);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      goto LABEL_6;
    }
    float32x4_t v54 = *(float32x4_t *)(a1 + 176);
    float32x4_t v55 = *(float32x4_t *)(a1 + 160);
    float32x4_t v52 = *(float32x4_t *)(a1 + 144);
    float32x4_t v53 = *(float32x4_t *)(a1 + 128);
    float32x4_t v50 = *(float32x4_t *)(a1 + 112);
    float32x4_t v51 = *(float32x4_t *)(a1 + 96);
    float32x4_t v48 = *(float32x4_t *)(a1 + 80);
    float32x4_t v49 = *(float32x4_t *)(a1 + 64);
    float32x4_t v46 = *(float32x4_t *)(a2 + 160);
    long long v47 = *(_OWORD *)(a1 + 48);
    float32x4_t v44 = *(float32x4_t *)(a2 + 128);
    float32x4_t v45 = *(float32x4_t *)(a2 + 176);
    float32x4_t v42 = *(float32x4_t *)(a2 + 96);
    float32x4_t v43 = *(float32x4_t *)(a2 + 144);
    float32x4_t v40 = *(float32x4_t *)(a2 + 64);
    float32x4_t v41 = *(float32x4_t *)(a2 + 112);
    long long v38 = *(_OWORD *)(a2 + 48);
    float32x4_t v39 = *(float32x4_t *)(a2 + 80);
    long long v36 = *(_OWORD *)(a2 + 32);
    long long v37 = *(_OWORD *)(a1 + 32);
    char v26 = sub_252952108();
    long long v16 = v36;
    long long v5 = v37;
    long long v15 = v38;
    float32x4_t v18 = v39;
    float32x4_t v17 = v40;
    float32x4_t v20 = v41;
    float32x4_t v19 = v42;
    float32x4_t v22 = v43;
    float32x4_t v21 = v44;
    float32x4_t v24 = v45;
    float32x4_t v23 = v46;
    long long v4 = v47;
    float32x4_t v7 = v48;
    float32x4_t v6 = v49;
    float32x4_t v9 = v50;
    float32x4_t v8 = v51;
    float32x4_t v11 = v52;
    float32x4_t v10 = v53;
    float32x4_t v13 = v54;
    float32x4_t v12 = v55;
    char v27 = v26;
    uint64_t result = 0;
    if (v27)
    {
LABEL_6:
      uint64_t v28 = 0;
      while (1)
      {
        long long v58 = v5;
        float v30 = *(float *)((unint64_t)&v58 & 0xFFFFFFFFFFFFFFF3 | (4 * (v28 & 3)));
        long long v59 = v16;
        float v31 = *(float *)((unint64_t)&v59 & 0xFFFFFFFFFFFFFFF3 | (4 * (v28 & 3)));
        BOOL v29 = v30 == v31;
        if (v28 == 2) {
          break;
        }
        while (1)
        {
          ++v28;
          if (v29) {
            break;
          }
          BOOL v29 = 0;
          uint64_t result = 0;
          if (v28 == 2) {
            return result;
          }
        }
      }
      if (v30 != v31) {
        return 0;
      }
      uint64_t v32 = 0;
      while (1)
      {
        long long v56 = v4;
        float v34 = *(float *)((unint64_t)&v56 & 0xFFFFFFFFFFFFFFF3 | (4 * (v32 & 3)));
        long long v57 = v15;
        float v35 = *(float *)((unint64_t)&v57 & 0xFFFFFFFFFFFFFFF3 | (4 * (v32 & 3)));
        BOOL v33 = v34 == v35;
        if (v32 == 2) {
          break;
        }
        while (1)
        {
          ++v32;
          if (v33) {
            break;
          }
          BOOL v33 = 0;
          uint64_t result = 0;
          if (v32 == 2) {
            return result;
          }
        }
      }
      if (v34 == v35
        && (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v7, v18), (int8x16_t)vceqq_f32(v6, v17)), vandq_s8((int8x16_t)vceqq_f32(v8, v19), (int8x16_t)vceqq_f32(v9, v20)))) & 0x80000000) != 0&& (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v11, v22), (int8x16_t)vceqq_f32(v10, v21)), vandq_s8((int8x16_t)vceqq_f32(v12, v23), (int8x16_t)vceqq_f32(v13, v24)))) & 0x80000000) != 0)
      {
        return v14 ^ v25 ^ 1u;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_2528BDA58()
{
  unint64_t result = qword_269C31F00;
  if (!qword_269C31F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31F00);
  }
  return result;
}

uint64_t _s5JointVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5JointVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5JointVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

__n128 __swift_memcpy193_16(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t _s5JointVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

uint64_t _s5JointVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 193)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5JointVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 193) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 193) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton.Joint()
{
  return &type metadata for Skeleton.Joint;
}

uint64_t sub_2528BDD54()
{
  signed int PixelFormatType = CVPixelBufferGetPixelFormatType(v0);
  if (PixelFormatType > 1278226533)
  {
    switch(PixelFormatType)
    {
      case 1278226534:
        return 55;
      case 1278226536:
        return 25;
      case 1380401729:
        return 70;
    }
  }
  else
  {
    switch(PixelFormatType)
    {
      case 875704422:
        return 10;
      case 1111970369:
        return 80;
      case 1278226488:
        return 13;
    }
  }
  return 0;
}

uint64_t sub_2528BDE2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v27[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_252951198();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F30);
  uint64_t inited = swift_initStackObject();
  long long v26 = xmmword_252953740;
  *(_OWORD *)(inited + 16) = xmmword_252953740;
  long long v10 = (void *)*MEMORY[0x263EFF6A0];
  *(void *)(inited + 32) = *MEMORY[0x263EFF6A0];
  id v11 = v10;
  sub_25290DD4C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_2529511D8();
  if (v2)
  {
    uint64_t v12 = sub_252951268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  char v14 = sub_252951188();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v14 == 2 || (v14 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F38);
    uint64_t v15 = sub_252951268();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v26;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16))(v18 + v17, a1, v15);
LABEL_6:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
    *a2 = v18;
    return result;
  }
  id v19 = objc_msgSend(self, sel_defaultManager);
  float32x4_t v20 = (void *)sub_252951208();
  v27[0] = 0;
  id v21 = objc_msgSend(v19, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v20, 0, 0, v27);

  id v22 = v27[0];
  if (v21)
  {
    uint64_t v15 = sub_252951268();
    uint64_t v18 = sub_252951B98();
    id v23 = v22;

    uint64_t v16 = *(void *)(v15 - 8);
    goto LABEL_6;
  }
  id v24 = v27[0];
  sub_2529511A8();

  swift_willThrow();
  uint64_t v25 = sub_252951268();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
}

uint64_t ImageSource.ImageDescriptors.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = 0;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ImageSource.ImageDescriptors.Iterator.init(files:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = result;
  return result;
}

void sub_2528BE224(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = 0;
  a1[1] = v2;
}

uint64_t ImageSource.ImageDescriptors.Iterator.next()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = type metadata accessor for ImageDescriptor();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for ImageSource();
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528BE32C, 0, 0);
}

uint64_t sub_2528BE32C()
{
  uint64_t v1 = (unint64_t *)v0[11];
  unint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(v3 + 16);
  if (*v1 != v4)
  {
    uint64_t v6 = sub_252951268();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = swift_task_alloc();
    if (v2 >= v4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = v8;
      uint64_t v12 = v0[16];
      float32x4_t v13 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
      v13(v8, v3+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v2, v6);
      ImageSource.init(_:)(v11, v12);
      swift_task_dealloc();
      sub_252951248();
      uint64_t v14 = swift_task_alloc();
      sub_2529511E8();
      uint64_t v19 = sub_252951278();
      unint64_t v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
      swift_task_dealloc();
      id v22 = objc_allocWithZone(MEMORY[0x263F827E0]);
      sub_2528B6E98(v19, v21);
      id v23 = (void *)sub_2529512B8();
      id v24 = objc_msgSend(v22, sel_initWithData_, v23);
      sub_2528B3A64(v19, v21);

      id v25 = objc_msgSend(v24, sel_CGImage);
      v0[17] = v25;
      sub_2528B3A64(v19, v21);

      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v8 = (uint64_t)sub_2528BE6F4;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        return MEMORY[0x270FA2498](v8, v9, v10);
      }
      unint64_t v15 = v0[16];
      type metadata accessor for ImageSourceError();
      sub_2528AF4F4();
      swift_allocError();
      v13(v16, v15, v6);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      unint64_t v17 = (void *)v0[11];
      uint64_t v8 = sub_2528BEA5C(v0[16]);
      if (!__OFADD__(*v17, 1))
      {
        *(void *)v0[11] = *v17 + 1;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v5 = (uint64_t (*)(void))v0[1];
        goto LABEL_7;
      }
    }
    __break(1u);
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[13] + 56))(v0[10], 1, 1, v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v5();
}

uint64_t sub_2528BE6F4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = (CGImage *)v0[17];
  uint64_t v3 = v0[14];
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_2528BE7A4;
  uint64_t v4 = swift_continuation_init();
  sub_2528C08C8(v1, v2, v4);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2528BE7A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 144) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_2528BE9B0;
  }
  else
  {
    sub_2528AE62C(*(void *)(v1 + 112), *(void *)(v1 + 120));
    uint64_t v3 = sub_2528BE8C8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528BE8C8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void **)(v0 + 88);

  sub_2528AE62C(v2, v5);
  sub_2528BEA5C(v1);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  if (__OFADD__(*v6, 1))
  {
    __break(1u);
  }
  else
  {
    **(void **)(v0 + 88) = *v6 + 1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  return result;
}

uint64_t sub_2528BE9B0()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t result = sub_2528BEA5C(*(void *)(v0 + 128));
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    **(void **)(v0 + 88) = *v1 + 1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  return result;
}

uint64_t sub_2528BEA5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageSource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528BEAB8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2528A91AC;
  return ImageSource.ImageDescriptors.Iterator.next()(a1);
}

uint64_t sub_2528BEB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[6] = v6;
  void *v6 = v4;
  v6[1] = sub_2528BEBF0;
  return ImageSource.ImageDescriptors.Iterator.next()(a1);
}

uint64_t sub_2528BEBF0()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2[3])
    {
      swift_getObjectType();
      uint64_t v3 = sub_252951BF8();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    return MEMORY[0x270FA2498](sub_2528BED60, v3, v5);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_2528BED60()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  swift_willThrowTypedImpl();
  void *v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_2528BEDF8(uint64_t a1)
{
  unint64_t result = sub_2528BEE20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2528BEE20()
{
  unint64_t result = qword_269C31F10;
  if (!qword_269C31F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31F10);
  }
  return result;
}

unint64_t sub_2528BEE78()
{
  unint64_t result = qword_269C31F18[0];
  if (!qword_269C31F18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269C31F18);
  }
  return result;
}

uint64_t sub_2528BEECC()
{
  return MEMORY[0x263F8E4E0];
}

ValueMetadata *type metadata accessor for ImageSource.ImageDescriptors()
{
  return &type metadata for ImageSource.ImageDescriptors;
}

ValueMetadata *type metadata accessor for ImageSource.ImageDescriptors.Iterator()
{
  return &type metadata for ImageSource.ImageDescriptors.Iterator;
}

__n128 ActionClassifier.init()@<Q0>(uint64_t a1@<X8>)
{
  sub_2528F2F08((uint64_t)v10);
  if (!v1)
  {
    long long v4 = v10[13];
    *(_OWORD *)(a1 + 192) = v10[12];
    *(_OWORD *)(a1 + 208) = v4;
    *(void *)(a1 + 224) = v11;
    long long v5 = v10[9];
    *(_OWORD *)(a1 + 128) = v10[8];
    *(_OWORD *)(a1 + 144) = v5;
    long long v6 = v10[11];
    *(_OWORD *)(a1 + 160) = v10[10];
    *(_OWORD *)(a1 + 176) = v6;
    long long v7 = v10[5];
    *(_OWORD *)(a1 + 64) = v10[4];
    *(_OWORD *)(a1 + 80) = v7;
    long long v8 = v10[7];
    *(_OWORD *)(a1 + 96) = v10[6];
    *(_OWORD *)(a1 + 112) = v8;
    long long v9 = v10[1];
    *(_OWORD *)a1 = v10[0];
    *(_OWORD *)(a1 + 16) = v9;
    __n128 result = (__n128)v10[3];
    *(_OWORD *)(a1 + 32) = v10[2];
    *(__n128 *)(a1 + 48) = result;
  }
  return result;
}

__n128 ActionClassifier.init(url:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_252951268();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_2528F30D4((uint64_t)v8, (uint64_t)v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  if (!v2)
  {
    long long v10 = v17[13];
    *(_OWORD *)(a2 + 192) = v17[12];
    *(_OWORD *)(a2 + 208) = v10;
    *(void *)(a2 + 224) = v18;
    long long v11 = v17[9];
    *(_OWORD *)(a2 + 128) = v17[8];
    *(_OWORD *)(a2 + 144) = v11;
    long long v12 = v17[11];
    *(_OWORD *)(a2 + 160) = v17[10];
    *(_OWORD *)(a2 + 176) = v12;
    long long v13 = v17[5];
    *(_OWORD *)(a2 + 64) = v17[4];
    *(_OWORD *)(a2 + 80) = v13;
    long long v14 = v17[7];
    *(_OWORD *)(a2 + 96) = v17[6];
    *(_OWORD *)(a2 + 112) = v14;
    long long v15 = v17[1];
    *(_OWORD *)a2 = v17[0];
    *(_OWORD *)(a2 + 16) = v15;
    __n128 result = (__n128)v17[3];
    *(_OWORD *)(a2 + 32) = v17[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t ActionClassifier.applied(to:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = a2;
  long long v4 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(v3 + 208) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(v3 + 224) = v4;
  *(void *)(v3 + 240) = *(void *)(v2 + 224);
  long long v5 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 160) = v5;
  long long v6 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v3 + 192) = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v8;
  long long v9 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v9;
  long long v10 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v10;
  return MEMORY[0x270FA2498](sub_2528BF184, 0, 0);
}

uint64_t sub_2528BF184()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v1, sel_systemUptime);
  v0[33] = v2;

  uint64_t v3 = (void *)swift_task_alloc();
  v0[34] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2528BF254;
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[32];
  return sub_2528F3590(v4, v5);
}

uint64_t sub_2528BF254()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528BF3D0;
  }
  else {
    uint64_t v2 = sub_2528BF368;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528BF368()
{
  sub_2528D01CC(17, *(double *)(v0 + 264));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528BF3D0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2528BF3E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = a2;
  long long v4 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(v3 + 208) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(v3 + 224) = v4;
  *(void *)(v3 + 240) = *(void *)(v2 + 224);
  long long v5 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 160) = v5;
  long long v6 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v3 + 192) = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v8;
  long long v9 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v9;
  long long v10 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v10;
  return MEMORY[0x270FA2498](sub_2528BF184, 0, 0);
}

_UNKNOWN **sub_2528BF448()
{
  return &protocol witness table for SceneDescriptor;
}

void destroy for VFMActionClassifier(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 224);
}

uint64_t initializeWithCopy for VFMActionClassifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(void **)(a2 + 16);
  long long v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(void **)(a2 + 32);
  long long v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v10 = *(void **)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v9;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  uint64_t v28 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v28;
  uint64_t v29 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v29;
  uint64_t v30 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v30;
  uint64_t v31 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v31;
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v32 = *(void **)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v32;
  BOOL v33 = *(void **)(a2 + 184);
  float v34 = *(void **)(a2 + 192);
  *(void *)(a1 + 184) = v33;
  *(void *)(a1 + 192) = v34;
  long long v13 = *(void **)(a2 + 208);
  float v35 = *(void **)(a2 + 200);
  *(void *)(a1 + 200) = v35;
  *(void *)(a1 + 208) = v13;
  long long v36 = v13;
  long long v37 = *(void **)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v37;
  id v14 = v3;
  id v15 = v4;
  id v16 = v5;
  id v17 = v6;
  id v18 = v8;
  id v19 = v7;
  id v20 = v10;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v21 = v32;
  id v22 = v33;
  id v23 = v34;
  id v24 = v35;
  id v25 = v36;
  swift_unknownObjectRetain();
  id v26 = v37;
  return a1;
}

uint64_t assignWithCopy for VFMActionClassifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  long long v13 = *(void **)(a1 + 24);
  id v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  id v16 = *(void **)(a2 + 32);
  id v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 40);
  id v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v22 = *(void **)(a2 + 56);
  id v23 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v22;
  id v24 = v22;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v25 = *(void **)(a2 + 176);
  id v26 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v25;
  id v27 = v25;

  uint64_t v28 = *(void **)(a2 + 184);
  uint64_t v29 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v28;
  id v30 = v28;

  uint64_t v31 = *(void **)(a2 + 192);
  uint64_t v32 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v31;
  id v33 = v31;

  float v34 = *(void **)(a2 + 200);
  float v35 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v34;
  id v36 = v34;

  long long v37 = *(void **)(a2 + 208);
  long long v38 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v37;
  id v39 = v37;

  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  float32x4_t v40 = *(void **)(a1 + 224);
  float32x4_t v41 = *(void **)(a2 + 224);
  *(void *)(a1 + 224) = v41;
  id v42 = v41;

  return a1;
}

__n128 __swift_memcpy232_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for VFMActionClassifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  long long v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_unknownObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_unknownObjectRelease();

  long long v7 = *(void **)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);

  long long v8 = *(void **)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);

  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_unknownObjectRelease();
  long long v9 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);

  return a1;
}

uint64_t getEnumTagSinglePayload for VFMActionClassifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 232)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFMActionClassifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionClassifier()
{
  return &type metadata for ActionClassifier;
}

uint64_t ImageSource.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_2529511B8())
  {
    long long v5 = self;
    id v6 = objc_msgSend(v5, sel_defaultManager);
    sub_252951258();
    long long v7 = (void *)sub_252951AB8();
    swift_bridgeObjectRelease();
    unsigned int v8 = objc_msgSend(v6, sel_fileExistsAtPath_, v7);

    if (v8
      && (id v9 = objc_msgSend(v5, sel_defaultManager),
          sub_252951258(),
          long long v10 = (void *)sub_252951AB8(),
          swift_bridgeObjectRelease(),
          unsigned int v11 = objc_msgSend(v9, sel_isReadableFileAtPath_, v10),
          v9,
          v10,
          v11))
    {
      uint64_t v12 = sub_252951268();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a1, v12);
      sub_252910520((uint64_t)v33);
      if (v2)
      {
        id v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v14(a1, v12);
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(a2, v12);
      }
      else
      {
        id v20 = sub_25294B500();
        char v22 = v21;
        uint64_t v24 = v23;
        id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
        uint64_t result = type metadata accessor for ImageSource();
        uint64_t v27 = a2 + *(int *)(result + 20);
        *(void *)uint64_t v27 = v25;
        *(void *)(v27 + 8) = v20;
        *(unsigned char *)(v27 + 16) = v22 & 1;
        *(void *)(v27 + 24) = v24;
        long long v28 = v33[9];
        *(_OWORD *)(v27 + 160) = v33[8];
        *(_OWORD *)(v27 + 176) = v28;
        *(void *)(v27 + 192) = v34;
        long long v29 = v33[5];
        *(_OWORD *)(v27 + 96) = v33[4];
        *(_OWORD *)(v27 + 112) = v29;
        long long v30 = v33[7];
        *(_OWORD *)(v27 + 128) = v33[6];
        *(_OWORD *)(v27 + 144) = v30;
        long long v31 = v33[1];
        *(_OWORD *)(v27 + 32) = v33[0];
        *(_OWORD *)(v27 + 48) = v31;
        long long v32 = v33[3];
        *(_OWORD *)(v27 + 64) = v33[2];
        *(_OWORD *)(v27 + 80) = v32;
      }
    }
    else
    {
      type metadata accessor for ImageSourceError();
      sub_2528AF4F4();
      swift_allocError();
      uint64_t v17 = v16;
      uint64_t v18 = sub_252951268();
      uint64_t v19 = *(void *)(v18 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
    }
  }
  else
  {
    type metadata accessor for ImageSourceError();
    sub_2528AF4F4();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v15 = sub_252951268();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  }
  return result;
}

uint64_t ImageSource.generate()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  type metadata accessor for ImageDescriptor();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528C00F8, 0, 0);
}

uint64_t sub_2528C00F8()
{
  sub_252951248();
  uint64_t v1 = sub_252951268();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_2529511E8();
  uint64_t v8 = sub_252951278();
  unint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  id v11 = objc_allocWithZone(MEMORY[0x263F827E0]);
  sub_2528B6E98(v8, v10);
  uint64_t v12 = (void *)sub_2529512B8();
  id v13 = objc_msgSend(v11, sel_initWithData_, v12);
  sub_2528B3A64(v8, v10);

  id v14 = objc_msgSend(v13, sel_CGImage);
  v0[13] = v14;
  sub_2528B3A64(v8, v10);

  swift_bridgeObjectRelease();
  if (v14)
  {
    return MEMORY[0x270FA2498](sub_2528C03AC, 0, 0);
  }
  else
  {
    uint64_t v4 = v0[11];
    type metadata accessor for ImageSourceError();
    sub_2528AF4F4();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v1);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    id v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_2528C03AC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (CGImage *)v0[13];
  uint64_t v3 = v0[11];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_2528C045C;
  uint64_t v4 = swift_continuation_init();
  sub_2528C08C8(v2, v3, v4);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2528C045C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 112) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_2528C0604;
  }
  else
  {
    sub_2528C1CB8(*(void *)(v1 + 96), *(void *)(v1 + 80), (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    uint64_t v3 = sub_2528C0598;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528C0598()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528C0604()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528C0670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageSourceError();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImageDescriptor();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F68);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528C1C50(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2528C1CB8((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageSourceError);
    sub_2528AF4F4();
    uint64_t v16 = swift_allocError();
    sub_2528C1D20((uint64_t)v6, v17, (uint64_t (*)(void))type metadata accessor for ImageSourceError);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    swift_allocError();
    uint64_t *v18 = v16;
    swift_continuation_throwingResumeWithError();
    uint64_t v19 = (uint64_t)v6;
    id v20 = type metadata accessor for ImageSourceError;
  }
  else
  {
    sub_2528C1CB8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    sub_2528C1D20((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    sub_2528C1CB8((uint64_t)v10, *(void *)(*(void *)(a2 + 64) + 40), (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    swift_continuation_throwingResume();
    uint64_t v19 = (uint64_t)v12;
    id v20 = type metadata accessor for ImageDescriptor;
  }
  return sub_2528C1D88(v19, (uint64_t (*)(void))v20);
}

void sub_2528C08C8(CGImage *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = type metadata accessor for ImageDescriptor();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F68);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t BitsPerPixel = CGImageGetBitsPerPixel(a1);
  int64_t v12 = CGImageGetBitsPerPixel(a1);
  int64_t BitsPerComponent = CGImageGetBitsPerComponent(a1);
  if (!BitsPerComponent)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v12 == 0x8000000000000000 && BitsPerComponent == -1) {
    goto LABEL_19;
  }
  uint64_t v14 = v12 / BitsPerComponent;
  if (!(v12 / BitsPerComponent))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (BitsPerPixel == 0x8000000000000000 && v14 == -1) {
    goto LABEL_20;
  }
  if (BitsPerPixel / v14 != 8)
  {
    type metadata accessor for ImageSourceError();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_2528C0670((uint64_t)v10, a3);
    sub_2528C1BF0((uint64_t)v10);
    return;
  }
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00648]), sel_initWithCGImage_, a1);
  CVPixelBufferRef pixelBufferOut = 0;
  objc_msgSend(v15, sel_extent);
  double Width = CGRectGetWidth(v26);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0) {
    goto LABEL_21;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v15, sel_extent);
  double Height = CGRectGetHeight(v27);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_26;
  }
  CVPixelBufferCreate(0, (uint64_t)Width, (uint64_t)Height, 0x42475241u, 0, &pixelBufferOut);
  if (pixelBufferOut)
  {
    CVPixelBufferRef v21 = pixelBufferOut;
    char v20 = 3;
    memset(v23, 0, sizeof(v23));
    char v24 = 1;
    uint64_t v18 = pixelBufferOut;
    ImageDescriptor.init(imageBuffer:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)((void **)&v21, 0, &v20, (uint64_t)v23, 0, 0, (uint64_t)v7);
    sub_2528C1D20((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    swift_storeEnumTagMultiPayload();
    sub_2528C0670((uint64_t)v10, a3);

    sub_2528C1BF0((uint64_t)v10);
    sub_2528C1D88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  }
  else
  {
    sub_252951F28();
    __break(1u);
  }
}

uint64_t ImageSource.generate()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_252951268();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, v1);
  return sub_2528BDE2C((uint64_t)v5, a1);
}

void *sub_2528C0DEC(void *a1)
{
  uint64_t v2 = (void *)a1[14];
  uint64_t v3 = (void *)a1[15];
  uint64_t v4 = (void *)a1[16];
  uint64_t v5 = (void *)a1[17];
  uint64_t v6 = (void *)a1[18];
  uint64_t v8 = (void *)a1[20];
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t type metadata accessor for ImageSource()
{
  uint64_t result = qword_269C31F58;
  if (!qword_269C31F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951268();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)v10;
    int64_t v12 = (void *)*((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v12;
    v9[16] = v10[16];
    uint64_t v14 = (void *)*((void *)v10 + 3);
    uint64_t v13 = *((void *)v10 + 4);
    *((void *)v9 + 3) = v14;
    *((void *)v9 + 4) = v13;
    uint64_t v15 = *((void *)v10 + 6);
    *((void *)v9 + 5) = *((void *)v10 + 5);
    *((void *)v9 + 6) = v15;
    uint64_t v16 = *((void *)v10 + 8);
    *((void *)v9 + 7) = *((void *)v10 + 7);
    *((void *)v9 + 8) = v16;
    uint64_t v17 = *((void *)v10 + 10);
    *((void *)v9 + 9) = *((void *)v10 + 9);
    *((void *)v9 + 10) = v17;
    uint64_t v31 = *((void *)v10 + 12);
    *((void *)v9 + 11) = *((void *)v10 + 11);
    *((void *)v9 + 12) = v31;
    uint64_t v32 = *((void *)v10 + 14);
    *((void *)v9 + 13) = *((void *)v10 + 13);
    *((void *)v9 + 14) = v32;
    uint64_t v18 = *((void *)v10 + 16);
    *((void *)v9 + 15) = *((void *)v10 + 15);
    *((void *)v9 + 16) = v18;
    id v33 = (void *)*((void *)v10 + 18);
    *((void *)v9 + 17) = *((void *)v10 + 17);
    *((void *)v9 + 18) = v33;
    uint64_t v34 = (void *)*((void *)v10 + 19);
    float v35 = (void *)*((void *)v10 + 20);
    *((void *)v9 + 19) = v34;
    *((void *)v9 + 20) = v35;
    uint64_t v19 = (void *)*((void *)v10 + 21);
    long long v37 = (void *)*((void *)v10 + 22);
    *((void *)v9 + 21) = v19;
    *((void *)v9 + 22) = v37;
    id v36 = v19;
    long long v38 = (void *)*((void *)v10 + 24);
    *((void *)v9 + 23) = *((void *)v10 + 23);
    *((void *)v9 + 24) = v38;
    id v20 = v11;
    id v21 = v12;
    id v22 = v14;
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v23 = v33;
    id v24 = v34;
    id v25 = v35;
    id v26 = v36;
    id v27 = v37;
    swift_unknownObjectRetain();
    id v28 = v38;
  }
  return a1;
}

void destroy for ImageSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = *(void **)(v5 + 192);
}

uint64_t initializeWithCopy for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void **)v9;
  uint64_t v11 = *(void **)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v13 = *(void **)(v9 + 24);
  uint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v12;
  uint64_t v14 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v14;
  uint64_t v15 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = v15;
  uint64_t v16 = *(void *)(v9 + 80);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(void *)(v8 + 80) = v16;
  uint64_t v17 = *(void *)(v9 + 96);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  *(void *)(v8 + 96) = v17;
  uint64_t v18 = *(void *)(v9 + 112);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  *(void *)(v8 + 112) = v18;
  uint64_t v19 = *(void *)(v9 + 128);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  *(void *)(v8 + 128) = v19;
  uint64_t v31 = *(void **)(v9 + 144);
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  *(void *)(v8 + 144) = v31;
  uint64_t v32 = *(void **)(v9 + 152);
  id v33 = *(void **)(v9 + 160);
  *(void *)(v8 + 152) = v32;
  *(void *)(v8 + 160) = v33;
  id v20 = *(void **)(v9 + 168);
  float v35 = *(void **)(v9 + 176);
  *(void *)(v8 + 168) = v20;
  *(void *)(v8 + 176) = v35;
  uint64_t v34 = v20;
  id v36 = *(void **)(v9 + 192);
  *(void *)(v8 + 184) = *(void *)(v9 + 184);
  *(void *)(v8 + 192) = v36;
  id v21 = v10;
  id v22 = v11;
  id v23 = v13;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v24 = v31;
  id v25 = v32;
  id v26 = v33;
  id v27 = v34;
  id v28 = v35;
  swift_unknownObjectRetain();
  id v29 = v36;
  return a1;
}

uint64_t assignWithCopy for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void **)v9;
  uint64_t v11 = *(void **)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  id v12 = v10;

  uint64_t v13 = *(void **)(v9 + 8);
  uint64_t v14 = *(void **)(v8 + 8);
  *(void *)(v8 + 8) = v13;
  id v15 = v13;

  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v16 = *(void **)(v9 + 24);
  uint64_t v17 = *(void **)(v8 + 24);
  *(void *)(v8 + 24) = v16;
  id v18 = v16;

  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_retain();
  swift_release();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v19 = *(void **)(v9 + 144);
  id v20 = *(void **)(v8 + 144);
  *(void *)(v8 + 144) = v19;
  id v21 = v19;

  id v22 = *(void **)(v9 + 152);
  id v23 = *(void **)(v8 + 152);
  *(void *)(v8 + 152) = v22;
  id v24 = v22;

  id v25 = *(void **)(v9 + 160);
  id v26 = *(void **)(v8 + 160);
  *(void *)(v8 + 160) = v25;
  id v27 = v25;

  id v28 = *(void **)(v9 + 168);
  id v29 = *(void **)(v8 + 168);
  *(void *)(v8 + 168) = v28;
  id v30 = v28;

  uint64_t v31 = *(void **)(v9 + 176);
  uint64_t v32 = *(void **)(v8 + 176);
  *(void *)(v8 + 176) = v31;
  id v33 = v31;

  *(void *)(v8 + 184) = *(void *)(v9 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v34 = *(void **)(v8 + 192);
  float v35 = *(void **)(v9 + 192);
  *(void *)(v8 + 192) = v35;
  id v36 = v35;

  return a1;
}

uint64_t initializeWithTake for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v10;
  *(void *)(v8 + 192) = *(void *)(v9 + 192);
  long long v11 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v11;
  long long v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  long long v13 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v13;
  long long v14 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  return a1;
}

uint64_t assignWithTake for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)v9;

  long long v11 = *(void **)(v8 + 8);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);

  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  long long v12 = *(void **)(v8 + 24);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);

  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_release();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_unknownObjectRelease();
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_unknownObjectRelease();
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_unknownObjectRelease();
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_unknownObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  swift_unknownObjectRelease();
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  swift_unknownObjectRelease();
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_unknownObjectRelease();
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_unknownObjectRelease();
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  swift_unknownObjectRelease();
  uint64_t v13 = *(void *)(v9 + 128);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  *(void *)(v8 + 128) = v13;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  swift_unknownObjectRelease();
  long long v14 = *(void **)(v8 + 144);
  *(void *)(v8 + 144) = *(void *)(v9 + 144);

  long long v15 = *(void **)(v8 + 152);
  *(void *)(v8 + 152) = *(void *)(v9 + 152);

  uint64_t v16 = *(void **)(v8 + 160);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);

  uint64_t v17 = *(void **)(v8 + 168);
  *(void *)(v8 + 168) = *(void *)(v9 + 168);

  id v18 = *(void **)(v8 + 176);
  *(void *)(v8 + 176) = *(void *)(v9 + 176);

  *(void *)(v8 + 184) = *(void *)(v9 + 184);
  swift_unknownObjectRelease();
  uint64_t v19 = *(void **)(v8 + 192);
  *(void *)(v8 + 192) = *(void *)(v9 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528C19CC);
}

uint64_t sub_2528C19CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ImageSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528C1AA0);
}

uint64_t sub_2528C1AA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_252951268();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2528C1B5C()
{
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2528C1BF0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528C1C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528C1CB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2528C1D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2528C1D88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2528C1DE8()
{
  sub_2528C1E54(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MotionDataSource()
{
  return self;
}

uint64_t sub_2528C1E54(uint64_t a1)
{
  return a1;
}

uint64_t SceneDescriptor.skeletons.getter()
{
  v1[41] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  uint64_t v2 = sub_252951A08();
  v1[65] = v2;
  v1[66] = *(void *)(v2 - 8);
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  uint64_t v3 = swift_task_alloc();
  v1[73] = v3;
  v1[35] = 0xD00000000000001DLL;
  v1[36] = 0x800000025295A150;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[74] = (uint64_t)v4;
  void *v4 = v1;
  v4[1] = sub_2528C2048;
  return SceneDescriptor.tensor(for:)(v3, v1 + 35);
}

uint64_t sub_2528C2048()
{
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528C3E24;
  }
  else {
    uint64_t v2 = sub_2528C215C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528C215C()
{
  uint64_t v1 = sub_2529518F8();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[41];
    v0[76] = *(void *)(v1 + 32);
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for SceneDescriptor();
    v0[77] = v3;
    v0[78] = *(void *)(v2 + *(int *)(v3 + 24));
    v0[79] = sub_252951908();
    v0[39] = 0xD00000000000001DLL;
    v0[40] = 0x800000025295A170;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[80] = v4;
    void *v4 = v0;
    v4[1] = sub_2528C2378;
    uint64_t v5 = v0[72];
    return SceneDescriptor.tensor(for:)(v5, v0 + 39);
  }
  else
  {
    uint64_t v7 = v0[73];
    uint64_t v8 = v0[66];
    uint64_t v9 = v0[65];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v11 = MEMORY[0x263F8EE78];
    return v10(v11);
  }
}

uint64_t sub_2528C2378()
{
  *(void *)(*(void *)v1 + 648) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528C3F2C;
  }
  else {
    uint64_t v2 = sub_2528C248C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528C248C()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  uint64_t v4 = sub_252951908();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[82] = v4;
  v0[37] = 0xD00000000000001DLL;
  v0[38] = 0x800000025295A190;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[83] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528C2594;
  uint64_t v6 = v0[71];
  return SceneDescriptor.tensor(for:)(v6, v0 + 37);
}

uint64_t sub_2528C2594()
{
  *(void *)(*(void *)v1 + 672) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528C3FF8;
  }
  else {
    uint64_t v2 = sub_2528C26A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528C26A8()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  uint64_t v4 = sub_252951908();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[85] = v4;
  v0[33] = 0xD00000000000001ALL;
  v0[34] = 0x800000025295A1D0;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[86] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528C27B0;
  uint64_t v6 = v0[70];
  return SceneDescriptor.tensor(for:)(v6, v0 + 33);
}

uint64_t sub_2528C27B0()
{
  *(void *)(*(void *)v1 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2528C40C4;
  }
  else
  {
    uint64_t v2 = sub_2528C28CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_2528C28CC()
{
  uint64_t v1 = *(void *)(v0 + 608);
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 656);
    uint64_t v3 = *(void *)(v0 + 632);
    uint64_t v4 = *(void *)(v0 + 624);
    uint64_t v5 = *(void *)(v0 + 528);
    uint64_t v6 = *(void *)(v4 + 16);
    *(void *)(v0 + 704) = v6;
    *(void *)(v0 + 720) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 712) = 0;
    if (v6)
    {
      if (*(void *)(v4 + 16))
      {
        uint64_t v7 = *(void *)(v4 + 64);
        long long v9 = *(_OWORD *)(v4 + 32);
        long long v8 = *(_OWORD *)(v4 + 48);
        *(_OWORD *)(v0 + 168) = v9;
        *(_OWORD *)(v0 + 184) = v8;
        *(void *)(v0 + 200) = v7;
        *(unsigned char *)(v0 + 208) = 0;
        if (*(void *)(v3 + 16))
        {
          uint64_t v53 = v9;
          unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          uint64_t v11 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
          v11(*(void *)(v0 + 536), v3 + v10, *(void *)(v0 + 520));
          if (!v2)
          {
            uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
            v16(*(void *)(v0 + 496), 1, 1, *(void *)(v0 + 520));
            uint64_t v17 = *(void *)(v0 + 680);
            if (v17)
            {
LABEL_9:
              if (*(void *)(v17 + 16))
              {
                v11(*(void *)(v0 + 488), v17 + v10, *(void *)(v0 + 520));
                uint64_t v18 = 0;
LABEL_22:
                uint64_t v33 = *(void *)(v0 + 616);
                unint64_t v34 = *(void *)(v0 + 560);
                uint64_t v35 = *(void *)(v0 + 544);
                uint64_t v36 = *(void *)(v0 + 520);
                uint64_t v37 = *(void *)(v0 + 328);
                v16(*(void *)(v0 + 488), v18, 1, v36);
                *(unsigned char *)(v0 + 161) = *(unsigned char *)(v37 + *(int *)(v33 + 28));
                long long v38 = (unsigned char *)(v0 + 161);
                v11(v35, v34, v36);
                id v39 = (void *)swift_task_alloc();
                *(void *)(v0 + 736) = v39;
                *id v39 = v0;
                v39[1] = sub_2528C3648;
                uint64_t v40 = *(void *)(v0 + 544);
                uint64_t v41 = *(void *)(v0 + 536);
                uint64_t v43 = *(void *)(v0 + 488);
                uint64_t v42 = *(void *)(v0 + 496);
                uint64_t v44 = v53;
                uint64_t v45 = v0 + 336;
                uint64_t v46 = v0 + 168;
LABEL_26:
                sub_2528D2708(v45, v44, v46, v41, v42, v43, v38, v40);
                return;
              }
              goto LABEL_33;
            }
LABEL_21:
            uint64_t v18 = 1;
            goto LABEL_22;
          }
          uint64_t v12 = *(void *)(v0 + 656);
          if (*(void *)(v12 + 16))
          {
            uint64_t v13 = *(void *)(v0 + 528);
            uint64_t v14 = *(void *)(v0 + 520);
            uint64_t v15 = *(void *)(v0 + 496);
            v11(v15, v12 + v10, v14);
            uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
            v16(v15, 0, 1, v14);
            uint64_t v17 = *(void *)(v0 + 680);
            if (v17) {
              goto LABEL_9;
            }
            goto LABEL_21;
          }
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    *(void *)(v0 + 248) = 0;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(unsigned char *)(v0 + 256) = 1;
    if (!*(void *)(v3 + 16))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    v25(*(void *)(v0 + 552), v3 + v24, *(void *)(v0 + 520));
    if (v2)
    {
      uint64_t v26 = *(void *)(v0 + 656);
      if (!*(void *)(v26 + 16))
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v27 = *(void *)(v0 + 528);
      uint64_t v28 = *(void *)(v0 + 520);
      uint64_t v29 = *(void *)(v0 + 512);
      v25(v29, v26 + v24, v28);
      id v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
      v30(v29, 0, 1, v28);
      uint64_t v31 = *(void *)(v0 + 680);
      if (v31) {
        goto LABEL_18;
      }
    }
    else
    {
      id v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
      v30(*(void *)(v0 + 512), 1, 1, *(void *)(v0 + 520));
      uint64_t v31 = *(void *)(v0 + 680);
      if (v31)
      {
LABEL_18:
        if (!*(void *)(v31 + 16))
        {
LABEL_36:
          __break(1u);
          return;
        }
        v25(*(void *)(v0 + 504), v31 + v24, *(void *)(v0 + 520));
        uint64_t v32 = 0;
LABEL_25:
        uint64_t v47 = *(void *)(v0 + 616);
        unint64_t v48 = *(void *)(v0 + 560);
        uint64_t v49 = *(void *)(v0 + 544);
        uint64_t v50 = *(void *)(v0 + 520);
        uint64_t v51 = *(void *)(v0 + 328);
        v30(*(void *)(v0 + 504), v32, 1, v50);
        *(unsigned char *)(v0 + 162) = *(unsigned char *)(v51 + *(int *)(v47 + 28));
        long long v38 = (unsigned char *)(v0 + 162);
        v25(v49, v48, v50);
        float32x4_t v52 = (void *)swift_task_alloc();
        *(void *)(v0 + 728) = v52;
        *float32x4_t v52 = v0;
        v52[1] = sub_2528C2E50;
        uint64_t v41 = *(void *)(v0 + 552);
        uint64_t v40 = *(void *)(v0 + 544);
        uint64_t v43 = *(void *)(v0 + 504);
        uint64_t v42 = *(void *)(v0 + 512);
        uint64_t v45 = v0 + 16;
        uint64_t v44 = 0;
        uint64_t v46 = v0 + 216;
        goto LABEL_26;
      }
    }
    uint64_t v32 = 1;
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v0 + 584);
  uint64_t v20 = *(void *)(v0 + 520);
  id v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 528) + 8);
  v21(*(void *)(v0 + 560), v20);
  v21(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = *(void (**)(uint64_t))(v0 + 8);
  uint64_t v23 = MEMORY[0x263F8EE78];
  v22(v23);
}

uint64_t sub_2528C2E50()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528C2F4C, 0, 0);
}

uint64_t sub_2528C2F4C()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v74 = *(void *)(v0 + 80);
  uint64_t v75 = *(void *)(v0 + 16);
  long long v80 = *(_OWORD *)(v0 + 96);
  long long v82 = *(_OWORD *)(v0 + 32);
  long long v77 = *(_OWORD *)(v0 + 128);
  long long v78 = *(_OWORD *)(v0 + 112);
  long long v76 = *(_OWORD *)(v0 + 144);
  char v72 = *(unsigned char *)(v0 + 160);
  char v73 = *(unsigned char *)(v0 + 88);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void **)(v0 + 720);
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2528C48EC(0, v7[2] + 1, 1, *(void **)(v0 + 720));
    uint64_t v7 = (void *)result;
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_2528C48EC((void *)(v8 > 1), v9 + 1, 1, v7);
    uint64_t v7 = (void *)result;
  }
  uint64_t v10 = *(void *)(v0 + 608);
  uint64_t v11 = *(void *)(v0 + 712) + 1;
  v7[2] = v9 + 1;
  uint64_t v12 = &v7[20 * v9];
  v12[4] = v75;
  *((unsigned char *)v12 + 40) = v1;
  *((_OWORD *)v12 + 3) = v82;
  v12[8] = v2;
  v12[9] = v3;
  v12[10] = v4;
  v12[11] = v5;
  v12[12] = v74;
  *((unsigned char *)v12 + 104) = v73;
  *((_OWORD *)v12 + 7) = v80;
  *((_OWORD *)v12 + 8) = v78;
  *((_OWORD *)v12 + 9) = v77;
  *((_OWORD *)v12 + 10) = v76;
  *((unsigned char *)v12 + 176) = v72;
  if (v11 == v10)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v0 + 584);
    uint64_t v14 = *(void *)(v0 + 520);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 528) + 8);
    v15(*(void *)(v0 + 560), v14);
    v15(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void *))(v0 + 8);
    return v16(v7);
  }
  unint64_t v17 = *(void *)(v0 + 712) + 1;
  *(void *)(v0 + 720) = v7;
  *(void *)(v0 + 712) = v17;
  if (!*(void *)(v0 + 704))
  {
    uint64_t v39 = *(void *)(v0 + 632);
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(void *)(v0 + 248) = 0;
    *(unsigned char *)(v0 + 256) = 1;
    if (v17 >= *(void *)(v39 + 16))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v40 = *(void *)(v0 + 656);
    uint64_t v41 = *(void *)(v0 + 528);
    uint64_t v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v41 + 16);
    v41 += 16;
    unint64_t v43 = (*(unsigned __int8 *)(v41 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 64);
    unint64_t v44 = *(void *)(v41 + 56) * v17;
    uint64_t result = ((uint64_t (*)(void, unint64_t, void))v42)(*(void *)(v0 + 552), v39 + v43 + v44, *(void *)(v0 + 520));
    uint64_t v84 = v42;
    if (v40)
    {
      uint64_t v45 = *(void *)(v0 + 656);
      if (v17 >= *(void *)(v45 + 16))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v46 = *(void *)(v0 + 528);
      uint64_t v47 = *(void *)(v0 + 520);
      uint64_t v48 = *(void *)(v0 + 512);
      v84(v48, v45 + v43 + v44, v47);
      uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
      uint64_t result = v79(v48, 0, 1, v47);
      uint64_t v49 = *(void *)(v0 + 680);
      if (v49) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
      uint64_t result = v79(*(void *)(v0 + 512), 1, 1, *(void *)(v0 + 520));
      uint64_t v49 = *(void *)(v0 + 680);
      if (v49)
      {
LABEL_21:
        if (v17 >= *(void *)(v49 + 16))
        {
LABEL_38:
          __break(1u);
          return result;
        }
        uint64_t v50 = (void (*)(uint64_t, uint64_t, uint64_t))v84;
        v84(*(void *)(v0 + 504), v49 + v43 + v44, *(void *)(v0 + 520));
        uint64_t v51 = 0;
LABEL_28:
        uint64_t v66 = *(void *)(v0 + 616);
        uint64_t v67 = *(void *)(v0 + 560);
        uint64_t v68 = *(void *)(v0 + 544);
        uint64_t v69 = *(void *)(v0 + 520);
        uint64_t v70 = *(void *)(v0 + 328);
        v79(*(void *)(v0 + 504), v51, 1, v69);
        *(unsigned char *)(v0 + 162) = *(unsigned char *)(v70 + *(int *)(v66 + 28));
        long long v57 = (unsigned char *)(v0 + 162);
        v50(v68, v67, v69);
        uint64_t v71 = (void *)swift_task_alloc();
        *(void *)(v0 + 728) = v71;
        *uint64_t v71 = v0;
        v71[1] = sub_2528C2E50;
        uint64_t v60 = *(void *)(v0 + 552);
        uint64_t v59 = *(void *)(v0 + 544);
        uint64_t v62 = *(void *)(v0 + 504);
        uint64_t v61 = *(void *)(v0 + 512);
        uint64_t v63 = v0 + 16;
        uint64_t v64 = v17;
        uint64_t v65 = v0 + 216;
        goto LABEL_29;
      }
    }
    uint64_t v51 = 1;
    uint64_t v50 = (void (*)(uint64_t, uint64_t, uint64_t))v84;
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v0 + 624);
  if (v17 >= *(void *)(v18 + 16))
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v19 = *(void *)(v0 + 632);
  uint64_t v20 = v18 + 40 * v17;
  uint64_t v22 = *(void *)(v20 + 32);
  uint64_t v21 = *(void *)(v20 + 40);
  uint64_t v23 = *(void *)(v20 + 48);
  long long v24 = *(_OWORD *)(v20 + 56);
  *(void *)(v0 + 168) = v22;
  *(void *)(v0 + 176) = v21;
  *(void *)(v0 + 184) = v23;
  *(_OWORD *)(v0 + 192) = v24;
  *(unsigned char *)(v0 + 208) = 0;
  if (v17 >= *(void *)(v19 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v83 = v22;
  uint64_t v25 = *(void *)(v0 + 656);
  uint64_t v26 = *(void *)(v0 + 528);
  uint64_t v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
  v26 += 16;
  uint64_t v27 = v28;
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
  unint64_t v30 = *(void *)(v26 + 56) * v17;
  uint64_t result = ((uint64_t (*)(void, unint64_t, void))v28)(*(void *)(v0 + 536), v19 + v29 + v30, *(void *)(v0 + 520));
  uint64_t v81 = (void (*)(uint64_t, uint64_t, uint64_t))v28;
  if (v25)
  {
    uint64_t v31 = *(void *)(v0 + 656);
    if (v17 < *(void *)(v31 + 16))
    {
      uint64_t v32 = *(void *)(v0 + 528);
      uint64_t v33 = *(void *)(v0 + 520);
      uint64_t v34 = *(void *)(v0 + 496);
      v27(v34, v31 + v29 + v30, v33);
      uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      uint64_t result = v35(v34, 0, 1, v33);
      uint64_t v36 = *(void *)(v0 + 680);
      if (v36) {
        goto LABEL_15;
      }
LABEL_24:
      uint64_t v38 = 1;
      uint64_t v37 = v81;
      goto LABEL_25;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
  uint64_t result = v35(*(void *)(v0 + 496), 1, 1, *(void *)(v0 + 520));
  uint64_t v36 = *(void *)(v0 + 680);
  if (!v36) {
    goto LABEL_24;
  }
LABEL_15:
  if (v17 >= *(void *)(v36 + 16))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v37 = v81;
  v81(*(void *)(v0 + 488), v36 + v29 + v30, *(void *)(v0 + 520));
  uint64_t v38 = 0;
LABEL_25:
  uint64_t v52 = *(void *)(v0 + 616);
  uint64_t v53 = *(void *)(v0 + 560);
  uint64_t v54 = *(void *)(v0 + 544);
  uint64_t v55 = *(void *)(v0 + 520);
  uint64_t v56 = *(void *)(v0 + 328);
  v35(*(void *)(v0 + 488), v38, 1, v55);
  *(unsigned char *)(v0 + 161) = *(unsigned char *)(v56 + *(int *)(v52 + 28));
  long long v57 = (unsigned char *)(v0 + 161);
  v37(v54, v53, v55);
  long long v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 736) = v58;
  *long long v58 = v0;
  v58[1] = sub_2528C3648;
  uint64_t v59 = *(void *)(v0 + 544);
  uint64_t v60 = *(void *)(v0 + 536);
  uint64_t v62 = *(void *)(v0 + 488);
  uint64_t v61 = *(void *)(v0 + 496);
  uint64_t v63 = v0 + 336;
  uint64_t v64 = v83;
  uint64_t v65 = v0 + 168;
LABEL_29:
  return sub_2528D2708(v63, v64, v65, v60, v61, v62, v57, v59);
}

uint64_t sub_2528C3648()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528C3744, 0, 0);
}

uint64_t sub_2528C3744()
{
  uint64_t v1 = *(void *)(v0 + 336);
  char v2 = *(unsigned char *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v75 = *(void *)(v0 + 400);
  long long v79 = *(_OWORD *)(v0 + 416);
  long long v80 = *(_OWORD *)(v0 + 352);
  long long v77 = *(_OWORD *)(v0 + 448);
  long long v78 = *(_OWORD *)(v0 + 432);
  long long v76 = *(_OWORD *)(v0 + 464);
  char v73 = *(unsigned char *)(v0 + 480);
  char v74 = *(unsigned char *)(v0 + 408);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v8 = *(void **)(v0 + 720);
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2528C48EC(0, v8[2] + 1, 1, *(void **)(v0 + 720));
    unint64_t v8 = (void *)result;
  }
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_2528C48EC((void *)(v9 > 1), v10 + 1, 1, v8);
    unint64_t v8 = (void *)result;
  }
  uint64_t v11 = *(void *)(v0 + 608);
  uint64_t v12 = *(void *)(v0 + 712) + 1;
  v8[2] = v10 + 1;
  uint64_t v13 = &v8[20 * v10];
  v13[4] = v1;
  *((unsigned char *)v13 + 40) = v2;
  *((_OWORD *)v13 + 3) = v80;
  v13[8] = v3;
  v13[9] = v4;
  v13[10] = v5;
  v13[11] = v6;
  v13[12] = v75;
  *((unsigned char *)v13 + 104) = v74;
  *((_OWORD *)v13 + 7) = v79;
  *((_OWORD *)v13 + 8) = v78;
  *((_OWORD *)v13 + 9) = v77;
  *((_OWORD *)v13 + 10) = v76;
  *((unsigned char *)v13 + 176) = v73;
  if (v12 == v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v0 + 584);
    uint64_t v15 = *(void *)(v0 + 520);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 528) + 8);
    v16(*(void *)(v0 + 560), v15);
    v16(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v17 = *(uint64_t (**)(void *))(v0 + 8);
    return v17(v8);
  }
  unint64_t v18 = *(void *)(v0 + 712) + 1;
  *(void *)(v0 + 720) = v8;
  *(void *)(v0 + 712) = v18;
  if (!*(void *)(v0 + 704))
  {
    uint64_t v39 = *(void *)(v0 + 632);
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(void *)(v0 + 248) = 0;
    *(unsigned char *)(v0 + 256) = 1;
    if (v18 >= *(void *)(v39 + 16))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v40 = *(void *)(v0 + 656);
    uint64_t v41 = *(void *)(v0 + 528);
    unint64_t v43 = *(void (**)(uint64_t, unint64_t, uint64_t))(v41 + 16);
    v41 += 16;
    uint64_t v42 = v43;
    unint64_t v44 = (*(unsigned __int8 *)(v41 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 64);
    unint64_t v45 = *(void *)(v41 + 56) * v18;
    uint64_t result = ((uint64_t (*)(void, unint64_t, void))v43)(*(void *)(v0 + 552), v39 + v44 + v45, *(void *)(v0 + 520));
    if (v40)
    {
      uint64_t v46 = *(void *)(v0 + 656);
      if (v18 >= *(void *)(v46 + 16))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v47 = *(void *)(v0 + 528);
      uint64_t v48 = *(void *)(v0 + 520);
      uint64_t v49 = *(void *)(v0 + 512);
      v42(v49, v46 + v44 + v45, v48);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
      uint64_t result = v50(v49, 0, 1, v48);
      uint64_t v51 = *(void *)(v0 + 680);
      if (v51) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
      uint64_t result = v50(*(void *)(v0 + 512), 1, 1, *(void *)(v0 + 520));
      uint64_t v51 = *(void *)(v0 + 680);
      if (v51)
      {
LABEL_21:
        if (v18 >= *(void *)(v51 + 16))
        {
LABEL_38:
          __break(1u);
          return result;
        }
        v42(*(void *)(v0 + 504), v51 + v44 + v45, *(void *)(v0 + 520));
        uint64_t v52 = 0;
LABEL_28:
        uint64_t v67 = *(void *)(v0 + 616);
        unint64_t v68 = *(void *)(v0 + 560);
        uint64_t v69 = *(void *)(v0 + 544);
        uint64_t v70 = *(void *)(v0 + 520);
        uint64_t v71 = *(void *)(v0 + 328);
        v50(*(void *)(v0 + 504), v52, 1, v70);
        *(unsigned char *)(v0 + 162) = *(unsigned char *)(v71 + *(int *)(v67 + 28));
        long long v58 = (unsigned char *)(v0 + 162);
        v42(v69, v68, v70);
        char v72 = (void *)swift_task_alloc();
        *(void *)(v0 + 728) = v72;
        *char v72 = v0;
        v72[1] = sub_2528C2E50;
        uint64_t v61 = *(void *)(v0 + 552);
        uint64_t v60 = *(void *)(v0 + 544);
        uint64_t v63 = *(void *)(v0 + 504);
        uint64_t v62 = *(void *)(v0 + 512);
        uint64_t v64 = v0 + 16;
        uint64_t v65 = v18;
        uint64_t v66 = v0 + 216;
        goto LABEL_29;
      }
    }
    uint64_t v52 = 1;
    goto LABEL_28;
  }
  uint64_t v19 = *(void *)(v0 + 624);
  if (v18 >= *(void *)(v19 + 16))
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)(v0 + 632);
  uint64_t v21 = v19 + 40 * v18;
  uint64_t v23 = *(void *)(v21 + 32);
  uint64_t v22 = *(void *)(v21 + 40);
  uint64_t v24 = *(void *)(v21 + 48);
  long long v25 = *(_OWORD *)(v21 + 56);
  *(void *)(v0 + 168) = v23;
  *(void *)(v0 + 176) = v22;
  *(void *)(v0 + 184) = v24;
  *(_OWORD *)(v0 + 192) = v25;
  *(unsigned char *)(v0 + 208) = 0;
  if (v18 >= *(void *)(v20 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v81 = v23;
  uint64_t v26 = *(void *)(v0 + 656);
  uint64_t v27 = *(void *)(v0 + 528);
  unint64_t v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 16);
  v27 += 16;
  uint64_t v28 = v29;
  unint64_t v30 = (*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64);
  unint64_t v31 = *(void *)(v27 + 56) * v18;
  uint64_t result = ((uint64_t (*)(void, unint64_t, void))v29)(*(void *)(v0 + 536), v20 + v30 + v31, *(void *)(v0 + 520));
  if (v26)
  {
    uint64_t v32 = *(void *)(v0 + 656);
    if (v18 < *(void *)(v32 + 16))
    {
      uint64_t v33 = *(void *)(v0 + 528);
      uint64_t v34 = *(void *)(v0 + 520);
      uint64_t v35 = *(void *)(v0 + 496);
      v28(v35, v32 + v30 + v31, v34);
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      uint64_t result = v36(v35, 0, 1, v34);
      uint64_t v37 = *(void *)(v0 + 680);
      if (v37) {
        goto LABEL_15;
      }
LABEL_24:
      uint64_t v38 = 1;
      goto LABEL_25;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 56);
  uint64_t result = v36(*(void *)(v0 + 496), 1, 1, *(void *)(v0 + 520));
  uint64_t v37 = *(void *)(v0 + 680);
  if (!v37) {
    goto LABEL_24;
  }
LABEL_15:
  if (v18 >= *(void *)(v37 + 16))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v28(*(void *)(v0 + 488), v37 + v30 + v31, *(void *)(v0 + 520));
  uint64_t v38 = 0;
LABEL_25:
  uint64_t v53 = *(void *)(v0 + 616);
  unint64_t v54 = *(void *)(v0 + 560);
  uint64_t v55 = *(void *)(v0 + 544);
  uint64_t v56 = *(void *)(v0 + 520);
  uint64_t v57 = *(void *)(v0 + 328);
  v36(*(void *)(v0 + 488), v38, 1, v56);
  *(unsigned char *)(v0 + 161) = *(unsigned char *)(v57 + *(int *)(v53 + 28));
  long long v58 = (unsigned char *)(v0 + 161);
  v28(v55, v54, v56);
  uint64_t v59 = (void *)swift_task_alloc();
  *(void *)(v0 + 736) = v59;
  *uint64_t v59 = v0;
  v59[1] = sub_2528C3648;
  uint64_t v60 = *(void *)(v0 + 544);
  uint64_t v61 = *(void *)(v0 + 536);
  uint64_t v63 = *(void *)(v0 + 488);
  uint64_t v62 = *(void *)(v0 + 496);
  uint64_t v64 = v0 + 336;
  uint64_t v65 = v81;
  uint64_t v66 = v0 + 168;
LABEL_29:
  return sub_2528D2708(v64, v65, v66, v61, v62, v63, v58, v60);
}

uint64_t sub_2528C3E24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = MEMORY[0x263F8EE78];
  return v1(v2);
}

uint64_t sub_2528C3F2C()
{
  *(void *)(v0 + 656) = 0;
  *(void *)(v0 + 296) = 0xD00000000000001DLL;
  *(void *)(v0 + 304) = 0x800000025295A190;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v1;
  void *v1 = v0;
  v1[1] = sub_2528C2594;
  uint64_t v2 = *(void *)(v0 + 568);
  return SceneDescriptor.tensor(for:)(v2, (uint64_t *)(v0 + 296));
}

uint64_t sub_2528C3FF8()
{
  *(void *)(v0 + 680) = 0;
  *(void *)(v0 + 264) = 0xD00000000000001ALL;
  *(void *)(v0 + 272) = 0x800000025295A1D0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v1;
  void *v1 = v0;
  v1[1] = sub_2528C27B0;
  uint64_t v2 = *(void *)(v0 + 560);
  return SceneDescriptor.tensor(for:)(v2, (uint64_t *)(v0 + 264));
}

uint64_t sub_2528C40C4()
{
  uint64_t v1 = (void *)v0[87];
  (*(void (**)(void, void))(v0[66] + 8))(v0[73], v0[65]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = MEMORY[0x263F8EE78];
  return v2(v3);
}

char *sub_2528C4204(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2528C5474(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2528C4314(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F78);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_252951F18();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2528C5560(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_2528C4584(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2528C4FC0(a1, a2, a3, a4, &qword_269C31C98, MEMORY[0x263F00C20], MEMORY[0x263F00C20]);
}

char *sub_2528C45A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31FC0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2528C56BC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C46B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F88);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2528C57A8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C47C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C5894(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C48EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31FB8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C5988(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C4A0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31FA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2528C5A80(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C4B1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2528C5B6C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C4C2C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31FB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C5D48(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C4D50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31FA8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 416);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[52 * v8 + 4]) {
          memmove(v12, a4 + 4, 416 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C5E40(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C4E78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CA8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C5C58(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2528C4F9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2528C4FC0(a1, a2, a3, a4, &qword_269C31F90, type metadata accessor for VideoSource.ImageDescriptors, type metadata accessor for VideoSource.ImageDescriptors);
}

uint64_t sub_2528C4FC0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_252951F18();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2528C5F34(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_2528C5240(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2528C6188(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2528C5350(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F80);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2528C6090(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2528C5474(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5560(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C56BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C57A8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5894(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5988(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C5A80(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C5B6C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + (a1 << 6) + 32);
    size_t v6 = v4 << 6;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C5C58(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
    size_t v6 = 40 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5D48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5E40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 416 * a1 + 32;
    unint64_t v6 = a3 + 416 * v4;
    if (v5 >= v6 || v5 + 416 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C5F34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528C6090(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

char *sub_2528C6188(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_252951F78();
  __break(1u);
  return result;
}

id sub_2528C6350(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F6E5F7365736F70 && a2 == 0xEA00000000006D72;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    size_t v6 = (void *)(v2 + 16);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 29800 && a2 == 0xE200000000000000 || (sub_252952108() & 1) != 0)
  {
    size_t v6 = (void *)(v2 + 24);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_2528C64A8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PalermoInput()
{
  return self;
}

uint64_t sub_2528C6658()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PalermoOutput()
{
  return self;
}

uint64_t sub_2528C66B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_252951AB8();
  unint64_t v5 = (void *)sub_252951AB8();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    uint64_t v10 = sub_252951268();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_252951238();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v9, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v9, v10);
    }
  }
  else
  {
    uint64_t v16 = sub_252951268();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  __break(1u);
  return result;
}

uint64_t sub_2528C6930()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Palermo()
{
  return self;
}

uint64_t type metadata accessor for ShirazInput()
{
  return self;
}

uint64_t type metadata accessor for ShirazOutput()
{
  return self;
}

uint64_t sub_2528C6CC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_252951AB8();
  unint64_t v5 = (void *)sub_252951AB8();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    uint64_t v10 = sub_252951268();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_252951238();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v9, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v9, v10);
    }
  }
  else
  {
    uint64_t v16 = sub_252951268();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Shiraz()
{
  return self;
}

uint64_t type metadata accessor for TangoInput()
{
  return self;
}

uint64_t type metadata accessor for TangoOutput()
{
  return self;
}

uint64_t sub_2528C72C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_252951AB8();
  unint64_t v5 = (void *)sub_252951AB8();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    uint64_t v10 = sub_252951268();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_252951238();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v9, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v9, v10);
    }
  }
  else
  {
    uint64_t v16 = sub_252951268();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Tango()
{
  return self;
}

uint64_t type metadata accessor for TaorminaInput()
{
  return self;
}

uint64_t type metadata accessor for TaorminaOutput()
{
  return self;
}

uint64_t sub_2528C7840@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_252951AB8();
  unint64_t v5 = (void *)sub_252951AB8();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    uint64_t v10 = sub_252951268();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_252951238();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v9, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v9, v10);
    }
  }
  else
  {
    uint64_t v16 = sub_252951268();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Taormina()
{
  return self;
}

uint64_t getEnumTagSinglePayload for BodySkeleton3DEstimatorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BodySkeleton3DEstimatorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528C7C3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodySkeleton3DEstimatorType()
{
  return &type metadata for BodySkeleton3DEstimatorType;
}

unint64_t sub_2528C7C78()
{
  unint64_t result = qword_269C31FC8;
  if (!qword_269C31FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31FC8);
  }
  return result;
}

void *sub_2528C7CCC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    int v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for BodyPose2DEstimator();
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    v8((void *)((char *)a1 + v10), (void *)((char *)a2 + v10), v7);
    uint64_t v13 = type metadata accessor for GaussianFilter();
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    uint64_t v14 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_2528C7E44(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for BodyPose2DEstimator();
  v3(a1 + *(int *)(v4 + 20), v2);
  v3(a1 + *(int *)(v4 + 24), v2);

  return swift_release();
}

uint64_t sub_2528C7F04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  int v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t sub_2528C8030(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  int v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2528C8174(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  int v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2528C829C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  int v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_release();
  uint64_t v13 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2528C83CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528C83E0);
}

uint64_t sub_2528C83E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BodyPose2DEstimator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_2528C849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528C84B0);
}

uint64_t sub_2528C84B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BodyPose2DEstimator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for HiFiBodyPose2DEstimator()
{
  uint64_t result = qword_269C31FD0;
  if (!qword_269C31FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528C85B8()
{
  uint64_t result = type metadata accessor for BodyPose2DEstimator();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2528C8664(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for SceneDescriptor();
  v3[8] = swift_task_alloc();
  uint64_t v4 = sub_252951598();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528C8818, 0, 0);
}

uint64_t sub_2528C8818()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  id v3 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v3, sel_systemUptime);
  double v5 = v4;
  *((double *)v0 + 23) = v4;

  uint64_t v6 = *(void *)(v2 + *(int *)(v1 + 24));
  v0[24] = v6;
  if (*(void *)(v6 + 16))
  {
    v0[2] = 0xD00000000000001DLL;
    v0[3] = 0x800000025295A0B0;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[25] = v7;
    void *v7 = v0;
    v7[1] = sub_2528C8A34;
    uint64_t v8 = v0[22];
    return SceneDescriptor.tensor(for:)(v8, v0 + 2);
  }
  else
  {
    uint64_t v10 = v0[4];
    uint64_t v11 = v0[5];
    sub_2528D01CC(7, v5);
    sub_2528CA438(v11, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_2528C8A34()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528C93C8;
  }
  else {
    uint64_t v2 = sub_2528C8B48;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528C8B48()
{
  unint64_t v1 = *(void *)(sub_2529518F8() + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v1 < 3)
  {
    __break(1u);
  }
  else
  {
    id v3 = (void *)swift_task_alloc();
    v0[27] = v3;
    *id v3 = v0;
    v3[1] = sub_2528C8C04;
    uint64_t v4 = v0[24];
    uint64_t v5 = v0[21];
    uint64_t v6 = v0[22];
    uint64_t v8 = v0[19];
    uint64_t v7 = v0[20];
    return sub_2528C95C8(v5, v7, v8, v6, v4);
  }
  return result;
}

uint64_t sub_2528C8C04(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2528C94BC;
  }
  else {
    uint64_t v4 = sub_2528C8D18;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528C8D18()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[6];
  sub_252951588();
  uint64_t v3 = swift_task_alloc();
  v0[30] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  void *v4 = v0;
  v4[1] = sub_2528C8DF8;
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  return MEMORY[0x270EE76C0](v5, v6, &unk_269C31FF8, v3, v7);
}

uint64_t sub_2528C8DF8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_2528C926C;
  }
  else {
    uint64_t v5 = sub_2528C8F8C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2528C8F8C()
{
  double v1 = v0[23];
  uint64_t v21 = *((void *)v0 + 22);
  uint64_t v18 = *((void *)v0 + 20);
  uint64_t v19 = *((void *)v0 + 21);
  uint64_t v2 = *((void *)v0 + 15);
  uint64_t v4 = *((void *)v0 + 13);
  uint64_t v3 = *((void *)v0 + 14);
  uint64_t v5 = *((void *)v0 + 12);
  uint64_t v6 = *((void *)v0 + 8);
  uint64_t v16 = *((void *)v0 + 7);
  uint64_t v17 = *((void *)v0 + 18);
  uint64_t v14 = *((void *)v0 + 19);
  uint64_t v15 = *((void *)v0 + 6);
  uint64_t v12 = *((void *)v0 + 16);
  uint64_t v13 = *((void *)v0 + 5);
  uint64_t v20 = *((void *)v0 + 4);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 32))(v17, *((void *)v0 + 17), v5);
  swift_bridgeObjectRelease();
  sub_252951738();
  sub_252951768();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v3, v5);
  sub_252951718();
  v7(v2, v5);
  sub_2528CA438(v13, v6);
  if (*(unsigned char *)(v15 + *(int *)(type metadata accessor for HiFiBodyPose2DEstimator() + 28))) {
    char v8 = 2;
  }
  else {
    char v8 = 1;
  }
  *(unsigned char *)(v6 + *(int *)(v16 + 28)) = v8;
  uint64_t v9 = v6 + *(int *)(v16 + 40);
  sub_2528AE5CC(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v9, v12, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v5);
  sub_2528D01CC(7, v1);
  v7(v12, v5);
  v7(v17, v5);
  v7(v14, v5);
  v7(v18, v5);
  v7(v19, v5);
  v7(v21, v5);
  sub_2528CA49C(v6, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v10();
}

uint64_t sub_2528C926C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(v3, v5);
  v7(v1, v5);
  v7(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2528C93C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528C94BC()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[22], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2528C95C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  uint64_t v7 = sub_252951598();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  uint64_t v8 = sub_252951A08();
  v6[18] = v8;
  v6[19] = *(void *)(v8 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528C9754, 0, 0);
}

void sub_2528C9754()
{
  float v90 = v0;
  uint64_t v1 = sub_2529518F8();
  if (*(void *)(v1 + 16) < 2uLL)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v2 = *(void *)(v1 + 40);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v4 = sub_2529518F8();
  if (*(void *)(v4 + 16) < 3uLL)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v5 = *(void *)(v4 + 48);
  swift_bridgeObjectRelease();
  if (__OFSUB__(v5, 1))
  {
LABEL_55:
    __break(1u);
    return;
  }
  uint64_t v6 = *(void *)(v0[12] + 16);
  if (v6)
  {
    float v7 = (float)v3;
    float v8 = (float)(v5 - 1);
    uint64_t v9 = v0[19];
    uint64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    uint64_t v71 = (void (**)(uint64_t, uint64_t))(v0[15] + 8);
    long long v80 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v68 = v9;
    uint64_t v10 = (_OWORD *)(swift_bridgeObjectRetain() + 56);
    unint64_t v11 = MEMORY[0x263F8EE78];
    unint64_t v12 = MEMORY[0x263F8EE78];
    unint64_t v83 = MEMORY[0x263F8EE78];
    unint64_t v84 = MEMORY[0x263F8EE78];
    uint64_t v69 = v0;
    while (1)
    {
      uint64_t v87 = *((void *)v10 - 3);
      long long v13 = *v10;
      long long v88 = *(v10 - 1);
      long long v89 = v13;
      float v17 = sub_2528CA2C4((float *)&v87, v8, v7);
      if (v15 <= -9.2234e18) {
        break;
      }
      float v18 = v15;
      if (v15 >= 9.2234e18) {
        goto LABEL_44;
      }
      if (v17 <= -9.2234e18) {
        goto LABEL_45;
      }
      if (v17 >= 9.2234e18) {
        goto LABEL_46;
      }
      float v19 = v16;
      if (v16 <= -9.2234e18) {
        goto LABEL_47;
      }
      if (v16 >= 9.2234e18) {
        goto LABEL_48;
      }
      float v20 = v14;
      if ((~LODWORD(v14) & 0x7F800000) == 0
        || (LODWORD(v16) & 0x7F800000) == 0x7F800000
        || (LODWORD(v15) & 0x7F800000) == 0x7F800000
        || (LODWORD(v17) & 0x7F800000) == 0x7F800000)
      {
        goto LABEL_49;
      }
      if (v14 <= -9.2234e18) {
        goto LABEL_50;
      }
      if (v14 >= 9.2234e18) {
        goto LABEL_51;
      }
      long long v77 = v10;
      uint64_t v78 = v6;
      unint64_t v81 = v12;
      uint64_t v21 = v0[26];
      uint64_t v22 = v0[18];
      uint64_t v23 = v0[11];
      sub_252951588();
      long long v76 = *v70;
      (*v70)(v21, v23, v22);
      uint64_t v24 = (void *)swift_task_alloc();
      void v24[2] = (uint64_t)v18;
      v24[3] = (uint64_t)v17;
      v24[4] = (uint64_t)v19;
      v24[5] = (uint64_t)v20;
      v24[6] = v21;
      sub_252951618();
      uint64_t v25 = v0[26];
      uint64_t v26 = v0[27];
      uint64_t v79 = v0[25];
      uint64_t v27 = v0[18];
      uint64_t v28 = v0[16];
      uint64_t v73 = v0[14];
      uint64_t v74 = v0[24];
      uint64_t v29 = v0[13];
      char v72 = *v71;
      ((void (*)(void))*v71)(v0[17]);
      swift_task_dealloc();
      uint64_t v75 = *v80;
      (*v80)(v25, v27);
      uint64_t v30 = v29 + *(int *)(type metadata accessor for HiFiBodyPose2DEstimator() + 24);
      LOBYTE(v25) = *(unsigned char *)v30;
      uint64_t v32 = *(void *)(v30 + 8);
      uint64_t v31 = *(void *)(v30 + 16);
      sub_252951588();
      uint64_t v33 = swift_task_alloc();
      *(unsigned char *)(v33 + 16) = v25;
      *(void *)(v33 + 24) = v32;
      *(void *)(v33 + 32) = v31;
      *(void *)(v33 + 40) = v26;
      sub_252951618();
      swift_task_dealloc();
      v72(v28, v73);
      v76(v74, v79, v27);
      unint64_t v34 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_2528C4584(0, *(void *)(v11 + 16) + 1, 1, v11);
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      uint64_t v0 = v69;
      if (v36 >= v35 >> 1) {
        unint64_t v34 = sub_2528C4584(v35 > 1, v36 + 1, 1, v34);
      }
      uint64_t v37 = v69[24];
      uint64_t v38 = v69[18];
      *(void *)(v34 + 16) = v36 + 1;
      unint64_t v39 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v40 = *(void *)(v68 + 72);
      uint64_t v85 = *(void (**)(unint64_t, uint64_t, uint64_t))(v68 + 32);
      v85(v34 + v39 + v40 * v36, v37, v38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_252953970;
      *(float *)(v41 + 32) = v20 - v17;
      *(float *)(v41 + 36) = v19 - v18;
      *(_DWORD *)(v41 + 40) = 1065353216;
      v69[2] = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
      sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
      sub_2529518D8();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v42 = v84;
      }
      else {
        unint64_t v42 = sub_2528C4584(0, *(void *)(v84 + 16) + 1, 1, v84);
      }
      unint64_t v44 = *(void *)(v42 + 16);
      unint64_t v43 = *(void *)(v42 + 24);
      if (v44 >= v43 >> 1) {
        unint64_t v42 = sub_2528C4584(v43 > 1, v44 + 1, 1, v42);
      }
      uint64_t v45 = v69[23];
      uint64_t v46 = v69[18];
      *(void *)(v42 + 16) = v44 + 1;
      unint64_t v84 = v42;
      v85(v42 + v39 + v44 * v40, v45, v46);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_252953970;
      *(float *)(v47 + 32) = v17;
      *(float *)(v47 + 36) = v18;
      *(_DWORD *)(v47 + 40) = 0;
      v69[3] = v47;
      sub_2529518D8();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v48 = v83;
      }
      else {
        unint64_t v48 = sub_2528C4584(0, *(void *)(v83 + 16) + 1, 1, v83);
      }
      unint64_t v50 = *(void *)(v48 + 16);
      unint64_t v49 = *(void *)(v48 + 24);
      if (v50 >= v49 >> 1) {
        unint64_t v48 = sub_2528C4584(v49 > 1, v50 + 1, 1, v48);
      }
      uint64_t v51 = v69[22];
      uint64_t v52 = v69[18];
      *(void *)(v48 + 16) = v50 + 1;
      unint64_t v83 = v48;
      v85(v48 + v39 + v50 * v40, v51, v52);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_252953970;
      *(float *)(v53 + 32) = v8;
      *(float *)(v53 + 36) = v7;
      *(_DWORD *)(v53 + 40) = 1065353216;
      v69[4] = v53;
      sub_2529518D8();
      unint64_t v12 = v81;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_2528C4584(0, *(void *)(v81 + 16) + 1, 1, v81);
      }
      unint64_t v55 = *(void *)(v12 + 16);
      unint64_t v54 = *(void *)(v12 + 24);
      unint64_t v56 = v34;
      if (v55 >= v54 >> 1) {
        unint64_t v12 = sub_2528C4584(v54 > 1, v55 + 1, 1, v12);
      }
      uint64_t v57 = v69[27];
      uint64_t v58 = v69[25];
      uint64_t v59 = v69[21];
      uint64_t v60 = v69[18];
      *(void *)(v12 + 16) = v55 + 1;
      v85(v12 + v39 + v55 * v40, v59, v60);
      v75(v58, v60);
      v75(v57, v60);
      uint64_t v10 = (_OWORD *)((char *)v77 + 40);
      uint64_t v6 = v78 - 1;
      unint64_t v11 = v56;
      if (v78 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v86 = v56;
        unint64_t v82 = v12;
        unint64_t v62 = v83;
        unint64_t v61 = v84;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  unint64_t v61 = MEMORY[0x263F8EE78];
  unint64_t v82 = MEMORY[0x263F8EE78];
  unint64_t v62 = MEMORY[0x263F8EE78];
  unint64_t v86 = MEMORY[0x263F8EE78];
LABEL_40:
  uint64_t v63 = v0[20];
  uint64_t v65 = v0[18];
  uint64_t v64 = v0[19];
  v0[5] = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_252951A28();
  sub_252951708();
  uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v66(v63, v65);
  v0[6] = v62;
  sub_252951A28();
  sub_252951708();
  v66(v63, v65);
  v0[7] = v82;
  sub_252951A28();
  sub_252951708();
  v66(v63, v65);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v67 = (void (*)(unint64_t))v0[1];
  v67(v86);
}

uint64_t sub_2528CA21C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528C8664(a1, a2);
}

float sub_2528CA2C4(float *a1, float a2, float a3)
{
  float v3 = a1[4] * a2;
  float v4 = (float)((float)(a1[2] * a2) + (float)((float)(a1[2] * a2) + v3)) * 0.5;
  float v5 = v3 + (float)(v3 * 0.2);
  float v6 = (float)(a1[5] * a3) + (float)((float)(a1[5] * a3) * 0.2);
  if (v6 >= (float)((float)(v5 * 4.0) / 3.0)) {
    float v5 = v6 * 0.75;
  }
  float v7 = v4 - (float)(v5 * 0.5);
  if (v7 <= 0.0) {
    return 0.0;
  }
  return v7;
}

uint64_t sub_2528CA38C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  float v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_2528A91AC;
  return sub_25291E9D8(a1, v5, v4);
}

uint64_t sub_2528CA438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SceneDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528CA49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SceneDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2528CA500()
{
  return sub_2528BB0C0(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_2528CA524()
{
  return sub_252904370(*(unsigned char *)(v0 + 16));
}

uint64_t sub_2528CA548(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2528CA598(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *v1;
  switch(*v1)
  {
    case 1:
      uint64_t v5 = sub_2528CC540();
      uint64_t v6 = *(void *)(v5 + 16);
      if (!v6) {
        goto LABEL_46;
      }
      uint64_t v4 = 0;
      float v7 = (void *)(v5 + 40);
      while (1)
      {
        BOOL v8 = *(v7 - 1) == v3 && *v7 == v2;
        if (v8 || (sub_252952108() & 1) != 0) {
          goto LABEL_47;
        }
        v7 += 2;
        if (v6 == ++v4) {
          goto LABEL_46;
        }
      }
    case 2:
      uint64_t v9 = sub_2528CCCF8();
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        goto LABEL_46;
      }
      uint64_t v4 = 0;
      unint64_t v11 = (void *)(v9 + 40);
      while (1)
      {
        BOOL v12 = *(v11 - 1) == v3 && *v11 == v2;
        if (v12 || (sub_252952108() & 1) != 0) {
          goto LABEL_47;
        }
        v11 += 2;
        if (v10 == ++v4) {
          goto LABEL_46;
        }
      }
    case 3:
      uint64_t v13 = sub_2528CD1C4();
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        goto LABEL_46;
      }
      uint64_t v4 = 0;
      float v15 = (void *)(v13 + 40);
      while (1)
      {
        BOOL v16 = *(v15 - 1) == v3 && *v15 == v2;
        if (v16 || (sub_252952108() & 1) != 0) {
          goto LABEL_47;
        }
        v15 += 2;
        if (v14 == ++v4) {
          goto LABEL_46;
        }
      }
    case 4:
      uint64_t v17 = sub_2528CE7D8();
      uint64_t v18 = *(void *)(v17 + 16);
      if (!v18) {
        goto LABEL_46;
      }
      uint64_t v4 = 0;
      float v19 = (void *)(v17 + 40);
      while (1)
      {
        BOOL v20 = *(v19 - 1) == v3 && *v19 == v2;
        if (v20 || (sub_252952108() & 1) != 0) {
          goto LABEL_47;
        }
        v19 += 2;
        if (v18 == ++v4) {
          goto LABEL_46;
        }
      }
    case 5:
      uint64_t v21 = sub_2528CEDBC();
      uint64_t v22 = *(void *)(v21 + 16);
      if (!v22) {
        goto LABEL_46;
      }
      uint64_t v4 = 0;
      uint64_t v23 = (void *)(v21 + 40);
      break;
    default:
      return v4;
  }
  while (1)
  {
    BOOL v24 = *(v23 - 1) == v3 && *v23 == v2;
    if (v24 || (sub_252952108() & 1) != 0) {
      break;
    }
    v23 += 2;
    if (v22 == ++v4)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
LABEL_47:
  swift_bridgeObjectRelease();
  return v4;
}

BOOL static Skeleton.Topology.Topology3D.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Skeleton.Topology.Topology3D.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t sub_2528CA7FC()
{
  return 0;
}

uint64_t sub_2528CA808()
{
  return 0;
}

void sub_2528CA814(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2528CA820(uint64_t a1)
{
  unint64_t v2 = sub_2528CB35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CA85C(uint64_t a1)
{
  unint64_t v2 = sub_2528CB35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CA898(char a1)
{
  return *(void *)&aNone_3[8 * a1];
}

uint64_t sub_2528CA8C0()
{
  return sub_2528CA898(*v0);
}

uint64_t sub_2528CA8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528CF374(a1, a2);
  *a3 = result;
  return result;
}

void sub_2528CA8F0(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2528CA8FC(uint64_t a1)
{
  unint64_t v2 = sub_2528CB260();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CA938(uint64_t a1)
{
  unint64_t v2 = sub_2528CB260();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CA974(uint64_t a1)
{
  unint64_t v2 = sub_2528CB404();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CA9B0(uint64_t a1)
{
  unint64_t v2 = sub_2528CB404();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CA9EC(uint64_t a1)
{
  unint64_t v2 = sub_2528CB308();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CAA28(uint64_t a1)
{
  unint64_t v2 = sub_2528CB308();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CAA64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2528CAA94(uint64_t a1)
{
  unint64_t v2 = sub_2528CB458();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CAAD0(uint64_t a1)
{
  unint64_t v2 = sub_2528CB458();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CAB0C(uint64_t a1)
{
  unint64_t v2 = sub_2528CB3B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CAB48(uint64_t a1)
{
  unint64_t v2 = sub_2528CB3B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528CAB84(uint64_t a1)
{
  unint64_t v2 = sub_2528CB2B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528CABC0(uint64_t a1)
{
  unint64_t v2 = sub_2528CB2B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Topology.Topology3D.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t Skeleton.Topology.Topology3D.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32000);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32008);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32010);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32018);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32020);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32028);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  BOOL v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32030);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  BOOL v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528CB260();
  sub_252952208();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_2528CB404();
      uint64_t v22 = v42;
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_2528CB3B0();
      uint64_t v23 = v30;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_2528CB35C();
      uint64_t v23 = v33;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_2528CB308();
      uint64_t v23 = v36;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_2528CB2B4();
      uint64_t v23 = v39;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_2528CB458();
      uint64_t v22 = v42;
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2528CB260()
{
  unint64_t result = qword_269C32038;
  if (!qword_269C32038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32038);
  }
  return result;
}

unint64_t sub_2528CB2B4()
{
  unint64_t result = qword_269C32040;
  if (!qword_269C32040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32040);
  }
  return result;
}

unint64_t sub_2528CB308()
{
  unint64_t result = qword_269C32048;
  if (!qword_269C32048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32048);
  }
  return result;
}

unint64_t sub_2528CB35C()
{
  unint64_t result = qword_269C32050;
  if (!qword_269C32050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32050);
  }
  return result;
}

unint64_t sub_2528CB3B0()
{
  unint64_t result = qword_269C32058;
  if (!qword_269C32058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32058);
  }
  return result;
}

unint64_t sub_2528CB404()
{
  unint64_t result = qword_269C32060;
  if (!qword_269C32060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32060);
  }
  return result;
}

unint64_t sub_2528CB458()
{
  unint64_t result = qword_269C32068;
  if (!qword_269C32068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32068);
  }
  return result;
}

uint64_t Skeleton.Topology.Topology3D.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32070);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32078);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32080);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32088);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32090);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32098);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C320A0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2528CB260();
  uint64_t v21 = v68;
  sub_2529521E8();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  unint64_t v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  uint64_t v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  uint64_t v26 = v19;
  uint64_t v27 = sub_252952028();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_252951E98();
    swift_allocError();
    unint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C320A8);
    *unint64_t v36 = &type metadata for Skeleton.Topology.Topology3D;
    uint64_t v37 = v68;
    sub_252951FB8();
    sub_252951E88();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_2528CB404();
      uint64_t v39 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_2528CB3B0();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_252951FA8();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_2528CB35C();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_252951FA8();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_2528CB308();
      uint64_t v46 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v45;
      break;
    case 5:
      uint64_t v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_2528CB2B4();
      uint64_t v47 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_2528CB458();
      uint64_t v30 = v50;
      uint64_t v31 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v29;
      break;
  }
  *uint64_t v33 = v28;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_2528CBD88()
{
  unint64_t result = qword_269C320B0;
  if (!qword_269C320B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320B0);
  }
  return result;
}

uint64_t sub_2528CBDDC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Skeleton.Topology.Topology3D.init(from:)(a1, a2);
}

uint64_t sub_2528CBDF4(void *a1)
{
  return Skeleton.Topology.Topology3D.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Skeleton.Topology.Topology3D()
{
  return &type metadata for Skeleton.Topology.Topology3D;
}

uint64_t _s10Topology3DOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10Topology3DOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    char *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528CBF80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10Topology3DO10CodingKeysOMa()
{
  return &_s10Topology3DO10CodingKeysON;
}

ValueMetadata *_s10Topology3DO14NoneCodingKeysOMa()
{
  return &_s10Topology3DO14NoneCodingKeysON;
}

ValueMetadata *_s10Topology3DO20Hibiscus28CodingKeysOMa()
{
  return &_s10Topology3DO20Hibiscus28CodingKeysON;
}

ValueMetadata *_s10Topology3DO18Orchid3DCodingKeysOMa()
{
  return &_s10Topology3DO18Orchid3DCodingKeysON;
}

ValueMetadata *_s10Topology3DO16ArvinoCodingKeysOMa()
{
  return &_s10Topology3DO16ArvinoCodingKeysON;
}

ValueMetadata *_s10Topology3DO18LeftHandCodingKeysOMa()
{
  return &_s10Topology3DO18LeftHandCodingKeysON;
}

ValueMetadata *_s10Topology3DO19RightHandCodingKeysOMa()
{
  return &_s10Topology3DO19RightHandCodingKeysON;
}

unint64_t sub_2528CC01C()
{
  unint64_t result = qword_269C320B8;
  if (!qword_269C320B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320B8);
  }
  return result;
}

unint64_t sub_2528CC074()
{
  unint64_t result = qword_269C320C0;
  if (!qword_269C320C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320C0);
  }
  return result;
}

unint64_t sub_2528CC0CC()
{
  unint64_t result = qword_269C320C8;
  if (!qword_269C320C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320C8);
  }
  return result;
}

unint64_t sub_2528CC124()
{
  unint64_t result = qword_269C320D0;
  if (!qword_269C320D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320D0);
  }
  return result;
}

unint64_t sub_2528CC17C()
{
  unint64_t result = qword_269C320D8;
  if (!qword_269C320D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320D8);
  }
  return result;
}

unint64_t sub_2528CC1D4()
{
  unint64_t result = qword_269C320E0;
  if (!qword_269C320E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320E0);
  }
  return result;
}

unint64_t sub_2528CC22C()
{
  unint64_t result = qword_269C320E8;
  if (!qword_269C320E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320E8);
  }
  return result;
}

unint64_t sub_2528CC284()
{
  unint64_t result = qword_269C320F0;
  if (!qword_269C320F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320F0);
  }
  return result;
}

unint64_t sub_2528CC2DC()
{
  unint64_t result = qword_269C320F8;
  if (!qword_269C320F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C320F8);
  }
  return result;
}

unint64_t sub_2528CC334()
{
  unint64_t result = qword_269C32100;
  if (!qword_269C32100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32100);
  }
  return result;
}

unint64_t sub_2528CC38C()
{
  unint64_t result = qword_269C32108;
  if (!qword_269C32108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32108);
  }
  return result;
}

unint64_t sub_2528CC3E4()
{
  unint64_t result = qword_269C32110;
  if (!qword_269C32110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32110);
  }
  return result;
}

unint64_t sub_2528CC43C()
{
  unint64_t result = qword_269C32118;
  if (!qword_269C32118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32118);
  }
  return result;
}

unint64_t sub_2528CC494()
{
  unint64_t result = qword_269C32120;
  if (!qword_269C32120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32120);
  }
  return result;
}

unint64_t sub_2528CC4EC()
{
  unint64_t result = qword_269C32128;
  if (!qword_269C32128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32128);
  }
  return result;
}

uint64_t sub_2528CC540()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2529545B0;
  if (qword_269C31660 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C334A8;
  *(void *)(v0 + 32) = qword_269C334A0;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_269C31680;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C334E8;
  *(void *)(v0 + 48) = qword_269C334E0;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_269C31688;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C334F8;
  *(void *)(v0 + 64) = qword_269C334F0;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_269C31698;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C33518;
  *(void *)(v0 + 80) = qword_269C33510;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = qword_269C316B0;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C33548;
  *(void *)(v0 + 96) = qword_269C33540;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269C316B8;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C33558;
  *(void *)(v0 + 112) = qword_269C33550;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_269C316C0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C33568;
  *(void *)(v0 + 128) = qword_269C33560;
  *(void *)(v0 + 136) = v13;
  uint64_t v14 = qword_269C316D8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C33598;
  *(void *)(v0 + 144) = qword_269C33590;
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = qword_269C316E8;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C335B8;
  *(void *)(v0 + 160) = qword_269C335B0;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_269C31708;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C335F8;
  *(void *)(v0 + 176) = qword_269C335F0;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269C31718;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C33618;
  *(void *)(v0 + 192) = qword_269C33610;
  *(void *)(v0 + 200) = v21;
  uint64_t v22 = qword_269C31728;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C33638;
  *(void *)(v0 + 208) = qword_269C33630;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_269C31730;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C33648;
  *(void *)(v0 + 224) = qword_269C33640;
  *(void *)(v0 + 232) = v25;
  uint64_t v26 = qword_269C31738;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33658;
  *(void *)(v0 + 240) = qword_269C33650;
  *(void *)(v0 + 248) = v27;
  uint64_t v28 = qword_269C31750;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C33688;
  *(void *)(v0 + 256) = qword_269C33680;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_269C31790;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C33708;
  *(void *)(v0 + 272) = qword_269C33700;
  *(void *)(v0 + 280) = v31;
  uint64_t v32 = qword_269C317C8;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C33778;
  *(void *)(v0 + 288) = qword_269C33770;
  *(void *)(v0 + 296) = v33;
  uint64_t v34 = qword_269C317D8;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void *)algn_269C33798;
  *(void *)(v0 + 304) = qword_269C33790;
  *(void *)(v0 + 312) = v35;
  uint64_t v36 = qword_269C317E8;
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = *(void *)algn_269C337B8;
  *(void *)(v0 + 320) = qword_269C337B0;
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = qword_269C31810;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)algn_269C33808;
  *(void *)(v0 + 336) = qword_269C33800;
  *(void *)(v0 + 344) = v39;
  uint64_t v40 = qword_269C31838;
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v41 = *(void *)algn_269C33858;
  *(void *)(v0 + 352) = qword_269C33850;
  *(void *)(v0 + 360) = v41;
  uint64_t v42 = qword_269C31840;
  swift_bridgeObjectRetain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v43 = *(void *)algn_269C33868;
  *(void *)(v0 + 368) = qword_269C33860;
  *(void *)(v0 + 376) = v43;
  uint64_t v44 = qword_269C31858;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = *(void *)algn_269C33898;
  *(void *)(v0 + 384) = qword_269C33890;
  *(void *)(v0 + 392) = v45;
  uint64_t v46 = qword_269C31860;
  swift_bridgeObjectRetain();
  if (v46 != -1) {
    swift_once();
  }
  uint64_t v47 = *(void *)algn_269C338A8;
  *(void *)(v0 + 400) = qword_269C338A0;
  *(void *)(v0 + 408) = v47;
  uint64_t v48 = qword_269C31868;
  swift_bridgeObjectRetain();
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)algn_269C338B8;
  *(void *)(v0 + 416) = qword_269C338B0;
  *(void *)(v0 + 424) = v49;
  uint64_t v50 = qword_269C31870;
  swift_bridgeObjectRetain();
  if (v50 != -1) {
    swift_once();
  }
  uint64_t v51 = *(void *)algn_269C338C8;
  *(void *)(v0 + 432) = qword_269C338C0;
  *(void *)(v0 + 440) = v51;
  uint64_t v52 = qword_269C318C0;
  swift_bridgeObjectRetain();
  if (v52 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)algn_269C33968;
  *(void *)(v0 + 448) = qword_269C33960;
  *(void *)(v0 + 456) = v53;
  uint64_t v54 = qword_269C318F0;
  swift_bridgeObjectRetain();
  if (v54 != -1) {
    swift_once();
  }
  uint64_t v55 = *(void *)algn_269C339C8;
  *(void *)(v0 + 464) = qword_269C339C0;
  *(void *)(v0 + 472) = v55;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2528CCCF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2529545C0;
  if (qword_269C31660 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C334A8;
  *(void *)(v0 + 32) = qword_269C334A0;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_269C316B8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C33558;
  *(void *)(v0 + 48) = qword_269C33550;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_269C316C0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C33568;
  *(void *)(v0 + 64) = qword_269C33560;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_269C316D8;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C33598;
  *(void *)(v0 + 80) = qword_269C33590;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = qword_269C31680;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C334E8;
  *(void *)(v0 + 96) = qword_269C334E0;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269C31688;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C334F8;
  *(void *)(v0 + 112) = qword_269C334F0;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_269C31698;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C33518;
  *(void *)(v0 + 128) = qword_269C33510;
  *(void *)(v0 + 136) = v13;
  uint64_t v14 = qword_269C31708;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C335F8;
  *(void *)(v0 + 144) = qword_269C335F0;
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = qword_269C317D8;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C33798;
  *(void *)(v0 + 160) = qword_269C33790;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_269C317F0;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C337C8;
  *(void *)(v0 + 176) = qword_269C337C0;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269C317F8;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C337D8;
  *(void *)(v0 + 192) = qword_269C337D0;
  *(void *)(v0 + 200) = v21;
  uint64_t v22 = qword_269C31730;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C33648;
  *(void *)(v0 + 208) = qword_269C33640;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_269C31738;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C33658;
  *(void *)(v0 + 224) = qword_269C33650;
  *(void *)(v0 + 232) = v25;
  uint64_t v26 = qword_269C31750;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33688;
  *(void *)(v0 + 240) = qword_269C33680;
  *(void *)(v0 + 248) = v27;
  uint64_t v28 = qword_269C31860;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C338A8;
  *(void *)(v0 + 256) = qword_269C338A0;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_269C31868;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C338B8;
  *(void *)(v0 + 272) = qword_269C338B0;
  *(void *)(v0 + 280) = v31;
  uint64_t v32 = qword_269C31870;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C338C8;
  *(void *)(v0 + 288) = qword_269C338C0;
  *(void *)(v0 + 296) = v33;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2528CD1C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_252953C90;
  if (qword_269C31660 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C334A8;
  *(void *)(v0 + 32) = qword_269C334A0;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_269C31668;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C334B8;
  *(void *)(v0 + 48) = qword_269C334B0;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_269C31680;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C334E8;
  *(void *)(v0 + 64) = qword_269C334E0;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_269C31688;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C334F8;
  *(void *)(v0 + 80) = qword_269C334F0;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = qword_269C31698;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C33518;
  *(void *)(v0 + 96) = qword_269C33510;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269C316A8;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C33538;
  *(void *)(v0 + 112) = qword_269C33530;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_269C316B0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C33548;
  *(void *)(v0 + 128) = qword_269C33540;
  *(void *)(v0 + 136) = v13;
  uint64_t v14 = qword_269C316B8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C33558;
  *(void *)(v0 + 144) = qword_269C33550;
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = qword_269C316C0;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C33568;
  *(void *)(v0 + 160) = qword_269C33560;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_269C316D8;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C33598;
  *(void *)(v0 + 176) = qword_269C33590;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269C316E0;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C335A8;
  *(void *)(v0 + 192) = qword_269C335A0;
  *(void *)(v0 + 200) = v21;
  uint64_t v22 = qword_269C316E8;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C335B8;
  *(void *)(v0 + 208) = qword_269C335B0;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_269C316F0;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C335C8;
  *(void *)(v0 + 224) = qword_269C335C0;
  *(void *)(v0 + 232) = v25;
  uint64_t v26 = qword_269C316F8;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C335D8;
  *(void *)(v0 + 240) = qword_269C335D0;
  *(void *)(v0 + 248) = v27;
  uint64_t v28 = qword_269C31700;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C335E8;
  *(void *)(v0 + 256) = qword_269C335E0;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_269C31708;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C335F8;
  *(void *)(v0 + 272) = qword_269C335F0;
  *(void *)(v0 + 280) = v31;
  uint64_t v32 = qword_269C31710;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C33608;
  *(void *)(v0 + 288) = qword_269C33600;
  *(void *)(v0 + 296) = v33;
  uint64_t v34 = qword_269C31718;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void *)algn_269C33618;
  *(void *)(v0 + 304) = qword_269C33610;
  *(void *)(v0 + 312) = v35;
  uint64_t v36 = qword_269C31720;
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = *(void *)algn_269C33628;
  *(void *)(v0 + 320) = qword_269C33620;
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = qword_269C31728;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)algn_269C33638;
  *(void *)(v0 + 336) = qword_269C33630;
  *(void *)(v0 + 344) = v39;
  uint64_t v40 = qword_269C31730;
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v41 = *(void *)algn_269C33648;
  *(void *)(v0 + 352) = qword_269C33640;
  *(void *)(v0 + 360) = v41;
  uint64_t v42 = qword_269C31738;
  swift_bridgeObjectRetain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v43 = *(void *)algn_269C33658;
  *(void *)(v0 + 368) = qword_269C33650;
  *(void *)(v0 + 376) = v43;
  uint64_t v44 = qword_269C31750;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = *(void *)algn_269C33688;
  *(void *)(v0 + 384) = qword_269C33680;
  *(void *)(v0 + 392) = v45;
  *(void *)(v0 + 400) = 0xD000000000000012;
  *(void *)(v0 + 408) = 0x800000025295A9B0;
  uint64_t v46 = qword_269C31758;
  swift_bridgeObjectRetain();
  if (v46 != -1) {
    swift_once();
  }
  uint64_t v47 = *(void *)algn_269C33698;
  *(void *)(v0 + 416) = qword_269C33690;
  *(void *)(v0 + 424) = v47;
  uint64_t v48 = qword_269C31760;
  swift_bridgeObjectRetain();
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)algn_269C336A8;
  *(void *)(v0 + 432) = qword_269C336A0;
  *(void *)(v0 + 440) = v49;
  uint64_t v50 = qword_269C31768;
  swift_bridgeObjectRetain();
  if (v50 != -1) {
    swift_once();
  }
  uint64_t v51 = *(void *)algn_269C336B8;
  *(void *)(v0 + 448) = qword_269C336B0;
  *(void *)(v0 + 456) = v51;
  *(void *)(v0 + 464) = 0xD000000000000010;
  *(void *)(v0 + 472) = 0x800000025295A9D0;
  *(void *)(v0 + 480) = 0xD000000000000010;
  *(void *)(v0 + 488) = 0x800000025295A990;
  uint64_t v52 = qword_269C31770;
  swift_bridgeObjectRetain();
  if (v52 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)algn_269C336C8;
  *(void *)(v0 + 496) = qword_269C336C0;
  *(void *)(v0 + 504) = v53;
  uint64_t v54 = qword_269C31778;
  swift_bridgeObjectRetain();
  if (v54 != -1) {
    swift_once();
  }
  uint64_t v55 = *(void *)algn_269C336D8;
  *(void *)(v0 + 512) = qword_269C336D0;
  *(void *)(v0 + 520) = v55;
  uint64_t v56 = qword_269C31780;
  swift_bridgeObjectRetain();
  if (v56 != -1) {
    swift_once();
  }
  uint64_t v57 = *(void *)algn_269C336E8;
  *(void *)(v0 + 528) = qword_269C336E0;
  *(void *)(v0 + 536) = v57;
  uint64_t v58 = qword_269C31788;
  swift_bridgeObjectRetain();
  if (v58 != -1) {
    swift_once();
  }
  uint64_t v59 = *(void *)algn_269C336F8;
  *(void *)(v0 + 544) = qword_269C336F0;
  *(void *)(v0 + 552) = v59;
  *(void *)(v0 + 560) = 0xD000000000000012;
  *(void *)(v0 + 568) = 0x800000025295A930;
  uint64_t v60 = qword_269C31790;
  swift_bridgeObjectRetain();
  if (v60 != -1) {
    swift_once();
  }
  uint64_t v61 = *(void *)algn_269C33708;
  *(void *)(v0 + 576) = qword_269C33700;
  *(void *)(v0 + 584) = v61;
  uint64_t v62 = qword_269C31798;
  swift_bridgeObjectRetain();
  if (v62 != -1) {
    swift_once();
  }
  uint64_t v63 = *(void *)algn_269C33718;
  *(void *)(v0 + 592) = qword_269C33710;
  *(void *)(v0 + 600) = v63;
  uint64_t v64 = qword_269C317A0;
  swift_bridgeObjectRetain();
  if (v64 != -1) {
    swift_once();
  }
  uint64_t v65 = *(void *)algn_269C33728;
  *(void *)(v0 + 608) = qword_269C33720;
  *(void *)(v0 + 616) = v65;
  *(void *)(v0 + 632) = 0x800000025295A950;
  *(void *)(v0 + 640) = 0xD000000000000011;
  *(void *)(v0 + 624) = 0xD000000000000010;
  *(void *)(v0 + 648) = 0x800000025295A970;
  uint64_t v66 = qword_269C317A8;
  swift_bridgeObjectRetain();
  if (v66 != -1) {
    swift_once();
  }
  uint64_t v67 = *(void *)algn_269C33738;
  *(void *)(v0 + 656) = qword_269C33730;
  *(void *)(v0 + 664) = v67;
  uint64_t v68 = qword_269C317B0;
  swift_bridgeObjectRetain();
  if (v68 != -1) {
    swift_once();
  }
  uint64_t v69 = *(void *)algn_269C33748;
  *(void *)(v0 + 672) = qword_269C33740;
  *(void *)(v0 + 680) = v69;
  uint64_t v70 = qword_269C317B8;
  swift_bridgeObjectRetain();
  if (v70 != -1) {
    swift_once();
  }
  uint64_t v71 = *(void *)algn_269C33758;
  *(void *)(v0 + 688) = qword_269C33750;
  *(void *)(v0 + 696) = v71;
  uint64_t v72 = qword_269C317C0;
  swift_bridgeObjectRetain();
  if (v72 != -1) {
    swift_once();
  }
  uint64_t v73 = *(void *)algn_269C33768;
  *(void *)(v0 + 704) = qword_269C33760;
  *(void *)(v0 + 712) = v73;
  *(void *)(v0 + 720) = 0xD000000000000012;
  *(void *)(v0 + 728) = 0x800000025295A9F0;
  uint64_t v74 = qword_269C317C8;
  swift_bridgeObjectRetain();
  if (v74 != -1) {
    swift_once();
  }
  uint64_t v75 = *(void *)algn_269C33778;
  *(void *)(v0 + 736) = qword_269C33770;
  *(void *)(v0 + 744) = v75;
  uint64_t v76 = qword_269C317D0;
  swift_bridgeObjectRetain();
  if (v76 != -1) {
    swift_once();
  }
  uint64_t v77 = *(void *)algn_269C33788;
  *(void *)(v0 + 752) = qword_269C33780;
  *(void *)(v0 + 760) = v77;
  *(void *)(v0 + 768) = 0xD000000000000010;
  *(void *)(v0 + 776) = 0x800000025295AA10;
  uint64_t v78 = qword_269C317D8;
  swift_bridgeObjectRetain();
  if (v78 != -1) {
    swift_once();
  }
  uint64_t v79 = *(void *)algn_269C33798;
  *(void *)(v0 + 784) = qword_269C33790;
  *(void *)(v0 + 792) = v79;
  uint64_t v80 = qword_269C317E0;
  swift_bridgeObjectRetain();
  if (v80 != -1) {
    swift_once();
  }
  uint64_t v81 = *(void *)algn_269C337A8;
  *(void *)(v0 + 800) = qword_269C337A0;
  *(void *)(v0 + 808) = v81;
  uint64_t v82 = qword_269C317E8;
  swift_bridgeObjectRetain();
  if (v82 != -1) {
    swift_once();
  }
  uint64_t v83 = *(void *)algn_269C337B8;
  *(void *)(v0 + 816) = qword_269C337B0;
  *(void *)(v0 + 824) = v83;
  uint64_t v84 = qword_269C317F0;
  swift_bridgeObjectRetain();
  if (v84 != -1) {
    swift_once();
  }
  uint64_t v85 = *(void *)algn_269C337C8;
  *(void *)(v0 + 832) = qword_269C337C0;
  *(void *)(v0 + 840) = v85;
  uint64_t v86 = qword_269C317F8;
  swift_bridgeObjectRetain();
  if (v86 != -1) {
    swift_once();
  }
  uint64_t v87 = *(void *)algn_269C337D8;
  *(void *)(v0 + 848) = qword_269C337D0;
  *(void *)(v0 + 856) = v87;
  uint64_t v88 = qword_269C31800;
  swift_bridgeObjectRetain();
  if (v88 != -1) {
    swift_once();
  }
  uint64_t v89 = *(void *)algn_269C337E8;
  *(void *)(v0 + 864) = qword_269C337E0;
  *(void *)(v0 + 872) = v89;
  uint64_t v90 = qword_269C31808;
  swift_bridgeObjectRetain();
  if (v90 != -1) {
    swift_once();
  }
  uint64_t v91 = *(void *)algn_269C337F8;
  *(void *)(v0 + 880) = qword_269C337F0;
  *(void *)(v0 + 888) = v91;
  uint64_t v92 = qword_269C31810;
  swift_bridgeObjectRetain();
  if (v92 != -1) {
    swift_once();
  }
  uint64_t v93 = *(void *)algn_269C33808;
  *(void *)(v0 + 896) = qword_269C33800;
  *(void *)(v0 + 904) = v93;
  uint64_t v94 = qword_269C31818;
  swift_bridgeObjectRetain();
  if (v94 != -1) {
    swift_once();
  }
  uint64_t v95 = *(void *)algn_269C33818;
  *(void *)(v0 + 912) = qword_269C33810;
  *(void *)(v0 + 920) = v95;
  uint64_t v96 = qword_269C31820;
  swift_bridgeObjectRetain();
  if (v96 != -1) {
    swift_once();
  }
  uint64_t v97 = *(void *)algn_269C33828;
  *(void *)(v0 + 928) = qword_269C33820;
  *(void *)(v0 + 936) = v97;
  uint64_t v98 = qword_269C31828;
  swift_bridgeObjectRetain();
  if (v98 != -1) {
    swift_once();
  }
  uint64_t v99 = *(void *)algn_269C33838;
  *(void *)(v0 + 944) = qword_269C33830;
  *(void *)(v0 + 952) = v99;
  uint64_t v100 = qword_269C31838;
  swift_bridgeObjectRetain();
  if (v100 != -1) {
    swift_once();
  }
  uint64_t v101 = *(void *)algn_269C33858;
  *(void *)(v0 + 960) = qword_269C33850;
  *(void *)(v0 + 968) = v101;
  uint64_t v102 = qword_269C31840;
  swift_bridgeObjectRetain();
  if (v102 != -1) {
    swift_once();
  }
  uint64_t v103 = *(void *)algn_269C33868;
  *(void *)(v0 + 976) = qword_269C33860;
  *(void *)(v0 + 984) = v103;
  *(void *)(v0 + 992) = 0xD000000000000010;
  *(void *)(v0 + 1000) = 0x800000025295A910;
  *(void *)(v0 + 1008) = 0xD000000000000010;
  *(void *)(v0 + 1016) = 0x800000025295A8F0;
  uint64_t v104 = qword_269C31848;
  swift_bridgeObjectRetain();
  if (v104 != -1) {
    swift_once();
  }
  uint64_t v105 = *(void *)algn_269C33878;
  *(void *)(v0 + 1024) = qword_269C33870;
  *(void *)(v0 + 1032) = v105;
  uint64_t v106 = qword_269C31858;
  swift_bridgeObjectRetain();
  if (v106 != -1) {
    swift_once();
  }
  uint64_t v107 = *(void *)algn_269C33898;
  *(void *)(v0 + 1040) = qword_269C33890;
  *(void *)(v0 + 1048) = v107;
  uint64_t v108 = qword_269C31860;
  swift_bridgeObjectRetain();
  if (v108 != -1) {
    swift_once();
  }
  uint64_t v109 = *(void *)algn_269C338A8;
  *(void *)(v0 + 1056) = qword_269C338A0;
  *(void *)(v0 + 1064) = v109;
  uint64_t v110 = qword_269C31868;
  swift_bridgeObjectRetain();
  if (v110 != -1) {
    swift_once();
  }
  uint64_t v111 = *(void *)algn_269C338B8;
  *(void *)(v0 + 1072) = qword_269C338B0;
  *(void *)(v0 + 1080) = v111;
  uint64_t v112 = qword_269C31870;
  swift_bridgeObjectRetain();
  if (v112 != -1) {
    swift_once();
  }
  uint64_t v113 = *(void *)algn_269C338C8;
  *(void *)(v0 + 1088) = qword_269C338C0;
  *(void *)(v0 + 1096) = v113;
  *(void *)(v0 + 1104) = 0xD000000000000013;
  *(void *)(v0 + 1112) = 0x800000025295AAD0;
  uint64_t v114 = qword_269C31888;
  swift_bridgeObjectRetain();
  if (v114 != -1) {
    swift_once();
  }
  uint64_t v115 = *(void *)algn_269C338F8;
  *(void *)(v0 + 1120) = qword_269C338F0;
  *(void *)(v0 + 1128) = v115;
  uint64_t v116 = qword_269C31890;
  swift_bridgeObjectRetain();
  if (v116 != -1) {
    swift_once();
  }
  uint64_t v117 = *(void *)algn_269C33908;
  *(void *)(v0 + 1136) = qword_269C33900;
  *(void *)(v0 + 1144) = v117;
  uint64_t v118 = qword_269C31898;
  swift_bridgeObjectRetain();
  if (v118 != -1) {
    swift_once();
  }
  uint64_t v119 = *(void *)algn_269C33918;
  *(void *)(v0 + 1152) = qword_269C33910;
  *(void *)(v0 + 1160) = v119;
  *(void *)(v0 + 1168) = 0xD000000000000011;
  *(void *)(v0 + 1176) = 0x800000025295AAF0;
  *(void *)(v0 + 1184) = 0xD000000000000011;
  *(void *)(v0 + 1192) = 0x800000025295AAB0;
  uint64_t v120 = qword_269C318A0;
  swift_bridgeObjectRetain();
  if (v120 != -1) {
    swift_once();
  }
  uint64_t v121 = *(void *)algn_269C33928;
  *(void *)(v0 + 1200) = qword_269C33920;
  *(void *)(v0 + 1208) = v121;
  uint64_t v122 = qword_269C318A8;
  swift_bridgeObjectRetain();
  if (v122 != -1) {
    swift_once();
  }
  uint64_t v123 = *(void *)algn_269C33938;
  *(void *)(v0 + 1216) = qword_269C33930;
  *(void *)(v0 + 1224) = v123;
  uint64_t v124 = qword_269C318B0;
  swift_bridgeObjectRetain();
  if (v124 != -1) {
    swift_once();
  }
  uint64_t v125 = *(void *)algn_269C33948;
  *(void *)(v0 + 1232) = qword_269C33940;
  *(void *)(v0 + 1240) = v125;
  uint64_t v126 = qword_269C318B8;
  swift_bridgeObjectRetain();
  if (v126 != -1) {
    swift_once();
  }
  uint64_t v127 = *(void *)algn_269C33958;
  *(void *)(v0 + 1248) = qword_269C33950;
  *(void *)(v0 + 1256) = v127;
  *(void *)(v0 + 1264) = 0xD000000000000013;
  *(void *)(v0 + 1272) = 0x800000025295AA30;
  uint64_t v128 = qword_269C318C0;
  swift_bridgeObjectRetain();
  if (v128 != -1) {
    swift_once();
  }
  uint64_t v129 = *(void *)algn_269C33968;
  *(void *)(v0 + 1280) = qword_269C33960;
  *(void *)(v0 + 1288) = v129;
  uint64_t v130 = qword_269C318C8;
  swift_bridgeObjectRetain();
  if (v130 != -1) {
    swift_once();
  }
  uint64_t v131 = *(void *)algn_269C33978;
  *(void *)(v0 + 1296) = qword_269C33970;
  *(void *)(v0 + 1304) = v131;
  uint64_t v132 = qword_269C318D0;
  swift_bridgeObjectRetain();
  if (v132 != -1) {
    swift_once();
  }
  uint64_t v133 = *(void *)algn_269C33988;
  *(void *)(v0 + 1312) = qword_269C33980;
  *(void *)(v0 + 1328) = 0xD000000000000011;
  *(void *)(v0 + 1336) = 0x800000025295AA50;
  *(void *)(v0 + 1344) = 0xD000000000000012;
  *(void *)(v0 + 1320) = v133;
  *(void *)(v0 + 1352) = 0x800000025295AA70;
  uint64_t v134 = qword_269C318D8;
  swift_bridgeObjectRetain();
  if (v134 != -1) {
    swift_once();
  }
  uint64_t v135 = *(void *)algn_269C33998;
  *(void *)(v0 + 1360) = qword_269C33990;
  *(void *)(v0 + 1368) = v135;
  uint64_t v136 = qword_269C318E0;
  swift_bridgeObjectRetain();
  if (v136 != -1) {
    swift_once();
  }
  uint64_t v137 = *(void *)algn_269C339A8;
  *(void *)(v0 + 1376) = qword_269C339A0;
  *(void *)(v0 + 1384) = v137;
  uint64_t v138 = qword_269C318E8;
  swift_bridgeObjectRetain();
  if (v138 != -1) {
    swift_once();
  }
  uint64_t v139 = *(void *)algn_269C339B8;
  *(void *)(v0 + 1392) = qword_269C339B0;
  *(void *)(v0 + 1400) = v139;
  *(void *)(v0 + 1416) = 0x800000025295AA90;
  *(void *)(v0 + 1424) = 0xD000000000000013;
  *(void *)(v0 + 1408) = 0xD000000000000010;
  *(void *)(v0 + 1432) = 0x800000025295AB10;
  uint64_t v140 = qword_269C318F0;
  swift_bridgeObjectRetain();
  if (v140 != -1) {
    swift_once();
  }
  uint64_t v141 = *(void *)algn_269C339C8;
  *(void *)(v0 + 1440) = qword_269C339C0;
  *(void *)(v0 + 1448) = v141;
  uint64_t v142 = qword_269C318F8;
  swift_bridgeObjectRetain();
  if (v142 != -1) {
    swift_once();
  }
  uint64_t v143 = *(void *)algn_269C339D8;
  *(void *)(v0 + 1456) = qword_269C339D0;
  *(void *)(v0 + 1464) = v143;
  *(void *)(v0 + 1472) = 0xD000000000000011;
  *(void *)(v0 + 1480) = 0x800000025295AB30;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2528CE7D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2529545D0;
  if (qword_269C31748 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C33678;
  *(void *)(v0 + 32) = qword_269C33670;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = 0xD000000000000012;
  *(void *)(v0 + 56) = 0x800000025295A9F0;
  uint64_t v2 = qword_269C317C8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C33778;
  *(void *)(v0 + 64) = qword_269C33770;
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = qword_269C317D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C33788;
  *(void *)(v0 + 80) = qword_269C33780;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = 0xD000000000000010;
  *(void *)(v0 + 104) = 0x800000025295AA10;
  *(void *)(v0 + 112) = 0xD000000000000012;
  *(void *)(v0 + 120) = 0x800000025295A9B0;
  uint64_t v6 = qword_269C31758;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C33698;
  *(void *)(v0 + 128) = qword_269C33690;
  *(void *)(v0 + 136) = v7;
  uint64_t v8 = qword_269C31760;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C336A8;
  *(void *)(v0 + 144) = qword_269C336A0;
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = qword_269C31768;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C336B8;
  *(void *)(v0 + 160) = qword_269C336B0;
  *(void *)(v0 + 168) = v11;
  *(void *)(v0 + 176) = 0xD000000000000010;
  *(void *)(v0 + 184) = 0x800000025295A9D0;
  *(void *)(v0 + 192) = 0xD000000000000010;
  *(void *)(v0 + 200) = 0x800000025295A990;
  uint64_t v12 = qword_269C31770;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C336C8;
  *(void *)(v0 + 208) = qword_269C336C0;
  *(void *)(v0 + 216) = v13;
  uint64_t v14 = qword_269C31778;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C336D8;
  *(void *)(v0 + 224) = qword_269C336D0;
  *(void *)(v0 + 232) = v15;
  uint64_t v16 = qword_269C31780;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C336E8;
  *(void *)(v0 + 240) = qword_269C336E0;
  *(void *)(v0 + 248) = v17;
  uint64_t v18 = qword_269C31788;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C336F8;
  *(void *)(v0 + 256) = qword_269C336F0;
  *(void *)(v0 + 264) = v19;
  *(void *)(v0 + 272) = 0xD000000000000011;
  *(void *)(v0 + 280) = 0x800000025295A970;
  uint64_t v20 = qword_269C317A8;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C33738;
  *(void *)(v0 + 288) = qword_269C33730;
  *(void *)(v0 + 296) = v21;
  uint64_t v22 = qword_269C317B0;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C33748;
  *(void *)(v0 + 304) = qword_269C33740;
  *(void *)(v0 + 312) = v23;
  uint64_t v24 = qword_269C317B8;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C33758;
  *(void *)(v0 + 320) = qword_269C33750;
  *(void *)(v0 + 328) = v25;
  uint64_t v26 = qword_269C317C0;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33768;
  *(void *)(v0 + 336) = qword_269C33760;
  *(void *)(v0 + 344) = v27;
  *(void *)(v0 + 352) = 0xD000000000000012;
  *(void *)(v0 + 360) = 0x800000025295A930;
  uint64_t v28 = qword_269C31790;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C33708;
  *(void *)(v0 + 368) = qword_269C33700;
  *(void *)(v0 + 376) = v29;
  uint64_t v30 = qword_269C31798;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C33718;
  *(void *)(v0 + 384) = qword_269C33710;
  *(void *)(v0 + 392) = v31;
  uint64_t v32 = qword_269C317A0;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C33728;
  *(void *)(v0 + 400) = qword_269C33720;
  *(void *)(v0 + 408) = v33;
  *(void *)(v0 + 416) = 0xD000000000000010;
  *(void *)(v0 + 424) = 0x800000025295A950;
  *(void *)(v0 + 432) = 0xD000000000000010;
  *(void *)(v0 + 440) = 0x800000025295B160;
  uint64_t v34 = qword_269C31738;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void *)algn_269C33658;
  *(void *)(v0 + 448) = qword_269C33650;
  *(void *)(v0 + 456) = v35;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2528CEDBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2529545D0;
  if (qword_269C31878 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C338D8;
  *(void *)(v0 + 32) = qword_269C338D0;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = 0xD000000000000013;
  *(void *)(v0 + 56) = 0x800000025295AB10;
  uint64_t v2 = qword_269C318F0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C339C8;
  *(void *)(v0 + 64) = qword_269C339C0;
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = qword_269C318F8;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C339D8;
  *(void *)(v0 + 80) = qword_269C339D0;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = 0xD000000000000011;
  *(void *)(v0 + 104) = 0x800000025295AB30;
  *(void *)(v0 + 112) = 0xD000000000000013;
  *(void *)(v0 + 120) = 0x800000025295AAD0;
  uint64_t v6 = qword_269C31888;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C338F8;
  *(void *)(v0 + 128) = qword_269C338F0;
  *(void *)(v0 + 136) = v7;
  uint64_t v8 = qword_269C31890;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C33908;
  *(void *)(v0 + 144) = qword_269C33900;
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = qword_269C31898;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C33918;
  *(void *)(v0 + 160) = qword_269C33910;
  *(void *)(v0 + 168) = v11;
  *(void *)(v0 + 176) = 0xD000000000000011;
  *(void *)(v0 + 184) = 0x800000025295AAF0;
  *(void *)(v0 + 192) = 0xD000000000000011;
  *(void *)(v0 + 200) = 0x800000025295AAB0;
  uint64_t v12 = qword_269C318A0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C33928;
  *(void *)(v0 + 208) = qword_269C33920;
  *(void *)(v0 + 216) = v13;
  uint64_t v14 = qword_269C318A8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C33938;
  *(void *)(v0 + 224) = qword_269C33930;
  *(void *)(v0 + 232) = v15;
  uint64_t v16 = qword_269C318B0;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C33948;
  *(void *)(v0 + 240) = qword_269C33940;
  *(void *)(v0 + 248) = v17;
  uint64_t v18 = qword_269C318B8;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C33958;
  *(void *)(v0 + 256) = qword_269C33950;
  *(void *)(v0 + 264) = v19;
  *(void *)(v0 + 272) = 0xD000000000000012;
  *(void *)(v0 + 280) = 0x800000025295AA70;
  uint64_t v20 = qword_269C318D8;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C33998;
  *(void *)(v0 + 288) = qword_269C33990;
  *(void *)(v0 + 296) = v21;
  uint64_t v22 = qword_269C318E0;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C339A8;
  *(void *)(v0 + 304) = qword_269C339A0;
  *(void *)(v0 + 312) = v23;
  uint64_t v24 = qword_269C318E8;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C339B8;
  *(void *)(v0 + 320) = qword_269C339B0;
  *(void *)(v0 + 328) = v25;
  *(void *)(v0 + 336) = 0xD000000000000010;
  *(void *)(v0 + 344) = 0x800000025295AA90;
  *(void *)(v0 + 352) = 0xD000000000000013;
  *(void *)(v0 + 360) = 0x800000025295AA30;
  uint64_t v26 = qword_269C318C0;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33968;
  *(void *)(v0 + 368) = qword_269C33960;
  *(void *)(v0 + 376) = v27;
  uint64_t v28 = qword_269C318C8;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C33978;
  *(void *)(v0 + 384) = qword_269C33970;
  *(void *)(v0 + 392) = v29;
  uint64_t v30 = qword_269C318D0;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C33988;
  *(void *)(v0 + 400) = qword_269C33980;
  *(void *)(v0 + 408) = v31;
  *(void *)(v0 + 416) = 0xD000000000000011;
  *(void *)(v0 + 424) = 0x800000025295AA50;
  *(void *)(v0 + 432) = 0xD000000000000011;
  *(void *)(v0 + 440) = 0x800000025295B180;
  uint64_t v32 = qword_269C31868;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C338B8;
  *(void *)(v0 + 448) = qword_269C338B0;
  *(void *)(v0 + 456) = v33;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2528CF374(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7375637369626968 && a2 == 0xEA00000000003832 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x443364696863726FLL && a2 == 0xE800000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6E69767261 && a2 == 0xE600000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E61487466656CLL && a2 == 0xE800000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E61487468676972 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void sub_2528CF5D4()
{
  qword_269C3D6F0 = 0x6C7070612E6D6F63;
  *(void *)algn_269C3D6F8 = 0xEF6E616D75482E65;
}

const char *sub_2528CF604(char a1)
{
  unint64_t result = "VideoSource";
  switch(a1)
  {
    case 1:
      unint64_t result = "CameraSource";
      break;
    case 2:
      unint64_t result = "ANSTBox";
      break;
    case 3:
      unint64_t result = "PixelBuffer2Tensor";
      break;
    case 4:
      unint64_t result = "OrientationCorrection";
      break;
    case 5:
      unint64_t result = "VideoAdaptor";
      break;
    case 6:
      unint64_t result = "YUV2RGB";
      break;
    case 7:
    case 15:
      unint64_t result = "BodySkeleton2D";
      break;
    case 8:
      unint64_t result = "ApplyCrops";
      break;
    case 9:
      unint64_t result = "PredictSkeleton2D";
      break;
    case 10:
      unint64_t result = "PreProcessSkeleton2D";
      break;
    case 11:
      unint64_t result = "PostProcessSkeleton2D";
      break;
    case 12:
      unint64_t result = "ModelPredictSkeleton2D";
      break;
    case 13:
      unint64_t result = "DarkPostProcess";
      break;
    case 14:
      unint64_t result = "NormalizationPostProcess";
      break;
    case 16:
      unint64_t result = "HandSkeleron3D";
      break;
    case 17:
      unint64_t result = "ActionClassifier";
      break;
    case 18:
      unint64_t result = "RepCounter";
      break;
    case 19:
      unint64_t result = "PreRepCounter";
      break;
    case 20:
      unint64_t result = "PredictRepCounter";
      break;
    case 21:
      unint64_t result = "PostRepCounter";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2528CF7E8(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 2:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 3:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 4:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 5:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 6:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 7:
    case 15:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 8:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 9:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 10:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 11:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 12:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 13:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 14:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 16:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 17:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 18:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 19:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 20:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    case 21:
      if (qword_269C31640 != -1) {
        goto LABEL_46;
      }
      break;
    default:
      if (qword_269C31640 != -1) {
LABEL_46:
      }
        swift_once();
      break;
  }
  swift_bridgeObjectRetain();
  sub_252951E68();

  return sub_252951328();
}

uint64_t sub_2528CFF8C(uint64_t a1)
{
  return sub_2528CFFD4(a1, qword_269C3D700);
}

uint64_t sub_2528CFFA4(uint64_t a1)
{
  return sub_2528CFFD4(a1, qword_269C3D718);
}

uint64_t sub_2528CFFBC(uint64_t a1)
{
  return sub_2528CFFD4(a1, qword_269C3D730);
}

uint64_t sub_2528CFFD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_252951338();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v5, a2);
  uint64_t v8 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_269C31640 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_252951E68();
  sub_252951328();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v7, v3);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_2528D01CC(char a1, double a2)
{
  uint64_t v4 = sub_252951338();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v8, sel_systemUptime);
  double v10 = v9;

  sub_2528CF7E8(a1);
  uint64_t v11 = sub_252951318();
  os_log_type_t v12 = sub_252951CF8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_2528CF604(a1);
    uint64_t v15 = sub_252951E68();
    double v18 = COERCE_DOUBLE(sub_25293961C(v15, v16, &v19));
    sub_252951DE8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    double v18 = (v10 - a2) * 1000.0;
    sub_252951DE8();
    _os_log_impl(&dword_2528A2000, v11, v12, "%s: %f", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533C16C0](v14, -1, -1);
    MEMORY[0x2533C16C0](v13, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t static Hands3DSkeletonTracker.requestAssets()()
{
  return sub_2528D0458(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2528D0458(uint64_t (*a1)(void))
{
  return a1();
}

id Hands3DSkeletonTracker.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for OneEuroFilter3D();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_OWORD *)(v3 + 112) = xmmword_252954CB0;
  *(_OWORD *)(v3 + 128) = xmmword_252954CC0;
  *(_OWORD *)(v3 + 144) = xmmword_252954CD0;
  *(_OWORD *)(v3 + 160) = xmmword_252954CB0;
  *(void *)(v3 + 176) = 1065353216;
  sub_2528D0680((uint64_t)v25);
  sub_2528D1884((uint64_t)v25, v3 + 192, &qword_269C32140);
  sub_2529513B8();
  uint64_t v4 = sub_252951358();
  MEMORY[0x270FA5388](v4 - 8);
  sub_252951348();
  uint64_t v5 = sub_2529513A8();
  sub_252910520((uint64_t)v23);
  if (v1)
  {
    swift_release();
    return (id)swift_release();
  }
  else
  {
    long long v20 = v23[8];
    long long v21 = v23[9];
    uint64_t v22 = v24;
    long long v16 = v23[4];
    long long v17 = v23[5];
    long long v18 = v23[6];
    long long v19 = v23[7];
    long long v12 = v23[0];
    long long v13 = v23[1];
    long long v14 = v23[2];
    long long v15 = v23[3];
    id v6 = sub_25294B500();
    char v8 = v7;
    uint64_t v10 = v9;
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
    *(_OWORD *)(a1 + 160) = v20;
    *(_OWORD *)(a1 + 176) = v21;
    *(_OWORD *)(a1 + 96) = v16;
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 128) = v18;
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = v14;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v8 & 1;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 192) = v22;
    *(void *)(a1 + 200) = v5;
    *(void *)(a1 + 208) = v3;
  }
  return result;
}

uint64_t type metadata accessor for OneEuroFilter3D()
{
  return self;
}

double sub_2528D0680(uint64_t a1)
{
  *(unsigned char *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t Hands3DSkeletonTracker.applied(to:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = a2;
  long long v4 = v2[11];
  *(_OWORD *)(v3 + 176) = v2[10];
  *(_OWORD *)(v3 + 192) = v4;
  *(_OWORD *)(v3 + 208) = v2[12];
  long long v5 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v5;
  long long v6 = v2[9];
  *(_OWORD *)(v3 + 144) = v2[8];
  *(_OWORD *)(v3 + 160) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  long long v8 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v8;
  long long v9 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v9;
  return MEMORY[0x270FA2498](sub_2528D06F8, 0, 0);
}

uint64_t sub_2528D06F8()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v1, sel_systemUptime);
  v0[30] = v2;

  uint64_t v3 = (void *)swift_task_alloc();
  v0[31] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2528D07C8;
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[29];
  return sub_252901B08(v4, v5);
}

uint64_t sub_2528D07C8()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528D0944;
  }
  else {
    uint64_t v2 = sub_2528D08DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528D08DC()
{
  sub_2528D01CC(16, *(double *)(v0 + 240));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528D0944()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Hands3DSkeletonTracker.applied(to:cameraIntrinsics:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v13 = v6[10];
  long long v14 = v6[11];
  long long v15 = v6[8];
  *(_OWORD *)(v7 + 360) = v6[9];
  *(_OWORD *)(v7 + 376) = v13;
  long long v16 = v6[12];
  *(_OWORD *)(v7 + 392) = v14;
  *(_OWORD *)(v7 + 408) = v16;
  long long v17 = v6[6];
  long long v18 = v6[7];
  long long v19 = v6[4];
  *(_OWORD *)(v7 + 296) = v6[5];
  *(_OWORD *)(v7 + 312) = v17;
  *(_OWORD *)(v7 + 328) = v18;
  *(_OWORD *)(v7 + 344) = v15;
  long long v20 = *v6;
  *(_OWORD *)(v7 + 232) = v6[1];
  long long v21 = v6[3];
  *(_OWORD *)(v7 + 248) = v6[2];
  *(_OWORD *)(v7 + 264) = v21;
  *(_OWORD *)(v7 + 280) = v19;
  *(void *)(v7 + 816) = a6;
  *(void *)(v7 + 808) = a5;
  *(void *)(v7 + 800) = a4;
  *(void *)(v7 + 792) = a2;
  *(void *)(v7 + 632) = a1;
  *(_OWORD *)(v7 + 216) = v20;
  *(void *)(v7 + 824) = *((void *)v6 + 26);
  sub_2528D1598(v7 + 216);
  long long v22 = *(_OWORD *)(v7 + 360);
  long long v23 = *(_OWORD *)(v7 + 392);
  long long v24 = *(_OWORD *)(v7 + 408);
  *(_OWORD *)(v7 + 584) = *(_OWORD *)(v7 + 376);
  *(_OWORD *)(v7 + 600) = v23;
  *(_OWORD *)(v7 + 616) = v24;
  long long v25 = *(_OWORD *)(v7 + 296);
  long long v26 = *(_OWORD *)(v7 + 328);
  long long v27 = *(_OWORD *)(v7 + 344);
  *(_OWORD *)(v7 + 520) = *(_OWORD *)(v7 + 312);
  *(_OWORD *)(v7 + 536) = v26;
  *(_OWORD *)(v7 + 552) = v27;
  *(_OWORD *)(v7 + 568) = v22;
  long long v28 = *(_OWORD *)(v7 + 264);
  long long v29 = *(_OWORD *)(v7 + 280);
  *(_OWORD *)(v7 + 456) = *(_OWORD *)(v7 + 248);
  *(_OWORD *)(v7 + 472) = v28;
  long long v30 = *(_OWORD *)(v7 + 232);
  *(_OWORD *)(v7 + 488) = v29;
  *(_OWORD *)(v7 + 504) = v25;
  *(_OWORD *)(v7 + 424) = *(_OWORD *)(v7 + 216);
  *(_OWORD *)(v7 + 440) = v30;
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v7 + 832) = v31;
  *uint64_t v31 = v7;
  v31[1] = sub_2528D0AD0;
  return sub_2529025B0(a2, a3, a4, a5, a6);
}

uint64_t sub_2528D0AD0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 840) = a1;
  *(void *)(v3 + 848) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2528D0DB8;
  }
  else {
    uint64_t v4 = sub_2528D0BE8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528D0BE8()
{
  uint64_t v1 = (__CVBuffer *)v0[99];
  size_t Height = CVPixelBufferGetHeight(v1);
  size_t Width = CVPixelBufferGetWidth(v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[107] = v4;
  void *v4 = v0;
  v4[1] = sub_2528D0CA0;
  uint64_t v5 = v0[105];
  return sub_2528E2304(v5, Height, Width);
}

uint64_t sub_2528D0CA0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 864) = a1;
  *(void *)(v3 + 872) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2528D0FD4;
  }
  else {
    uint64_t v4 = sub_2528D0E1C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528D0DB8()
{
  sub_2528D1700(v0 + 216);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528D0E1C()
{
  uint64_t v1 = *(void *)(v0 + 864);
  swift_bridgeObjectRelease();
  sub_2528D1700(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 864);
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = *(void *)(v0 + 824);
    uint64_t v4 = *(void *)(v2 + 32);
    char v5 = *(unsigned char *)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 48);
    *(void *)(v0 + 880) = v6;
    uint64_t v7 = *(void *)(v2 + 56);
    *(void *)(v0 + 888) = v7;
    long long v18 = *(_OWORD *)(v2 + 80);
    long long v19 = *(_OWORD *)(v2 + 64);
    uint64_t v8 = *(void *)(v2 + 96);
    char v9 = *(unsigned char *)(v2 + 104);
    long long v16 = *(_OWORD *)(v2 + 128);
    long long v17 = *(_OWORD *)(v2 + 112);
    long long v14 = *(_OWORD *)(v2 + 160);
    long long v15 = *(_OWORD *)(v2 + 144);
    char v10 = *(unsigned char *)(v2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 640) = v4;
    *(unsigned char *)(v0 + 648) = v5;
    *(void *)(v0 + 656) = v6;
    *(void *)(v0 + 664) = v7;
    *(_OWORD *)(v0 + 672) = v19;
    *(_OWORD *)(v0 + 688) = v18;
    *(void *)(v0 + 704) = v8;
    *(unsigned char *)(v0 + 712) = v9;
    *(_OWORD *)(v0 + 720) = v17;
    *(_OWORD *)(v0 + 736) = v16;
    *(_OWORD *)(v0 + 752) = v15;
    *(_OWORD *)(v0 + 768) = v14;
    *(unsigned char *)(v0 + 784) = v10;
    return MEMORY[0x270FA2498](sub_2528D1044, v3, 0);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 632);
    swift_bridgeObjectRelease();
    sub_2528D1860(v0 + 16);
    sub_2528D1884(v0 + 16, v11, (uint64_t *)&unk_269C32158);
    long long v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_2528D0FD4()
{
  swift_bridgeObjectRelease();
  sub_2528D1700(v0 + 216);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528D1044()
{
  sub_2528D1134(v0 + 80, v0[100], v0[101], v0[102], v0[79]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2528D10DC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = a2;
  long long v4 = v2[11];
  *(_OWORD *)(v3 + 176) = v2[10];
  *(_OWORD *)(v3 + 192) = v4;
  *(_OWORD *)(v3 + 208) = v2[12];
  long long v5 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v5;
  long long v6 = v2[9];
  *(_OWORD *)(v3 + 144) = v2[8];
  *(_OWORD *)(v3 + 160) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  long long v8 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v8;
  long long v9 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v9;
  return MEMORY[0x270FA2498](sub_2528D06F8, 0, 0);
}

uint64_t sub_2528D1134@<X0>(uint64_t *a1@<X0>, CMTimeValue a2@<X1>, uint64_t a3@<X2>, CMTimeEpoch a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  uint64_t v7 = a1[3];
  uint64_t v42 = a1[2];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v12 = a1[8];
  char v13 = *((unsigned char *)a1 + 72);
  long long v48 = *((_OWORD *)a1 + 6);
  long long v49 = *((_OWORD *)a1 + 5);
  long long v46 = *((_OWORD *)a1 + 8);
  long long v47 = *((_OWORD *)a1 + 7);
  int v14 = *((unsigned __int8 *)a1 + 144);
  time.value = a2;
  *(void *)&time.timescale = a3;
  time.epoch = a4;
  double Seconds = CMTimeGetSeconds(&time);
  uint64_t v41 = v12;
  uint64_t v96 = v5;
  char v97 = v6;
  uint64_t v98 = v42;
  uint64_t v99 = v7;
  uint64_t v100 = v8;
  uint64_t v101 = v9;
  uint64_t v102 = v10;
  uint64_t v103 = v11;
  uint64_t v104 = v12;
  char v105 = v13;
  unint64_t v16 = 0xD000000000000010;
  long long v106 = v49;
  long long v107 = v48;
  long long v108 = v47;
  long long v109 = v46;
  char v110 = v14;
  if (v14) {
    unint64_t v16 = 0xD000000000000011;
  }
  unint64_t v17 = 0x800000025295AAF0;
  if (!v14) {
    unint64_t v17 = 0x800000025295A9D0;
  }
  unint64_t v81 = v16;
  unint64_t v82 = v17;
  Skeleton.joint(for:)((uint64_t *)&v81, (uint64_t)&time);
  sub_2528D1884((uint64_t)&time, (uint64_t)v80, (uint64_t *)&unk_269C32158);
  sub_2528D1884((uint64_t)v80, (uint64_t)&v81, (uint64_t *)&unk_269C32158);
  if (sub_2528D2118((uint64_t)&v81) == 1)
  {
    long long v18 = v80;
  }
  else
  {
    float v19 = Seconds;
    unint64_t v29 = v82;
    uint64_t v30 = v81;
    uint64_t v27 = v84;
    uint64_t v28 = v83;
    long long v43 = v85;
    long long v38 = v87;
    long long v39 = v86;
    long long v36 = v89;
    long long v37 = v88;
    long long v34 = v91;
    long long v35 = v90;
    long long v32 = v93;
    long long v33 = v92;
    long long v31 = v94;
    uint64_t v20 = v40 + 192;
    char v26 = v95;
    sub_2528D1884(v40 + 192, (uint64_t)v78, &qword_269C32140);
    sub_2528D1884((uint64_t)v78, (uint64_t)v79, &qword_269C32140);
    if (sub_2528D2130((uint64_t)v79) != 1)
    {
      sub_2528D1884((uint64_t)v78, (uint64_t)v66, &qword_269C32140);
      if (v66[0] != v5)
      {
        *(_OWORD *)(v40 + 112) = xmmword_252954CB0;
        *(_OWORD *)(v40 + 128) = xmmword_252954CC0;
        *(_OWORD *)(v40 + 144) = xmmword_252954CD0;
        *(_OWORD *)(v40 + 160) = xmmword_252954CB0;
        *(void *)(v40 + 176) = 1065353216;
      }
    }
    float v25 = sub_252916118(v19, *(float *)&v43);
    float v24 = sub_252916118(v19, *((float *)&v43 + 1));
    float v21 = sub_252916118(v19, *((float *)&v43 + 2));
    *(void *)&long long v22 = __PAIR64__(LODWORD(v24), LODWORD(v25));
    *((void *)&v22 + 1) = LODWORD(v21);
    long long v44 = v22;
    uint64_t v50 = v5;
    char v51 = v6;
    uint64_t v52 = v42;
    uint64_t v53 = v7;
    uint64_t v54 = v8;
    uint64_t v55 = v9;
    uint64_t v56 = v10;
    uint64_t v57 = v11;
    uint64_t v58 = v41;
    char v59 = v13;
    long long v60 = v49;
    long long v61 = v48;
    long long v62 = v47;
    long long v63 = v46;
    char v64 = v14;
    nullsub_1(&v50);
    sub_2528D1884(v20, (uint64_t)v65, &qword_269C32140);
    sub_2528D1884((uint64_t)&v50, v20, &qword_269C32140);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2528D2070(v65);
    v66[0] = v30;
    v66[1] = v29;
    v66[2] = v28;
    v66[3] = v27;
    long long v67 = v44;
    long long v68 = v39;
    long long v69 = v38;
    long long v70 = v37;
    long long v71 = v36;
    long long v72 = v35;
    long long v73 = v34;
    long long v74 = v33;
    long long v75 = v32;
    long long v76 = v31;
    char v77 = v26;
    nullsub_1(v66);
    long long v18 = v66;
  }
  return sub_2528D1884((uint64_t)v18, a5, (uint64_t *)&unk_269C32158);
}

uint64_t sub_2528D1544()
{
  sub_2528D1884(v0 + 192, (uint64_t)v2, &qword_269C32140);
  sub_2528D2070(v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2528D158C()
{
  return v0;
}

uint64_t sub_2528D1598(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  long long v4 = *(void **)(a1 + 24);
  long long v15 = *(void **)(a1 + 144);
  unint64_t v16 = *(void **)(a1 + 152);
  unint64_t v17 = *(void **)(a1 + 160);
  long long v18 = *(void **)(a1 + 168);
  float v19 = *(void **)(a1 + 176);
  id v5 = *(id *)(a1 + 192);
  swift_retain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v9 = v15;
  id v10 = v16;
  id v11 = v17;
  id v12 = v18;
  id v13 = v19;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_2528D1700(uint64_t a1)
{
  id v10 = *(void **)(a1 + 8);
  id v8 = *(void **)(a1 + 24);
  id v11 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 144);
  uint64_t v3 = *(void **)(a1 + 152);
  long long v4 = *(void **)(a1 + 160);
  id v5 = *(void **)(a1 + 168);
  id v6 = *(void **)(a1 + 176);
  id v9 = *(void **)(a1 + 192);
  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

double sub_2528D1860(uint64_t a1)
{
  *(unsigned char *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_2528D1884(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for Hands3DSkeletonTracker(id *a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Hands3DSkeletonTracker(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v22 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v22;
  uint64_t v23 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v23;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  float v24 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v24;
  float v25 = *(void **)(a2 + 152);
  char v26 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v25;
  *(void *)(a1 + 160) = v26;
  id v11 = *(void **)(a2 + 176);
  uint64_t v27 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v27;
  *(void *)(a1 + 176) = v11;
  uint64_t v28 = v11;
  unint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v29;
  uint64_t v30 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v30;
  id v12 = v3;
  id v13 = v4;
  id v14 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v15 = v24;
  id v16 = v25;
  id v17 = v26;
  id v18 = v27;
  id v19 = v28;
  swift_unknownObjectRetain();
  id v20 = v29;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Hands3DSkeletonTracker(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v10 = *(void **)(a2 + 24);
  id v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v13 = *(void **)(a2 + 144);
  id v14 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 152);
  id v17 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 160);
  id v20 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 168);
  uint64_t v23 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v22;
  id v24 = v22;

  float v25 = *(void **)(a2 + 176);
  char v26 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v25;
  id v27 = v25;

  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v28 = *(void **)(a1 + 192);
  unint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v29;
  id v30 = v29;

  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for Hands3DSkeletonTracker(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_unknownObjectRelease();

  long long v5 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  long long v6 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_unknownObjectRelease();

  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Hands3DSkeletonTracker(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Hands3DSkeletonTracker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Hands3DSkeletonTracker()
{
  return &type metadata for Hands3DSkeletonTracker;
}

uint64_t *sub_2528D2070(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2528D20D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2528D2118(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_2528D2130(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_2528D2148()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Accumulator()
{
  return self;
}

uint64_t sub_2528D21A4(uint64_t a1)
{
  uint64_t v3 = sub_252951A08();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  id v9 = &v20[-v8];
  long long v10 = (unint64_t *)(v1 + 112);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v12 = *(void *)(*(void *)(v1 + 112) + 16);
  uint64_t v13 = v11 - v12;
  if (v11 <= v12)
  {
    swift_beginAccess();
    sub_2528EC8F4((uint64_t)v9);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    unint64_t v15 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v10 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = sub_2528C4584(0, *(void *)(v15 + 16) + 1, 1, v15);
      unint64_t *v10 = v15;
    }
    unint64_t v18 = *(void *)(v15 + 16);
    unint64_t v17 = *(void *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = sub_2528C4584(v17 > 1, v18 + 1, 1, v15);
      unint64_t *v10 = v15;
    }
    *(void *)(v15 + 16) = v18 + 1;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v15+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v18, v7, v3);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    uint64_t v14 = sub_2528EC32C((uint64_t)v9, v13);
    swift_beginAccess();
    sub_2528EC750(v14);
  }
  return swift_endAccess();
}

uint64_t sub_2528D23F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_252951A08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 112);
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    v20[2] = a2;
    v20[3] = a1;
    uint64_t v23 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_252922F08(0, v10, 0);
    uint64_t v11 = v23;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
    v20[1] = v9;
    uint64_t v21 = (v14 + 32) & ~v14;
    uint64_t v22 = v13;
    uint64_t v15 = v9 + v21;
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v22(v8, v15, v5);
      uint64_t v23 = v11;
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_252922F08(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v23;
      }
      *(void *)(v11 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 16))(v11 + v21 + v18 * v16, v8, v5);
      v15 += v16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528D2658();
  return sub_2529516D8();
}

uint64_t sub_2528D25FC()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for Accumulator.BufferManager()
{
  return self;
}

unint64_t sub_2528D2658()
{
  unint64_t result = qword_269C31D18;
  if (!qword_269C31D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C31D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31D18);
  }
  return result;
}

void sub_2528D26B4(void *a1@<X8>)
{
  unint64_t v2 = v1[1];
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v2 == v3)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *v1 + 16 * v2;
    uint64_t v6 = *(void *)(v4 + 32);
    uint64_t v5 = *(void *)(v4 + 40);
    v1[1] = v2 + 1;
    uint64_t v7 = v1[2];
    if (!__OFADD__(v7, 1))
    {
      v1[2] = v7 + 1;
      *a1 = v7;
      a1[1] = v6;
      a1[2] = v5;
      swift_bridgeObjectRetain();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_2528D2708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, uint64_t a8)
{
  *(void *)(v8 + 464) = a6;
  *(void *)(v8 + 472) = a8;
  *(void *)(v8 + 448) = a4;
  *(void *)(v8 + 456) = a5;
  *(void *)(v8 + 432) = a1;
  *(void *)(v8 + 440) = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  *(void *)(v8 + 480) = v11;
  *(void *)(v8 + 488) = *(void *)(v11 - 8);
  *(void *)(v8 + 496) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = swift_task_alloc();
  uint64_t v12 = sub_252951A08();
  *(void *)(v8 + 520) = v12;
  *(void *)(v8 + 528) = *(void *)(v12 - 8);
  *(void *)(v8 + 536) = swift_task_alloc();
  *(void *)(v8 + 544) = swift_task_alloc();
  *(void *)(v8 + 552) = swift_task_alloc();
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v8 + 560) = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 576) = v13;
  *(void *)(v8 + 592) = *(void *)(a3 + 32);
  *(unsigned char *)(v8 + 729) = *(unsigned char *)(a3 + 40);
  *(unsigned char *)(v8 + 730) = *a7;
  return MEMORY[0x270FA2498](sub_2528D28BC, 0, 0);
}

uint64_t sub_2528D28BC()
{
  int v1 = *(unsigned __int8 *)(v0 + 730);
  *(unsigned char *)(v0 + 728) = *(unsigned char *)(v0 + 729);
  if (v1 != 2)
  {
    if (v1 != 1) {
      goto LABEL_6;
    }
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 528);
    uint64_t v4 = *(void *)(v0 + 520);
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v2, *(void *)(v0 + 448), v4);
    uint64_t v5 = (void *)sub_2529518F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_252953970;
    *(void *)(inited + 32) = 1;
    uint64_t v7 = *(void *)(sub_252925138() + 16);
    swift_bridgeObjectRelease();
    *(void *)(inited + 40) = v7;
    *(void *)(inited + 48) = 3;
    LOBYTE(v7) = sub_25294B740(v5, (void *)inited);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if (v7) {
      goto LABEL_6;
    }
    __break(1u);
  }
  uint64_t v8 = *(void *)(v0 + 552);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v10 = *(void *)(v0 + 520);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v8, *(void *)(v0 + 448), v10);
  uint64_t v11 = (void *)sub_2529518F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_252953970;
  *(void *)(v12 + 32) = 1;
  uint64_t v13 = *(void *)(sub_252925604() + 16);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = 3;
  LOBYTE(v13) = sub_25294B740(v11, (void *)v12);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  if ((v13 & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return MEMORY[0x270EE7870](v14, v15, v16);
  }
LABEL_6:
  uint64_t v14 = sub_2529518F8();
  if (*(void *)(v14 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)(v14 + 48);
  swift_bridgeObjectRelease();
  if (v17 == 3)
  {
    unint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v18;
    void *v18 = v0;
    v18[1] = sub_2528D2C18;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_252953740;
    *(void *)(v19 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32220);
    *(void *)(v19 + 64) = sub_2528AB6E8(&qword_269C32228, &qword_269C32220);
    *(void *)(v19 + 32) = 2;
    sub_252951A48();
    swift_bridgeObjectRelease();
    id v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v20;
    *id v20 = v0;
    v20[1] = sub_2528D2E5C;
  }
  uint64_t v15 = MEMORY[0x263F8D5C8];
  uint64_t v16 = MEMORY[0x263F00C50];
  uint64_t v14 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE7870](v14, v15, v16);
}

uint64_t sub_2528D2C18(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 384) = v1;
  *(void *)(v2 + 392) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528D2D18, 0, 0);
}

uint64_t sub_2528D2D18()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = MEMORY[0x263F8EE78];
  int v3 = 1 << *(unsigned char *)(v0 + 730);
  if ((v3 & 0x31) == 0)
  {
    if ((v3 & 0xC) != 0) {
      uint64_t v4 = sub_252925604();
    }
    else {
      uint64_t v4 = sub_252925138();
    }
    uint64_t v2 = v4;
  }
  char v5 = *(unsigned char *)(v0 + 730);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v1;
  *(unsigned char *)(v6 + 24) = v5;
  *(void *)(v0 + 616) = sub_2528D5B24(v2, (void (*)(void *__return_ptr, uint64_t, void *))sub_2528D6898);
  *(void *)(v0 + 624) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 632) = v7;
  void *v7 = v0;
  v7[1] = sub_2528D30FC;
  return MLTensor.matrix4x4()();
}

uint64_t sub_2528D2E5C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  int v3 = (void *)*v1;
  v3[50] = v1;
  v3[51] = a1;
  uint64_t v4 = v2[69];
  uint64_t v5 = v2[66];
  uint64_t v6 = v2[65];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return MEMORY[0x270FA2498](sub_2528D2FB8, 0, 0);
}

uint64_t sub_2528D2FB8()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = MEMORY[0x263F8EE78];
  int v3 = 1 << *(unsigned char *)(v0 + 730);
  if ((v3 & 0x31) == 0)
  {
    if ((v3 & 0xC) != 0) {
      uint64_t v4 = sub_252925604();
    }
    else {
      uint64_t v4 = sub_252925138();
    }
    uint64_t v2 = v4;
  }
  char v5 = *(unsigned char *)(v0 + 730);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v1;
  *(unsigned char *)(v6 + 24) = v5;
  *(void *)(v0 + 616) = sub_2528D5B24(v2, (void (*)(void *__return_ptr, uint64_t, void *))sub_2528D6898);
  *(void *)(v0 + 624) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 632) = v7;
  void *v7 = v0;
  v7[1] = sub_2528D30FC;
  return MLTensor.matrix4x4()();
}

uint64_t sub_2528D30FC(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  char v5 = *v4;
  v5[4] = a3;
  v5[5] = a4;
  uint64_t v5[2] = a1;
  v5[3] = a2;
  v5[1].n128_u64[0] = (unint64_t)v4;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528D3204, 0, 0);
}

uint64_t sub_2528D3204()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 464);
  int v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 528) + 48);
  if (v3(v2, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 512);
    sub_2528D68A4(*(void *)(v0 + 456), v4);
    if (v3(v4, 1, v1) != 1)
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 528) + 32))(*(void *)(v0 + 544), *(void *)(v0 + 512), *(void *)(v0 + 520));
      unint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v29;
      *unint64_t v29 = v0;
      v29[1] = sub_2528D36B0;
      uint64_t v16 = *(void *)(v0 + 496);
      uint64_t v17 = MEMORY[0x263F8D5C8];
      uint64_t v19 = MEMORY[0x263F00C58];
      uint64_t v20 = MEMORY[0x263F00C50];
      uint64_t v18 = MEMORY[0x263F8D5C8];
      return MEMORY[0x270EE76F8](v16, v17, v18, v19, v20);
    }
    sub_2528AE5CC(*(void *)(v0 + 512));
    uint64_t v1 = *(void *)(v0 + 520);
    uint64_t v2 = *(void *)(v0 + 464);
  }
  uint64_t v5 = *(void *)(v0 + 504);
  sub_2528D68A4(v2, v5);
  if (v3(v5, 1, v1) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 528);
    uint64_t v7 = *(void *)(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 464);
    uint64_t v8 = *(void *)(v0 + 472);
    uint64_t v11 = *(void *)(v0 + 448);
    uint64_t v10 = *(void *)(v0 + 456);
    sub_2528AE5CC(*(void *)(v0 + 504));
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v12(v8, v7);
    sub_2528AE5CC(v10);
    v12(v11, v7);
    sub_2528AE5CC(v9);
    char v13 = *(unsigned char *)(v0 + 730);
LABEL_16:
    long long v37 = *(_OWORD *)(v0 + 64);
    long long v36 = *(_OWORD *)(v0 + 80);
    long long v39 = *(_OWORD *)(v0 + 32);
    long long v38 = *(_OWORD *)(v0 + 48);
    uint64_t v40 = *(void *)(v0 + 616);
    uint64_t v41 = *(void *)(v0 + 592);
    uint64_t v42 = *(void *)(v0 + 432);
    char v43 = *(unsigned char *)(v0 + 728);
    long long v44 = *(_OWORD *)(v0 + 560);
    long long v45 = *(_OWORD *)(v0 + 576);
    *(void *)uint64_t v42 = *(void *)(v0 + 440);
    *(unsigned char *)(v42 + 8) = v13;
    *(void *)(v42 + 16) = MEMORY[0x263F8EE78];
    *(void *)(v42 + 24) = v40;
    *(_OWORD *)(v42 + 32) = v44;
    *(_OWORD *)(v42 + 48) = v45;
    *(void *)(v42 + 64) = v41;
    *(unsigned char *)(v42 + 72) = v43;
    *(_OWORD *)(v42 + 80) = v39;
    *(_OWORD *)(v42 + 96) = v38;
    *(_OWORD *)(v42 + 112) = v37;
    *(_OWORD *)(v42 + 128) = v36;
    *(unsigned char *)(v42 + 144) = 2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  uint64_t v14 = *(void *)(v0 + 528);
  (*(void (**)(void, void, void))(v14 + 32))(*(void *)(v0 + 536), *(void *)(v0 + 504), *(void *)(v0 + 520));
  uint64_t v15 = sub_2528CD1C4();
  *(void *)(v0 + 344) = 0;
  *(void *)(v0 + 352) = 0;
  *(void *)(v0 + 336) = v15;
  sub_2528D26B4((void *)(v0 + 360));
  uint64_t v21 = *(void *)(v0 + 376);
  if (!v21)
  {
    id v30 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v31 = *(void *)(v0 + 536);
    uint64_t v32 = *(void *)(v0 + 520);
    uint64_t v33 = *(void *)(v0 + 464);
    uint64_t v35 = *(void *)(v0 + 448);
    uint64_t v34 = *(void *)(v0 + 456);
    v30(*(void *)(v0 + 472), v32);
    sub_2528AE5CC(v34);
    v30(v35, v32);
    swift_bridgeObjectRelease();
    v30(v31, v32);
    sub_2528AE5CC(v33);
    char v13 = 3;
    goto LABEL_16;
  }
  unint64_t v23 = *(void *)(v0 + 360);
  uint64_t v22 = *(void *)(v0 + 368);
  *(void *)(v0 + 672) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 664) = v23;
  *(void *)(v0 + 656) = v22;
  *(void *)(v0 + 648) = v21;
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v23 >= qword_2702D0428)
  {
LABEL_20:
    __break(1u);
    return MEMORY[0x270EE76F8](v16, v17, v18, v19, v20);
  }
  *(void *)(v0 + 680) = *((void *)&unk_2702D0418 + v23 + 4);
  *(void *)(v0 + 688) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v24 + 16) = xmmword_252954DF0;
  uint64_t v26 = MEMORY[0x263F00C68];
  *(void *)(v24 + 56) = v25;
  *(void *)(v24 + 64) = v26;
  *(void *)(v24 + 32) = 0;
  *(void *)(v24 + 96) = v25;
  *(void *)(v24 + 104) = v26;
  *(void *)(v24 + 72) = 0;
  *(void *)(v24 + 136) = v25;
  *(void *)(v24 + 144) = v26;
  *(void *)(v24 + 112) = v23;
  *(_OWORD *)(v24 + 152) = 0u;
  *(_OWORD *)(v24 + 168) = 0u;
  *(_OWORD *)(v24 + 184) = 0u;
  *(_OWORD *)(v24 + 200) = 0u;
  *(_OWORD *)(v24 + 216) = 0u;
  sub_252951A58();
  swift_bridgeObjectRelease();
  id v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v27;
  *id v27 = v0;
  v27[1] = sub_2528D3A4C;
  return MLTensor.matrix4x4()();
}

uint64_t sub_2528D36B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528D37AC, 0, 0);
}

uint64_t sub_2528D37AC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 730);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 480);
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  uint64_t v31 = sub_2529515D8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = MEMORY[0x263F8EE78];
  switch(v1)
  {
    case 1:
      uint64_t v6 = sub_2528CCCF8();
      goto LABEL_7;
    case 2:
      uint64_t v6 = sub_2528CC540();
      goto LABEL_7;
    case 3:
      uint64_t v6 = sub_2528CD1C4();
      goto LABEL_7;
    case 4:
      uint64_t v6 = sub_2528CE7D8();
      goto LABEL_7;
    case 5:
      uint64_t v6 = sub_2528CEDBC();
LABEL_7:
      uint64_t v5 = v6;
      break;
    default:
      break;
  }
  char v7 = *(unsigned char *)(v0 + 730);
  uint64_t v8 = *(void *)(v0 + 528);
  uint64_t v9 = *(void *)(v0 + 520);
  uint64_t v10 = *(void *)(v0 + 472);
  uint64_t v29 = *(void *)(v0 + 544);
  uint64_t v30 = *(void *)(v0 + 464);
  uint64_t v27 = *(void *)(v0 + 456);
  uint64_t v28 = *(void *)(v0 + 448);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = v31;
  *(unsigned char *)(v11 + 24) = v7;
  uint64_t v12 = sub_2528D5C8C(v5, (void (*)(long long *__return_ptr, uint64_t, void *))sub_2528D690C);
  char v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v13(v10, v9);
  sub_2528AE5CC(v27);
  v13(v28, v9);
  swift_bridgeObjectRelease();
  v13(v29, v9);
  sub_2528AE5CC(v30);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  char v14 = *(unsigned char *)(v0 + 730);
  long long v16 = *(_OWORD *)(v0 + 64);
  long long v15 = *(_OWORD *)(v0 + 80);
  long long v18 = *(_OWORD *)(v0 + 32);
  long long v17 = *(_OWORD *)(v0 + 48);
  uint64_t v19 = *(void *)(v0 + 616);
  uint64_t v20 = *(void *)(v0 + 592);
  uint64_t v21 = *(void *)(v0 + 432);
  char v22 = *(unsigned char *)(v0 + 728);
  long long v23 = *(_OWORD *)(v0 + 560);
  long long v24 = *(_OWORD *)(v0 + 576);
  *(void *)uint64_t v21 = *(void *)(v0 + 440);
  *(unsigned char *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v12;
  *(void *)(v21 + 24) = v19;
  *(_OWORD *)(v21 + 32) = v23;
  *(_OWORD *)(v21 + 48) = v24;
  *(void *)(v21 + 64) = v20;
  *(unsigned char *)(v21 + 72) = v22;
  *(_OWORD *)(v21 + 80) = v18;
  *(_OWORD *)(v21 + 96) = v17;
  *(_OWORD *)(v21 + 112) = v16;
  *(_OWORD *)(v21 + 128) = v15;
  *(unsigned char *)(v21 + 144) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_2528D3A4C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5 = *v4;
  unint64_t v6 = (*v4)[34].n128_u64[1];
  unint64_t v7 = (*v4)[33].n128_u64[0];
  unint64_t v8 = (*v4)[32].n128_u64[1];
  v5[6] = a1;
  v5[7] = a2;
  v5[8] = a3;
  v5[9] = a4;
  swift_task_dealloc();
  uint64_t v9 = *(void (**)(unint64_t, unint64_t))(v7 + 8);
  v5[44].n128_u64[0] = (unint64_t)v9;
  v5[44].n128_u64[1] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  return MEMORY[0x270FA2498](sub_2528D3BBC, 0, 0);
}

uint64_t sub_2528D3BBC()
{
  uint64_t v1 = *(void *)(v0 + 664);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252954DF0;
  uint64_t v3 = MEMORY[0x263F8D6C8];
  uint64_t v4 = MEMORY[0x263F00C68];
  *(void *)(v2 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  *(void *)(v2 + 72) = 1;
  *(void *)(v2 + 136) = v3;
  *(void *)(v2 + 144) = v4;
  *(void *)(v2 + 112) = v1;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  sub_252951A58();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 720) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528D3CD8;
  return MLTensor.matrix4x4()();
}

uint64_t sub_2528D3CD8(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5 = *v4;
  unint64_t v6 = (void (*)(unint64_t, unint64_t))(*v4)[44].n128_u64[0];
  unint64_t v7 = (*v4)[34].n128_u64[1];
  unint64_t v8 = (*v4)[32].n128_u64[1];
  v5[10] = a1;
  v5[11] = a2;
  v5[12] = a3;
  v5[13] = a4;
  swift_task_dealloc();
  v6(v7, v8);
  return MEMORY[0x270FA2498](sub_2528D3E40, 0, 0);
}

void sub_2528D3E40()
{
  long long v46 = *(_OWORD *)(v0 + 144);
  sub_2528E50E8((uint64_t)&unk_2702D0710);
  long long v45 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v0 + 672);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v3 = sub_2528C47C4(0, v3[2] + 1, 1, *(void **)(v0 + 672));
  }
  long long v4 = v46;
  HIDWORD(v4) = 0;
  unint64_t v6 = v3[2];
  unint64_t v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    long long v47 = v4;
    long long v44 = sub_2528C47C4((void *)(v5 > 1), v6 + 1, 1, v3);
    long long v4 = v47;
    uint64_t v3 = v44;
  }
  long long v8 = *(_OWORD *)(v0 + 192);
  long long v7 = *(_OWORD *)(v0 + 208);
  long long v10 = *(_OWORD *)(v0 + 160);
  long long v9 = *(_OWORD *)(v0 + 176);
  long long v12 = *(_OWORD *)(v0 + 128);
  long long v11 = *(_OWORD *)(v0 + 144);
  long long v14 = *(_OWORD *)(v0 + 96);
  long long v13 = *(_OWORD *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 680);
  uint64_t v16 = *(void *)(v0 + 664);
  uint64_t v17 = *(void *)(v0 + 656);
  uint64_t v18 = *(void *)(v0 + 648);
  v3[2] = v6 + 1;
  uint64_t v19 = &v3[26 * v6];
  v19[4] = v16;
  v19[5] = v15;
  v19[6] = v17;
  v19[7] = v18;
  *((_OWORD *)v19 + 4) = v4;
  *((_OWORD *)v19 + 5) = v45;
  *((_OWORD *)v19 + 6) = v14;
  *((_OWORD *)v19 + 7) = v13;
  *((_OWORD *)v19 + 8) = v12;
  *((_OWORD *)v19 + 9) = v11;
  *((_OWORD *)v19 + 10) = v10;
  *((_OWORD *)v19 + 11) = v9;
  *((_OWORD *)v19 + 12) = v8;
  *((_OWORD *)v19 + 13) = v7;
  *((unsigned char *)v19 + 224) = 1;
  sub_2528D26B4((void *)(v0 + 360));
  uint64_t v20 = *(void *)(v0 + 376);
  if (v20)
  {
    unint64_t v22 = *(void *)(v0 + 360);
    uint64_t v21 = *(void *)(v0 + 368);
    *(void *)(v0 + 672) = v3;
    *(void *)(v0 + 664) = v22;
    *(void *)(v0 + 656) = v21;
    *(void *)(v0 + 648) = v20;
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < qword_2702D0428)
    {
      *(void *)(v0 + 680) = *((void *)&unk_2702D0418 + v22 + 4);
      *(void *)(v0 + 688) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v23 + 16) = xmmword_252954DF0;
      uint64_t v25 = MEMORY[0x263F00C68];
      *(void *)(v23 + 56) = v24;
      *(void *)(v23 + 64) = v25;
      *(void *)(v23 + 32) = 0;
      *(void *)(v23 + 96) = v24;
      *(void *)(v23 + 104) = v25;
      *(void *)(v23 + 72) = 0;
      *(void *)(v23 + 136) = v24;
      *(void *)(v23 + 144) = v25;
      *(void *)(v23 + 112) = v22;
      *(_OWORD *)(v23 + 152) = 0u;
      *(_OWORD *)(v23 + 168) = 0u;
      *(_OWORD *)(v23 + 184) = 0u;
      *(_OWORD *)(v23 + 200) = 0u;
      *(_OWORD *)(v23 + 216) = 0u;
      sub_252951A58();
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 696) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_2528D3A4C;
      MLTensor.matrix4x4()();
      return;
    }
    __break(1u);
    return;
  }
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
  uint64_t v28 = *(void *)(v0 + 536);
  uint64_t v29 = *(void *)(v0 + 520);
  uint64_t v30 = *(void *)(v0 + 464);
  uint64_t v32 = *(void *)(v0 + 448);
  uint64_t v31 = *(void *)(v0 + 456);
  v27(*(void *)(v0 + 472), v29);
  sub_2528AE5CC(v31);
  v27(v32, v29);
  swift_bridgeObjectRelease();
  v27(v28, v29);
  sub_2528AE5CC(v30);
  long long v34 = *(_OWORD *)(v0 + 64);
  long long v33 = *(_OWORD *)(v0 + 80);
  long long v36 = *(_OWORD *)(v0 + 32);
  long long v35 = *(_OWORD *)(v0 + 48);
  uint64_t v37 = *(void *)(v0 + 616);
  uint64_t v38 = *(void *)(v0 + 592);
  uint64_t v39 = *(void *)(v0 + 432);
  char v40 = *(unsigned char *)(v0 + 728);
  long long v41 = *(_OWORD *)(v0 + 560);
  long long v42 = *(_OWORD *)(v0 + 576);
  *(void *)uint64_t v39 = *(void *)(v0 + 440);
  *(unsigned char *)(v39 + 8) = 3;
  *(void *)(v39 + 16) = v3;
  *(void *)(v39 + 24) = v37;
  *(_OWORD *)(v39 + 32) = v41;
  *(_OWORD *)(v39 + 48) = v42;
  *(void *)(v39 + 64) = v38;
  *(unsigned char *)(v39 + 72) = v40;
  *(_OWORD *)(v39 + 80) = v36;
  *(_OWORD *)(v39 + 96) = v35;
  *(_OWORD *)(v39 + 112) = v34;
  *(_OWORD *)(v39 + 128) = v33;
  *(unsigned char *)(v39 + 144) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v43 = *(void (**)(void))(v0 + 8);
  v43();
}

BOOL static Skeleton.Chirality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Skeleton.joint(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  switch(v5)
  {
    case 1:
      uint64_t v9 = sub_2528CCCF8();
      goto LABEL_7;
    case 2:
      uint64_t v9 = sub_2528CC540();
      goto LABEL_7;
    case 3:
      uint64_t v9 = sub_2528CD1C4();
      goto LABEL_7;
    case 4:
      uint64_t v9 = sub_2528CE7D8();
      goto LABEL_7;
    case 5:
      uint64_t v9 = sub_2528CEDBC();
LABEL_7:
      uint64_t v7 = v9;
      break;
    default:
      break;
  }
  uint64_t v10 = *(void *)(v7 + 16);
  if (v10)
  {
    unint64_t v11 = 0;
    long long v12 = (long long *)(v6 + 112);
    long long v13 = (void *)(v7 + 40);
    while (1)
    {
      BOOL v14 = *(v13 - 1) == v4 && *v13 == v3;
      if (v14 || (sub_252952108() & 1) != 0) {
        break;
      }
      ++v11;
      v12 += 13;
      v13 += 2;
      if (v10 == v11) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    if (v11 >= *(void *)(v6 + 16))
    {
      __break(1u);
      JUMPOUT(0x2528D4384);
    }
    uint64_t v16 = *((void *)v12 - 8);
    uint64_t v17 = *((void *)v12 - 7);
    long long v18 = *(v12 - 3);
    long long v19 = *(v12 - 2);
    long long v20 = *(v12 - 1);
    long long v21 = *v12;
    long long v22 = v12[1];
    long long v23 = v12[2];
    long long v24 = v12[3];
    long long v25 = v12[4];
    long long v26 = v12[5];
    long long v27 = v12[6];
    char v28 = *((unsigned char *)v12 + 112);
    long long v29 = *(v12 - 5);
    uint64_t v30 = v16;
    uint64_t v31 = v17;
    long long v32 = v18;
    long long v33 = v19;
    long long v34 = v20;
    long long v35 = v21;
    long long v36 = v22;
    long long v37 = v23;
    long long v38 = v24;
    long long v39 = v25;
    long long v40 = v26;
    long long v41 = v27;
    char v42 = v28;
    nullsub_1(&v29);
    sub_2528D5E38((uint64_t)&v29, a2);
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    sub_2528D1860((uint64_t)&v29);
    return sub_2528D5E38((uint64_t)&v29, a2);
  }
}

uint64_t Skeleton.id.getter()
{
  return *(void *)v0;
}

void Skeleton.topology.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t Skeleton.joints.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Skeleton.keypoints.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 Skeleton.detectedBoundingRectangle.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 72);
  __n128 result = *(__n128 *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

__n128 Skeleton.modelViewMatrix.getter()
{
  return v0[5];
}

uint64_t Skeleton.Chirality.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t sub_2528D4414(char a1)
{
  return *(void *)&aLeft_1[8 * a1];
}

uint64_t sub_2528D4434()
{
  return sub_2528D4414(*v0);
}

uint64_t sub_2528D443C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528D6778(a1, a2);
  *a3 = result;
  return result;
}

void sub_2528D4464(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2528D4470(uint64_t a1)
{
  unint64_t v2 = sub_2528D5EA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528D44AC(uint64_t a1)
{
  unint64_t v2 = sub_2528D5EA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528D44E8(uint64_t a1)
{
  unint64_t v2 = sub_2528D5F9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528D4524(uint64_t a1)
{
  unint64_t v2 = sub_2528D5F9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528D4560(uint64_t a1)
{
  unint64_t v2 = sub_2528D5EF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528D459C(uint64_t a1)
{
  unint64_t v2 = sub_2528D5EF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528D45D8(uint64_t a1)
{
  unint64_t v2 = sub_2528D5F48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528D4614(uint64_t a1)
{
  unint64_t v2 = sub_2528D5F48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Chirality.hashValue.getter()
{
  return sub_2529521C8();
}

void Skeleton.chirality.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 144);
}

uint64_t sub_2528D46A8@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v6 = 3 * result;
  if ((unsigned __int128)(result * (__int128)3) >> 64 != (3 * result) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v7 = *(void *)(a3 + 16);
  if (v6 >= v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 + 1 >= v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 + 2 >= v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = result;
  if (result < 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = qword_265383C98[a4];
  if (*(void *)(v9 + 16) > (unint64_t)result)
  {
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    LODWORD(v12) = *(_DWORD *)(a3 + 32 + 12 * result);
    int v13 = *(_DWORD *)(a3 + 32 + 4 * (v6 + 2));
    HIDWORD(v12) = *(_DWORD *)(a3 + 32 + 4 * (v6 + 1));
    uint64_t v15 = v12;
    uint64_t v14 = *(void *)(v9 + 8 * result + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a5 = v11;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v8;
    *(void *)(a5 + 24) = v14;
    *(void *)(a5 + 32) = v15;
    *(_DWORD *)(a5 + 40) = v13;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2528D47AC@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v6 = 3 * result;
  if ((unsigned __int128)(result * (__int128)3) >> 64 != (3 * result) >> 63)
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v7 = *(void *)(a3 + 16);
  if (v6 >= v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v6 + 1 >= v7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v6 + 2 >= v7)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  if (result < 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t result = qword_265383CC8[a4];
  if (*(void *)(result + 16) <= v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a3 + 32;
  unsigned int v25 = *(_DWORD *)(a3 + 32 + 4 * v6);
  unsigned int v22 = *(_DWORD *)(a3 + 32 + 4 * (v6 + 1));
  float v24 = *(float *)(a3 + 32 + 4 * (v6 + 2));
  long long v28 = *(_OWORD *)(MEMORY[0x263EF89B0] + 16);
  long long v29 = *MEMORY[0x263EF89B0];
  long long v27 = *(_OWORD *)(MEMORY[0x263EF89B0] + 32);
  int8x16_t v23 = *(int8x16_t *)(MEMORY[0x263EF89B0] + 48);
  uint64_t v12 = *(void *)(result + 8 * v8 + 32);
  uint64_t result = swift_bridgeObjectRelease();
  HIDWORD(v13) = 0;
  float32x2_t v14 = 0;
  float v15 = 0.0;
  if (v12 != -1)
  {
    unint64_t v16 = 3 * v12;
    if ((unsigned __int128)(v12 * (__int128)3) >> 64 == (3 * v12) >> 63)
    {
      if (v16 < v7)
      {
        if (v16 + 1 < v7)
        {
          if (v16 + 2 < v7)
          {
            v14.i32[0] = *(_DWORD *)(v11 + 12 * v12);
            v14.i32[1] = *(_DWORD *)(v11 + 4 * (v16 + 1));
            float v15 = *(float *)(v11 + 4 * (v16 + 2));
            goto LABEL_14;
          }
LABEL_27:
          __break(1u);
          return result;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_14:
  *(void *)&long long v17 = __PAIR64__(v22, v25);
  *((void *)&v17 + 1) = __PAIR64__(v23.u32[3], LODWORD(v24));
  *(void *)&long long v13 = __PAIR64__(v22, v25);
  *((float *)&v13 + 2) = v24;
  long long v20 = v13;
  long long v21 = v17;
  *(float32x2_t *)&long long v18 = vsub_f32((float32x2_t)__PAIR64__(v22, v25), v14);
  HIDWORD(v18) = vextq_s8(v23, v23, 8uLL).i32[1];
  *((float *)&v18 + 2) = v24 - v15;
  long long v26 = v18;
  sub_2528E50E8((uint64_t)&unk_2702D0810);
  *(void *)a5 = v8;
  *(void *)(a5 + 8) = v12;
  *(void *)(a5 + 16) = v10;
  *(void *)(a5 + 24) = v9;
  *(_OWORD *)(a5 + 32) = v20;
  *(_OWORD *)(a5 + 48) = v19;
  *(_OWORD *)(a5 + 64) = v29;
  *(_OWORD *)(a5 + 80) = v28;
  *(_OWORD *)(a5 + 96) = v27;
  *(_OWORD *)(a5 + 112) = v21;
  *(_OWORD *)(a5 + 128) = v29;
  *(_OWORD *)(a5 + 144) = v28;
  *(_OWORD *)(a5 + 160) = v27;
  *(_OWORD *)(a5 + 176) = v26;
  *(unsigned char *)(a5 + 192) = 1;

  return swift_bridgeObjectRetain();
}

void sub_2528D49C0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t Skeleton.keypoint(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  char v6 = *(unsigned char *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = MEMORY[0x263F8EE78];
  int v9 = 1 << v6;
  if ((v9 & 0x31) == 0)
  {
    if ((v9 & 0xC) != 0) {
      uint64_t v10 = sub_252925604();
    }
    else {
      uint64_t v10 = sub_252925138();
    }
    uint64_t v8 = v10;
  }
  uint64_t v11 = *(void *)(v8 + 16);
  if (v11)
  {
    unint64_t v12 = 0;
    long long v13 = (uint64_t *)(v7 + 40);
    float32x2_t v14 = (void *)(v8 + 40);
    while (1)
    {
      BOOL v15 = *(v14 - 1) == v5 && *v14 == v4;
      if (v15 || (sub_252952108() & 1) != 0) {
        break;
      }
      v14 += 2;
      ++v12;
      v13 += 6;
      if (v11 == v12) {
        goto LABEL_14;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v12 >= *(void *)(v7 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v17 = *v13;
      uint64_t v18 = v13[3];
      int v19 = *((_DWORD *)v13 + 8);
      *(void *)a2 = *(v13 - 1);
      *(void *)(a2 + 8) = v17;
      *(_OWORD *)(a2 + 16) = *(_OWORD *)(v13 + 1);
      *(void *)(a2 + 32) = v18;
      *(_DWORD *)(a2 + 40) = v19;
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)(a2 + 28) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void *Skeleton.connections.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (((1 << v1) & 0x31) == 0)
  {
    if (((1 << v1) & 0xC) != 0) {
      uint64_t v3 = sub_252925604();
    }
    else {
      uint64_t v3 = sub_252925138();
    }
  }
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 <= *(void *)(v2 + 16))
    {
      uint64_t v25 = v2 + 32;
      uint64_t v5 = (uint64_t *)(v2 + 40);
      char v6 = (void *)MEMORY[0x263F8EE78];
      uint64_t v26 = v2;
      uint64_t v27 = v1;
      while (1)
      {
        unint64_t v7 = v5[2];
        if ((v7 & 0x8000000000000000) == 0)
        {
          uint64_t v9 = *(v5 - 1);
          uint64_t v8 = *v5;
          uint64_t v10 = v5[1];
          uint64_t v11 = v5[3];
          int v12 = *((_DWORD *)v5 + 8);
          switch(v1)
          {
            case 1:
              swift_bridgeObjectRetain();
              uint64_t v13 = sub_252925138();
              break;
            case 2:
            case 3:
              swift_bridgeObjectRetain();
              uint64_t v13 = sub_252925604();
              break;
            default:
              swift_bridgeObjectRetain();
              uint64_t v13 = MEMORY[0x263F8EE78];
              break;
          }
          unint64_t v14 = *(void *)(v13 + 16);
          swift_bridgeObjectRelease();
          if (v7 >= v14)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v7 >= *(void *)(v2 + 16))
            {
              __break(1u);
              break;
            }
            uint64_t v29 = v10;
            uint64_t v30 = v9;
            BOOL v15 = (uint64_t *)(v25 + 48 * v7);
            uint64_t v16 = v15[1];
            uint64_t v28 = *v15;
            uint64_t v17 = v15[2];
            uint64_t v18 = v15[3];
            uint64_t v19 = v15[4];
            int v20 = *((_DWORD *)v15 + 10);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v6 = sub_2528C4C2C(0, v6[2] + 1, 1, v6);
            }
            unint64_t v22 = v6[2];
            unint64_t v21 = v6[3];
            if (v22 >= v21 >> 1) {
              char v6 = sub_2528C4C2C((void *)(v21 > 1), v22 + 1, 1, v6);
            }
            v6[2] = v22 + 1;
            int8x16_t v23 = &v6[12 * v22];
            v23[4] = v28;
            v23[5] = v16;
            v23[6] = v17;
            v23[7] = v18;
            v23[8] = v19;
            *((_DWORD *)v23 + 18) = v20;
            _OWORD v23[10] = v30;
            v23[11] = v8;
            v23[12] = v29;
            v23[13] = v7;
            v23[14] = v11;
            *((_DWORD *)v23 + 30) = v12;
            uint64_t v2 = v26;
            uint64_t v1 = v27;
          }
        }
        v5 += 6;
        if (!--v4) {
          return v6;
        }
      }
    }
    __break(1u);
    JUMPOUT(0x2528D4D48);
  }
  return (void *)MEMORY[0x263F8EE78];
}

void *Skeleton.bones.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(v1)
  {
    case 1:
      uint64_t v3 = sub_2528CCCF8();
      break;
    case 2:
      uint64_t v3 = sub_2528CC540();
      break;
    case 3:
      uint64_t v3 = sub_2528CD1C4();
      break;
    case 4:
      uint64_t v3 = sub_2528CE7D8();
      break;
    case 5:
      uint64_t v3 = sub_2528CEDBC();
      break;
    default:
      break;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 <= *(void *)(v2 + 16))
    {
      uint64_t v26 = v2 + 32;
      uint64_t v5 = (long long *)(v2 + 112);
      uint64_t v6 = v1;
      char v51 = (void *)MEMORY[0x263F8EE78];
      uint64_t v27 = v2;
      uint64_t v25 = v1;
      while (1)
      {
        unint64_t v7 = *((void *)v5 - 9);
        if ((v7 & 0x8000000000000000) == 0)
        {
          uint64_t v8 = *((void *)v5 - 10);
          uint64_t v9 = *((void *)v5 - 7);
          long long v48 = *(v5 - 2);
          long long v49 = *(v5 - 3);
          long long v46 = *v5;
          long long v47 = *(v5 - 1);
          long long v44 = v5[2];
          long long v45 = v5[1];
          long long v43 = v5[3];
          long long v41 = v5[5];
          long long v42 = v5[4];
          long long v40 = v5[6];
          char v10 = *((unsigned char *)v5 + 112);
          long long v50 = *(long long *)((char *)v5 - 72);
          switch(v6)
          {
            case 1:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2528CCCF8();
              break;
            case 2:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2528CC540();
              break;
            case 3:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2528CD1C4();
              break;
            case 4:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2528CE7D8();
              break;
            case 5:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2528CEDBC();
              break;
            default:
              swift_bridgeObjectRetain();
              uint64_t v11 = MEMORY[0x263F8EE78];
              break;
          }
          unint64_t v12 = *(void *)(v11 + 16);
          swift_bridgeObjectRelease();
          if (v7 >= v12)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v7 >= *(void *)(v2 + 16))
            {
              __break(1u);
              break;
            }
            uint64_t v38 = v8;
            char v39 = v10;
            uint64_t v13 = (uint64_t *)(v26 + 208 * v7);
            uint64_t v15 = *v13;
            uint64_t v14 = v13[1];
            uint64_t v17 = v13[2];
            uint64_t v16 = v13[3];
            long long v36 = *((_OWORD *)v13 + 3);
            long long v37 = *((_OWORD *)v13 + 2);
            long long v34 = *((_OWORD *)v13 + 5);
            long long v35 = *((_OWORD *)v13 + 4);
            long long v32 = *((_OWORD *)v13 + 7);
            long long v33 = *((_OWORD *)v13 + 6);
            long long v30 = *((_OWORD *)v13 + 9);
            long long v31 = *((_OWORD *)v13 + 8);
            long long v28 = *((_OWORD *)v13 + 11);
            long long v29 = *((_OWORD *)v13 + 10);
            char v18 = *((unsigned char *)v13 + 192);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v51 = sub_2528C4D50(0, v51[2] + 1, 1, v51);
            }
            unint64_t v20 = v51[2];
            unint64_t v19 = v51[3];
            long long v21 = v50;
            if (v20 >= v19 >> 1)
            {
              int8x16_t v23 = sub_2528C4D50((void *)(v19 > 1), v20 + 1, 1, v51);
              long long v21 = v50;
              char v51 = v23;
            }
            v51[2] = v20 + 1;
            unint64_t v22 = &v51[52 * v20];
            v22[4] = v15;
            v22[5] = v14;
            v22[6] = v17;
            v22[7] = v16;
            *((_OWORD *)v22 + 4) = v37;
            *((_OWORD *)v22 + 5) = v36;
            *((_OWORD *)v22 + 6) = v35;
            *((_OWORD *)v22 + 7) = v34;
            *((_OWORD *)v22 + 8) = v33;
            *((_OWORD *)v22 + 9) = v32;
            *((_OWORD *)v22 + 10) = v31;
            *((_OWORD *)v22 + 11) = v30;
            *((_OWORD *)v22 + 12) = v29;
            *((_OWORD *)v22 + 13) = v28;
            *((unsigned char *)v22 + 224) = v18;
            *(void *)((char *)v22 + 225) = *(void *)v52;
            v22[29] = *(void *)&v52[7];
            v22[30] = v38;
            *(_OWORD *)(v22 + 31) = v21;
            v22[33] = v9;
            *((_OWORD *)v22 + 17) = v49;
            *((_OWORD *)v22 + 18) = v48;
            *((_OWORD *)v22 + 19) = v47;
            *((_OWORD *)v22 + 20) = v46;
            *((_OWORD *)v22 + 21) = v45;
            *((_OWORD *)v22 + 22) = v44;
            *((_OWORD *)v22 + 23) = v43;
            *((_OWORD *)v22 + 24) = v42;
            *((_OWORD *)v22 + 25) = v41;
            *((_OWORD *)v22 + 26) = v40;
            *((unsigned char *)v22 + 432) = v39;
            uint64_t v2 = v27;
            uint64_t v6 = v25;
          }
        }
        v5 += 13;
        if (!--v4) {
          return v51;
        }
      }
    }
    __break(1u);
    JUMPOUT(0x2528D50F4);
  }
  return (void *)MEMORY[0x263F8EE78];
}

void Skeleton.boundingRectangle.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    unint64_t v4 = (void *)(v2 + 64);
    float v5 = INFINITY;
    float v6 = -INFINITY;
    float v7 = -INFINITY;
    float v8 = INFINITY;
    do
    {
      uint64_t v9 = *v4;
      if (COERCE_FLOAT(*v4) >= 0.0 && *((float *)&v9 + 1) >= 0.0)
      {
        if (*(float *)&v9 < v8) {
          LODWORD(v8) = *v4;
        }
        if (v7 <= *(float *)&v9) {
          LODWORD(v7) = *v4;
        }
        if (*((float *)&v9 + 1) < v5) {
          LODWORD(v5) = HIDWORD(*v4);
        }
        if (v6 <= *((float *)&v9 + 1)) {
          LODWORD(v6) = HIDWORD(*v4);
        }
      }
      v4 += 6;
      --v3;
    }
    while (v3);
  }
  else
  {
    float v5 = INFINITY;
    float v6 = -INFINITY;
    float v7 = -INFINITY;
    float v8 = INFINITY;
  }
  *(void *)a1 = *v1;
  *(float *)(a1 + 8) = v8;
  *(float *)(a1 + 12) = v5;
  *(float *)(a1 + 16) = v7 - v8;
  *(float *)(a1 + 20) = (float)(v6 - v5) + 0.0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
}

uint64_t Skeleton.Chirality.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32168);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  int8x16_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32170);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  float v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32178);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32180);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528D5EA0();
  sub_252952208();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2528D5F48();
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_2528D5EF4();
      uint64_t v17 = v23;
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_2528D5F9C();
    sub_252952038();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t Skeleton.Chirality.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C321A8);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  long long v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C321B0);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C321B8);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  float v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C321C0);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528D5EA0();
  uint64_t v12 = (uint64_t)v39;
  sub_2529521E8();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  char v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_252952028();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_252951E98();
    swift_allocError();
    int8x16_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C320A8);
    *int8x16_t v23 = &type metadata for Skeleton.Chirality;
    sub_252951FB8();
    sub_252951E88();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2528D5F48();
      uint64_t v18 = v30;
      sub_252951FA8();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_2528D5EF4();
      uint64_t v25 = v30;
      sub_252951FA8();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_2528D5F9C();
    uint64_t v24 = v30;
    sub_252951FA8();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_2528D5AF4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Skeleton.Chirality.init(from:)(a1, a2);
}

uint64_t sub_2528D5B0C(void *a1)
{
  return Skeleton.Chirality.encode(to:)(a1);
}

uint64_t sub_2528D5B24(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t, void *))
{
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_252922F48(0, 0, 0);
  uint64_t v3 = v26;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v24 = v5;
      v25[0] = v7;
      v25[1] = v8;
      swift_bridgeObjectRetain();
      a2(v20, v5, v25);
      swift_bridgeObjectRelease();
      uint64_t v9 = v20[0];
      uint64_t v10 = v20[1];
      long long v11 = v21;
      uint64_t v12 = v22;
      int v13 = v23;
      uint64_t v26 = v3;
      unint64_t v15 = *(void *)(v3 + 16);
      unint64_t v14 = *(void *)(v3 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = v21;
        sub_252922F48(v14 > 1, v15 + 1, 1);
        long long v11 = v18;
        uint64_t v3 = v26;
      }
      ++v5;
      v6 += 2;
      *(void *)(v3 + 16) = v15 + 1;
      uint64_t v16 = v3 + 48 * v15;
      *(void *)(v16 + 32) = v9;
      *(void *)(v16 + 40) = v10;
      *(_OWORD *)(v16 + 48) = v11;
      *(void *)(v16 + 64) = v12;
      *(_DWORD *)(v16 + 72) = v13;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2528D5C8C(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, void *))
{
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_252922F28(0, 0, 0);
  uint64_t v3 = v55;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v53 = v5;
      v54[0] = v7;
      v54[1] = v8;
      swift_bridgeObjectRetain();
      a2(&v39, v5, v54);
      swift_bridgeObjectRelease();
      long long v9 = v39;
      uint64_t v10 = v40;
      uint64_t v11 = v41;
      long long v12 = v42;
      long long v13 = v43;
      long long v14 = v44;
      long long v15 = v45;
      long long v16 = v46;
      long long v17 = v47;
      long long v18 = v48;
      long long v19 = v49;
      unint64_t v21 = *(void *)(v3 + 16);
      unint64_t v20 = *(void *)(v3 + 24);
      long long v23 = v50;
      long long v22 = v51;
      char v24 = v52;
      uint64_t v55 = v3;
      if (v21 >= v20 >> 1)
      {
        long long v36 = v42;
        long long v37 = v39;
        long long v34 = v44;
        long long v35 = v43;
        long long v32 = v46;
        long long v33 = v45;
        long long v30 = v48;
        long long v31 = v47;
        long long v28 = v51;
        long long v29 = v49;
        long long v27 = v50;
        sub_252922F28(v20 > 1, v21 + 1, 1);
        long long v23 = v27;
        long long v22 = v28;
        long long v19 = v29;
        long long v18 = v30;
        long long v17 = v31;
        long long v16 = v32;
        long long v15 = v33;
        long long v14 = v34;
        long long v13 = v35;
        long long v12 = v36;
        long long v9 = v37;
        uint64_t v3 = v55;
      }
      *(void *)(v3 + 16) = v21 + 1;
      uint64_t v25 = v3 + 208 * v21;
      *(_OWORD *)(v25 + 32) = v9;
      ++v5;
      v6 += 2;
      *(void *)(v25 + 48) = v10;
      *(void *)(v25 + 56) = v11;
      *(_OWORD *)(v25 + 64) = v12;
      *(_OWORD *)(v25 + 80) = v13;
      *(_OWORD *)(v25 + 96) = v14;
      *(_OWORD *)(v25 + 112) = v15;
      *(_OWORD *)(v25 + 128) = v16;
      *(_OWORD *)(v25 + 144) = v17;
      *(_OWORD *)(v25 + 160) = v18;
      *(_OWORD *)(v25 + 176) = v19;
      *(_OWORD *)(v25 + 192) = v23;
      *(_OWORD *)(v25 + 208) = v22;
      *(unsigned char *)(v25 + 224) = v24;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2528D5E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2528D5EA0()
{
  unint64_t result = qword_269C32188;
  if (!qword_269C32188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32188);
  }
  return result;
}

unint64_t sub_2528D5EF4()
{
  unint64_t result = qword_269C32190;
  if (!qword_269C32190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32190);
  }
  return result;
}

unint64_t sub_2528D5F48()
{
  unint64_t result = qword_269C32198;
  if (!qword_269C32198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32198);
  }
  return result;
}

unint64_t sub_2528D5F9C()
{
  unint64_t result = qword_269C321A0;
  if (!qword_269C321A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321A0);
  }
  return result;
}

unint64_t sub_2528D5FF4()
{
  unint64_t result = qword_269C321C8;
  if (!qword_269C321C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321C8);
  }
  return result;
}

uint64_t sub_2528D6048()
{
  return MEMORY[0x263F8D6D8];
}

uint64_t destroy for Skeleton()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Skeleton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Skeleton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

__n128 __swift_memcpy145_16(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for Skeleton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for Skeleton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Skeleton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton()
{
  return &type metadata for Skeleton;
}

ValueMetadata *type metadata accessor for Skeleton.Chirality()
{
  return &type metadata for Skeleton.Chirality;
}

unsigned char *_s5Human8SkeletonV9ChiralityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    const char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528D63F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          const char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton.Chirality.CodingKeys()
{
  return &type metadata for Skeleton.Chirality.CodingKeys;
}

ValueMetadata *type metadata accessor for Skeleton.Chirality.LeftCodingKeys()
{
  return &type metadata for Skeleton.Chirality.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for Skeleton.Chirality.RightCodingKeys()
{
  return &type metadata for Skeleton.Chirality.RightCodingKeys;
}

ValueMetadata *type metadata accessor for Skeleton.Chirality.NoneCodingKeys()
{
  return &type metadata for Skeleton.Chirality.NoneCodingKeys;
}

unint64_t sub_2528D6464()
{
  unint64_t result = qword_269C321D0;
  if (!qword_269C321D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321D0);
  }
  return result;
}

unint64_t sub_2528D64BC()
{
  unint64_t result = qword_269C321D8;
  if (!qword_269C321D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321D8);
  }
  return result;
}

unint64_t sub_2528D6514()
{
  unint64_t result = qword_269C321E0;
  if (!qword_269C321E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321E0);
  }
  return result;
}

unint64_t sub_2528D656C()
{
  unint64_t result = qword_269C321E8;
  if (!qword_269C321E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321E8);
  }
  return result;
}

unint64_t sub_2528D65C4()
{
  unint64_t result = qword_269C321F0;
  if (!qword_269C321F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321F0);
  }
  return result;
}

unint64_t sub_2528D661C()
{
  unint64_t result = qword_269C321F8;
  if (!qword_269C321F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C321F8);
  }
  return result;
}

unint64_t sub_2528D6674()
{
  unint64_t result = qword_269C32200;
  if (!qword_269C32200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32200);
  }
  return result;
}

unint64_t sub_2528D66CC()
{
  unint64_t result = qword_269C32208;
  if (!qword_269C32208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32208);
  }
  return result;
}

unint64_t sub_2528D6724()
{
  unint64_t result = qword_269C32210;
  if (!qword_269C32210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C32210);
  }
  return result;
}

uint64_t sub_2528D6778(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2528D6898@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2528D46A8(a1, a2, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), a3);
}

uint64_t sub_2528D68A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528D690C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2528D47AC(a1, a2, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), a3);
}

uint64_t SceneDescriptor.handSkeletons.getter()
{
  v1[6] = v0;
  uint64_t v2 = sub_252951A08();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = swift_task_alloc();
  v1[10] = v3;
  v1[2] = 0xD00000000000001DLL;
  v1[3] = 0x800000025295A0B0;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[11] = (uint64_t)v4;
  void *v4 = v1;
  v4[1] = sub_2528D6A54;
  return SceneDescriptor.tensor(for:)(v3, v1 + 2);
}

uint64_t sub_2528D6A54()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528D6FE4;
  }
  else {
    uint64_t v2 = sub_2528D6B68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528D6B68()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_2529518F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v0[13] = (uint64_t)v5;
  v0[14] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t result = v5(v1, v2);
  if (*(void *)(v4 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v0[15] = *(void *)(v4 + 40);
    swift_bridgeObjectRelease();
    v0[4] = 0xD00000000000001DLL;
    v0[5] = 0x800000025295A0B0;
    long long v7 = (void *)swift_task_alloc();
    v0[16] = (uint64_t)v7;
    void *v7 = v0;
    v7[1] = sub_2528D6C8C;
    uint64_t v8 = v0[9];
    return SceneDescriptor.tensor(for:)(v8, v0 + 4);
  }
  return result;
}

uint64_t sub_2528D6C8C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528D7050;
  }
  else {
    uint64_t v2 = sub_2528D6DA0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528D6DA0()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[13];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = sub_2529518F8();
  uint64_t result = v1(v2, v3);
  if (*(void *)(v4 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v0[6];
    uint64_t v7 = *(void *)(v4 + 48);
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v6 + *(int *)(type metadata accessor for SceneDescriptor() + 32));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    void *v9 = v0;
    v9[1] = sub_2528D6E9C;
    uint64_t v10 = v0[15];
    return sub_2528E2304(v8, v10, v7);
  }
  return result;
}

uint64_t sub_2528D6E9C(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t sub_2528D6FE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528D7050()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t simd_float4x4.init(from:)(void *a1)
{
  return sub_2528D725C(a1);
}

uint64_t simd_float4x4.encode(to:)(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2529521F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32238);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_252953B10;
  *(__n128 *)(v5 + 32) = a2;
  *(__n128 *)(v5 + 48) = a3;
  *(__n128 *)(v5 + 64) = a4;
  *(__n128 *)(v5 + 80) = a5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32240);
  sub_2528D7400(&qword_269C32248, &qword_269C32250);
  sub_2529520E8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_2528D720C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_2528D725C(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_2528D723C(void *a1)
{
  return simd_float4x4.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_2528D725C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2529521D8();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32240);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_2528D7400(&qword_269C32260, &qword_269C32268);
  sub_2529520D8();
  uint64_t result = v4;
  if (*(void *)(v4 + 16) == 4)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2528D7400(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C32240);
    sub_2528D7480(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2528D7480(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C32258);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2528D74C8(uint64_t a1)
{
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 56) = swift_getObjectType();
  *(unsigned char *)(v2 + 96) = *(unsigned char *)a1;
  *(unsigned char *)(v2 + 97) = *(unsigned char *)(a1 + 1);
  *(void *)(v2 + 64) = *(void *)(a1 + 8);
  *(unsigned char *)(v2 + 98) = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(v2 + 99) = *(unsigned char *)(a1 + 17);
  *(unsigned char *)(v2 + 100) = *(unsigned char *)(a1 + 18);
  *(unsigned char *)(v2 + 101) = *(unsigned char *)(a1 + 19);
  return MEMORY[0x270FA2498](sub_2528D7574, 0, 0);
}

uint64_t sub_2528D7574()
{
  char v23 = *(unsigned char *)(v0 + 100);
  char v24 = *(unsigned char *)(v0 + 101);
  char v21 = *(unsigned char *)(v0 + 98);
  char v22 = *(unsigned char *)(v0 + 99);
  uint64_t v1 = *(void *)(v0 + 64);
  char v19 = *(unsigned char *)(v0 + 96);
  char v20 = *(unsigned char *)(v0 + 97);
  uint64_t v2 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_frontCamera;
  sub_2528D96EC();
  sub_252951A88();
  long long v18 = *(_OWORD *)(v0 + 48);
  *(void *)(v18 + v2) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_frontCameraInput) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_backCamera) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_backCameraInput) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_rotationCoordinator) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_depthDataOutput) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_synchronizedOutputs) = MEMORY[0x263F8EE78];
  uint64_t v4 = v3;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutputSynchronizer) = 0;
  *(void *)(v18 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_continuation) = 0;
  uint64_t v16 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_queue;
  swift_task_alloc();
  long long v17 = (id)v18;
  sub_252951A68();
  sub_252951D28();
  swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  sub_2528D972C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32400);
  sub_2528D9778();
  sub_252951E08();
  uint64_t v5 = *(void *)(sub_252951D38() - 8);
  swift_task_alloc();
  long long v15 = *(void (**)(void))(v5 + 104);
  v15();
  uint64_t v6 = sub_252951D48();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v18 + v16) = v6;
  uint64_t v7 = OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dispatchQueue;
  swift_task_alloc();
  sub_252951A78();
  swift_task_alloc();
  *(void *)(v0 + 40) = MEMORY[0x263F8EE78];
  sub_252951E08();
  swift_task_alloc();
  v15();
  uint64_t v8 = sub_252951D48();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)&v17[v7] = v8;
  *(void *)&v17[OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutput] = 0;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA630]), sel_init);
  *(void *)&v17[OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_cameraSession] = v9;
  uint64_t v10 = &v17[OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration];
  char *v10 = v19;
  v10[1] = v20;
  *((void *)v10 + 1) = v1;
  v10[16] = v21;
  v10[17] = v22;
  v10[18] = v23;
  v10[19] = v24;
  v17[OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_currentCameraPosition] = v19;

  *(_OWORD *)(v0 + 16) = v18;
  id v11 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  *(void *)(v0 + 72) = v11;
  uint64_t v25 = (uint64_t (*)(void))((char *)&dword_269C32C10 + dword_269C32C10);
  id v12 = v11;
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v13;
  *long long v13 = v0;
  v13[1] = sub_2528D7A10;
  return v25();
}

uint64_t sub_2528D7A10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_2528D7BE8;
  }
  else
  {
    uint64_t v3 = sub_2528D7B2C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528D7B2C()
{
  uint64_t v1 = v0[11];
  sub_2528BBA08();
  uint64_t v2 = (void *)v0[9];

  if (v1)
  {

    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v6 = v0[9];
    return v5(v6);
  }
}

uint64_t sub_2528D7BE8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_2528D7C4C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_cameraSession], sel_stopRunning);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t _s13CameraManagerCMa()
{
  return self;
}

id sub_2528D7F60@<X0>(char *a1@<X8>)
{
  objc_super v3 = *(void **)(v1 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_rotationCoordinator);
  if (v3)
  {
    id result = objc_msgSend(v3, sel_videoRotationAngleForHorizonLevelCapture);
    if (v5 <= -45.0 || v5 > 45.0)
    {
      if (v5 <= 45.0 || v5 > 135.0)
      {
        if (v5 <= 135.0 || v5 > 225.0)
        {
          if (v5 > 315.0 || v5 <= 225.0) {
            char v10 = 3;
          }
          else {
            char v10 = 1;
          }
        }
        else
        {
          char v10 = 2;
        }
      }
      else
      {
        char v10 = 0;
      }
    }
    else
    {
      char v10 = 3;
    }
    *a1 = v10;
  }
  else
  {
    id result = (id)sub_252951F28();
    __break(1u);
  }
  return result;
}

void sub_2528D8090(opaqueCMSampleBuffer *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v15 = type metadata accessor for ImageDescriptor();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  long long v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v20 = (char *)&v29 - v19;
  char v21 = CMSampleBufferGetImageBuffer(a1);
  if (!v21) {
    goto LABEL_8;
  }
  char v22 = v21;
  sub_2528D8E10(v21);
  if (v7)
  {

LABEL_8:
    sub_252951F28();
    __break(1u);
    return;
  }
  long long v31 = v23;
  char v32 = a4;
  __int32 v24 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_configuration + 16);
  id v30 = v23;
  swift_bridgeObjectRetain();
  ImageDescriptor.init(imageBuffer:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)(&v31, a3, &v32, a5, v24, a6, (uint64_t)v20);
  sub_2528D01CC(1, a7);
  uint64_t v25 = (uint64_t *)(a2 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_continuation);
  swift_beginAccess();
  uint64_t v26 = *v25;
  if (*v25)
  {
    swift_endAccess();
    sub_2528AC618((uint64_t)v20, (uint64_t)v18);
    sub_2528AE62C((uint64_t)v18, *(void *)(*(void *)(v26 + 64) + 40));
    swift_continuation_throwingResume();

    id v27 = v30;
    sub_2528AE3B8((uint64_t)v20);
  }
  else
  {
    sub_2528AE3B8((uint64_t)v20);
    swift_endAccess();

    id v28 = v30;
  }
}

CMTime *sub_2528D83B8(opaqueCMSampleBuffer *a1)
{
  id result = CMSampleBufferGetPresentationTimeStamp(&v9, a1);
  CMTimeValue v3 = 1000 * v9.value;
  if ((unsigned __int128)(v9.value * (__int128)1000) >> 64 != (1000 * v9.value) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t timescale = v9.timescale;
  if (!v9.timescale)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  if (v9.timescale == -1 && v3 == 0x8000000000000000)
  {
    __break(1u);
    return result;
  }
  if (qword_269C31650 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  CMTimeValue v4 = v3 / timescale;
  uint64_t v5 = sub_252951338();
  __swift_project_value_buffer(v5, (uint64_t)qword_269C3D718);
  uint64_t v6 = sub_252951318();
  os_log_type_t v7 = sub_252951CE8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    v9.value = v4;
    sub_252951DE8();
    _os_log_impl(&dword_2528A2000, v6, v7, "Timestamp: %lld", v8, 0xCu);
    MEMORY[0x2533C16C0](v8, -1, -1);
  }

  return (CMTime *)v4;
}

uint64_t sub_2528D8518(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = *a1;
  uint64_t v6 = a1[1];
  unint64_t v7 = a4 >> 62;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_25;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 < 1) {
        goto LABEL_18;
      }
      if (v7)
      {
        if (v7 == 1) {
          uint64_t v14 = (int)a3;
        }
        else {
          uint64_t v14 = *(void *)(a3 + 16);
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      if ((unint64_t)(v6 - 0x2000000000000000) >> 62 != 3)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v15 = 4 * v6;
      if (v10 < 4 * v6) {
        uint64_t v15 = v10;
      }
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_23;
      }
      if (v16 < v14) {
        goto LABEL_24;
      }
      if (v14 != v16)
      {
        if (!result)
        {
LABEL_28:
          __break(1u);
          JUMPOUT(0x2528D8660);
        }
        uint64_t result = sub_2529512A8();
        uint64_t v9 = v16 - v14;
        if (!__OFSUB__(v16, v14)) {
          goto LABEL_21;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_18:
      uint64_t v9 = 0;
LABEL_21:
      *a2 = v9 / 4;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a3 + 16);
      uint64_t v11 = *(void *)(a3 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v10 = BYTE6(a4);
      goto LABEL_6;
  }
}

uint64_t sub_2528D8670@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (id)CMGetAttachment(a1, (CFStringRef)*MEMORY[0x263F01030], 0);
  long long v5 = 0uLL;
  if (result)
  {
    uint64_t v24 = result;
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v6 = v22;
      unint64_t v7 = v23;
      switch(v23 >> 62)
      {
        case 1uLL:
          BOOL v13 = __OFSUB__(HIDWORD(v22), v22);
          uint64_t v14 = (HIDWORD(v22) - v22);
          BOOL v12 = HIDWORD(v22) - (int)v22 < 0;
          if (__OFSUB__(HIDWORD(v22), v22)) {
            goto LABEL_38;
          }
          uint64_t v14 = (int)v14;
LABEL_11:
          uint64_t v17 = v14 + 3;
          if (v14 >= 0) {
            uint64_t v17 = v14;
          }
          if (v14 <= -4) {
            goto LABEL_42;
          }
          int64_t v8 = v17 >> 2;
          if (v14 < 4)
          {
LABEL_5:
            sub_2528B6E98(v22, v23);
            int64_t v8 = 0;
            uint64_t v2 = MEMORY[0x263F8EE78];
          }
          else
          {
LABEL_15:
            sub_2528B6E98(v22, v23);
            uint64_t v2 = sub_252951BD8();
            *(void *)(v2 + 16) = v8;
          }
          uint64_t v24 = 0;
          uint64_t v22 = v2 + 32;
          unint64_t v23 = v8;
          sub_2528D8518(&v22, &v24, v6, v7);
          uint64_t v14 = v24;
          BOOL v13 = __OFSUB__(v8, v24);
          BOOL v12 = v8 - v24 < 0;
          if (v8 < v24)
          {
            __break(1u);
          }
          else
          {
            *(void *)(v2 + 16) = v24;
            sub_2528B3A64(v6, v7);
            uint64_t v14 = *(void *)(v2 + 16);
            if (v14)
            {
              BOOL v13 = __OFSUB__(v14, 1);
              BOOL v12 = v14 - 1 < 0;
              if (v14 != 1)
              {
                BOOL v13 = __OFSUB__(v14, 3);
                BOOL v12 = v14 - 3 < 0;
                if ((unint64_t)v14 >= 3)
                {
                  BOOL v13 = __OFSUB__(v14, 5);
                  BOOL v12 = v14 - 5 < 0;
                  if ((unint64_t)v14 >= 5)
                  {
                    if (v14 != 5)
                    {
                      BOOL v13 = __OFSUB__(v14, 7);
                      BOOL v12 = v14 - 7 < 0;
                      if ((unint64_t)v14 >= 7)
                      {
                        BOOL v13 = __OFSUB__(v14, 9);
                        BOOL v12 = v14 - 9 < 0;
                        if ((unint64_t)v14 >= 9)
                        {
                          if (v14 != 9)
                          {
                            BOOL v13 = __OFSUB__(v14, 11);
                            BOOL v12 = v14 - 11 < 0;
                            if ((unint64_t)v14 >= 0xB)
                            {
                              *(void *)&long long v18 = *(void *)(v2 + 32);
                              *((void *)&v18 + 1) = *(unsigned int *)(v2 + 40);
                              long long v21 = v18;
                              *(void *)&long long v18 = *(void *)(v2 + 48);
                              *((void *)&v18 + 1) = *(unsigned int *)(v2 + 56);
                              long long v20 = v18;
                              *(void *)&long long v18 = *(void *)(v2 + 64);
                              *((void *)&v18 + 1) = *(unsigned int *)(v2 + 72);
                              long long v19 = v18;
                              swift_bridgeObjectRelease();
                              uint64_t result = sub_2528B3A64(v6, v7);
                              long long v11 = v19;
                              long long v10 = v20;
                              long long v5 = v21;
                              char v9 = 0;
                              goto LABEL_27;
                            }
LABEL_37:
                            __break(1u);
LABEL_38:
                            __break(1u);
LABEL_39:
                            __break(1u);
                            if (v12 != v13)
                            {
                              __break(1u);
LABEL_42:
                              sub_252951F18();
                              __break(1u);
                            }
                            *(void *)(v2 + 16) = v14;
                            swift_bridgeObjectRelease();
                            __break(1u);
                            JUMPOUT(0x2528D897CLL);
                          }
LABEL_36:
                          __break(1u);
                          goto LABEL_37;
                        }
LABEL_35:
                        __break(1u);
                        goto LABEL_36;
                      }
LABEL_34:
                      __break(1u);
                      goto LABEL_35;
                    }
LABEL_33:
                    __break(1u);
                    goto LABEL_34;
                  }
LABEL_32:
                  __break(1u);
                  goto LABEL_33;
                }
LABEL_31:
                __break(1u);
                goto LABEL_32;
              }
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
          }
          __break(1u);
          goto LABEL_30;
        case 2uLL:
          uint64_t v16 = *(void *)(v22 + 16);
          uint64_t v15 = *(void *)(v22 + 24);
          BOOL v13 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          BOOL v12 = v14 < 0;
          if (!v13) {
            goto LABEL_11;
          }
          goto LABEL_39;
        case 3uLL:
          goto LABEL_5;
        default:
          int64_t v8 = (v23 >> 50) & 0x3F;
          if (BYTE6(v23) < 4uLL) {
            goto LABEL_5;
          }
          goto LABEL_15;
      }
    }
    char v9 = 1;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
    long long v5 = 0uLL;
  }
  else
  {
    char v9 = 1;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
  }
LABEL_27:
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 48) = v9;
  return result;
}

void *sub_2528D898C(const void *a1)
{
  uint64_t v2 = (__CFString *)sub_252951AB8();
  CFTypeRef v3 = (id)CMGetAttachment(a1, v2, 0);

  if (v3
    && (*(void *)long long v31 = v3,
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v4 = v33;
    if (v33) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v33 = 0;
  }
  long long v5 = (__CFString *)sub_252951AB8();
  CFTypeRef v6 = (id)CMGetAttachment(a1, v5, 0);

  if (!v6
    || (*(void *)long long v31 = v6,
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0),
        (swift_dynamicCast() & 1) == 0)
    || !v32)
  {
    memset(v31, 0, 32);
LABEL_13:
    sub_2528D9630((uint64_t)v31);
    uint64_t v9 = 0;
    goto LABEL_14;
  }
  if (*(void *)(v32 + 16) && (unint64_t v7 = sub_252922FE8(0xD000000000000013, 0x800000025295AD70), (v8 & 1) != 0)) {
    sub_2528D9690(*(void *)(v32 + 56) + 32 * v7, (uint64_t)v31);
  }
  else {
    memset(v31, 0, 32);
  }
  swift_bridgeObjectRelease();
  if (!*(void *)&v31[24]) {
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0);
  int v17 = swift_dynamicCast();
  uint64_t v9 = v32;
  if (!v17) {
    uint64_t v9 = 0;
  }
LABEL_14:
  uint64_t v33 = v9;
  swift_bridgeObjectRelease();
  uint64_t v4 = v33;
  if (!v33)
  {
LABEL_24:
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_25;
  }
LABEL_15:
  if (!*(void *)(v4 + 16)
    || (unint64_t v10 = sub_252922FE8(0x6C75466E616D7548, 0xEF736569646F426CLL), (v11 & 1) == 0)
    || (sub_2528D9690(*(void *)(v4 + 56) + 32 * v10, (uint64_t)v31),
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0),
        (swift_dynamicCast() & 1) == 0)
    || (uint64_t v12 = v32) == 0)
  {
    memset(v31, 0, 32);
LABEL_23:
    sub_2528D9630((uint64_t)v31);
    goto LABEL_24;
  }
  if (*(void *)(v32 + 16) && (unint64_t v13 = sub_252922FE8(0x41737463656A624FLL, 0xEC00000079617272), (v14 & 1) != 0)) {
    sub_2528D9690(*(void *)(v12 + 56) + 32 * v13, (uint64_t)v31);
  }
  else {
    memset(v31, 0, 32);
  }
  swift_bridgeObjectRelease();
  if (!*(void *)&v31[24]) {
    goto LABEL_23;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C323D8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v18 = *(void *)(v32 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v19 = v32 + 32;
  uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_2528D9690(v19, (uint64_t)v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0);
    if (swift_dynamicCast())
    {
      sub_2528E6274(v32, (uint64_t)v31);
      uint64_t v21 = *(void *)v31;
      long long v29 = *(_OWORD *)&v31[24];
      long long v30 = *(_OWORD *)&v31[8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_2528C4E78(0, v15[2] + 1, 1, v15);
      }
      unint64_t v22 = v15[2];
      unint64_t v23 = v15[3];
      unint64_t v24 = v22 + 1;
      if (v22 >= v23 >> 1)
      {
        unint64_t v28 = v22 + 1;
        uint64_t v25 = v15;
        unint64_t v26 = v15[2];
        id v27 = sub_2528C4E78((void *)(v23 > 1), v22 + 1, 1, v25);
        unint64_t v22 = v26;
        unint64_t v24 = v28;
        uint64_t v15 = v27;
      }
      v15[2] = v24;
      long long v20 = &v15[5 * v22];
      void v20[4] = v21;
      *(_OWORD *)(v20 + 5) = v30;
      *(_OWORD *)(v20 + 7) = v29;
    }
    v19 += 32;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  return v15;
}

void sub_2528D8E10(__CVBuffer *a1)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  CVPixelBufferLockBaseAddress(a1, 1uLL);
  if (CVPixelBufferGetPlaneCount(a1) == 2)
  {
    OSType PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
    size_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(a1, 0);
    int64_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(a1, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_252955320;
    uint64_t v6 = sub_252951AE8();
    uint64_t v7 = MEMORY[0x263F8E8F8];
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = v7;
    *(_DWORD *)(inited + 48) = PixelFormatType;
    uint64_t v9 = sub_252951AE8();
    uint64_t v10 = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v9;
    *(void *)(inited + 88) = v11;
    *(void *)(inited + 120) = v10;
    *(void *)(inited + 96) = WidthOfPlane;
    *(void *)(inited + 128) = sub_252951AE8();
    *(void *)(inited + 136) = v12;
    *(void *)(inited + 168) = v10;
    *(void *)(inited + 144) = HeightOfPlane;
    *(void *)(inited + 176) = sub_252951AE8();
    *(void *)(inited + 184) = v13;
    unint64_t v14 = sub_2528EFAE8(MEMORY[0x263F8EE78]);
    *(void *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C323C8);
    *(void *)(inited + 192) = v14;
    uint64_t v15 = sub_252951AE8();
    uint64_t v16 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 224) = v15;
    *(void *)(inited + 232) = v17;
    *(void *)(inited + 264) = v16;
    *(unsigned char *)(inited + 240) = 1;
    *(void *)(inited + 272) = sub_252951AE8();
    *(void *)(inited + 280) = v18;
    *(void *)(inited + 312) = v10;
    *(void *)(inited + 288) = 4096;
    *(void *)(inited + 320) = sub_252951AE8();
    *(void *)(inited + 328) = v19;
    *(void *)(inited + 360) = v10;
    *(void *)(inited + 336) = 64;
    sub_2528EF69C(inited);
    pixelBufferOut[0] = 0;
    CFAllocatorRef v20 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
    size_t Width = CVPixelBufferGetWidth(a1);
    size_t Height = CVPixelBufferGetHeight(a1);
    LODWORD(v10) = CVPixelBufferGetPixelFormatType(a1);
    CFDictionaryRef v23 = (const __CFDictionary *)sub_252951A98();
    swift_bridgeObjectRelease();
    CVPixelBufferCreate(v20, Width, Height, v10, v23, pixelBufferOut);

    if (pixelBufferOut[0])
    {
      unint64_t v24 = pixelBufferOut[0];
      CVPixelBufferLockBaseAddress(v24, 0);
      CVPixelBufferLockBaseAddress(a1, 1uLL);
      int64_t BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(a1, 0);
      BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(v24, 0);
      id v27 = CVPixelBufferGetBaseAddressOfPlane(a1, 0);
      if ((unsigned __int128)(BytesPerRowOfPlane * (__int128)HeightOfPlane) >> 64 == (BytesPerRowOfPlane * HeightOfPlane) >> 63)
      {
        memcpy(BaseAddressOfPlane, v27, BytesPerRowOfPlane * HeightOfPlane);
        int64_t v28 = CVPixelBufferGetHeightOfPlane(a1, 1uLL);
        int64_t v29 = CVPixelBufferGetBytesPerRowOfPlane(a1, 1uLL);
        long long v30 = CVPixelBufferGetBaseAddressOfPlane(v24, 1uLL);
        long long v31 = CVPixelBufferGetBaseAddressOfPlane(a1, 1uLL);
        if ((unsigned __int128)(v29 * (__int128)v28) >> 64 == (v29 * v28) >> 63)
        {
          memcpy(v30, v31, v29 * v28);
          CVPixelBufferUnlockBaseAddress(v24, 0);
          CVPixelBufferUnlockBaseAddress(a1, 1uLL);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  size_t v32 = CVPixelBufferGetWidth(a1);
  int64_t v33 = CVPixelBufferGetHeight(a1);
  BaseAddress = CVPixelBufferGetBaseAddress(a1);
  if (!BaseAddress)
  {
    sub_2528AE4D0();
    swift_allocError();
    *(_OWORD *)uint64_t v42 = 0u;
    *(_OWORD *)(v42 + 16) = 0u;
    *(unsigned char *)(v42 + 32) = 6;
    swift_willThrow();
    return;
  }
  long long v35 = BaseAddress;
  OSType v36 = CVPixelBufferGetPixelFormatType(a1);
  CFDictionaryRef v37 = CVPixelBufferCopyCreationAttributes(a1);
  pixelBufferOut[0] = 0;
  CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB10], v32, v33, v36, v37, pixelBufferOut);
  uint64_t v38 = pixelBufferOut[0];
  size_t BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  if (!v38) {
    goto LABEL_15;
  }
  int64_t v40 = BytesPerRow;
  CVPixelBufferLockBaseAddress(v38, 0);
  uint64_t v41 = CVPixelBufferGetBaseAddress(v38);
  if ((unsigned __int128)(v33 * (__int128)v40) >> 64 != (v33 * v40) >> 63) {
    goto LABEL_13;
  }
  memcpy(v41, v35, v33 * v40);
  CVPixelBufferUnlockBaseAddress(v38, 1uLL);
  CVPixelBufferUnlockBaseAddress(a1, 1uLL);
}

uint64_t sub_2528D9284(void *a1)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_dataOutput))
  {
    __break(1u);
    goto LABEL_13;
  }
  id v4 = objc_msgSend(a1, sel_synchronizedDataForCaptureOutput_);
  if (!v4) {
    goto LABEL_17;
  }
  uint64_t v1 = v4;
  self;
  long long v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5 || (uint64_t v6 = v5, (objc_msgSend(v5, sel_sampleBufferWasDropped) & 1) != 0))
  {
LABEL_14:

    goto LABEL_17;
  }
  uint64_t v7 = (opaqueCMSampleBuffer *)objc_msgSend(v6, sel_sampleBuffer);
  if (!*(void *)(v2 + OBJC_IVAR____TtCV5Human12CameraSource13CameraManager_depthDataOutput))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(a1, sel_synchronizedDataForCaptureOutput_);
  if (!v9)
  {
LABEL_17:
    uint64_t result = sub_252951F28();
    __break(1u);
    return result;
  }
  uint64_t v10 = v9;
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11 || (uint64_t v12 = v11, (objc_msgSend(v11, sel_depthDataWasDropped) & 1) != 0))
  {

    goto LABEL_17;
  }
  id v13 = objc_msgSend(v12, sel_depthData);
  id v14 = objc_msgSend(v13, sel_depthDataMap);

  id v15 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v15, sel_systemUptime);
  double v17 = v16;

  sub_2528D7F60(v22);
  LOBYTE(v15) = v22[0];
  uint64_t v18 = sub_2528D83B8(v8);
  sub_2528D8670(v8, (uint64_t)v22);
  uint64_t v19 = sub_2528D898C(v8);
  CFAllocatorRef v20 = (void *)MEMORY[0x2533C0FD0]();
  sub_2528D8090(v8, v2, (uint64_t)v18, (char)v15, (uint64_t)v22, (uint64_t)v19, v17);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2528D9540(opaqueCMSampleBuffer *a1)
{
  id v3 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v3, sel_systemUptime);
  double v5 = v4;

  sub_2528D7F60(v10);
  LOBYTE(v3) = v10[0];
  uint64_t v6 = sub_2528D83B8(a1);
  sub_2528D8670(a1, (uint64_t)v10);
  uint64_t v7 = sub_2528D898C(a1);
  uint64_t v8 = (void *)MEMORY[0x2533C0FD0]();
  sub_2528D8090(a1, v1, (uint64_t)v6, (char)v3, (uint64_t)v10, (uint64_t)v7, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2528D9630(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C323D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528D9690(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_2528D96EC()
{
  unint64_t result = qword_269C323F0;
  if (!qword_269C323F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C323F0);
  }
  return result;
}

unint64_t sub_2528D972C()
{
  unint64_t result = qword_269C323F8;
  if (!qword_269C323F8)
  {
    sub_252951D28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C323F8);
  }
  return result;
}

unint64_t sub_2528D9778()
{
  unint64_t result = qword_269C32408[0];
  if (!qword_269C32408[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C32400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269C32408);
  }
  return result;
}

uint64_t sub_2528D97D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_2528D97DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2528D98AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  double v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    double v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_2528D9A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_2528D9AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2528D9B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2528D9BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2528D9CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2528D9D4C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(void *)(a3 + 16);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2528D9F44(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2528DA210);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          unint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          CFDictionaryRef v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TensorProviders()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2528DA250()
{
  return swift_getWitnessTable();
}

uint64_t sub_2528DA26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v7 + 24);
  MEMORY[0x270FA5388](v7);
  unsigned int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v2, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2 + *(int *)(a1 + 52), v5);
  return sub_2528DA3E4((uint64_t)v12, (uint64_t)v9, v5, v10, *(void *)(a1 + 32), *(void *)(a1 + 40), a2);
}

uint64_t sub_2528DA3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v26 = a6;
  uint64_t v23 = a2;
  uint64_t v24 = a5;
  uint64_t v22 = a7;
  uint64_t v11 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v16 = (char *)&v21 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a7, a1, a4);
  uint64_t v18 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v23, a3);
  sub_252951C88();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v18, a3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, a4);
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = v24;
  uint64_t v30 = v26;
  uint64_t v19 = type metadata accessor for TensorProviders.AsyncIterator();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22 + *(int *)(v19 + 52), v16, AssociatedTypeWitness);
}

uint64_t sub_2528DA62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v8 = type metadata accessor for TensorProviders();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a3);
}

uint64_t sub_2528DA6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2528DA26C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_2528DA758(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[5] = AssociatedTypeWitness;
  uint64_t v5 = sub_252951DC8();
  v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[8] = v6;
  v3[9] = *(void *)(AssociatedTypeWitness - 8);
  v3[10] = swift_task_alloc();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  v3[11] = v9;
  void *v9 = v3;
  v9[1] = sub_2528DA950;
  return MEMORY[0x270FA1E80](v6, v7, AssociatedConformanceWitness);
}

uint64_t sub_2528DA950()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528DAE88;
  }
  else {
    uint64_t v2 = sub_2528DAA64;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528DAA64()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[7] + 8))(v1, v0[6]);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v0[2], 1, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[10], v1, v3);
    uint64_t v8 = *(void *)(v4 + 40);
    v0[13] = v8;
    uint64_t v9 = *(int **)(v8 + 40);
    uint64_t v10 = *(void *)(v4 + 24);
    v0[14] = v10;
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[15] = v11;
    void *v11 = v0;
    v11[1] = sub_2528DAC8C;
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[2];
    return v14(v13, v12, v10, v8);
  }
}

uint64_t sub_2528DAC8C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528DAEF8;
  }
  else {
    uint64_t v2 = sub_2528DADA0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528DADA0()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[5]);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(void, void, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v0[2], 0, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2528DAE88()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528DAEF8()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2528DAF80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528DA758(a1, a2);
}

uint64_t sub_2528DB028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  void *v12 = v6;
  v12[1] = sub_2528DB108;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_2528DB108()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_2528DB218()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2528DB238(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for TensorProviders.AsyncIterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2528DB28C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2528DB374(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_2528DB4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_2528DB5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2528DB694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2528DB760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2528DB82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2528DB8F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_2528DBB90(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2528DBEA8);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t VideoSource.ImageDescriptors.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_252951268();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t VideoSource.ImageDescriptors.timescale.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for VideoSource.ImageDescriptors(0) + 20));
}

uint64_t type metadata accessor for VideoSource.ImageDescriptors(uint64_t a1)
{
  return sub_2528DE3C8(a1, (uint64_t *)&unk_269C32558);
}

float VideoSource.ImageDescriptors.nominalFrameRate.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for VideoSource.ImageDescriptors(0) + 24));
}

double VideoSource.ImageDescriptors.frameSize.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for VideoSource.ImageDescriptors(0) + 28));
}

uint64_t VideoSource.ImageDescriptors.videoDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VideoSource.ImageDescriptors(0) + 32));
}

uint64_t sub_2528DBFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 328) = a1;
  *(void *)(v3 + 336) = a2;
  *(unsigned char *)(v3 + 576) = *(unsigned char *)a3;
  long long v4 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 344) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 360) = v4;
  *(_OWORD *)(v3 + 376) = *(_OWORD *)(a3 + 48);
  *(unsigned char *)(v3 + 577) = *(unsigned char *)(a3 + 64);
  return MEMORY[0x270FA2498](sub_2528DC0A8, 0, 0);
}

uint64_t sub_2528DC0A8()
{
  char v1 = *(unsigned char *)(v0 + 577);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  long long v19 = *(_OWORD *)(v0 + 344);
  long long v20 = *(_OWORD *)(v0 + 360);
  char v4 = *(unsigned char *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v7 = (int *)type metadata accessor for VideoSource.ImageDescriptors(0);
  *(void *)(v0 + 392) = v7;
  uint64_t v8 = v7[13];
  *(_DWORD *)(v0 + 568) = v8;
  *(unsigned char *)(v5 + v8) = 0;
  uint64_t v9 = v5 + v7[15];
  *(_OWORD *)uint64_t v9 = v19;
  *(_OWORD *)(v9 + 16) = v20;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v2;
  *(unsigned char *)(v9 + 48) = v1;
  uint64_t v10 = sub_252951268();
  *(void *)(v0 + 400) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v0 + 408) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v5, v6, v10);
  *(unsigned char *)(v5 + v7[14]) = v4;
  id v12 = objc_allocWithZone(MEMORY[0x263EFA8C8]);
  unsigned int v13 = (void *)sub_252951208();
  id v14 = objc_msgSend(v12, sel_initWithURL_options_, v13, 0);
  *(void *)(v0 + 416) = v14;

  uint64_t v15 = v7[9];
  *(_DWORD *)(v0 + 572) = v15;
  *(void *)(v5 + v15) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32580);
  v14;
  uint64_t v16 = sub_252951308();
  *(void *)(v0 + 424) = v16;
  int v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v17;
  void *v17 = v0;
  v17[1] = sub_2528DC2BC;
  return MEMORY[0x270F9C8F0](v0 + 272, v16);
}

uint64_t sub_2528DC2BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 416);
    swift_release();

    char v4 = sub_2528DD5EC;
  }
  else
  {
    swift_release();
    char v4 = sub_2528DC430;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528DC430()
{
  char v1 = (void *)v0[52];
  uint64_t v2 = (void *)(v0[41] + *(int *)(v0[49] + 32));
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[35];
  void *v2 = v0[34];
  v2[1] = v4;
  v2[2] = v3;
  uint64_t v5 = *MEMORY[0x263EF9D50];
  v0[2] = v0;
  v0[7] = v0 + 39;
  v0[3] = sub_2528DC59C;
  uint64_t v6 = swift_continuation_init();
  v0[29] = MEMORY[0x263EF8330];
  v0[30] = 0x40000000;
  v0[31] = sub_2528DDBBC;
  v0[32] = &block_descriptor;
  v0[33] = v6;
  objc_msgSend(v1, sel_loadTracksWithMediaType_completionHandler_, v5, v0 + 29);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2528DC59C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 448) = v2;
  if (v2)
  {

    uint64_t v3 = sub_2528DD6D0;
  }
  else
  {
    uint64_t v3 = sub_2528DC6E0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528DC6E0()
{
  unint64_t v1 = *(void *)(v0 + 312);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_252951F38();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if ((v1 & 0xC000000000000001) != 0)
    {
      id v2 = (id)MEMORY[0x2533C0860](0, v1);
    }
    else
    {
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        __break(1u);
      }
      id v2 = *(id *)(v1 + 32);
    }
    uint64_t v3 = v2;
    *(void *)(v0 + 456) = v2;
    uint64_t v4 = *(void *)(v0 + 392);
    uint64_t v5 = *(void *)(v0 + 328);
    swift_bridgeObjectRelease();
    *(void *)(v5 + *(int *)(v4 + 44)) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32588);
    v3;
    uint64_t v6 = sub_2529512E8();
    *(void *)(v0 + 464) = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v7;
    void *v7 = v0;
    v7[1] = sub_2528DC9B8;
    return MEMORY[0x270F9C8F0](v0 + 560, v6);
  }
  uint64_t v9 = *(void *)(v0 + 408);
  uint64_t v10 = *(void **)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 400);
  uint64_t v12 = *(void *)(v0 + 336);
  swift_bridgeObjectRelease();

  uint64_t v13 = sub_2529511F8();
  uint64_t v15 = v14;
  type metadata accessor for VideoError();
  sub_2528E0100((unint64_t *)&qword_269C325B0, (void (*)(uint64_t))type metadata accessor for VideoError);
  swift_allocError();
  uint64_t *v16 = v13;
  v16[1] = v15;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  int v17 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v17(v12, v11);
  uint64_t v18 = *(int *)(v0 + 572);
  uint64_t v19 = *(void *)(v0 + 328);
  v17(v19, *(void *)(v0 + 400));

  long long v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_2528DC9B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 416);
    swift_release();

    uint64_t v4 = sub_2528DD7BC;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_2528DCB2C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528DCB2C()
{
  *(_DWORD *)(*(void *)(v0 + 328) + *(int *)(*(void *)(v0 + 392) + 24)) = *(_DWORD *)(v0 + 560);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32590);
  uint64_t v1 = sub_2529512C8();
  *(void *)(v0 + 488) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v2;
  void *v2 = v0;
  v2[1] = sub_2528DCC30;
  return MEMORY[0x270F9C8F0](v0 + 296, v1);
}

uint64_t sub_2528DCC30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 504) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 416);
    swift_release();

    uint64_t v4 = sub_2528DD8BC;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_2528DCDA4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528DCDA4()
{
  *(_OWORD *)(*(void *)(v0 + 328) + *(int *)(*(void *)(v0 + 392) + 28)) = *(_OWORD *)(v0 + 296);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32598);
  uint64_t v1 = sub_2529512F8();
  *(void *)(v0 + 512) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v2;
  void *v2 = v0;
  v2[1] = sub_2528DCEAC;
  return MEMORY[0x270F9C8F0](v0 + 184, v1);
}

uint64_t sub_2528DCEAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 416);
    swift_release();

    uint64_t v4 = sub_2528DD9BC;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_2528DD020;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528DD020()
{
  uint64_t v1 = *(int *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 328);
  long long v3 = *(_OWORD *)(v0 + 200);
  long long v4 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 152) = v3;
  *(_OWORD *)(v0 + 168) = v4;
  *(unsigned char *)(v2 + v1) = !CGAffineTransformIsIdentity((CGAffineTransform *)(v0 + 136));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C325A0);
  uint64_t v5 = sub_2529512D8();
  *(void *)(v0 + 536) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v6;
  void *v6 = v0;
  v6[1] = sub_2528DD140;
  return MEMORY[0x270F9C8F0](v0 + 564, v5);
}

uint64_t sub_2528DD140()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  if (v0)
  {
    long long v3 = *(void **)(v2 + 416);
    swift_release();

    long long v4 = sub_2528DDABC;
  }
  else
  {
    swift_release();
    long long v4 = sub_2528DD2B4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528DD2B4()
{
  uint64_t v1 = *(void **)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 328);
  *(_DWORD *)(v4 + *(int *)(v3 + 20)) = *(_DWORD *)(v0 + 564);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C325A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252953740;
  *(void *)(inited + 32) = sub_252951AE8();
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = 1111970369;
  unint64_t v7 = sub_2528EF9D4(inited);
  id v8 = v1;
  sub_2528DDC88(v7);
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone(MEMORY[0x263EFA4E0]);
  uint64_t v10 = (void *)sub_252951A98();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithTrack_outputSettings_, v8, v10);

  *(void *)(v4 + *(int *)(v3 + 48)) = v11;
  id v12 = v11;
  objc_msgSend(v12, sel_setSupportsRandomAccess_, 1);
  objc_msgSend(v12, sel_setAlwaysCopiesSampleData_, 0);
  objc_msgSend(v12, sel_markConfigurationAsFinal);
  id v13 = objc_allocWithZone(MEMORY[0x263EFA4B8]);
  *(void *)(v0 + 320) = 0;
  id v14 = objc_msgSend(v13, sel_initWithAsset_error_, v2, v0 + 320);
  uint64_t v15 = *(void **)(v0 + 320);
  uint64_t v16 = *(void **)(v0 + 456);
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void **)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 400);
  if (v14)
  {
    long long v20 = v14;
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v22 = *(void *)(v0 + 328);
    uint64_t v32 = *(void *)(v0 + 336);
    id v23 = v15;

    *(void *)(v22 + *(int *)(v21 + 40)) = v20;
    id v24 = v20;
    objc_msgSend(v24, sel_addOutput_, v12);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v32, v19);
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 336);
    id v27 = v15;
    sub_2529511A8();

    swift_willThrow();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v26, v19);

    uint64_t v29 = *(int *)(v0 + 572);
    uint64_t v30 = *(void *)(v0 + 328);
    v28(v30, *(void *)(v0 + 400));
  }
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_2528DD5EC()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 336);

  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v4(v3, v2);
  uint64_t v5 = *(int *)(v0 + 572);
  uint64_t v6 = *(void *)(v0 + 328);
  v4(v6, *(void *)(v0 + 400));

  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2528DD6D0()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 336);
  swift_willThrow();

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  uint64_t v6 = *(int *)(v0 + 572);
  uint64_t v7 = *(void *)(v0 + 328);
  v5(v7, *(void *)(v0 + 400));

  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2528DD7BC()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 336);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  uint64_t v6 = *(int *)(v0 + 572);
  uint64_t v7 = *(void *)(v0 + 328);
  v5(v7, *(void *)(v0 + 400));

  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2528DD8BC()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 336);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  uint64_t v6 = *(int *)(v0 + 572);
  uint64_t v7 = *(void *)(v0 + 328);
  v5(v7, *(void *)(v0 + 400));

  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2528DD9BC()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 336);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  uint64_t v6 = *(int *)(v0 + 572);
  uint64_t v7 = *(void *)(v0 + 328);
  v5(v7, *(void *)(v0 + 400));

  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2528DDABC()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 336);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  uint64_t v6 = *(int *)(v0 + 572);
  uint64_t v7 = *(void *)(v0 + 328);
  v5(v7, *(void *)(v0 + 400));

  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2528DDBBC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_2528E1A94();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_252951B98();
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_2528DDC88(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C325B8);
    uint64_t v2 = (void *)sub_252951F68();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  id v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D6C8];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_2528E1A8C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (int64_t i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    id v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2528E1A7C(v6, v7);
    sub_2528E1A7C(v7, v40);
    sub_2528E1A7C(v40, &v38);
    unint64_t result = sub_252922FE8(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      id v12 = v7;
      id v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      id v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_2528E1A7C(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v27 = (uint64_t *)(v2[6] + 16 * result);
    *id v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_2528E1A7C(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t VideoSource.ImageDescriptors.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_252951268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v5;
  uint64_t v55 = v8;
  char v52 = *(void (**)(char *, uint64_t))(v5 + 16);
  v52(v7, v1);
  uint64_t v9 = (int *)type metadata accessor for VideoSource.ImageDescriptors(0);
  uint64_t v10 = *(void **)(v1 + v9[10]);
  uint64_t v11 = v9[11];
  id v12 = *(void **)(v1 + v9[12]);
  id v13 = *(void **)(v1 + v9[9]);
  int v14 = *(unsigned __int8 *)(v1 + v9[14]);
  int v42 = *(unsigned __int8 *)(v1 + v9[13]);
  int v43 = v14;
  uint64_t v15 = *(void **)(v1 + v11);
  uint64_t v16 = (uint64_t *)(v2 + v9[15]);
  uint64_t v45 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v50 = v16[2];
  uint64_t v51 = v17;
  uint64_t v18 = v16[3];
  uint64_t v48 = v16[4];
  uint64_t v49 = v18;
  uint64_t v47 = v16[5];
  int v46 = *((unsigned __int8 *)v16 + 48);
  unint64_t v19 = (int *)type metadata accessor for VideoSource.ImageDescriptors.Iterator(0);
  uint64_t v41 = v19[7];
  *(unsigned char *)(a1 + v41) = 0;
  *(void *)(a1 + v19[9]) = 0;
  id v53 = v10;
  id v44 = v12;
  id v39 = v13;
  id v20 = v15;
  sub_252910520((uint64_t)v67);
  id v40 = v20;
  long long v64 = v67[8];
  long long v65 = v67[9];
  uint64_t v66 = v68;
  long long v60 = v67[4];
  long long v61 = v67[5];
  long long v62 = v67[6];
  long long v63 = v67[7];
  long long v56 = v67[0];
  long long v57 = v67[1];
  long long v58 = v67[2];
  long long v59 = v67[3];
  id v21 = sub_25294B500();
  LOBYTE(v13) = v22;
  uint64_t v24 = v23;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  uint64_t v26 = a1 + v19[12];
  *(void *)uint64_t v26 = v25;
  *(void *)(v26 + 8) = v21;
  *(unsigned char *)(v26 + 16) = v13 & 1;
  *(void *)(v26 + 24) = v24;
  long long v27 = v65;
  *(_OWORD *)(v26 + 160) = v64;
  *(_OWORD *)(v26 + 176) = v27;
  *(void *)(v26 + 192) = v66;
  long long v28 = v61;
  *(_OWORD *)(v26 + 96) = v60;
  *(_OWORD *)(v26 + 112) = v28;
  long long v29 = v63;
  *(_OWORD *)(v26 + 128) = v62;
  *(_OWORD *)(v26 + 144) = v29;
  long long v30 = v57;
  *(_OWORD *)(v26 + 32) = v56;
  *(_OWORD *)(v26 + 48) = v30;
  long long v31 = v59;
  *(_OWORD *)(v26 + 64) = v58;
  *(_OWORD *)(v26 + 80) = v31;
  uint64_t v32 = v55;
  ((void (*)(uint64_t, char *, uint64_t))v52)(a1, v7, v55);
  int64_t v33 = v53;
  *(void *)(a1 + v19[5]) = v53;
  *(void *)(a1 + v19[8]) = v44;
  *(void *)(a1 + v19[6]) = v39;
  *(unsigned char *)(a1 + v41) = v42;
  *(unsigned char *)(a1 + v19[11]) = v43;
  *(void *)(a1 + v19[10]) = v40;
  uint64_t v34 = a1 + v19[13];
  uint64_t v35 = v51;
  *(void *)uint64_t v34 = v45;
  *(void *)(v34 + 8) = v35;
  uint64_t v36 = v49;
  *(void *)(v34 + 16) = v50;
  *(void *)(v34 + 24) = v36;
  uint64_t v37 = v47;
  *(void *)(v34 + 32) = v48;
  *(void *)(v34 + 40) = v37;
  *(unsigned char *)(v34 + 48) = v46;
  objc_msgSend(v33, sel_startReading);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v7, v32);
}

uint64_t type metadata accessor for VideoSource.ImageDescriptors.Iterator(uint64_t a1)
{
  return sub_2528DE3C8(a1, (uint64_t *)&unk_269C32568);
}

uint64_t sub_2528DE3C8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528DE400@<X0>(uint64_t a1@<X8>)
{
  VideoSource.ImageDescriptors.makeAsyncIterator()(a1);
  return sub_2528E1AD4(v1, type metadata accessor for VideoSource.ImageDescriptors);
}

uint64_t VideoSource.ImageDescriptors.Iterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2528DE454, 0, 0);
}

uint64_t sub_2528DE454()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v1, sel_systemUptime);
  v0[4] = v2;

  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2528DE520;
  uint64_t v4 = v0[2];
  return sub_2528DE6B8(v4);
}

uint64_t sub_2528DE520()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2528DE650, 0, 0);
  }
}

uint64_t sub_2528DE650()
{
  sub_2528D01CC(0, *(double *)(v0 + 32));
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528DE6B8(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C325C8);
  uint64_t v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528DE774, 0, 0);
}

uint64_t sub_2528DE774()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_2528DE818;
  uint64_t v3 = swift_continuation_init();
  sub_2528DFBCC(v2, v3);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2528DE818()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_2528DEB34;
  }
  else
  {
    sub_2528D1884(*(void *)(v1 + 176), *(void *)(v1 + 184), &qword_269C325C8);
    uint64_t v3 = sub_2528DE944;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528DE944()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = type metadata accessor for ImageDescriptor();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[19];
    sub_2528B8494(v1, &qword_269C325C8);
    if (*(unsigned char *)(v4 + *(int *)(type metadata accessor for VideoSource.ImageDescriptors.Iterator(0) + 44)))
    {
      uint64_t v5 = (void *)swift_task_alloc();
      v0[25] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_2528DEBBC;
      unsigned char v5[24] = v0[19];
      return MEMORY[0x270FA2498](sub_2528DF2A8, 0, 0);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[18], 1, 1, v2);
  }
  else
  {
    uint64_t v6 = v0[18];
    sub_2528AE62C(v1, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_2528DEB34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528DEBBC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2528DED1C, 0, 0);
  }
}

uint64_t sub_2528DED1C()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  v0[10] = v0;
  v0[15] = v1;
  v0[11] = sub_2528DEDBC;
  uint64_t v3 = swift_continuation_init();
  sub_2528DFBCC(v2, v3);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_2528DEDBC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_2528DEF84;
  }
  else
  {
    sub_2528D1884(*(void *)(v1 + 160), *(void *)(v1 + 168), &qword_269C325C8);
    uint64_t v3 = sub_2528DEEE8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2528DEEE8()
{
  sub_2528D1884(v0[21], v0[18], &qword_269C325C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2528DEF84()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528DF00C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2528DE454, 0, 0);
}

uint64_t sub_2528DF02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C33470 + dword_269C33470);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_2528DF0F8;
  return v10(a1, a2, a3);
}

uint64_t sub_2528DF0F8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 16) = v0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_2528DF218()
{
  *(void *)(v1 + 192) = v0;
  return MEMORY[0x270FA2498](sub_2528DF2A8, 0, 0);
}

uint64_t sub_2528DF2A8()
{
  uint64_t v1 = *(void *)(v0 + 192);
  id v2 = objc_allocWithZone(MEMORY[0x263EFA8C8]);
  uint64_t v3 = (void *)sub_252951208();
  id v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);
  *(void *)(v0 + 200) = v4;

  uint64_t v5 = type metadata accessor for VideoSource.ImageDescriptors.Iterator(0);
  *(void *)(v0 + 208) = v5;
  uint64_t v6 = *(int *)(v5 + 24);
  *(_DWORD *)(v0 + 224) = v6;
  objc_storeStrong((id *)(v1 + v6), v4);
  uint64_t v7 = *MEMORY[0x263EF9D50];
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 176;
  *(void *)(v0 + 24) = sub_2528DF450;
  uint64_t v8 = swift_continuation_init();
  *(void *)(v0 + 136) = MEMORY[0x263EF8330];
  *(void *)(v0 + 144) = 0x40000000;
  *(void *)(v0 + 152) = sub_2528DDBBC;
  *(void *)(v0 + 160) = &block_descriptor_19;
  *(void *)(v0 + 168) = v8;
  objc_msgSend(v4, sel_loadTracksWithMediaType_completionHandler_, v7, v0 + 136);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_2528DF450()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    id v2 = sub_2528DF970;
  }
  else {
    id v2 = sub_2528DF58C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528DF58C()
{
  unint64_t v1 = *(void *)(v0 + 176);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_252951F38();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_3;
    }
LABEL_10:
    long long v27 = *(void **)(v0 + 200);
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_2529511F8();
    uint64_t v32 = v31;
    type metadata accessor for VideoError();
    sub_2528E0100((unint64_t *)&qword_269C325B0, (void (*)(uint64_t))type metadata accessor for VideoError);
    swift_allocError();
    *int64_t v33 = v30;
    v33[1] = v32;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_11;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x2533C0860](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v2 = *(id *)(v1 + 32);
  }
  uint64_t v3 = v2;
  uint64_t v4 = *(int *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 192);
  swift_bridgeObjectRelease();
  objc_storeStrong((id *)(v6 + *(int *)(v5 + 40)), v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C325A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252953740;
  *(void *)(inited + 32) = sub_252951AE8();
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = 1111970369;
  unint64_t v9 = sub_2528EF9D4(inited);
  id v10 = v3;
  sub_2528DDC88(v9);
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone(MEMORY[0x263EFA4E0]);
  id v12 = (void *)sub_252951A98();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithTrack_outputSettings_, v10, v12);

  uint64_t v14 = *(int *)(v5 + 32);
  *(void *)(v6 + v14) = v13;
  objc_msgSend(v13, sel_setSupportsRandomAccess_, 1);
  objc_msgSend(v13, sel_setAlwaysCopiesSampleData_, 0);
  objc_msgSend(v13, sel_markConfigurationAsFinal);
  uint64_t v15 = *(void **)(v6 + v4);
  id v16 = objc_allocWithZone(MEMORY[0x263EFA4B8]);
  *(void *)(v0 + 184) = 0;
  id v17 = v15;
  id v18 = objc_msgSend(v16, sel_initWithAsset_error_, v17, v0 + 184);
  unint64_t v19 = *(void **)(v0 + 184);
  if (v18)
  {
    id v20 = v18;
    char v22 = *(void **)(v0 + 200);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v23 = *(void *)(v0 + 192);
    id v24 = v19;

    uint64_t v25 = *(int *)(v21 + 20);
    *(void *)(v23 + v25) = v20;
    objc_msgSend(v20, sel_addOutput_, v13);
    objc_msgSend(v20, sel_startReading);

    *(void *)(v23 + *(int *)(v21 + 36)) = 0;
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_12;
  }
  long long v27 = *(void **)(v0 + 200);
  id v28 = v19;
  sub_2529511A8();

  swift_willThrow();
LABEL_11:

  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
LABEL_12:
  return v26();
}

uint64_t sub_2528DF970()
{
  unint64_t v1 = *(void **)(v0 + 200);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2528DFA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C325C8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C325D8);
  MEMORY[0x270FA5388](v10);
  id v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2528E1B34(a1, (uint64_t)v12, &qword_269C325D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    swift_allocError();
    *uint64_t v14 = v13;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_2528D1884((uint64_t)v12, (uint64_t)v9, &qword_269C325C8);
    sub_2528E1B34((uint64_t)v9, (uint64_t)v7, &qword_269C325C8);
    sub_2528D1884((uint64_t)v7, *(void *)(*(void *)(a2 + 64) + 40), &qword_269C325C8);
    swift_continuation_throwingResume();
    return sub_2528B8494((uint64_t)v9, &qword_269C325C8);
  }
}

id sub_2528DFBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C325D8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImageDescriptor();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for VideoSource.ImageDescriptors.Iterator(0);
  id v12 = *(void **)(a1 + v11[5]);
  id result = objc_msgSend(v12, sel_status);
  if (result != (id)1) {
    return result;
  }
  uint64_t v14 = (opaqueCMSampleBuffer *)objc_msgSend(*(id *)(a1 + v11[8]), sel_copyNextSampleBuffer);
  if (!v14)
  {
LABEL_9:
    objc_msgSend(v12, sel_cancelReading);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    swift_storeEnumTagMultiPayload();
    sub_2528DFA10((uint64_t)v6, a2);
    return (id)sub_2528B8494((uint64_t)v6, &qword_269C325D8);
  }
  uint64_t v15 = v14;
  uint64_t v27 = a2;
  uint64_t v16 = CMSampleBufferGetImageBuffer(v14);
  if (!v16)
  {

    a2 = v27;
    goto LABEL_9;
  }
  id v17 = v16;
  uint64_t v26 = sub_2528DFF00(v15);
  int64_t Width = CVPixelBufferGetWidth(v17);
  if (Width >= (uint64_t)CVPixelBufferGetHeight(v17)) {
    char v19 = 3;
  }
  else {
    char v19 = 0;
  }
  uint64_t v29 = v17;
  char v28 = v19;
  sub_2528D1884(a1 + v11[13], (uint64_t)v30, &qword_269C325E0);
  id v20 = v17;
  id result = (id)ImageDescriptor.init(imageBuffer:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)((void **)&v29, (uint64_t)v26, &v28, (uint64_t)v30, 0, 0, (uint64_t)v10);
  uint64_t v21 = v11[9];
  uint64_t v22 = *(void *)(a1 + v21);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a1 + v21) = v24;
    sub_2528AC618((uint64_t)v10, (uint64_t)v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    swift_storeEnumTagMultiPayload();
    sub_2528DFA10((uint64_t)v6, v27);

    sub_2528B8494((uint64_t)v6, &qword_269C325D8);
    return (id)sub_2528E1AD4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  }
  return result;
}

CMTime *sub_2528DFF00(opaqueCMSampleBuffer *a1)
{
  id result = CMSampleBufferGetPresentationTimeStamp(&v9, a1);
  CMTimeValue v3 = 1000 * v9.value;
  if ((unsigned __int128)(v9.value * (__int128)1000) >> 64 != (1000 * v9.value) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t timescale = v9.timescale;
  if (!v9.timescale)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  if (v9.timescale == -1 && v3 == 0x8000000000000000)
  {
    __break(1u);
    return result;
  }
  if (qword_269C31648 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  CMTimeValue v4 = v3 / timescale;
  uint64_t v5 = sub_252951338();
  __swift_project_value_buffer(v5, (uint64_t)qword_269C3D700);
  uint64_t v6 = sub_252951318();
  os_log_type_t v7 = sub_252951CE8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    v9.value = v4;
    sub_252951DE8();
    _os_log_impl(&dword_2528A2000, v6, v7, "Timestamp: %lld", v8, 0xCu);
    MEMORY[0x2533C16C0](v8, -1, -1);
  }

  return (CMTime *)v4;
}

uint64_t sub_2528E0060(uint64_t a1)
{
  uint64_t result = sub_2528E0100(&qword_269C32538, (void (*)(uint64_t))type metadata accessor for VideoSource.ImageDescriptors);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2528E00B8()
{
  return sub_2528E0100(qword_269C32540, (void (*)(uint64_t))type metadata accessor for VideoSource.ImageDescriptors.Iterator);
}

uint64_t sub_2528E0100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s16ImageDescriptorsVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    uint64_t v12 = a3[9];
    uint64_t v13 = a3[10];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)a1 + v12) = v14;
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v15;
    uint64_t v16 = a3[11];
    uint64_t v17 = a3[12];
    id v18 = *(void **)((char *)a2 + v16);
    *(void *)((char *)a1 + v16) = v18;
    char v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v19;
    uint64_t v20 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[15];
    uint64_t v22 = (char *)a1 + v21;
    BOOL v23 = (char *)a2 + v21;
    long long v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v24;
    *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    v22[48] = v23[48];
    id v25 = v14;
    id v26 = v15;
    id v27 = v18;
    id v28 = v19;
  }
  return a1;
}

void _s16ImageDescriptorsVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + a2[12]);
}

uint64_t _s16ImageDescriptorsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[15];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(v22 + 48);
  id v24 = v13;
  id v25 = v14;
  id v26 = v17;
  id v27 = v18;
  return a1;
}

uint64_t _s16ImageDescriptorsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_DWORD *)(v11 + 8) = *(_DWORD *)(v12 + 8);
  *(_DWORD *)(v11 + 12) = *(_DWORD *)(v12 + 12);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  uint64_t v13 = a3[9];
  uint64_t v14 = *(void **)(a2 + v13);
  uint64_t v15 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[10];
  id v18 = *(void **)(a2 + v17);
  uint64_t v19 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = a3[11];
  uint64_t v22 = *(void **)(a2 + v21);
  long long v23 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = v22;
  id v24 = v22;

  uint64_t v25 = a3[12];
  id v26 = *(void **)(a2 + v25);
  id v27 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = v26;
  id v28 = v26;

  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v29 = a3[15];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (long long *)(a2 + v29);
  long long v32 = *v31;
  long long v33 = v31[1];
  long long v34 = v31[2];
  *(unsigned char *)(v30 + 48) = *((unsigned char *)v31 + 48);
  *(_OWORD *)(v30 + 16) = v33;
  *(_OWORD *)(v30 + 32) = v34;
  *(_OWORD *)uint64_t v30 = v32;
  return a1;
}

uint64_t _s16ImageDescriptorsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  return a1;
}

uint64_t _s16ImageDescriptorsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  uint64_t v11 = a3[9];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[10];
  uint64_t v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  uint64_t v15 = a3[11];
  uint64_t v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  uint64_t v17 = a3[12];
  id v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[15];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(v22 + 48);
  return a1;
}

uint64_t _s16ImageDescriptorsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528E0830);
}

uint64_t sub_2528E0830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s16ImageDescriptorsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528E0904);
}

uint64_t sub_2528E0904(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_252951268();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2528E09C0()
{
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *_s16ImageDescriptorsV8IteratorVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (void *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    uint64_t v47 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v47;
    uint64_t v11 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    int v46 = *(void **)((char *)a2 + v11);
    *(void *)((char *)a1 + v11) = v46;
    uint64_t v12 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(void *)((char *)a1 + v12) = v13;
    uint64_t v14 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    id v18 = *(void **)v16;
    uint64_t v17 = (void *)*((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v15[16] = v16[16];
    uint64_t v19 = (void *)*((void *)v16 + 3);
    uint64_t v20 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v19;
    *((void *)v15 + 4) = v20;
    uint64_t v21 = *((void *)v16 + 6);
    *((void *)v15 + 5) = *((void *)v16 + 5);
    *((void *)v15 + 6) = v21;
    uint64_t v22 = *((void *)v16 + 8);
    *((void *)v15 + 7) = *((void *)v16 + 7);
    *((void *)v15 + 8) = v22;
    uint64_t v23 = *((void *)v16 + 10);
    *((void *)v15 + 9) = *((void *)v16 + 9);
    *((void *)v15 + 10) = v23;
    uint64_t v24 = *((void *)v16 + 12);
    *((void *)v15 + 11) = *((void *)v16 + 11);
    *((void *)v15 + 12) = v24;
    uint64_t v25 = *((void *)v16 + 14);
    *((void *)v15 + 13) = *((void *)v16 + 13);
    *((void *)v15 + 14) = v25;
    uint64_t v26 = *((void *)v16 + 16);
    *((void *)v15 + 15) = *((void *)v16 + 15);
    *((void *)v15 + 16) = v26;
    uint64_t v48 = (void *)*((void *)v16 + 18);
    *((void *)v15 + 17) = *((void *)v16 + 17);
    *((void *)v15 + 18) = v48;
    uint64_t v49 = (void *)*((void *)v16 + 19);
    uint64_t v50 = (void *)*((void *)v16 + 20);
    *((void *)v15 + 19) = v49;
    *((void *)v15 + 20) = v50;
    uint64_t v51 = (void *)*((void *)v16 + 21);
    char v52 = (void *)*((void *)v16 + 22);
    *((void *)v15 + 21) = v51;
    *((void *)v15 + 22) = v52;
    id v53 = (void *)*((void *)v16 + 24);
    *((void *)v15 + 23) = *((void *)v16 + 23);
    *((void *)v15 + 24) = v53;
    uint64_t v27 = a3[13];
    id v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    long long v30 = *((_OWORD *)v29 + 1);
    *(_OWORD *)id v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v30;
    *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    v28[48] = v29[48];
    id v31 = v10;
    id v32 = v47;
    id v33 = v46;
    id v34 = v13;
    id v35 = v18;
    id v36 = v17;
    id v37 = v19;
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v38 = v48;
    id v39 = v49;
    id v40 = v50;
    id v41 = v51;
    id v42 = v52;
    swift_unknownObjectRetain();
    id v43 = v53;
  }
  return a1;
}

void _s16ImageDescriptorsV8IteratorVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  uint64_t v5 = a1 + a2[12];
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = *(void **)(v5 + 192);
}

uint64_t _s16ImageDescriptorsV8IteratorVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v45 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v45;
  uint64_t v10 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v44 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v44;
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v12 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v12;
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v17 = *(void **)v15;
  uint64_t v16 = *(void **)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v16;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  id v18 = *(void **)(v15 + 24);
  uint64_t v19 = *(void *)(v15 + 32);
  *(void *)(v14 + 24) = v18;
  *(void *)(v14 + 32) = v19;
  uint64_t v20 = *(void *)(v15 + 48);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  *(void *)(v14 + 48) = v20;
  uint64_t v21 = *(void *)(v15 + 64);
  *(void *)(v14 + 56) = *(void *)(v15 + 56);
  *(void *)(v14 + 64) = v21;
  uint64_t v22 = *(void *)(v15 + 80);
  *(void *)(v14 + 72) = *(void *)(v15 + 72);
  *(void *)(v14 + 80) = v22;
  uint64_t v23 = *(void *)(v15 + 96);
  *(void *)(v14 + 88) = *(void *)(v15 + 88);
  *(void *)(v14 + 96) = v23;
  uint64_t v24 = *(void *)(v15 + 112);
  *(void *)(v14 + 104) = *(void *)(v15 + 104);
  *(void *)(v14 + 112) = v24;
  uint64_t v25 = *(void *)(v15 + 128);
  *(void *)(v14 + 120) = *(void *)(v15 + 120);
  *(void *)(v14 + 128) = v25;
  int v46 = *(void **)(v15 + 144);
  *(void *)(v14 + 136) = *(void *)(v15 + 136);
  *(void *)(v14 + 144) = v46;
  uint64_t v47 = *(void **)(v15 + 152);
  uint64_t v48 = *(void **)(v15 + 160);
  *(void *)(v14 + 152) = v47;
  *(void *)(v14 + 160) = v48;
  uint64_t v49 = *(void **)(v15 + 168);
  uint64_t v50 = *(void **)(v15 + 176);
  *(void *)(v14 + 168) = v49;
  *(void *)(v14 + 176) = v50;
  uint64_t v51 = *(void **)(v15 + 192);
  *(void *)(v14 + 184) = *(void *)(v15 + 184);
  *(void *)(v14 + 192) = v51;
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  id v30 = v9;
  id v31 = v45;
  id v32 = v44;
  id v33 = v12;
  id v34 = v17;
  id v35 = v16;
  id v36 = v18;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v37 = v46;
  id v38 = v47;
  id v39 = v48;
  id v40 = v49;
  id v41 = v50;
  swift_unknownObjectRetain();
  id v42 = v51;
  return a1;
}

uint64_t _s16ImageDescriptorsV8IteratorVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v19 = a3[10];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void **)(a2 + v23);
  uint64_t v27 = *(void **)v24;
  *(void *)uint64_t v24 = v26;
  id v28 = v26;

  long long v29 = *(void **)(v25 + 8);
  id v30 = *(void **)(v24 + 8);
  *(void *)(v24 + 8) = v29;
  id v31 = v29;

  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  id v32 = *(void **)(v25 + 24);
  id v33 = *(void **)(v24 + 24);
  *(void *)(v24 + 24) = v32;
  id v34 = v32;

  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  swift_retain();
  swift_release();
  *(void *)(v24 + 40) = *(void *)(v25 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 48) = *(void *)(v25 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 56) = *(void *)(v25 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 64) = *(void *)(v25 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 72) = *(void *)(v25 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 80) = *(void *)(v25 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 88) = *(void *)(v25 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 96) = *(void *)(v25 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 104) = *(void *)(v25 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 112) = *(void *)(v25 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v24 + 120) = *(void *)(v25 + 120);
  *(void *)(v24 + 128) = *(void *)(v25 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 136) = *(void *)(v25 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v35 = *(void **)(v25 + 144);
  id v36 = *(void **)(v24 + 144);
  *(void *)(v24 + 144) = v35;
  id v37 = v35;

  id v38 = *(void **)(v25 + 152);
  id v39 = *(void **)(v24 + 152);
  *(void *)(v24 + 152) = v38;
  id v40 = v38;

  id v41 = *(void **)(v25 + 160);
  id v42 = *(void **)(v24 + 160);
  *(void *)(v24 + 160) = v41;
  id v43 = v41;

  uint64_t v44 = *(void **)(v25 + 168);
  uint64_t v45 = *(void **)(v24 + 168);
  *(void *)(v24 + 168) = v44;
  id v46 = v44;

  uint64_t v47 = *(void **)(v25 + 176);
  uint64_t v48 = *(void **)(v24 + 176);
  *(void *)(v24 + 176) = v47;
  id v49 = v47;

  *(void *)(v24 + 184) = *(void *)(v25 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v50 = *(void **)(v24 + 192);
  uint64_t v51 = *(void **)(v25 + 192);
  *(void *)(v24 + 192) = v51;
  id v52 = v51;

  uint64_t v53 = a3[13];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (long long *)(a2 + v53);
  long long v56 = *v55;
  long long v57 = v55[1];
  long long v58 = v55[2];
  *(unsigned char *)(v54 + 48) = *((unsigned char *)v55 + 48);
  *(_OWORD *)(v54 + 16) = v57;
  *(_OWORD *)(v54 + 32) = v58;
  *(_OWORD *)uint64_t v54 = v56;
  return a1;
}

uint64_t _s16ImageDescriptorsV8IteratorVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  long long v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  long long v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  *(void *)(v11 + 192) = *(void *)(v12 + 192);
  long long v17 = *(_OWORD *)(v12 + 176);
  *(_OWORD *)(v11 + 160) = *(_OWORD *)(v12 + 160);
  *(_OWORD *)(v11 + 176) = v17;
  long long v18 = *(_OWORD *)(v12 + 144);
  *(_OWORD *)(v11 + 128) = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v11 + 144) = v18;
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  return a1;
}

uint64_t _s16ImageDescriptorsV8IteratorVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951268();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  uint64_t v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  long long v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  uint64_t v15 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15);
  uint64_t v19 = *(void **)(a1 + v15);
  *(void *)uint64_t v16 = v18;

  uint64_t v20 = *(void **)(v16 + 8);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);

  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v21 = *(void **)(v16 + 24);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);

  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  swift_release();
  *(void *)(v16 + 40) = *(void *)(v17 + 40);
  swift_unknownObjectRelease();
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  swift_unknownObjectRelease();
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  swift_unknownObjectRelease();
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_unknownObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  swift_unknownObjectRelease();
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_unknownObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  swift_unknownObjectRelease();
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_unknownObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  swift_unknownObjectRelease();
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_unknownObjectRelease();
  uint64_t v22 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v22;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 136) = *(void *)(v17 + 136);
  swift_unknownObjectRelease();
  uint64_t v23 = *(void **)(v16 + 144);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);

  uint64_t v24 = *(void **)(v16 + 152);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);

  uint64_t v25 = *(void **)(v16 + 160);
  *(void *)(v16 + 160) = *(void *)(v17 + 160);

  uint64_t v26 = *(void **)(v16 + 168);
  *(void *)(v16 + 168) = *(void *)(v17 + 168);

  uint64_t v27 = *(void **)(v16 + 176);
  *(void *)(v16 + 176) = *(void *)(v17 + 176);

  *(void *)(v16 + 184) = *(void *)(v17 + 184);
  swift_unknownObjectRelease();
  id v28 = *(void **)(v16 + 192);
  *(void *)(v16 + 192) = *(void *)(v17 + 192);

  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  return a1;
}

uint64_t _s16ImageDescriptorsV8IteratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528E1820);
}

uint64_t sub_2528E1820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951268();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s16ImageDescriptorsV8IteratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528E18F4);
}

uint64_t sub_2528E18F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_252951268();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2528E19B0()
{
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_OWORD *sub_2528E1A7C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2528E1A8C()
{
  return swift_release();
}

unint64_t sub_2528E1A94()
{
  unint64_t result = qword_269C325C0;
  if (!qword_269C325C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C325C0);
  }
  return result;
}

uint64_t sub_2528E1AD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2528E1B34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_2528E1B98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = a2[4];
    long long v6 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v6;
    long long v7 = *((_OWORD *)a2 + 6);
    uint64_t v8 = *(int *)(a3 + 40);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v7;
    uint64_t v11 = sub_252951508();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_2528E1CB8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_252951508();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_2528E1D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  uint64_t v10 = sub_252951508();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t sub_2528E1E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_252951508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2528E1EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v9 = sub_252951508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_2528E1FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_252951508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_2528E2064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2528E2078);
}

uint64_t sub_2528E2078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_252951508();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2528E2128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2528E213C);
}

uint64_t sub_2528E213C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_252951508();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Hand()
{
  uint64_t result = qword_269C325E8;
  if (!qword_269C325E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528E2230()
{
  uint64_t result = sub_252951508();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2528E2304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[53] = a2;
  v3[54] = a3;
  v3[27] = a1;
  v3[55] = *(void *)(type metadata accessor for Hand() - 8);
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528E2404, 0, 0);
}

uint64_t sub_2528E2404()
{
  uint64_t v88 = v0;
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 496) = v2;
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    unint64_t v4 = (_OWORD *)(v0 + 424);
    uint64_t v5 = *(void *)(v0 + 472);
    uint64_t v6 = *(void *)(v0 + 440);
    int v7 = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 212) = v7;
    uint64_t v8 = v1 + ((v7 + 32) & ~(unint64_t)v7);
    uint64_t v9 = *(void *)(v6 + 72);
    *(void *)(v0 + 504) = v9;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2528E3AD8(v8, *(void *)(v0 + 472));
      if (*(unsigned char *)(v5 + 8) != 1) {
        break;
      }
      sub_2528E3B3C(*(void *)(v0 + 472));
      v8 += v9;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = (void *)MEMORY[0x263F8EE78];
        goto LABEL_16;
      }
    }
    uint64_t v11 = *(void *)(v0 + 480);
    uint64_t v12 = *(void *)(v0 + 488);
    uint64_t v13 = *(void *)(v0 + 472);
    swift_bridgeObjectRelease();
    sub_2528E3B98(v13, v11);
    sub_2528E3B98(v11, v12);
    uint64_t v16 = *(void *)(v12 + 32);
    *(void *)(v0 + 512) = v16;
    uint64_t v17 = *(void *)(v16 + 16);
    *(void *)(v0 + 520) = v17;
    if (v17)
    {
      uint64_t v18 = v0 + 224;
      uint64_t v19 = sub_2529513F8();
      *(void *)(v0 + 528) = v19;
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = v20;
      *(void *)(v0 + 536) = v20;
      *(_DWORD *)(v0 + 420) = *(_DWORD *)(v20 + 80);
      *(void *)(v0 + 544) = *(void *)(v20 + 72);
      *(void *)(v0 + 552) = *(void *)(v20 + 64);
      *(void *)(v0 + 568) = v3;
      *(void *)(v0 + 560) = 0;
      swift_bridgeObjectRetain();
      uint64_t v22 = swift_task_alloc();
      *(void *)(v0 + 576) = v22;
      (*(void (**)(void))(v21 + 16))();
      uint64_t v23 = swift_task_alloc();
      *(void *)(v0 + 584) = v23;
      *(void *)uint64_t v23 = v0;
      *(void *)(v23 + 8) = sub_2528E2B18;
      *(_OWORD *)(v23 + 32) = *v4;
      *(unsigned char *)(v23 + 48) = 0;
LABEL_23:
      *(void *)(v23 + 16) = v18;
      *(void *)(v23 + 24) = v22;
      return MEMORY[0x270FA2498](sub_2528E4094, 0, 0);
    }
    uint64_t v24 = *(int32x4_t **)(v0 + 488);
    uint64_t v26 = *(void *)(v0 + 424);
    uint64_t v25 = *(void *)(v0 + 432);
    BOOL v27 = v25 < v26;
    BOOL v28 = v25 >= v26;
    uint64_t v29 = v27;
    int32x4_t v30 = v24[6];
    uint64_t v31 = (float *)((unint64_t)&v87 | (4 * v29));
    long long v32 = (__int32 *)((unint64_t)&v87 | (4 * v28));
    v14.i32[0] = 1120403456;
    float v33 = -100.0;
    if (!v27) {
      float v33 = 100.0;
    }
    int32x4_t v87 = v24[6];
    *(float *)v15.i32 = *v31 * 100.0;
    float32x2_t v34 = (float32x2_t)vdup_laneq_s32(v30, 2);
    v34.f32[0] = v33;
    *(int32x2_t *)v14.i8 = vdup_lane_s32(*(int32x2_t *)v14.i8, 0);
    v14.i32[0] = *v32;
    *(float32x2_t *)v14.i8 = vmul_f32(v34, *(float32x2_t *)v14.i8);
    int8x16_t v35 = vextq_s8(vextq_s8(v15, v15, 4uLL), v14, 0xCuLL);
    v35.i32[3] = v30.i32[3];
    int32x4_t v81 = v24[3];
    int8x16_t v83 = v35;
    int32x4_t v77 = v24[5];
    int32x4_t v79 = v24[4];
    uint64_t v36 = MEMORY[0x263F8EE78];
    LOBYTE(v37) = 1;
    uint64_t v10 = sub_2528C48EC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v39 = v10[2];
    unint64_t v38 = v10[3];
    int64_t v40 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
LABEL_40:
      int64_t v75 = v40;
      long long v72 = sub_2528C48EC((void *)(v38 > 1), v40, 1, v10);
      int64_t v40 = v75;
      uint64_t v10 = v72;
    }
    uint64_t v41 = *(void *)(v0 + 488);
    v10[2] = v40;
    id v42 = (int8x16_t *)&v10[20 * v39];
    v42[2].i64[0] = 0;
    v42[2].i8[8] = 4;
    v42[3].i64[0] = v36;
    v42[3].i64[1] = v36;
    v42[4] = 0u;
    v42[5] = 0u;
    v42[6].i64[0] = 0;
    v42[6].i8[8] = v37;
    v42[7] = (int8x16_t)v81;
    v42[8] = (int8x16_t)v79;
    v42[9] = (int8x16_t)v77;
    v42[10] = v83;
    v42[11].i8[0] = 0;
    sub_2528E3B3C(v41);
LABEL_16:
    *(void *)(v0 + 600) = v10;
    uint64_t v36 = *(void *)(v0 + 448);
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    while (1)
    {
      unint64_t v39 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      sub_2528E3AD8(*(void *)(v0 + 216)+ ((*(unsigned __int8 *)(v0 + 212) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 212))+ *(void *)(v0 + 504) * v37, *(void *)(v0 + 448));
      if (*(unsigned char *)(v36 + 8)) {
        break;
      }
      uint64_t v43 = *(void *)(v0 + 496);
      sub_2528E3B3C(*(void *)(v0 + 448));
      ++v37;
      if (v39 == v43)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    uint64_t v44 = *(void *)(v0 + 456);
    uint64_t v45 = *(void *)(v0 + 464);
    uint64_t v46 = *(void *)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_2528E3B98(v46, v44);
    sub_2528E3B98(v44, v45);
    uint64_t v49 = *(void *)(v45 + 32);
    *(void *)(v0 + 608) = v49;
    uint64_t v50 = *(void *)(v49 + 16);
    *(void *)(v0 + 616) = v50;
    if (v50)
    {
      uint64_t v18 = v0 + 16;
      uint64_t v51 = sub_2529513F8();
      *(void *)(v0 + 624) = v51;
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = v52;
      *(void *)(v0 + 632) = v52;
      *(_DWORD *)(v0 + 696) = *(_DWORD *)(v52 + 80);
      *(void *)(v0 + 640) = *(void *)(v52 + 72);
      *(void *)(v0 + 648) = *(void *)(v52 + 64);
      *(void *)(v0 + 664) = v3;
      *(void *)(v0 + 656) = 0;
      swift_bridgeObjectRetain();
      uint64_t v22 = swift_task_alloc();
      *(void *)(v0 + 672) = v22;
      (*(void (**)(void))(v53 + 16))();
      uint64_t v23 = swift_task_alloc();
      *(void *)(v0 + 680) = v23;
      *(void *)uint64_t v23 = v0;
      *(void *)(v23 + 8) = sub_2528E3394;
      *(_OWORD *)(v23 + 32) = *v4;
      *(unsigned char *)(v23 + 48) = 1;
      goto LABEL_23;
    }
    uint64_t v54 = *(int32x4_t **)(v0 + 464);
    uint64_t v56 = *(void *)(v0 + 424);
    uint64_t v55 = *(void *)(v0 + 432);
    BOOL v57 = v55 < v56;
    BOOL v58 = v55 >= v56;
    uint64_t v59 = v57;
    int32x4_t v60 = v54[6];
    long long v61 = (float *)((unint64_t)&v86 | (4 * v59));
    long long v62 = (__int32 *)((unint64_t)&v86 | (4 * v58));
    v47.i32[0] = 1120403456;
    float v63 = -100.0;
    if (!v57) {
      float v63 = 100.0;
    }
    int32x4_t v86 = v54[6];
    *(float *)v48.i32 = *v61 * 100.0;
    __int32 v76 = v60.i32[3];
    float32x2_t v64 = (float32x2_t)vdup_laneq_s32(v60, 2);
    v64.f32[0] = v63;
    *(int32x2_t *)v47.i8 = vdup_lane_s32(*(int32x2_t *)v47.i8, 0);
    v47.i32[0] = *v62;
    *(float32x2_t *)v47.i8 = vmul_f32(v64, *(float32x2_t *)v47.i8);
    int32x4_t v82 = v54[3];
    int8x16_t v84 = vextq_s8(vextq_s8(v48, v48, 4uLL), v47, 0xCuLL);
    int32x4_t v78 = v54[5];
    int32x4_t v80 = v54[4];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *(void **)(v0 + 600);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v10 = sub_2528C48EC(0, v10[2] + 1, 1, *(void **)(v0 + 600));
    }
    int8x16_t v66 = v84;
    v66.i32[3] = v76;
    unint64_t v68 = v10[2];
    unint64_t v67 = v10[3];
    if (v68 >= v67 >> 1)
    {
      int8x16_t v85 = v66;
      long long v73 = sub_2528C48EC((void *)(v67 > 1), v68 + 1, 1, v10);
      int8x16_t v66 = v85;
      uint64_t v10 = v73;
    }
    uint64_t v69 = *(void *)(v0 + 464);
    v10[2] = v68 + 1;
    long long v70 = (int8x16_t *)&v10[20 * v68];
    v70[2].i64[0] = 1;
    v70[2].i8[8] = 5;
    v70[3].i64[0] = v3;
    v70[3].i64[1] = v3;
    v70[4] = 0u;
    v70[5] = 0u;
    v70[6].i64[0] = 0;
    v70[6].i8[8] = 1;
    v70[7] = (int8x16_t)v82;
    v70[8] = (int8x16_t)v80;
    v70[9] = (int8x16_t)v78;
    v70[10] = v66;
    v70[11].i8[0] = 1;
    sub_2528E3B3C(v69);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
LABEL_36:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v71 = *(uint64_t (**)(void *))(v0 + 8);
  return v71(v10);
}

uint64_t sub_2528E2B18()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2528E3918;
  }
  else
  {
    uint64_t v2 = sub_2528E2C40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528E2C40()
{
  uint64_t v98 = v0;
  uint64_t v1 = v0 + 224;
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void **)(v0 + 248);
  int8x16_t v91 = *(int8x16_t *)(v0 + 256);
  int32x4_t v87 = *(int32x4_t *)(v0 + 288);
  int32x4_t v89 = *(int32x4_t *)(v0 + 272);
  int8x16_t v84 = *(int8x16_t *)(v0 + 320);
  int32x4_t v85 = *(int32x4_t *)(v0 + 304);
  int8x16_t v82 = *(int8x16_t *)(v0 + 352);
  int8x16_t v83 = *(int8x16_t *)(v0 + 336);
  int8x16_t v80 = *(int8x16_t *)(v0 + 384);
  int8x16_t v81 = *(int8x16_t *)(v0 + 368);
  int8x16_t v79 = *(int8x16_t *)(v0 + 400);
  LOBYTE(v6) = *(unsigned char *)(v0 + 416);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void **)(v0 + 568);
  uint64_t v77 = v4;
  uint64_t v78 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_37:
  }
    uint64_t v8 = sub_2528C47C4(0, v8[2] + 1, 1, v8);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  __int8 v11 = v6;
  uint64_t v12 = v5;
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_2528C47C4((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  uint64_t v93 = v1 + 192;
  uint64_t v13 = *(void *)(v0 + 576);
  uint64_t v14 = *(void *)(v0 + 536);
  uint64_t v15 = *(void *)(v0 + 528);
  uint64_t v16 = *(void *)(v0 + 520);
  uint64_t v17 = *(void *)(v0 + 560) + 1;
  v8[2] = v10 + 1;
  uint64_t v18 = (int8x16_t *)&v8[26 * v10];
  v18[2].i64[0] = v2;
  v18[2].i64[1] = v77;
  v18[3].i64[0] = v78;
  v18[3].i64[1] = (uint64_t)v12;
  v18[4] = v91;
  v18[5] = (int8x16_t)v89;
  v18[6] = (int8x16_t)v87;
  v18[7] = (int8x16_t)v85;
  v18[8] = v84;
  v18[9] = v83;
  v18[10] = v82;
  v18[11] = v81;
  v18[12] = v80;
  v18[13] = v79;
  v18[14].i8[0] = v11;
  uint64_t v19 = v8;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  if (v17 == v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(int32x4_t **)(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    BOOL v25 = v23 < v24;
    BOOL v26 = v23 >= v24;
    uint64_t v27 = v25;
    int32x4_t v28 = v22[6];
    uint64_t v29 = (float *)((unint64_t)&v97 | (4 * v27));
    int32x4_t v30 = (__int32 *)((unint64_t)&v97 | (4 * v26));
    v20.i32[0] = 1120403456;
    float v31 = -100.0;
    if (!v25) {
      float v31 = 100.0;
    }
    int32x4_t v97 = v22[6];
    *(float *)v21.i32 = *v29 * 100.0;
    float32x2_t v32 = (float32x2_t)vdup_laneq_s32(v28, 2);
    v32.f32[0] = v31;
    *(int32x2_t *)v20.i8 = vdup_lane_s32(*(int32x2_t *)v20.i8, 0);
    v20.i32[0] = *v30;
    *(float32x2_t *)v20.i8 = vmul_f32(v32, *(float32x2_t *)v20.i8);
    int8x16_t v33 = vextq_s8(vextq_s8(v21, v21, 4uLL), v20, 0xCuLL);
    v33.i32[3] = v28.i32[3];
    int8x16_t v91 = v33;
    int32x4_t v87 = v22[4];
    int32x4_t v89 = v22[3];
    int32x4_t v85 = v22[5];
    uint64_t v34 = MEMORY[0x263F8EE78];
    uint64_t v5 = sub_2528C48EC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v36 = v5[2];
    unint64_t v35 = v5[3];
    if (v36 >= v35 >> 1) {
      uint64_t v5 = sub_2528C48EC((void *)(v35 > 1), v36 + 1, 1, v5);
    }
    uint64_t v37 = *(void *)(v0 + 488);
    uint64_t v5[2] = v36 + 1;
    unint64_t v38 = (int8x16_t *)&v5[20 * v36];
    v38[2].i64[0] = 0;
    v38[2].i8[8] = 4;
    v38[3].i64[0] = (uint64_t)v19;
    v38[3].i64[1] = v34;
    v38[4] = 0u;
    v38[5] = 0u;
    v38[6].i64[0] = 0;
    v38[6].i8[8] = 1;
    v38[7] = (int8x16_t)v89;
    v38[8] = (int8x16_t)v87;
    v38[9] = (int8x16_t)v85;
    v38[10] = v91;
    v38[11].i8[0] = 0;
    sub_2528E3B3C(v37);
    *(void *)(v0 + 600) = v5;
    uint64_t v6 = *(void *)(v0 + 448);
    swift_bridgeObjectRetain();
    uint64_t v1 = 0;
    while (1)
    {
      uint64_t v39 = v1 + 1;
      if (__OFADD__(v1, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      sub_2528E3AD8(*(void *)(v0 + 216)+ ((*(unsigned __int8 *)(v0 + 212) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 212))+ *(void *)(v0 + 504) * v1, *(void *)(v0 + 448));
      if (*(unsigned char *)(v6 + 8)) {
        break;
      }
      uint64_t v40 = *(void *)(v0 + 496);
      sub_2528E3B3C(*(void *)(v0 + 448));
      ++v1;
      if (v39 == v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    uint64_t v46 = *(void *)(v0 + 456);
    uint64_t v45 = *(void *)(v0 + 464);
    uint64_t v47 = *(void *)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_2528E3B98(v47, v46);
    sub_2528E3B98(v46, v45);
    uint64_t v50 = *(void *)(v45 + 32);
    *(void *)(v0 + 608) = v50;
    uint64_t v51 = *(void *)(v50 + 16);
    *(void *)(v0 + 616) = v51;
    if (v51)
    {
      uint64_t v52 = sub_2529513F8();
      *(void *)(v0 + 624) = v52;
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = v53;
      *(void *)(v0 + 632) = v53;
      *(_DWORD *)(v0 + 696) = *(_DWORD *)(v53 + 80);
      *(void *)(v0 + 640) = *(void *)(v53 + 72);
      *(void *)(v0 + 648) = *(void *)(v53 + 64);
      *(void *)(v0 + 664) = v34;
      *(void *)(v0 + 656) = 0;
      swift_bridgeObjectRetain();
      uint64_t v55 = swift_task_alloc();
      *(void *)(v0 + 672) = v55;
      (*(void (**)(void))(v54 + 16))();
      uint64_t v56 = swift_task_alloc();
      *(void *)(v0 + 680) = v56;
      *(void *)uint64_t v56 = v0;
      *(void *)(v56 + 8) = sub_2528E3394;
      *(_OWORD *)(v56 + 32) = *(_OWORD *)(v93 + 8);
      *(unsigned char *)(v56 + 48) = 1;
      *(void *)(v56 + 16) = v0 + 16;
      *(void *)(v56 + 24) = v55;
      goto LABEL_20;
    }
    BOOL v57 = *(int32x4_t **)(v0 + 464);
    uint64_t v59 = *(void *)(v0 + 424);
    uint64_t v58 = *(void *)(v0 + 432);
    BOOL v60 = v58 < v59;
    BOOL v61 = v58 >= v59;
    uint64_t v62 = v60;
    int32x4_t v63 = v57[6];
    float32x2_t v64 = (float *)((unint64_t)&v96 | (4 * v62));
    long long v65 = (__int32 *)((unint64_t)&v96 | (4 * v61));
    v48.i32[0] = 1120403456;
    float v66 = -100.0;
    if (!v60) {
      float v66 = 100.0;
    }
    int32x4_t v96 = v57[6];
    *(float *)v49.i32 = *v64 * 100.0;
    __int32 v86 = v63.i32[3];
    float32x2_t v67 = (float32x2_t)vdup_laneq_s32(v63, 2);
    v67.f32[0] = v66;
    *(int32x2_t *)v48.i8 = vdup_lane_s32(*(int32x2_t *)v48.i8, 0);
    v48.i32[0] = *v65;
    *(float32x2_t *)v48.i8 = vmul_f32(v67, *(float32x2_t *)v48.i8);
    int32x4_t v92 = v57[3];
    int8x16_t v94 = vextq_s8(vextq_s8(v49, v49, 4uLL), v48, 0xCuLL);
    int32x4_t v88 = v57[5];
    int32x4_t v90 = v57[4];
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v5 = *(void **)(v0 + 600);
    if ((v68 & 1) == 0) {
      uint64_t v5 = sub_2528C48EC(0, v5[2] + 1, 1, *(void **)(v0 + 600));
    }
    int8x16_t v69 = v94;
    v69.i32[3] = v86;
    unint64_t v71 = v5[2];
    unint64_t v70 = v5[3];
    if (v71 >= v70 >> 1)
    {
      int8x16_t v95 = v69;
      int64_t v75 = sub_2528C48EC((void *)(v70 > 1), v71 + 1, 1, v5);
      int8x16_t v69 = v95;
      uint64_t v5 = v75;
    }
    uint64_t v72 = *(void *)(v0 + 464);
    uint64_t v5[2] = v71 + 1;
    long long v73 = (int8x16_t *)&v5[20 * v71];
    v73[2].i64[0] = 1;
    v73[2].i8[8] = 5;
    v73[3].i64[0] = v34;
    v73[3].i64[1] = v34;
    v73[4] = 0u;
    v73[5] = 0u;
    v73[6].i64[0] = 0;
    v73[6].i8[8] = 1;
    v73[7] = (int8x16_t)v92;
    v73[8] = (int8x16_t)v90;
    v73[9] = (int8x16_t)v88;
    v73[10] = v69;
    v73[11].i8[0] = 1;
    sub_2528E3B3C(v72);
LABEL_33:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v74 = *(uint64_t (**)(void *))(v0 + 8);
    return v74(v5);
  }
  else
  {
    uint64_t v41 = *(void *)(v0 + 560) + 1;
    *(void *)(v0 + 568) = v19;
    *(void *)(v0 + 560) = v41;
    uint64_t v42 = *(void *)(v0 + 536);
    uint64_t v43 = swift_task_alloc();
    *(void *)(v0 + 576) = v43;
    (*(void (**)(void))(v42 + 16))();
    uint64_t v44 = swift_task_alloc();
    *(void *)(v0 + 584) = v44;
    *(void *)uint64_t v44 = v0;
    *(void *)(v44 + 8) = sub_2528E2B18;
    *(_OWORD *)(v44 + 32) = *(_OWORD *)(v1 + 200);
    *(unsigned char *)(v44 + 48) = 0;
    *(void *)(v44 + 16) = v1;
    *(void *)(v44 + 24) = v43;
LABEL_20:
    return MEMORY[0x270FA2498](sub_2528E4094, 0, 0);
  }
}

uint64_t sub_2528E3394()
{
  *(void *)(*(void *)v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2528E39F8;
  }
  else
  {
    uint64_t v2 = sub_2528E34C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528E34C8()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  long long v52 = *(_OWORD *)(v0 + 64);
  long long v54 = *(_OWORD *)(v0 + 48);
  long long v48 = *(_OWORD *)(v0 + 96);
  long long v50 = *(_OWORD *)(v0 + 80);
  long long v46 = *(_OWORD *)(v0 + 128);
  long long v47 = *(_OWORD *)(v0 + 112);
  long long v44 = *(_OWORD *)(v0 + 160);
  long long v45 = *(_OWORD *)(v0 + 144);
  long long v42 = *(_OWORD *)(v0 + 192);
  long long v43 = *(_OWORD *)(v0 + 176);
  char v5 = *(unsigned char *)(v0 + 208);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  int v7 = *(void **)(v0 + 664);
  uint64_t v41 = v2;
  char v40 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    int v7 = sub_2528C47C4(0, v7[2] + 1, 1, v7);
  }
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  uint64_t v10 = v4;
  if (v9 >= v8 >> 1) {
    int v7 = sub_2528C47C4((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  uint64_t v11 = *(void *)(v0 + 672);
  uint64_t v12 = *(void *)(v0 + 632);
  uint64_t v13 = *(void *)(v0 + 624);
  uint64_t v14 = *(void *)(v0 + 616);
  uint64_t v15 = *(void *)(v0 + 656) + 1;
  v7[2] = v9 + 1;
  uint64_t v16 = &v7[26 * v9];
  v16[4] = v1;
  v16[5] = v3;
  uint64_t v17 = v7;
  v16[6] = v41;
  v16[7] = v10;
  *((_OWORD *)v16 + 4) = v54;
  *((_OWORD *)v16 + 5) = v52;
  *((_OWORD *)v16 + 6) = v50;
  *((_OWORD *)v16 + 7) = v48;
  *((_OWORD *)v16 + 8) = v47;
  *((_OWORD *)v16 + 9) = v46;
  *((_OWORD *)v16 + 10) = v45;
  *((_OWORD *)v16 + 11) = v44;
  *((_OWORD *)v16 + 12) = v43;
  *((_OWORD *)v16 + 13) = v42;
  *((unsigned char *)v16 + 224) = v40;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  if (v15 == v14)
  {
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = *(int32x4_t **)(v0 + 464);
    uint64_t v21 = *(void *)(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    int32x4_t v53 = v19[4];
    int32x4_t v55 = v19[3];
    int32x4_t v49 = v19[6];
    int32x4_t v51 = v19[5];
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    BOOL v25 = *(void **)(v0 + 600);
    if ((v22 & 1) == 0) {
      BOOL v25 = sub_2528C48EC(0, v25[2] + 1, 1, *(void **)(v0 + 600));
    }
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1) {
      BOOL v25 = sub_2528C48EC((void *)(v26 > 1), v27 + 1, 1, v25);
    }
    int32x4_t v56 = v49;
    v24.i32[0] = 1120403456;
    float v28 = -100.0;
    if (v20 >= v21) {
      float v28 = 100.0;
    }
    float32x2_t v29 = (float32x2_t)vdup_laneq_s32(v49, 2);
    v29.f32[0] = v28;
    *(int32x2_t *)v24.i8 = vdup_lane_s32(*(int32x2_t *)v24.i8, 0);
    v24.i32[0] = *(_DWORD *)((unint64_t)&v56 | (4 * (v20 >= v21)));
    *(float32x2_t *)v24.i8 = vmul_f32(v29, *(float32x2_t *)v24.i8);
    *(float *)v23.i32 = *(float *)((unint64_t)&v56 | (4 * (v20 < v21))) * 100.0;
    int8x16_t v30 = vextq_s8(vextq_s8(v23, v23, 4uLL), v24, 0xCuLL);
    v30.i32[3] = v49.i32[3];
    uint64_t v31 = *(void *)(v0 + 464);
    void v25[2] = v27 + 1;
    float32x2_t v32 = (int8x16_t *)&v25[20 * v27];
    v32[2].i64[0] = 1;
    v32[2].i8[8] = 5;
    uint64_t v33 = MEMORY[0x263F8EE78];
    v32[3].i64[0] = (uint64_t)v18;
    v32[3].i64[1] = v33;
    v32[4] = 0u;
    v32[5] = 0u;
    v32[6].i64[0] = 0;
    v32[6].i8[8] = 1;
    v32[7] = (int8x16_t)v55;
    v32[8] = (int8x16_t)v53;
    v32[9] = (int8x16_t)v51;
    v32[10] = v30;
    v32[11].i8[0] = 1;
    sub_2528E3B3C(v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void *))(v0 + 8);
    return v34(v25);
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 656) + 1;
    *(void *)(v0 + 664) = v17;
    *(void *)(v0 + 656) = v36;
    uint64_t v37 = *(void *)(v0 + 632);
    uint64_t v38 = swift_task_alloc();
    *(void *)(v0 + 672) = v38;
    (*(void (**)(void))(v37 + 16))();
    uint64_t v39 = swift_task_alloc();
    *(void *)(v0 + 680) = v39;
    *(void *)uint64_t v39 = v0;
    *(void *)(v39 + 8) = sub_2528E3394;
    *(_OWORD *)(v39 + 32) = *(_OWORD *)(v0 + 424);
    *(unsigned char *)(v39 + 48) = 1;
    *(void *)(v39 + 16) = v0 + 16;
    *(void *)(v39 + 24) = v38;
    return MEMORY[0x270FA2498](sub_2528E4094, 0, 0);
  }
}

uint64_t sub_2528E3918()
{
  uint64_t v1 = v0[61];
  (*(void (**)(void, void))(v0[67] + 8))(v0[72], v0[66]);
  sub_2528E3B3C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2528E39F8()
{
  uint64_t v1 = v0[58];
  (*(void (**)(void, void))(v0[79] + 8))(v0[84], v0[78]);
  sub_2528E3B3C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2528E3AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Hand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528E3B3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Hand();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528E3B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Hand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528E3BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + *(int *)(type metadata accessor for Hand() + 40);
  uint64_t v5 = sub_252951508();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  uint64_t result = sub_2529514A8();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = v6;
    uint64_t v36 = v5;
    uint64_t v37 = a1;
    *(void *)a2 = result;
    uint64_t v8 = sub_2529514E8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = sub_2529514F8();
    MEMORY[0x270FA5388](v11);
    uint64_t v12 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F42788], v8);
    char v13 = sub_2529514D8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
    v14(v12, v8);
    v14(v12, v8);
    *(unsigned char *)(a2 + 8) = (v13 & 1) == 0;
    sub_252951488();
    *(_DWORD *)(a2 + 12) = v15;
    uint64_t v16 = sub_2529514B8();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void *)(v17 + 64);
    MEMORY[0x270FA5388](v16);
    unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v20 = (char *)&v34 - v19;
    uint64_t v21 = sub_2529514C8();
    MEMORY[0x270FA5388](v21);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)&v34 - v19, (char *)&v34 - v19, v16);
    int v22 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))((char *)&v34 - v19, v16);
    if (MEMORY[0x263F42780] && v22 == *MEMORY[0x263F42780])
    {
      unint64_t v23 = 0xE400000000000000;
      uint64_t v24 = 1701736302;
    }
    else if (MEMORY[0x263F42778] && v22 == *MEMORY[0x263F42778])
    {
      unint64_t v23 = 0xEF68636E69507865;
      uint64_t v24 = 0x646E49626D756874;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))((char *)&v34 - v19, v16);
      unint64_t v23 = 0xE500000000000000;
      uint64_t v24 = 0x726568746FLL;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = v23;
    sub_252951478();
    *(_OWORD *)(a2 + 48) = v25;
    *(_OWORD *)(a2 + 64) = v26;
    *(_OWORD *)(a2 + 80) = v27;
    *(_OWORD *)(a2 + 96) = v28;
    uint64_t v29 = sub_252951428();
    uint64_t v30 = *(void *)(v29 - 8);
    MEMORY[0x270FA5388](v29);
    float32x2_t v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_252951498();
    uint64_t v33 = sub_252951388();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v36);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    *(void *)(a2 + 32) = v33;
  }
  return result;
}

BOOL sub_2528E4054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2528E406C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = a5;
  *(unsigned char *)(v5 + 48) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return MEMORY[0x270FA2498](sub_2528E4094, 0, 0);
}

uint64_t sub_2528E4094()
{
  uint64_t v51 = v0;
  sub_2528E4310(*(unsigned char *)(v0 + 48) & 1, (unint64_t *)v50);
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = v50[0];
  uint64_t v3 = v50[1];
  char v49 = v1 & 1 | 4;
  uint64_t v4 = sub_2528CA598(v50);
  if (v5) {
    uint64_t v6 = -1;
  }
  else {
    uint64_t v6 = v4;
  }
  sub_2529513C8();
  int32x4_t v45 = v7;
  sub_2529513C8();
  long long v44 = v8;
  sub_2529513C8();
  long long v43 = v9;
  sub_2529513C8();
  long long v42 = v10;
  sub_2529513D8();
  int32x4_t v38 = v11;
  sub_2529513D8();
  long long v41 = v12;
  sub_2529513D8();
  long long v40 = v13;
  uint64_t result = sub_2529513D8();
  if (v6 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  unint64_t v19 = (uint64_t *)&unk_2702D0B30;
  if (v1) {
    unint64_t v19 = (uint64_t *)&unk_2702D0C28;
  }
  if (v6 >= *v19) {
    goto LABEL_19;
  }
  uint64_t v21 = *(void *)(v0 + 32);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 16);
  BOOL v23 = v20 < v21;
  BOOL v24 = v20 >= v21;
  uint64_t v25 = v23;
  int32x4_t v48 = v38;
  *(int32x2_t *)v16.i8 = vdup_n_s32(0x42C80000u);
  long long v37 = v17;
  float v26 = -100.0;
  if (!v23) {
    float v26 = 100.0;
  }
  *(int32x2_t *)v18.i8 = vdup_laneq_s32(v38, 2);
  *(float *)v18.i32 = v26;
  v27.i32[1] = v16.i32[1];
  v27.i32[0] = *(_DWORD *)((unint64_t)&v48 & 0xFFFFFFFFFFFFFFFBLL | (4 * v24));
  *(float32x2_t *)v18.i8 = vmul_f32(*(float32x2_t *)v18.i8, v27);
  *(float *)v15.i32 = *(float *)((unint64_t)&v48 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v25 & 1))) * 100.0;
  int8x16_t v28 = vextq_s8(vextq_s8(v15, v15, 4uLL), v18, 0xCuLL);
  v28.i32[3] = v38.i32[3];
  int8x16_t v39 = v28;
  int32x4_t v47 = v45;
  float32x2_t v29 = (float32x2_t)vdup_laneq_s32(v45, 2);
  v29.f32[0] = v26;
  v16.i32[0] = *(_DWORD *)((unint64_t)&v47 | (4 * v24));
  *(float *)v28.i32 = *(float *)((unint64_t)&v47 | (4 * v25)) * 100.0;
  *(float32x2_t *)v16.i8 = vmul_f32(v29, *(float32x2_t *)v16.i8);
  int8x16_t v30 = vextq_s8(vextq_s8(v28, v28, 4uLL), v16, 0xCuLL);
  v30.i32[3] = v45.i32[3];
  int8x16_t v46 = v30;
  uint64_t v31 = &unk_2702D0C38;
  if ((v1 & 1) == 0) {
    uint64_t v31 = &unk_2702D0B40;
  }
  uint64_t v32 = v31[v6];
  swift_bridgeObjectRelease();
  int8x16_t v33 = v46;
  v33.i32[3] = 0;
  int8x16_t v36 = v33;
  sub_2528E50E8((uint64_t)&unk_2702D0810);
  *(void *)uint64_t v22 = v6;
  *(void *)(v22 + 8) = v32;
  *(void *)(v22 + 16) = v2;
  *(void *)(v22 + 24) = v3;
  *(int8x16_t *)(v22 + 32) = v36;
  *(_OWORD *)(v22 + 48) = v34;
  *(_OWORD *)(v22 + 64) = v44;
  *(_OWORD *)(v22 + 80) = v43;
  *(_OWORD *)(v22 + 96) = v42;
  *(int8x16_t *)(v22 + 112) = v46;
  *(_OWORD *)(v22 + 128) = v41;
  *(_OWORD *)(v22 + 144) = v40;
  *(_OWORD *)(v22 + 160) = v37;
  *(int8x16_t *)(v22 + 176) = v39;
  *(unsigned char *)(v22 + 192) = 1;
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_2528E4310@<X0>(char a1@<W1>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_252951408();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int32x4_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2529513E8();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (MEMORY[0x263F42768] && v8 == *MEMORY[0x263F42768])
  {
    if (a1)
    {
      if (qword_269C31878 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C338D0;
    }
    else
    {
      if (qword_269C31748 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33670;
    }
LABEL_197:
    unint64_t v11 = *v9;
    unint64_t v18 = v9[1];
    goto LABEL_198;
  }
  if (MEMORY[0x263F426B0] && v8 == *MEMORY[0x263F426B0])
  {
    unint64_t v10 = 0xD000000000000012;
    unint64_t v11 = 0xD000000000000013;
    long long v12 = "lefthandindexend";
    long long v13 = "righthandthumbstart";
    goto LABEL_31;
  }
  if (MEMORY[0x263F42710] && v8 == *MEMORY[0x263F42710])
  {
    if (a1)
    {
      if (qword_269C318F0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C339C0;
    }
    else
    {
      if (qword_269C317C8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33770;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42700] && v8 == *MEMORY[0x263F42700])
  {
    if (a1)
    {
      if (qword_269C318F8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C339D0;
    }
    else
    {
      if (qword_269C317D0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33780;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42770] && v8 == *MEMORY[0x263F42770])
  {
    unint64_t v11 = 0xD000000000000010;
    long long v12 = "lefthandthumbstart";
    uint64_t v14 = "righthandthumbend";
    goto LABEL_25;
  }
  if (MEMORY[0x263F42708] && v8 == *MEMORY[0x263F42708])
  {
    unint64_t v10 = 0xD000000000000012;
    unint64_t v11 = 0xD000000000000013;
    long long v12 = "lefthandmidstart";
    long long v13 = "righthandindexstart";
    goto LABEL_31;
  }
  if (MEMORY[0x263F426E0] && v8 == *MEMORY[0x263F426E0])
  {
    if (a1)
    {
      if (qword_269C31888 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C338F0;
    }
    else
    {
      if (qword_269C31758 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33690;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42740] && v8 == *MEMORY[0x263F42740])
  {
    if (a1)
    {
      if (qword_269C31890 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33900;
    }
    else
    {
      if (qword_269C31760 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336A0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42730] && v8 == *MEMORY[0x263F42730])
  {
    if (a1)
    {
      if (qword_269C31898 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33910;
    }
    else
    {
      if (qword_269C31768 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336B0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F426C0] && v8 == *MEMORY[0x263F426C0])
  {
    unint64_t v11 = 0xD000000000000010;
    long long v12 = "lefthandindexstart";
    uint64_t v14 = "righthandindexend";
    goto LABEL_25;
  }
  if (MEMORY[0x263F42720] && v8 == *MEMORY[0x263F42720])
  {
    unint64_t v11 = 0xD000000000000010;
    long long v12 = "lefthandringstart";
    uint64_t v14 = "righthandmidstart";
LABEL_25:
    int8x16_t v15 = v14 - 32;
    BOOL v16 = (a1 & 1) == 0;
    if (a1) {
      unint64_t v11 = 0xD000000000000011;
    }
    goto LABEL_33;
  }
  if (MEMORY[0x263F426F0] && v8 == *MEMORY[0x263F426F0])
  {
    if (a1)
    {
      if (qword_269C318A0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33920;
    }
    else
    {
      if (qword_269C31770 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336C0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42760] && v8 == *MEMORY[0x263F42760])
  {
    if (a1)
    {
      if (qword_269C318A8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33930;
    }
    else
    {
      if (qword_269C31778 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336D0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42750] && v8 == *MEMORY[0x263F42750])
  {
    if (a1)
    {
      if (qword_269C318B0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33940;
    }
    else
    {
      if (qword_269C31780 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336E0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F426D0] && v8 == *MEMORY[0x263F426D0])
  {
    if (a1)
    {
      if (qword_269C318B8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33950;
    }
    else
    {
      if (qword_269C31788 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C336F0;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F426F8] && v8 == *MEMORY[0x263F426F8])
  {
    unint64_t v10 = 0xD000000000000011;
    unint64_t v11 = 0xD000000000000012;
    long long v12 = "lefthandpinkyend";
    long long v13 = "righthandringstart";
    goto LABEL_31;
  }
  if (MEMORY[0x263F426D8] && v8 == *MEMORY[0x263F426D8])
  {
    if (a1)
    {
      if (qword_269C318D8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33990;
    }
    else
    {
      if (qword_269C317A8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33730;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42738] && v8 == *MEMORY[0x263F42738])
  {
    if (a1)
    {
      if (qword_269C318E0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C339A0;
    }
    else
    {
      if (qword_269C317B0 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33740;
    }
    goto LABEL_197;
  }
  if (MEMORY[0x263F42728] && v8 == *MEMORY[0x263F42728])
  {
    if (a1)
    {
      if (qword_269C318E8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C339B0;
    }
    else
    {
      if (qword_269C317B8 != -1) {
        swift_once();
      }
      long long v9 = &qword_269C33750;
    }
    goto LABEL_197;
  }
  if (!MEMORY[0x263F426B8] || v8 != *MEMORY[0x263F426B8])
  {
    if (!MEMORY[0x263F42718] || v8 != *MEMORY[0x263F42718])
    {
      if (MEMORY[0x263F426E8] && v8 == *MEMORY[0x263F426E8])
      {
        if (a1)
        {
          if (qword_269C318C0 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33960;
        }
        else
        {
          if (qword_269C31790 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33700;
        }
        goto LABEL_197;
      }
      if (MEMORY[0x263F42758] && v8 == *MEMORY[0x263F42758])
      {
        if (a1)
        {
          if (qword_269C318C8 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33970;
        }
        else
        {
          if (qword_269C31798 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33710;
        }
        goto LABEL_197;
      }
      if (MEMORY[0x263F42748] && v8 == *MEMORY[0x263F42748])
      {
        if (a1)
        {
          if (qword_269C318D0 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33980;
        }
        else
        {
          if (qword_269C317A0 != -1) {
            swift_once();
          }
          long long v9 = &qword_269C33720;
        }
        goto LABEL_197;
      }
      if (MEMORY[0x263F426C8] && v8 == *MEMORY[0x263F426C8])
      {
        unint64_t v11 = 0xD000000000000010;
        long long v12 = "lefthandpinkystart";
        uint64_t v14 = "righthandpinkyend";
      }
      else
      {
        if (!MEMORY[0x263F426A8] || v8 != *MEMORY[0x263F426A8])
        {
          if (!MEMORY[0x263F426A0] || v8 != *MEMORY[0x263F426A0])
          {
            sub_2528E5158();
            swift_allocError();
            *unint64_t v19 = xmmword_2529555C0;
            swift_willThrow();
            return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          }
          if (a1)
          {
            if (qword_269C31868 != -1) {
              swift_once();
            }
            long long v9 = &qword_269C338B0;
          }
          else
          {
            if (qword_269C31738 != -1) {
              swift_once();
            }
            long long v9 = &qword_269C33650;
          }
          goto LABEL_197;
        }
        unint64_t v11 = 0xD000000000000010;
        long long v12 = "f keys found, expected one.";
        uint64_t v14 = "rightforearmwrist";
      }
      goto LABEL_25;
    }
    unint64_t v10 = 0xD000000000000012;
    unint64_t v11 = 0xD000000000000013;
    long long v12 = "righteyelowerlid";
    long long v13 = "righthandpinkystart";
LABEL_31:
    int8x16_t v15 = v13 - 32;
    BOOL v16 = (a1 & 1) == 0;
    if ((a1 & 1) == 0) {
      unint64_t v11 = v10;
    }
LABEL_33:
    unint64_t v17 = (unint64_t)v12 | 0x8000000000000000;
    if (v16) {
      unint64_t v18 = v17;
    }
    else {
      unint64_t v18 = (unint64_t)v15 | 0x8000000000000000;
    }
    goto LABEL_198;
  }
  if ((a1 & 1) == 0)
  {
    if (qword_269C317C0 != -1) {
      swift_once();
    }
    long long v9 = &qword_269C33760;
    goto LABEL_197;
  }
  unint64_t v11 = 0xD000000000000010;
  unint64_t v18 = 0x800000025295AA90;
LABEL_198:
  *a2 = v11;
  a2[1] = v18;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2528E50E8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 3;
    if ((unint64_t)(v1 - 1) < 3) {
      unint64_t v3 = v1 - 1;
    }
    long long v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 2)
      {
        __break(1u);
        goto LABEL_10;
      }
      int v5 = *(_DWORD *)(result + 32 + 4 * v2);
      long long v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      long long v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 2) {
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

unint64_t sub_2528E5158()
{
  unint64_t result = qword_269C32608;
  if (!qword_269C32608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32608);
  }
  return result;
}

ValueMetadata *type metadata accessor for Hand.Action()
{
  return &type metadata for Hand.Action;
}

uint64_t getEnumTagSinglePayload for Resizer.ResizeMethod(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Hand.Chirality(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    CMTime *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528E5318);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          CMTime *result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_2528E5340(unsigned char *result, char a2)
{
  CMTime *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Hand.Chirality()
{
  return &type metadata for Hand.Chirality;
}

unint64_t sub_2528E5360()
{
  unint64_t result = qword_269C32610;
  if (!qword_269C32610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32610);
  }
  return result;
}

unint64_t VideoError.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VideoError();
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528E56A8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
      uint64_t v6 = sub_252951268();
      uint64_t v7 = *(void *)(v6 - 8);
      MEMORY[0x270FA5388](v6);
      long long v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v4, v6);
      v12[0] = 0;
      v12[1] = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      v12[0] = 0xD00000000000001ELL;
      v12[1] = 0x800000025295B760;
      sub_2528AED6C();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      sub_252951B08();
      swift_bridgeObjectRelease();
      uint64_t v10 = v12[0];
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      return 0xD000000000000028;
    }
  }
  else
  {
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_252951E48();
    swift_bridgeObjectRelease();
    BYTE5(v12[1]) = 0;
    HIWORD(v12[1]) = -5120;
    sub_252951B08();
    swift_bridgeObjectRelease();
    sub_252951B08();
    return v12[0];
  }
  return v10;
}

uint64_t type metadata accessor for VideoError()
{
  uint64_t result = qword_269C32620;
  if (!qword_269C32620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528E56A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s5Human10VideoErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoError();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v9 = (void *)((char *)v37 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32630);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  long long v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v13[*(int *)(v11 + 56)];
  sub_2528E56A8(a1, (uint64_t)v13);
  sub_2528E56A8(a2, (uint64_t)v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2528E56A8((uint64_t)v13, (uint64_t)v9);
    uint64_t v30 = *v9;
    uint64_t v29 = v9[1];
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v33 = *(void *)v14;
      uint64_t v34 = *((void *)v14 + 1);
      if (v30 == v33 && v29 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v36 = sub_252952108();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0) {
          goto LABEL_25;
        }
      }
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
LABEL_16:
    sub_2528E6214((uint64_t)v13);
    return 0;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_28;
    }
    goto LABEL_16;
  }
  sub_2528E56A8((uint64_t)v13, (uint64_t)v7);
  uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
  uint64_t v18 = *(void *)&v7[v16];
  uint64_t v17 = *(void *)&v7[v16 + 8];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_252951268();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v7, v31);
    goto LABEL_16;
  }
  uint64_t v19 = *(void *)&v14[v16];
  uint64_t v20 = *(void *)&v14[v16 + 8];
  v37[0] = v19;
  uint64_t v21 = sub_252951268();
  v37[1] = v37;
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  BOOL v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v14, v21);
  char v25 = MEMORY[0x2533BFC10](v7, v24);
  float v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v26(v7, v21);
  if ((v25 & 1) == 0)
  {
    v26(v24, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    sub_2528E5F60((uint64_t)v13);
    return 0;
  }
  if (v18 == v37[0] && v17 == v20)
  {
    swift_bridgeObjectRelease_n();
    v26(v24, v21);
  }
  else
  {
    char v28 = sub_252952108();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26(v24, v21);
    if ((v28 & 1) == 0) {
      goto LABEL_25;
    }
  }
LABEL_28:
  sub_2528E5F60((uint64_t)v13);
  return 1;
}

unint64_t sub_2528E5B08()
{
  unint64_t result = qword_269C325B0;
  if (!qword_269C325B0)
  {
    type metadata accessor for VideoError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C325B0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_252951268();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
      uint64_t v12 = (uint64_t *)((char *)a1 + v11);
      long long v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      void *v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for VideoError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result != 1) {
      return result;
    }
    uint64_t v3 = sub_252951268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VideoError(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_252951268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for VideoError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2528E5F60((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_252951268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      void *v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2528E5F60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for VideoError(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_252951268();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for VideoError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2528E5F60((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_252951268();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2528E616C()
{
  v2[4] = &unk_252955798;
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2528E6214(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528E6274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)
    || (unint64_t v4 = sub_252922FE8(17481, 0xE200000000000000), (v5 & 1) == 0)
    || (sub_2528D9690(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 0;
LABEL_14:
    sub_2528BACAC();
    swift_allocError();
    *long long v13 = v12;
    return swift_willThrow();
  }
  if (!*(void *)(a1 + 16)
    || (unint64_t v6 = sub_252922FE8(0x444970756F7247, 0xE700000000000000), (v7 & 1) == 0)
    || (sub_2528D9690(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 1;
    goto LABEL_14;
  }
  if (!*(void *)(a1 + 16)
    || (unint64_t v8 = sub_252922FE8(0x6E656469666E6F43, 0xEF6C6576654C6563), (v9 & 1) == 0)
    || (sub_2528D9690(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 2;
    goto LABEL_14;
  }
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_252922FE8(1952671058, 0xE400000000000000), (v11 & 1) != 0))
  {
    sub_2528D9690(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
    sub_2528D9630((uint64_t)&v28);
    goto LABEL_33;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C323E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    char v12 = 3;
    goto LABEL_14;
  }
  if (!*(void *)(*(void *)&v27 + 16)
    || (unint64_t v15 = sub_252922FE8(0x6874646957, 0xE500000000000000), (v16 & 1) == 0)
    || (sub_2528D9690(*(void *)(*(void *)&v27 + 56) + 32 * v15, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 4;
    goto LABEL_14;
  }
  if (!*(void *)(*(void *)&v27 + 16)
    || (unint64_t v17 = sub_252922FE8(0x746867696548, 0xE600000000000000), (v18 & 1) == 0)
    || (sub_2528D9690(*(void *)(*(void *)&v27 + 56) + 32 * v17, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 5;
    goto LABEL_14;
  }
  if (!*(void *)(*(void *)&v27 + 16)
    || (unint64_t v19 = sub_252922FE8(88, 0xE100000000000000), (v20 & 1) == 0)
    || (sub_2528D9690(*(void *)(*(void *)&v27 + 56) + 32 * v19, (uint64_t)&v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    char v12 = 6;
    goto LABEL_14;
  }
  if (*(void *)(*(void *)&v27 + 16) && (unint64_t v21 = sub_252922FE8(89, 0xE100000000000000), (v22 & 1) != 0))
  {
    sub_2528D9690(*(void *)(*(void *)&v27 + 56) + 32 * v21, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
    sub_2528D9630((uint64_t)&v28);
    goto LABEL_42;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_42:
    char v12 = 7;
    goto LABEL_14;
  }
  float v23 = v27;
  float v24 = v27;
  float v25 = v27;
  *(double *)a2 = v27;
  float v26 = v27;
  *(float *)(a2 + 8) = v23;
  *(float *)(a2 + 12) = v24;
  *(float *)(a2 + 16) = v25;
  *(float *)(a2 + 20) = v26;
  *(double *)(a2 + 24) = v27;
  *(double *)(a2 + 32) = v27;
  return result;
}

uint64_t Rect.id.getter()
{
  return *(void *)v0;
}

double Rect.origin.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 8);
  *a1 = result;
  return result;
}

double Rect.size.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *a1 = result;
  return result;
}

uint64_t Rect.groupID.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Rect.confidenceLevel.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_2528E66AC(char a1)
{
  return qword_2529559B8[a1];
}

uint64_t sub_2528E66CC(char *a1, char *a2)
{
  return sub_252931908(*a1, *a2);
}

uint64_t sub_2528E66D8()
{
  return sub_252930D4C();
}

uint64_t sub_2528E66E0()
{
  return sub_2529311B0();
}

uint64_t sub_2528E66E8()
{
  return sub_252931204();
}

uint64_t sub_2528E66F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2528E7124();
  *a1 = result;
  return result;
}

uint64_t sub_2528E6720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2528E66AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2528E674C()
{
  return sub_2528E66AC(*v0);
}

uint64_t sub_2528E6754@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2528E7124();
  *a1 = result;
  return result;
}

void sub_2528E677C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2528E6788(uint64_t a1)
{
  unint64_t v2 = sub_2528E6A58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528E67C4(uint64_t a1)
{
  unint64_t v2 = sub_2528E6A58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Rect.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32638);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528E6A58();
  sub_2529521E8();
  if (!v2)
  {
    LOBYTE(v17) = 0;
    uint64_t v9 = sub_252952008();
    char v16 = 1;
    sub_2528E6AAC();
    sub_252952018();
    uint64_t v10 = v17;
    char v16 = 2;
    sub_2528E6B00();
    sub_252952018();
    uint64_t v11 = v17;
    LOBYTE(v17) = 3;
    uint64_t v13 = sub_252952008();
    LOBYTE(v17) = 4;
    uint64_t v14 = sub_252952008();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v14;
    a2[4] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2528E6A58()
{
  unint64_t result = qword_269C32640;
  if (!qword_269C32640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32640);
  }
  return result;
}

unint64_t sub_2528E6AAC()
{
  unint64_t result = qword_269C32648;
  if (!qword_269C32648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32648);
  }
  return result;
}

unint64_t sub_2528E6B00()
{
  unint64_t result = qword_269C32650;
  if (!qword_269C32650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32650);
  }
  return result;
}

uint64_t Rect.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32658);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  uint64_t v8 = v1[2];
  uint64_t v11 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528E6A58();
  sub_252952208();
  LOBYTE(v13) = 0;
  sub_252952088();
  if (!v2)
  {
    uint64_t v13 = v9;
    char v12 = 1;
    sub_2528E6D4C();
    sub_252952098();
    uint64_t v13 = v8;
    char v12 = 2;
    sub_2528E6DA0();
    sub_252952098();
    LOBYTE(v13) = 3;
    sub_252952088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2528E6D4C()
{
  unint64_t result = qword_269C32660;
  if (!qword_269C32660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32660);
  }
  return result;
}

unint64_t sub_2528E6DA0()
{
  unint64_t result = qword_269C32668;
  if (!qword_269C32668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32668);
  }
  return result;
}

uint64_t sub_2528E6DF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Rect.init(from:)(a1, a2);
}

uint64_t sub_2528E6E0C(void *a1)
{
  return Rect.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for Rect(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Rect(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Rect()
{
  return &type metadata for Rect;
}

uint64_t _s19CameraConfigurationV10ResolutionOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Rect.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    CMTime *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528E6FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          CMTime *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Rect.CodingKeys()
{
  return &type metadata for Rect.CodingKeys;
}

unint64_t sub_2528E7020()
{
  unint64_t result = qword_269C32670;
  if (!qword_269C32670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32670);
  }
  return result;
}

unint64_t sub_2528E7078()
{
  unint64_t result = qword_269C32678;
  if (!qword_269C32678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32678);
  }
  return result;
}

unint64_t sub_2528E70D0()
{
  unint64_t result = qword_269C32680;
  if (!qword_269C32680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32680);
  }
  return result;
}

uint64_t sub_2528E7124()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t SceneDescriptorError.errorDescription.getter()
{
  return SceneDescriptorError.debugDescription.getter();
}

unint64_t SceneDescriptorError.debugDescription.getter()
{
  unint64_t result = 0xD000000000000018;
  switch(*(void *)(v0 + 8))
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
    case 7:
    case 0xALL:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      sub_252951E48();
      sub_252951B08();
      sub_252951F08();
      sub_252951B08();
      unint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_2528E7390()
{
  return SceneDescriptorError.debugDescription.getter();
}

uint64_t _s5Human20SceneDescriptorErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_25;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_25;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_25;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    default:
      if (v5 >= 0xB)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_252952108();
        }
      }
      else
      {
LABEL_25:
        char v6 = 0;
      }
      sub_2528E77D0(v4, v5);
      sub_2528E77D0(v2, v3);
      break;
  }
  sub_2528E77E4(v2, v3);
  sub_2528E77E4(v4, v5);
  return v6 & 1;
}

unint64_t destroy for SceneDescriptorError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5Human20SceneDescriptorErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for SceneDescriptorError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SceneDescriptorError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneDescriptorError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF4 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483637);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 10;
  if (v4 >= 0xC) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SceneDescriptorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 10;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneDescriptorError()
{
  return &type metadata for SceneDescriptorError;
}

uint64_t sub_2528E77D0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xB) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2528E77E4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xB) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t YUVtoRGBConverter.applied(to:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for ImageDescriptor();
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_252951598();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528E78EC, 0, 0);
}

uint64_t sub_2528E78EC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  sub_252951588();
  sub_2528AC618(v2, v1);
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  unsigned int v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  void *v4 = v0;
  v4[1] = sub_2528AC3BC;
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return MEMORY[0x270EE76C0](v7, v5, &unk_269C32698, v3, v6);
}

uint64_t sub_2528E79D4(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_252951A08();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528E7AA4, 0, 0);
}

uint64_t sub_2528E7AA4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  id v3 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v3, sel_systemUptime);
  v0[10] = v4;

  sub_2528AC618(v2, v1);
  v0[2] = 0xD00000000000001DLL;
  v0[3] = 0x800000025295A0B0;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528E7BB8;
  uint64_t v6 = v0[9];
  return ImageDescriptor.tensor(for:)(v6, v0 + 2);
}

uint64_t sub_2528E7BB8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528E7EC4;
  }
  else {
    uint64_t v2 = sub_2528E7CCC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528E7CCC()
{
  if (sub_252951648() != MEMORY[0x263F8D5C8])
  {
    uint64_t v1 = *((void *)v0 + 9);
    uint64_t v2 = *((void *)v0 + 6);
    uint64_t v3 = *((void *)v0 + 7);
    uint64_t v4 = *((void *)v0 + 4);
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v5 = 2;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 0;
    *(unsigned char *)(v5 + 32) = 6;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
LABEL_5:
    sub_2528AE3B8(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))*((void *)v0 + 1);
    goto LABEL_6;
  }
  uint64_t v6 = *((void *)v0 + 12);
  sub_2528E7FD8(*((void *)v0 + 8));
  if (v6)
  {
    uint64_t v4 = *((void *)v0 + 4);
    (*(void (**)(void, void))(*((void *)v0 + 7) + 8))(*((void *)v0 + 9), *((void *)v0 + 6));
    goto LABEL_5;
  }
  double v9 = v0[10];
  uint64_t v10 = *((void *)v0 + 8);
  uint64_t v11 = *((void *)v0 + 9);
  uint64_t v12 = *((void *)v0 + 6);
  uint64_t v13 = *((void *)v0 + 7);
  uint64_t v14 = *((void *)v0 + 4);
  uint64_t v15 = v14 + *(int *)(type metadata accessor for ImageDescriptor() + 36);
  sub_2528AE5CC(v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v10, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  sub_2528D01CC(6, v9);
  char v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v10, v12);
  v16(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))*((void *)v0 + 1);
LABEL_6:
  return v7();
}

uint64_t sub_2528E7EC4()
{
  sub_2528AE3B8(*(void *)(v0 + 32));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528E7F38(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528E79D4(a1, v4);
}

void *sub_2528E7FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v85 = a1;
  uint64_t v1 = sub_252951A08();
  uint64_t v86 = *(void *)(v1 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  int32x4_t v92 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v93 = (char *)v76 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int8x16_t v84 = (char *)v76 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v76 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v76 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  char v16 = (char *)v76 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  int32x4_t v90 = (char *)v76 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  int8x16_t v94 = (char *)v76 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int8x16_t v91 = (char *)v76 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  float v25 = (char *)v76 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  int32x4_t v97 = (char *)v76 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v99 = (char *)v76 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v76 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)v76 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  int32x4_t v38 = (char *)v76 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  int32x4_t v87 = (char *)v76 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v100 = (char *)v76 - v41;
  uint64_t v42 = sub_252951898();
  uint64_t v98 = v25;
  if (v42 == 3)
  {
    uint64_t v82 = 3;
    uint64_t result = (void *)sub_2529518F8();
    if (!result[2])
    {
      __break(1u);
      goto LABEL_17;
    }
    int8x16_t v95 = v35;
    uint64_t v44 = result[4];
    swift_bridgeObjectRelease();
    if (v44 == 3)
    {
LABEL_9:
      uint64_t result = (void *)sub_252951908();
      if (result[2])
      {
        int32x4_t v47 = result;
        int32x4_t v48 = v13;
        int8x16_t v81 = v16;
        int32x4_t v96 = v32;
        int8x16_t v83 = v10;
        uint64_t v49 = v86;
        uint64_t v78 = *(unsigned __int8 *)(v86 + 80);
        uint64_t v79 = (v78 + 32) & ~v78;
        long long v50 = (char *)result + v79;
        uint64_t v51 = v87;
        int32x4_t v88 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        uint64_t v89 = v86 + 16;
        v88(v87, (char *)result + v79, v1);
        sub_2529516C8();
        sub_252951738();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v52(v38, v1);
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v52)(v51, v1);
        if (v47[2] >= 2uLL)
        {
          int8x16_t v80 = v48;
          uint64_t v86 = *(void *)(v49 + 72);
          v88(v38, &v50[v86], v1);
          int32x4_t v53 = v96;
          sub_2529516C8();
          sub_252951738();
          v52(v53, v1);
          v52(v38, v1);
          sub_2529516C8();
          sub_252951798();
          v52(v38, v1);
          uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v52)(v51, v1);
          if (v47[2] >= 3uLL)
          {
            uint64_t v77 = 2 * v86;
            v88(v38, &v50[2 * v86], v1);
            swift_bridgeObjectRelease();
            sub_2529516C8();
            sub_252951738();
            v52(v53, v1);
            v52(v38, v1);
            sub_2529516C8();
            sub_252951798();
            v52(v38, v1);
            v52(v51, v1);
            v76[1] = sub_2529518F8();
            v76[2] = sub_2528AE524();
            sub_2528AE578();
            long long v54 = v51;
            sub_252951918();
            sub_2529518F8();
            sub_252951888();
            sub_2529516C8();
            sub_252951738();
            v52(v38, v1);
            v52(v51, v1);
            int32x4_t v55 = v96;
            sub_2529516C8();
            sub_252951738();
            v52(v55, v1);
            sub_252951768();
            v52(v38, v1);
            sub_2529518B8();
            v52(v51, v1);
            sub_252951518();
            sub_252951528();
            v52(v38, v1);
            sub_2529516C8();
            sub_252951718();
            v52(v38, v1);
            v52(v51, v1);
            int32x4_t v56 = v80;
            sub_2529516C8();
            uint64_t v57 = v83;
            sub_2529516C8();
            uint64_t v58 = v81;
            sub_252951738();
            v52(v57, v1);
            v52(v56, v1);
            sub_252951738();
            uint64_t v59 = v58;
            v52(v58, v1);
            sub_2529516C8();
            BOOL v60 = v84;
            sub_2529516C8();
            sub_252951738();
            v52(v60, v1);
            v52(v57, v1);
            sub_252951738();
            v52(v56, v1);
            BOOL v61 = v96;
            sub_252951768();
            v52(v59, v1);
            v52(v61, v1);
            sub_2529516C8();
            sub_252951718();
            v52(v61, v1);
            v52(v38, v1);
            sub_252951798();
            v52(v54, v1);
            sub_2529518B8();
            sub_252951518();
            v52(v61, v1);
            sub_252951528();
            v52(v38, v1);
            sub_2529516C8();
            sub_252951718();
            v52(v38, v1);
            v52(v54, v1);
            sub_2529516C8();
            uint64_t v62 = v80;
            sub_252951738();
            v52(v57, v1);
            int32x4_t v63 = v81;
            sub_252951768();
            v52(v62, v1);
            sub_2529518B8();
            v52(v63, v1);
            sub_252951518();
            v52(v61, v1);
            sub_252951528();
            v52(v38, v1);
            sub_2529516C8();
            sub_252951718();
            v52(v38, v1);
            v52(v54, v1);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
            uint64_t v64 = v77;
            uint64_t v65 = v86;
            uint64_t v66 = v79;
            uint64_t v67 = swift_allocObject();
            *(_OWORD *)(v67 + 16) = xmmword_252953970;
            uint64_t v68 = v67 + v66;
            int8x16_t v69 = (void (*)(uint64_t, char *, uint64_t))v88;
            v88((char *)v68, v94, v1);
            uint64_t v70 = v68 + v65;
            unint64_t v71 = v93;
            v69(v70, v93, v1);
            uint64_t v72 = v68 + v64;
            long long v73 = v92;
            v69(v72, v92, v1);
            uint64_t v101 = v67;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
            sub_2528D2658();
            sub_2529516D8();
            v52(v73, v1);
            v52(v71, v1);
            v52(v90, v1);
            v52(v94, v1);
            v52(v91, v1);
            v52(v98, v1);
            v52(v97, v1);
            v52(v99, v1);
            v52(v95, v1);
            return (void *)((uint64_t (*)(char *, uint64_t))v52)(v100, v1);
          }
          goto LABEL_19;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_13:
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v74 = v44;
    *(void *)(v74 + 8) = 0;
    *(void *)(v74 + 16) = 0;
    *(void *)(v74 + 24) = 0;
    char v75 = 5;
LABEL_15:
    *(unsigned char *)(v74 + 32) = v75;
    return (void *)swift_willThrow();
  }
  int32x4_t v96 = v32;
  int8x16_t v83 = v10;
  int32x4_t v45 = v16;
  uint64_t v46 = v42;
  if (v42 != 4)
  {
    sub_2528AE4D0();
    swift_allocError();
    *(void *)uint64_t v74 = v46;
    *(void *)(v74 + 8) = 0;
    *(void *)(v74 + 16) = 0;
    *(void *)(v74 + 24) = 0;
    char v75 = 4;
    goto LABEL_15;
  }
  uint64_t v82 = 4;
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] >= 2uLL)
  {
    int8x16_t v95 = v35;
    uint64_t v44 = result[5];
    swift_bridgeObjectRelease();
    if (v44 == 3)
    {
      char v16 = v45;
      uint64_t v10 = v83;
      uint64_t v32 = v96;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2528E8D88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return YUVtoRGBConverter.applied(to:)(a1, a2);
}

ValueMetadata *type metadata accessor for YUVtoRGBConverter()
{
  return &type metadata for YUVtoRGBConverter;
}

float Size.width.getter()
{
  return *(float *)v0;
}

void Size.width.setter(float a1)
{
  float *v1 = a1;
}

uint64_t (*Size.width.modify())()
{
  return nullsub_1;
}

float Size.height.getter()
{
  return *(float *)(v0 + 4);
}

void Size.height.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*Size.height.modify())()
{
  return nullsub_1;
}

uint64_t sub_2528E8E98(char a1)
{
  if (a1) {
    return 0x746867696568;
  }
  else {
    return 0x6874646977;
  }
}

uint64_t sub_2528E8EC8()
{
  return sub_2528E8E98(*v0);
}

uint64_t sub_2528E8ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528E957C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2528E8EF8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2528E8F04(uint64_t a1)
{
  unint64_t v2 = sub_2528E90E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528E8F40(uint64_t a1)
{
  unint64_t v2 = sub_2528E90E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Size.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C326A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528E90E4();
  sub_252952208();
  v8[15] = 0;
  sub_252952078();
  if (!v1)
  {
    v8[14] = 1;
    sub_252952078();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2528E90E4()
{
  unint64_t result = qword_269C326B0;
  if (!qword_269C326B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C326B0);
  }
  return result;
}

uint64_t Size.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C326B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528E90E4();
  sub_2529521E8();
  if (!v2)
  {
    char v16 = 0;
    sub_252951FF8();
    int v10 = v9;
    char v15 = 1;
    sub_252951FF8();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2528E92DC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return Size.init(from:)(a1, a2);
}

uint64_t sub_2528E92F4(void *a1)
{
  return Size.encode(to:)(a1);
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Point(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Point(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Size()
{
  return &type metadata for Size;
}

unsigned char *storeEnumTagSinglePayload for Size.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528E943CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Size.CodingKeys()
{
  return &type metadata for Size.CodingKeys;
}

unint64_t sub_2528E9478()
{
  unint64_t result = qword_269C326C0;
  if (!qword_269C326C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C326C0);
  }
  return result;
}

unint64_t sub_2528E94D0()
{
  unint64_t result = qword_269C326C8;
  if (!qword_269C326C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C326C8);
  }
  return result;
}

unint64_t sub_2528E9528()
{
  unint64_t result = qword_269C326D0;
  if (!qword_269C326D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C326D0);
  }
  return result;
}

uint64_t sub_2528E957C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t ComputeNode.callAsFunction(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_2528A91AC;
  return v11(a1, a2, a3, a4);
}

uint64_t ComputeNode.applied<A>(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = *(void *)(a4 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = *(void *)(a3 - 8);
  v7[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528E987C, 0, 0);
}

uint64_t sub_2528E987C()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v0[11] + 16))(v1, v0[8], v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  sub_2528DA62C(v1, v2, v4, v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t ComputeNode.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_2528E9BB0;
  return ComputeNode.applied<A>(to:)(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ComputeNode.applied(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_2528A91AC;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2528E9B5C()
{
  return swift_getWitnessTable();
}

void *VideoAdaptor.init()@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_252910520((uint64_t)v14);
  if (!v1)
  {
    id v4 = sub_25294B500();
    char v6 = v5;
    uint64_t v8 = v7;
    unint64_t result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
    long long v9 = v14[9];
    *(_OWORD *)(a1 + 160) = v14[8];
    *(_OWORD *)(a1 + 176) = v9;
    *(void *)(a1 + 192) = v15;
    long long v10 = v14[5];
    *(_OWORD *)(a1 + 96) = v14[4];
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = v14[7];
    *(_OWORD *)(a1 + 128) = v14[6];
    *(_OWORD *)(a1 + 144) = v11;
    long long v12 = v14[1];
    *(_OWORD *)(a1 + 32) = v14[0];
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = v14[3];
    *(_OWORD *)(a1 + 64) = v14[2];
    *(_OWORD *)(a1 + 80) = v13;
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v6 & 1;
    *(void *)(a1 + 24) = v8;
  }
  return result;
}

uint64_t VideoAdaptor.applied(to:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 376) = a1;
  *(void *)(v3 + 384) = a2;
  *(void *)(v3 + 392) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32700);
  *(void *)(v3 + 400) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ImageDescriptor();
  *(void *)(v3 + 408) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 416) = v5;
  *(void *)(v3 + 424) = *(void *)(v5 + 64);
  *(void *)(v3 + 432) = swift_task_alloc();
  *(void *)(v3 + 440) = swift_task_alloc();
  type metadata accessor for SceneDescriptor();
  *(void *)(v3 + 448) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 248) = *(_OWORD *)(v2 + 144);
  long long v8 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v3 + 264) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v3 + 280) = v8;
  long long v9 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 184) = *(_OWORD *)(v2 + 80);
  long long v10 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 200) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 216) = v10;
  *(_OWORD *)(v3 + 232) = v7;
  long long v11 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 152) = v11;
  uint64_t v12 = *(void *)(v2 + 8);
  *(void *)(v3 + 456) = v6;
  *(void *)(v3 + 464) = v12;
  *(unsigned char *)(v3 + 129) = *(unsigned char *)(v2 + 16);
  *(void *)(v3 + 472) = *(void *)(v2 + 24);
  *(void *)(v3 + 296) = *(void *)(v2 + 192);
  *(_OWORD *)(v3 + 168) = v9;
  return MEMORY[0x270FA2498](sub_2528E9E5C, 0, 0);
}

uint64_t sub_2528E9E5C()
{
  uint64_t v1 = *(void *)(v0 + 456);
  sub_2528E1B34(*(void *)(v0 + 384) + *(int *)(*(void *)(v0 + 408) + 44), v1, &qword_269C31D20);
  uint64_t v2 = sub_252951A08();
  *(void *)(v0 + 480) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 488) = v3;
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  *(_DWORD *)(v0 + 132) = v4;
  if (v4 == 1)
  {
    sub_2528B8494(*(void *)(v0 + 456), &qword_269C31D20);
    BOOL v5 = *(_DWORD *)(v0 + 132) == 1;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(unsigned char *)(v0 + 128) = v5;
    return MEMORY[0x270FA2498](sub_2528EA1A4, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v6;
    void *v6 = v0;
    v6[1] = sub_2528E9FE8;
    return MLTensor.matrix3x3()(v0 + 304);
  }
}

uint64_t sub_2528E9FE8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 488);
  uint64_t v3 = *(void *)(*v0 + 480);
  uint64_t v4 = *(void *)(*v0 + 456);
  swift_task_dealloc();
  long long v9 = *(_OWORD *)(v1 + 320);
  long long v10 = *(_OWORD *)(v1 + 304);
  uint64_t v5 = *(void *)(v1 + 344);
  uint64_t v6 = *(void *)(v1 + 336);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  BOOL v7 = *(_DWORD *)(v1 + 132) == 1;
  *(_OWORD *)(v1 + 80) = v10;
  *(_OWORD *)(v1 + 96) = v9;
  *(void *)(v1 + 112) = v6;
  *(void *)(v1 + 120) = v5;
  *(unsigned char *)(v1 + 128) = v7;
  return MEMORY[0x270FA2498](sub_2528EA1A4, 0, 0);
}

uint64_t sub_2528EA1A4()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = (uint64_t)(v0 + 10);
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  uint64_t v7 = v0[54];
  uint64_t v9 = v1[52];
  uint64_t v8 = v1[53];
  uint64_t v10 = v1[48];
  v1[2] = v2;
  v1[7] = v5;
  v1[3] = sub_2528EA530;
  uint64_t v31 = v3;
  uint64_t v11 = swift_continuation_init();
  sub_2528EBB7C(v10, v6, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  sub_2528EBB7C(v6, v7, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v8 + v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = swift_allocObject();
  sub_2528EBABC(v6, v14 + v12, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  sub_2528EB258(v4, v14 + v13);
  *(void *)(v14 + v13 + 56) = v11;
  uint64_t v15 = *(__CVBuffer **)v10;
  uint64_t v16 = *(void *)(v10 + 8);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 16);
  int v18 = *(unsigned __int8 *)(v10 + 17);
  uint64_t v19 = *(void *)(v10 + 24);
  id v20 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v20, sel_systemUptime);
  uint64_t v22 = v21;

  if (v19 && *(void *)(v19 + 16))
  {
    switch(v17)
    {
      case 1:
        uint64_t v23 = sub_25294B0A4(v19, v18);
        break;
      case 2:
        uint64_t v23 = sub_25294AEB8(v19, v18);
        break;
      case 3:
        uint64_t v23 = sub_25294AB84(v19, v18);
        break;
      default:
        uint64_t v23 = sub_25294ACD0(v19, v18);
        break;
    }
  }
  else
  {
    uint64_t v24 = *((unsigned __int8 *)v1 + 129);
    float v25 = (void *)v1[58];
    uint64_t v26 = (void *)v1[59];
    unsigned __int8 v32 = v17;
    uint64_t v23 = sub_25294A5B8(v15, &v32, v18, v25, v24, v26);
  }
  uint64_t v27 = v23;
  uint64_t v28 = (void *)swift_allocObject();
  void v28[2] = v16;
  v28[3] = v27;
  v28[4] = sub_2528EB2C0;
  v28[5] = v14;
  v28[6] = v22;
  v33[0] = v17;
  uint64_t v29 = v1[17] + 16;
  swift_beginAccess();
  swift_retain();
  sub_25290F140(v15, v16, v33, v18, v29, (uint64_t)sub_2528EB3A0, (uint64_t)v28);
  swift_endAccess();
  swift_release();
  swift_release();
  sub_2528EBBE4(v1[54], (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  return MEMORY[0x270FA23F0](v31);
}

uint64_t sub_2528EA530()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  else {
    sub_2528EBABC(*(void *)(*v0 + 448), *(void *)(*v0 + 376), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_2528EA6FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(), uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v6 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for SceneDescriptor();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v38 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for ImageDescriptor();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32700);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2528E1B34(a1, (uint64_t)v19, (uint64_t *)&unk_269C32700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2528EBABC((uint64_t)v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VideoAdaptorError);
    sub_2528EBB24();
    uint64_t v20 = swift_allocError();
    sub_2528EBB7C((uint64_t)v8, v21, (uint64_t (*)(void))type metadata accessor for VideoAdaptorError);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    swift_allocError();
    uint64_t *v22 = v20;
    swift_continuation_throwingResumeWithError();
    uint64_t v23 = (uint64_t)v8;
    uint64_t v24 = type metadata accessor for VideoAdaptorError;
  }
  else
  {
    uint64_t v25 = v40;
    uint64_t v26 = *v19;
    uint64_t v27 = v19[2];
    uint64_t v42 = (void *)v19[1];
    char v41 = *(unsigned char *)(a2 + 16);
    __int32 v28 = *(unsigned __int8 *)(a2 + 17);
    uint64_t v29 = v42;
    ImageDescriptor.init(imageBuffer:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)(&v42, v26, &v41, (uint64_t)v39, v28, 0, (uint64_t)v16);
    uint64_t v39 = type metadata accessor for ImageDescriptor;
    sub_2528EBB7C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    uint64_t v30 = &v13[v9[5]];
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    *((_DWORD *)v30 + 4) = 0;
    v13[v9[7]] = 0;
    *(void *)&v13[v9[8]] = MEMORY[0x263F8EE78];
    uint64_t v31 = &v13[v9[9]];
    uint64_t v32 = sub_252951A08();
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    v33(v31, 1, 1, v32);
    v33(&v13[v9[10]], 1, 1, v32);
    v33(&v13[v9[11]], 1, 1, v32);
    v33(&v13[v9[12]], 1, 1, v32);
    v33(&v13[v9[13]], 1, 1, v32);
    v33(&v13[v9[14]], 1, 1, v32);
    uint64_t v34 = MEMORY[0x263F8EE78];
    *(void *)&v13[v9[15]] = MEMORY[0x263F8EE78];
    *(void *)&v13[v9[16]] = v34;
    *(void *)&v13[v9[6]] = v27;
    uint64_t v35 = v38;
    sub_2528EBB7C((uint64_t)v13, v38, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    uint64_t v36 = *(void *)(*(void *)(v25 + 64) + 40);
    swift_bridgeObjectRetain();
    sub_2528EBABC(v35, v36, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    swift_continuation_throwingResume();
    swift_bridgeObjectRelease();

    sub_2528EBBE4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    uint64_t v23 = (uint64_t)v16;
    uint64_t v24 = v39;
  }
  return sub_2528EBBE4(v23, (uint64_t (*)(void))v24);
}

uint64_t sub_2528EABDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return VideoAdaptor.applied(to:)(a1, a2);
}

uint64_t sub_2528EAC84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), double a5)
{
  uint64_t v30 = a2;
  v31[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  uint64_t v9 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32700);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (void (**)(void *))((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32E40);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528E1B34(a1, (uint64_t)v17, &qword_269C32E40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2528EBABC((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VideoAdaptorError);
    sub_2528EBB7C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VideoAdaptorError);
    swift_storeEnumTagMultiPayload();
    a4(v14);
    sub_2528B8494((uint64_t)v14, (uint64_t *)&unk_269C32700);
    sub_2528EBBE4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VideoAdaptorError);
    return sub_2528D01CC(5, a5);
  }
  uint64_t v29 = a4;
  uint64_t v18 = (void *)*((void *)v17 + 1);
  if (v18)
  {
    if ((v17[24] & 1) == 0 && (v17[40] & 1) == 0 && (v17[56] & 1) == 0)
    {
      size_t v19 = *((void *)v17 + 2);
      size_t v20 = *((void *)v17 + 4);
      size_t v21 = *((void *)v17 + 6);
      v31[0] = 0;
      CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
      id v23 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_contents);
      id v24 = v18;
      CVPixelBufferCreateWithBytes(v22, v19, v20, 0x42475241u, v23, v21, 0, 0, 0, v31);
      CVPixelBufferRef v25 = v31[0];
      if (v31[0])
      {
        *uint64_t v14 = v30;
        v14[1] = v25;
        v14[2] = a3;
        swift_storeEnumTagMultiPayload();
        uint64_t v26 = v25;
        swift_bridgeObjectRetain_n();
        uint64_t v27 = v26;
        v29(v14);
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease_n();
        sub_2528B8494((uint64_t)v14, (uint64_t *)&unk_269C32700);

        return sub_2528D01CC(5, a5);
      }
    }
  }
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t sub_2528EB064()
{
  uint64_t v1 = (int *)type metadata accessor for ImageDescriptor();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = v4 + v1[10];
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v10 = v4 + v1[11];
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }

  return MEMORY[0x270FA0238](v0, ((v12 + v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 64, v2 | 0xF);
}

uint64_t sub_2528EB258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C325E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528EB2C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ImageDescriptor() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + ((*(void *)(v3 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 56);

  return sub_2528EA6FC(a1, v1 + v4, (uint64_t (*)())v5, v6);
}

uint64_t sub_2528EB360()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2528EB3A0(uint64_t a1)
{
  return sub_2528EAC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(double *)(v1 + 48));
}

void destroy for VideoAdaptor(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 192);
}

uint64_t initializeWithCopy for VideoAdaptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v22 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v22;
  uint64_t v23 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v23;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  id v24 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v24;
  CVPixelBufferRef v25 = *(void **)(a2 + 152);
  uint64_t v26 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v25;
  *(void *)(a1 + 160) = v26;
  uint64_t v11 = *(void **)(a2 + 176);
  uint64_t v27 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v27;
  *(void *)(a1 + 176) = v11;
  __int32 v28 = v11;
  uint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v29;
  id v12 = v3;
  id v13 = v4;
  id v14 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v15 = v24;
  id v16 = v25;
  id v17 = v26;
  id v18 = v27;
  id v19 = v28;
  swift_unknownObjectRetain();
  id v20 = v29;
  return a1;
}

uint64_t assignWithCopy for VideoAdaptor(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v13 = *(void **)(a2 + 144);
  id v14 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 152);
  id v17 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 160);
  id v20 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 168);
  uint64_t v23 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v22;
  id v24 = v22;

  CVPixelBufferRef v25 = *(void **)(a2 + 176);
  uint64_t v26 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v25;
  id v27 = v25;

  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __int32 v28 = *(void **)(a1 + 192);
  uint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v29;
  id v30 = v29;

  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for VideoAdaptor(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_unknownObjectRelease();

  long long v5 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  long long v6 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_unknownObjectRelease();
  long long v7 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdaptor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdaptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdaptor()
{
  return &type metadata for VideoAdaptor;
}

uint64_t sub_2528EBABC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2528EBB24()
{
  unint64_t result = qword_269C32710;
  if (!qword_269C32710)
  {
    type metadata accessor for VideoAdaptorError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32710);
  }
  return result;
}

uint64_t sub_2528EBB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2528EBBE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t SkeletonError.errorDescription.getter()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000013;
  }
}

unint64_t SkeletonError.debugDescription.getter()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t SkeletonError.hash(into:)()
{
  return sub_2529521A8();
}

BOOL static SkeletonError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SkeletonError.hashValue.getter()
{
  return sub_2529521C8();
}

unint64_t sub_2528EBD54()
{
  unint64_t result = qword_269C32718;
  if (!qword_269C32718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32718);
  }
  return result;
}

unint64_t sub_2528EBDAC()
{
  unint64_t result = qword_269C32720[0];
  if (!qword_269C32720[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269C32720);
  }
  return result;
}

unint64_t sub_2528EBE00()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000013;
  }
}

unsigned char *storeEnumTagSinglePayload for SkeletonError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528EBF0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkeletonError()
{
  return &type metadata for SkeletonError;
}

void sub_2528EBF44(size_t bytesPerRow@<X2>, CGColorSpaceRef space@<X3>, uint32_t bitmapInfo@<W4>, void *a4@<X0>, CGImageRef *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  if (a6 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a6 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((*(void *)&a6 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&a7 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_13;
  }
  if (a7 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a7 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v8 = CGBitmapContextCreate(a4, (uint64_t)a6, (uint64_t)a7, 8uLL, bytesPerRow, space, bitmapInfo);
  if (v8)
  {
    long long v9 = v8;
    CGImageRef Image = CGBitmapContextCreateImage(v8);
  }
  else
  {
    CGImageRef Image = 0;
  }
  *a5 = Image;
}

CGColorSpaceRef sub_2528EC030(CGColorSpaceRef result, unint64_t a2, double a3, double a4)
{
  if (a2 - 5 < 0xFFFFFFFFFFFFFFFCLL)
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((~*(void *)&a3 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a3 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 4;
  if (a2 != 3) {
    uint64_t v6 = a2;
  }
  int64_t v7 = (uint64_t)a3 * v6;
  if ((unsigned __int128)((uint64_t)a3 * (__int128)v6) >> 64 != v7 >> 63) {
    goto LABEL_16;
  }
  CGColorSpaceRef v9 = result;
  if (a2 == 1)
  {
    DeviceGray = CGColorSpaceCreateDeviceGray();
LABEL_11:
    sub_2528EBF44(v7, DeviceGray, a2 > 2, (char *)v9 + 32, &v11, a3, a4);

    return v11;
  }
  unint64_t result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002E0]);
  DeviceGray = result;
  if (result) {
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2528EC14C(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_252951BD8();
  *(void *)(result + 16) = a1;
  unsigned int v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2528EC240(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_252951BD8();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (_WORD *)(result + 32);
  if (a2 < 0x10)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 += a2 & 0xFFFFFFFFFFFFFFF0;
  int16x8_t v7 = vdupq_n_s16(a1);
  uint64_t v8 = (int16x8_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 16;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2528EC32C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v4 = sub_252951A08();
      uint64_t v5 = sub_252951BD8();
      *(void *)(v5 + 16) = a2;
      uint64_t v6 = *(void *)(v4 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, a1, v4);
      uint64_t v9 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v10 = *(void *)(v6 + 72);
        unint64_t v11 = v5 + v10 + v7;
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    uint64_t v12 = sub_252951A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return v5;
  }
  return result;
}

uint64_t sub_2528EC4D4(uint64_t a1, __n128 a2, float a3, __n128 a4)
{
  if (a1 < 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a1;
    if (a1)
    {
      a2.n128_f32[2] = a3;
      __n128 v8 = a2;
      type metadata accessor for CoreIKTransform(0);
      uint64_t result = sub_252951BD8();
      *(void *)(result + 16) = v4;
      uint64_t v6 = 32;
      do
      {
        unint64_t v7 = (__n128 *)(result + v6);
        __n128 *v7 = v8;
        v7[1] = a4;
        v6 += 32;
        --v4;
      }
      while (v4);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_2528EC59C(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  if (a1 < 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
  }
  else
  {
    uint64_t v5 = a1;
    if (a1)
    {
      type metadata accessor for simd_float4x4(0);
      uint64_t result = sub_252951BD8();
      *(void *)(result + 16) = v5;
      uint64_t v7 = 32;
      do
      {
        __n128 v8 = (__n128 *)(result + v7);
        *__n128 v8 = a2;
        v8[1] = a3;
        v8[2] = a4;
        int64_t v8[3] = a5;
        v7 += 64;
        --v5;
      }
      while (v5);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_2528EC664(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_252951F18();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_252951BD8();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  __n128 v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *__n128 v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2528EC750(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_2528C4584(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_252951A08() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528EC8F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = sub_252951A08();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v6, v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if (result != 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
    if (*(void *)(v7 + 16)) {
      return sub_25293A358(0, 1);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2528ECA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  *(void *)&long long v20 = 0;
  *(void *)&long long v16 = a1;
  *((void *)&v16 + 1) = a2;
  sub_2528EE228((uint64_t)a3, (uint64_t)v17);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *))(v9 + 16))((char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v19 = swift_getAssociatedTypeWitness();
  *((void *)&v19 + 1) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)v18 + 1);
  sub_252951C88();
  _s19AsyncWindowSequenceV22WindowSequenceIteratorV19SlidingWindowBufferCMa();
  uint64_t v10 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v11 = MEMORY[0x263F8EE78];
  v10[15] = a2;
  v10[16] = 0;
  _OWORD v10[14] = v11;
  *((void *)&v20 + 1) = v10;
  long long v12 = v19;
  a4[4] = v18[1];
  a4[5] = v12;
  long long v13 = v17[0];
  *a4 = v16;
  a4[1] = v13;
  long long v14 = v18[0];
  a4[2] = v17[1];
  a4[3] = v14;
  a4[6] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
}

uint64_t sub_2528ECC2C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  sub_2528EE228((uint64_t)(v1 + 2), (uint64_t)v6);
  sub_2528ECA7C(v3, v4, v6, a1);
  return sub_2528EE28C((uint64_t)v1);
}

uint64_t sub_2528ECC88()
{
  v1[17] = v0;
  uint64_t v2 = sub_252951A08();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528ECD48, 0, 0);
}

uint64_t sub_2528ECD48()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  __swift_mutable_project_boxed_opaque_existential_1(v1 + 56, v2);
  v0[21] = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_252951DC8();
  v0[22] = v4;
  v0[23] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v0[24] = v5;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[25] = v6;
  void *v6 = v0;
  v6[1] = sub_2528ECE90;
  return MEMORY[0x270FA1E80](v5, v2, v3);
}

uint64_t sub_2528ECE90()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528ED338;
  }
  else {
    uint64_t v2 = sub_2528ECFA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528ECFA4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 184) + 8))(v1, *(void *)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4(0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 136);
    *(void *)(v0 + 72) = v2;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1Tm, v1, v2);
    swift_task_dealloc();
    sub_2528E1A7C((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    uint64_t v8 = *(void *)(v6 + 104);
    *(void *)(v0 + 216) = v8;
    sub_2528D9690(v0 + 16, v0 + 80);
    swift_dynamicCast();
    return MEMORY[0x270FA2498](sub_2528ED184, v8, 0);
  }
}

uint64_t sub_2528ED184()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  sub_2528ED824(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_2528ED218, 0, 0);
}

uint64_t sub_2528ED218()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + 104);
  *(void *)(v0 + 224) = v1;
  return MEMORY[0x270FA2498](sub_2528ED23C, v1, 0);
}

uint64_t sub_2528ED23C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_beginAccess();
  *(void *)(v0 + 232) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_2528ED2C4, 0, 0);
}

uint64_t sub_2528ED2C4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2528ED338()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528ED3A8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_2528ED438;
  return sub_2528ECC88();
}

uint64_t sub_2528ED438(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_2528ED548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_2528ED5DC;
  return sub_2528ECC88();
}

uint64_t sub_2528ED5DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 32);
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_252951BF8();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v10 = sub_2528ED78C;
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_252951BF8();
      uint64_t v8 = v9;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    *(void *)(v4 + 72) = a1;
    uint64_t v10 = sub_2528ED768;
  }
  return MEMORY[0x270FA2498](v10, v6, v8);
}

uint64_t sub_2528ED768()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2528ED78C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  swift_willThrowTypedImpl();
  void *v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2528ED824(uint64_t a1)
{
  uint64_t v3 = sub_252951A08();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v20[-v8];
  uint64_t v10 = (unint64_t *)(v1 + 112);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v12 = *(void *)(*(void *)(v1 + 112) + 16);
  uint64_t v13 = v11 - v12;
  if (v11 <= v12)
  {
    swift_beginAccess();
    sub_2528EC8F4((uint64_t)v9);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    unint64_t v15 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v10 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = sub_2528C4584(0, *(void *)(v15 + 16) + 1, 1, v15);
      unint64_t *v10 = v15;
    }
    unint64_t v18 = *(void *)(v15 + 16);
    unint64_t v17 = *(void *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = sub_2528C4584(v17 > 1, v18 + 1, 1, v15);
      unint64_t *v10 = v15;
    }
    *(void *)(v15 + 16) = v18 + 1;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v15+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v18, v7, v3);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    uint64_t v14 = sub_2528EC32C((uint64_t)v9, v13);
    swift_beginAccess();
    sub_2528EC750(v14);
  }
  return swift_endAccess();
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorV19SlidingWindowBufferCMa()
{
  return self;
}

uint64_t _s19AsyncWindowSequenceVwxx(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

_OWORD *_s19AsyncWindowSequenceVwcp(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  long long v3 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

void *_s19AsyncWindowSequenceVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          void *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s19AsyncWindowSequenceVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t _s19AsyncWindowSequenceVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19AsyncWindowSequenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19AsyncWindowSequenceVMa()
{
  return &_s19AsyncWindowSequenceVN;
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);

  return swift_release();
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_retain();
  return a1;
}

void *_s19AsyncWindowSequenceV22WindowSequenceIteratorVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19AsyncWindowSequenceV22WindowSequenceIteratorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19AsyncWindowSequenceV22WindowSequenceIteratorVMa()
{
  return &_s19AsyncWindowSequenceV22WindowSequenceIteratorVN;
}

unint64_t sub_2528EE158()
{
  unint64_t result = qword_269C32738;
  if (!qword_269C32738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32738);
  }
  return result;
}

unint64_t sub_2528EE1AC(uint64_t a1)
{
  unint64_t result = sub_2528EE1D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2528EE1D4()
{
  unint64_t result = qword_269C32740;
  if (!qword_269C32740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C32740);
  }
  return result;
}

uint64_t sub_2528EE228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2528EE28C(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t SceneDescriptor.RepetitiveAction.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SceneDescriptor.RepetitiveAction.count.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SceneDescriptor.RepetitiveAction.totalCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t SceneDescriptor.RepetitiveAction.init(label:count:totalCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_2528EE368(char a1)
{
  return *(void *)&aLabel_3[8 * a1];
}

uint64_t sub_2528EE388()
{
  return sub_2528EE368(*v0);
}

uint64_t sub_2528EE390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528EF160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2528EE3B8(uint64_t a1)
{
  unint64_t v2 = sub_2528EEB44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528EE3F4(uint64_t a1)
{
  unint64_t v2 = sub_2528EEB44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SceneDescriptor.repetitiveAction.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_252951A08();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[8] = v4;
  v2[2] = 0xD00000000000001BLL;
  v2[3] = 0x800000025295A1B0;
  long long v5 = (void *)swift_task_alloc();
  v2[9] = (uint64_t)v5;
  *long long v5 = v2;
  v5[1] = sub_2528EE55C;
  return SceneDescriptor.tensor(for:)(v4, v2 + 2);
}

uint64_t sub_2528EE55C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528EE928, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 88) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2528EE6E0;
    uint64_t v4 = MEMORY[0x263F8E548];
    uint64_t v5 = MEMORY[0x263F00CC0];
    uint64_t v6 = MEMORY[0x263F8E548];
    return MEMORY[0x270EE7870](v6, v4, v5);
  }
}

uint64_t sub_2528EE6E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_2528EE840, 0, 0);
}

uint64_t sub_2528EE840()
{
  uint64_t result = v0[12];
  unint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v2 == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v2 < 3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = *(int *)(result + 32);
  uint64_t v3 = *(int *)(result + 36);
  uint64_t v5 = v0[5];
  uint64_t v6 = *(int *)(result + 40);
  swift_bridgeObjectRelease();
  uint64_t result = type metadata accessor for SceneDescriptor();
  if ((v4 & 0x80000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + *(int *)(result + 60));
  if (*(void *)(v7 + 16) <= v4)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v8 = (void *)v0[4];
  uint64_t v9 = v7 + 16 * v4;
  uint64_t v10 = *(void *)(v9 + 40);
  *uint64_t v8 = *(void *)(v9 + 32);
  v8[1] = v10;
  v8[2] = v3;
  int64_t v8[3] = v6;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2528EE928()
{
  uint64_t v1 = *(_OWORD **)(v0 + 32);

  _OWORD *v1 = 0u;
  v1[1] = 0u;
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t SceneDescriptor.RepetitiveAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32758);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528EEB44();
  sub_252952208();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_252952058();
  if (!v8)
  {
    char v12 = 1;
    sub_252952088();
    char v11 = 2;
    sub_252952088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2528EEB44()
{
  unint64_t result = qword_269C32760;
  if (!qword_269C32760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32760);
  }
  return result;
}

uint64_t SceneDescriptor.RepetitiveAction.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32768);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528EEB44();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v9 = sub_252951FD8();
  uint64_t v11 = v10;
  char v17 = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_252952008();
  char v16 = 2;
  uint64_t v13 = sub_252952008();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2528EEDA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SceneDescriptor.RepetitiveAction.init(from:)(a1, a2);
}

uint64_t sub_2528EEDC0(void *a1)
{
  return SceneDescriptor.RepetitiveAction.encode(to:)(a1);
}

uint64_t _s16RepetitiveActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16RepetitiveActionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s16RepetitiveActionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t _s16RepetitiveActionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16RepetitiveActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneDescriptor.RepetitiveAction()
{
  return &type metadata for SceneDescriptor.RepetitiveAction;
}

unsigned char *_s16RepetitiveActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528EF020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16RepetitiveActionV10CodingKeysOMa()
{
  return &_s16RepetitiveActionV10CodingKeysON;
}

unint64_t sub_2528EF05C()
{
  unint64_t result = qword_269C32770;
  if (!qword_269C32770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32770);
  }
  return result;
}

unint64_t sub_2528EF0B4()
{
  unint64_t result = qword_269C32778;
  if (!qword_269C32778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32778);
  }
  return result;
}

unint64_t sub_2528EF10C()
{
  unint64_t result = qword_269C32780;
  if (!qword_269C32780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32780);
  }
  return result;
}

uint64_t sub_2528EF160(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F436C61746F74 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for BodyPose2DEstimatorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528EF36CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyPose2DEstimatorType()
{
  return &type metadata for BodyPose2DEstimatorType;
}

unint64_t sub_2528EF3A8()
{
  unint64_t result = qword_269C32788;
  if (!qword_269C32788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32788);
  }
  return result;
}

uint64_t sub_2528EF3FC(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_252951898();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = v7(v5, v2);
  if (v6 != 3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t result = sub_2529518F8();
  if (*(void *)(result + 16) < 2uLL)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(result + 40);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 == 30)
  {
    v10[1] = &unk_2702CFB80;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32790);
    sub_2528EF630();
    sub_2529518D8();
    sub_2529519D8();
    return v7(v5, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2528EF5AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_2528EF5CC, 0, 0);
}

uint64_t sub_2528EF5CC()
{
  sub_2528EF3FC(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_2528EF630()
{
  unint64_t result = qword_269C32798;
  if (!qword_269C32798)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C32790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32798);
  }
  return result;
}

ValueMetadata *type metadata accessor for RetargetHighFidelityToLowFidelity()
{
  return &type metadata for RetargetHighFidelityToLowFidelity;
}

unint64_t sub_2528EF69C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C325B8);
  uint64_t v2 = sub_252951F68();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2528E1B34(v6, (uint64_t)&v15, &qword_269C327D8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_252922FE8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2528E1A7C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2528EF7D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C327C8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C327D0);
  uint64_t v6 = sub_252951F68();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2528E1B34(v12, (uint64_t)v5, &qword_269C327C8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_252922FE8(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v19 = (uint64_t *)(v7[6] + 16 * result);
    *long long v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_252951A08();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2528EF9D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C327F0);
  uint64_t v2 = (void *)sub_252951F68();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_252922FE8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2528EFAE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C327E0);
  uint64_t v2 = sub_252951F68();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2528E1B34(v6, (uint64_t)v15, &qword_269C327E8);
    unint64_t result = sub_2529230A4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_2528E1A7C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static BodyFusionTracker.prepare()()
{
  return sub_2528D0458(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t BodyFusionTracker.init()(uint64_t a1)
{
  *(void *)(v1 + 552) = a1;
  type metadata accessor for LoFiBodyPose3DEstimator();
  *(void *)(v1 + 560) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528EFCF4, 0, 0);
}

uint64_t sub_2528EFCF4()
{
  sub_252910520(v0 + 216);
  long long v1 = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 528) = v1;
  *(void *)(v0 + 544) = *(void *)(v0 + 376);
  long long v2 = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 464) = v2;
  long long v3 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 496) = v3;
  long long v4 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 400) = v4;
  long long v5 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 432) = v5;
  *(void *)(v0 + 568) = sub_25294B500();
  *(void *)(v0 + 576) = v6;
  *(unsigned char *)(v0 + 632) = v7 & 1;
  *(void *)(v0 + 584) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  *(void *)(v0 + 592) = type metadata accessor for BodyFusion();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 600) = v8;
  swift_defaultActor_initialize();
  uint64_t v9 = OBJC_IVAR____TtC5Human10BodyFusion_solverDict;
  unint64_t v10 = sub_2528F0784(MEMORY[0x263F8EE78]);
  *(void *)(v8 + v9) = v10;
  *(void *)(v0 + 608) = v10;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC5Human10BodyFusion_type) = 0;
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v11;
  void *v11 = v0;
  v11[1] = sub_2528EFEA8;
  uint64_t v12 = *(void *)(v0 + 560);
  return sub_252906D10(v12);
}

uint64_t sub_2528EFEA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 624) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    swift_deallocPartialClassInstance();
    long long v3 = sub_2528F0120;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 600);
    sub_2528F0AB0(*(void *)(v2 + 560), v5 + OBJC_IVAR____TtC5Human10BodyFusion_pose3D);
    long long v3 = sub_2528F0030;
    uint64_t v4 = v5;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_2528F0030()
{
  return MEMORY[0x270FA2498](sub_2528F004C, 0, 0);
}

uint64_t sub_2528F004C()
{
  uint64_t v1 = *(void *)(v0 + 584);
  char v2 = *(unsigned char *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 576);
  uint64_t v4 = *(void *)(v0 + 568);
  uint64_t v5 = *(void *)(v0 + 552);
  *(void *)uint64_t v5 = *(void *)(v0 + 600);
  *(void *)(v5 + 8) = v1;
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v3;
  long long v6 = *(_OWORD *)(v0 + 384);
  long long v7 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 40) = v6;
  long long v8 = *(_OWORD *)(v0 + 432);
  long long v9 = *(_OWORD *)(v0 + 448);
  long long v10 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v5 + 120) = v10;
  *(_OWORD *)(v5 + 104) = v9;
  *(_OWORD *)(v5 + 88) = v8;
  long long v11 = *(_OWORD *)(v0 + 496);
  long long v12 = *(_OWORD *)(v0 + 512);
  long long v13 = *(_OWORD *)(v0 + 528);
  *(void *)(v5 + 200) = *(void *)(v0 + 544);
  *(_OWORD *)(v5 + 184) = v13;
  *(_OWORD *)(v5 + 168) = v12;
  *(_OWORD *)(v5 + 152) = v11;
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_2528F0120()
{
  char v1 = *(unsigned char *)(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 568);
  *(void *)(v0 + 16) = *(void *)(v0 + 584);
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  long long v4 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 192) = v4;
  *(void *)(v0 + 208) = *(void *)(v0 + 544);
  long long v5 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 128) = v5;
  long long v6 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 160) = v6;
  long long v7 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 64) = v7;
  long long v8 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 96) = v8;
  sub_2528F095C(v0 + 16);
  swift_task_dealloc();
  long long v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t BodyFusionTracker.applied(to:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 216) = a1;
  type metadata accessor for SceneDescriptor();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v2;
  *(void *)(v3 + 224) = v5;
  *(void *)(v3 + 232) = v6;
  long long v7 = *(_OWORD *)(v2 + 19);
  long long v8 = *(_OWORD *)(v2 + 23);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(v2 + 21);
  *(_OWORD *)(v3 + 192) = v8;
  *(void *)(v3 + 208) = v2[25];
  long long v9 = *(_OWORD *)(v2 + 11);
  long long v10 = *(_OWORD *)(v2 + 15);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 13);
  *(_OWORD *)(v3 + 128) = v10;
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(v2 + 17);
  *(_OWORD *)(v3 + 160) = v7;
  long long v11 = *(_OWORD *)(v2 + 3);
  long long v12 = *(_OWORD *)(v2 + 7);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 5);
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 9);
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 + 1);
  *(_OWORD *)(v3 + 32) = v11;
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 240) = v13;
  *long long v13 = v3;
  v13[1] = sub_2528F0314;
  return VideoAdaptor.applied(to:)(v5, a2);
}

uint64_t sub_2528F0314()
{
  uint64_t v2 = (void *)*v1;
  v2[31] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528F060C, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[32] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2528F0488;
    uint64_t v4 = v2[28];
    uint64_t v5 = v2[27];
    return sub_25290AC80(v5, v4);
  }
}

uint64_t sub_2528F0488()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528F0670;
  }
  else {
    uint64_t v2 = sub_2528F059C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528F059C()
{
  sub_2528F0B14(*(void *)(v0 + 224));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F060C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F0670()
{
  sub_2528F0B14(*(void *)(v0 + 224));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F06DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return BodyFusionTracker.applied(to:)(a1, a2);
}

unint64_t sub_2528F0784(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32800);
    uint64_t v3 = (void *)sub_252951F68();
    for (int64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_252923060(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_2528F085C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C327F8);
  uint64_t v3 = (void *)sub_252951F68();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_252923060(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_252923060(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2528F095C(uint64_t a1)
{
  uint64_t v10 = *(void **)(a1 + 8);
  char v8 = *(void **)(a1 + 24);
  BOOL v11 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 144);
  uint64_t v3 = *(void **)(a1 + 152);
  uint64_t v4 = *(void **)(a1 + 160);
  uint64_t v5 = *(void **)(a1 + 168);
  uint64_t v6 = *(void **)(a1 + 176);
  uint64_t v9 = *(void **)(a1 + 192);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_2528F0AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LoFiBodyPose3DEstimator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528F0B14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SceneDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for BodyFusionTracker(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 200);
}

uint64_t initializeWithCopy for BodyFusionTracker(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v24 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v24;
  CVPixelBufferRef v25 = *(void **)(a2 + 160);
  uint64_t v26 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = v25;
  *(void *)(a1 + 168) = v26;
  long long v13 = *(void **)(a2 + 184);
  id v27 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v27;
  *(void *)(a1 + 184) = v13;
  __int32 v28 = v13;
  uint64_t v29 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v29;
  swift_retain();
  id v14 = v3;
  id v15 = v4;
  id v16 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v17 = v24;
  id v18 = v25;
  id v19 = v26;
  id v20 = v27;
  id v21 = v28;
  swift_unknownObjectRetain();
  id v22 = v29;
  return a1;
}

uint64_t assignWithCopy for BodyFusionTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v10 = *(void **)(a2 + 32);
  uint64_t v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v10;
  id v12 = v10;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  long long v13 = *(void **)(a2 + 152);
  id v14 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 160);
  id v17 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 168);
  id v20 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v19;
  id v21 = v19;

  id v22 = *(void **)(a2 + 176);
  BOOL v23 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v22;
  id v24 = v22;

  CVPixelBufferRef v25 = *(void **)(a2 + 184);
  uint64_t v26 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v25;
  id v27 = v25;

  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __int32 v28 = *(void **)(a1 + 200);
  uint64_t v29 = *(void **)(a2 + 200);
  *(void *)(a1 + 200) = v29;
  id v30 = v29;

  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for BodyFusionTracker(uint64_t a1, uint64_t a2)
{
  swift_release();
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_unknownObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_unknownObjectRelease();

  long long v6 = *(void **)(a1 + 160);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);

  long long v7 = *(void **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);

  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_unknownObjectRelease();
  uint64_t v8 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  return a1;
}

uint64_t getEnumTagSinglePayload for HiFiHandPose3DEstimator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HiFiHandPose3DEstimator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyFusionTracker()
{
  return &type metadata for BodyFusionTracker;
}

uint64_t sub_2528F135C(void *a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(a1, sel_computeCommandEncoder);
  if (v6)
  {
    long long v7 = v6;
    uint64_t v8 = (void *)sub_252951AB8();
    objc_msgSend(v7, sel_setLabel_, v8);

    long long v9 = *(void **)(v3 + OBJC_IVAR____TtC5Human17PassthroughKernel_computePipelineState);
    objc_msgSend(v7, sel_setComputePipelineState_, v9);
    objc_msgSend(v7, sel_setTexture_atIndex_, a2, 0);
    objc_msgSend(v7, sel_setTexture_atIndex_, a3, 1);
    uint64_t v10 = (uint64_t)objc_msgSend(v9, sel_threadExecutionWidth);
    uint64_t v11 = (uint64_t)objc_msgSend(v9, sel_maxTotalThreadsPerThreadgroup);
    if (v10)
    {
      if (v11 != 0x8000000000000000 || v10 != -1)
      {
        uint64_t v13 = v11 / v10;
        v16[0] = objc_msgSend(a3, sel_width);
        v16[1] = objc_msgSend(a3, sel_height);
        v16[2] = 1;
        v15[0] = v10;
        v15[1] = v13;
        _OWORD v15[2] = 1;
        objc_msgSend(v7, sel_dispatchThreads_threadsPerThreadgroup_, v16, v15);
        objc_msgSend(v7, sel_endEncoding);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PassthroughKernel()
{
  return self;
}

uint64_t sub_2528F164C(void *a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v5 = self;
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_252951AB8();
  id v12 = (void *)sub_252951AB8();
  id v13 = objc_msgSend(v7, sel_URLForResource_withExtension_, v11, v12);

  MEMORY[0x270FA5388](v14);
  if (v13)
  {
    sub_252951238();

    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  }
  uint64_t v16 = sub_2528F1B8C((uint64_t)v10, (uint64_t)v10);
  MEMORY[0x270FA5388](v16);
  id v17 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528F1BF4((uint64_t)v10, (uint64_t)v17);
  sub_252951268();
  uint64_t v18 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v15) == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v19 = (void *)sub_252951208();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v15);
  id v36 = 0;
  id v20 = objc_msgSend(a1, sel_newLibraryWithURL_error_, v19, &v36);

  id v21 = v36;
  if (!v20)
  {
    uint64_t v29 = v21;
    uint64_t v30 = sub_2529511A8();

    swift_willThrow();
    id v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_252951E48();
    sub_252951B08();
    uint64_t v35 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    sub_252951F08();
    goto LABEL_13;
  }
  id v22 = (void *)sub_252951AB8();
  id v23 = objc_msgSend(v20, sel_newFunctionWithName_, v22);

  if (!v23) {
LABEL_10:
  }
    __break(1u);
  id v36 = 0;
  id v24 = objc_msgSend(a1, sel_newComputePipelineStateWithFunction_error_, v23, &v36);
  if (v24)
  {
    id v25 = v24;
    id v26 = v36;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)&v6[OBJC_IVAR____TtC5Human17PassthroughKernel_computePipelineState] = v25;

    v34.receiver = v6;
    v34.super_class = ObjectType;
    id v27 = objc_msgSendSuper2(&v34, sel_initWithDevice_, a1);

    sub_2528F1C5C((uint64_t)v10);
    return (uint64_t)v27;
  }
  id v31 = v36;
  uint64_t v32 = sub_2529511A8();

  swift_willThrow();
  id v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_252951E48();
  sub_252951B08();
  uint64_t v35 = v32;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  sub_252951F08();
LABEL_13:
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t sub_2528F1B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528F1BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528F1C5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2528F1CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for SourceTensorProviders()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2528F1D00()
{
  return swift_getWitnessTable();
}

uint64_t sub_2528F1D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  id v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, v3);
}

uint64_t sub_2528F1DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_2528F1E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2528F1D1C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_2528F1E8C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2528F1EB0, 0, 0);
}

uint64_t sub_2528F1EB0()
{
  sub_252951C78();
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 24);
  v0[5] = v2;
  uint64_t v3 = *(int **)(v2 + 24);
  uint64_t v4 = *(void *)(v1 + 16);
  v0[6] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528F2000;
  uint64_t v6 = v0[2];
  return v8(v6, v4, v2);
}

uint64_t sub_2528F2000()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2528F2130, 0, 0);
  }
}

uint64_t sub_2528F2130()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v1, 0, 1, AssociatedTypeWitness);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2528F21E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_2528A91AC;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_2528F1EB0, 0, 0);
}

uint64_t sub_2528F229C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2528F22B8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2528F2324()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2528F23B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2528F246C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_2528F2498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2528F24E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2528F2538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2528F2588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2528F25D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2528F2734(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2528F294CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for SourceTensorProviders.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FusionError.errorDescription.getter()
{
  return 0;
}

uint64_t FusionError.debugDescription.getter()
{
  return 0;
}

uint64_t static FusionError.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_252952108();
  }
}

unint64_t sub_2528F2AF0()
{
  unint64_t result = qword_269C329A0;
  if (!qword_269C329A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C329A0);
  }
  return result;
}

uint64_t sub_2528F2B4C()
{
  return 0;
}

ValueMetadata *type metadata accessor for FusionError()
{
  return &type metadata for FusionError;
}

uint64_t sub_2528F2B64@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_tensorDescriptor);
  id v8 = objc_msgSend(v7, sel_lengths);
  sub_2528BA6BC(0, &qword_269C32A28);
  unint64_t v9 = sub_252951B98();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_252951F38();
    swift_bridgeObjectRelease();
    uint64_t v21 = a2;
    if (v13) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    unsigned int v12 = (void *)sub_252951DB8();
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v21 = a2;
  if (!v10) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v9 & 0xC000000000000001) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    __break(1u);
  }
  for (id i = *(id *)(v9 + 32); ; id i = (id)MEMORY[0x2533C0860](0, v9))
  {
    unsigned int v12 = i;
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v14 = sub_252951CD8();

    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    unint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v14;
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = sub_2528F5A00;
    void v16[3] = v9;
    aBlock[4] = sub_2528F5A1C;
    aBlock[5] = v16;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_2528F47F8;
    aBlock[3] = &block_descriptor_0;
    id v17 = _Block_copy(aBlock);
    id v7 = v7;
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned __int8 v18 = objc_msgSend(a1, sel_performDataAccessWithOptions_usingBlock_error_, 0, v17, aBlock);
    _Block_release(v17);
    a1 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_15:
    ;
  }
  if (v18)
  {

    sub_2528F5A5C((uint64_t)v6, v21);
  }
  else
  {
    sub_2529511A8();

    swift_willThrow();
    sub_2528B8494((uint64_t)v6, &qword_269C32A20);
  }
  return swift_release();
}

void sub_2528F2F08(uint64_t a1@<X8>)
{
  sub_252910520((uint64_t)v23);
  if (!v1)
  {
    id v3 = sub_25294B500();
    char v5 = v4;
    id v25 = v3;
    uint64_t v22 = v6;
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
    char v21 = v5 & 1;
    id v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFMActionClassifier.Observer()), sel_init);
    id v8 = objc_allocWithZone(MEMORY[0x263F20A18]);
    id v9 = v7;
    id v10 = objc_msgSend(v8, sel_initWithVersion_, 0x10000);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A10]), sel_initWithConfiguration_, v10);
    objc_msgSend(v11, sel_setDelegate_, v9);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A58]), sel_initWithVersion_, 0x10000);
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A50]), sel_initWithConfiguration_, v12);
    objc_msgSend(v13, sel_setDelegate_, v9);

    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = 0;
    id v14 = v25;
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 40) = v14;
    *(unsigned char *)(a1 + 48) = v21;
    *(void *)(a1 + 56) = v22;
    long long v15 = v23[9];
    *(_OWORD *)(a1 + 192) = v23[8];
    *(_OWORD *)(a1 + 208) = v15;
    *(void *)(a1 + 224) = v24;
    long long v16 = v23[5];
    *(_OWORD *)(a1 + 128) = v23[4];
    *(_OWORD *)(a1 + 144) = v16;
    long long v17 = v23[7];
    *(_OWORD *)(a1 + 160) = v23[6];
    *(_OWORD *)(a1 + 176) = v17;
    long long v18 = v23[1];
    *(_OWORD *)(a1 + 64) = v23[0];
    *(_OWORD *)(a1 + 80) = v18;
    long long v19 = v23[3];
    *(_OWORD *)(a1 + 96) = v23[2];
    *(_OWORD *)(a1 + 112) = v19;
  }
}

void sub_2528F30D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFMActionClassifier.Observer()), sel_init);
  sub_2528BA6BC(0, (unint64_t *)&qword_269C32A60);
  uint64_t v5 = sub_252951268();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  id v9 = v4;
  id v10 = sub_2528F41C8((uint64_t)v8);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  else
  {
    id v11 = v10;
    uint64_t v45 = a1;
    id v12 = objc_allocWithZone(MEMORY[0x263F20A18]);
    id v46 = v11;
    id v13 = objc_msgSend(v12, sel_initWithVersion_, 0x10000);
    id v14 = objc_allocWithZone(MEMORY[0x263F20A10]);
    id v43 = v13;
    id v15 = objc_msgSend(v14, sel_initWithConfiguration_, v13);
    long long v16 = v11;
    id v44 = v15;
    objc_msgSend(v15, sel_setDelegate_, v9);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A58]), sel_initWithVersion_, 0x10000);
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A50]), sel_initWithConfiguration_, v17);
    objc_msgSend(v18, sel_setDelegate_, v9);
    sub_252910520((uint64_t)v100);
    long long v19 = v17;
    uint64_t v42 = v16;
    long long v97 = v100[8];
    long long v98 = v100[9];
    uint64_t v99 = v101;
    long long v93 = v100[4];
    long long v94 = v100[5];
    long long v95 = v100[6];
    long long v96 = v100[7];
    long long v89 = v100[0];
    long long v90 = v100[1];
    long long v91 = v100[2];
    long long v92 = v100[3];
    id v20 = sub_25294B500();
    uint64_t v41 = v21;
    id v39 = v20;
    LOBYTE(v17) = v22;
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
    id v40 = v23;
    int v38 = v17 & 1;
    long long v55 = v97;
    long long v56 = v98;
    uint64_t v57 = v99;
    long long v51 = v93;
    long long v52 = v94;
    long long v53 = v95;
    long long v54 = v96;
    long long v47 = v89;
    long long v48 = v90;
    long long v49 = v91;
    long long v50 = v92;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v45, v5);

    uint64_t v24 = v44;
    *(void *)&long long v59 = v18;
    *((void *)&v59 + 1) = v44;
    *(void *)&long long v60 = v9;
    *((void *)&v60 + 1) = v42;
    id v25 = v39;
    *(void *)&long long v61 = v23;
    *((void *)&v61 + 1) = v39;
    char v26 = v38;
    LOBYTE(v62) = v38;
    *(_DWORD *)((char *)&v62 + 1) = *(_DWORD *)v58;
    DWORD1(v62) = *(_DWORD *)&v58[3];
    uint64_t v27 = v41;
    *((void *)&v62 + 1) = v41;
    long long v71 = v55;
    long long v72 = v56;
    uint64_t v73 = v57;
    long long v67 = v51;
    long long v68 = v52;
    long long v69 = v53;
    long long v70 = v54;
    long long v63 = v47;
    long long v64 = v48;
    long long v65 = v49;
    long long v66 = v50;
    sub_2528F5B88((uint64_t)&v59);

    long long v28 = v72;
    uint64_t v29 = v27;
    uint64_t v30 = v102;
    *(_OWORD *)(v102 + 192) = v71;
    *(_OWORD *)(v30 + 208) = v28;
    *(void *)(v30 + 224) = v73;
    long long v31 = v68;
    *(_OWORD *)(v30 + 128) = v67;
    *(_OWORD *)(v30 + 144) = v31;
    long long v32 = v70;
    *(_OWORD *)(v30 + 160) = v69;
    *(_OWORD *)(v30 + 176) = v32;
    long long v33 = v64;
    *(_OWORD *)(v30 + 64) = v63;
    *(_OWORD *)(v30 + 80) = v33;
    long long v34 = v66;
    *(_OWORD *)(v30 + 96) = v65;
    *(_OWORD *)(v30 + 112) = v34;
    long long v35 = v60;
    *(_OWORD *)uint64_t v30 = v59;
    *(_OWORD *)(v30 + 16) = v35;
    long long v36 = v62;
    *(_OWORD *)(v30 + 32) = v61;
    *(_OWORD *)(v30 + 48) = v36;
    v74[0] = v18;
    v74[1] = v24;
    v74[2] = v9;
    v74[3] = v42;
    v74[4] = v40;
    v74[5] = v25;
    char v75 = v26;
    *(_DWORD *)__int32 v76 = *(_DWORD *)v58;
    *(_DWORD *)&void v76[3] = *(_DWORD *)&v58[3];
    long long v86 = v55;
    long long v87 = v56;
    uint64_t v77 = v29;
    uint64_t v88 = v57;
    long long v82 = v51;
    long long v83 = v52;
    long long v84 = v53;
    long long v85 = v54;
    long long v78 = v47;
    long long v79 = v48;
    long long v80 = v49;
    long long v81 = v50;
    sub_2528F5D08((uint64_t)v74);
  }
}

uint64_t sub_2528F3590(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = a2;
  *(void *)(v3 + 248) = type metadata accessor for SceneDescriptor();
  *(void *)(v3 + 256) = swift_task_alloc();
  *(_OWORD *)(v3 + 264) = *(_OWORD *)v2;
  *(void *)(v3 + 280) = *(void *)(v2 + 24);
  long long v4 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(v3 + 192) = v4;
  *(void *)(v3 + 208) = *(void *)(v2 + 224);
  long long v5 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 128) = v5;
  long long v6 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v3 + 160) = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 64) = v7;
  long long v8 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 96) = v8;
  long long v9 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 32) = v9;
  return MEMORY[0x270FA2498](sub_2528F369C, 0, 0);
}

uint64_t sub_2528F369C()
{
  v0[36] = *(void *)v0[30];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[37] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_2528F3774;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[30];
  return VideoAdaptor.applied(to:)(v2, v3);
}

uint64_t sub_2528F3774()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528F4084;
  }
  else {
    uint64_t v2 = sub_2528F38B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528F38B4()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  if (v1)
  {
    *(void *)(v0 + 224) = 0;
    uint64_t v3 = *(void **)(v0 + 264);
    id v4 = v1;
    unsigned int v5 = objc_msgSend(v3, sel_digestFrame_error_, v2, v0 + 224);
    long long v6 = *(void **)(v0 + 224);
    if (v5)
    {
      long long v7 = (void *)qword_269C3D760;
      *(void *)(v0 + 312) = qword_269C3D760;
      if (v7)
      {
        type metadata accessor for ActionFeatureWrapper();
        uint64_t v8 = swift_allocObject();
        *(void *)(v0 + 320) = v8;
        *(void *)(v8 + 16) = v7;
        id v9 = objc_allocWithZone(MEMORY[0x263F00DC8]);
        id v10 = v7;
        id v11 = v6;
        id v12 = v10;
        id v13 = objc_msgSend(v9, sel_init);
        *(void *)(v0 + 328) = v13;
        id v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 336) = v14;
        *id v14 = v0;
        v14[1] = sub_2528F3B98;
        return MEMORY[0x270EE7930](v8, v13);
      }
      id v26 = v6;

      goto LABEL_13;
    }
    uint64_t v17 = *(void *)(v0 + 256);
    id v23 = v6;
    sub_2529511A8();

    swift_willThrow();
  }
  else
  {
    *(void *)(v0 + 216) = 0;
    unsigned int v15 = objc_msgSend(*(id *)(v0 + 272), sel_digestFrame_error_, v2, v0 + 216);
    long long v16 = *(void **)(v0 + 216);
    uint64_t v17 = *(void *)(v0 + 256);
    if (v15)
    {
      uint64_t v19 = qword_269C3D748;
      uint64_t v18 = qword_269C3D750;
      int v20 = dword_269C3D758;
      uint64_t v21 = v17 + *(int *)(*(void *)(v0 + 248) + 20);
      id v22 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = v19;
      *(void *)(v21 + 8) = v18;
      *(_DWORD *)(v21 + 16) = v20;
LABEL_13:
      sub_2528CA49C(*(void *)(v0 + 256), *(void *)(v0 + 232));
      swift_task_dealloc();
      id v25 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_14;
    }
    id v24 = v16;
    sub_2529511A8();

    swift_willThrow();
  }
  sub_2528F0B14(v17);
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return v25();
}

uint64_t sub_2528F3B98(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 344) = a1;
  *(void *)(v4 + 352) = v1;
  swift_task_dealloc();

  swift_release();
  if (v1) {
    unsigned int v5 = sub_2528F4114;
  }
  else {
    unsigned int v5 = sub_2528F3D1C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2528F3D1C()
{
  uint64_t v1 = (void *)v0[43];
  uint64_t v2 = (void *)sub_252951AB8();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (v3)
  {
    uint64_t v4 = (void *)v0[43];
    id v5 = objc_msgSend(v3, sel_stringValue);

    uint64_t v6 = sub_252951AE8();
    uint64_t v8 = v7;

    id v9 = (void *)sub_252951AB8();
    id v10 = objc_msgSend(v4, sel_featureValueForName_, v9);

    if (v10)
    {
      id v11 = objc_msgSend(v10, sel_dictionaryValue);

      sub_2528BA6BC(0, &qword_269C32A28);
      uint64_t v12 = sub_252951AA8();

      unint64_t v13 = sub_2528F4320(v12);
      swift_bridgeObjectRelease();
      if (v13)
      {
        if (*(void *)(v13 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v14 = sub_252922FE8(v6, v8);
          if (v15)
          {
            long long v16 = (void *)v0[39];
            uint64_t v17 = (void *)v0[35];
            uint64_t v19 = v0[31];
            uint64_t v18 = v0[32];
            int v20 = *(_DWORD *)(*(void *)(v13 + 56) + 4 * v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v21 = v18 + *(int *)(v19 + 20);

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v21 = v6;
            *(void *)(v21 + 8) = v8;
            *(_DWORD *)(v21 + 16) = v20;
            sub_2528CA49C(v0[32], v0[29]);
            swift_task_dealloc();
            id v22 = (uint64_t (*)(void))v0[1];
            goto LABEL_12;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  id v23 = (void *)v0[39];
  id v24 = (void *)v0[35];
  uint64_t v25 = v0[32];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_252953B00;
  *(void *)(v26 + 32) = 0x6C6562616CLL;
  *(void *)(v26 + 40) = 0xE500000000000000;
  *(void *)(v26 + 48) = 0xD000000000000010;
  *(void *)(v26 + 56) = 0x800000025295BC40;
  sub_2528ABF90();
  swift_allocError();
  *(void *)uint64_t v27 = v26;
  *(void *)(v27 + 8) = 0;
  *(unsigned char *)(v27 + 16) = 0;
  swift_willThrow();

  swift_unknownObjectRelease();
  sub_2528F0B14(v25);
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v22();
}

uint64_t sub_2528F4084()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F4114()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 256);

  sub_2528F0B14(v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_2528F41C8(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_252951208();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_252951268();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_2529511A8();

    swift_willThrow();
    uint64_t v9 = sub_252951268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

unint64_t sub_2528F4320(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A50);
    uint64_t v2 = (void *)sub_252951F68();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v9 = (v5 - 1) & v5;
      unint64_t v10 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v11 = v7;
    }
    else
    {
      int64_t v12 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_39;
      }
      if (v12 >= v26)
      {
LABEL_35:
        sub_2528E1A8C();
        return (unint64_t)v2;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v12);
      int64_t v11 = v7 + 1;
      if (!v13)
      {
        int64_t v11 = v7 + 2;
        if (v7 + 2 >= v26) {
          goto LABEL_35;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v11);
        if (!v13)
        {
          int64_t v11 = v7 + 3;
          if (v7 + 3 >= v26) {
            goto LABEL_35;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v11);
          if (!v13)
          {
            int64_t v11 = v7 + 4;
            if (v7 + 4 >= v26) {
              goto LABEL_35;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v11);
            if (!v13)
            {
              int64_t v14 = v7 + 5;
              if (v7 + 5 >= v26) {
                goto LABEL_35;
              }
              unint64_t v13 = *(void *)(v27 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v11 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_40;
                  }
                  if (v11 >= v26) {
                    goto LABEL_35;
                  }
                  unint64_t v13 = *(void *)(v27 + 8 * v11);
                  ++v14;
                  if (v13) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v11 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    }
    sub_2528F5B2C(*(void *)(a1 + 48) + 40 * v10, (uint64_t)v34);
    char v15 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *((void *)&v35 + 1) = v15;
    v32[0] = v34[0];
    v32[1] = v34[1];
    long long v33 = v35;
    sub_2528F5B2C((uint64_t)v32, (uint64_t)&v30);
    id v16 = v15;
    if (!swift_dynamicCast())
    {
      sub_2528B8494((uint64_t)v32, &qword_269C32A58);
LABEL_34:
      swift_bridgeObjectRelease();
      sub_2528E1A8C();
      swift_release();
      return 0;
    }
    id v17 = *((id *)&v33 + 1);
    sub_2528B8494((uint64_t)v32, &qword_269C32A58);
    int v30 = 0;
    char v31 = 1;
    id v18 = v17;
    MEMORY[0x2533C0690]();

    if (v31) {
      goto LABEL_34;
    }
    int v19 = v30;
    unint64_t result = sub_252922FE8(v28, v29);
    unint64_t v20 = result;
    if (v21)
    {
      id v8 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      *id v8 = v28;
      v8[1] = v29;
      *(_DWORD *)(v2[7] + 4 * v20) = v19;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v22 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v22 = v28;
    v22[1] = v29;
    *(_DWORD *)(v2[7] + 4 * result) = v19;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_38;
    }
    v2[2] = v25;
LABEL_8:
    int64_t v7 = v11;
    unint64_t v5 = v9;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2528F46A8(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_sizeInBytes);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2528F56E0(a1, result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_252953740;
    *(void *)(v12 + 32) = a4;
    sub_252951548();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
    return sub_2528F5AC4((uint64_t)v10, a3);
  }
  return result;
}

uint64_t sub_2528F47F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_2528F4824(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528F3590(a1, a2);
}

uint64_t type metadata accessor for VFMActionClassifier.Observer()
{
  return self;
}

ValueMetadata *type metadata accessor for VFMActionClassifier()
{
  return &type metadata for VFMActionClassifier;
}

uint64_t sub_2528F4A10(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2528AB1F8();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2528F4A8C(v6);
  return sub_252951EC8();
}

void sub_2528F4A8C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_2529520B8();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_132;
    }
    if (v4) {
      sub_2528F51F8(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_140;
  }
  uint64_t v7 = v5;
  char v110 = a1;
  if (v4 < 2)
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v119 = MEMORY[0x263F8EE78];
    uint64_t v118 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_98:
      uint64_t v102 = v10;
      if (v13 >= 2)
      {
        uint64_t v103 = *v110;
        do
        {
          unint64_t v104 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_127;
          }
          if (!v103) {
            goto LABEL_139;
          }
          char v105 = v102;
          uint64_t v106 = *(void *)&v102[16 * v104 + 32];
          uint64_t v107 = *(void *)&v102[16 * v13 + 24];
          sub_2528F52F0((void **)(v103 + 8 * v106), (id *)(v103 + 8 * *(void *)&v102[16 * v13 + 16]), v103 + 8 * v107, v118);
          if (v2) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v105 = sub_2528AA3C4((uint64_t)v105);
          }
          if (v104 >= *((void *)v105 + 2)) {
            goto LABEL_129;
          }
          long long v108 = &v105[16 * v104 + 32];
          *(void *)long long v108 = v106;
          *((void *)v108 + 1) = v107;
          unint64_t v109 = *((void *)v105 + 2);
          if (v13 > v109) {
            goto LABEL_130;
          }
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          uint64_t v102 = v105;
          *((void *)v105 + 2) = v109 - 1;
          unint64_t v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_252951BB8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_2528BA6BC(0, (unint64_t *)&qword_269C31C80);
    uint64_t v9 = sub_252951BD8();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    uint64_t v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v119 = v9;
  }
  uint64_t v114 = v7;
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v112 = *a1 + 16;
  unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v115 = v4;
  while (1)
  {
    uint64_t v14 = v11++;
    uint64_t v116 = v14;
    if (v11 < v4)
    {
      char v15 = *(void **)(v12 + 8 * v14);
      id v16 = *(id *)(v12 + 8 * v11);
      id v17 = v15;
      objc_msgSend(v16, sel_confidence);
      float v19 = v18;
      objc_msgSend(v17, sel_confidence);
      float v21 = v20;

      uint64_t v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        id v22 = (id *)(v112 + 8 * v14);
        while (1)
        {
          uint64_t v23 = *(v22 - 1);
          id v24 = *v22;
          id v25 = v23;
          objc_msgSend(v24, sel_confidence);
          float v27 = v26;
          objc_msgSend(v25, sel_confidence);
          float v29 = v28;

          if (v21 < v19 == v29 >= v27) {
            break;
          }
          ++v11;
          ++v22;
          if (v4 == v11)
          {
            uint64_t v11 = v4;
            break;
          }
        }
        uint64_t v14 = v116;
      }
      if (v21 < v19)
      {
        if (v11 < v14) {
          goto LABEL_133;
        }
        if (v14 < v11)
        {
          int v30 = (uint64_t *)(v111 + 8 * v11);
          uint64_t v31 = v11;
          uint64_t v32 = v14;
          long long v33 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v32 != --v31)
            {
              if (!v12) {
                goto LABEL_138;
              }
              uint64_t v34 = *v33;
              *long long v33 = *v30;
              *int v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_47;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_131;
    }
    if (v11 - v14 >= v114) {
      goto LABEL_47;
    }
    if (__OFADD__(v14, v114)) {
      goto LABEL_134;
    }
    uint64_t v35 = v14 + v114 >= v4 ? v4 : v14 + v114;
    if (v35 < v14) {
      break;
    }
    if (v11 != v35)
    {
      uint64_t v113 = v10;
      uint64_t v36 = v111 + 8 * v11;
      do
      {
        uint64_t v37 = *(void **)(v12 + 8 * v11);
        uint64_t v38 = v14;
        uint64_t v39 = v36;
        do
        {
          id v40 = *(void **)v39;
          id v41 = v37;
          id v42 = v40;
          objc_msgSend(v41, sel_confidence);
          float v44 = v43;
          objc_msgSend(v42, sel_confidence);
          float v46 = v45;

          if (v46 >= v44) {
            break;
          }
          if (!v12) {
            goto LABEL_136;
          }
          long long v47 = *(void **)v39;
          uint64_t v37 = *(void **)(v39 + 8);
          *(void *)uint64_t v39 = v37;
          *(void *)(v39 + 8) = v47;
          v39 -= 8;
          ++v38;
        }
        while (v11 != v38);
        ++v11;
        v36 += 8;
        uint64_t v14 = v116;
      }
      while (v11 != v35);
      uint64_t v11 = v35;
      unint64_t v10 = v113;
    }
LABEL_47:
    if (v11 < v14) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_2528A9FCC(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v49 = *((void *)v10 + 2);
    unint64_t v48 = *((void *)v10 + 3);
    unint64_t v13 = v49 + 1;
    if (v49 >= v48 >> 1) {
      unint64_t v10 = sub_2528A9FCC((char *)(v48 > 1), v49 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    long long v50 = v10 + 32;
    long long v51 = &v10[16 * v49 + 32];
    *(void *)long long v51 = v14;
    *((void *)v51 + 1) = v11;
    if (v49)
    {
      uint64_t v117 = v11;
      while (1)
      {
        unint64_t v52 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v57 = &v50[16 * v13];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_115;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_116;
          }
          unint64_t v64 = v13 - 2;
          long long v65 = &v50[16 * v13 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_118;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_121;
          }
          if (v69 >= v60)
          {
            long long v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_125;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v81 = *((void *)v10 + 4);
            uint64_t v82 = *((void *)v10 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_79;
          }
          uint64_t v54 = *((void *)v10 + 4);
          uint64_t v53 = *((void *)v10 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_117;
        }
        unint64_t v64 = v13 - 2;
        long long v70 = &v50[16 * v13 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_120;
        }
        __int32 v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_123;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_124;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_85:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v75) {
          goto LABEL_119;
        }
        long long v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_122;
        }
        if (v86 < v74) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v92 = v12;
        if (!v12) {
          goto LABEL_137;
        }
        long long v93 = v10;
        long long v94 = &v50[16 * v91];
        uint64_t v95 = *(void *)v94;
        long long v96 = v50;
        unint64_t v97 = v52;
        long long v98 = &v50[16 * v52];
        uint64_t v99 = *((void *)v98 + 1);
        uint64_t v100 = v92;
        sub_2528F52F0((void **)(v92 + 8 * *(void *)v94), (id *)(v92 + 8 * *(void *)v98), v92 + 8 * v99, v118);
        if (v1) {
          goto LABEL_95;
        }
        if (v99 < v95) {
          goto LABEL_112;
        }
        if (v97 > *((void *)v93 + 2)) {
          goto LABEL_113;
        }
        *(void *)long long v94 = v95;
        *(void *)&v96[16 * v91 + 8] = v99;
        unint64_t v101 = *((void *)v93 + 2);
        if (v97 >= v101) {
          goto LABEL_114;
        }
        unint64_t v10 = v93;
        unint64_t v13 = v101 - 1;
        memmove(v98, v98 + 16, 16 * (v101 - 1 - v97));
        long long v50 = v96;
        *((void *)v93 + 2) = v101 - 1;
        uint64_t v12 = v100;
        uint64_t v11 = v117;
        if (v101 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v4 = v115;
    if (v11 >= v115)
    {
      uint64_t v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_252951F18();
  __break(1u);
}

void sub_2528F51F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void **)(v6 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v10 = v7;
    while (1)
    {
      uint64_t v11 = *(void **)v10;
      id v12 = v8;
      id v13 = v11;
      objc_msgSend(v12, sel_confidence);
      float v15 = v14;
      objc_msgSend(v13, sel_confidence);
      float v17 = v16;

      if (v17 >= v15)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      float v18 = *(void **)v10;
      uint64_t v8 = *(void **)(v10 + 8);
      *(void *)uint64_t v10 = v8;
      *(void *)(v10 + 8) = v18;
      v10 -= 8;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_2528F52F0(void **__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v39 = __src;
  uint64_t v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    uint64_t v23 = &a4[v12];
    uint64_t v37 = (char *)v23;
    uint64_t v39 = v5;
    if (v6 >= v5 || v10 < 8) {
      goto LABEL_45;
    }
    id v24 = (id *)(a3 - 8);
    id v25 = v5;
    while (1)
    {
      float v26 = v24 + 1;
      float v27 = v23 - 1;
      float v28 = *--v25;
      id v29 = *(v23 - 1);
      id v30 = v28;
      objc_msgSend(v29, sel_confidence);
      float v32 = v31;
      objc_msgSend(v30, sel_confidence);
      float v34 = v33;

      if (v34 < v32) {
        break;
      }
      uint64_t v37 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23)
      {
        *id v24 = *v27;
        id v25 = v5;
        --v23;
        goto LABEL_43;
      }
      if (v26 != v23) {
        *id v24 = *v27;
      }
      id v25 = v5;
      --v23;
      if (v5 <= v6) {
        goto LABEL_45;
      }
LABEL_44:
      --v24;
      uint64_t v5 = v25;
      if (v23 <= a4) {
        goto LABEL_45;
      }
    }
    if (v26 != v5 || v24 >= v5) {
      *id v24 = *v25;
    }
    uint64_t v39 = v25;
LABEL_43:
    if (v25 <= v6) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    id v13 = &a4[v9];
    uint64_t v37 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      float v14 = a4;
      do
      {
        float v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        objc_msgSend(v16, sel_confidence);
        float v19 = v18;
        objc_msgSend(v17, sel_confidence);
        float v21 = v20;

        if (v21 >= v19)
        {
          if (v6 != v14) {
            void *v6 = *v14;
          }
          uint64_t v38 = ++v14;
          id v22 = v5;
        }
        else
        {
          id v22 = v5 + 1;
          if (v6 < v5 || v6 >= v22 || v6 != v5) {
            void *v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        uint64_t v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      uint64_t v39 = v6;
    }
LABEL_45:
    sub_2528AA308((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
LABEL_46:
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

uint64_t sub_2528F561C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2528F56E0(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_2528F561C(__src, &__src[a2]);
  }
  sub_252951148();
  swift_allocObject();
  sub_252951138();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_252951298();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t _s5Human16ActionClassifierV6labelsSaySSGvg_0()
{
  uint64_t v0 = qword_2702D0850;
  uint64_t v1 = MEMORY[0x263F8EE78];
  if (qword_2702D0850)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_252922F88(0, qword_2702D0850, 0);
    unint64_t v2 = &byte_2702D0860;
    uint64_t v1 = v11;
    do
    {
      char v3 = *v2++;
      uint64_t v4 = sub_25294403C(v3);
      uint64_t v6 = v5;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_252922F88(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      --v0;
    }
    while (v0);
  }
  return v1;
}

uint64_t sub_2528F5868(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v1 = (uint64_t)sub_2528A9508(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = v1;
  sub_2528F4A10(&v15);
  uint64_t v2 = v15;
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x2533C0860](0, v15);
  }
  else
  {
    if (!*(void *)(v15 + 16))
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    id v3 = *(id *)(v15 + 32);
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_action);

  id v5 = (id)ANSTActionToNSString();
  uint64_t v6 = sub_252951AE8();
  uint64_t v8 = v7;

  if ((v2 & 0xC000000000000001) != 0) {
    id v9 = (id)MEMORY[0x2533C0860](0, v2);
  }
  else {
    id v9 = *(id *)(v2 + 32);
  }
  uint64_t v10 = v9;
  swift_release();
  objc_msgSend(v10, sel_confidence);
  int v12 = v11;

  qword_269C3D748 = v6;
  qword_269C3D750 = v8;
  dword_269C3D758 = v12;

  return swift_bridgeObjectRelease();
}

uint64_t sub_2528F59C8()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2528F5A00(unsigned char *a1)
{
  return sub_2528F46A8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_2528F5A0C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2528F5A1C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2528F5A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528F5AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2528F5B2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2528F5B88(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a1 + 56);
  uint64_t v23 = *(void **)(a1 + 176);
  id v24 = *(void **)(a1 + 184);
  id v25 = *(void **)(a1 + 192);
  float v26 = *(void **)(a1 + 200);
  float v27 = *(void **)(a1 + 208);
  id v9 = *(id *)(a1 + 224);
  id v10 = v2;
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v17 = v23;
  id v18 = v24;
  id v19 = v25;
  id v20 = v26;
  id v21 = v27;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_2528F5D08(uint64_t a1)
{
  id v14 = *(void **)a1;
  id v13 = *(void **)(a1 + 8);
  id v11 = *(void **)(a1 + 16);
  id v15 = *(void **)(a1 + 24);
  id v9 = *(void **)(a1 + 40);
  id v10 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a1 + 56);
  uint64_t v2 = *(void **)(a1 + 176);
  id v3 = *(void **)(a1 + 184);
  uint64_t v4 = *(void **)(a1 + 192);
  id v5 = *(void **)(a1 + 200);
  uint64_t v6 = *(void **)(a1 + 208);
  id v12 = *(void **)(a1 + 224);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t RepetitiveActionCounter.__allocating_init(modelType:)(unsigned char *a1)
{
  swift_allocObject();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_2528F5F44;
  return RepetitiveActionCounter.init(modelType:)(a1);
}

uint64_t sub_2528F5F44(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t RepetitiveActionCounter.init(modelType:)(unsigned char *a1)
{
  *(void *)(v2 + 1088) = v1;
  type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(v2 + 1096) = swift_task_alloc();
  *(void *)(v2 + 1104) = type metadata accessor for BodySkeleton3DTracker();
  *(void *)(v2 + 1112) = swift_task_alloc();
  *(unsigned char *)(v2 + 1165) = *a1;
  return MEMORY[0x270FA2498](sub_2528F6110, 0, 0);
}

uint64_t sub_2528F6110()
{
  char v1 = *(unsigned char *)(v0 + 1165);
  uint64_t v2 = *(void *)(v0 + 1088);
  *(_DWORD *)(v2 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_previousVisiblePercentage) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_occlusionThreshold) = 1045220557;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_requiredVisiblePercentage) = 1056964608;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_modelType) = v1;
  sub_252910520(v0 + 920);
  long long v3 = *(_OWORD *)(v0 + 1064);
  *(_OWORD *)(v0 + 544) = *(_OWORD *)(v0 + 1048);
  *(_OWORD *)(v0 + 560) = v3;
  *(void *)(v0 + 576) = *(void *)(v0 + 1080);
  long long v4 = *(_OWORD *)(v0 + 1000);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 984);
  *(_OWORD *)(v0 + 496) = v4;
  long long v5 = *(_OWORD *)(v0 + 1032);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 1016);
  *(_OWORD *)(v0 + 528) = v5;
  long long v6 = *(_OWORD *)(v0 + 936);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 920);
  *(_OWORD *)(v0 + 432) = v6;
  long long v7 = *(_OWORD *)(v0 + 968);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 952);
  *(_OWORD *)(v0 + 464) = v7;
  id v8 = sub_25294B500();
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v0 + 1088);
  *(void *)(v13 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  *(void *)(v13 + 24) = v8;
  *(unsigned char *)(v13 + 32) = v10 & 1;
  *(void *)(v13 + 40) = v12;
  long long v15 = *(_OWORD *)(v0 + 432);
  long long v14 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v13 + 64) = v15;
  *(_OWORD *)(v13 + 80) = v14;
  long long v16 = *(_OWORD *)(v0 + 512);
  long long v18 = *(_OWORD *)(v0 + 464);
  long long v17 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v13 + 128) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v13 + 144) = v16;
  *(_OWORD *)(v13 + 96) = v18;
  *(_OWORD *)(v13 + 112) = v17;
  long long v20 = *(_OWORD *)(v0 + 544);
  long long v19 = *(_OWORD *)(v0 + 560);
  long long v21 = *(_OWORD *)(v0 + 528);
  *(void *)(v13 + 208) = *(void *)(v0 + 576);
  *(_OWORD *)(v13 + 176) = v20;
  *(_OWORD *)(v13 + 192) = v19;
  *(_OWORD *)(v13 + 160) = v21;
  sub_252910520(v0 + 584);
  long long v22 = *(_OWORD *)(v0 + 728);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 712);
  *(_OWORD *)(v0 + 896) = v22;
  *(void *)(v0 + 912) = *(void *)(v0 + 744);
  long long v23 = *(_OWORD *)(v0 + 664);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v0 + 832) = v23;
  long long v24 = *(_OWORD *)(v0 + 696);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 680);
  *(_OWORD *)(v0 + 864) = v24;
  long long v25 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v0 + 768) = v25;
  long long v26 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v0 + 800) = v26;
  id v27 = sub_25294B500();
  char v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = *(void *)(v0 + 1112);
  uint64_t v33 = *(void *)(v0 + 1104);
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  uint64_t v35 = *(int *)(v33 + 20);
  *(_DWORD *)(v0 + 1160) = v35;
  uint64_t v36 = v32 + v35;
  *(void *)uint64_t v36 = v34;
  *(void *)(v36 + 8) = v27;
  *(unsigned char *)(v36 + 16) = v29 & 1;
  *(void *)(v36 + 24) = v31;
  long long v38 = *(_OWORD *)(v0 + 768);
  long long v37 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v36 + 48) = v38;
  *(_OWORD *)(v36 + 64) = v37;
  long long v39 = *(_OWORD *)(v0 + 848);
  long long v41 = *(_OWORD *)(v0 + 800);
  long long v40 = *(_OWORD *)(v0 + 816);
  *(_OWORD *)(v36 + 112) = *(_OWORD *)(v0 + 832);
  *(_OWORD *)(v36 + 128) = v39;
  *(_OWORD *)(v36 + 80) = v41;
  *(_OWORD *)(v36 + 96) = v40;
  long long v43 = *(_OWORD *)(v0 + 880);
  long long v42 = *(_OWORD *)(v0 + 896);
  long long v44 = *(_OWORD *)(v0 + 864);
  *(void *)(v36 + 192) = *(void *)(v0 + 912);
  *(_OWORD *)(v36 + 160) = v43;
  *(_OWORD *)(v36 + 176) = v42;
  *(_OWORD *)(v36 + 144) = v44;
  float v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 1120) = v45;
  *float v45 = v0;
  v45[1] = sub_2528F648C;
  uint64_t v46 = *(void *)(v0 + 1096);
  return sub_252912A8C(v46);
}

uint64_t sub_2528F648C()
{
  *(void *)(*(void *)v1 + 1128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528F67D8;
  }
  else {
    uint64_t v2 = sub_2528F65A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528F65A0()
{
  char v1 = *(unsigned char *)(v0 + 1165);
  uint64_t v2 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1088);
  sub_2528F9C0C(*(void *)(v0 + 1096), v2, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose3DEstimator);
  sub_2528F9C0C(v2, v3 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator, (uint64_t (*)(void))type metadata accessor for BodySkeleton3DTracker);
  *(unsigned char *)(v0 + 1164) = v1;
  type metadata accessor for RepetitionCounter();
  swift_allocObject();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v4;
  void *v4 = v0;
  v4[1] = sub_2528F66B0;
  return sub_25293B254((unsigned __int8 *)(v0 + 1164));
}

uint64_t sub_2528F66B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_2528F69C0;
  }
  else
  {
    *(void *)(v4 + 1152) = a1;
    long long v5 = sub_2528F6940;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2528F67D8()
{
  uint64_t v1 = *(void *)(v0 + 1112) + *(int *)(v0 + 1160);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)v1;
  long long v2 = *(_OWORD *)(v1 + 48);
  long long v3 = *(_OWORD *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 264) = v2;
  *(_OWORD *)(v0 + 280) = v3;
  *(_OWORD *)(v0 + 248) = v4;
  long long v5 = *(_OWORD *)(v1 + 128);
  long long v7 = *(_OWORD *)(v1 + 80);
  long long v6 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 344) = v5;
  *(_OWORD *)(v0 + 296) = v7;
  *(_OWORD *)(v0 + 312) = v6;
  long long v9 = *(_OWORD *)(v1 + 160);
  long long v8 = *(_OWORD *)(v1 + 176);
  long long v10 = *(_OWORD *)(v1 + 144);
  *(void *)(v0 + 408) = *(void *)(v1 + 192);
  *(_OWORD *)(v0 + 376) = v9;
  *(_OWORD *)(v0 + 392) = v8;
  *(_OWORD *)(v0 + 360) = v10;
  sub_2528F095C(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 1088);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v11 + 16);
  long long v12 = *(_OWORD *)(v11 + 80);
  long long v14 = *(_OWORD *)(v11 + 32);
  long long v13 = *(_OWORD *)(v11 + 48);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v11 + 64);
  *(_OWORD *)(v0 + 80) = v12;
  *(_OWORD *)(v0 + 32) = v14;
  *(_OWORD *)(v0 + 48) = v13;
  long long v15 = *(_OWORD *)(v11 + 144);
  long long v17 = *(_OWORD *)(v11 + 96);
  long long v16 = *(_OWORD *)(v11 + 112);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v11 + 128);
  *(_OWORD *)(v0 + 144) = v15;
  *(_OWORD *)(v0 + 96) = v17;
  *(_OWORD *)(v0 + 112) = v16;
  long long v19 = *(_OWORD *)(v11 + 176);
  long long v18 = *(_OWORD *)(v11 + 192);
  long long v20 = *(_OWORD *)(v11 + 160);
  *(void *)(v0 + 208) = *(void *)(v11 + 208);
  *(_OWORD *)(v0 + 176) = v19;
  *(_OWORD *)(v0 + 192) = v18;
  *(_OWORD *)(v0 + 160) = v20;
  sub_2528F095C(v0 + 16);
  type metadata accessor for RepetitiveActionCounter();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_2528F6940()
{
  *(void *)(v0[136] + 216) = v0[144];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[136];
  return v1(v2);
}

uint64_t sub_2528F69C0()
{
  uint64_t v1 = *(void *)(v0 + 1088);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  long long v2 = *(_OWORD *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 80) = v2;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  long long v5 = *(_OWORD *)(v1 + 144);
  long long v7 = *(_OWORD *)(v1 + 96);
  long long v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 144) = v5;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  long long v9 = *(_OWORD *)(v1 + 176);
  long long v8 = *(_OWORD *)(v1 + 192);
  long long v10 = *(_OWORD *)(v1 + 160);
  *(void *)(v0 + 208) = *(void *)(v1 + 208);
  *(_OWORD *)(v0 + 176) = v9;
  *(_OWORD *)(v0 + 192) = v8;
  *(_OWORD *)(v0 + 160) = v10;
  sub_2528F095C(v0 + 16);
  sub_2528FA0FC(v1 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator, (uint64_t (*)(void))type metadata accessor for BodySkeleton3DTracker);
  type metadata accessor for RepetitiveActionCounter();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_2528F6AF0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_252951598();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528F6BB4, 0, 0);
}

uint64_t sub_2528F6BB4()
{
  int8x16_t v7 = *(int8x16_t *)(v0 + 24);
  sub_252951588();
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  v1[1] = vextq_s8(v7, v7, 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  uint64_t v3 = type metadata accessor for SceneDescriptor();
  void *v2 = v0;
  v2[1] = sub_2528F6CA8;
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270EE76C0](v5, v4, &unk_269C32AA8, v1, v3);
}

uint64_t sub_2528F6CA8()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528F6E6C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2528F6E6C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F6ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  uint64_t v4 = sub_252951598();
  v3[40] = v4;
  v3[41] = *(void *)(v4 - 8);
  v3[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[43] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[44] = v5;
  v3[45] = *(void *)(v5 - 8);
  v3[46] = swift_task_alloc();
  uint64_t v6 = sub_252951A08();
  v3[47] = v6;
  v3[48] = *(void *)(v6 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = type metadata accessor for SceneDescriptor();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2528F70F4, 0, 0);
}

uint64_t sub_2528F70F4()
{
  uint64_t v1 = *(void *)(v0 + 304);
  id v2 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v2, sel_systemUptime);
  *(void *)(v0 + 456) = v3;

  uint64_t v4 = OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator;
  *(void *)(v0 + 464) = OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator;
  uint64_t v5 = v1 + v4 + *(int *)(type metadata accessor for BodySkeleton3DTracker() + 20);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v5;
  long long v6 = *(_OWORD *)(v5 + 144);
  long long v7 = *(_OWORD *)(v5 + 160);
  long long v8 = *(_OWORD *)(v5 + 176);
  *(void *)(v0 + 208) = *(void *)(v5 + 192);
  *(_OWORD *)(v0 + 176) = v7;
  *(_OWORD *)(v0 + 192) = v8;
  *(_OWORD *)(v0 + 160) = v6;
  long long v9 = *(_OWORD *)(v5 + 80);
  long long v10 = *(_OWORD *)(v5 + 96);
  long long v11 = *(_OWORD *)(v5 + 128);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v5 + 112);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v10;
  long long v12 = *(_OWORD *)(v5 + 16);
  long long v13 = *(_OWORD *)(v5 + 32);
  long long v14 = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 32) = v12;
  *(_OWORD *)(v0 + 48) = v13;
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v15;
  *long long v15 = v0;
  v15[1] = sub_2528F7238;
  uint64_t v16 = *(void *)(v0 + 440);
  uint64_t v17 = *(void *)(v0 + 312);
  return VideoAdaptor.applied(to:)(v16, v17);
}

uint64_t sub_2528F7238()
{
  id v2 = (void *)*v1;
  v2[60] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528F74D4, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[61] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2528F73C0;
    uint64_t v5 = v2[55];
    uint64_t v4 = v2[56];
    return sub_252913284(v4, v5);
  }
}

uint64_t sub_2528F73C0()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_2528F77B0;
  }
  else {
    id v2 = sub_2528F75BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528F74D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F75BC()
{
  sub_2528FA0FC(v0[55], (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v0[30] = 0xD00000000000001DLL;
  v0[31] = 0x800000025295A170;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[63] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_2528F769C;
  uint64_t v2 = v0[51];
  return SceneDescriptor.tensor(for:)(v2, v0 + 30);
}

uint64_t sub_2528F769C()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2528F9218;
  }
  else {
    uint64_t v2 = sub_2528F78B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2528F77B0()
{
  sub_2528FA0FC(*(void *)(v0 + 440), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528F78B4()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[48];
  sub_252951668();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[65] = (uint64_t)v5;
  v0[66] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v3);
  sub_2529516E8();
  v5(v1, v3);
  v0[34] = 0xD00000000000001DLL;
  v0[35] = 0x800000025295A150;
  long long v6 = (void *)swift_task_alloc();
  v0[67] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_2528F79F8;
  uint64_t v7 = v0[50];
  return SceneDescriptor.tensor(for:)(v7, v0 + 34);
}

uint64_t sub_2528F79F8()
{
  uint64_t v2 = (void *)*v1;
  v2[68] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528F9454, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[69] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2528F7B8C;
    uint64_t v4 = v2[46];
    uint64_t v5 = MEMORY[0x263F8D5C8];
    uint64_t v6 = MEMORY[0x263F00C58];
    uint64_t v7 = MEMORY[0x263F00C50];
    uint64_t v8 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE76F8](v4, v5, v8, v6, v7);
  }
}

uint64_t sub_2528F7B8C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528F7C88, 0, 0);
}

uint64_t sub_2528F7C88()
{
  uint64_t v2 = *((void *)v0 + 45);
  uint64_t v1 = *((void *)v0 + 46);
  uint64_t v3 = *((void *)v0 + 44);
  sub_2528FA15C();
  uint64_t v4 = sub_2529515D8();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v10 = *(void *)(v4 + 16);
  *((void *)v0 + 70) = v10;
  int64_t v11 = v10 / 3;
  if (v10 >= 3)
  {
    uint64_t v12 = 0;
    float v15 = *(float *)(*((void *)v0 + 38) + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_occlusionThreshold);
    uint64_t v14 = v4 + 40;
    uint64_t v16 = v11;
    while (v16)
    {
      float v17 = *(float *)v14;
      if (*(float *)v14 < v15 && __OFADD__(v12++, 1))
      {
        __break(1u);
        goto LABEL_16;
      }
      v14 += 12;
      if (!--v16) {
        goto LABEL_3;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = 0;
LABEL_3:
  uint64_t v5 = swift_bridgeObjectRelease();
  uint64_t v13 = v11 - v12;
  if (__OFSUB__(v11, v12))
  {
LABEL_25:
    __break(1u);
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  uint64_t v14 = *((void *)v0 + 38);
  float v15 = (float)v13;
  *((void *)v0 + 71) = v13;
  uint64_t v16 = OBJC_IVAR____TtC5Human23RepetitiveActionCounter_previousVisiblePercentage;
  *((void *)v0 + 72) = OBJC_IVAR____TtC5Human23RepetitiveActionCounter_previousVisiblePercentage;
  float v9 = *(float *)(v14 + v16);
  float v17 = v15 / (float)v11;
  float v8 = *(float *)(v14 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_requiredVisiblePercentage);
  if (v8 < v9 && v17 < v8)
  {
    uint64_t v18 = *(void *)(v14 + 216);
    *((void *)v0 + 73) = v18;
    swift_retain();
    uint64_t v5 = (uint64_t)sub_2528F7FF4;
    uint64_t v6 = v18;
    uint64_t v7 = 0;
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
LABEL_16:
  if (v9 >= v8 || v17 >= v8)
  {
    *(float *)(v14 + v16) = v15 / (float)(*((void *)v0 + 70) / 3uLL);
    v0[74] = *(double *)(v14 + 216);
    swift_retain();
    char v29 = (void *)swift_task_alloc();
    *((void *)v0 + 75) = v29;
    *char v29 = v0;
    v29[1] = sub_2528F81B4;
    uint64_t v30 = *((void *)v0 + 53);
    return sub_25293AD64(v30);
  }
  else
  {
    long long v20 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 65);
    double v21 = v0[57];
    uint64_t v22 = *((void *)v0 + 56);
    uint64_t v23 = *((void *)v0 + 53);
    uint64_t v24 = *((void *)v0 + 50);
    uint64_t v25 = *((void *)v0 + 47);
    uint64_t v26 = *((void *)v0 + 37);
    *(float *)(v14 + v16) = v17;
    sub_2528D01CC(18, v21);
    v20(v24, v25);
    v20(v23, v25);
    sub_2528CA438(v22, v26);
    sub_2528FA0FC(*((void *)v0 + 56), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v27 = (uint64_t (*)(void))*((void *)v0 + 1);
    return v27();
  }
}

uint64_t sub_2528F7FF4()
{
  uint64_t v1 = v0[73];
  uint64_t v2 = v0[43];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[48] + 56))(v2, 1, 1, v0[47]);
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Human17RepetitionCounter_hiddenStates;
  swift_beginAccess();
  sub_2528FA264(v2, v3);
  swift_endAccess();
  sub_25293334C();
  swift_release();
  return MEMORY[0x270FA2498](sub_2528F80DC, 0, 0);
}

uint64_t sub_2528F80DC()
{
  uint64_t v1 = v0[38];
  *(float *)(v1 + v0[72]) = (float)(uint64_t)v0[71] / (float)(v0[70] / 3uLL);
  v0[74] = *(void *)(v1 + 216);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[75] = v2;
  void *v2 = v0;
  v2[1] = sub_2528F81B4;
  uint64_t v3 = v0[53];
  return sub_25293AD64(v3);
}

uint64_t sub_2528F81B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 608) = a1;
  *(void *)(v3 + 616) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2528F850C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_2528F82D4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2528F82D4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 304) + 216);
  *(void *)(v0 + 624) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_2528F834C, v1, 0);
}

uint64_t sub_2528F834C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 632) = v1;
  void *v1 = v0;
  v1[1] = sub_2528F83EC;
  uint64_t v2 = *(void *)(v0 + 608);
  return MEMORY[0x270EE7940](v2);
}

uint64_t sub_2528F83EC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[80] = a1;
  v3[81] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2528F8B24;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v3[78];
    uint64_t v4 = sub_2528F877C;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_2528F850C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 376);
  swift_release();
  v1(v3, v4);
  v1(v2, v4);
  uint64_t v5 = *(void **)(v0 + 616);
  *(void *)(v0 + 288) = v5;
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v7 = *(void *)(v0 + 264);
    if (v7 == 2)
    {
      double v8 = *(double *)(v0 + 456);
      uint64_t v9 = *(void *)(v0 + 448);
      uint64_t v10 = *(void *)(v0 + 296);

      sub_2528D01CC(18, v8);
      sub_2528CA438(v9, v10);

      sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    uint64_t v12 = *(void *)(v0 + 448);
    sub_2528E77E4(*(void *)(v0 + 256), v7);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 448);
  }

  sub_2528FA0FC(v12, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v11();
}

uint64_t sub_2528F877C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2528F87F0, 0, 0);
}

uint64_t sub_2528F87F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 304) + 216);
  *(void *)(v0 + 656) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_2528F8868, v1, 0);
}

uint64_t sub_2528F8868()
{
  uint64_t v1 = v0[82];
  uint64_t v2 = v0[80];
  sub_252951588();
  uint64_t v3 = swift_task_alloc();
  v0[83] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[84] = v4;
  void *v4 = v0;
  v4[1] = sub_2528F894C;
  uint64_t v5 = v0[49];
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[42];
  return MEMORY[0x270EE76C0](v5, v7, &unk_269C32AE0, v3, v6);
}

uint64_t sub_2528F894C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 336);
  uint64_t v4 = *(void *)(*v1 + 328);
  uint64_t v5 = *(void *)(*v1 + 320);
  *(void *)(v2 + 680) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 656);
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v7 = sub_2528F8F80;
    uint64_t v8 = v6;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v7 = sub_2528F8DA0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_2528F8B24()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 376);
  swift_release();
  swift_bridgeObjectRelease();
  v1(v3, v4);
  v1(v2, v4);
  uint64_t v5 = *(void **)(v0 + 648);
  *(void *)(v0 + 288) = v5;
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v7 = *(void *)(v0 + 264);
    if (v7 == 2)
    {
      double v8 = *(double *)(v0 + 456);
      uint64_t v9 = *(void *)(v0 + 448);
      uint64_t v10 = *(void *)(v0 + 296);

      sub_2528D01CC(18, v8);
      sub_2528CA438(v9, v10);

      sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    uint64_t v12 = *(void *)(v0 + 448);
    sub_2528E77E4(*(void *)(v0 + 256), v7);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 448);
  }

  sub_2528FA0FC(v12, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v11();
}

uint64_t sub_2528F8DA0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v13 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 384);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v15 = *(void *)(v0 + 424);
  sub_2528D01CC(18, *(double *)(v0 + 456));
  sub_25293FD58();
  uint64_t v8 = v7;
  uint64_t v9 = *(int *)(v3 + 60);
  swift_bridgeObjectRelease();
  *(void *)(v2 + v9) = v8;
  uint64_t v10 = v2 + *(int *)(v3 + 52);
  sub_2528AE5CC(v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v4, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v6);
  v1(v4, v6);
  v1(v13, v6);
  v1(v15, v6);
  sub_2528CA438(v2, v14);
  sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_2528F8F80()
{
  return MEMORY[0x270FA2498](sub_2528F8F9C, 0, 0);
}

uint64_t sub_2528F8F9C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 376);
  swift_release();
  swift_bridgeObjectRelease();
  v1(v3, v4);
  v1(v2, v4);
  uint64_t v5 = *(void **)(v0 + 680);
  *(void *)(v0 + 288) = v5;
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v7 = *(void *)(v0 + 264);
    if (v7 == 2)
    {
      double v8 = *(double *)(v0 + 456);
      uint64_t v9 = *(void *)(v0 + 448);
      uint64_t v10 = *(void *)(v0 + 296);

      sub_2528D01CC(18, v8);
      sub_2528CA438(v9, v10);

      sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    uint64_t v12 = *(void *)(v0 + 448);
    sub_2528E77E4(*(void *)(v0 + 256), v7);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 448);
  }

  sub_2528FA0FC(v12, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v11();
}

uint64_t sub_2528F9218()
{
  uint64_t v1 = *(void **)(v0 + 512);
  *(void *)(v0 + 288) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v3 = *(void *)(v0 + 264);
    if (v3 == 2)
    {
      double v4 = *(double *)(v0 + 456);
      uint64_t v5 = *(void *)(v0 + 448);
      uint64_t v6 = *(void *)(v0 + 296);

      sub_2528D01CC(18, v4);
      sub_2528CA438(v5, v6);

      sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    uint64_t v8 = *(void *)(v0 + 448);
    sub_2528E77E4(*(void *)(v0 + 256), v3);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 448);
  }

  sub_2528FA0FC(v8, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v7();
}

uint64_t sub_2528F9454()
{
  (*(void (**)(void, void))(v0 + 520))(*(void *)(v0 + 424), *(void *)(v0 + 376));
  uint64_t v1 = *(void **)(v0 + 544);
  *(void *)(v0 + 288) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v3 = *(void *)(v0 + 264);
    if (v3 == 2)
    {
      double v4 = *(double *)(v0 + 456);
      uint64_t v5 = *(void *)(v0 + 448);
      uint64_t v6 = *(void *)(v0 + 296);

      sub_2528D01CC(18, v4);
      sub_2528CA438(v5, v6);

      sub_2528FA0FC(*(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    uint64_t v8 = *(void *)(v0 + 448);
    sub_2528E77E4(*(void *)(v0 + 256), v3);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 448);
  }

  sub_2528FA0FC(v8, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v7();
}

uint64_t RepetitiveActionCounter.deinit()
{
  long long v1 = *(_OWORD *)(v0 + 192);
  v8[10] = *(_OWORD *)(v0 + 176);
  v8[11] = v1;
  uint64_t v9 = *(void *)(v0 + 208);
  long long v2 = *(_OWORD *)(v0 + 128);
  v8[6] = *(_OWORD *)(v0 + 112);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(v0 + 160);
  v8[8] = *(_OWORD *)(v0 + 144);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  int64_t v8[3] = v4;
  long long v5 = *(_OWORD *)(v0 + 96);
  v8[4] = *(_OWORD *)(v0 + 80);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v6;
  sub_2528F095C((uint64_t)v8);
  swift_release();
  sub_2528FA0FC(v0 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator, (uint64_t (*)(void))type metadata accessor for BodySkeleton3DTracker);
  return v0;
}

uint64_t RepetitiveActionCounter.__deallocating_deinit()
{
  long long v1 = *(_OWORD *)(v0 + 192);
  v8[10] = *(_OWORD *)(v0 + 176);
  v8[11] = v1;
  uint64_t v9 = *(void *)(v0 + 208);
  long long v2 = *(_OWORD *)(v0 + 128);
  v8[6] = *(_OWORD *)(v0 + 112);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(v0 + 160);
  v8[8] = *(_OWORD *)(v0 + 144);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  int64_t v8[3] = v4;
  long long v5 = *(_OWORD *)(v0 + 96);
  v8[4] = *(_OWORD *)(v0 + 80);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v6;
  sub_2528F095C((uint64_t)v8);
  swift_release();
  sub_2528FA0FC(v0 + OBJC_IVAR____TtC5Human23RepetitiveActionCounter_pose3DEstimator, (uint64_t (*)(void))type metadata accessor for BodySkeleton3DTracker);
  return swift_deallocClassInstance();
}

uint64_t sub_2528F97EC(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v4 = sub_252951598();
  v3[4] = v4;
  v3[5] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v2;
  v3[6] = v5;
  v3[7] = v6;
  return MEMORY[0x270FA2498](sub_2528F98B0, 0, 0);
}

uint64_t sub_2528F98B0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  sub_252951588();
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  uint64_t v5 = type metadata accessor for SceneDescriptor();
  void *v4 = v0;
  v4[1] = sub_2528F9998;
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[2];
  return MEMORY[0x270EE76C0](v7, v6, &unk_269C32AD8, v3, v5);
}

uint64_t sub_2528F9998()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2528F9B5C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2528F9B5C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for RepetitiveActionCounter()
{
  uint64_t result = qword_269C32AB8;
  if (!qword_269C32AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2528F9C0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2528F9C74(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_2528E9BB0;
  return sub_2528F6ED0(a1, v5, v4);
}

uint64_t sub_2528F9D20()
{
  return type metadata accessor for RepetitiveActionCounter();
}

uint64_t sub_2528F9D28()
{
  uint64_t result = type metadata accessor for BodySkeleton3DTracker();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RepetitiveActionCounter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RepetitiveActionCounter);
}

uint64_t dispatch thunk of RepetitiveActionCounter.__allocating_init(modelType:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 232) + **(int **)(v1 + 232));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_2528F9EF0;
  return v6(a1);
}

uint64_t sub_2528F9EF0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of RepetitiveActionCounter.applied(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 240) + **(int **)(*(void *)v2 + 240));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_2528E9BB0;
  return v8(a1, a2);
}

uint64_t sub_2528FA0FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2528FA15C()
{
  unint64_t result = qword_269C31C50;
  if (!qword_269C31C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C32A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C31C50);
  }
  return result;
}

uint64_t sub_2528FA1B8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_2528A91AC;
  return sub_25293D300(a1, v5, v4);
}

uint64_t sub_2528FA264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void Skeleton.Topology.topology2D.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x3030100uLL >> (8 * *v1);
}

void Skeleton.Topology.topology3D.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x50403010200uLL >> (8 * *v1);
}

BOOL static Skeleton.Topology.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Skeleton.Topology.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t sub_2528FA348(char a1)
{
  return *(void *)&aNone_4[8 * a1];
}

uint64_t sub_2528FA368()
{
  return sub_2528FA348(*v0);
}

uint64_t sub_2528FA370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2528FBEFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2528FA398(uint64_t a1)
{
  unint64_t v2 = sub_2528FAD00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA3D4(uint64_t a1)
{
  unint64_t v2 = sub_2528FAD00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA410(uint64_t a1)
{
  unint64_t v2 = sub_2528FADFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA44C(uint64_t a1)
{
  unint64_t v2 = sub_2528FADFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA488(uint64_t a1)
{
  unint64_t v2 = sub_2528FADA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA4C4(uint64_t a1)
{
  unint64_t v2 = sub_2528FADA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA500(uint64_t a1)
{
  unint64_t v2 = sub_2528FAEA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA53C(uint64_t a1)
{
  unint64_t v2 = sub_2528FAEA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA578(uint64_t a1)
{
  unint64_t v2 = sub_2528FAE50();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA5B4(uint64_t a1)
{
  unint64_t v2 = sub_2528FAE50();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA5F0(uint64_t a1)
{
  unint64_t v2 = sub_2528FAEF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA62C(uint64_t a1)
{
  unint64_t v2 = sub_2528FAEF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2528FA668(uint64_t a1)
{
  unint64_t v2 = sub_2528FAD54();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2528FA6A4(uint64_t a1)
{
  unint64_t v2 = sub_2528FAD54();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Topology.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t Skeleton.Topology.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32AE8);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  long long v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32AF0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32AF8);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B00);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B08);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B10);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B18);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2528FAD00();
  sub_252952208();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_2528FAEA4();
      uint64_t v22 = v42;
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_2528FAE50();
      uint64_t v23 = v30;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_2528FADFC();
      uint64_t v23 = v33;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_2528FADA8();
      uint64_t v23 = v36;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_2528FAD54();
      uint64_t v23 = v39;
      uint64_t v22 = v42;
      sub_252952038();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_2528FAEF8();
      uint64_t v22 = v42;
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

unint64_t sub_2528FAD00()
{
  unint64_t result = qword_269C32B20;
  if (!qword_269C32B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B20);
  }
  return result;
}

unint64_t sub_2528FAD54()
{
  unint64_t result = qword_269C32B28;
  if (!qword_269C32B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B28);
  }
  return result;
}

unint64_t sub_2528FADA8()
{
  unint64_t result = qword_269C32B30;
  if (!qword_269C32B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B30);
  }
  return result;
}

unint64_t sub_2528FADFC()
{
  unint64_t result = qword_269C32B38;
  if (!qword_269C32B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B38);
  }
  return result;
}

unint64_t sub_2528FAE50()
{
  unint64_t result = qword_269C32B40;
  if (!qword_269C32B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B40);
  }
  return result;
}

unint64_t sub_2528FAEA4()
{
  unint64_t result = qword_269C32B48;
  if (!qword_269C32B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B48);
  }
  return result;
}

unint64_t sub_2528FAEF8()
{
  unint64_t result = qword_269C32B50;
  if (!qword_269C32B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B50);
  }
  return result;
}

uint64_t Skeleton.Topology.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B58);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B60);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  long long v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B68);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B70);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B78);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B80);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32B88);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2528FAD00();
  uint64_t v21 = v68;
  sub_2529521E8();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  long long v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  uint64_t v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  uint64_t v26 = v19;
  uint64_t v27 = sub_252952028();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_252951E98();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C320A8);
    *uint64_t v36 = &type metadata for Skeleton.Topology;
    uint64_t v37 = v68;
    sub_252951FB8();
    sub_252951E88();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_2528FAEA4();
      uint64_t v39 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_2528FAE50();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_252951FA8();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_2528FADFC();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_252951FA8();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_2528FADA8();
      uint64_t v46 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v45;
      break;
    case 5:
      long long v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_2528FAD54();
      uint64_t v47 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_2528FAEF8();
      uint64_t v30 = v50;
      uint64_t v31 = v68;
      sub_252951FA8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      uint64_t v33 = v63;
      char v28 = v29;
      break;
  }
  *uint64_t v33 = v28;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_2528FB7D8()
{
  unint64_t result = qword_269C32B90;
  if (!qword_269C32B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B90);
  }
  return result;
}

uint64_t sub_2528FB82C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Skeleton.Topology.init(from:)(a1, a2);
}

uint64_t sub_2528FB844(void *a1)
{
  return Skeleton.Topology.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Skeleton.Topology()
{
  return &type metadata for Skeleton.Topology;
}

unsigned char *_s8TopologyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2528FB93CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TopologyO10CodingKeysOMa()
{
  return &_s8TopologyO10CodingKeysON;
}

ValueMetadata *_s8TopologyO14NoneCodingKeysOMa()
{
  return &_s8TopologyO14NoneCodingKeysON;
}

ValueMetadata *_s8TopologyO20LowDensityCodingKeysOMa()
{
  return &_s8TopologyO20LowDensityCodingKeysON;
}

ValueMetadata *_s8TopologyO23MediumDensityCodingKeysOMa()
{
  return &_s8TopologyO23MediumDensityCodingKeysON;
}

ValueMetadata *_s8TopologyO21HighDensityCodingKeysOMa()
{
  return &_s8TopologyO21HighDensityCodingKeysON;
}

ValueMetadata *_s8TopologyO18LeftHandCodingKeysOMa()
{
  return &_s8TopologyO18LeftHandCodingKeysON;
}

ValueMetadata *_s8TopologyO19RightHandCodingKeysOMa()
{
  return &_s8TopologyO19RightHandCodingKeysON;
}

unint64_t sub_2528FB9D8()
{
  unint64_t result = qword_269C32B98;
  if (!qword_269C32B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32B98);
  }
  return result;
}

unint64_t sub_2528FBA30()
{
  unint64_t result = qword_269C32BA0;
  if (!qword_269C32BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BA0);
  }
  return result;
}

unint64_t sub_2528FBA88()
{
  unint64_t result = qword_269C32BA8;
  if (!qword_269C32BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BA8);
  }
  return result;
}

unint64_t sub_2528FBAE0()
{
  unint64_t result = qword_269C32BB0;
  if (!qword_269C32BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BB0);
  }
  return result;
}

unint64_t sub_2528FBB38()
{
  unint64_t result = qword_269C32BB8;
  if (!qword_269C32BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BB8);
  }
  return result;
}

unint64_t sub_2528FBB90()
{
  unint64_t result = qword_269C32BC0;
  if (!qword_269C32BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BC0);
  }
  return result;
}

unint64_t sub_2528FBBE8()
{
  unint64_t result = qword_269C32BC8;
  if (!qword_269C32BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BC8);
  }
  return result;
}

unint64_t sub_2528FBC40()
{
  unint64_t result = qword_269C32BD0;
  if (!qword_269C32BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BD0);
  }
  return result;
}

unint64_t sub_2528FBC98()
{
  unint64_t result = qword_269C32BD8;
  if (!qword_269C32BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BD8);
  }
  return result;
}

unint64_t sub_2528FBCF0()
{
  unint64_t result = qword_269C32BE0;
  if (!qword_269C32BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BE0);
  }
  return result;
}

unint64_t sub_2528FBD48()
{
  unint64_t result = qword_269C32BE8;
  if (!qword_269C32BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BE8);
  }
  return result;
}

unint64_t sub_2528FBDA0()
{
  unint64_t result = qword_269C32BF0;
  if (!qword_269C32BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BF0);
  }
  return result;
}

unint64_t sub_2528FBDF8()
{
  unint64_t result = qword_269C32BF8;
  if (!qword_269C32BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32BF8);
  }
  return result;
}

unint64_t sub_2528FBE50()
{
  unint64_t result = qword_269C32C00;
  if (!qword_269C32C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32C00);
  }
  return result;
}

unint64_t sub_2528FBEA8()
{
  unint64_t result = qword_269C32C08;
  if (!qword_269C32C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32C08);
  }
  return result;
}

uint64_t sub_2528FBEFC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69736E6544776F6CLL && a2 == 0xEA00000000007974 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65446D756964656DLL && a2 == 0xED0000797469736ELL || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E654468676968 && a2 == 0xEB00000000797469 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E61487466656CLL && a2 == 0xE800000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E61487468676972 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2528FC180(char a1)
{
  if (a1)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    sub_2528BCAB8();
    uint64_t v2 = swift_allocError();
    *(void *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 8) = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    swift_allocError();
    uint64_t *v4 = v2;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_2528FC230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_2528FC284()
{
  return MEMORY[0x270FA2498](sub_2528FC2A0, 0, 0);
}

uint64_t sub_2528FC2A0()
{
  uint64_t v1 = self;
  uint64_t v2 = *MEMORY[0x263EF9D50];
  v0[16] = v1;
  v0[17] = v2;
  id v3 = objc_msgSend(v1, sel_authorizationStatusForMediaType_);
  if (v3 == (id)2)
  {
    sub_2528BCAB8();
    swift_allocError();
    *(void *)uint64_t v4 = 0;
LABEL_9:
    *(unsigned char *)(v4 + 8) = 1;
    swift_willThrow();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  if (v3 == (id)1)
  {
    sub_2528BCAB8();
    swift_allocError();
    *(void *)uint64_t v4 = 1;
    goto LABEL_9;
  }
  if (!v3)
  {
    return MEMORY[0x270FA2498](sub_2528FC3E8, 0, 0);
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return v5();
}

uint64_t sub_2528FC3E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  id v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0[17];
  char v6 = (void *)v1[16];
  v1[2] = v2;
  v1[3] = sub_2528FC538;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  v1[14] = sub_2528FC650;
  v1[15] = v8;
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 1107296256;
  v1[12] = sub_2528FC230;
  v1[13] = &block_descriptor_1;
  uint64_t v9 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v6, sel_requestAccessForMediaType_completionHandler_, v5, v9);
  _Block_release(v9);
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_2528FC538()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_2528FC640()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2528FC650(char a1)
{
  return sub_2528FC180(a1);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2528FC670@<X0>(__CVBuffer *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v67 = sub_2529516A8();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  long long v65 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_252951A08();
  uint64_t v85 = *(char **)(v76 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v76);
  char v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v63 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v88 = (char *)&v63 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v63 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v84 = (char *)&v63 - v22;
  MEMORY[0x270FA5388](v21);
  long long v87 = (char *)&v63 - v23;
  BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(a1, 0);
  int64_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(a1, 0);
  size_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(a1, 0);
  int64_t BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(a1, 0);
  uint64_t v27 = (void (*)(char *, char *, uint64_t))CVPixelBufferGetBaseAddressOfPlane(a1, 1uLL);
  int64_t v78 = CVPixelBufferGetHeightOfPlane(a1, 1uLL);
  size_t v77 = CVPixelBufferGetWidthOfPlane(a1, 1uLL);
  uint64_t result = CVPixelBufferGetBytesPerRowOfPlane(a1, 1uLL);
  if (BaseAddressOfPlane)
  {
    if ((unsigned __int128)(HeightOfPlane * (__int128)BytesPerRowOfPlane) >> 64 != (HeightOfPlane * BytesPerRowOfPlane) >> 63)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    int64_t v29 = HeightOfPlane;
  }
  else
  {
    int64_t v29 = HeightOfPlane;
  }
  unint64_t v64 = v6;
  uint64_t v81 = v15;
  uint64_t v82 = v9;
  BOOL v80 = v12;
  if (!v27)
  {
    char v74 = 0;
    char v75 = 0;
    goto LABEL_9;
  }
  if ((unsigned __int128)(v78 * (__int128)result) >> 64 == (v78 * result) >> 63)
  {
    char v74 = v27;
    char v75 = (char *)v27 + v78 * result;
LABEL_9:
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t v30 = swift_allocObject();
    long long v83 = xmmword_252953970;
    *(_OWORD *)(v30 + 16) = xmmword_252953970;
    int64_t v79 = v29;
    size_t v31 = WidthOfPlane;
    *(void *)(v30 + 32) = v29;
    *(void *)(v30 + 40) = v31;
    *(void *)(v30 + 48) = 1;
    char v71 = (void (*)(void))sub_252951288();
    uint64_t v32 = *((void *)v71 - 1);
    uint64_t v33 = *(void *)(v32 + 64);
    MEMORY[0x270FA5388](v71);
    unint64_t v72 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    unsigned int v70 = *MEMORY[0x263F06EF8];
    char v69 = *(void (**)(char *))(v32 + 104);
    v69((char *)&v63 - v72);
    uint64_t v34 = v88;
    sub_252951688();
    sub_252951878();
    uint64_t v35 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
    uint64_t v36 = v76;
    v35(v34, v76);
    uint64_t v37 = v84;
    sub_252951668();
    v35(v20, v36);
    sub_2529516C8();
    sub_252951718();
    v35(v20, v36);
    v35(v37, v36);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v83;
    size_t v39 = v77;
    *(void *)(v38 + 32) = v78;
    *(void *)(v38 + 40) = v39;
    *(void *)(v38 + 48) = 2;
    MEMORY[0x270FA5388](v38);
    ((void (*)(char *, void, void (*)(void)))v69)((char *)&v63 - v72, v70, v71);
    sub_252951688();
    sub_252951878();
    v35(v34, v36);
    sub_252951668();
    char v40 = v35;
    v35(v20, v36);
    uint64_t result = sub_252951908();
    uint64_t v41 = *(void *)(result + 16);
    if (v41)
    {
      uint64_t v42 = v85;
      uint64_t v44 = (uint64_t)(v85 + 16);
      uint64_t v43 = (uint64_t (*)(char *, unint64_t, uint64_t))*((void *)v85 + 2);
      unint64_t v45 = (v85[80] + 32) & ~(unint64_t)v85[80];
      size_t v77 = v85[80];
      int64_t v78 = v45;
      unint64_t v46 = result + v45;
      uint64_t result = v43(v20, result + v45, v36);
      if (v41 != 1)
      {
        char v75 = (char *)*((void *)v42 + 9);
        v43(v88, (unint64_t)&v75[v46], v36);
        swift_bridgeObjectRelease();
        uint64_t v47 = v80;
        sub_2529516C8();
        sub_252951718();
        uint64_t v48 = v40;
        v40(v47, v36);
        LODWORD(v72) = *MEMORY[0x263F00C08];
        uint64_t v85 = v20;
        uint64_t v49 = v66;
        uint64_t v73 = v44;
        char v74 = (void (*)(char *, char *, uint64_t))v43;
        uint64_t v50 = v36;
        char v71 = *(void (**)(void))(v66 + 104);
        uint64_t v51 = v65;
        uint64_t v52 = v67;
        v71(v65);
        sub_252951978();
        uint64_t v53 = *(void (**)(char *, uint64_t))(v49 + 8);
        v53(v51, v52);
        uint64_t v54 = v64;
        sub_2529516C8();
        sub_252951718();
        v48(v54, v50);
        ((void (*)(char *, void, uint64_t))v71)(v51, v72, v52);
        sub_252951978();
        v53(v51, v52);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
        uint64_t v55 = 2 * (void)v75;
        uint64_t v56 = v75;
        int64_t v57 = v78;
        uint64_t v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = v83;
        uint64_t v59 = v58 + v57;
        uint64_t v60 = v74;
        v74((char *)v59, v87, v50);
        uint64_t v61 = &v56[v59];
        uint64_t v62 = v80;
        v60(v61, v80, v50);
        v60((char *)(v59 + v55), v54, v50);
        uint64_t v89 = v58;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
        sub_2528D2658();
        sub_2529516D8();
        v48(v54, v50);
        v48(v82, v50);
        v48(v62, v50);
        v48(v81, v50);
        v48(v88, v50);
        v48(v85, v50);
        v48(v84, v50);
        return ((uint64_t (*)(char *, uint64_t))v48)(v87, v50);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2528FCFD4@<X0>(__CVBuffer *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_252951A08();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v47 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v47 - v16;
  if (CVPixelBufferGetPixelFormatType(a1) != 1111970369)
  {
    type metadata accessor for VideoError();
    sub_2528E5B08();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v52 = a2;
  uint64_t v53 = v2;
  uint64_t v18 = v6;
  uint64_t v55 = v15;
  int64_t BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  size_t Width = CVPixelBufferGetWidth(a1);
  int64_t Height = CVPixelBufferGetHeight(a1);
  uint64_t result = (uint64_t)CVPixelBufferGetBaseAddress(a1);
  if (!result)
  {
    sub_2528AE4D0();
    swift_allocError();
    *(_OWORD *)uint64_t v46 = 0u;
    *(_OWORD *)(v46 + 16) = 0u;
    *(unsigned char *)(v46 + 32) = 6;
    return swift_willThrow();
  }
  if ((unsigned __int128)(Height * (__int128)BytesPerRow) >> 64 != (Height * BytesPerRow) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v54 = result + Height * BytesPerRow;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v23 = swift_allocObject();
  long long v49 = xmmword_252953970;
  *(_OWORD *)(v23 + 16) = xmmword_252953970;
  *(void *)(v23 + 32) = Height;
  *(void *)(v23 + 40) = Width;
  *(void *)(v23 + 48) = 4;
  uint64_t v24 = sub_252951288();
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06EF8]);
  sub_252951688();
  uint64_t v27 = v56;
  sub_252951878();
  uint64_t v54 = v18;
  char v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v51 = v9;
  v28(v9, v5);
  int64_t v29 = v17;
  uint64_t v30 = v55;
  sub_252951668();
  v28(v27, v5);
  int v58 = 1132396544;
  sub_252951728();
  v28(v30, v5);
  uint64_t v50 = v29;
  uint64_t result = sub_252951908();
  unint64_t v31 = *(void *)(result + 16);
  if (!v31)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v48 = v28;
  uint64_t v32 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v54 + 16);
  unint64_t v47 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v33 = result + v47;
  uint64_t result = v32(v30, result + v47, v5);
  if (v31 != 1)
  {
    uint64_t v34 = *(void *)(v54 + 72);
    uint64_t result = v32(v56, v33 + v34, v5);
    if (v31 >= 3)
    {
      uint64_t v35 = 2 * v34;
      unint64_t v36 = v33 + 2 * v34;
      uint64_t v37 = v51;
      v32(v51, v36, v5);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
      unint64_t v38 = v47;
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v49;
      unint64_t v40 = v39 + v38;
      v32((char *)v40, (unint64_t)v37, v5);
      uint64_t v41 = (char *)(v40 + v34);
      uint64_t v42 = v56;
      v32(v41, (unint64_t)v56, v5);
      unint64_t v43 = v40 + v35;
      uint64_t v44 = v55;
      v32((char *)v43, (unint64_t)v55, v5);
      uint64_t v57 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
      sub_2528D2658();
      sub_2529516D8();
      unint64_t v45 = v48;
      v48(v37, v5);
      v45(v42, v5);
      v45(v44, v5);
      return ((uint64_t (*)(char *, uint64_t))v45)(v50, v5);
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2528FD570(uint64_t a1, uint64_t a2)
{
  v3[42] = a2;
  v3[43] = v2;
  v3[41] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  uint64_t v4 = sub_252951A08();
  v3[47] = v4;
  v3[48] = *(void *)(v4 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  v3[55] = v5;
  v3[39] = 0xD000000000000023;
  v3[40] = 0x800000025295A0D0;
  uint64_t v6 = (void *)swift_task_alloc();
  v3[56] = (uint64_t)v6;
  void *v6 = v3;
  v6[1] = sub_2528FD764;
  return SceneDescriptor.tensor(for:)(v5, v3 + 39);
}

uint64_t sub_2528FD764()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 344);
  if (v0) {
    uint64_t v4 = sub_2528FF4E0;
  }
  else {
    uint64_t v4 = sub_2528FD8B0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2528FD8B0()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = type metadata accessor for SceneDescriptor();
  *(void *)(v0 + 464) = v2;
  uint64_t v3 = *(int *)(v2 + 28);
  *(_DWORD *)(v0 + 648) = v3;
  uint64_t v4 = MEMORY[0x263F8EE78];
  switch(*(unsigned char *)(v1 + v3))
  {
    case 1:
      uint64_t v4 = sub_2528CCCF8();
      break;
    case 2:
      uint64_t v4 = sub_2528CC540();
      break;
    case 3:
      uint64_t v4 = sub_2528CD1C4();
      break;
    case 4:
      uint64_t v4 = sub_2528CE7D8();
      break;
    case 5:
      uint64_t v4 = sub_2528CEDBC();
      break;
    default:
      break;
  }
  *(void *)(v0 + 472) = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 248) = 0xD00000000000001DLL;
  *(void *)(v0 + 256) = 0x800000025295A150;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528FDA34;
  uint64_t v6 = *(void *)(v0 + 432);
  return SceneDescriptor.tensor(for:)(v6, (uint64_t *)(v0 + 248));
}

uint64_t sub_2528FDA34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 344);
  if (v0) {
    uint64_t v4 = sub_2528FF5F4;
  }
  else {
    uint64_t v4 = sub_2528FDB80;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2528FDB80()
{
  *(unsigned char *)(v0 + 652) = *(unsigned char *)(*(void *)(v0 + 336) + *(int *)(v0 + 648));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v1;
  void *v1 = v0;
  v1[1] = sub_2528FDC58;
  uint64_t v2 = *(void *)(v0 + 432);
  return sub_2528FFAD4(v2, (unsigned __int8 *)(v0 + 652));
}

uint64_t sub_2528FDC58(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v7 = *v1;
  v3[63] = a1;
  swift_task_dealloc();
  v3[37] = 0xD00000000000001DLL;
  v3[38] = 0x800000025295A0B0;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[64] = (uint64_t)v4;
  void *v4 = v7;
  v4[1] = sub_2528FDE0C;
  uint64_t v5 = v2[53];
  return SceneDescriptor.tensor(for:)(v5, v3 + 37);
}

uint64_t sub_2528FDE0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2528FF720;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 344);
    uint64_t v4 = sub_2528FDF80;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_2528FDF80()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v4 = sub_2529518F8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[66] = (uint64_t)v5;
  v0[67] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  if (*(void *)(v4 + 16) < 3uLL) {
    __break(1u);
  }
  v0[68] = *(void *)(v4 + 48);
  swift_bridgeObjectRelease();
  v0[35] = 0xD00000000000001DLL;
  v0[36] = 0x800000025295A0B0;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[69] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_2528FE0D4;
  uint64_t v7 = v0[52];
  return SceneDescriptor.tensor(for:)(v7, v0 + 35);
}

uint64_t sub_2528FE0D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2528FF864;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 344);
    uint64_t v4 = sub_2528FE248;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_2528FE248()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = sub_2529518F8();
  v1(v2, v3);
  if (*(void *)(v4 + 16) < 2uLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(int *)(v0 + 648);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v7 + v6) == 1) {
    uint64_t v9 = v5 - 5;
  }
  else {
    uint64_t v9 = v5;
  }
  if (v9 < 0) {
LABEL_27:
  }
    __break(1u);
  float v10 = (float)v8;
  uint64_t v11 = *(void *)(v0 + 504);
  if (v9)
  {
    uint64_t v12 = sub_2528C4204(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v13 = 0;
    while (v13 < *(void *)(v11 + 16))
    {
      float v14 = *(float *)(v11 + 4 * v13 + 32);
      unint64_t v16 = *((void *)v12 + 2);
      unint64_t v15 = *((void *)v12 + 3);
      unint64_t v17 = v16 + 1;
      if (v16 >= v15 >> 1) {
        uint64_t v12 = sub_2528C4204((char *)(v15 > 1), v16 + 1, 1, v12);
      }
      float v18 = v14 * (float)*(uint64_t *)(v0 + 544);
      *((void *)v12 + 2) = v17;
      *(float *)&v12[4 * v16 + 32] = v18;
      if (v13 + 1 >= *(void *)(v11 + 16)) {
        goto LABEL_25;
      }
      float v19 = *(float *)(v11 + 4 * v13 + 36);
      unint64_t v20 = *((void *)v12 + 3);
      int64_t v21 = v16 + 2;
      if (v21 > (uint64_t)(v20 >> 1)) {
        uint64_t v12 = sub_2528C4204((char *)(v20 > 1), v21, 1, v12);
      }
      *((void *)v12 + 2) = v21;
      *(float *)&v12[4 * v17 + 32] = v19 * v10;
      v13 += 3;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_17:
  *(void *)(v0 + 568) = v12;
  if ((float)*(uint64_t *)(v0 + 544) >= v10)
  {
    *(void *)(v0 + 264) = 0xD00000000000001DLL;
    *(void *)(v0 + 272) = 0x800000025295A170;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_2528FE7EC;
    uint64_t v26 = *(void *)(v0 + 400);
    return SceneDescriptor.tensor(for:)(v26, (uint64_t *)(v0 + 264));
  }
  else
  {
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v22;
    void *v22 = v0;
    v22[1] = sub_2528FE57C;
    uint64_t v23 = *(void *)(v0 + 408);
    return sub_25290012C(v23);
  }
}

uint64_t sub_2528FE57C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 344);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528FE6B8, v1, 0);
}

uint64_t sub_2528FE6B8()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 384);
  (*(void (**)(uint64_t, uint64_t))(v0 + 528))(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  *(void *)(v0 + 264) = 0xD00000000000001DLL;
  *(void *)(v0 + 272) = 0x800000025295A170;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2528FE7EC;
  uint64_t v6 = *(void *)(v0 + 400);
  return SceneDescriptor.tensor(for:)(v6, (uint64_t *)(v0 + 264));
}

uint64_t sub_2528FE7EC()
{
  uint64_t v2 = (void *)*v1;
  v2[74] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[43];
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_2528FF99C, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[75] = v4;
    void *v4 = v2;
    v4[1] = sub_2528FE9CC;
    uint64_t v5 = MEMORY[0x263F8D5C8];
    uint64_t v6 = MEMORY[0x263F00C50];
    uint64_t v7 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE7870](v7, v5, v6);
  }
}

uint64_t sub_2528FE9CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 344);
  *(void *)(*(void *)v1 + 608) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528FEB10, v2, 0);
}

uint64_t sub_2528FEB10()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 608);
  if (v1)
  {
    uint64_t v3 = 0;
    int v4 = *(unsigned __int8 *)(*(void *)(v0 + 336) + *(int *)(v0 + 648));
    uint64_t v5 = v2 + 32;
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (v4 != 1
        || v3 != 7
        && v3
        && v3 != qword_2702D03D8
        && (v3 != qword_2702D03E0 ? (BOOL v8 = v3 == unk_2702D03E8) : (BOOL v8 = 1), !v8))
      {
        unint64_t v9 = 3 * v3;
        if ((unsigned __int128)(v3 * (__int128)3) >> 64 != (3 * v3) >> 63)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
        }
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_32;
        }
        unint64_t v10 = *(void *)(v2 + 16);
        if (v9 >= v10) {
          goto LABEL_33;
        }
        if (v9 + 1 >= v10) {
          goto LABEL_34;
        }
        if (v9 + 2 >= v10) {
          goto LABEL_35;
        }
        unsigned int v25 = *(_DWORD *)(v5 + 12 * v3);
        unsigned int v26 = *(_DWORD *)(v5 + 4 * (v9 + 1));
        unsigned int v27 = *(_DWORD *)(v5 + 4 * (v9 + 2));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_2528C46B4(0, v6[2] + 1, 1, v6);
        }
        unint64_t v12 = v6[2];
        unint64_t v11 = v6[3];
        if (v12 >= v11 >> 1) {
          uint64_t v6 = sub_2528C46B4((void *)(v11 > 1), v12 + 1, 1, v6);
        }
        *(void *)&long long v7 = __PAIR64__(v26, v25);
        *((void *)&v7 + 1) = v27;
        uint64_t v6[2] = v12 + 1;
        *(_OWORD *)&v6[2 * v12 + 4] = v7;
        uint64_t v1 = *(void *)(v0 + 472);
      }
      if (++v3 == v1) {
        goto LABEL_24;
      }
    }
  }
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
LABEL_24:
  *(void *)(v0 + 616) = v6;
  uint64_t v13 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v13 + 176))
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0x3F80000000000000;
    uint64_t v19 = 1065353216;
    uint64_t v20 = 1065353216;
    uint64_t v21 = 0x3F80000000000000;
  }
  else
  {
    uint64_t v19 = *(void *)(v13 + 112);
    uint64_t v14 = *(void *)(v13 + 120);
    uint64_t v18 = *(void *)(v13 + 128);
    uint64_t v15 = *(void *)(v13 + 136);
    uint64_t v16 = *(void *)(v13 + 144);
    uint64_t v20 = *(void *)(v13 + 152);
    uint64_t v17 = *(void *)(v13 + 160);
    uint64_t v21 = *(void *)(v13 + 168);
  }
  *(void *)(v0 + 16) = v19;
  *(void *)(v0 + 24) = v14;
  *(void *)(v0 + 32) = v18;
  *(void *)(v0 + 40) = v15;
  *(void *)(v0 + 48) = v16;
  *(void *)(v0 + 56) = v20;
  *(void *)(v0 + 64) = v17;
  *(void *)(v0 + 72) = v21;
  unint64_t v22 = v6[2];
  *(void *)(v0 + 624) = v22;
  if (v22 >> 31) {
    goto LABEL_36;
  }
  *(void *)(v0 + 632) = *(void *)(*(void *)(v0 + 344) + OBJC_IVAR____TtC5Human8Anchorer_pnpSolver);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 640) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_2528FEDF0;
  return MLTensor.matrix3x3()(v0 + 80);
}

uint64_t sub_2528FEDF0()
{
  uint64_t v1 = *(_OWORD **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 344);
  swift_task_dealloc();
  long long v3 = v1[6];
  v1[8] = v1[5];
  v1[9] = v3;
  v1[10] = v1[7];
  return MEMORY[0x270FA2498](sub_2528FEF44, v2, 0);
}

uint64_t sub_2528FEF44()
{
  unsigned __int8 v1 = objc_msgSend(*(id *)(v0 + 632), sel_solveWithImagePoints_modelPoints_numImagePoints_cameraIntrinsics_transform_, *(void *)(v0 + 568) + 32, *(void *)(v0 + 616) + 32, *(unsigned int *)(v0 + 624), v0 + 16, *(double *)(v0 + 128), *(double *)(v0 + 144), *(double *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v59 = *(void *)(v0 + 464);
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    uint64_t v67 = *(void *)(v0 + 440);
    uint64_t v63 = *(void *)(v0 + 432);
    uint64_t v2 = *(void *)(v0 + 400);
    uint64_t v3 = *(void *)(v0 + 376);
    uint64_t v4 = *(void *)(v0 + 384);
    uint64_t v6 = *(void *)(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 360);
    long long v7 = *(float32x4_t **)(v0 + 344);
    uint64_t v56 = *(void *)(v0 + 336);
    uint64_t v57 = *(void *)(v0 + 408);
    uint64_t v8 = *(void *)(v0 + 328);
    float32x4_t v52 = *(float32x4_t *)(v0 + 32);
    float32x4_t v54 = *(float32x4_t *)(v0 + 16);
    float32x4_t v48 = *(float32x4_t *)(v0 + 64);
    float32x4_t v50 = *(float32x4_t *)(v0 + 48);
    v7[7] = v54;
    v7[8] = v52;
    v7[9] = v50;
    v7[10] = v48;
    v7[11].i8[0] = 0;
    *(double *)v9.i64 = simd_matrix4x4((float32x4_t)_PromotedConst);
    int8x16_t v55 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, v54.f32[0]), v10, *(float32x2_t *)v54.f32, 1), v11, v54, 2), v12, v54, 3);
    int8x16_t v53 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, v52.f32[0]), v10, *(float32x2_t *)v52.f32, 1), v11, v52, 2), v12, v52, 3);
    int8x16_t v51 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, v50.f32[0]), v10, *(float32x2_t *)v50.f32, 1), v11, v50, 2), v12, v50, 3);
    int8x16_t v49 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, v48.f32[0]), v10, *(float32x2_t *)v48.f32, 1), v11, v48, 2), v12, v48, 3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
    uint64_t v13 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56);
    v13(v5, 0, 1, v3);
    sub_2529007FC(v5, v6);
    uint64_t v14 = (uint64_t)v7 + OBJC_IVAR____TtC5Human8Anchorer_previousSkeleton3D;
    swift_beginAccess();
    sub_2528FA264(v6, v14);
    swift_endAccess();
    sub_2528CA438(v56, v8);
    MLTensor.init(matrix4x4:)(v55, v53, v51, v49);
    uint64_t v15 = v8 + *(int *)(v59 + 56);
    sub_2528AE5CC(v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v15, v57, v3);
    v13(v15, 0, 1, v3);
    v61(v2, v3);
    v61(v63, v3);
    v61(v67, v3);
    goto LABEL_9;
  }
  uint64_t v16 = *(void *)(v0 + 376);
  uint64_t v17 = *(void *)(v0 + 384);
  uint64_t v18 = *(void *)(v0 + 368);
  uint64_t v19 = *(void *)(v0 + 344) + OBJC_IVAR____TtC5Human8Anchorer_previousSkeleton3D;
  swift_beginAccess();
  sub_2528D68A4(v19, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v22 = *(void *)(v0 + 440);
    uint64_t v24 = *(void *)(v0 + 368);
    uint64_t v23 = *(void *)(v0 + 376);
    uint64_t v26 = *(void *)(v0 + 328);
    uint64_t v25 = *(void *)(v0 + 336);
    v20(*(void *)(v0 + 400), v23);
    v20(v21, v23);
    v20(v22, v23);
    sub_2528AE5CC(v24);
    uint64_t v27 = v25;
    uint64_t v28 = v26;
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 344);
    (*(void (**)(void, void, void))(*(void *)(v0 + 384) + 32))(*(void *)(v0 + 392), *(void *)(v0 + 368), *(void *)(v0 + 376));
    uint64_t v30 = OBJC_IVAR____TtC5Human8Anchorer_retriesRemaining;
    uint64_t v31 = *(void *)(v29 + OBJC_IVAR____TtC5Human8Anchorer_retriesRemaining);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    BOOL v33 = v31 < 1;
    uint64_t v34 = v31 - 1;
    if (!v33)
    {
      uint64_t v35 = *(void *)(v0 + 464);
      uint64_t v65 = *(void *)(v0 + 432);
      uint64_t v68 = *(void *)(v0 + 440);
      uint64_t v36 = *(void *)(v0 + 392);
      uint64_t v64 = *(void *)(v0 + 400);
      uint64_t v37 = *(void *)(v0 + 376);
      uint64_t v38 = *(void *)(v0 + 384);
      uint64_t v40 = *(void *)(v0 + 328);
      uint64_t v39 = *(void *)(v0 + 336);
      *(void *)(v29 + OBJC_IVAR____TtC5Human8Anchorer_retriesRemaining) = v34;
      sub_2528CA438(v39, v40);
      uint64_t v41 = v40 + *(int *)(v35 + 44);
      sub_2528AE5CC(v41);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v41, v36, v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      v32(v36, v37);
      v32(v64, v37);
      v32(v65, v37);
      v32(v68, v37);
      goto LABEL_9;
    }
    uint64_t v58 = *(void *)(v0 + 432);
    uint64_t v60 = *(void *)(v0 + 440);
    uint64_t v42 = *(void *)(v0 + 400);
    uint64_t v44 = *(void *)(v0 + 376);
    uint64_t v43 = *(void *)(v0 + 384);
    uint64_t v62 = *(void *)(v0 + 360);
    uint64_t v45 = *(void *)(v0 + 344);
    uint64_t v66 = *(void *)(v0 + 328);
    uint64_t v69 = *(void *)(v0 + 336);
    v32(*(void *)(v0 + 392), v44);
    v32(v42, v44);
    v32(v58, v44);
    v32(v60, v44);
    *(void *)(v29 + v30) = 5;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v62, 1, 1, v44);
    swift_beginAccess();
    sub_2528FA264(v62, v19);
    swift_endAccess();
    *(_OWORD *)(v45 + 144) = 0u;
    *(_OWORD *)(v45 + 160) = 0u;
    *(_OWORD *)(v45 + 112) = 0u;
    *(_OWORD *)(v45 + 128) = 0u;
    *(unsigned char *)(v45 + 176) = 1;
    uint64_t v28 = v66;
    uint64_t v27 = v69;
  }
  sub_2528CA438(v27, v28);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_2528FF4E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2528FF5F4()
{
  (*(void (**)(void, void))(v0[48] + 8))(v0[55], v0[47]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2528FF720()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[47];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[48] + 8);
  v3(v0[54], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2528FF864()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[66];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[47];
  v1(v0[54], v3);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2528FF99C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[66];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[47];
  v1(v0[54], v3);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2528FFAD4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = v3;
  v3[2] = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[3] = v6;
  v3[4] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v5[5] = v7;
  int v8 = *a2;
  float32x4_t v9 = (void *)swift_task_alloc();
  v5[6] = v9;
  void *v9 = v5;
  if (v8 == 1) {
    float32x4_t v10 = sub_2528FFC2C;
  }
  else {
    float32x4_t v10 = sub_2528FFEAC;
  }
  v9[1] = v10;
  uint64_t v11 = MEMORY[0x263F8D5C8];
  uint64_t v12 = MEMORY[0x263F00C58];
  uint64_t v13 = MEMORY[0x263F00C50];
  uint64_t v14 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v7, v11, v14, v12, v13);
}

uint64_t sub_2528FFC2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528FFD3C, v1, 0);
}

uint64_t sub_2528FFD3C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_2528FA15C();
  uint64_t v4 = sub_2529515D8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = 0x20u;
  do
  {
    unint64_t v8 = *(void *)((char *)&unk_2702CFFA8 + v7);
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_13:
      __break(1u);
      return result;
    }
    if (v8 >= *(void *)(v4 + 16)) {
      goto LABEL_13;
    }
    int v9 = *(_DWORD *)(v4 + 32 + 4 * v8);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2528C4204(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
      uint64_t v6 = result;
    }
    unint64_t v11 = *(void *)(v6 + 16);
    unint64_t v10 = *(void *)(v6 + 24);
    if (v11 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_2528C4204((char *)(v10 > 1), v11 + 1, 1, (char *)v6);
      uint64_t v6 = result;
    }
    *(void *)(v6 + 16) = v11 + 1;
    *(_DWORD *)(v6 + 4 * v11 + 32) = v9;
    v7 += 8;
  }
  while (v7 != 320);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v6);
}

uint64_t sub_2528FFEAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2528FFFBC, v1, 0);
}

uint64_t sub_2528FFFBC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_2528FA15C();
  uint64_t v4 = sub_2529515D8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = 0x20u;
  do
  {
    unint64_t v8 = *(void *)((char *)&unk_2702D00E8 + v7);
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_13:
      __break(1u);
      return result;
    }
    if (v8 >= *(void *)(v4 + 16)) {
      goto LABEL_13;
    }
    int v9 = *(_DWORD *)(v4 + 32 + 4 * v8);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2528C4204(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
      uint64_t v6 = result;
    }
    unint64_t v11 = *(void *)(v6 + 16);
    unint64_t v10 = *(void *)(v6 + 24);
    if (v11 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_2528C4204((char *)(v10 > 1), v11 + 1, 1, (char *)v6);
      uint64_t v6 = result;
    }
    *(void *)(v6 + 16) = v11 + 1;
    *(_DWORD *)(v6 + 4 * v11 + 32) = v9;
    v7 += 8;
  }
  while (v7 != 704);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v6);
}

uint64_t sub_25290012C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[12] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[13] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_252900250;
  uint64_t v6 = MEMORY[0x263F8D5C8];
  uint64_t v7 = MEMORY[0x263F00C58];
  uint64_t v8 = MEMORY[0x263F00C50];
  uint64_t v9 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v4, v6, v9, v7, v8);
}

uint64_t sub_252900250()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252900360, v1, 0);
}

uint64_t sub_252900360()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_2528FA15C();
  uint64_t v4 = sub_2529515D8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v8 = *(void *)(v4 + 16);
  if (v8 < 5)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v8 == 5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 < 7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 == 7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 < 9)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v7.i32[0] = *(_DWORD *)(v4 + 48);
  LODWORD(v6) = *(_DWORD *)(v4 + 52);
  __int32 v17 = *(_DWORD *)(v4 + 56);
  v9.i64[0] = *(unsigned int *)(v4 + 44);
  v9.i64[1] = *(unsigned int *)(v4 + 32);
  v7.i32[1] = v17;
  v7.i32[2] = *(_DWORD *)(v4 + 36);
  int32x4_t v14 = v7;
  int32x4_t v15 = v9;
  int32x4_t v10 = vzip2q_s32(v7, v9);
  v10.i32[2] = *(_DWORD *)(v4 + 60);
  int32x4_t v16 = v10;
  DWORD1(v6) = *(_DWORD *)(v4 + 40);
  DWORD2(v6) = *(_DWORD *)(v4 + 64);
  long long v13 = v6;
  swift_bridgeObjectRelease();
  int32x4_t v11 = vzip1q_s32(v14, v15);
  v11.i32[2] = v17;
  *(int32x4_t *)(v0 + 16) = v11;
  *(int32x4_t *)(v0 + 32) = v16;
  *(_OWORD *)(v0 + 48) = v13;
  MLTensor.init(matrix3x3:)(v0 + 16);
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_2529004C8()
{
  sub_2528AE5CC(v0 + OBJC_IVAR____TtC5Human8Anchorer_previousSkeleton3D);

  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_252900518()
{
  return type metadata accessor for Anchorer();
}

uint64_t type metadata accessor for Anchorer()
{
  uint64_t result = qword_269C32C30;
  if (!qword_269C32C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25290056C()
{
  sub_25290062C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_25290062C()
{
  if (!qword_269C32C58)
  {
    sub_252951A08();
    unint64_t v0 = sub_252951DC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269C32C58);
    }
  }
}

uint64_t sub_252900684(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_2528FD570(a1, a2);
}

double simd_matrix4x4(float32x4_t a1)
{
  _S3 = a1.i32[1];
  _S5 = a1.i32[2];
  __asm { FMLS            S1, S5, V0.S[2] }
  _S7 = a1.i32[3];
  __asm { FMLA            S1, S7, V0.S[3] }
  float v10 = vmlas_n_f32(vmuls_lane_f32(a1.f32[2], a1, 3), a1.f32[1], a1.f32[0]);
  LODWORD(v11) = _S1;
  *((float *)&v11 + 1) = v10 + v10;
  __asm
  {
    FMLA            S6, S3, V0.S[1]
    FMLA            S6, S7, V0.S[3]
    FMLS            S6, S0, V0.S[0]
    FMLA            S18, S5, V0.S[1]
    FMLA            S17, S0, V0.S[2]
    FMLA            S16, S5, V0.S[1]
    FMLA            S7, S5, V0.S[2]
    FMLS            S7, S0, V0.S[0]
    FMLS            S7, S3, V0.S[1]
  }
  return v11;
}

uint64_t sub_2529007FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL Skeleton.Keypoint.isValid.getter()
{
  return *(float *)(v0 + 40) >= 0.6;
}

uint64_t Skeleton.Keypoint.kind.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Skeleton.Keypoint.index.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Skeleton.Keypoint.parentIndex.getter()
{
  return *(void *)(v0 + 24);
}

double Skeleton.Keypoint.location.getter()
{
  return *(double *)(v0 + 32);
}

float Skeleton.Keypoint.confidence.getter()
{
  return *(float *)(v0 + 40);
}

float static Skeleton.Keypoint.threshold.getter()
{
  return 0.6;
}

uint64_t Skeleton.Keypoint.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t Skeleton.Keypoint.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_252900934()
{
  return sub_2529521C8();
}

uint64_t sub_25290097C()
{
  return sub_2529521A8();
}

uint64_t sub_2529009A8()
{
  return sub_2529521C8();
}

uint64_t _s5Human8SkeletonV8KeypointV2eeoiySbAE_AEtFZ_0(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2 = a1[2];
  float32x2_t v3 = a1[3];
  float32x2_t v4 = a1[4];
  __int32 v5 = a1[5].i32[0];
  float32x2_t v7 = a2[2];
  float32x2_t v6 = a2[3];
  float32x2_t v8 = a2[4];
  __int32 v9 = a2[5].i32[0];
  if (*a1 == *a2 && *(void *)&a1[1] == *(void *)&a2[1])
  {
    char v10 = 0;
    if (*(void *)&v2 != *(void *)&v7 || *(void *)&v3 != *(void *)&v6 || (vceq_f32(v4, v8).u32[0] & 1) == 0) {
      return v10 & 1;
    }
LABEL_11:
    v4.i32[0] = v5;
    v8.i32[0] = v9;
    int32x2_t v12 = vceq_f32(v4, v8);
    char v10 = v12.i8[4] & v12.i8[0];
    return v10 & 1;
  }
  __int32 v14 = a2[5].i32[0];
  __int32 v15 = a1[5].i32[0];
  float32x2_t v16 = a2[4];
  float32x2_t v17 = a1[4];
  char v11 = sub_252952108();
  char v10 = 0;
  if ((v11 & 1) != 0 && *(void *)&v2 == *(void *)&v7 && *(void *)&v3 == *(void *)&v6)
  {
    v8.i32[1] = v16.i32[1];
    v4.i32[1] = v17.i32[1];
    __int32 v9 = v14;
    __int32 v5 = v15;
    if (vceq_f32(v17, v16).u32[0]) {
      goto LABEL_11;
    }
  }
  return v10 & 1;
}

unint64_t sub_252900AD8()
{
  unint64_t result = qword_269C32C68;
  if (!qword_269C32C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32C68);
  }
  return result;
}

uint64_t _s8KeypointVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8KeypointVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy44_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8KeypointVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t _s8KeypointVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8KeypointVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton.Keypoint()
{
  return &type metadata for Skeleton.Keypoint;
}

uint64_t Skeleton.Bone.isValid.getter()
{
  return *(unsigned char *)(v0 + 192) & *(unsigned char *)(v0 + 400) & 1;
}

float Skeleton.Bone.length.getter(double a1, double a2, float32x4_t a3)
{
  *(float32x2_t *)a3.f32 = vsub_f32(v3[48], v3[22]);
  a3.f32[2] = v3[49].f32[0] - v3[23].f32[0];
  float32x4_t v4 = vmulq_f32(a3, a3);
  return sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
}

double Skeleton.Bone.unitDirection.getter(double a1, double a2, float32x4_t a3)
{
  *(float32x2_t *)a3.f32 = vsub_f32(v3[48], v3[22]);
  a3.f32[2] = v3[49].f32[0] - v3[23].f32[0];
  int32x4_t v4 = (int32x4_t)vmulq_f32(a3, a3);
  v4.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v4, 2), vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1))).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  *(void *)&double result = vmulq_n_f32(a3, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]).u64[0];
  return result;
}

uint64_t Skeleton.Bone.parent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  long long v4 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 80);
  long long v8 = *(_OWORD *)(v1 + 96);
  long long v9 = *(_OWORD *)(v1 + 112);
  long long v10 = *(_OWORD *)(v1 + 128);
  long long v11 = *(_OWORD *)(v1 + 144);
  long long v12 = *(_OWORD *)(v1 + 160);
  long long v13 = *(_OWORD *)(v1 + 176);
  char v14 = *(unsigned char *)(v1 + 192);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v11;
  *(_OWORD *)(a1 + 160) = v12;
  *(_OWORD *)(a1 + 176) = v13;
  *(unsigned char *)(a1 + 192) = v14;
  return swift_bridgeObjectRetain();
}

uint64_t Skeleton.Bone.child.getter@<X0>(uint64_t a1@<X8>)
{
  long long v4 = *(_OWORD *)(v1 + 208);
  uint64_t v3 = v1 + 208;
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  long long v7 = *(_OWORD *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 48);
  long long v9 = *(_OWORD *)(v3 + 64);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v11 = *(_OWORD *)(v3 + 96);
  long long v12 = *(_OWORD *)(v3 + 112);
  long long v13 = *(_OWORD *)(v3 + 128);
  long long v14 = *(_OWORD *)(v3 + 144);
  long long v15 = *(_OWORD *)(v3 + 160);
  long long v16 = *(_OWORD *)(v3 + 176);
  char v17 = *(unsigned char *)(v3 + 192);
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v10;
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v13;
  *(_OWORD *)(a1 + 144) = v14;
  *(_OWORD *)(a1 + 160) = v15;
  *(_OWORD *)(a1 + 176) = v16;
  *(unsigned char *)(a1 + 192) = v17;
  return swift_bridgeObjectRetain();
}

uint64_t Skeleton.Bone.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t Skeleton.Bone.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_252900ED0()
{
  return sub_2529521C8();
}

uint64_t sub_252900F30()
{
  return sub_2529521A8();
}

uint64_t sub_252900F70()
{
  return sub_2529521C8();
}

uint64_t _s5Human8SkeletonV4BoneV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[28];
  uint64_t v3 = a1[29];
  uint64_t v4 = a2[28];
  uint64_t v5 = a2[29];
  BOOL v6 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v6 || (char v7 = sub_252952108(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_252952108();
    }
  }
  return result;
}

unint64_t sub_252901078()
{
  unint64_t result = qword_269C32C70;
  if (!qword_269C32C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32C70);
  }
  return result;
}

uint64_t _s4BoneVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s4BoneVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v9 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v9;
  long long v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v10;
  long long v11 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v11;
  long long v12 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v12;
  long long v13 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v13;
  long long v14 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v14;
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4BoneVwca(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v2 + 3);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a1 + 80) = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)v2 + 6);
  *(_OWORD *)(a1 + 112) = *((_OWORD *)v2 + 7);
  *(_OWORD *)(a1 + 128) = *((_OWORD *)v2 + 8);
  *(_OWORD *)(a1 + 144) = *((_OWORD *)v2 + 9);
  *(_OWORD *)(a1 + 160) = *((_OWORD *)v2 + 10);
  *(_OWORD *)(a1 + 176) = *((_OWORD *)v2 + 11);
  *(unsigned char *)(a1 + 192) = *((unsigned char *)v2 + 192);
  uint64_t v4 = v2[26];
  v2 += 26;
  *(void *)(a1 + 208) = v4;
  *(void *)(a1 + 216) = v2[1];
  *(void *)(a1 + 224) = v2[2];
  *(void *)(a1 + 232) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(a1 + 256) = *((_OWORD *)v2 + 3);
  *(_OWORD *)(a1 + 272) = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a1 + 288) = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a1 + 304) = *((_OWORD *)v2 + 6);
  *(_OWORD *)(a1 + 320) = *((_OWORD *)v2 + 7);
  *(_OWORD *)(a1 + 336) = *((_OWORD *)v2 + 8);
  *(_OWORD *)(a1 + 352) = *((_OWORD *)v2 + 9);
  *(_OWORD *)(a1 + 368) = *((_OWORD *)v2 + 10);
  *(_OWORD *)(a1 + 384) = *((_OWORD *)v2 + 11);
  *(unsigned char *)(a1 + 400) = *((unsigned char *)v2 + 192);
  return a1;
}

void *__swift_memcpy401_16(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x191uLL);
}

uint64_t _s4BoneVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(v2 + 208);
  v2 += 208;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(v2 - 16);
  *(_OWORD *)(a1 + 208) = v10;
  uint64_t v11 = *(void *)(v2 + 24);
  *(void *)(a1 + 224) = *(void *)(v2 + 16);
  *(void *)(a1 + 232) = v11;
  swift_bridgeObjectRelease();
  long long v12 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a1 + 256) = v12;
  long long v13 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a1 + 288) = v13;
  long long v14 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(a1 + 320) = v14;
  long long v15 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a1 + 352) = v15;
  long long v16 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a1 + 384) = v16;
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(v2 + 192);
  return a1;
}

uint64_t _s4BoneVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 401)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4BoneVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 400) = 0;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 401) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 401) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skeleton.Bone()
{
  return &type metadata for Skeleton.Bone;
}

uint64_t destroy for HiFiHandPose3DEstimator(id *a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for HiFiHandPose3DEstimator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v22 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v22;
  uint64_t v23 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v23;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v24 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v24;
  uint64_t v25 = *(void **)(a2 + 152);
  uint64_t v26 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v25;
  *(void *)(a1 + 160) = v26;
  uint64_t v11 = *(void **)(a2 + 176);
  uint64_t v27 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v27;
  *(void *)(a1 + 176) = v11;
  uint64_t v28 = v11;
  uint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  id v12 = v3;
  id v13 = v4;
  id v14 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v15 = v24;
  id v16 = v25;
  id v17 = v26;
  id v18 = v27;
  id v19 = v28;
  swift_unknownObjectRetain();
  id v20 = v29;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HiFiHandPose3DEstimator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v13 = *(void **)(a2 + 144);
  id v14 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 152);
  id v17 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 160);
  id v20 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 168);
  uint64_t v23 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v22;
  id v24 = v22;

  uint64_t v25 = *(void **)(a2 + 176);
  uint64_t v26 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v25;
  id v27 = v25;

  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v28 = *(void **)(a1 + 192);
  uint64_t v29 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v29;
  id v30 = v29;

  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HiFiHandPose3DEstimator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_unknownObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_unknownObjectRelease();

  uint64_t v5 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  id v6 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_unknownObjectRelease();

  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for HiFiHandPose3DEstimator()
{
  return &type metadata for HiFiHandPose3DEstimator;
}

uint64_t sub_252901B08(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 704) = a2;
  *(void *)(v3 + 696) = a1;
  uint64_t v4 = sub_252951A08();
  *(void *)(v3 + 712) = v4;
  *(void *)(v3 + 720) = *(void *)(v4 - 8);
  *(void *)(v3 + 728) = swift_task_alloc();
  long long v5 = v2[11];
  *(_OWORD *)(v3 + 224) = v2[10];
  *(_OWORD *)(v3 + 240) = v5;
  *(_OWORD *)(v3 + 256) = v2[12];
  long long v6 = v2[7];
  *(_OWORD *)(v3 + 160) = v2[6];
  *(_OWORD *)(v3 + 176) = v6;
  long long v7 = v2[9];
  *(_OWORD *)(v3 + 192) = v2[8];
  *(_OWORD *)(v3 + 208) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 96) = v2[2];
  *(_OWORD *)(v3 + 112) = v8;
  long long v9 = v2[5];
  *(_OWORD *)(v3 + 128) = v2[4];
  *(_OWORD *)(v3 + 144) = v9;
  long long v10 = v2[1];
  *(_OWORD *)(v3 + 64) = *v2;
  *(_OWORD *)(v3 + 80) = v10;
  return MEMORY[0x270FA2498](sub_252901C04, 0, 0);
}

uint64_t sub_252901C04()
{
  *(void *)(v0 + 736) = **(void **)(v0 + 704);
  *(void *)(v0 + 680) = 0xD000000000000023;
  *(void *)(v0 + 688) = 0x800000025295A0D0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 744) = v1;
  void *v1 = v0;
  v1[1] = sub_252901CD4;
  uint64_t v2 = *(void *)(v0 + 728);
  return ImageDescriptor.tensor(for:)(v2, (uint64_t *)(v0 + 680));
}

uint64_t sub_252901CD4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 752) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_252902484, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 760) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_252901E5C;
    return MLTensor.matrix3x3()(v2 + 16);
  }
}

uint64_t sub_252901E5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 728);
  uint64_t v2 = *(void *)(*(void *)v0 + 720);
  uint64_t v3 = *(void *)(*(void *)v0 + 712);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_252901FB4, 0, 0);
}

void sub_252901FB4()
{
  double v1 = (double)*(uint64_t *)(*(void *)(v0 + 704) + 8) * 1000000000.0;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v2 = sub_252951D78();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  long long v7 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 448) = v7;
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 256);
  long long v8 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 384) = v8;
  long long v9 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 416) = v9;
  long long v10 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 320) = v10;
  long long v11 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 352) = v11;
  long long v12 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 288) = v12;
  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 768) = v13;
  *id v13 = v0;
  v13[1] = sub_252902120;
  uint64_t v14 = *(void *)(v0 + 736);
  sub_2529025B0(v14, v0 + 16, v2, v4, v6);
}

uint64_t sub_252902120(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 776) = a1;
  *(void *)(v3 + 784) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2529024E8, 0, 0);
  }
  else
  {
    long long v4 = *(_OWORD *)(v3 + 240);
    *(_OWORD *)(v3 + 640) = *(_OWORD *)(v3 + 224);
    *(_OWORD *)(v3 + 656) = v4;
    *(void *)(v3 + 672) = *(void *)(v3 + 256);
    long long v5 = *(_OWORD *)(v3 + 176);
    *(_OWORD *)(v3 + 576) = *(_OWORD *)(v3 + 160);
    *(_OWORD *)(v3 + 592) = v5;
    long long v6 = *(_OWORD *)(v3 + 208);
    *(_OWORD *)(v3 + 608) = *(_OWORD *)(v3 + 192);
    *(_OWORD *)(v3 + 624) = v6;
    long long v7 = *(_OWORD *)(v3 + 112);
    *(_OWORD *)(v3 + 512) = *(_OWORD *)(v3 + 96);
    *(_OWORD *)(v3 + 528) = v7;
    long long v8 = *(_OWORD *)(v3 + 144);
    *(_OWORD *)(v3 + 544) = *(_OWORD *)(v3 + 128);
    *(_OWORD *)(v3 + 560) = v8;
    long long v9 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v3 + 480) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v3 + 496) = v9;
    long long v10 = (void *)swift_task_alloc();
    *(void *)(v3 + 792) = v10;
    void *v10 = v3;
    v10[1] = sub_2529022D8;
    uint64_t v11 = *(void *)(v3 + 704);
    uint64_t v12 = *(void *)(v3 + 696);
    return VideoAdaptor.applied(to:)(v12, v11);
  }
}

uint64_t sub_2529022D8()
{
  *(void *)(*(void *)v1 + 800) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25290254C;
  }
  else
  {
    uint64_t v2 = sub_2529023F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2529023F4()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = v0[87];
  uint64_t v3 = *(int *)(type metadata accessor for SceneDescriptor() + 32);
  swift_bridgeObjectRelease();
  *(void *)(v2 + v3) = v1;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_252902484()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2529024E8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25290254C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2529025B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v6[5] = a4;
  v6[6] = a5;
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v6[2] = a1;
  v6[7] = *(void *)(type metadata accessor for Hand() - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *(void *)(v5 + 200);
  v6[8] = v7;
  v6[9] = v8;
  return MEMORY[0x270FA2498](sub_252902678, 0, 0);
}

uint64_t sub_252902678()
{
  uint64_t v12 = (__CVBuffer *)v0[2];
  CVImageBufferGetEncodedSize(v12);
  uint64_t v1 = sub_252951468();
  v0[10] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[11] = v2;
  v0[12] = swift_task_alloc();
  sub_252951458();
  uint64_t v3 = sub_252951448();
  v0[13] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[14] = v4;
  v0[15] = swift_task_alloc();
  swift_task_alloc();
  (*(void (**)(void))(v2 + 16))();
  sub_252951438();
  swift_task_dealloc();
  uint64_t v5 = sub_252951378();
  v0[16] = v5;
  v0[17] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v0[18] = v6;
  swift_task_alloc();
  (*(void (**)(void))(v4 + 16))();
  uint64_t v7 = v12;
  sub_252951368();
  swift_task_dealloc();
  uint64_t v8 = sub_252951398();
  v0[19] = v8;
  v0[20] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v0[21] = v9;
  id v13 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F42698] + MEMORY[0x263F42698]);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[22] = v10;
  void *v10 = v0;
  v10[1] = sub_2529029A0;
  return v13(v9, v6);
}

uint64_t sub_2529029A0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252902DEC;
  }
  else {
    uint64_t v2 = sub_252902AB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252902AB4()
{
  uint64_t v1 = sub_252951388();
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v28 = v0[7];
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_252922F68(0, v2, 0);
    uint64_t v26 = sub_252951508();
    uint64_t v3 = *(void *)(v26 - 8);
    unint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v24 = *(void *)(v3 + 72);
    uint64_t v5 = (void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    uint64_t v23 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v6 = v29;
    do
    {
      uint64_t v7 = v0[8];
      uint64_t v8 = swift_task_alloc();
      uint64_t v9 = *v5;
      (*v5)(v8, v4, v26);
      uint64_t v10 = swift_task_alloc();
      v9(v10, v8, v26);
      sub_2528E3BFC(v10, v7);
      swift_task_dealloc();
      (*v23)(v8, v26);
      swift_task_dealloc();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_252922F68(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v29;
      }
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_252922F68(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v29;
      }
      uint64_t v13 = v0[8];
      *(void *)(v6 + 16) = v12 + 1;
      sub_2528E3B98(v13, v6+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v12);
      v4 += v24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v0[18];
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[17];
  uint64_t v18 = v0[14];
  uint64_t v17 = v0[15];
  uint64_t v19 = v0[12];
  uint64_t v20 = v0[11];
  uint64_t v25 = v0[13];
  uint64_t v27 = v0[10];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v25);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(uint64_t))v0[1];
  return v21(v6);
}

uint64_t sub_252902DEC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[10];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_252902EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_252901B08(a1, a2);
}

uint64_t sub_252903038(void *a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(a1, sel_computeCommandEncoder);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (void *)sub_252951AB8();
    objc_msgSend(v7, sel_setLabel_, v8);

    uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC5Human18VerticalFlipKernel_computePipelineState);
    objc_msgSend(v7, sel_setComputePipelineState_, v9);
    objc_msgSend(v7, sel_setTexture_atIndex_, a2, 0);
    objc_msgSend(v7, sel_setTexture_atIndex_, a3, 1);
    uint64_t v10 = (uint64_t)objc_msgSend(v9, sel_threadExecutionWidth);
    uint64_t v11 = (uint64_t)objc_msgSend(v9, sel_maxTotalThreadsPerThreadgroup);
    if (v10)
    {
      if (v11 != 0x8000000000000000 || v10 != -1)
      {
        uint64_t v13 = v11 / v10;
        v16[0] = objc_msgSend(a3, sel_width);
        v16[1] = objc_msgSend(a3, sel_height);
        v16[2] = 1;
        v15[0] = v10;
        v15[1] = v13;
        _OWORD v15[2] = 1;
        objc_msgSend(v7, sel_dispatchThreads_threadsPerThreadgroup_, v16, v15);
        objc_msgSend(v7, sel_endEncoding);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VerticalFlipKernel()
{
  return self;
}

uint64_t sub_252903324(void *a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_252951AB8();
  unint64_t v12 = (void *)sub_252951AB8();
  id v13 = objc_msgSend(v7, sel_URLForResource_withExtension_, v11, v12);

  MEMORY[0x270FA5388](v14);
  if (v13)
  {
    sub_252951238();

    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  }
  uint64_t v16 = sub_2528F1B8C((uint64_t)v10, (uint64_t)v10);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528F1BF4((uint64_t)v10, (uint64_t)v17);
  sub_252951268();
  uint64_t v18 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v15) == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v19 = (void *)sub_252951208();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v15);
  id v36 = 0;
  id v20 = objc_msgSend(a1, sel_newLibraryWithURL_error_, v19, &v36);

  id v21 = v36;
  if (!v20)
  {
    uint64_t v29 = v21;
    uint64_t v30 = sub_2529511A8();

    swift_willThrow();
    id v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_252951E48();
    sub_252951B08();
    uint64_t v35 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    sub_252951F08();
    goto LABEL_13;
  }
  uint64_t v22 = (void *)sub_252951AB8();
  id v23 = objc_msgSend(v20, sel_newFunctionWithName_, v22);

  if (!v23) {
LABEL_10:
  }
    __break(1u);
  id v36 = 0;
  id v24 = objc_msgSend(a1, sel_newComputePipelineStateWithFunction_error_, v23, &v36);
  if (v24)
  {
    id v25 = v24;
    id v26 = v36;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)&v6[OBJC_IVAR____TtC5Human18VerticalFlipKernel_computePipelineState] = v25;

    v34.receiver = v6;
    v34.super_class = ObjectType;
    id v27 = objc_msgSendSuper2(&v34, sel_initWithDevice_, a1);

    sub_2528F1C5C((uint64_t)v10);
    return (uint64_t)v27;
  }
  id v31 = v36;
  uint64_t v32 = sub_2529511A8();

  swift_willThrow();
  id v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_252951E48();
  sub_252951B08();
  uint64_t v35 = v32;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  sub_252951F08();
LABEL_13:
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t sub_252903904(void *a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(a1, sel_computeCommandEncoder);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = (void *)sub_252951AB8();
    objc_msgSend(v7, sel_setLabel_, v8);

    uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC5Human20HorizontalFlipKernel_computePipelineState);
    objc_msgSend(v7, sel_setComputePipelineState_, v9);
    objc_msgSend(v7, sel_setTexture_atIndex_, a2, 0);
    objc_msgSend(v7, sel_setTexture_atIndex_, a3, 1);
    uint64_t v10 = (uint64_t)objc_msgSend(v9, sel_threadExecutionWidth);
    uint64_t v11 = (uint64_t)objc_msgSend(v9, sel_maxTotalThreadsPerThreadgroup);
    if (v10)
    {
      if (v11 != 0x8000000000000000 || v10 != -1)
      {
        uint64_t v13 = v11 / v10;
        v16[0] = objc_msgSend(a3, sel_width);
        v16[1] = objc_msgSend(a3, sel_height);
        v16[2] = 1;
        v15[0] = v10;
        v15[1] = v13;
        _OWORD v15[2] = 1;
        objc_msgSend(v7, sel_dispatchThreads_threadsPerThreadgroup_, v16, v15);
        objc_msgSend(v7, sel_endEncoding);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HorizontalFlipKernel()
{
  return self;
}

uint64_t sub_252903BF4(void *a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_252951AB8();
  unint64_t v12 = (void *)sub_252951AB8();
  id v13 = objc_msgSend(v7, sel_URLForResource_withExtension_, v11, v12);

  MEMORY[0x270FA5388](v14);
  if (v13)
  {
    sub_252951238();

    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_252951268();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  }
  uint64_t v16 = sub_2528F1B8C((uint64_t)v10, (uint64_t)v10);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2528F1BF4((uint64_t)v10, (uint64_t)v17);
  sub_252951268();
  uint64_t v18 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v15) == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v19 = (void *)sub_252951208();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v15);
  id v36 = 0;
  id v20 = objc_msgSend(a1, sel_newLibraryWithURL_error_, v19, &v36);

  id v21 = v36;
  if (!v20)
  {
    uint64_t v29 = v21;
    uint64_t v30 = sub_2529511A8();

    swift_willThrow();
    id v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_252951E48();
    sub_252951B08();
    uint64_t v35 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    sub_252951F08();
    goto LABEL_13;
  }
  uint64_t v22 = (void *)sub_252951AB8();
  id v23 = objc_msgSend(v20, sel_newFunctionWithName_, v22);

  if (!v23) {
LABEL_10:
  }
    __break(1u);
  id v36 = 0;
  id v24 = objc_msgSend(a1, sel_newComputePipelineStateWithFunction_error_, v23, &v36);
  if (v24)
  {
    id v25 = v24;
    id v26 = v36;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)&v6[OBJC_IVAR____TtC5Human20HorizontalFlipKernel_computePipelineState] = v25;

    v34.receiver = v6;
    v34.super_class = ObjectType;
    id v27 = objc_msgSendSuper2(&v34, sel_initWithDevice_, a1);

    sub_2528F1C5C((uint64_t)v10);
    return (uint64_t)v27;
  }
  id v31 = v36;
  uint64_t v32 = sub_2529511A8();

  swift_willThrow();
  id v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_252951E48();
  sub_252951B08();
  uint64_t v35 = v32;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  sub_252951F08();
LABEL_13:
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t _s6OutputVwxx()
{
  return swift_unknownObjectRelease();
}

uint64_t _s6OutputVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s6OutputVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s6OutputVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s6OutputVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6OutputVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s6OutputVMa()
{
  return &_s6OutputVN;
}

uint64_t sub_252904370(char a1)
{
  uint64_t v2 = sub_2529516A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  if (a1)
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F00C08];
  }
  else
  {
    unsigned char *v6 = 0;
    uint64_t v9 = (unsigned int *)MEMORY[0x263F00C10];
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v6, *v9, v2);
  (*(void (**)(char *, unsigned char *, uint64_t))(v3 + 32))(v8, v6, v2);
  sub_252951978();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t getEnumTagSinglePayload for Resizer(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Resizer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Resizer()
{
  return &type metadata for Resizer;
}

uint64_t sub_252904584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_252951A08();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = sub_252951598();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_task_alloc();
  char v9 = *v2;
  uint64_t v10 = *((void *)v2 + 1);
  uint64_t v11 = *((void *)v2 + 2);
  sub_252951588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, a2, v3);
  uint64_t v12 = swift_task_alloc();
  *(unsigned char *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = v5;
  sub_252951618();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = *(uint64_t (**)(void))(v16 + 8);
  return sub_2528D0458(v13);
}

unsigned char *storeEnumTagSinglePayload for Resizer.ResizeMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252904870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Resizer.ResizeMethod()
{
  return &type metadata for Resizer.ResizeMethod;
}

unint64_t sub_2529048AC()
{
  unint64_t result = qword_269C32CB0;
  if (!qword_269C32CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32CB0);
  }
  return result;
}

uint64_t SinkNode.applied<A>(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v6[5] = a4;
  v6[6] = v5;
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v6[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[7] = AssociatedTypeWitness;
  v6[8] = *(void *)(AssociatedTypeWitness - 8);
  v6[9] = swift_task_alloc();
  v6[10] = *(void *)(a5 + 8);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  v6[11] = v10;
  v6[12] = *(void *)(v10 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  sub_252951DC8();
  v6[15] = swift_task_alloc();
  v6[16] = *(void *)(a3 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v6[18] = v11;
  v6[19] = *(void *)(v11 - 8);
  v6[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252904B84, 0, 0);
}

uint64_t sub_252904B84()
{
  (*(void (**)(void, void, void))(v0[16] + 16))(v0[17], v0[2], v0[4]);
  sub_252951C88();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[21] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  void *v2 = v0;
  v2[1] = sub_252904CA0;
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  return MEMORY[0x270FA1E88](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_252904CA0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252905224;
  }
  else {
    uint64_t v2 = sub_252904DB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252904DB4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v4();
  }
  uint64_t v5 = v0[23];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
  sub_252951C78();
  if (v5)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[5] + 24) + **(int **)(v0[5] + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  void *v7 = v0;
  v7[1] = sub_252905024;
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[3];
  return v11(v8, v10, v9);
}

uint64_t sub_252905024()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2529053A4;
  }
  else {
    uint64_t v2 = sub_252905138;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252905138()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[21] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  void *v2 = v0;
  v2[1] = sub_252904CA0;
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  return MEMORY[0x270FA1E88](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_252905224()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 32);
  v1(v0[13], v0[14], v0[11]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_2529520F8();
  uint64_t v3 = v0[13];
  if (v2)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  }
  else
  {
    uint64_t v4 = v0[11];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2529053A4()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t SinkNode.callAsFunction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528A91AC;
  return v9(a1, a2, a3);
}

uint64_t SinkNode.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_2528E9BB0;
  return SinkNode.applied<A>(to:)(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SinkNode.applied(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528A91AC;
  return v9(a1, a2, a3);
}

uint64_t sub_252905754()
{
  uint64_t v0 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = MTLCreateSystemDefaultDevice();
  if (v3 && (id v4 = objc_msgSend(v3, sel_newCommandQueue), swift_unknownObjectRelease(), v4))
  {
    uint64_t v5 = (void *)sub_252951AB8();
    objc_msgSend(v4, sel_setLabel_, v5);

    return (uint64_t)v4;
  }
  else
  {
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    sub_252905904((uint64_t)v2);
    uint64_t result = sub_252951F28();
    __break(1u);
  }
  return result;
}

uint64_t sub_252905904(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoAdaptorError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

float Point.x.getter()
{
  return *(float *)v0;
}

void Point.x.setter(float a1)
{
  float *v1 = a1;
}

uint64_t (*Point.x.modify())()
{
  return nullsub_1;
}

float Point.y.getter()
{
  return *(float *)(v0 + 4);
}

void Point.y.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*Point.y.modify())()
{
  return nullsub_1;
}

uint64_t sub_2529059C0(char a1)
{
  if (a1) {
    return 121;
  }
  else {
    return 120;
  }
}

uint64_t sub_2529059D4()
{
  return sub_2529059C0(*v0);
}

uint64_t sub_2529059DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252906028(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252905A04(uint64_t a1)
{
  unint64_t v2 = sub_252905BE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252905A40(uint64_t a1)
{
  unint64_t v2 = sub_252905BE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Point.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32CD8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252905BE4();
  sub_252952208();
  v8[15] = 0;
  sub_252952078();
  if (!v1)
  {
    v8[14] = 1;
    sub_252952078();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_252905BE4()
{
  unint64_t result = qword_269C32CE0;
  if (!qword_269C32CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32CE0);
  }
  return result;
}

uint64_t Point.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32CE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252905BE4();
  sub_2529521E8();
  if (!v2)
  {
    char v16 = 0;
    sub_252951FF8();
    int v10 = v9;
    char v15 = 1;
    sub_252951FF8();
    int v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_252905DDC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return Point.init(from:)(a1, a2);
}

uint64_t sub_252905DF4(void *a1)
{
  return Point.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Point()
{
  return &type metadata for Point;
}

unsigned char *storeEnumTagSinglePayload for Point.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252905EE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Point.CodingKeys()
{
  return &type metadata for Point.CodingKeys;
}

unint64_t sub_252905F24()
{
  unint64_t result = qword_269C32CF0;
  if (!qword_269C32CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32CF0);
  }
  return result;
}

unint64_t sub_252905F7C()
{
  unint64_t result = qword_269C32CF8;
  if (!qword_269C32CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32CF8);
  }
  return result;
}

unint64_t sub_252905FD4()
{
  unint64_t result = qword_269C32D00;
  if (!qword_269C32D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D00);
  }
  return result;
}

uint64_t sub_252906028(uint64_t a1, uint64_t a2)
{
  if (a1 == 120 && a2 == 0xE100000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_2529060E8(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    int v9 = (int *)type metadata accessor for BodyPose2DEstimator();
    v8((void *)((char *)v4 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    int v11 = (char *)v4 + v10;
    int v12 = (char *)a2 + v10;
    v8((void *)((char *)v4 + v10), (void *)((char *)a2 + v10), v7);
    uint64_t v13 = type metadata accessor for GaussianFilter();
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)((char *)v4 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    uint64_t v14 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
    *(_DWORD *)((char *)v4 + v14[5]) = *(_DWORD *)((char *)a2 + v14[5]);
    uint64_t v15 = v14[6];
    char v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)char v16 = *(_OWORD *)v17;
    *((unsigned char *)v4 + v14[7]) = *((unsigned char *)a2 + v14[7]);
    uint64_t v18 = a3[6];
    *(void *)((char *)v4 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v19 = (char *)v4 + v18;
    id v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2529062D4(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for BodyPose2DEstimator();
  v3(a1 + *(int *)(v4 + 20), v2);
  v3(a1 + *(int *)(v4 + 24), v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_2529063C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_252906568(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_retain();
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_retain();
  swift_release();
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_252906740(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_2529068B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_release();
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_252906A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252906A74);
}

uint64_t sub_252906A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_252906B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252906B48);
}

uint64_t sub_252906B48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for LoFiBodyPose3DEstimator()
{
  uint64_t result = qword_269C32D08;
  if (!qword_269C32D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252906C50()
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_252906D10(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for BodyPose2DEstimator();
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for HiFiBodyPose2DEstimator();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252906DE0, 0, 0);
}

uint64_t sub_252906DE0()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  *(_DWORD *)(v1 + *(int *)(v2 + 20)) = 1068149419;
  *(unsigned char *)(v1 + *(int *)(v2 + 28)) = 1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_252906E98;
  uint64_t v4 = v0[6];
  return sub_25291E4E8(v4);
}

uint64_t sub_252906E98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252906F94, 0, 0);
}

uint64_t sub_252906F94()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  sub_25290A5AC(v0[6], v1, (uint64_t (*)(void))type metadata accessor for BodyPose2DEstimator);
  uint64_t v5 = v1 + *(int *)(v3 + 24);
  *(unsigned char *)uint64_t v5 = 0;
  *(_OWORD *)(v5 + 8) = xmmword_252957040;
  sub_25290A5AC(v1, v2, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  sub_25290A5AC(v2, v4, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D98]), sel_init);
  v0[11] = v6;
  objc_msgSend(v6, sel_setComputeUnits_, 2);
  uint64_t v7 = sub_252951268();
  v0[12] = v7;
  v0[13] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v0[14] = v8;
  v0[15] = type metadata accessor for Shiraz();
  sub_2528C6CC4(v8);
  sub_25290A614();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = v9;
  void *v9 = v0;
  v9[1] = sub_25290715C;
  return MEMORY[0x270EE7958](v8, v6);
}

uint64_t sub_25290715C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[13] + 8))(v4[14], v4[12]);
    uint64_t v5 = sub_252907550;
  }
  else
  {
    v4[18] = a1;
    uint64_t v5 = sub_252907298;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_252907298()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = (void *)v0[11];
  uint64_t v6 = v0[5];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();

  uint64_t v8 = (int *)type metadata accessor for LoFiBodyPose3DEstimator();
  uint64_t v9 = v6 + v8[6];
  *(void *)uint64_t v9 = v7;
  *(unsigned char *)(v9 + 8) = 2;
  type metadata accessor for Lifting3DPreprocessor();
  swift_allocObject();
  *(void *)(v6 + v8[5]) = sub_25291ADB0(2);
  type metadata accessor for Accumulator();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 1;
  type metadata accessor for Accumulator.BufferManager();
  uint64_t v11 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v11 + 112) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v11 + 120) = xmmword_252957050;
  swift_beginAccess();
  unint64_t v12 = *(void *)(v11 + 112);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v11 + 112) = v12;
  if (!isUniquelyReferenced_nonNull_native || *(void *)(v12 + 24) <= 0x1E5uLL)
  {
    if (*(void *)(v12 + 16) <= 0xF3uLL) {
      int64_t v14 = 243;
    }
    else {
      int64_t v14 = *(void *)(v12 + 16);
    }
    unint64_t v12 = sub_2528C4584(isUniquelyReferenced_nonNull_native, v14, 0, v12);
  }
  uint64_t v15 = v0[5];
  *(void *)(v11 + 112) = v12;
  swift_endAccess();
  *(void *)(v10 + 24) = v11;
  *(void *)(v15 + v8[7]) = v10;
  *(unsigned char *)(v15 + v8[8]) = 0;
  type metadata accessor for Anchorer();
  uint64_t v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(unsigned char *)(v16 + 176) = 1;
  uint64_t v17 = v16 + OBJC_IVAR____TtC5Human8Anchorer_previousSkeleton3D;
  uint64_t v18 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = OBJC_IVAR____TtC5Human8Anchorer_pnpSolver;
  *(void *)(v16 + v19) = objc_msgSend(objc_allocWithZone((Class)PnPSolver), sel_init);
  *(void *)(v16 + OBJC_IVAR____TtC5Human8Anchorer_retriesRemaining) = 5;
  *(void *)(v15 + v8[10]) = v16;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_252907550()
{
  uint64_t v1 = *(void *)(v0 + 40);

  swift_task_dealloc();
  sub_25290A654(v1, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25290760C(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for SceneDescriptor();
  v3[31] = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  v3[32] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[33] = v7;
  void *v7 = v3;
  v7[1] = sub_252907808;
  return sub_2528C8664(v6, a2);
}

uint64_t sub_252907808()
{
  uint64_t v2 = *v1;
  v2[34] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_252908F04, 0, 0);
  }
  else
  {
    v2[2] = 0xD00000000000001DLL;
    v2[3] = 0x800000025295A150;
    uint64_t v3 = (void *)swift_task_alloc();
    v2[35] = (uint64_t)v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2529079A4;
    uint64_t v4 = v2[29];
    return SceneDescriptor.tensor(for:)(v4, v2 + 2);
  }
}

uint64_t sub_2529079A4()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909020;
  }
  else {
    uint64_t v2 = sub_252907AB8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252907AB8()
{
  sub_2528CA438(v0[14], v0[31]);
  uint64_t result = sub_2529518F8();
  if (*(void *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 32);
    swift_bridgeObjectRelease();
    if (v2 != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C32D28);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_252953740;
      *(void *)(v3 + 56) = MEMORY[0x263F8D310];
      *(void *)(v3 + 32) = 0xD000000000000055;
      *(void *)(v3 + 40) = 0x800000025295BFB0;
      sub_252952178();
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v0[28];
    uint64_t v4 = v0[29];
    uint64_t v6 = v0[27];
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v9 + 16) = xmmword_252953970;
    uint64_t v11 = MEMORY[0x263F00C68];
    *(void *)(v9 + 56) = v10;
    *(void *)(v9 + 64) = v11;
    *(void *)(v9 + 32) = 0;
    *(_OWORD *)(v9 + 72) = 0u;
    *(_OWORD *)(v9 + 88) = 0u;
    *(_OWORD *)(v9 + 104) = 0u;
    *(_OWORD *)(v9 + 120) = 0u;
    *(_OWORD *)(v9 + 136) = 0u;
    sub_252951A58();
    swift_bridgeObjectRelease();
    sub_2529516E8();
    unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v0[37] = (uint64_t)v12;
    v0[38] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v6, v7);
    v12(v4, v7);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v0[39] = (uint64_t)v13;
    v0[40] = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v13(v4, v5, v7);
    v0[6] = 0xD00000000000001DLL;
    v0[7] = 0x800000025295A0B0;
    int64_t v14 = (void *)swift_task_alloc();
    v0[41] = (uint64_t)v14;
    *int64_t v14 = v0;
    v14[1] = sub_252907D1C;
    uint64_t v15 = v0[26];
    return SceneDescriptor.tensor(for:)(v15, v0 + 6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_252907D1C()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909278;
  }
  else {
    uint64_t v2 = sub_252907E30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void *sub_252907E30()
{
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v0 + 344) = result[5];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(void *)(v0 + 120);
  *(void *)(v0 + 352) = result[6];
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for LoFiBodyPose3DEstimator();
  *(void *)(v0 + 360) = v3;
  uint64_t v4 = *(int *)(v3 + 20);
  *(_DWORD *)(v0 + 496) = v4;
  *(void *)(v0 + 368) = *(void *)(v2 + v4);
  *(void *)(v0 + 64) = 0xD000000000000023;
  *(void *)(v0 + 72) = 0x800000025295A0D0;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_252907F5C;
  uint64_t v6 = *(void *)(v0 + 136);
  return (void *)SceneDescriptor.tensor(for:)(v6, (uint64_t *)(v0 + 64));
}

uint64_t sub_252907F5C()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909504;
  }
  else {
    uint64_t v2 = sub_252908070;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252908070()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  v0[49] = (uint64_t)v4;
  v0[50] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v3, 0, 1, v1);
  v0[10] = 0xD00000000000002ALL;
  v0[11] = 0x800000025295A100;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[51] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_252908160;
  uint64_t v6 = v0[16];
  return ImageDescriptor.tensor(for:)(v6, v0 + 10);
}

uint64_t sub_252908160()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_2528AE5CC(*(void *)(v2 + 136));
    uint64_t v3 = sub_2529097A0;
  }
  else
  {
    uint64_t v3 = sub_25290827C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25290827C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  (*(void (**)(void, void, uint64_t, void))(v0 + 392))(*(void *)(v0 + 128), 0, 1, *(void *)(v0 + 144));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_252908338;
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  return sub_25291CBA0(v5, v4, v2 < v1);
}

uint64_t sub_252908338()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  uint64_t v2 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  sub_2528AE5CC(v2);
  sub_2528AE5CC(v1);
  return MEMORY[0x270FA2498](sub_25290846C, 0, 0);
}

uint64_t sub_25290846C()
{
  sub_25290A2DC();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[54] = v1;
  void *v1 = v0;
  v1[1] = sub_252908518;
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return sub_25291AED4(v2, v3);
}

uint64_t sub_252908518()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252908614, 0, 0);
}

uint64_t sub_252908614()
{
  uint64_t v1 = *(void *)(*(void *)(v0[15] + *(int *)(v0[45] + 28)) + 24);
  v0[55] = v1;
  return MEMORY[0x270FA2498](sub_252908644, v1, 0);
}

uint64_t sub_252908644()
{
  uint64_t v1 = *(void *)(v0 + 440);
  sub_2528D21A4(*(void *)(v0 + 192));
  return MEMORY[0x270FA2498](sub_2529086B0, v1, 0);
}

uint64_t sub_2529086B0()
{
  sub_2528D23F8(-1, *(void *)(v0 + 184));
  return MEMORY[0x270FA2498](sub_252908720, 0, 0);
}

uint64_t sub_252908720()
{
  uint64_t v1 = *(void *)(v0[15] + *(int *)(v0[45] + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[56] = v2;
  void *v2 = v0;
  v2[1] = sub_2529087D4;
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  return sub_2529509D0(v3, v4, v1);
}

uint64_t sub_2529087D4()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909A3C;
  }
  else {
    uint64_t v2 = sub_2529088E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2529088E8()
{
  char v1 = *(unsigned char *)(v0[15] + *(int *)(v0[45] + 32));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[58] = v2;
  void *v2 = v0;
  v2[1] = sub_252908990;
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  return sub_25294B7B4(v3, v4, v1);
}

uint64_t sub_252908990()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909D04;
  }
  else {
    uint64_t v2 = sub_252908AA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252908AA4()
{
  int64_t v14 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[49];
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[39];
  uint64_t v3 = (int *)v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[29];
  uint64_t v6 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v7 = v0[18];
  uint64_t v8 = v2 + v3[11];
  sub_2528AE5CC(v8);
  v1(v8, v5, v7);
  v14(v8, 0, 1, v7);
  sub_2528EF3FC(v4);
  uint64_t v9 = v2 + v3[10];
  sub_2528AE5CC(v9);
  v1(v9, v6, v7);
  v14(v9, 0, 1, v7);
  *(unsigned char *)(v2 + v3[7]) = 1;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[60] = v10;
  void *v10 = v0;
  v10[1] = sub_252908C18;
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[13];
  return sub_2528FD570(v12, v11);
}

uint64_t sub_252908C18()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252909FDC;
  }
  else {
    uint64_t v2 = sub_252908D2C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252908D2C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[37];
  uint64_t v13 = v0[29];
  uint64_t v14 = v0[32];
  uint64_t v11 = v0[28];
  uint64_t v12 = v0[31];
  uint64_t v3 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v5 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[18];
  v1(v0[20], v8);
  v1(v6, v8);
  v1(v7, v8);
  v1(v5, v8);
  v1(v4, v8);
  v1(v3, v8);
  v1(v2, v8);
  v1(v11, v8);
  sub_25290A654(v12, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v13, v8);
  sub_25290A654(v14, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_252908F04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252909020()
{
  sub_25290A654(*(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  uint64_t v1 = *(void **)(v0 + 288);
  *(void *)(v0 + 96) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v3 = *(void *)(v0 + 40);
    if (v3 == 1)
    {
      uint64_t v5 = *(void *)(v0 + 104);
      uint64_t v4 = *(void *)(v0 + 112);

      sub_2528CA438(v4, v5);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v3);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v6();
}

uint64_t sub_252909278()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 224), v5);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v4, v5);
  sub_25290A654(v3, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  uint64_t v6 = *(void **)(v0 + 336);
  *(void *)(v0 + 96) = v6;
  id v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v8 = *(void *)(v0 + 40);
    if (v8 == 1)
    {
      uint64_t v10 = *(void *)(v0 + 104);
      uint64_t v9 = *(void *)(v0 + 112);

      sub_2528CA438(v9, v10);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v8);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v11();
}

uint64_t sub_252909504()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 208), v6);
  v1(v5, v6);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v4, v6);
  sub_25290A654(v3, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  id v7 = *(void **)(v0 + 384);
  *(void *)(v0 + 96) = v7;
  id v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v9 = *(void *)(v0 + 40);
    if (v9 == 1)
    {
      uint64_t v11 = *(void *)(v0 + 104);
      uint64_t v10 = *(void *)(v0 + 112);

      sub_2528CA438(v10, v11);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v9);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v12();
}

uint64_t sub_2529097A0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 208), v6);
  v1(v5, v6);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v4, v6);
  sub_25290A654(v3, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  id v7 = *(void **)(v0 + 416);
  *(void *)(v0 + 96) = v7;
  id v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v9 = *(void *)(v0 + 40);
    if (v9 == 1)
    {
      uint64_t v11 = *(void *)(v0 + 104);
      uint64_t v10 = *(void *)(v0 + 112);

      sub_2528CA438(v10, v11);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v9);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v12();
}

uint64_t sub_252909A3C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v16 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 184), v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  v1(v4, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v3, v8);
  sub_25290A654(v16, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  unint64_t v9 = *(void **)(v0 + 456);
  *(void *)(v0 + 96) = v9;
  id v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v11 = *(void *)(v0 + 40);
    if (v11 == 1)
    {
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 112);

      sub_2528CA438(v12, v13);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v11);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v14();
}

uint64_t sub_252909D04()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 176), v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  v1(v4, v8);
  v1(v3, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v16, v8);
  sub_25290A654(v17, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  unint64_t v9 = *(void **)(v0 + 472);
  *(void *)(v0 + 96) = v9;
  id v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v11 = *(void *)(v0 + 40);
    if (v11 == 1)
    {
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 112);

      sub_2528CA438(v12, v13);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v11);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v14();
}

uint64_t sub_252909FDC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v18 = *(void *)(v0 + 232);
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v16 = *(void *)(v0 + 224);
  uint64_t v17 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 144);
  v1(*(void *)(v0 + 160), v8);
  v1(v6, v8);
  v1(v7, v8);
  v1(v5, v8);
  v1(v4, v8);
  v1(v3, v8);
  v1(v2, v8);
  v1(v16, v8);
  sub_25290A654(v17, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v18, v8);
  sub_25290A654(v19, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  unint64_t v9 = *(void **)(v0 + 488);
  *(void *)(v0 + 96) = v9;
  id v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v11 = *(void *)(v0 + 40);
    if (v11 == 1)
    {
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 112);

      sub_2528CA438(v12, v13);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v11);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v14();
}

void *sub_25290A2DC()
{
  uint64_t v0 = sub_252951A08();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(sub_2529518F8() + 16);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v4 != 3) {
    goto LABEL_8;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result[5];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t v4 = v6 - 1;
  if (v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = result[6];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  uint64_t v9 = v8 - 1;
  if (!__OFSUB__(v8, 1)) {
    goto LABEL_13;
  }
  __break(1u);
LABEL_8:
  if (v4 != 4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = result[6];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  BOOL v7 = __OFSUB__(v10, 1);
  uint64_t v4 = v10 - 1;
  if (v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 4uLL)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = result[7];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  uint64_t v9 = v11 - 1;
  if (!__OFSUB__(v11, 1))
  {
LABEL_13:
    float v12 = (float)v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_252953970;
    *(float *)(v13 + 32) = v12;
    *(float *)(v13 + 36) = (float)v4;
    *(_DWORD *)(v13 + 40) = 1065353216;
    v14[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
    sub_2528B1180();
    sub_252951A18();
    sub_252951738();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_25290A504(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_25290760C(a1, a2);
}

uint64_t sub_25290A5AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25290A614()
{
  unint64_t result = qword_269C32A60;
  if (!qword_269C32A60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C32A60);
  }
  return result;
}

uint64_t sub_25290A654(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t SlidingWindowError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000031;
  if (*v0 == 1) {
    unint64_t v1 = 0xD00000000000003BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000034;
  }
}

unint64_t SlidingWindowError.debugDescription.getter()
{
  unint64_t v1 = 0xD000000000000031;
  if (*v0 == 1) {
    unint64_t v1 = 0xD00000000000003BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000034;
  }
}

uint64_t SlidingWindowError.hash(into:)()
{
  return sub_2529521A8();
}

BOOL static SlidingWindowError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SlidingWindowError.hashValue.getter()
{
  return sub_2529521C8();
}

unint64_t sub_25290A800()
{
  unint64_t result = qword_269C32D38;
  if (!qword_269C32D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D38);
  }
  return result;
}

unint64_t sub_25290A858()
{
  unint64_t result = qword_269C32D40;
  if (!qword_269C32D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SlidingWindowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25290A980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlidingWindowError()
{
  return &type metadata for SlidingWindowError;
}

uint64_t sub_25290A9B8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Human10BodyFusion_solverDict);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v6) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    uint64_t result = MEMORY[0x2533C0E50](*(void *)(*(void *)(v1 + 56) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_23:
    swift_release();
    sub_25290C478(v0 + OBJC_IVAR____TtC5Human10BodyFusion_pose3D, (uint64_t (*)(void))type metadata accessor for LoFiBodyPose3DEstimator);
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    return v0;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25290AB4C()
{
  sub_25290A9B8();

  return swift_defaultActor_deallocate();
}

uint64_t sub_25290AB78()
{
  return type metadata accessor for BodyFusion();
}

uint64_t type metadata accessor for BodyFusion()
{
  uint64_t result = qword_269C32D48;
  if (!qword_269C32D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25290ABCC()
{
  uint64_t result = type metadata accessor for LoFiBodyPose3DEstimator();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25290AC80(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32D68);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for SceneDescriptor();
  uint64_t v6 = swift_task_alloc();
  v3[24] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[25] = v7;
  void *v7 = v3;
  v7[1] = sub_25290AE4C;
  return sub_25290760C(v6, a2);
}

uint64_t sub_25290AE4C()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    return MEMORY[0x270FA2498](sub_25290BFF8, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[27] = v4;
    void *v4 = v2;
    v4[1] = sub_25290AFBC;
    return SceneDescriptor.skeletons.getter();
  }
}

uint64_t sub_25290AFBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = sub_25290C0D0;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v6 = sub_25290B100;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_25290B100()
{
  uint64_t v1 = *(void *)(v0[29] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[2] = 0xD00000000000001DLL;
    v0[3] = 0x800000025295A170;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[30] = v2;
    void *v2 = v0;
    v2[1] = sub_25290B2BC;
    uint64_t v3 = v0[22];
    return SceneDescriptor.tensor(for:)(v3, v0 + 2);
  }
  else
  {
    sub_2528CA438(v0[10], v0[9]);
    sub_25290C478(v0[24], (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_25290B2BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_25290C1C4;
  }
  else {
    uint64_t v4 = sub_25290B3D4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

void *sub_25290B3D4()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 256) = v5;
  *(void *)(v0 + 264) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1, v3);
  uint64_t v6 = *(void *)(sub_2529518F8() + 16);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v6 != 3)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = result[6];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v8 != 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (!result[2])
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = result[4];
  *(void *)(v0 + 272) = v9;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v9 < 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(int *)(*(void *)(v0 + 184) + 24);
    *(_DWORD *)(v0 + 352) = v12;
    uint64_t v13 = *(void *)(v11 + OBJC_IVAR____TtC5Human10BodyFusion_solverDict);
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t v15 = *(void *)(v0 + 248);
    *(void *)(v0 + 296) = 0;
    *(void *)(v0 + 304) = v14;
    *(void *)(v0 + 280) = v13;
    *(void *)(v0 + 288) = v15;
    if (*(void *)(v0 + 272))
    {
      uint64_t v16 = *(void *)(v10 + v12);
      if (*(void *)(v16 + 16))
      {
        if (*(void *)(v13 + 16) && (unint64_t v17 = sub_252923060(*(void *)(v16 + 32)), (v18 & 1) != 0)) {
          uint64_t v19 = *(void *)(*(void *)(*(void *)(v0 + 280) + 56) + 8 * v17);
        }
        else {
          uint64_t v19 = CoreIKCreateAltruisticSolverInstance();
        }
        *(void *)(v0 + 312) = v19;
        *(_DWORD *)(v0 + 356) = *(_DWORD *)(*(void *)(v0 + 96) + 48);
        uint64_t SourceBufferSize = CoreIKSolverGetSourceBufferSize();
        *(void *)(v0 + 320) = SourceBufferSize;
        *(void *)(v0 + 328) = CoreIKSolverGetTargetBufferSize();
        uint64_t v21 = (void *)swift_task_alloc();
        *(void *)(v0 + 336) = v21;
        *uint64_t v21 = v0;
        v21[1] = sub_25290B7B0;
        uint64_t v22 = *(void *)(v0 + 168);
        return (void *)sub_25290C4D8(v22, 0, SourceBufferSize);
      }
LABEL_25:
      __break(1u);
      return result;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v33 = *(void *)(v0 + 176);
  uint64_t v34 = *(void *)(v0 + 72);
  *(void *)(v0 + 64) = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_2529519B8();
  uint64_t v29 = v24 + *(int *)(v25 + 48);
  sub_2528B8494(v29, &qword_269C31D20);
  v23(v29, v27, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v28);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v30(v27, v28);
  v30(v32, v28);
  v30(v33, v28);
  sub_2528CA438(v24, v34);
  sub_25290C478(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v31 = *(uint64_t (**)(void))(v0 + 8);
  return (void *)v31();
}

uint64_t sub_25290B7B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 344) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25290B8C8, v2, 0);
}

uint64_t sub_25290B8C8()
{
  uint64_t v1 = *(void **)(v0 + 288);
  sub_25290CC4C(*(void *)(v0 + 120), *(void *)(v0 + 120) + *(int *)(v0 + 356), *(void *)(v0 + 312), *(void *)(v0 + 344), *(void *)(v0 + 320), *(void *)(v0 + 328));
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v2 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 136);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v6(v3, v4);
    v6(v2, v4);
    *(void *)(v0 + 48) = v1;
    id v7 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
    if (swift_dynamicCast())
    {
      unint64_t v8 = *(void *)(v0 + 40);
      uint64_t v9 = *(void *)(v0 + 192);
      if (v8 == 2)
      {
        uint64_t v10 = *(void *)(v0 + 72);

        sub_2528CA438(v9, v10);
LABEL_11:
        sub_25290C478(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
        return v45();
      }
      sub_2528E77E4(*(void *)(v0 + 32), v8);
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 192);
    }

    sub_25290C478(v9, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  uint64_t v11 = *(int *)(v0 + 356);
  uint64_t v12 = *(void (**)(void))(v0 + 256);
  uint64_t v56 = *(void *)(v0 + 160);
  uint64_t v57 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 96);
  uint64_t v64 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  uint64_t v18 = v15 + v11;
  uint64_t v59 = v15 + v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t v19 = *(void *)(v13 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_252953B00;
  unint64_t v60 = v20;
  unint64_t v21 = v55 + v20;
  uint64_t v54 = v16 + *(int *)(v17 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v16, v15, v14);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v54, v18, v14);
  uint64_t v22 = v13;
  id v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32);
  v23(v21, v16, v14);
  uint64_t v62 = v19;
  uint64_t v24 = v64 + *(int *)(v17 + 48);
  v12();
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v24, v59, v14);
  uint64_t v58 = v23;
  v23(v21 + v19, v24, v14);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v25(v64, v14);
  uint64_t v65 = v25;
  v25(v54, v14);
  *(void *)(v0 + 56) = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_2529519B8();
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v57, v56, v14);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v27 = *(void *)(v0 + 304);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v27 = sub_2528C4584(0, *(void *)(v27 + 16) + 1, 1, *(void *)(v0 + 304));
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    unint64_t v27 = sub_2528C4584(v28 > 1, v29 + 1, 1, v27);
  }
  uint64_t v30 = *(void *)(v0 + 272);
  uint64_t v31 = *(void *)(v0 + 152);
  uint64_t v32 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 120);
  uint64_t v33 = *(void *)(v0 + 128);
  uint64_t v35 = *(void *)(v0 + 296) + 1;
  *(void *)(v27 + 16) = v29 + 1;
  v58(v27 + v60 + v29 * v62, v31, v33);
  v65(v32, v33);
  uint64_t result = sub_2528B8494(v34, &qword_269C32D68);
  if (v35 == v30)
  {
    unint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v38 = *(void *)(v0 + 192);
    uint64_t v61 = *(void *)(v0 + 168);
    uint64_t v63 = *(void *)(v0 + 176);
    uint64_t v40 = *(void *)(v0 + 136);
    uint64_t v41 = *(void *)(v0 + 144);
    uint64_t v42 = *(void *)(v0 + 128);
    uint64_t v66 = *(void *)(v0 + 72);
    *(void *)(v0 + 64) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2529519B8();
    uint64_t v43 = v38 + *(int *)(v39 + 48);
    sub_2528B8494(v43, &qword_269C31D20);
    v37(v43, v41, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v42);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v44(v41, v42);
    v44(v61, v42);
    v44(v63, v42);
    sub_2528CA438(v38, v66);
    goto LABEL_11;
  }
  unint64_t v46 = *(void *)(v0 + 296) + 1;
  *(void *)(v0 + 296) = v46;
  *(void *)(v0 + 304) = v27;
  *(void *)(v0 + 288) = 0;
  if (v46 == *(void *)(v0 + 272))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v47 = *(void *)(*(void *)(v0 + 192) + *(int *)(v0 + 352));
  if (v46 >= *(void *)(v47 + 16))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  if (*(void *)(*(void *)(v0 + 280) + 16)
    && (unint64_t v48 = sub_252923060(*(void *)(v47 + 40 * v46 + 32)), (v49 & 1) != 0))
  {
    uint64_t v50 = *(void *)(*(void *)(*(void *)(v0 + 280) + 56) + 8 * v48);
  }
  else
  {
    uint64_t v50 = CoreIKCreateAltruisticSolverInstance();
  }
  *(void *)(v0 + 312) = v50;
  *(_DWORD *)(v0 + 356) = *(_DWORD *)(*(void *)(v0 + 96) + 48);
  uint64_t SourceBufferSize = CoreIKSolverGetSourceBufferSize();
  *(void *)(v0 + 320) = SourceBufferSize;
  *(void *)(v0 + 328) = CoreIKSolverGetTargetBufferSize();
  float32x4_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v52;
  *float32x4_t v52 = v0;
  v52[1] = sub_25290B7B0;
  uint64_t v53 = *(void *)(v0 + 168);
  return sub_25290C4D8(v53, v46, SourceBufferSize);
}

uint64_t sub_25290BFF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25290C0D0()
{
  sub_25290C478(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25290C1C4()
{
  uint64_t v1 = *(void **)(v0 + 248);
  *(void *)(v0 + 48) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C323B0);
  if (swift_dynamicCast())
  {
    unint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 192);
    if (v3 == 2)
    {
      uint64_t v5 = *(void *)(v0 + 72);

      sub_2528CA438(v4, v5);
      sub_25290C478(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    sub_2528E77E4(*(void *)(v0 + 32), v3);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 192);
  }

  sub_25290C478(v4, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v6();
}

uint64_t sub_25290C3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_25290AC80(a1, a2);
}

uint64_t sub_25290C478(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25290C4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v4[7] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v4[8] = v7;
  void *v7 = v4;
  v7[1] = sub_25290C600;
  uint64_t v8 = MEMORY[0x263F8D5C8];
  uint64_t v9 = MEMORY[0x263F00C58];
  uint64_t v10 = MEMORY[0x263F00C50];
  uint64_t v11 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v6, v8, v11, v9, v10);
}

uint64_t sub_25290C600()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25290C710, v1, 0);
}

uint64_t sub_25290C710()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = sub_2528EC4D4(v1, (__n128)0, 0.0, (__n128)0);
  if (v1 < 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v3 = (void *)result;
  if (*(void *)(v0 + 24))
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(void *)(v0 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_252953970;
      *(void *)(v7 + 32) = v6;
      *(void *)(v7 + 40) = v5;
      *(void *)(v7 + 48) = 0;
      sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
      sub_2529515F8();
      swift_bridgeObjectRelease();
      LODWORD(v8) = *(_DWORD *)(v0 + 72);
      long long v17 = v8;
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_252953970;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(void *)(v9 + 48) = 1;
      sub_2529515F8();
      swift_bridgeObjectRelease();
      float v10 = *(float *)(v0 + 76);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_252953970;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v5;
      *(void *)(v11 + 48) = 2;
      sub_2529515F8();
      swift_bridgeObjectRelease();
      float v12 = *(float *)(v0 + 80);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_252939C9C(v3);
        uint64_t v3 = (void *)result;
      }
      if (v5 >= v3[2]) {
        break;
      }
      ++v5;
      long long v13 = v17;
      *((float *)&v13 + 1) = -v10;
      *((float *)&v13 + 2) = -v12;
      uint64_t v14 = *(void *)(v0 + 24);
      uint64_t v15 = &v3[v4];
      *((_OWORD *)v15 + 2) = v13;
      *((_OWORD *)v15 + 3) = xmmword_252956C00;
      v4 += 4;
      if (v5 == v14) {
        goto LABEL_8;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_8:
  (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void *))(v0 + 8);
  return v16(v3);
}

uint64_t sub_25290C990@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_252951A08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  float v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2528EC59C(a1, (__n128)0, (__n128)0, (__n128)0, (__n128)0);
  if (a1 < 0) {
    goto LABEL_17;
  }
  uint64_t v3 = (void *)v11;
  if (a1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_18;
    }
    while (1)
    {
      unint64_t v12 = 0;
      unint64_t v13 = a2 + 16;
      uint64_t v14 = v3 + 10;
      while (1)
      {
        long long v24 = *(_OWORD *)(v13 - 16);
        sub_252951D08();
        a2 = v3[2];
        if (v12 >= a2) {
          break;
        }
        long long v15 = v24;
        HIDWORD(v15) = 1.0;
        long long v17 = v27;
        long long v16 = v28;
        HIDWORD(v16) = 0;
        long long v18 = v26;
        HIDWORD(v17) = 0;
        HIDWORD(v18) = 0;
        ++v12;
        *(v14 - 3) = v18;
        *(v14 - 2) = v17;
        *(v14 - 1) = v16;
        *uint64_t v14 = v15;
        v13 += 32;
        v14 += 4;
        if (a1 == v12) {
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v3 = sub_252939CB0(v3);
    }
  }
  a2 = *(void *)(v11 + 16);
  if (a2)
  {
LABEL_9:
    *(void *)&long long v24 = a3;
    uint64_t v25 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_252922F08(0, a2, 0);
    uint64_t v19 = v25;
    unint64_t v20 = (int8x16_t *)(v3 + 10);
    do
    {
      MLTensor.init(matrix4x4:)(v20[-3], v20[-2], v20[-1], *v20);
      uint64_t v25 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_252922F08(v21 > 1, v22 + 1, 1);
        uint64_t v19 = v25;
      }
      *(void *)(v19 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v22, v10, v7);
      v20 += 4;
      --a2;
    }
    while (a2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  uint64_t v25 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  return sub_2529519B8();
}

uint64_t sub_25290CC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_2528EC4D4(a6, (__n128)0, 0.0, (__n128)0);
  uint64_t v10 = sub_2528EC4D4(a6, (__n128)0, 0.0, (__n128)0);
  if ((unint64_t)(a6 - 0x400000000000000) >> 59 != 31)
  {
    __break(1u);
LABEL_14:
    uint64_t result = sub_252951F78();
    __break(1u);
    return result;
  }
  uint64_t v11 = v10;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v12 = 32 * a6;
  unint64_t v13 = (char *)swift_slowAlloc();
  if (a6 < 0) {
    goto LABEL_14;
  }
  unint64_t v14 = (unint64_t)v13;
  long long v15 = (char *)(v9 + 32);
  if (v9 + 32 < (unint64_t)&v13[v12] && v13 < &v15[v12]) {
    goto LABEL_14;
  }
  memcpy(v13, v15, 32 * a6);
  swift_bridgeObjectRelease();
  long long v16 = (char *)swift_slowAlloc();
  unint64_t v17 = (unint64_t)v16;
  long long v18 = (char *)(v11 + 32);
  if (v11 + 32 < (unint64_t)&v16[v12] && v16 < &v18[v12]) {
    goto LABEL_14;
  }
  memcpy(v16, v18, 32 * a6);
  swift_bridgeObjectRelease();
  int v19 = CoreIKSolveModelSpaceSource();
  if (v19)
  {
    if (v19 == 2)
    {
      sub_2528F2AF0();
      swift_allocError();
      *unint64_t v20 = 0xD000000000000014;
      unint64_t v21 = 0x800000025295C110;
    }
    else
    {
      sub_2528F2AF0();
      swift_allocError();
      *unint64_t v20 = 0x6C616E7265746E49;
      unint64_t v21 = 0xEF2E726F72726520;
    }
    v20[1] = v21;
    return swift_willThrow();
  }
  else
  {
    sub_25290C990(a6, v14, v23);
    sub_25290C990(a6, v17, v24);
    MEMORY[0x2533C16C0](v14, -1, -1);
    return MEMORY[0x2533C16C0](v17, -1, -1);
  }
}

uint64_t ActionClassifier.Action.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

float ActionClassifier.Action.confidence.getter()
{
  return *(float *)(v0 + 16);
}

uint64_t ActionClassifier.Action.hash(into:)()
{
  return sub_2529521B8();
}

BOOL static ActionClassifier.Action.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 16);
  float v3 = *(float *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_252952108();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_25290D004(char a1)
{
  if (a1) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_25290D03C()
{
  return sub_25290D004(*v0);
}

uint64_t sub_25290D044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25290DA60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25290D06C(uint64_t a1)
{
  unint64_t v2 = sub_25290D40C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25290D0A8(uint64_t a1)
{
  unint64_t v2 = sub_25290D40C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ActionClassifier.Action.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_25290D160()
{
  return sub_2529521B8();
}

uint64_t sub_25290D1C0()
{
  return sub_2529521C8();
}

BOOL sub_25290D234(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 16);
  float v3 = *(float *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_252952108();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t ActionClassifier.Action.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32D78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25290D40C();
  sub_252952208();
  char v10 = 0;
  uint64_t v6 = v8;
  sub_252952058();
  if (!v6)
  {
    char v9 = 1;
    sub_252952078();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_25290D40C()
{
  unint64_t result = qword_269C32D80;
  if (!qword_269C32D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D80);
  }
  return result;
}

uint64_t ActionClassifier.Action.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32D88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25290D40C();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v15[15] = 0;
  uint64_t v9 = sub_252951FD8();
  uint64_t v11 = v10;
  v15[14] = 1;
  swift_bridgeObjectRetain();
  sub_252951FF8();
  int v13 = v12;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25290D650()
{
  unint64_t result = qword_269C32D90;
  if (!qword_269C32D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D90);
  }
  return result;
}

uint64_t sub_25290D6A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionClassifier.Action.init(from:)(a1, a2);
}

uint64_t sub_25290D6BC(void *a1)
{
  return ActionClassifier.Action.encode(to:)(a1);
}

uint64_t sub_25290D6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ActionVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t _s6ActionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t _s6ActionVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ActionVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionClassifier.Action()
{
  return &type metadata for ActionClassifier.Action;
}

unsigned char *_s6ActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25290D920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ActionV10CodingKeysOMa()
{
  return &_s6ActionV10CodingKeysON;
}

unint64_t sub_25290D95C()
{
  unint64_t result = qword_269C32D98;
  if (!qword_269C32D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32D98);
  }
  return result;
}

unint64_t sub_25290D9B4()
{
  unint64_t result = qword_269C32DA0;
  if (!qword_269C32DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32DA0);
  }
  return result;
}

unint64_t sub_25290DA0C()
{
  unint64_t result = qword_269C32DA8;
  if (!qword_269C32DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32DA8);
  }
  return result;
}

uint64_t sub_25290DA60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t ActionFeatureWrapper.featureNames.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252953740;
  *(void *)(inited + 32) = 0x7475706E69;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v1 = sub_25290DF7C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v1;
}

uint64_t ActionFeatureWrapper.deinit()
{
  return v0;
}

uint64_t ActionFeatureWrapper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_25290DD4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32DC0);
    uint64_t v3 = sub_252951E38();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      char v6 = *(void **)(v32 + 8 * v4);
      sub_252951AE8();
      sub_252952198();
      id v7 = v6;
      sub_252951AF8();
      uint64_t v8 = sub_2529521C8();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_252951AE8();
        uint64_t v17 = v16;
        if (v15 == sub_252951AE8() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_252952108();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_252951AE8();
          uint64_t v24 = v23;
          if (v22 == sub_252951AE8() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_252952108();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_25290DF7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32DB8);
    uint64_t v3 = sub_252951E38();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      char v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_252952198();
      swift_bridgeObjectRetain();
      sub_252951AF8();
      uint64_t result = sub_2529521C8();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_252952108(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          int v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_252952108();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t _s5Human20ActionFeatureWrapperC12featureValue3forSo09MLFeatureF0CSgSS_tF_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v13[-v9];
  sub_2528F2B64(*(id *)(v0 + 16), (uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_25290E378((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v10, v3, v4);
    sub_25290E3D8();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
    uint64_t v11 = sub_252951D18();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v11;
}

uint64_t type metadata accessor for ActionFeatureWrapper()
{
  return self;
}

uint64_t method lookup function for ActionFeatureWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ActionFeatureWrapper);
}

uint64_t sub_25290E378(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25290E3D8()
{
  unint64_t result = qword_269C32DB0;
  if (!qword_269C32DB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C32DB0);
  }
  return result;
}

BOOL static CameraSource.CameraConfiguration.PixelFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CameraSource.CameraConfiguration.PixelFormat.hash(into:)()
{
  return sub_2529521A8();
}

BOOL static CameraSource.CameraConfiguration.Resolution.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CameraSource.CameraConfiguration.Resolution.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t CameraSource.CameraConfiguration.Resolution.hashValue.getter()
{
  return sub_2529521C8();
}

void CameraSource.CameraConfiguration.cameraPosition.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *CameraSource.CameraConfiguration.position.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.position.modify())()
{
  return nullsub_1;
}

void CameraSource.CameraConfiguration.pixelFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *CameraSource.CameraConfiguration.pixelFormat.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.pixelFormat.modify())()
{
  return nullsub_1;
}

double CameraSource.CameraConfiguration.frameRate.getter()
{
  return *(double *)(v0 + 8);
}

void CameraSource.CameraConfiguration.frameRate.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*CameraSource.CameraConfiguration.frameRate.modify())()
{
  return nullsub_1;
}

uint64_t CameraSource.CameraConfiguration.isMirrored.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t CameraSource.CameraConfiguration.isMirrored.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.isMirrored.modify())()
{
  return nullsub_1;
}

uint64_t CameraSource.CameraConfiguration.wantsDepth.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t CameraSource.CameraConfiguration.wantsDepth.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.wantsDepth.modify())()
{
  return nullsub_1;
}

uint64_t CameraSource.CameraConfiguration.wantsMultiperson.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t CameraSource.CameraConfiguration.wantsMultiperson.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 18) = result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.wantsMultiperson.modify())()
{
  return nullsub_1;
}

void CameraSource.CameraConfiguration.resolution.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 19);
}

unsigned char *CameraSource.CameraConfiguration.resolution.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 19) = *result;
  return result;
}

uint64_t (*CameraSource.CameraConfiguration.resolution.modify())()
{
  return nullsub_1;
}

double CameraSource.CameraConfiguration.init()@<D0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 256;
  *(void *)(a1 + 8) = 0x403E000000000000;
  *(void *)&double result = 16842752;
  *(_DWORD *)(a1 + 16) = 16842752;
  return result;
}

unsigned char *CameraSource.CameraConfiguration.init(position:pixelFormat:resolution:frameRate:isMirrored:wantsDepth:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, char *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v7 = *a2;
  char v8 = *a3;
  *(unsigned char *)a6 = *result;
  *(unsigned char *)(a6 + 1) = v7;
  *(double *)(a6 + 8) = a7;
  *(unsigned char *)(a6 + 16) = a4;
  *(unsigned char *)(a6 + 17) = a5;
  *(unsigned char *)(a6 + 18) = 1;
  *(unsigned char *)(a6 + 19) = v8;
  return result;
}

unint64_t sub_25290E6A8()
{
  unint64_t result = qword_269C32DC8;
  if (!qword_269C32DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32DC8);
  }
  return result;
}

unint64_t sub_25290E700()
{
  unint64_t result = qword_269C32DD0;
  if (!qword_269C32DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32DD0);
  }
  return result;
}

unint64_t sub_25290E758()
{
  unint64_t result = qword_269C32DD8;
  if (!qword_269C32DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32DD8);
  }
  return result;
}

uint64_t _s19CameraConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[20]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s19CameraConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 20) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraSource.CameraConfiguration()
{
  return &type metadata for CameraSource.CameraConfiguration;
}

ValueMetadata *type metadata accessor for CameraSource.CameraConfiguration.Position()
{
  return &type metadata for CameraSource.CameraConfiguration.Position;
}

unsigned char *_s19CameraConfigurationV11PixelFormatOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25290E928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraSource.CameraConfiguration.PixelFormat()
{
  return &type metadata for CameraSource.CameraConfiguration.PixelFormat;
}

unsigned char *_s19CameraConfigurationV10ResolutionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25290EA2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraSource.CameraConfiguration.Resolution()
{
  return &type metadata for CameraSource.CameraConfiguration.Resolution;
}

uint64_t sub_25290EA7C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageBufferProcessorStorage()
{
  return self;
}

void destroy for ImageBufferProcessor(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = *(void **)(a1 + 160);
}

void *initializeWithCopy for ImageBufferProcessor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  char v20 = (void *)a2[14];
  uint64_t v10 = (void *)a2[15];
  a1[14] = v20;
  a1[15] = v10;
  uint64_t v21 = v10;
  uint64_t v22 = (void *)a2[16];
  uint64_t v11 = (void *)a2[17];
  a1[16] = v22;
  a1[17] = v11;
  BOOL v23 = v11;
  uint64_t v24 = (void *)a2[18];
  uint64_t v12 = a2[19];
  a1[18] = v24;
  a1[19] = v12;
  uint64_t v25 = (void *)a2[20];
  a1[20] = v25;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v13 = v20;
  id v14 = v21;
  id v15 = v22;
  id v16 = v23;
  id v17 = v24;
  swift_unknownObjectRetain();
  id v18 = v25;
  return a1;
}

void *assignWithCopy for ImageBufferProcessor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[7] = a2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[8] = a2[8];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = (void *)a2[14];
  uint64_t v5 = (void *)a1[14];
  a1[14] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[15];
  uint64_t v8 = (void *)a1[15];
  a1[15] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[16];
  uint64_t v11 = (void *)a1[16];
  a1[16] = v10;
  id v12 = v10;

  id v13 = (void *)a2[17];
  id v14 = (void *)a1[17];
  a1[17] = v13;
  id v15 = v13;

  id v16 = (void *)a2[18];
  id v17 = (void *)a1[18];
  a1[18] = v16;
  id v18 = v16;

  a1[19] = a2[19];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  int v19 = (void *)a1[20];
  char v20 = (void *)a2[20];
  a1[20] = v20;
  id v21 = v20;

  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ImageBufferProcessor(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_unknownObjectRelease();

  long long v4 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  long long v5 = *(void **)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);

  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_unknownObjectRelease();
  long long v6 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImageBufferProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageBufferProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageBufferProcessor()
{
  return &type metadata for ImageBufferProcessor;
}

uint64_t sub_25290F140(__CVBuffer *a1, uint64_t a2, unsigned __int8 *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v72 = a4;
  uint64_t v70 = a2;
  v86[1] = *MEMORY[0x263EF8340];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32E40);
  MEMORY[0x270FA5388](v12);
  uint64_t v68 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v71 = *a3;
  size_t PlaneCount = CVPixelBufferGetPlaneCount(a1);
  if (PlaneCount == 2)
  {
    size_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(a1, 0);
    size_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(a1, 0);
  }
  else
  {
    size_t WidthOfPlane = CVPixelBufferGetWidth(a1);
    size_t HeightOfPlane = CVPixelBufferGetHeight(a1);
  }
  uint64_t v73 = a6;
  id v17 = *(void **)a5;
  if (*(void *)a5 && *(void *)(a5 + 8))
  {
    uint64_t v18 = a7;
  }
  else
  {
    uint64_t v18 = a7;
    uint64_t v19 = sub_25291007C(WidthOfPlane, HeightOfPlane);
    uint64_t v21 = v20;
    swift_unknownObjectRelease();
    *(void *)a5 = v19;
    swift_unknownObjectRelease();
    *(void *)(a5 + 8) = v21;
    id v17 = (void *)v19;
  }
  id v69 = (id)v74[19];
  objc_msgSend(v69, sel_beginScope);
  id v22 = objc_msgSend((id)sub_252905754(), sel_commandBuffer);
  swift_unknownObjectRelease();
  if (!v22) {
    goto LABEL_51;
  }
  BOOL v23 = (void *)sub_252951AB8();
  objc_msgSend(v22, sel_setLabel_, v23);

  if (PlaneCount == 2)
  {
    uint64_t v24 = v17;
    id v25 = v74;
    id v17 = 0;
    sub_25290FAD8(v22, a1, v24);
    uint64_t v26 = v18;
    uint64_t v27 = v73;
    while (1)
    {
      uint64_t v34 = *(void **)a5;
      uint64_t v35 = *(void **)(a5 + 8);
      if (v35) {
        break;
      }
LABEL_17:
      __break(1u);
    }
  }
  else
  {
    id v25 = v74;
    sub_2529103D4((uint64_t)(v74 + 20), (uint64_t)v85);
    sub_2529103D4((uint64_t)v85, (uint64_t)v86);
    uint64_t v28 = (__CVMetalTextureCache *)v86[0];
    if (!v86[0])
    {
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v26 = v18;
    size_t Width = CVPixelBufferGetWidth(a1);
    size_t Height = CVPixelBufferGetHeight(a1);
    MTLPixelFormat v31 = sub_2528BDD54();
    CVMetalTextureRef aBlock = 0;
    CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x263EFFB10], v28, a1, 0, v31, Width, Height, 0, &aBlock);
    CVMetalTextureRef v32 = aBlock;
    uint64_t v27 = v73;
    if (aBlock && (id v33 = CVMetalTextureGetTexture(aBlock)) != 0)
    {
      uint64_t v34 = v33;
    }
    else
    {
      CVMetalTextureCacheFlush(v28, 0);

      uint64_t v34 = 0;
    }
    swift_unknownObjectRelease();
    *(void *)a5 = v34;
    uint64_t v35 = *(void **)(a5 + 8);
    if (!v35) {
      goto LABEL_17;
    }
  }
  if (v34)
  {
    swift_unknownObjectRetain();
    id v36 = objc_msgSend(v35, sel_width);
    unint64_t v37 = objc_msgSend(v34, sel_width);
    uint64_t v38 = v36 - v37;
    if (__OFSUB__(v36, v37))
    {
      __break(1u);
    }
    else
    {
      if (v38 >= 0) {
        uint64_t v39 = v36 - v37;
      }
      else {
        uint64_t v39 = v38 + 1;
      }
      uint64_t v40 = objc_msgSend(v35, sel_height);
      uint64_t v41 = objc_msgSend(v34, sel_height);
      uint64_t v42 = v40 - v41;
      if (!__OFSUB__(v40, v41))
      {
        id v43 = objc_msgSend(v22, sel_blitCommandEncoder);
        if (v43)
        {
          uint64_t v44 = v43;
          uint64_t v45 = v39 >> 1;
          if (v42 >= 0) {
            uint64_t v46 = v42;
          }
          else {
            uint64_t v46 = v42 + 1;
          }
          uint64_t v47 = v46 >> 1;
          swift_unknownObjectRetain();
          id v48 = objc_msgSend(v34, sel_width);
          id v49 = objc_msgSend(v34, sel_height);
          CVMetalTextureRef aBlock = 0;
          unint64_t v80 = 0;
          uint64_t v81 = 0;
          id v76 = v48;
          id v77 = v49;
          uint64_t v78 = 1;
          v75[0] = v45;
          v75[1] = v47;
          id v25 = v74;
          v75[2] = 0;
          objc_msgSend(v44, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, v34, 0, 0, &aBlock, &v76, v35, 0, 0, v75);
          swift_unknownObjectRelease();
          objc_msgSend(v44, sel_endEncoding);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        goto LABEL_31;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
LABEL_31:
  id v50 = (id)*((void *)v25 + 3);
  objc_msgSend(*((id *)v25 + 14), sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, v22, v35, v50);
  id v51 = MTLCreateSystemDefaultDevice();
  if (v51)
  {
    id v52 = objc_msgSend(v51, sel_newBufferWithLength_options_, 1228800, 0);
    swift_unknownObjectRelease();
    char v53 = v71;
    if ((v71 & 0xFE) != 2) {
      goto LABEL_38;
    }
    uint64_t v54 = (void *)*((void *)v25 + 10);
    LOBYTE(aBlock) = v71;
    sub_25290FCD0(v22, (uint64_t)v50, v54, &aBlock, v72 & 1);
    if (v52)
    {
      swift_unknownObjectRetain();
      id v50 = objc_msgSend(v54, sel_width);
      id v25 = objc_msgSend(v54, sel_height);
      id v55 = objc_msgSend(v22, sel_blitCommandEncoder);
      if (v55)
      {
        CVMetalTextureRef aBlock = 0;
        unint64_t v80 = 0;
        uint64_t v81 = 0;
        id v76 = v50;
        id v77 = v25;
        uint64_t v78 = 1;
        objc_msgSend(v55, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toBuffer_destinationOffset_destinationBytesPerRow_destinationBytesPerImage_, v54, 0, 0, &aBlock, &v76, v52, 0, 2560, 1228800);
        objc_msgSend(v55, sel_endEncoding);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      unint64_t v56 = (unint64_t)objc_msgSend(v54, sel_width);
      id v57 = objc_msgSend(v54, sel_height);
      if ((v56 - 0x2000000000000000) >> 62 == 3) {
        goto LABEL_42;
      }
      __break(1u);
LABEL_38:
      uint64_t v58 = (void *)*((void *)v25 + 9);
      LOBYTE(aBlock) = v53;
      sub_25290FCD0(v22, (uint64_t)v50, v58, &aBlock, v72 & 1);
      if (v52)
      {
        swift_unknownObjectRetain();
        id v59 = objc_msgSend(v58, sel_width);
        id v60 = objc_msgSend(v58, sel_height);
        id v61 = objc_msgSend(v22, sel_blitCommandEncoder);
        if (v61)
        {
          CVMetalTextureRef aBlock = 0;
          unint64_t v80 = 0;
          uint64_t v81 = 0;
          id v76 = v59;
          id v77 = v60;
          uint64_t v78 = 1;
          objc_msgSend(v61, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toBuffer_destinationOffset_destinationBytesPerRow_destinationBytesPerImage_, v58, 0, 0, &aBlock, &v76, v52, 0, 1920, 1228800);
          objc_msgSend(v61, sel_endEncoding);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        unint64_t v56 = (unint64_t)objc_msgSend(v58, sel_width);
        id v57 = objc_msgSend(v58, sel_height);
        if ((v56 - 0x2000000000000000) >> 62 == 3)
        {
LABEL_42:
          id v62 = v57;
          uint64_t v63 = (void *)swift_allocObject();
          v63[2] = v70;
          v63[3] = v52;
          v63[4] = v56;
          v63[5] = v62;
          v63[6] = 4 * v56;
          v63[7] = v27;
          v63[8] = v26;
          long long v83 = sub_252910484;
          uint64_t v84 = v63;
          CVMetalTextureRef aBlock = (CVMetalTextureRef)MEMORY[0x263EF8330];
          unint64_t v80 = 1107296256;
          uint64_t v81 = sub_25290FF60;
          uint64_t v82 = &block_descriptor_2;
          uint64_t v64 = _Block_copy(&aBlock);
          swift_unknownObjectRetain();
          sub_2529104B0(v27);
          swift_release();
          objc_msgSend(v22, sel_addCompletedHandler_, v64);
          _Block_release(v64);
          objc_msgSend(v22, sel_commit);
          objc_msgSend(v69, sel_endScope);
          swift_unknownObjectRelease();
          return swift_unknownObjectRelease();
        }
LABEL_45:
        __break(1u);
      }
      goto LABEL_48;
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_51;
  }
  CVMetalTextureRef aBlock = 0;
  unint64_t v80 = 0xE000000000000000;
  uint64_t v66 = (uint64_t)v67;
  swift_storeEnumTagMultiPayload();
  sub_252951F08();
  sub_252905904(v66);
LABEL_51:
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

void sub_25290FAD8(void *a1, CVPixelBufferRef pixelBuffer, void *a3)
{
  image[1] = *(CVMetalTextureRef *)MEMORY[0x263EF8340];
  long long v4 = *(__CVMetalTextureCache **)(v3 + 160);
  if (!v4) {
LABEL_12:
  }
    __break(1u);
  size_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(pixelBuffer, 0);
  size_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(pixelBuffer, 0);
  image[0] = 0;
  CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
  CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x263EFFB10], v4, pixelBuffer, 0, MTLPixelFormatR8Unorm, WidthOfPlane, HeightOfPlane, 0, image);
  CVMetalTextureRef v11 = image[0];
  if (image[0] && (id v12 = CVMetalTextureGetTexture(image[0])) != 0)
  {
    uint64_t v13 = (uint64_t)v12;
  }
  else
  {
    CVMetalTextureCacheFlush(v4, 0);

    uint64_t v13 = 0;
  }
  size_t v14 = CVPixelBufferGetWidthOfPlane(pixelBuffer, 1uLL);
  size_t v15 = CVPixelBufferGetHeightOfPlane(pixelBuffer, 1uLL);
  image[0] = 0;
  CVMetalTextureCacheCreateTextureFromImage(v10, v4, pixelBuffer, 0, MTLPixelFormatRG8Unorm, v14, v15, 1uLL, image);
  CVMetalTextureRef v16 = image[0];
  if (image[0])
  {
    id v17 = CVMetalTextureGetTexture(image[0]);
    if (v17)
    {
      uint64_t v18 = (uint64_t)v17;

      if (v13)
      {
        uint64_t v19 = *(void **)(v3 + 104);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_252949C10(a1, v13, v18, a3, v19);
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
        return;
      }
      goto LABEL_11;
    }
  }
  CVMetalTextureCacheFlush(v4, 0);

  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __break(1u);
}

id sub_25290FCD0(void *a1, uint64_t a2, void *a3, unsigned char *a4, char a5)
{
  long long v8 = a1;
  switch(*a4)
  {
    case 1:
      uint64_t v12 = *(void *)(v5 + 56);
      objc_msgSend(*(id *)(v5 + 120), sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, a1, a2, v12);
      if (a5)
      {
        uint64_t v13 = *(void **)(v5 + 64);
        sub_252903904(v8, v12, v13);
        size_t v14 = v8;
        uint64_t v15 = (uint64_t)v13;
        goto LABEL_16;
      }
      a1 = v8;
      a2 = v12;
      return (id)sub_252903904(a1, a2, a3);
    case 2:
      if ((a5 & 1) == 0)
      {
        CVMetalTextureRef v11 = *(void **)(v5 + 32);
        sub_252903904(a1, a2, v11);
        goto LABEL_15;
      }
      return (id)sub_252903904(a1, a2, a3);
    case 3:
      if (a5)
      {
        CVMetalTextureRef v11 = *(void **)(v5 + 32);
        sub_2528F135C(a1, a2, v11);
        goto LABEL_15;
      }
      id result = (id)sub_2528F135C(a1, a2, a3);
      break;
    default:
      long long v9 = *(void **)(v5 + 120);
      if (a5)
      {
        id result = objc_msgSend(v9, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, v8, a2, a3);
      }
      else
      {
        CVMetalTextureRef v11 = *(void **)(v5 + 56);
        objc_msgSend(v9, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, v8, a2, v11);
LABEL_15:
        size_t v14 = v8;
        uint64_t v15 = (uint64_t)v11;
LABEL_16:
        id result = (id)sub_252903038(v14, v15, a3);
      }
      break;
  }
  return result;
}

uint64_t sub_25290FE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *))
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32E40);
  uint64_t result = MEMORY[0x270FA5388](v13);
  CVMetalTextureRef v16 = (char *)&v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    *(void *)CVMetalTextureRef v16 = a2;
    *((void *)v16 + 1) = a3;
    *((void *)v16 + 2) = a4;
    v16[24] = 0;
    *((void *)v16 + 4) = a5;
    v16[40] = 0;
    *((void *)v16 + 6) = a6;
    v16[56] = 0;
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    a7(v16);
    return sub_2529104C0((uint64_t)v16);
  }
  return result;
}

uint64_t sub_25290FF60(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_25290FFC0(uint64_t result, uint64_t a2)
{
  if (result < 641)
  {
    uint64_t v3 = 1;
    if (a2 >= 481)
    {
LABEL_8:
      uint64_t v5 = 2;
      while (v5 != 0x44444444444445)
      {
        uint64_t v6 = v5;
        uint64_t v7 = 480 * v5++;
        if (v7 > a2)
        {
          if (v3 >= v6) {
            uint64_t v3 = v6;
          }
          goto LABEL_13;
        }
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v2 = 2;
    do
    {
      if (v2 == 0x33333333333334)
      {
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v3 = v2;
      uint64_t v4 = 640 * v2++;
    }
    while (v4 <= result);
    if (a2 > 480) {
      goto LABEL_8;
    }
    uint64_t v3 = 1;
  }
LABEL_13:
  uint64_t result = 640 * v3;
  if ((unsigned __int128)(v3 * (__int128)640) >> 64 != (640 * v3) >> 63) {
LABEL_17:
  }
    __break(1u);
  return result;
}

uint64_t sub_25291007C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, a1, a2, 0);
  objc_msgSend(v8, sel_setUsage_, 3);
  id v9 = MTLCreateSystemDefaultDevice();
  if (!v9)
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    uint64_t v19 = (uint64_t)v6;
LABEL_9:
    sub_252905904(v19);
    goto LABEL_10;
  }
  v21[0] = v6;
  v21[1] = v4;
  id v10 = objc_msgSend(v9, sel_newTextureWithDescriptor_, v8);
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_10;
  }
  CVMetalTextureRef v11 = (void *)sub_252951AB8();
  objc_msgSend(v10, sel_setLabel_, v11);

  uint64_t v12 = sub_25290FFC0(a1, a2);
  id v14 = objc_msgSend(v7, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, v12, v13, 0);
  objc_msgSend(v14, sel_setUsage_, 3);
  id v15 = MTLCreateSystemDefaultDevice();
  if (!v15)
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    uint64_t v20 = v21[0];
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    uint64_t v19 = v20;
    goto LABEL_9;
  }
  id v16 = objc_msgSend(v15, sel_newTextureWithDescriptor_, v14);
  swift_unknownObjectRelease();
  if (v16)
  {
    uint64_t v17 = (void *)sub_252951AB8();
    objc_msgSend(v16, sel_setLabel_, v17);

    return (uint64_t)v10;
  }
LABEL_10:
  uint64_t result = sub_252951F28();
  __break(1u);
  return result;
}

uint64_t sub_2529103D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25291043C()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_252910484(uint64_t a1)
{
  return sub_25290FE74(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(char *))(v1 + 56));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2529104B0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2529104C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_252910520@<X0>(uint64_t a1@<X8>)
{
  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x263EF8340];
  uint64_t v3 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ImageBufferProcessorStorage();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  id v7 = MTLCreateSystemDefaultDevice();
  if (!v7)
  {
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    swift_retain();
LABEL_44:
    uint64_t v76 = (uint64_t)v5;
    goto LABEL_48;
  }
  sub_252949E0C(v7);
  if (v1) {
    return (void *)swift_release();
  }
  uint64_t v10 = v8;
  uint64_t v85 = a1;
  swift_retain();
  uint64_t v93 = v10;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v11 = MTLCreateSystemDefaultDevice();
  if (!v11)
  {
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    goto LABEL_44;
  }
  uint64_t v86 = v5;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F132A0]), sel_initWithDevice_, v11);
  swift_unknownObjectRelease();
  id v13 = v12;
  id v14 = (void *)sub_252951AB8();
  objc_msgSend(v13, sel_setLabel_, v14);
  id v92 = v13;

  id v15 = MTLCreateSystemDefaultDevice();
  if (!v15) {
    goto LABEL_39;
  }
  id v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PassthroughKernel()), sel_initWithDevice_, v15);
  swift_unknownObjectRelease();
  id v17 = v16;
  uint64_t v18 = (void *)sub_252951AB8();
  objc_msgSend(v17, sel_setLabel_, v18);
  id v91 = v17;

  id v19 = MTLCreateSystemDefaultDevice();
  if (!v19) {
    goto LABEL_39;
  }
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F13300]), sel_initWithDevice_, v19);
  swift_unknownObjectRelease();
  id v21 = v20;
  uint64_t v22 = (void *)sub_252951AB8();
  objc_msgSend(v21, sel_setLabel_, v22);
  id v90 = v21;

  id v23 = MTLCreateSystemDefaultDevice();
  if (!v23) {
    goto LABEL_39;
  }
  uint64_t v83 = v6;
  uint64_t v84 = 0;
  id v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VerticalFlipKernel()), sel_initWithDevice_, v23);
  swift_unknownObjectRelease();
  id v25 = v24;
  uint64_t v26 = (void *)sub_252951AB8();
  objc_msgSend(v25, sel_setLabel_, v26);
  id v89 = v25;

  id v27 = MTLCreateSystemDefaultDevice();
  if (!v27) {
    goto LABEL_39;
  }
  id v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HorizontalFlipKernel()), sel_initWithDevice_, v27);
  swift_unknownObjectRelease();
  id v29 = v28;
  uint64_t v30 = (void *)sub_252951AB8();
  objc_msgSend(v29, sel_setLabel_, v30);
  id v88 = v29;

  MTLPixelFormat v31 = self;
  id v32 = objc_msgSend(v31, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, 640, 480, 0);
  objc_msgSend(v32, sel_setUsage_, 3);
  id v33 = MTLCreateSystemDefaultDevice();
  if (!v33) {
    goto LABEL_39;
  }
  id v94 = v32;
  id v34 = objc_msgSend(v33, sel_newTextureWithDescriptor_, v32);
  swift_unknownObjectRelease();
  if (!v34)
  {
    __break(1u);
    goto LABEL_31;
  }
  swift_unknownObjectRetain_n();
  uint64_t v35 = (void *)sub_252951AB8();
  objc_msgSend(v34, sel_setLabel_, v35);
  swift_unknownObjectRelease();

  id v36 = MTLCreateSystemDefaultDevice();
  if (!v36)
  {
LABEL_39:
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    uint64_t v74 = (uint64_t)v86;
    swift_storeEnumTagMultiPayload();
LABEL_47:
    sub_252951F08();
    uint64_t v76 = v74;
    goto LABEL_48;
  }
  id v37 = objc_msgSend(v36, sel_newTextureWithDescriptor_, v94);
  swift_unknownObjectRelease();
  if (!v37)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_unknownObjectRetain_n();
  uint64_t v38 = (void *)sub_252951AB8();
  objc_msgSend(v37, sel_setLabel_, v38);
  id v82 = v37;
  swift_unknownObjectRelease();

  id v39 = MTLCreateSystemDefaultDevice();
  if (!v39) {
    goto LABEL_39;
  }
  id v40 = objc_msgSend(v39, sel_newTextureWithDescriptor_, v94);
  swift_unknownObjectRelease();
  if (!v40)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_unknownObjectRetain_n();
  uint64_t v41 = (void *)sub_252951AB8();
  objc_msgSend(v40, sel_setLabel_, v41);
  swift_unknownObjectRelease();

  id v42 = MTLCreateSystemDefaultDevice();
  if (!v42) {
    goto LABEL_39;
  }
  id v81 = v40;
  id v43 = objc_msgSend(v42, sel_newTextureWithDescriptor_, v94);
  swift_unknownObjectRelease();
  if (!v43)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_unknownObjectRetain_n();
  uint64_t v44 = (void *)sub_252951AB8();
  objc_msgSend(v43, sel_setLabel_, v44);
  id v87 = v43;
  swift_unknownObjectRelease();

  id v45 = objc_msgSend(v31, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, 480, 640, 0);
  objc_msgSend(v45, sel_setUsage_, 3);
  id v46 = MTLCreateSystemDefaultDevice();
  if (!v46) {
    goto LABEL_39;
  }
  id v47 = objc_msgSend(v46, sel_newTextureWithDescriptor_, v45);
  swift_unknownObjectRelease();
  if (!v47)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v48 = (__CVMetalTextureCache *)v3;
  swift_unknownObjectRetain_n();
  id v49 = (void *)sub_252951AB8();
  objc_msgSend(v47, sel_setLabel_, v49);
  swift_unknownObjectRelease();

  id v50 = MTLCreateSystemDefaultDevice();
  if (!v50)
  {
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    uint64_t v74 = (uint64_t)v86;
    goto LABEL_46;
  }
  id v51 = objc_msgSend(v50, sel_newTextureWithDescriptor_, v45);
  swift_unknownObjectRelease();
  if (!v51) {
    goto LABEL_35;
  }
  uint64_t v78 = v48;
  swift_unknownObjectRetain_n();
  id v52 = (void *)sub_252951AB8();
  objc_msgSend(v51, sel_setLabel_, v52);
  swift_unknownObjectRelease();

  id v53 = MTLCreateSystemDefaultDevice();
  if (!v53)
  {
LABEL_41:
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    uint64_t v75 = (uint64_t)v86;
    swift_storeEnumTagMultiPayload();
    sub_252951F08();
    uint64_t v76 = v75;
LABEL_48:
    sub_252905904(v76);
    while (1)
    {
LABEL_49:
      sub_252951F28();
      __break(1u);
    }
  }
  id v54 = objc_msgSend(v53, sel_newTextureWithDescriptor_, v45);
  swift_unknownObjectRelease();
  if (!v54)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v80 = v51;
  swift_unknownObjectRetain_n();
  id v55 = (void *)sub_252951AB8();
  objc_msgSend(v54, sel_setLabel_, v55);
  id v79 = v54;
  swift_unknownObjectRelease();

  id v56 = MTLCreateSystemDefaultDevice();
  if (!v56) {
    goto LABEL_41;
  }
  id v57 = v47;
  id v58 = objc_msgSend(v56, sel_newTextureWithDescriptor_, v45);
  swift_unknownObjectRelease();
  if (!v58)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_unknownObjectRetain_n();
  id v59 = (void *)sub_252951AB8();
  objc_msgSend(v58, sel_setLabel_, v59);
  swift_unknownObjectRelease();

  id v60 = objc_msgSend(self, sel_sharedCaptureManager);
  id v61 = MTLCreateSystemDefaultDevice();
  if (!v61) {
    goto LABEL_42;
  }
  id v62 = (char *)objc_msgSend(v60, sel_newCaptureScopeWithDevice_, v61);
  swift_unknownObjectRelease();
  swift_unknownObjectRetain_n();
  uint64_t v63 = (void *)sub_252951AB8();
  objc_msgSend(v62, sel_setLabel_, v63);
  swift_unknownObjectRelease();

  cacheOut[0] = 0;
  CFAllocatorRef v64 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
  id v65 = MTLCreateSystemDefaultDevice();
  if (!v65)
  {
LABEL_42:
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    uint64_t v74 = (uint64_t)v86;
LABEL_46:
    swift_storeEnumTagMultiPayload();
    goto LABEL_47;
  }
  CVReturn v66 = CVMetalTextureCacheCreate(v64, 0, v65, 0, cacheOut);
  swift_unknownObjectRelease();
  if (v66) {
    goto LABEL_49;
  }
  uint64_t v86 = v62;
  CVMetalTextureCacheRef v67 = cacheOut[0];
  if (!cacheOut[0]) {
    goto LABEL_38;
  }
  uint64_t v78 = cacheOut[0];

  long long v95 = (unint64_t)v83;
  *(void *)&long long v96 = 0;
  *((void *)&v96 + 1) = v34;
  *(void *)&long long v97 = v82;
  *((void *)&v97 + 1) = v81;
  *(void *)&long long v98 = v79;
  *((void *)&v98 + 1) = v57;
  *(void *)&long long v99 = v80;
  *((void *)&v99 + 1) = v58;
  *(void *)uint64_t v100 = v87;
  *(_OWORD *)&v100[8] = xmmword_2529576A0;
  *(void *)&v100[24] = v93;
  *(void *)&long long v101 = v92;
  *((void *)&v101 + 1) = v90;
  *(void *)&long long v102 = v89;
  *((void *)&v102 + 1) = v88;
  *(void *)&long long v103 = v91;
  *((void *)&v103 + 1) = v86;
  CVMetalTextureCacheRef v104 = v67;
  sub_252911284((uint64_t)&v95);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t result = sub_2528C0DEC(&v95);
  long long v68 = v103;
  uint64_t v69 = v85;
  *(_OWORD *)(v85 + 128) = v102;
  *(_OWORD *)(v69 + 144) = v68;
  *(void *)(v69 + 160) = v104;
  long long v70 = *(_OWORD *)v100;
  *(_OWORD *)(v69 + 64) = v99;
  *(_OWORD *)(v69 + 80) = v70;
  long long v71 = v101;
  *(_OWORD *)(v69 + 96) = *(_OWORD *)&v100[16];
  *(_OWORD *)(v69 + 112) = v71;
  long long v72 = v96;
  *(_OWORD *)uint64_t v69 = v95;
  *(_OWORD *)(v69 + 16) = v72;
  long long v73 = v98;
  *(_OWORD *)(v69 + 32) = v97;
  *(_OWORD *)(v69 + 48) = v73;
  return result;
}

uint64_t sub_252911284(uint64_t a1)
{
  id v9 = *(void **)(a1 + 112);
  uint64_t v10 = *(void **)(a1 + 120);
  id v11 = *(void **)(a1 + 128);
  id v12 = *(void **)(a1 + 136);
  id v13 = *(void **)(a1 + 144);
  id v2 = *(id *)(a1 + 160);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v3 = v9;
  id v4 = v10;
  id v5 = v11;
  id v6 = v12;
  id v7 = v13;
  swift_unknownObjectRetain();
  return a1;
}

unint64_t HandError.errorDescription.getter()
{
  return 0xD00000000000003ALL;
}

unint64_t HandError.debugDescription.getter()
{
  return 0xD00000000000003ALL;
}

uint64_t HandError.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t static HandError.== infix(_:_:)()
{
  return 1;
}

uint64_t HandError.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t sub_252911468()
{
  return sub_2529521C8();
}

uint64_t sub_2529114AC()
{
  return sub_2529521A8();
}

uint64_t sub_2529114D4()
{
  return sub_2529521C8();
}

unint64_t sub_252911518()
{
  unint64_t result = qword_269C32E50;
  if (!qword_269C32E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32E50);
  }
  return result;
}

unint64_t sub_252911570()
{
  unint64_t result = qword_269C32E58;
  if (!qword_269C32E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32E58);
  }
  return result;
}

unint64_t sub_2529115C4()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_2529115E0()
{
  return 1;
}

uint64_t getEnumTagSinglePayload for HandError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for HandError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2529116D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandError()
{
  return &type metadata for HandError;
}

uint64_t SourceNode.generate()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(void *)(a2 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2529117C8, 0, 0);
}

uint64_t sub_2529117C8()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  (*(void (**)(uint64_t, void, uint64_t))(v0[6] + 16))(v1, v0[5], v2);
  sub_2528F1DF4(v1, v2, v3);
  swift_task_dealloc();
  unsigned int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t SourceNode.callAsFunction()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528A91AC;
  return v9(a1, a2, a3);
}

{
  uint64_t v3;
  void *v7;
  uint64_t v9;

  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528E9BB0;
  return SourceNode.generate()(a1, a2, a3);
}

uint64_t dispatch thunk of SourceNode.generate()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_2528A91AC;
  return v9(a1, a2, a3);
}

uint64_t sub_252911B2C()
{
  type metadata accessor for SourceTensorProviders();

  return swift_getWitnessTable();
}

unint64_t RepetitiveActionsCounterError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000025;
  }
}

unint64_t RepetitiveActionsCounterError.debugDescription.getter()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000025;
  }
}

uint64_t RepetitiveActionsCounterError.hash(into:)()
{
  return sub_2529521A8();
}

BOOL static RepetitiveActionsCounterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RepetitiveActionsCounterError.hashValue.getter()
{
  return sub_2529521C8();
}

unint64_t sub_252911CC0()
{
  unint64_t result = qword_269C32E80;
  if (!qword_269C32E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32E80);
  }
  return result;
}

unint64_t sub_252911D18()
{
  unint64_t result = qword_269C32E88;
  if (!qword_269C32E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C32E88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RepetitiveActionsCounterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252911E40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepetitiveActionsCounterError()
{
  return &type metadata for RepetitiveActionsCounterError;
}

void *sub_252911E78(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    id v9 = (int *)type metadata accessor for BodyPose2DEstimator();
    v8((void *)((char *)v4 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    id v11 = (char *)v4 + v10;
    id v12 = (char *)a2 + v10;
    v8((void *)((char *)v4 + v10), (void *)((char *)a2 + v10), v7);
    uint64_t v13 = type metadata accessor for GaussianFilter();
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)((char *)v4 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    id v14 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
    *(_DWORD *)((char *)v4 + v14[5]) = *(_DWORD *)((char *)a2 + v14[5]);
    uint64_t v15 = v14[6];
    id v16 = (char *)v4 + v15;
    id v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)id v16 = *(_OWORD *)v17;
    *((unsigned char *)v4 + v14[7]) = *((unsigned char *)a2 + v14[7]);
    uint64_t v18 = a3[6];
    *(void *)((char *)v4 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    id v19 = (char *)v4 + v18;
    id v20 = (char *)a2 + v18;
    *(void *)id v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_252912064(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for BodyPose2DEstimator();
  v3(a1 + *(int *)(v4 + 20), v2);
  v3(a1 + *(int *)(v4 + 24), v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_252912158(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2529122F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_retain();
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_retain();
  swift_release();
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2529124D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_252912648(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_release();
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  uint64_t v20 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_release();
  return a1;
}

uint64_t sub_2529127EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252912800);
}

uint64_t sub_252912800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2529128C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2529128D4);
}

uint64_t sub_2529128D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for HiFiBodyPose3DEstimator()
{
  uint64_t result = qword_269C32E90;
  if (!qword_269C32E90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2529129DC()
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_252912A8C(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for BodyPose2DEstimator();
  uint64_t v2 = swift_task_alloc();
  v1[6] = v2;
  uint64_t v3 = type metadata accessor for HiFiBodyPose2DEstimator();
  v1[7] = v3;
  uint64_t v4 = swift_task_alloc();
  v1[8] = v4;
  v1[9] = swift_task_alloc();
  *(_DWORD *)(v4 + *(int *)(v3 + 20)) = 1068149419;
  *(unsigned char *)(v4 + *(int *)(v3 + 28)) = 1;
  int v5 = (void *)swift_task_alloc();
  v1[10] = v5;
  *int v5 = v1;
  v5[1] = sub_252912BC8;
  return sub_25291E4E8(v2);
}

uint64_t sub_252912BC8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252912CC4, 0, 0);
}

uint64_t sub_252912CC4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  sub_25290A5AC(v0[6], v1, (uint64_t (*)(void))type metadata accessor for BodyPose2DEstimator);
  uint64_t v5 = v1 + *(int *)(v3 + 24);
  *(unsigned char *)uint64_t v5 = 0;
  *(_OWORD *)(v5 + 8) = xmmword_252957040;
  sub_25290A5AC(v1, v2, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  sub_25290A5AC(v2, v4, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D98]), sel_init);
  v0[11] = v6;
  objc_msgSend(v6, sel_setComputeUnits_, 2);
  uint64_t v7 = sub_252951268();
  v0[12] = v7;
  v0[13] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v0[14] = v8;
  v0[15] = type metadata accessor for Shiraz();
  sub_2528C6CC4(v8);
  sub_25290A614();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = v9;
  void *v9 = v0;
  v9[1] = sub_252912E8C;
  return MEMORY[0x270EE7958](v8, v6);
}

uint64_t sub_252912E8C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[13] + 8))(v4[14], v4[12]);
    uint64_t v5 = sub_252907550;
  }
  else
  {
    v4[18] = a1;
    uint64_t v5 = sub_252912FC8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_252912FC8()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = (void *)v0[11];
  uint64_t v6 = v0[5];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();

  uint64_t v8 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
  uint64_t v9 = v6 + v8[6];
  *(void *)uint64_t v9 = v7;
  *(unsigned char *)(v9 + 8) = 2;
  type metadata accessor for Lifting3DPreprocessor();
  swift_allocObject();
  *(void *)(v6 + v8[5]) = sub_25291ADB0(2);
  type metadata accessor for Accumulator();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 1;
  type metadata accessor for Accumulator.BufferManager();
  uint64_t v11 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v11 + 112) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v11 + 120) = xmmword_252957050;
  swift_beginAccess();
  unint64_t v12 = *(void *)(v11 + 112);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v11 + 112) = v12;
  if (!isUniquelyReferenced_nonNull_native || *(void *)(v12 + 24) <= 0x1E5uLL)
  {
    if (*(void *)(v12 + 16) <= 0xF3uLL) {
      int64_t v14 = 243;
    }
    else {
      int64_t v14 = *(void *)(v12 + 16);
    }
    unint64_t v12 = sub_2528C4584(isUniquelyReferenced_nonNull_native, v14, 0, v12);
  }
  uint64_t v15 = v0[5];
  *(void *)(v11 + 112) = v12;
  swift_endAccess();
  *(void *)(v10 + 24) = v11;
  *(void *)(v15 + v8[7]) = v10;
  *(unsigned char *)(v15 + v8[8]) = 2;
  type metadata accessor for Anchorer();
  uint64_t v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(unsigned char *)(v16 + 176) = 1;
  uint64_t v17 = v16 + OBJC_IVAR____TtC5Human8Anchorer_previousSkeleton3D;
  uint64_t v18 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = OBJC_IVAR____TtC5Human8Anchorer_pnpSolver;
  *(void *)(v16 + v19) = objc_msgSend(objc_allocWithZone((Class)PnPSolver), sel_init);
  *(void *)(v16 + OBJC_IVAR____TtC5Human8Anchorer_retriesRemaining) = 5;
  *(void *)(v15 + v8[9]) = v16;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_252913284(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = type metadata accessor for SceneDescriptor();
  v3[27] = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  v3[28] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[29] = v7;
  void *v7 = v3;
  v7[1] = sub_252913474;
  return sub_2528C8664(v6, a2);
}

uint64_t sub_252913474()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_252914E38, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 248) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_2529135E4;
    return SceneDescriptor.skeletons.getter();
  }
}

uint64_t sub_2529135E4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_252914F44;
  }
  else
  {
    *(void *)(v4 + 264) = a1;
    uint64_t v5 = sub_25291370C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25291370C()
{
  uint64_t v1 = *(void *)(v0[33] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[2] = 0xD00000000000001DLL;
    v0[3] = 0x800000025295A150;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[34] = v2;
    void *v2 = v0;
    v2[1] = sub_2529138FC;
    uint64_t v3 = v0[25];
    return SceneDescriptor.tensor(for:)(v3, v0 + 2);
  }
  else
  {
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[11];
    sub_25290A654(v0[28], (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
    sub_2528CA438(v6, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_2529138FC()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25291506C;
  }
  else {
    uint64_t v2 = sub_252913A10;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252913A10()
{
  uint64_t v1 = v0[27];
  uint64_t v26 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v8 + 16) = xmmword_252953970;
  uint64_t v10 = MEMORY[0x263F00C68];
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 104) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  sub_252951A58();
  swift_bridgeObjectRelease();
  sub_2529516E8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[36] = (uint64_t)v11;
  v0[37] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v4, v5);
  v11(v2, v5);
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v0[38] = (uint64_t)v12;
  v0[39] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v12(v2, v3, v5);
  sub_2528CA438(v7, v1);
  uint64_t v13 = *(int *)(v26 + 24);
  uint64_t v14 = *(void *)(v1 + v13);
  if (*(void *)(v14 + 16) >= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31CA8);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_252953740;
    long long v16 = *(_OWORD *)(v14 + 40);
    long long v17 = *(_OWORD *)(v14 + 56);
    *(void *)(v15 + 32) = *(void *)(v14 + 32);
    *(_OWORD *)(v15 + 40) = v16;
    *(_OWORD *)(v15 + 56) = v17;
    swift_bridgeObjectRelease();
    *(void *)(v1 + v13) = v15;
  }
  uint64_t v18 = v0[25];
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[16];
  uint64_t v21 = v0[27] + *(int *)(v0[26] + 40);
  sub_2528AE5CC(v21);
  v12(v21, v18, v19);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
  v0[40] = (uint64_t)v22;
  v0[41] = (v20 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v22(v21, 0, 1, v19);
  v0[4] = 0xD00000000000001DLL;
  v0[5] = 0x800000025295A0B0;
  id v23 = (void *)swift_task_alloc();
  v0[42] = (uint64_t)v23;
  *id v23 = v0;
  v23[1] = sub_252913CC0;
  uint64_t v24 = v0[22];
  return ImageDescriptor.tensor(for:)(v24, v0 + 4);
}

uint64_t sub_252913CC0()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252915194;
  }
  else {
    uint64_t v2 = sub_252913DD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void *sub_252913DD4()
{
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v0 + 352) = result[5];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(void *)(v0 + 96);
  *(void *)(v0 + 360) = result[6];
  swift_bridgeObjectRelease();
  sub_252915ADC();
  uint64_t v3 = type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(v0 + 368) = v3;
  uint64_t v4 = *(int *)(v3 + 20);
  *(_DWORD *)(v0 + 488) = v4;
  *(void *)(v0 + 376) = *(void *)(v2 + v4);
  *(void *)(v0 + 48) = 0xD000000000000023;
  *(void *)(v0 + 56) = 0x800000025295A0D0;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_252913F20;
  uint64_t v6 = *(void *)(v0 + 112);
  return (void *)ImageDescriptor.tensor(for:)(v6, (uint64_t *)(v0 + 48));
}

uint64_t sub_252913F20()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2529152F0;
  }
  else {
    uint64_t v2 = sub_252914034;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252914034()
{
  (*(void (**)(void, void, uint64_t, void))(v0 + 320))(*(void *)(v0 + 112), 0, 1, *(void *)(v0 + 120));
  *(void *)(v0 + 64) = 0xD00000000000002ALL;
  *(void *)(v0 + 72) = 0x800000025295A100;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v1;
  void *v1 = v0;
  v1[1] = sub_25291410C;
  uint64_t v2 = *(void *)(v0 + 104);
  return ImageDescriptor.tensor(for:)(v2, (uint64_t *)(v0 + 64));
}

uint64_t sub_25291410C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_2528AE5CC(*(void *)(v2 + 112));
    uint64_t v3 = sub_252915468;
  }
  else
  {
    uint64_t v3 = sub_252914228;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_252914228()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  (*(void (**)(void, void, uint64_t, void))(v0 + 320))(*(void *)(v0 + 104), 0, 1, *(void *)(v0 + 120));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2529142E4;
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  return sub_25291CBA0(v5, v4, v2 < v1);
}

uint64_t sub_2529142E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  sub_2528AE5CC(v2);
  sub_2528AE5CC(v1);
  return MEMORY[0x270FA2498](sub_252914418, 0, 0);
}

uint64_t sub_252914418()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[53] = v1;
  void *v1 = v0;
  v1[1] = sub_2529144B8;
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  return sub_25291AED4(v2, v3);
}

uint64_t sub_2529144B8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2529145B4, 0, 0);
}

uint64_t sub_2529145B4()
{
  uint64_t v1 = *(void *)(*(void *)(v0[12] + *(int *)(v0[46] + 28)) + 24);
  v0[54] = v1;
  return MEMORY[0x270FA2498](sub_2529145E4, v1, 0);
}

uint64_t sub_2529145E4()
{
  uint64_t v1 = *(void *)(v0 + 432);
  sub_2528D21A4(*(void *)(v0 + 160));
  return MEMORY[0x270FA2498](sub_252914650, v1, 0);
}

uint64_t sub_252914650()
{
  sub_2528D23F8(-1, *(void *)(v0 + 152));
  return MEMORY[0x270FA2498](sub_2529146C0, 0, 0);
}

uint64_t sub_2529146C0()
{
  uint64_t v1 = *(void *)(v0[12] + *(int *)(v0[46] + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[55] = v2;
  void *v2 = v0;
  v2[1] = sub_252914774;
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return sub_2529509D0(v3, v4, v1);
}

uint64_t sub_252914774()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2529155E0;
  }
  else {
    uint64_t v2 = sub_252914888;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252914888()
{
  char v1 = *(unsigned char *)(v0[12] + *(int *)(v0[46] + 32));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[57] = v2;
  void *v2 = v0;
  v2[1] = sub_252914930;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return sub_25294B7B4(v3, v4, v1);
}

uint64_t sub_252914930()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252915778;
  }
  else {
    uint64_t v2 = sub_252914A44;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252914A44()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[40];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[38];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v4 + *(int *)(v3 + 44);
  sub_2528AE5CC(v7);
  v2(v7, v5, v6);
  v1(v7, 0, 1, v6);
  *(unsigned char *)(v4 + *(int *)(v3 + 28)) = 2;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[59] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_252914B6C;
  uint64_t v9 = v0[27];
  uint64_t v10 = v0[10];
  return sub_2528FD570(v10, v9);
}

uint64_t sub_252914B6C()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252915920;
  }
  else {
    uint64_t v2 = sub_252914C80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252914C80()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[28];
  uint64_t v11 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[15];
  v1(v0[17], v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  v1(v4, v8);
  v1(v3, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v11, v8);
  v1(v12, v8);
  sub_25290A654(v13, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_252914E38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252914F44()
{
  sub_25290A654(*(void *)(v0 + 224), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25291506C()
{
  sub_25290A654(*(void *)(v0 + 224), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252915194()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[28];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[15];
  sub_25290A654(v0[27], (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v4, v5);
  v1(v3, v5);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2529152F0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[15];
  v1(v0[21], v7);
  v1(v6, v7);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v5, v7);
  v1(v4, v7);
  sub_25290A654(v3, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_252915468()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[15];
  v1(v0[21], v7);
  v1(v6, v7);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v5, v7);
  v1(v4, v7);
  sub_25290A654(v3, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2529155E0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v11 = v0[28];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v6 = v0[21];
  uint64_t v5 = v0[22];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[15];
  v1(v0[19], v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v4, v8);
  v1(v3, v8);
  sub_25290A654(v11, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_252915778()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[28];
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v7 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v8 = v0[15];
  v1(v0[18], v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  v1(v4, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v3, v8);
  v1(v11, v8);
  sub_25290A654(v12, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_252915920()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[27];
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[28];
  uint64_t v11 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[15];
  v1(v0[17], v8);
  v1(v7, v8);
  v1(v6, v8);
  v1(v5, v8);
  v1(v4, v8);
  v1(v3, v8);
  sub_25290A654(v2, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  v1(v11, v8);
  v1(v12, v8);
  sub_25290A654(v13, (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void *sub_252915ADC()
{
  uint64_t v0 = sub_252951A08();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(sub_2529518F8() + 16);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v4 != 3) {
    goto LABEL_8;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result[5];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t v4 = v6 - 1;
  if (v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = result[6];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  uint64_t v9 = v8 - 1;
  if (!__OFSUB__(v8, 1)) {
    goto LABEL_13;
  }
  __break(1u);
LABEL_8:
  if (v4 != 4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = result[6];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  BOOL v7 = __OFSUB__(v10, 1);
  uint64_t v4 = v10 - 1;
  if (v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 4uLL)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = result[7];
  uint64_t result = (void *)swift_bridgeObjectRelease();
  uint64_t v9 = v11 - 1;
  if (!__OFSUB__(v11, 1))
  {
LABEL_13:
    float v12 = (float)v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_252953970;
    *(float *)(v13 + 32) = v12;
    *(float *)(v13 + 36) = (float)v4;
    *(_DWORD *)(v13 + 40) = 1065353216;
    v14[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
    sub_2528B1180();
    sub_252951A18();
    sub_252951738();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_252915D04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_252913284(a1, a2);
}

uint64_t CameraSource.init(configuration:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 32) = *(unsigned char *)a2;
  *(unsigned char *)(v2 + 33) = *(unsigned char *)(a2 + 1);
  *(void *)(v2 + 24) = *(void *)(a2 + 8);
  *(unsigned char *)(v2 + 34) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(v2 + 35) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(v2 + 36) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(v2 + 37) = *(unsigned char *)(a2 + 19);
  return MEMORY[0x270FA2498](sub_252915E04, 0, 0);
}

uint64_t sub_252915E04()
{
  char v1 = *(unsigned char *)(v0 + 37);
  char v2 = *(unsigned char *)(v0 + 36);
  char v3 = *(unsigned char *)(v0 + 35);
  char v4 = *(unsigned char *)(v0 + 34);
  uint64_t v5 = *(void *)(v0 + 24);
  char v6 = *(unsigned char *)(v0 + 33);
  uint64_t v7 = *(void *)(v0 + 16);
  *(unsigned char *)uint64_t v7 = *(unsigned char *)(v0 + 32);
  *(unsigned char *)(v7 + 1) = v6;
  *(void *)(v7 + 8) = v5;
  *(unsigned char *)(v7 + 16) = v4;
  *(unsigned char *)(v7 + 17) = v3;
  *(unsigned char *)(v7 + 18) = v2;
  *(unsigned char *)(v7 + 19) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CameraSource.generate()(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  char v3 = *(unsigned char *)(v1 + 1);
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 17);
  char v7 = *(unsigned char *)(v1 + 18);
  char v8 = *(unsigned char *)(v1 + 19);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)v1;
  *(unsigned char *)(v2 + 17) = v3;
  *(void *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 32) = v5;
  *(unsigned char *)(v2 + 33) = v6;
  *(unsigned char *)(v2 + 34) = v7;
  *(unsigned char *)(v2 + 35) = v8;
  objc_allocWithZone((Class)_s13CameraManagerCMa());
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v9;
  void *v9 = v2;
  v9[1] = sub_252915F3C;
  return sub_2528D74C8(v2 + 16);
}

uint64_t sub_252915F3C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_2529160E0;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    id v6 = a1;
    char v5 = sub_252916074;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_252916074()
{
  uint64_t v1 = *(void **)(v0 + 64);
  **(void **)(v0 + 40) = v1;

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2529160E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for CameraSource()
{
  return &type metadata for CameraSource;
}

ValueMetadata *type metadata accessor for OneEuroFilter()
{
  return &type metadata for OneEuroFilter;
}

float sub_252916118(float a1, float a2)
{
  float v3 = a1 - v2[5];
  if (v3 == 0.0) {
    return v2[3];
  }
  float v5 = v2[3];
  float v6 = (float)(v3 * (float)(v2[2] * 6.2832)) / (float)((float)(v3 * (float)(v2[2] * 6.2832)) + 1.0);
  float v7 = (float)((float)((float)(a2 - v5) / v3) * v6) + (float)(v2[4] * (float)(1.0 - v6));
  float v8 = v3 * (float)((float)(*v2 + (float)(v2[1] * fabsf(v7))) * 6.2832);
  float v9 = (float)((float)(v8 / (float)(v8 + 1.0)) * a2) + (float)(v5 * (float)(1.0 - (float)(v8 / (float)(v8 + 1.0))));
  v2[3] = v9;
  v2[4] = v7;
  v2[5] = a1;
  return v9;
}

uint64_t MLTensor.matrix4x4()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_252916254;
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C50];
  uint64_t v4 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE7870](v4, v2, v3);
}

uint64_t sub_252916254(uint64_t a1)
{
  *(void *)(*(void *)v1 + 24) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252916354, 0, 0);
}

uint64_t sub_252916354()
{
  uint64_t result = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v2 == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v2 < 3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v2 == 3)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v2 < 5)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v2 == 5)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v2 < 7)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v2 == 7)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v2 < 9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v2 == 9)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v2 < 0xB)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v2 == 11)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v2 < 0xD)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v2 == 13)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v2 < 0xF)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v2 == 15)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  unsigned int v22 = *(_DWORD *)(result + 32);
  unsigned int v23 = *(_DWORD *)(result + 36);
  v3.i64[0] = *(void *)(result + 40);
  unsigned int v26 = *(_DWORD *)(result + 48);
  unsigned int v27 = *(_DWORD *)(result + 52);
  v4.i64[0] = *(void *)(result + 56);
  unsigned int v18 = *(_DWORD *)(result + 64);
  unsigned int v21 = *(_DWORD *)(result + 68);
  v5.i64[0] = *(void *)(result + 72);
  v5.i64[1] = v5.i64[0];
  int32x4_t v19 = v5;
  unsigned int v20 = *(_DWORD *)(result + 80);
  v4.i64[1] = v4.i64[0];
  int32x4_t v24 = v4;
  unsigned int v25 = *(_DWORD *)(result + 84);
  v3.i64[1] = v3.i64[0];
  int32x4_t v17 = v3;
  uint64_t v16 = *(void *)(result + 88);
  swift_bridgeObjectRelease();
  v6.i64[0] = v16;
  v6.i64[1] = v16;
  v7.i64[0] = __PAIR64__(v18, v22);
  v7.i64[1] = __PAIR64__(v21, v23);
  int32x4_t v8 = vzip2q_s32(v17, v19);
  v9.i64[0] = __PAIR64__(v20, v26);
  v9.i64[1] = __PAIR64__(v25, v27);
  int32x4_t v10 = vzip2q_s32(v24, v6);
  __n128 v11 = (__n128)vzip1q_s32(v7, v9);
  __n128 v12 = (__n128)vzip2q_s32(v7, v9);
  __n128 v13 = (__n128)vzip1q_s32(v8, v10);
  __n128 v14 = (__n128)vzip2q_s32(v8, v10);
  uint64_t v15 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v0 + 8);
  return v15(v11, v12, v13, v14);
}

uint64_t MLTensor.matrix3x3()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_2529165C4;
  uint64_t v3 = MEMORY[0x263F8D5C8];
  uint64_t v4 = MEMORY[0x263F00C50];
  uint64_t v5 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE7870](v5, v3, v4);
}

uint64_t sub_2529165C4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2529166C4, 0, 0);
}

uint64_t sub_2529166C4(double a1, double a2, double a3, double a4, __n128 a5, int32x4_t a6)
{
  uint64_t result = v6[4];
  unint64_t v8 = *(void *)(result + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v8 == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 < 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v8 == 3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 < 5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 == 5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v8 < 7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v8 == 7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v8 < 9)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  a6.i32[0] = *(_DWORD *)(result + 32);
  a5.n128_u32[0] = *(_DWORD *)(result + 40);
  unsigned __int32 v18 = *(_DWORD *)(result + 56);
  int32x4_t v9 = (int32x4_t *)v6[2];
  v10.i64[0] = *(unsigned int *)(result + 44);
  v10.i64[1] = *(unsigned int *)(result + 48);
  a6.i32[1] = v18;
  a6.i32[2] = *(_DWORD *)(result + 36);
  int32x4_t v15 = a6;
  int32x4_t v16 = v10;
  int32x4_t v11 = vzip2q_s32(a6, v10);
  v11.i32[2] = *(_DWORD *)(result + 60);
  int32x4_t v17 = v11;
  a5.n128_u32[1] = *(_DWORD *)(result + 52);
  a5.n128_u32[2] = *(_DWORD *)(result + 64);
  __n128 v14 = a5;
  swift_bridgeObjectRelease();
  int32x4_t v12 = vzip1q_s32(v15, v16);
  v12.i32[2] = v18;
  int32x4_t *v9 = v12;
  v9[1] = v17;
  v9[2] = (int32x4_t)v14;
  __n128 v13 = (uint64_t (*)(void))v6[1];
  return v13();
}

uint64_t MLTensor.init(matrix3x3:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_252957A30;
  int8x16_t v3 = *(int8x16_t *)a1;
  int8x16_t v4 = *(int8x16_t *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 32);
  int32x2_t v6 = vzip1_s32(*(int32x2_t *)a1, *(int32x2_t *)v4.i8);
  *(_DWORD *)(v2 + 64) = DWORD2(v5);
  int32x2_t v7 = vzip2_s32(*(int32x2_t *)v4.i8, *(int32x2_t *)&v5);
  DWORD1(v5) = v3.i32[1];
  *(int32x2_t *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v5;
  *(int32x2_t *)(v2 + 48) = v7;
  *(int32x2_t *)(v2 + 56) = vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  return sub_2529518E8();
}

uint64_t MLTensor.init(matrix4x4:)(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252957A40;
  *(int32x2_t *)(v4 + 32) = vzip1_s32(*(int32x2_t *)a1.i8, *(int32x2_t *)a2.i8);
  *(_DWORD *)(v4 + 40) = a3.i32[0];
  *(void *)(v4 + 44) = __PAIR64__(a1.u32[1], a4.u32[0]);
  *(int32x2_t *)(v4 + 52) = vzip2_s32(*(int32x2_t *)a2.i8, *(int32x2_t *)a3.i8);
  int8x8_t v5 = (int8x8_t)vextq_s8(a1, a1, 8uLL).u64[0];
  *(int8x8_t *)(v4 + 60) = vext_s8(*(int8x8_t *)a4.i8, v5, 4uLL);
  int32x2_t v6 = (int32x2_t)vextq_s8(a3, a3, 8uLL).u64[0];
  int32x2_t v7 = (int32x2_t)vextq_s8(a2, a2, 8uLL).u64[0];
  *(int32x2_t *)(v4 + 68) = vzip1_s32(v7, v6);
  LODWORD(v8) = vextq_s8(a4, a4, 8uLL).u32[0];
  HIDWORD(v8) = v5.i32[1];
  *(void *)(v4 + 76) = v8;
  *(int32x2_t *)(v4 + 84) = vzip2_s32(v7, v6);
  *(_DWORD *)(v4 + 92) = a4.i32[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  return sub_2529518E8();
}

uint64_t MLTensor.init(rect:)(double a1, double a2, double a3, double a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_252953B10;
  float v9 = a1;
  float v10 = a2;
  *(float *)(v8 + 32) = v9;
  *(float *)(v8 + 36) = v10;
  float v11 = a3;
  float v12 = a4;
  *(float *)(v8 + 40) = v11;
  *(float *)(v8 + 44) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  return sub_2529518E8();
}

uint64_t MLTensor.rect()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_252916B44;
  uint64_t v3 = MEMORY[0x263F8D5C8];
  uint64_t v4 = MEMORY[0x263F00C50];
  uint64_t v5 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE7870](v5, v3, v4);
}

uint64_t sub_252916B44(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252916C44, 0, 0);
}

uint64_t sub_252916C44()
{
  uint64_t result = v0[4];
  if (*(void *)(result + 16) == 4)
  {
    uint64_t v2 = v0[2];
    long long v4 = *(_OWORD *)(result + 32);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = 0;
    *(_OWORD *)(v2 + 8) = v4;
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 32) = 0;
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_252916CD0()
{
  uint64_t v0 = sub_252951A08();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  long long v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v17 - v6;
  MEMORY[0x270FA5388](v5);
  float v9 = (char *)&v17 - v8;
  uint64_t result = (void *)sub_2529518F8();
  if (!result[2])
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v11 = result[4];
  swift_bridgeObjectRelease();
  if (v11 == 1)
  {
    sub_2529518F8();
    sub_2528AE524();
    sub_2528AE578();
    sub_252951888();
    sub_2529516C8();
    sub_252951738();
    float v12 = *(void (**)(char *, uint64_t))(v1 + 8);
    v12(v7, v0);
    return (void *)((uint64_t (*)(char *, uint64_t))v12)(v9, v0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_252953970;
  *(void *)(v13 + 32) = 1;
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL) {
    goto LABEL_8;
  }
  uint64_t v14 = result[5];
  swift_bridgeObjectRelease();
  *(void *)(v13 + 40) = v14;
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] >= 3uLL)
  {
    uint64_t v15 = result[6];
    swift_bridgeObjectRelease();
    *(void *)(v13 + 48) = v15;
    sub_2528AE524();
    sub_2528AE578();
    sub_252951888();
    sub_2529516C8();
    sub_252951738();
    int32x4_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
    v16(v4, v0);
    v16(v7, v0);
    sub_252951968();
    return (void *)((uint64_t (*)(char *, uint64_t))v16)(v9, v0);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t MLTensor.makeCIImage()()
{
  v1[3] = v0;
  uint64_t v2 = sub_252951A08();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_252951598();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2529170B8, 0, 0);
}

uint64_t sub_2529170B8()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  sub_252951588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = swift_task_alloc();
  v0[10] = v5;
  *(void *)(v5 + 16) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32EF8);
  void *v6 = v0;
  v6[1] = sub_2529171D0;
  uint64_t v8 = v0[9];
  return MEMORY[0x270EE76C0](v0 + 2, v8, &unk_269C32EF0, v5, v7);
}

uint64_t sub_2529171D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  uint64_t v5 = *(void *)(*(void *)v0 + 40);
  uint64_t v6 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return MEMORY[0x270FA2498](sub_2529173A8, 0, 0);
}

uint64_t sub_2529173A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25291741C(uint64_t a1, uint64_t a2)
{
  void v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_252951A08();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252917534, 0, 0);
}

uint64_t sub_252917534()
{
  uint64_t v1 = (void *)sub_2529518F8();
  if (!v1[2])
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = v1[4];
  swift_bridgeObjectRelease();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  if (v5 == 1)
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v37 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 72);
    *(_DWORD *)(v0 + 244) = 1132396544;
    sub_252951748();
    sub_252951968();
    id v36 = *v6;
    *(void *)(v0 + 144) = *v6;
    *(void *)(v0 + 152) = (unint64_t)v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v36(v7, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
    uint64_t v11 = *(void *)(v10 + 72);
    unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_252953B10;
    unint64_t v14 = v13 + v12;
    uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
    v15(v14, v8, v9);
    v15(v14 + v11, v8, v9);
    v15(v14 + 2 * v11, v8, v9);
    sub_252916CD0();
    *(void *)(v0 + 40) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_2529516D8();
    sub_252951668();
    v36(v37, v9);
    sub_252951878();
    v36(v7, v9);
    uint64_t v1 = (void *)sub_2529518F8();
    if (v1[2] >= 2uLL)
    {
      *(void *)(v0 + 160) = v1[5];
      swift_bridgeObjectRelease();
      uint64_t v1 = (void *)sub_2529518F8();
      if (v1[2])
      {
        *(void *)(v0 + 168) = v1[4];
        swift_bridgeObjectRelease();
        uint64_t v1 = (void *)sub_2529518F8();
        if (v1[2] >= 3uLL)
        {
          *(void *)(v0 + 176) = v1[6];
          swift_bridgeObjectRelease();
          int32x4_t v16 = (void *)swift_task_alloc();
          *(void *)(v0 + 184) = v16;
          void *v16 = v0;
          v16[1] = sub_252917B4C;
          goto LABEL_13;
        }
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 64);
  *(_DWORD *)(v0 + 240) = 1132396544;
  sub_252951748();
  uint64_t v19 = sub_252951908();
  unsigned int v20 = *v6;
  *(void *)(v0 + 200) = *v6;
  *(void *)(v0 + 208) = (unint64_t)v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v1 = (void *)((uint64_t (*)(uint64_t, uint64_t))v20)(v17, v18);
  unint64_t v21 = *(void *)(v19 + 16);
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = *(void *)(v0 + 72);
  unsigned int v23 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t))(v22 + 16);
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v25 = v19 + v24;
  uint64_t v1 = (void *)v23(*(void *)(v0 + 104), v19 + v24, *(void *)(v0 + 64));
  if (v21 == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v39 = v20;
  uint64_t v26 = *(void *)(*(void *)(v0 + 72) + 72);
  uint64_t v1 = (void *)v23(*(void *)(v0 + 96), v25 + v26, *(void *)(v0 + 64));
  if (v21 < 3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v38 = *(void *)(v0 + 128);
  unint64_t v27 = *(void *)(v0 + 88);
  unint64_t v33 = *(void *)(v0 + 104);
  unint64_t v34 = *(void *)(v0 + 96);
  unint64_t v28 = v25 + 2 * v26;
  uint64_t v29 = *(void *)(v0 + 64);
  uint64_t v35 = *(void *)(v0 + 112);
  v23(v27, v28, v29);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_252953B10;
  v23(v30 + v24, v33, v29);
  v23(v30 + v24 + v26, v34, v29);
  v23(v30 + v24 + 2 * v26, v27, v29);
  sub_252916CD0();
  *(void *)(v0 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_2529516D8();
  sub_252951668();
  v39(v35, v29);
  sub_252951878();
  v39(v38, v29);
  uint64_t v1 = (void *)sub_2529518F8();
  if (v1[2] < 2uLL)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(void *)(v0 + 216) = v1[5];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_2529518F8();
  if (!v1[2])
  {
LABEL_24:
    __break(1u);
    return MEMORY[0x270EE7870](v1, v2, v3);
  }
  *(void *)(v0 + 224) = v1[4];
  swift_bridgeObjectRelease();
  MTLPixelFormat v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v31;
  *MTLPixelFormat v31 = v0;
  v31[1] = sub_252917DCC;
LABEL_13:
  uint64_t v2 = MEMORY[0x263F8E778];
  uint64_t v3 = MEMORY[0x263F00CD0];
  uint64_t v1 = (void *)MEMORY[0x263F8E778];
  return MEMORY[0x270EE7870](v1, v2, v3);
}

uint64_t sub_252917B4C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252917C4C, 0, 0);
}

uint64_t sub_252917C4C()
{
  CGColorSpaceRef v1 = sub_2528EC030(*(CGColorSpaceRef *)(v0 + 192), *(void *)(v0 + 176), (double)*(uint64_t *)(v0 + 160), (double)*(uint64_t *)(v0 + 168));
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 64);
  if (v1)
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00648]), sel_initWithCGImage_, v1);
    id v7 = objc_msgSend(v6, sel_imageByApplyingCGOrientation_, 4);

    v2(v4, v5);
    v2(v3, v5);
  }
  else
  {
    v2(*(void *)(v0 + 120), *(void *)(v0 + 64));
    v2(v3, v5);
    id v7 = 0;
  }
  **(void **)(v0 + 48) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_252917DCC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252917ECC, 0, 0);
}

uint64_t sub_252917ECC()
{
  uint64_t result = sub_2529518F8();
  if (*(void *)(result + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(CGColorSpace **)(v0 + 24);
    double v3 = (double)*(uint64_t *)(v0 + 224);
    double v4 = (double)*(uint64_t *)(v0 + 216);
    unint64_t v5 = *(void *)(result + 48);
    swift_bridgeObjectRelease();
    CGColorSpaceRef v6 = sub_2528EC030(v2, v5, v4, v3);
    swift_bridgeObjectRelease();
    id v7 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 64);
    if (v6)
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00648]), sel_initWithCGImage_, v6);
      uint64_t v16 = v9;
      id v14 = objc_msgSend(v13, sel_imageByApplyingCGOrientation_, 4);

      v7(v11, v12);
      v7(v10, v12);
      v7(v8, v12);
      v7(v16, v12);
    }
    else
    {
      v7(*(void *)(v0 + 80), *(void *)(v0 + 64));
      v7(v10, v12);
      v7(v8, v12);
      v7(v9, v12);
      id v14 = 0;
    }
    **(void **)(v0 + 48) = v14;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  return result;
}

uint64_t MLTensor.checkIfValidSkeleton()()
{
  v1[2] = v0;
  uint64_t v2 = sub_252951A08();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252918194, 0, 0);
}

uint64_t sub_252918194()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  sub_2529516C8();
  sub_2529517E8();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[8] = v5;
  v0[9] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  sub_252951818();
  v5(v1, v4);
  CGColorSpaceRef v6 = (void *)swift_task_alloc();
  v0[10] = v6;
  void *v6 = v0;
  v6[1] = sub_2529182C4;
  uint64_t v7 = MEMORY[0x263F8D4F8];
  uint64_t v8 = MEMORY[0x263F00C40];
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return MEMORY[0x270EE7870](v9, v7, v8);
}

uint64_t sub_2529182C4(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  v2(v3, v4);
  return MEMORY[0x270FA2498](sub_25291842C, 0, 0);
}

uint64_t sub_25291842C()
{
  uint64_t result = *(void *)(v0 + 88);
  if (*(void *)(result + 16))
  {
    char v2 = *(unsigned char *)(result + 32);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(BOOL))(v0 + 8);
    return v3((v2 & 1) == 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MLTensor.tensor(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2529184EC, 0, 0);
}

uint64_t sub_2529184EC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_252951A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v1, v2, v3);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_252918588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = v3;
  v4[4] = a3;
  v4[2] = a1;
  return MEMORY[0x270FA2498](sub_2529185AC, 0, 0);
}

uint64_t sub_2529185AC()
{
  (*(void (**)(void, void))(*(void *)(v0[4] - 8) + 16))(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void *sub_252918638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  uint64_t v3 = sub_252951A08();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v74 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v62 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v77 = (char *)v62 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v80 = (char *)v62 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v62 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v75 = (char *)v62 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v81 = (char *)v62 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v79 = (char *)v62 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = (char *)v62 - v23;
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v25((char *)v62 - v23, v1, v3);
  uint64_t v26 = sub_252951898();
  uint64_t v76 = v4;
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = (void *)v27(v24, v3);
  if (v26 != 3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v25(v24, v2, v3);
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v29 = result[5];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)v27(v24, v3);
  if (v29 != 2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25(v24, v2, v3);
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v30 = result[6];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)v27(v24, v3);
  if (v30 != 2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  long long v72 = v16;
  uint64_t v78 = v24;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_252953B00;
  uint64_t result = (void *)sub_2529518F8();
  if (!result[2])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v70 = v31;
  uint64_t v33 = result[4];
  swift_bridgeObjectRelease();
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = -1;
  unint64_t v34 = v78;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_252951908();
  id v36 = v34;
  uint64_t v37 = v35;
  v27(v36, v3);
  uint64_t result = (void *)sub_2529516C8();
  unint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  long long v71 = v27;
  id v39 = v9;
  uint64_t v69 = v2;
  uint64_t v41 = v76;
  uint64_t v40 = v77;
  unint64_t v42 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v67 = *(unsigned __int8 *)(v76 + 80);
  unint64_t v68 = v42;
  unint64_t v43 = v37 + v42;
  uint64_t result = (void *)((uint64_t (*)(char *))v25)(v77);
  if (v38 < 4)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v44 = *(void *)(v41 + 72);
  id v45 = v39;
  unint64_t v65 = v43 + 3 * v44;
  uint64_t v66 = 3 * v44;
  ((void (*)(char *))v25)(v39);
  sub_252951738();
  id v46 = v39;
  id v47 = v71;
  v71(v46, v3);
  uint64_t result = (void *)v47(v40, v3);
  uint64_t v76 = v37;
  unint64_t v48 = *(void *)(v37 + 16);
  if (v48 < 2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v64 = v43 + v44;
  uint64_t result = (void *)((uint64_t (*)(char *))v25)(v45);
  if (v48 == 2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v62[1] = 2 * v44;
  unint64_t v63 = v43;
  v62[0] = v43 + 2 * v44;
  id v49 = v74;
  ((void (*)(char *))v25)(v74);
  sub_252951738();
  v47(v49, v3);
  v47(v45, v3);
  id v50 = v72;
  id v51 = v80;
  sub_252951798();
  v47(v40, v3);
  v47(v51, v3);
  int v83 = 872415232;
  id v52 = v75;
  sub_252951778();
  v47(v50, v3);
  id v53 = v81;
  sub_252951718();
  v47(v52, v3);
  v47(v53, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  unint64_t v54 = v68;
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_252953B10;
  unint64_t v56 = v55 + v54;
  v25((char *)v56, v65, v3);
  v25(v52, v64, v3);
  sub_2529517B8();
  v47(v52, v3);
  v25(v52, v62[0], v3);
  sub_2529517B8();
  v47(v52, v3);
  v25((char *)(v56 + v66), v63, v3);
  swift_bridgeObjectRelease();
  uint64_t v82 = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  id v57 = v81;
  sub_2529516D8();
  id v59 = v78;
  id v58 = v79;
  sub_252951738();
  v47(v57, v3);
  v47(v58, v3);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_252953970;
  uint64_t result = (void *)sub_2529518F8();
  if (result[2])
  {
    uint64_t v61 = result[4];
    swift_bridgeObjectRelease();
    *(void *)(v60 + 32) = v61;
    *(int64x2_t *)(v60 + 40) = vdupq_n_s64(2uLL);
    sub_2529519A8();
    swift_bridgeObjectRelease();
    return (void *)v47(v59, v3);
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_252918DE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_252918DF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return sub_25291741C(a1, v4);
}

uint64_t BodySkeleton3DTracker.init()(uint64_t a1)
{
  *(void *)(v1 + 552) = a1;
  type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(v1 + 560) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252918F24, 0, 0);
}

uint64_t sub_252918F24()
{
  sub_252910520(v0 + 216);
  long long v1 = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 528) = v1;
  *(void *)(v0 + 544) = *(void *)(v0 + 376);
  long long v2 = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 464) = v2;
  long long v3 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 496) = v3;
  long long v4 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 400) = v4;
  long long v5 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 432) = v5;
  id v6 = sub_25294B500();
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 552);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  uint64_t v13 = *(int *)(type metadata accessor for BodySkeleton3DTracker() + 20);
  *(_DWORD *)(v0 + 584) = v13;
  uint64_t v14 = v11 + v13;
  *(void *)uint64_t v14 = v12;
  *(void *)(v14 + 8) = v6;
  *(unsigned char *)(v14 + 16) = v8 & 1;
  *(void *)(v14 + 24) = v10;
  long long v16 = *(_OWORD *)(v0 + 400);
  long long v15 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = v15;
  long long v17 = *(_OWORD *)(v0 + 480);
  long long v19 = *(_OWORD *)(v0 + 432);
  long long v18 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v14 + 112) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v14 + 128) = v17;
  *(_OWORD *)(v14 + 80) = v19;
  *(_OWORD *)(v14 + 96) = v18;
  long long v21 = *(_OWORD *)(v0 + 512);
  long long v20 = *(_OWORD *)(v0 + 528);
  long long v22 = *(_OWORD *)(v0 + 496);
  *(void *)(v14 + 192) = *(void *)(v0 + 544);
  *(_OWORD *)(v14 + 160) = v21;
  *(_OWORD *)(v14 + 176) = v20;
  *(_OWORD *)(v14 + 144) = v22;
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 568) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_2529190F8;
  uint64_t v24 = *(void *)(v0 + 560);
  return sub_252912A8C(v24);
}

uint64_t sub_2529190F8()
{
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  if (v0) {
    long long v2 = sub_252919280;
  }
  else {
    long long v2 = sub_25291920C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25291920C()
{
  sub_2529199B4(v0[70], v0[69]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_252919280()
{
  uint64_t v1 = *(void *)(v0 + 552) + *(int *)(v0 + 584);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  long long v2 = *(_OWORD *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 80) = v2;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  long long v5 = *(_OWORD *)(v1 + 128);
  long long v7 = *(_OWORD *)(v1 + 80);
  long long v6 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 144) = v5;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  long long v9 = *(_OWORD *)(v1 + 160);
  long long v8 = *(_OWORD *)(v1 + 176);
  long long v10 = *(_OWORD *)(v1 + 144);
  *(void *)(v0 + 208) = *(void *)(v1 + 192);
  *(_OWORD *)(v0 + 176) = v9;
  *(_OWORD *)(v0 + 192) = v8;
  *(_OWORD *)(v0 + 160) = v10;
  sub_2528F095C(v0 + 16);
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t BodySkeleton3DTracker.applied(to:)(uint64_t a1, uint64_t a2)
{
  v3[28] = a2;
  v3[29] = v2;
  v3[27] = a1;
  type metadata accessor for SceneDescriptor();
  v3[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2529193CC, 0, 0);
}

uint64_t sub_2529193CC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for BodySkeleton3DTracker() + 20);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v2;
  long long v3 = *(_OWORD *)(v2 + 144);
  long long v4 = *(_OWORD *)(v2 + 160);
  long long v5 = *(_OWORD *)(v2 + 176);
  *(void *)(v0 + 208) = *(void *)(v2 + 192);
  *(_OWORD *)(v0 + 176) = v4;
  *(_OWORD *)(v0 + 192) = v5;
  *(_OWORD *)(v0 + 160) = v3;
  long long v6 = *(_OWORD *)(v2 + 80);
  long long v7 = *(_OWORD *)(v2 + 96);
  long long v8 = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v0 + 144) = v8;
  *(_OWORD *)(v0 + 96) = v6;
  *(_OWORD *)(v0 + 112) = v7;
  long long v9 = *(_OWORD *)(v2 + 16);
  long long v10 = *(_OWORD *)(v2 + 32);
  long long v11 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v0 + 80) = v11;
  *(_OWORD *)(v0 + 32) = v9;
  *(_OWORD *)(v0 + 48) = v10;
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v12;
  void *v12 = v0;
  v12[1] = sub_2529194C0;
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 224);
  return VideoAdaptor.applied(to:)(v13, v14);
}

uint64_t sub_2529194C0()
{
  uint64_t v2 = (void *)*v1;
  v2[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2529197B8, 0, 0);
  }
  else
  {
    long long v3 = (void *)swift_task_alloc();
    v2[33] = v3;
    *long long v3 = v2;
    v3[1] = sub_252919634;
    uint64_t v4 = v2[30];
    uint64_t v5 = v2[27];
    return sub_252913284(v5, v4);
  }
}

uint64_t sub_252919634()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25291981C;
  }
  else {
    uint64_t v2 = sub_252919748;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252919748()
{
  sub_2528F0B14(*(void *)(v0 + 240));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2529197B8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25291981C()
{
  sub_2528F0B14(*(void *)(v0 + 240));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static BodySkeleton3DTracker.prepare()()
{
  return sub_2528D0458(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2529198C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return BodySkeleton3DTracker.applied(to:)(a1, a2);
}

uint64_t type metadata accessor for BodySkeleton3DTracker()
{
  uint64_t result = qword_269C32F38;
  if (!qword_269C32F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2529199B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HiFiBodyPose3DEstimator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for BodySkeleton3DTracker(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v46 = *a2;
    *a1 = *a2;
    a1 = (void *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    long long v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    long long v9 = (int *)type metadata accessor for BodyPose2DEstimator();
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    long long v11 = (char *)a1 + v10;
    id v12 = (char *)a2 + v10;
    v8((void *)((char *)a1 + v10), (void *)((char *)a2 + v10), v7);
    uint64_t v13 = type metadata accessor for GaussianFilter();
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    uint64_t v14 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
    *(_DWORD *)((char *)a1 + v14[5]) = *(_DWORD *)((char *)a2 + v14[5]);
    uint64_t v15 = v14[6];
    uint64_t v16 = (char *)a1 + v15;
    long long v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
    long long v18 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
    *(void *)((char *)a1 + v18[5]) = *(void *)((char *)a2 + v18[5]);
    uint64_t v19 = v18[6];
    long long v20 = (char *)a1 + v19;
    long long v21 = (char *)a2 + v19;
    *(void *)long long v20 = *(void *)v21;
    v20[8] = v21[8];
    *(void *)((char *)a1 + v18[7]) = *(void *)((char *)a2 + v18[7]);
    *((unsigned char *)a1 + v18[8]) = *((unsigned char *)a2 + v18[8]);
    *(void *)((char *)a1 + v18[9]) = *(void *)((char *)a2 + v18[9]);
    uint64_t v22 = *(int *)(a3 + 20);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v26 = *(void **)v24;
    unint64_t v25 = (void *)*((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    v23[16] = v24[16];
    unint64_t v27 = (void *)*((void *)v24 + 3);
    uint64_t v28 = *((void *)v24 + 4);
    *((void *)v23 + 3) = v27;
    *((void *)v23 + 4) = v28;
    uint64_t v29 = *((void *)v24 + 6);
    *((void *)v23 + 5) = *((void *)v24 + 5);
    *((void *)v23 + 6) = v29;
    uint64_t v30 = *((void *)v24 + 8);
    *((void *)v23 + 7) = *((void *)v24 + 7);
    *((void *)v23 + 8) = v30;
    uint64_t v31 = *((void *)v24 + 10);
    *((void *)v23 + 9) = *((void *)v24 + 9);
    *((void *)v23 + 10) = v31;
    uint64_t v32 = *((void *)v24 + 12);
    *((void *)v23 + 11) = *((void *)v24 + 11);
    *((void *)v23 + 12) = v32;
    uint64_t v33 = *((void *)v24 + 14);
    *((void *)v23 + 13) = *((void *)v24 + 13);
    *((void *)v23 + 14) = v33;
    uint64_t v34 = *((void *)v24 + 16);
    *((void *)v23 + 15) = *((void *)v24 + 15);
    *((void *)v23 + 16) = v34;
    uint64_t v35 = (void *)*((void *)v24 + 18);
    *((void *)v23 + 17) = *((void *)v24 + 17);
    *((void *)v23 + 18) = v35;
    unint64_t v48 = v35;
    id v49 = (void *)*((void *)v24 + 19);
    id v36 = (void *)*((void *)v24 + 20);
    *((void *)v23 + 19) = v49;
    *((void *)v23 + 20) = v36;
    id v50 = v36;
    id v51 = (void *)*((void *)v24 + 21);
    id v52 = (void *)*((void *)v24 + 22);
    *((void *)v23 + 21) = v51;
    *((void *)v23 + 22) = v52;
    id v53 = (void *)*((void *)v24 + 24);
    *((void *)v23 + 23) = *((void *)v24 + 23);
    *((void *)v23 + 24) = v53;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v37 = v26;
    id v38 = v25;
    id v39 = v27;
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v40 = v48;
    id v41 = v49;
    id v42 = v50;
    id v43 = v51;
    id v44 = v52;
    swift_unknownObjectRetain();
    id v45 = v53;
  }
  return a1;
}

void destroy for BodySkeleton3DTracker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951A08();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for BodyPose2DEstimator();
  v5(a1 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), v4);
  swift_release();
  type metadata accessor for HiFiBodyPose3DEstimator();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 20);

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  long long v8 = *(void **)(v7 + 192);
}

uint64_t initializeWithCopy for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  long long v17 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(a1 + v17[5]) = *(void *)(a2 + v17[5]);
  uint64_t v18 = v17[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(a1 + v17[7]) = *(void *)(a2 + v17[7]);
  *(unsigned char *)(a1 + v17[8]) = *(unsigned char *)(a2 + v17[8]);
  *(void *)(a1 + v17[9]) = *(void *)(a2 + v17[9]);
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  unint64_t v25 = *(void **)v23;
  uint64_t v24 = *(void **)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v24;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  uint64_t v26 = *(void **)(v23 + 24);
  uint64_t v27 = *(void *)(v23 + 32);
  *(void *)(v22 + 24) = v26;
  *(void *)(v22 + 32) = v27;
  uint64_t v28 = *(void *)(v23 + 48);
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  *(void *)(v22 + 48) = v28;
  uint64_t v29 = *(void *)(v23 + 64);
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  *(void *)(v22 + 64) = v29;
  uint64_t v30 = *(void *)(v23 + 80);
  *(void *)(v22 + 72) = *(void *)(v23 + 72);
  *(void *)(v22 + 80) = v30;
  uint64_t v31 = *(void *)(v23 + 96);
  *(void *)(v22 + 88) = *(void *)(v23 + 88);
  *(void *)(v22 + 96) = v31;
  uint64_t v32 = *(void *)(v23 + 112);
  *(void *)(v22 + 104) = *(void *)(v23 + 104);
  *(void *)(v22 + 112) = v32;
  uint64_t v33 = *(void *)(v23 + 128);
  *(void *)(v22 + 120) = *(void *)(v23 + 120);
  *(void *)(v22 + 128) = v33;
  uint64_t v34 = *(void **)(v23 + 144);
  *(void *)(v22 + 136) = *(void *)(v23 + 136);
  *(void *)(v22 + 144) = v34;
  uint64_t v46 = v34;
  id v47 = *(void **)(v23 + 152);
  uint64_t v35 = *(void **)(v23 + 160);
  *(void *)(v22 + 152) = v47;
  *(void *)(v22 + 160) = v35;
  unint64_t v48 = v35;
  id v49 = *(void **)(v23 + 168);
  id v50 = *(void **)(v23 + 176);
  *(void *)(v22 + 168) = v49;
  *(void *)(v22 + 176) = v50;
  id v51 = *(void **)(v23 + 192);
  *(void *)(v22 + 184) = *(void *)(v23 + 184);
  *(void *)(v22 + 192) = v51;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v36 = v25;
  id v37 = v24;
  id v38 = v26;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v39 = v46;
  id v40 = v47;
  id v41 = v48;
  id v42 = v49;
  id v43 = v50;
  swift_unknownObjectRetain();
  id v44 = v51;
  return a1;
}

uint64_t assignWithCopy for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_retain();
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  long long v17 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(a1 + v17[5]) = *(void *)(a2 + v17[5]);
  swift_retain();
  swift_release();
  uint64_t v18 = v17[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_retain();
  swift_release();
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(a1 + v17[7]) = *(void *)(a2 + v17[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + v17[8]) = *(unsigned char *)(a2 + v17[8]);
  *(void *)(a1 + v17[9]) = *(void *)(a2 + v17[9]);
  swift_retain();
  swift_release();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void **)(a2 + v21);
  unint64_t v25 = *(void **)v22;
  *(void *)uint64_t v22 = v24;
  id v26 = v24;

  uint64_t v27 = *(void **)(v23 + 8);
  uint64_t v28 = *(void **)(v22 + 8);
  *(void *)(v22 + 8) = v27;
  id v29 = v27;

  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  uint64_t v30 = *(void **)(v23 + 24);
  uint64_t v31 = *(void **)(v22 + 24);
  *(void *)(v22 + 24) = v30;
  id v32 = v30;

  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  swift_retain();
  swift_release();
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 64) = *(void *)(v23 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 72) = *(void *)(v23 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 80) = *(void *)(v23 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 88) = *(void *)(v23 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 96) = *(void *)(v23 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 104) = *(void *)(v23 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 112) = *(void *)(v23 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v22 + 120) = *(void *)(v23 + 120);
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + 136) = *(void *)(v23 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v33 = *(void **)(v23 + 144);
  uint64_t v34 = *(void **)(v22 + 144);
  *(void *)(v22 + 144) = v33;
  id v35 = v33;

  id v36 = *(void **)(v23 + 152);
  id v37 = *(void **)(v22 + 152);
  *(void *)(v22 + 152) = v36;
  id v38 = v36;

  id v39 = *(void **)(v23 + 160);
  id v40 = *(void **)(v22 + 160);
  *(void *)(v22 + 160) = v39;
  id v41 = v39;

  id v42 = *(void **)(v23 + 168);
  id v43 = *(void **)(v22 + 168);
  *(void *)(v22 + 168) = v42;
  id v44 = v42;

  id v45 = *(void **)(v23 + 176);
  uint64_t v46 = *(void **)(v22 + 176);
  *(void *)(v22 + 176) = v45;
  id v47 = v45;

  *(void *)(v22 + 184) = *(void *)(v23 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  unint64_t v48 = *(void **)(v22 + 192);
  id v49 = *(void **)(v23 + 192);
  *(void *)(v22 + 192) = v49;
  id v50 = v49;

  return a1;
}

uint64_t initializeWithTake for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  long long v17 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(a1 + v17[5]) = *(void *)(a2 + v17[5]);
  uint64_t v18 = v17[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(a1 + v17[7]) = *(void *)(a2 + v17[7]);
  *(unsigned char *)(a1 + v17[8]) = *(unsigned char *)(a2 + v17[8]);
  *(void *)(a1 + v17[9]) = *(void *)(a2 + v17[9]);
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  long long v24 = *(_OWORD *)(v23 + 176);
  *(_OWORD *)(v22 + 160) = *(_OWORD *)(v23 + 160);
  *(_OWORD *)(v22 + 176) = v24;
  *(void *)(v22 + 192) = *(void *)(v23 + 192);
  long long v25 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v25;
  long long v26 = *(_OWORD *)(v23 + 144);
  *(_OWORD *)(v22 + 128) = *(_OWORD *)(v23 + 128);
  *(_OWORD *)(v22 + 144) = v26;
  long long v27 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v27;
  long long v28 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v28;
  long long v29 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v29;
  return a1;
}

uint64_t assignWithTake for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  long long v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  long long v17 = (int *)type metadata accessor for HiFiBodyPose3DEstimator();
  *(void *)(a1 + v17[5]) = *(void *)(a2 + v17[5]);
  swift_release();
  uint64_t v18 = v17[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_release();
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(a1 + v17[7]) = *(void *)(a2 + v17[7]);
  swift_release();
  *(unsigned char *)(a1 + v17[8]) = *(unsigned char *)(a2 + v17[8]);
  *(void *)(a1 + v17[9]) = *(void *)(a2 + v17[9]);
  swift_release();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  long long v24 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)v23;

  long long v25 = *(void **)(v22 + 8);
  *(void *)(v22 + 8) = *(void *)(v23 + 8);

  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  long long v26 = *(void **)(v22 + 24);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);

  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  swift_release();
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  swift_unknownObjectRelease();
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  swift_unknownObjectRelease();
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  swift_unknownObjectRelease();
  *(void *)(v22 + 64) = *(void *)(v23 + 64);
  swift_unknownObjectRelease();
  *(void *)(v22 + 72) = *(void *)(v23 + 72);
  swift_unknownObjectRelease();
  *(void *)(v22 + 80) = *(void *)(v23 + 80);
  swift_unknownObjectRelease();
  *(void *)(v22 + 88) = *(void *)(v23 + 88);
  swift_unknownObjectRelease();
  *(void *)(v22 + 96) = *(void *)(v23 + 96);
  swift_unknownObjectRelease();
  *(void *)(v22 + 104) = *(void *)(v23 + 104);
  swift_unknownObjectRelease();
  *(void *)(v22 + 112) = *(void *)(v23 + 112);
  swift_unknownObjectRelease();
  uint64_t v27 = *(void *)(v23 + 128);
  *(void *)(v22 + 120) = *(void *)(v23 + 120);
  *(void *)(v22 + 128) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 136) = *(void *)(v23 + 136);
  swift_unknownObjectRelease();
  long long v28 = *(void **)(v22 + 144);
  *(void *)(v22 + 144) = *(void *)(v23 + 144);

  long long v29 = *(void **)(v22 + 152);
  *(void *)(v22 + 152) = *(void *)(v23 + 152);

  uint64_t v30 = *(void **)(v22 + 160);
  *(void *)(v22 + 160) = *(void *)(v23 + 160);

  uint64_t v31 = *(void **)(v22 + 168);
  *(void *)(v22 + 168) = *(void *)(v23 + 168);

  id v32 = *(void **)(v22 + 176);
  *(void *)(v22 + 176) = *(void *)(v23 + 176);

  *(void *)(v22 + 184) = *(void *)(v23 + 184);
  swift_unknownObjectRelease();
  uint64_t v33 = *(void **)(v22 + 192);
  *(void *)(v22 + 192) = *(void *)(v23 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25291AB8C);
}

uint64_t sub_25291AB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HiFiBodyPose3DEstimator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BodySkeleton3DTracker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25291AC60);
}

uint64_t sub_25291AC60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HiFiBodyPose3DEstimator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25291AD1C()
{
  uint64_t result = type metadata accessor for HiFiBodyPose3DEstimator();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25291ADB0(char a1)
{
  swift_defaultActor_initialize();
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentIntrinsics;
  uint64_t v4 = sub_252951A08();
  int v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v1 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentInverseIntrinsics, 1, 1, v4);
  v8[0] = xmmword_252957AA0;
  v8[1] = xmmword_252957AB0;
  v8[2] = xmmword_252957AC0;
  MLTensor.init(matrix3x3:)((uint64_t)v8);
  simd_float3x3 v7 = __invert_f3(*(simd_float3x3 *)_PromotedConst_0);
  MLTensor.init(matrix3x3:)((uint64_t)&v7);
  *(unsigned char *)(v1 + 112) = a1;
  return v1;
}

uint64_t sub_25291AED4(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25291B090, v2, 0);
}

uint64_t sub_25291B090()
{
  uint64_t v1 = sub_2529518F8();
  if (*(void *)(v1 + 16) != 3)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v1 = swift_bridgeObjectRelease();
  if (v6 != 3)
  {
LABEL_13:
    __break(1u);
    return MEMORY[0x270EE76F8](v1, v2, v3, v4, v5);
  }
  uint64_t v32 = v0[23];
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[10];
  uint64_t v11 = v10 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_intrinsicsTraining;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v12(v0[25], v10 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_inverseIntrinsicsTraining, v7);
  uint64_t v13 = v10 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentIntrinsics;
  swift_beginAccess();
  sub_2528D68A4(v13, v9);
  v12(v32, v11, v7);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v15 = v14(v9, 1, v7);
  uint64_t v16 = v0[24];
  uint64_t v17 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v19 = v0[15];
  if (v15 == 1)
  {
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v31(v0[24], v0[23], v0[16]);
    sub_2528AE5CC(v19);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0[23], v0[16]);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v31(v16, v19, v17);
  }
  uint64_t v20 = v0[25];
  uint64_t v21 = v0[21];
  uint64_t v22 = v0[16];
  uint64_t v23 = v0[14];
  uint64_t v24 = v0[10] + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentInverseIntrinsics;
  swift_beginAccess();
  sub_2528D68A4(v24, v23);
  v12(v21, v20, v22);
  int v25 = v14(v23, 1, v22);
  uint64_t v26 = v0[22];
  uint64_t v27 = v0[16];
  uint64_t v28 = v0[14];
  if (v25 == 1)
  {
    v31(v0[22], v0[21], v0[16]);
    sub_2528AE5CC(v28);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v0[17] + 8))(v0[21], v0[16]);
    v31(v26, v28, v27);
  }
  sub_25291B728(v0[9], (char *)v0[22], v0[20]);
  long long v29 = (void *)swift_task_alloc();
  v0[26] = (uint64_t)v29;
  *long long v29 = v0;
  v29[1] = sub_25291B3BC;
  uint64_t v1 = v0[13];
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v4 = MEMORY[0x263F00C58];
  uint64_t v5 = MEMORY[0x263F00C50];
  uint64_t v3 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v1, v2, v3, v4, v5);
}

uint64_t sub_25291B3BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25291B4CC, v1, 0);
}

uint64_t sub_25291B4CC()
{
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 176);
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515F8();
  float v8 = *(float *)(v0 + 216) + *(float *)(v0 + 216);
  sub_2529515F8();
  sub_25291BF38(v15, v1, v8, *(float *)(v0 + 220) + *(float *)(v0 + 220));
  sub_25291C488(v3);
  sub_25291CA00(v3);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v3, v4);
  v9(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v9(v15, v4);
  v9(v12, v4);
  v9(v13, v4);
  v9(v14, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void *sub_25291B728@<X0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v75 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v86 = (char *)&v58 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v84 = (char *)&v58 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int v83 = (char *)&v58 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v82 = (char *)&v58 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v58 - v25;
  uint64_t result = (void *)MEMORY[0x270FA5388](v24);
  if (*(unsigned char *)(v3 + 112))
  {
    long long v29 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
    uint64_t v30 = (char *)&v58 - v28;
    uint64_t v77 = v7 + 16;
    id v81 = v29;
    v29((uint64_t)&v58 - v28, a2, v6);
    uint64_t v74 = v30;
    sub_252951948();
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
    uint64_t v31 = swift_allocObject();
    long long v85 = xmmword_252953740;
    *(_OWORD *)(v31 + 16) = xmmword_252953740;
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32F78);
    *(void *)(v31 + 56) = v73;
    uint64_t v79 = sub_2528AB6E8(&qword_269C32F80, &qword_269C32F78);
    *(void *)(v31 + 64) = v79;
    long long v78 = xmmword_252957AD0;
    *(_OWORD *)(v31 + 32) = xmmword_252957AD0;
    sub_252951A48();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t v32 = swift_allocObject();
    long long v72 = xmmword_252953970;
    *(_OWORD *)(v32 + 16) = xmmword_252953970;
    uint64_t result = (void *)sub_2529518F8();
    if (result[2])
    {
      uint64_t v33 = result[4];
      swift_bridgeObjectRelease();
      *(void *)(v32 + 32) = v33;
      uint64_t result = (void *)sub_2529518F8();
      if (result[2] >= 2uLL)
      {
        uint64_t v34 = result[5];
        swift_bridgeObjectRelease();
        *(void *)(v32 + 40) = v34;
        *(void *)(v32 + 48) = 1;
        sub_2528AE524();
        sub_2528AE578();
        id v35 = v82;
        sub_252951888();
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
        uint64_t v36 = *(void *)(v7 + 72);
        uint64_t v37 = *(unsigned __int8 *)(v7 + 80);
        long long v71 = v23;
        uint64_t v69 = v26;
        uint64_t v38 = (v37 + 32) & ~v37;
        uint64_t v65 = v38 + 2 * v36;
        uint64_t v61 = v38;
        uint64_t v39 = v36;
        uint64_t v62 = v36;
        uint64_t v64 = v37 | 7;
        uint64_t v40 = swift_allocObject();
        long long v63 = xmmword_252953B00;
        *(_OWORD *)(v40 + 16) = xmmword_252953B00;
        uint64_t v70 = a1;
        uint64_t v41 = v40 + v38;
        uint64_t v42 = v40 + v38;
        id v43 = v81;
        v81(v42, v23, v6);
        v43(v41 + v39, v35, v6);
        uint64_t v87 = v40;
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
        uint64_t v67 = sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
        sub_2529516D8();
        sub_252951668();
        id v44 = v86;
        sub_252951948();
        id v45 = *(void (**)(char *, uint64_t))(v7 + 8);
        v45(v12, v6);
        sub_252951668();
        v45(v44, v6);
        uint64_t v46 = swift_allocObject();
        id v59 = v12;
        uint64_t v47 = v73;
        uint64_t v48 = v79;
        *(void *)(v46 + 56) = v73;
        *(void *)(v46 + 64) = v48;
        long long v49 = v78;
        *(_OWORD *)(v46 + 16) = v85;
        *(_OWORD *)(v46 + 32) = v49;
        sub_252951A48();
        swift_bridgeObjectRelease();
        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 56) = v47;
        *(void *)(v50 + 64) = v48;
        long long v60 = xmmword_252953AF0;
        *(_OWORD *)(v50 + 16) = v85;
        *(_OWORD *)(v50 + 32) = xmmword_252953AF0;
        id v51 = v75;
        sub_252951A48();
        swift_bridgeObjectRelease();
        id v52 = v59;
        sub_252951718();
        v45(v51, v6);
        v45(v52, v6);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = v79;
        *(void *)(v53 + 56) = v47;
        *(void *)(v53 + 64) = v54;
        long long v55 = v78;
        *(_OWORD *)(v53 + 16) = v85;
        *(_OWORD *)(v53 + 32) = v55;
        sub_252951A48();
        swift_bridgeObjectRelease();
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = v63;
        v81(v56 + v61, v52, v6);
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = v72;
        *(_OWORD *)(v57 + 32) = 0u;
        *(_OWORD *)(v57 + 48) = 0u;
        *(_OWORD *)(v57 + 64) = 0u;
        *(_OWORD *)(v57 + 80) = 0u;
        *(_OWORD *)(v57 + 96) = 0u;
        *(void *)(v57 + 136) = v47;
        *(void *)(v57 + 144) = v54;
        *(_OWORD *)(v57 + 112) = v60;
        sub_252951A58();
        swift_bridgeObjectRelease();
        uint64_t v87 = v56;
        sub_2529516D8();
        v45(v52, v6);
        v45(v86, v6);
        v45(v84, v6);
        v45(v83, v6);
        v45(v82, v6);
        v45(v71, v6);
        v45(v69, v6);
        return (void *)((uint64_t (*)(char *, uint64_t))v45)(v74, v6);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25291BF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v47 = a2;
  uint64_t v7 = sub_252951A08();
  uint64_t v8 = *(void **)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v41 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v50 = (char *)&v41 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = (void (*)(char *, uint64_t, uint64_t))v8[2];
  v21((char *)&v41 - v19, a1, v7);
  uint64_t v22 = *(void *)(sub_2529518F8() + 16);
  swift_bridgeObjectRelease();
  uint64_t v46 = (void (*)(uint64_t, char *, uint64_t))v8;
  uint64_t v23 = (uint64_t (*)(char *, uint64_t))v8[1];
  uint64_t result = v23(v20, v7);
  if (v22 != 3)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v45 = v8 + 2;
  v21(v20, a1, v7);
  uint64_t result = sub_2529518F8();
  if (*(void *)(result + 16) < 3uLL)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v25 = (void (*)(uint64_t, char *, uint64_t))v21;
  uint64_t v26 = *(void *)(result + 48);
  swift_bridgeObjectRelease();
  uint64_t result = v23(v20, v7);
  if (v26 == 3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
    uint64_t v27 = swift_allocObject();
    long long v49 = xmmword_252953970;
    *(_OWORD *)(v27 + 16) = xmmword_252953970;
    *(_DWORD *)(v27 + 32) = 1065353216;
    *(float *)(v27 + 36) = a3 / a4;
    *(_DWORD *)(v27 + 40) = 0;
    uint64_t v51 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
    uint64_t v44 = MEMORY[0x263F8D4D0];
    sub_2528AB6E8((unint64_t *)&qword_269C31C58, &qword_269C31C30);
    sub_252951A38();
    sub_2529516C8();
    sub_252951738();
    v23(v11, v7);
    *(float *)&uint64_t v51 = a3;
    id v43 = v20;
    uint64_t v28 = (void (*)(char *, uint64_t))v23;
    long long v29 = v48;
    sub_252951728();
    uint64_t v42 = v14;
    v28(v14, v7);
    sub_252951798();
    v28(v29, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v49;
    *(_OWORD *)(v30 + 32) = 0u;
    *(_OWORD *)(v30 + 48) = 0u;
    *(_OWORD *)(v30 + 64) = 0u;
    *(_OWORD *)(v30 + 80) = 0u;
    *(_OWORD *)(v30 + 96) = 0u;
    uint64_t v31 = MEMORY[0x263F00C68];
    *(void *)(v30 + 136) = MEMORY[0x263F8D6C8];
    *(void *)(v30 + 144) = v31;
    *(void *)(v30 + 112) = 2;
    sub_252951A58();
    swift_bridgeObjectRelease();
    sub_2529516E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
    uint64_t v32 = *((void *)v46 + 9);
    unint64_t v33 = (*((unsigned __int8 *)v46 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
    uint64_t v34 = swift_allocObject();
    uint64_t v46 = v25;
    uint64_t v35 = v34;
    *(_OWORD *)(v34 + 16) = xmmword_252953B00;
    unint64_t v36 = v34 + v33;
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = v49;
    *(_OWORD *)(v37 + 32) = 0u;
    *(_OWORD *)(v37 + 48) = 0u;
    *(_OWORD *)(v37 + 64) = 0u;
    *(_OWORD *)(v37 + 80) = 0u;
    *(_OWORD *)(v37 + 96) = 0u;
    *(void *)(v37 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32F78);
    *(void *)(v37 + 144) = sub_2528AB6E8(&qword_269C32F80, &qword_269C32F78);
    *(_OWORD *)(v37 + 112) = xmmword_252957AD0;
    uint64_t v38 = v50;
    sub_252951A58();
    swift_bridgeObjectRelease();
    uint64_t v39 = v36 + v32;
    uint64_t v40 = v42;
    v46(v39, v42, v7);
    uint64_t v51 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_2529516D8();
    v28(v40, v7);
    v28(v29, v7);
    v28(v38, v7);
    return ((uint64_t (*)(char *, uint64_t))v28)(v43, v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_25291C488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v54 = sub_252951A08();
  uint64_t v1 = *(void *)(v54 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v54);
  id v52 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v41 - v5;
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (char *)&v41 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v55 = (char *)&v41 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v41 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v41 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
  uint64_t v22 = swift_allocObject();
  long long v51 = xmmword_252953970;
  *(_OWORD *)(v22 + 16) = xmmword_252953970;
  *(_OWORD *)(v22 + 32) = 0u;
  *(_OWORD *)(v22 + 48) = 0u;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(void *)(v22 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32F78);
  *(void *)(v22 + 144) = sub_2528AB6E8(&qword_269C32F80, &qword_269C32F78);
  *(_OWORD *)(v22 + 112) = xmmword_252953AF0;
  sub_252951A58();
  swift_bridgeObjectRelease();
  int v58 = 1050253722;
  id v45 = v21;
  sub_2529517F8();
  sub_2529518F8();
  sub_2529519E8();
  sub_2529519F8();
  uint64_t v46 = v19;
  sub_252951808();
  uint64_t result = sub_252951908();
  uint64_t v56 = result;
  if (*(void *)(result + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v41 = v16;
  uint64_t v42 = v13;
  uint64_t v50 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v49 = (v50 + 32) & ~v50;
  uint64_t v48 = *(void *)(v1 + 72);
  uint64_t v24 = 2 * v48;
  uint64_t v43 = v56 + v49;
  uint64_t v25 = v56 + v49 + 2 * v48;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v27 = v54;
  v26(v6, v25, v54);
  sub_2529518F8();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v1 + 8);
  v28(v6, v27);
  sub_2528AE524();
  sub_2528AE578();
  sub_252951888();
  long long v29 = v52;
  uint64_t v30 = v53;
  uint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t))v26;
  v26(v52, v25, v27);
  sub_2529519F8();
  v28(v29, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  id v52 = (char *)v24;
  uint64_t v31 = v48;
  uint64_t v32 = v49;
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = v51;
  if (!*(void *)(v56 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v33 = result;
  uint64_t v34 = v30;
  uint64_t v35 = result + v32;
  uint64_t v36 = result + v32;
  uint64_t v37 = v43;
  uint64_t v38 = v44;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v44)(v36, v43, v54);
  if (*(void *)(v56 + 16) >= 2uLL)
  {
    uint64_t v39 = v37 + v31;
    uint64_t v40 = v54;
    v38(v35 + v31, v39, v54);
    swift_bridgeObjectRelease();
    v38((uint64_t)&v52[v35], (uint64_t)v6, v40);
    uint64_t v57 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_2529516D8();
    v28(v6, v40);
    v28(v34, v40);
    v28(v55, v40);
    v28(v42, v40);
    v28(v41, v40);
    v28(v46, v40);
    return ((uint64_t (*)(char *, uint64_t))v28)(v45, v40);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_25291CA00(uint64_t a1)
{
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = *(void *)(sub_2529518F8() + 16);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 != 3)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = (void *)sub_2529518F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_252953970;
  uint64_t v9 = v8[2];
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = result;
  *(void *)(result + 32) = v8[4];
  if (v9 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v9 == 2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v8[5];
  uint64_t v12 = v8[6];
  uint64_t result = swift_bridgeObjectRelease();
  if ((unsigned __int128)(v11 * (__int128)v12) >> 64 == (v11 * v12) >> 63)
  {
    *(void *)(v10 + 40) = v11 * v12;
    *(void *)(v10 + 48) = 1;
    sub_2529519A8();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25291CBA0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 120) = a2;
  *(void *)(v4 + 128) = v3;
  *(unsigned char *)(v4 + 232) = a3;
  *(void *)(v4 + 112) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  *(void *)(v4 + 136) = swift_task_alloc();
  *(void *)(v4 + 144) = swift_task_alloc();
  *(void *)(v4 + 152) = swift_task_alloc();
  *(void *)(v4 + 160) = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  *(void *)(v4 + 168) = v5;
  *(void *)(v4 + 176) = *(void *)(v5 - 8);
  *(void *)(v4 + 184) = swift_task_alloc();
  *(void *)(v4 + 192) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25291CCD0, v3, 0);
}

uint64_t sub_25291CCD0()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  sub_2528D68A4(*(void *)(v0 + 112), v3);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1, v1) == 1)
  {
    sub_2528AE5CC(*(void *)(v0 + 160));
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 176) + 32);
  v8(*(void *)(v0 + 192), *(void *)(v0 + 160), v5);
  sub_2528D68A4(v7, v6);
  unsigned int v9 = v4(v6, 1, v5);
  uint64_t v10 = *(void *)(v0 + 152);
  if (v9 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 168));
    sub_2528AE5CC(v10);
    goto LABEL_10;
  }
  int v11 = *(unsigned __int8 *)(v0 + 232);
  v8(*(void *)(v0 + 184), *(void *)(v0 + 152), *(void *)(v0 + 168));
  if (v11 != 1)
  {
    uint64_t v24 = *(void *)(v0 + 184);
    uint64_t v16 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 128);
    v8(v18, *(void *)(v0 + 192), v16);
    uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
    v23(v18, 0, 1, v16);
    sub_2529007FC(v18, v17);
    uint64_t v20 = v19 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentIntrinsics;
    swift_beginAccess();
    sub_2528FA264(v17, v20);
    swift_endAccess();
    v8(v18, v24, v16);
    v23(v18, 0, 1, v16);
    sub_2529007FC(v18, v17);
    uint64_t v21 = v19 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentInverseIntrinsics;
    swift_beginAccess();
    sub_2528FA264(v17, v21);
    swift_endAccess();
    goto LABEL_10;
  }
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v12;
  void *v12 = v0;
  v12[1] = sub_25291CFF8;
  uint64_t v13 = *(void *)(v0 + 144);
  return sub_25291D480(v13);
}

uint64_t sub_25291CFF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25291D108, v1, 0);
}

uint64_t sub_25291D108()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  v0[26] = v6;
  v0[27] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v6(v3, 0, 1, v1);
  sub_2529007FC(v3, v4);
  uint64_t v7 = v5 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentIntrinsics;
  swift_beginAccess();
  sub_2528FA264(v4, v7);
  swift_endAccess();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_25291D224;
  uint64_t v9 = v0[18];
  return sub_25291D480(v9);
}

uint64_t sub_25291D224()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25291D334, v1, 0);
}

uint64_t sub_25291D334()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[26];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v10 = v0[16];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[22] + 8);
  v6(v0[23], v3);
  v6(v2, v3);
  v1(v4, 0, 1, v3);
  sub_2529007FC(v4, v5);
  uint64_t v7 = v10 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentInverseIntrinsics;
  swift_beginAccess();
  sub_2528FA264(v5, v7);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25291D480(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[12] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[13] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25291D5A4;
  uint64_t v6 = MEMORY[0x263F8D5C8];
  uint64_t v7 = MEMORY[0x263F00C58];
  uint64_t v8 = MEMORY[0x263F00C50];
  uint64_t v9 = MEMORY[0x263F8D5C8];
  return MEMORY[0x270EE76F8](v4, v6, v9, v7, v8);
}

uint64_t sub_25291D5A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25291D6B4, v1, 0);
}

uint64_t sub_25291D6B4()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  uint64_t v4 = sub_2529515D8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v8 = *(void *)(v4 + 16);
  if (v8 < 5)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v8 == 5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 < 7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 == 7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 < 9)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v7.i32[0] = *(_DWORD *)(v4 + 48);
  LODWORD(v6) = *(_DWORD *)(v4 + 52);
  __int32 v17 = *(_DWORD *)(v4 + 56);
  v9.i64[0] = *(unsigned int *)(v4 + 44);
  v9.i64[1] = *(unsigned int *)(v4 + 32);
  v7.i32[1] = v17;
  v7.i32[2] = *(_DWORD *)(v4 + 36);
  int32x4_t v14 = v7;
  int32x4_t v15 = v9;
  int32x4_t v10 = vzip2q_s32(v7, v9);
  v10.i32[2] = *(_DWORD *)(v4 + 60);
  int32x4_t v16 = v10;
  DWORD1(v6) = *(_DWORD *)(v4 + 40);
  DWORD2(v6) = *(_DWORD *)(v4 + 64);
  long long v13 = v6;
  swift_bridgeObjectRelease();
  int32x4_t v11 = vzip1q_s32(v14, v15);
  v11.i32[2] = v17;
  *(int32x4_t *)(v0 + 16) = v11;
  *(int32x4_t *)(v0 + 32) = v16;
  *(_OWORD *)(v0 + 48) = v13;
  MLTensor.init(matrix3x3:)(v0 + 16);
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_25291D840()
{
  sub_2528AE5CC(v0 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentIntrinsics);
  sub_2528AE5CC(v0 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_currentInverseIntrinsics);
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_intrinsicsTraining;
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5Human21Lifting3DPreprocessor_inverseIntrinsicsTraining, v2);
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_25291D90C()
{
  return type metadata accessor for Lifting3DPreprocessor();
}

uint64_t type metadata accessor for Lifting3DPreprocessor()
{
  uint64_t result = qword_269C32F48;
  if (!qword_269C32F48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25291D960()
{
  sub_25290062C();
  if (v0 <= 0x3F)
  {
    sub_252951A08();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_25291DA40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25291DAEC;
  return sub_25291AED4(a1, a2);
}

uint64_t sub_25291DAEC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t *sub_25291DBE4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    int32x4_t v10 = (char *)a1 + v9;
    int32x4_t v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    uint64_t v12 = type metadata accessor for GaussianFilter();
    *(void *)&v10[*(int *)(v12 + 20)] = *(void *)&v11[*(int *)(v12 + 20)];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_25291DD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951A08();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v5(a1 + *(int *)(a2 + 24), v4);

  return swift_release();
}

uint64_t sub_25291DDD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = type metadata accessor for GaussianFilter();
  *(void *)(v9 + *(int *)(v11 + 20)) = *(void *)(v10 + *(int *)(v11 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t sub_25291DEB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = type metadata accessor for GaussianFilter();
  *(void *)(v9 + *(int *)(v11 + 20)) = *(void *)(v10 + *(int *)(v11 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25291DFAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = type metadata accessor for GaussianFilter();
  *(void *)(v9 + *(int *)(v11 + 20)) = *(void *)(v10 + *(int *)(v11 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_25291E090(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = type metadata accessor for GaussianFilter();
  *(void *)(v9 + *(int *)(v11 + 20)) = *(void *)(v10 + *(int *)(v11 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_25291E17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25291E190);
}

uint64_t sub_25291E190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for GaussianFilter();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_25291E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25291E2B8);
}

uint64_t sub_25291E2B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_252951A08();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for GaussianFilter();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BodyPose2DEstimator()
{
  uint64_t result = qword_269C32F88;
  if (!qword_269C32F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25291E414()
{
  uint64_t result = sub_252951A08();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GaussianFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_25291E4E8(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x270FA2498](sub_25291E508, 0, 0);
}

uint64_t sub_25291E508()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D98]), sel_init);
  v0[5] = v1;
  objc_msgSend(v1, sel_setComputeUnits_, 2);
  uint64_t v2 = sub_252951268();
  v0[6] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[7] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  uint64_t v5 = swift_task_alloc();
  type metadata accessor for Tango();
  sub_2528C72C0(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  swift_task_dealloc();
  sub_25290A614();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  void *v6 = v0;
  v6[1] = sub_25291E6A0;
  return MEMORY[0x270EE7958](v4, v1);
}

uint64_t sub_25291E6A0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[7];
    uint64_t v5 = v4[8];
    uint64_t v7 = v4[6];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_25291E7E8;
  }
  else
  {
    v4[10] = a1;
    uint64_t v8 = sub_25291E870;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_25291E7E8()
{
  return sub_252951F28();
}

uint64_t sub_25291E870()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v5 = (void *)v0[5];
  uint64_t v4 = v0[6];
  uint64_t v6 = v0[4];
  type metadata accessor for Tango();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v8 = type metadata accessor for BodyPose2DEstimator();
  *(void *)(v6 + *(int *)(v8 + 28)) = v7;
  sub_2528B0794(11, v6 + *(int *)(v8 + 24));
  v0[2] = &unk_2702D08D8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  sub_2529518E8();
  v0[3] = &unk_2702D0948;
  sub_2529518E8();

  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25291E9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_252951598();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FA0);
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_252951A08();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25291EB78, 0, 0);
}

uint64_t sub_25291EB78()
{
  v0[2] = v0[6];
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  swift_bridgeObjectRetain();
  v0[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  v0[23] = sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_2529519B8();
  sub_252951798();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[24] = v5;
  v0[25] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v3);
  type metadata accessor for BodyPose2DEstimator();
  sub_252951718();
  v5(v1, v3);
  uint64_t result = sub_2529518F8();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = *(void *)(result + 32);
  swift_bridgeObjectRelease();
  if (v7 != 1)
  {
    uint64_t result = sub_2529518F8();
    if (*(void *)(result + 16))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_252951908();
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_252953740;
  sub_252951708();
LABEL_6:
  v0[26] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[27] = v9;
  void *v9 = v0;
  v9[1] = sub_25291ED98;
  return sub_25291F638(v8);
}

uint64_t sub_25291ED98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_25291F428;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v5 = sub_25291EEDC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25291EEDC()
{
  uint64_t v1 = v0[18];
  uint64_t v19 = v0[17];
  uint64_t v17 = v0[20];
  uint64_t v18 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v16 = v0[8];
  v0[3] = v0[29];
  sub_2529516D8();
  sub_252951588();
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_252951618();
  swift_task_dealloc();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[30] = v8;
  v0[31] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v7, v16);
  uint64_t v9 = v4 + *(int *)(v5 + 48);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v10(v17, v4, v3);
  v10(v18, v9, v3);
  v10(v19, v17, v3);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[32] = v11;
  void *v11 = v0;
  v11[1] = sub_25291F0A0;
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[18];
  uint64_t v14 = v0[15];
  return sub_25291FF30(v14, v12, v13);
}

uint64_t sub_25291F0A0()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25291F518;
  }
  else {
    uint64_t v2 = sub_25291F1B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25291F1B4()
{
  uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[30];
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[20];
  uint64_t v22 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v20 = v3;
  uint64_t v21 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v18 = v0[16];
  uint64_t v19 = v4;
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[10];
  uint64_t v16 = v0[8];
  sub_252951588();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v4;
  sub_252951618();
  swift_task_dealloc();
  v17(v7, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t v9 = *(void *)(v5 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_252953B00;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
  v13(v12, v2, v6);
  v13(v12 + v9, v18, v6);
  v0[4] = v11;
  sub_2529516D8();
  v1(v2, v6);
  v1(v19, v6);
  v1(v18, v6);
  v1(v21, v6);
  v1(v20, v6);
  v1(v22, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_25291F428()
{
  (*(void (**)(void, void))(v0 + 192))(*(void *)(v0 + 168), *(void *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25291F518()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[13];
  v1(v0[16], v4);
  v1(v2, v4);
  v1(v3, v4);
  ((void (*)(void, void))v0[24])(v0[21], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_25291F638(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_252951A08();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25291F750, 0, 0);
}

uint64_t sub_25291F750()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = *(void *)(v0 + 40);
  if (v2)
  {
    int v4 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 176) = v4;
    *(void *)(v0 + 96) = *(void *)(v3 + 72);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v6 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 104) = v5;
    *(void *)(v0 + 112) = 0;
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v9 = v1 + ((v4 + 32) & ~(unint64_t)v4);
    *(void *)(v0 + 120) = v6;
    *(void *)(v0 + 128) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    swift_bridgeObjectRetain();
    v5(v7, v9, v8);
    unint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    *(void *)(v0 + 136) = v10;
    v10(v7, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v8) != 1)
    {
      uint64_t v12 = *(void *)(v0 + 72);
      uint64_t v11 = *(void *)(v0 + 80);
      uint64_t v13 = *(void *)(v0 + 32);
      uint64_t v14 = *(void *)(v0 + 40);
      int32x4_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
      *(void *)(v0 + 144) = v15;
      *(void *)(v0 + 152) = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v15(v12, v11, v13);
      if (sub_252951898() == 3)
      {
        uint64_t v16 = *(void *)(v0 + 64);
        uint64_t v17 = *(void *)(v0 + 72);
        uint64_t v18 = *(void *)(v0 + 32);
        uint64_t v19 = *(void *)(v0 + 40);
        sub_2529516E8();
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
        v15(v17, v16, v18);
      }
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_25291F9E8;
      uint64_t v21 = *(void *)(v0 + 72);
      uint64_t v22 = *(void *)(v0 + 56);
      return sub_252920460(v22, v21);
    }
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v25 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
    v24(v25, 1, 1, v26);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v28 = MEMORY[0x263F8EE78];
  return v27(v28);
}

uint64_t sub_25291F9E8()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25291FE78;
  }
  else
  {
    uint64_t v2 = sub_25291FB10;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25291FB10()
{
  (*(void (**)(void, void, void))(v0 + 104))(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 32));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = *(void *)(v0 + 120);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v2 = sub_2528C4584(0, *(void *)(v2 + 16) + 1, 1, *(void *)(v0 + 120));
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_2528C4584(v3 > 1, v4 + 1, 1, v2);
  }
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 144);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 32);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 112) + 1;
  *(void *)(v2 + 16) = v4 + 1;
  v5(v2 + ((v6 + 32) & ~v6) + v7 * v4, v10, v12);
  int32x4_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v15(v11, v12);
  v15(v9, v12);
  if (v14 == v8)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 136))(*(void *)(v0 + 80), 1, 1, *(void *)(v0 + 32));
LABEL_8:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v23(v2);
  }
  uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 112) + 1;
  *(void *)(v0 + 112) = v17;
  *(void *)(v0 + 120) = v2;
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v19 = *(void *)(v0 + 32);
  uint64_t v20 = *(void *)(v0 + 40);
  unint64_t v21 = *(void *)(v0 + 16)
      + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))
      + *(void *)(v0 + 96) * v17;
  *(void *)(v0 + 128) = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v16(v18, v21, v19);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
  *(void *)(v0 + 136) = v22;
  v22(v18, 0, 1, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    goto LABEL_8;
  }
  uint64_t v26 = *(void *)(v0 + 72);
  uint64_t v25 = *(void *)(v0 + 80);
  uint64_t v27 = *(void *)(v0 + 32);
  uint64_t v28 = *(void *)(v0 + 40);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
  *(void *)(v0 + 144) = v29;
  *(void *)(v0 + 152) = (v28 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v29(v26, v25, v27);
  if (sub_252951898() == 3)
  {
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v31 = *(void *)(v0 + 72);
    uint64_t v32 = *(void *)(v0 + 32);
    uint64_t v33 = *(void *)(v0 + 40);
    sub_2529516E8();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    v29(v31, v30, v32);
  }
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_25291F9E8;
  uint64_t v35 = *(void *)(v0 + 72);
  uint64_t v36 = *(void *)(v0 + 56);
  return sub_252920460(v36, v35);
}

uint64_t sub_25291FE78()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[9], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25291FF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_252951A08();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_252951598();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252920060, 0, 0);
}

uint64_t sub_252920060()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[3];
  sub_252951588();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v2, v7, v3);
  v8(v1, v5, v3);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  v9[2] = v1;
  v9[3] = v6;
  v9[4] = v2;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[14] = v10;
  void *v10 = v0;
  v10[1] = sub_252920194;
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[2];
  return MEMORY[0x270EE76C0](v13, v11, &unk_269C32FC0, v9, v12);
}

uint64_t sub_252920194()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void **)v1;
  v5[15] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2529203A4, 0, 0);
  }
  else
  {
    uint64_t v6 = v5[9];
    uint64_t v7 = v5[6];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5[7] + 8);
    v8(v5[8], v7);
    v8(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v5[1];
    return v9();
  }
}

uint64_t sub_2529203A4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
  v3(v0[8], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_252920460(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2529204F8, 0, 0);
}

uint64_t sub_2529204F8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FD0);
  uint64_t v3 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C327C8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_252953740;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + v3[14];
  void *v6 = 0x6D695F7475706E69;
  v6[1] = 0xEB00000000656761;
  uint64_t v8 = sub_252951A08();
  v0[6] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v0[7] = v9;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[8] = v10;
  v0[9] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v10(v7, v1, v8);
  unint64_t v11 = sub_2528EF7D4(v5);
  v0[10] = v11;
  uint64_t v12 = *(void **)(*(void *)(v2 + *(int *)(type metadata accessor for BodyPose2DEstimator() + 28)) + 16);
  v0[11] = v12;
  v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[12] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_2529206F4;
  return MEMORY[0x270EE7940](v11);
}

uint64_t sub_2529206F4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_252920954;
  }
  else
  {
    uint64_t v5 = (void *)v3[11];
    swift_bridgeObjectRelease();

    unint64_t v4 = sub_252920814;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_252920814()
{
  if (*(void *)(*(void *)(v0 + 104) + 16)
    && (unint64_t v1 = sub_252922FE8(0x7370616D74616568, 0xE800000000000000), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0 + 64))(*(void *)(v0 + 40), *(void *)(*(void *)(v0 + 104) + 56) + *(void *)(*(void *)(v0 + 56) + 72) * v1, *(void *)(v0 + 48));
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 16), *(void *)(v0 + 40), *(void *)(v0 + 48));
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  return result;
}

uint64_t sub_252920954()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_2529209CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v26 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v12 = result[6];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 4uLL)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = result[7];
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  swift_bridgeObjectRelease();
  sub_252951668();
  uint64_t v14 = sub_252951908();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v30 = v3 + 8;
  uint64_t result = (void *)v15(v10, v2);
  uint64_t v16 = v3;
  uint64_t v17 = *(void *)(v14 + 16);
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v27 = (void (*)(char *, uint64_t))v15;
  uint64_t v28 = v6;
  uint64_t v29 = a1;
  uint64_t v18 = *(uint64_t (**)(void))(v16 + 16);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v31 = v10;
  uint64_t result = (void *)v18();
  if (v17 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v20 = v2;
  ((void (*)(char *, unint64_t, uint64_t))v18)(v34, v14 + v19 + *(void *)(v16 + 72), v2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t result = (void *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_252953B00;
  if (__OFSUB__(v33, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v21 = result;
  *(float *)&uint64_t v35 = (float)(v33 - 1);
  uint64_t v22 = v31;
  uint64_t result = (void *)sub_252951728();
  if (!__OFSUB__(v32, 1))
  {
    *(float *)&uint64_t v35 = (float)(v32 - 1);
    uint64_t v23 = v34;
    sub_252951728();
    uint64_t v35 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    uint64_t v24 = v28;
    sub_2529516D8();
    sub_252951668();
    uint64_t v25 = v27;
    v27(v24, v20);
    v25(v23, v20);
    return (void *)((uint64_t (*)(char *, uint64_t))v25)(v22, v20);
  }
LABEL_13:
  __break(1u);
  return result;
}

void *sub_252920D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_252951A08();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int v58 = (char *)&v45 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)&v45 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v59 = (char *)&v45 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v45 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v45 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v45 - v18, a1, v4);
  uint64_t v20 = sub_252951898();
  unint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = v19;
  uint64_t v51 = v4;
  uint64_t v52 = v5 + 8;
  uint64_t v50 = v21;
  uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v21)(v19, v4);
  if (v20 != 4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (!result[2])
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v24 = result[4];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v56 = v8;
  uint64_t v57 = v17;
  uint64_t v25 = result[5];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] >= 4uLL)
  {
    uint64_t v47 = result[7];
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
    uint64_t v55 = v5;
    uint64_t v26 = swift_allocObject();
    uint64_t v49 = a2;
    long long v54 = xmmword_252953970;
    *(_OWORD *)(v26 + 16) = xmmword_252953970;
    *(void *)(v26 + 32) = v24;
    *(void *)(v26 + 40) = v25;
    *(void *)(v26 + 48) = -1;
    sub_2529519A8();
    swift_bridgeObjectRelease();
    uint64_t v27 = v25;
    uint64_t v46 = v25;
    uint64_t v28 = v24;
    uint64_t v29 = v59;
    uint64_t v48 = v22;
    sub_252951848();
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v54;
    *(void *)(v30 + 32) = v28;
    *(void *)(v30 + 40) = v27;
    *(void *)(v30 + 48) = 1;
    sub_2529519A8();
    swift_bridgeObjectRelease();
    uint64_t v31 = v29;
    uint64_t v32 = v51;
    uint64_t v33 = v50;
    v50(v31, v51);
    uint64_t v34 = v58;
    sub_252951928();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v54;
    uint64_t v36 = v46;
    *(void *)(v35 + 32) = v28;
    *(void *)(v35 + 40) = v36;
    *(void *)(v35 + 48) = 1;
    uint64_t v37 = v53;
    sub_2529519A8();
    swift_bridgeObjectRelease();
    v33(v34, v32);
    sub_252951878();
    v33(v37, v32);
    float v38 = (float)v47;
    *(float *)&uint64_t v60 = (float)v47;
    sub_252951788();
    *(float *)&uint64_t v60 = v38;
    uint64_t v39 = v56;
    sub_252951728();
    sub_2529518A8();
    v33(v39, v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_252953B00;
    sub_252951878();
    uint64_t v41 = v58;
    sub_252951878();
    uint64_t v60 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_2529516D8();
    v33(v41, v32);
    v33(v37, v32);
    v33(v59, v32);
    v33(v48, v32);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FA0);
    uint64_t v43 = v49 + *(int *)(v42 + 48);
    uint64_t v44 = *(void (**)(void))(v55 + 32);
    v44();
    return (void *)((uint64_t (*)(uint64_t, char *, uint64_t))v44)(v43, v57, v32);
  }
LABEL_9:
  __break(1u);
  return result;
}

void *sub_2529212DC@<X0>(uint64_t a1@<X8>)
{
  return sub_252920D30(*(void *)(v1 + 16), a1);
}

void *sub_2529212F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2529209CC(a1);
}

uint64_t sub_252921314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = sub_252951678();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = sub_252951A08();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252921570, 0, 0);
}

void *sub_252921570()
{
  uint64_t result = (void *)sub_2529518F8();
  if (!result[2])
  {
    __break(1u);
    goto LABEL_13;
  }
  v0[40] = result[4];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 2uLL)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v0[41] = result[5];
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 3uLL)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v2 = result[6];
  v0[42] = v2;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = (void *)sub_2529518F8();
  if (result[2] < 4uLL)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v3 = result[7];
  v0[43] = v3;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  type metadata accessor for BodyPose2DEstimator();
  v0[44] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_252953970;
  *(void *)(v4 + 32) = -1;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[45] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_252921744;
  uint64_t v7 = v0[33];
  uint64_t v6 = v0[34];
  return (void *)sub_2528B0D30(v6, v7);
}

uint64_t sub_252921744()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 264);
  uint64_t v4 = *(void *)(*(void *)v1 + 96);
  uint64_t v5 = *(void *)(*(void *)v1 + 88);
  v2[46] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[47] = v6;
  v2[48] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_252922A8C;
  }
  else {
    uint64_t v7 = sub_2529218C8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_2529218C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[47];
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[42];
  long long v52 = *((_OWORD *)v1 + 20);
  uint64_t v60 = v1[38];
  uint64_t v5 = v1[36];
  uint64_t v54 = v1[37];
  uint64_t v6 = v1[34];
  uint64_t v7 = v1[35];
  uint64_t v64 = v1[30];
  uint64_t v68 = v1[28];
  uint64_t v8 = v1[11];
  uint64_t v9 = v1[9];
  uint64_t v56 = v1[8];
  uint64_t v58 = v1[10];
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_252953B10;
  *(_OWORD *)(v10 + 32) = v52;
  *(void *)(v10 + 48) = v4;
  *(void *)(v10 + 56) = v3;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  v2(v6, v8);
  sub_252951968();
  v2(v7, v8);
  sub_252951828();
  v2(v5, v8);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v58, *MEMORY[0x263F00BF8], v56);
  sub_252951958();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v58, v56);
  v2(v54, v8);
  sub_2529519C8();
  uint64_t v11 = v8;
  v2(v60, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v12 + 16) = xmmword_252953740;
  uint64_t v14 = MEMORY[0x263F00C68];
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 32) = 0;
  sub_252951A48();
  swift_bridgeObjectRelease();
  *((_DWORD *)v1 + 103) = 1;
  sub_252951778();
  v2(v64, v11);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_252953740;
  *(void *)(v15 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v15 + 64) = v14;
  *(void *)(v15 + 32) = 1;
  sub_252951A48();
  swift_bridgeObjectRelease();
  *((_DWORD *)v1 + 109) = 1;
  sub_252951778();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v2)(v68, v11);
  int v17 = v3 + 2;
  if (__OFADD__(v3, 2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v18 = (void (*)(uint64_t, uint64_t))v1[47];
  int v19 = *((_DWORD *)v1 + 84);
  uint64_t v20 = v1[31];
  uint64_t v22 = v1[29];
  uint64_t v21 = v1[30];
  uint64_t v23 = v1[11];
  *((_DWORD *)v1 + 98) = v17;
  sub_252951748();
  v18(v22, v23);
  sub_252951768();
  v18(v21, v23);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v18)(v20, v23);
  if (__OFADD__(v19, 2))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v24 = v17 * (uint64_t)(v19 + 2);
  if (v24 != (int)v24)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v25 = v1[40];
  uint64_t v26 = v1[41];
  *((_DWORD *)v1 + 99) = v24;
  if ((unsigned __int128)(v25 * (__int128)v26) >> 64 != (v25 * v26) >> 63)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v27 = (void (*)(uint64_t, uint64_t))v1[47];
  int v47 = *((_DWORD *)v1 + 86);
  uint64_t v69 = v1[39];
  uint64_t v28 = v1[32];
  uint64_t v29 = v1[30];
  uint64_t v30 = v1[29];
  uint64_t v72 = v1[27];
  uint64_t v65 = v1[26];
  uint64_t v70 = v1[28];
  uint64_t v71 = v1[25];
  uint64_t v50 = v1[24];
  uint64_t v51 = v1[31];
  uint64_t v63 = v1[23];
  uint64_t v53 = v1[22];
  uint64_t v66 = v1[21];
  uint64_t v49 = v1[20];
  uint64_t v67 = v1[19];
  uint64_t v59 = v1[17];
  uint64_t v61 = v1[18];
  uint64_t v55 = v1[15];
  uint64_t v57 = v1[16];
  uint64_t v43 = v1[13];
  uint64_t v44 = v1[14];
  uint64_t v31 = v1[11];
  uint64_t v62 = v1[12];
  uint64_t v46 = v25;
  sub_252922C64(0, v25 * v26);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_252953B00;
  *(void *)(v32 + 32) = -1;
  *(void *)(v32 + 40) = v26;
  uint64_t v45 = v26;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  v27(v30, v31);
  sub_252951758();
  v27(v29, v31);
  sub_2529517D8();
  v27(v51, v31);
  sub_2529519C8();
  sub_252951878();
  v27(v29, v31);
  v27(v28, v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v28, v51, v31);
  sub_2529519D8();
  sub_2529519A8();
  uint64_t v48 = v29;
  v27(v29, v31);
  sub_2529516F8();
  sub_252951768();
  v27(v72, v31);
  sub_2529519D8();
  v27(v70, v31);
  sub_2529519A8();
  v27(v30, v31);
  *((_DWORD *)v1 + 100) = v47;
  sub_252951778();
  sub_2529516F8();
  sub_252951768();
  v27(v71, v31);
  v27(v65, v31);
  sub_2529519D8();
  v27(v72, v31);
  sub_2529519A8();
  v27(v70, v31);
  *((_DWORD *)v1 + 101) = v47;
  sub_252951778();
  sub_2529516F8();
  sub_252951768();
  v27(v50, v31);
  v27(v71, v31);
  sub_2529519D8();
  v27(v65, v31);
  sub_2529519A8();
  v27(v72, v31);
  *((_DWORD *)v1 + 102) = v47;
  sub_2529517A8();
  sub_2529516F8();
  sub_252951798();
  v27(v63, v31);
  v27(v50, v31);
  sub_2529519D8();
  v27(v71, v31);
  sub_2529519A8();
  v27(v65, v31);
  sub_2529516F8();
  sub_252951798();
  v27(v63, v31);
  sub_2529519D8();
  v27(v50, v31);
  sub_2529519A8();
  v27(v71, v31);
  sub_2529516F8();
  sub_252951798();
  v27(v66, v31);
  *((_DWORD *)v1 + 110) = v47;
  sub_2529517A8();
  v27(v53, v31);
  sub_2529519D8();
  v27(v63, v31);
  sub_2529519A8();
  v27(v50, v31);
  *((_DWORD *)v1 + 104) = 1056964608;
  sub_252951798();
  sub_252951758();
  v27(v63, v31);
  *((_DWORD *)v1 + 105) = 1056964608;
  sub_252951798();
  sub_252951758();
  v27(v53, v31);
  *((_DWORD *)v1 + 106) = 0x40000000;
  sub_252951758();
  sub_252951798();
  v27(v49, v31);
  sub_252951768();
  v27(v66, v31);
  *((_DWORD *)v1 + 107) = 0x40000000;
  sub_252951758();
  sub_252951798();
  v27(v67, v31);
  sub_252951768();
  v27(v49, v31);
  *((_DWORD *)v1 + 108) = 1056964608;
  sub_252951798();
  sub_252951798();
  v27(v43, v31);
  sub_252951768();
  v27(v44, v31);
  sub_252951768();
  v27(v55, v31);
  sub_252951798();
  v27(v57, v31);
  sub_252951798();
  v27(v59, v31);
  sub_252951768();
  v27(v61, v31);
  sub_252951758();
  v27(v67, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C98);
  uint64_t v41 = *(void *)(v62 + 72);
  unint64_t v42 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_252953B10;
  uint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 16);
  v34(v33 + v42, v53, v31);
  v34(v33 + v42 + v41, v49, v31);
  v34(v33 + v42 + 2 * v41, v49, v31);
  v34(v33 + v42 + 3 * v41, v66, v31);
  v1[3] = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
  sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
  sub_2529516D8();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_252953B10;
  *(void *)(v35 + 32) = v46;
  *(void *)(v35 + 40) = v45;
  int64x2_t v40 = vdupq_n_s64(2uLL);
  *(int64x2_t *)(v35 + 48) = v40;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  v27(v55, v31);
  sub_2529519A8();
  v27(v57, v31);
  sub_252918638(v61);
  v27(v59, v31);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_252953B10;
  *(void *)(v36 + 32) = v46;
  *(void *)(v36 + 40) = v45;
  *(int64x2_t *)(v36 + 48) = v40;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  v27(v61, v31);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_252953B00;
  v34(v37 + v42, v50, v31);
  v34(v37 + v42 + v41, v63, v31);
  v1[2] = v37;
  sub_2529516D8();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_252953B10;
  *(void *)(v38 + 32) = v46;
  *(void *)(v38 + 40) = v45;
  *(_OWORD *)(v38 + 48) = xmmword_252957BA0;
  sub_2529519A8();
  swift_bridgeObjectRelease();
  v27(v55, v31);
  sub_252951948();
  v27(v57, v31);
  sub_252951708();
  v27(v59, v31);
  sub_252951798();
  v27(v61, v31);
  v27(v67, v31);
  v27(v49, v31);
  v27(v66, v31);
  v27(v53, v31);
  v27(v63, v31);
  v27(v50, v31);
  v27(v71, v31);
  v27(v65, v31);
  v27(v72, v31);
  v27(v70, v31);
  v27(v30, v31);
  v27(v48, v31);
  v27(v51, v31);
  v27(v28, v31);
  v27(v69, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void))v1[1];
  return v39();
}

uint64_t sub_252922A8C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252922C64(int64_t *a1, int64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_252953B00;
  *(void *)(result + 32) = 1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(result + 40) = a2 - (void)a1;
  if (a2 < (uint64_t)a1)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v5 = sub_2528A9600(a1, a2);
  int64_t v6 = v5[2];
  if (v6)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_252922EC8(0, v6, 0);
    uint64_t v7 = 0;
    unint64_t v8 = *(void *)(v11 + 16);
    do
    {
      uint64_t v9 = v5[v7 + 4];
      unint64_t v10 = *(void *)(v11 + 24);
      if (v8 >= v10 >> 1) {
        sub_252922EC8(v10 > 1, v8 + 1, 1);
      }
      ++v7;
      *(void *)(v11 + 16) = v8 + 1;
      *(float *)(v11 + 4 * v8++ + 32) = (float)v9;
    }
    while (v6 != v7);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
  sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
  return sub_2529518D8();
}

uint64_t sub_252922E14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_2528A91AC;
  return sub_252921314(a1, v4, v5, v6);
}

uint64_t sub_252922EC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AA3D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922EE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AA6B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922F08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AA80C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_252922F28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AA82C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AA9AC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922F68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AAB28(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_252922F88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AAD90(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922FA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AAEFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_252922FC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2528AB05C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

unint64_t sub_252922FE8(uint64_t a1, uint64_t a2)
{
  sub_252952198();
  sub_252951AF8();
  uint64_t v4 = sub_2529521C8();

  return sub_2529230E8(a1, a2, v4);
}

unint64_t sub_252923060(uint64_t a1)
{
  uint64_t v2 = sub_252952188();

  return sub_2529231CC(a1, v2);
}

unint64_t sub_2529230A4(uint64_t a1)
{
  uint64_t v2 = sub_252951E18();

  return sub_252923268(a1, v2);
}

unint64_t sub_2529230E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_252952108() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_252952108() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2529231CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_252923268(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_2528F5B2C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2533C0810](v9, a1);
      sub_252923330((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_252923330(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for BodyPose2DEstimator.Model()
{
  return &type metadata for BodyPose2DEstimator.Model;
}

unint64_t TensorError.errorDescription.getter()
{
  return TensorError.debugDescription.getter();
}

unint64_t TensorError.debugDescription.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  switch(*((unsigned char *)v0 + 32))
  {
    case 2:
    case 3:
      unint64_t v7 = 0;
      sub_252951E48();
      sub_252951B08();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      sub_252951E48();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD00000000000002DLL;
      goto LABEL_6;
    case 5:
      sub_252951E48();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD00000000000002CLL;
      goto LABEL_6;
    case 6:
      if (!(v4 | v1 | v2 | v3)) {
        return 0xD000000000000033;
      }
      uint64_t v6 = v4 | v1 | v3;
      if (v2 == 1 && !v6) {
        return 0xD000000000000021;
      }
      if (v2 == 2 && v6 == 0) {
        return 0xD00000000000002BLL;
      }
      return 0xD00000000000002DLL;
    default:
      unint64_t v7 = 0;
      sub_252951E48();
      sub_252951B08();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
LABEL_6:
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
LABEL_7:
      sub_252951B08();
      return v7;
  }
}

unint64_t sub_2529238FC()
{
  return TensorError.debugDescription.getter();
}

uint64_t _s5Human11TensorErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  int v10 = *((unsigned __int8 *)a2 + 32);
  switch(*((unsigned char *)a1 + 32))
  {
    case 1:
      if (v10 != 1) {
        return 0;
      }
      return v2 == v6 && v3 == v7 && v4 == v9 && v5 == v8;
    case 2:
      if (v10 != 2) {
        return 0;
      }
      return v2 == v6 && v3 == v7;
    case 3:
      if (v10 != 3) {
        return 0;
      }
      return v2 == v6 && v3 == v7;
    case 4:
      if (v10 != 4) {
        return 0;
      }
      return v2 == v6;
    case 5:
      if (v10 != 5) {
        return 0;
      }
      return v2 == v6;
    case 6:
      uint64_t v16 = v4 | v3;
      if (v16 | v2 | v5)
      {
        uint64_t v17 = v16 | v5;
        if (v2 == 1 && v17 == 0)
        {
          uint64_t v22 = v9 | v7 | v8;
          if (v10 == 6 && v6 == 1 && v22 == 0) {
            return 1;
          }
        }
        else if (v2 == 2 && v17 == 0)
        {
          if (v10 == 6 && v6 == 2 && !(v9 | v7 | v8)) {
            return 1;
          }
        }
        else if (v10 == 6 && v6 == 3 && !(v9 | v7 | v8))
        {
          return 1;
        }
      }
      else
      {
        uint64_t v20 = v9 | v7 | v6 | v8;
        if (v10 == 6 && v20 == 0) {
          return 1;
        }
      }
      return 0;
    default:
      if (*((unsigned char *)a2 + 32)) {
        return 0;
      }
      return v2 == v6 && v3 == v7 && v4 == v9 && v5 == v8;
  }
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TensorError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252923B64(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 5u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_252923B7C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)__n128 result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TensorError()
{
  return &type metadata for TensorError;
}

BOOL static Skeleton.Topology.Topology2D.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Skeleton.Topology.Topology2D.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t sub_252923BE8(char a1)
{
  return *(void *)&aNone_5[8 * a1];
}

uint64_t sub_252923C08(uint64_t a1)
{
  unint64_t v2 = sub_252924378();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252923C44(uint64_t a1)
{
  unint64_t v2 = sub_252924378();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252923C80(uint64_t a1)
{
  unint64_t v2 = sub_252924420();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252923CBC(uint64_t a1)
{
  unint64_t v2 = sub_252924420();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252923CF8()
{
  return sub_252923BE8(*v0);
}

uint64_t sub_252923D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252925D90(a1, a2);
  *a3 = result;
  return result;
}

void sub_252923D28(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_252923D34(uint64_t a1)
{
  unint64_t v2 = sub_252924324();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252923D70(uint64_t a1)
{
  unint64_t v2 = sub_252924324();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252923DAC(uint64_t a1)
{
  unint64_t v2 = sub_252924474();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252923DE8(uint64_t a1)
{
  unint64_t v2 = sub_252924474();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252923E24(uint64_t a1)
{
  unint64_t v2 = sub_2529243CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252923E60(uint64_t a1)
{
  unint64_t v2 = sub_2529243CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Topology.Topology2D.hashValue.getter()
{
  return sub_2529521C8();
}

uint64_t Skeleton.Topology.Topology2D.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FE0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FE8);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FF0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32FF8);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33000);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252924324();
  sub_252952208();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_252924420();
      uint64_t v17 = v23;
      sub_252952038();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_2529243CC();
      uint64_t v17 = v26;
      sub_252952038();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_252924378();
      uint64_t v17 = v29;
      sub_252952038();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_252924474();
      sub_252952038();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_252924324()
{
  unint64_t result = qword_269C33008;
  if (!qword_269C33008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33008);
  }
  return result;
}

unint64_t sub_252924378()
{
  unint64_t result = qword_269C33010;
  if (!qword_269C33010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33010);
  }
  return result;
}

unint64_t sub_2529243CC()
{
  unint64_t result = qword_269C33018;
  if (!qword_269C33018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33018);
  }
  return result;
}

unint64_t sub_252924420()
{
  unint64_t result = qword_269C33020;
  if (!qword_269C33020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33020);
  }
  return result;
}

unint64_t sub_252924474()
{
  unint64_t result = qword_269C33028;
  if (!qword_269C33028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33028);
  }
  return result;
}

uint64_t Skeleton.Topology.Topology2D.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33030);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33038);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33040);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33048);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33050);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_252924324();
  uint64_t v19 = v52;
  sub_2529521E8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  int64x2_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_252952028();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_252951E98();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C320A8);
    *uint64_t v29 = &type metadata for Skeleton.Topology.Topology2D;
    sub_252951FB8();
    sub_252951E88();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_252924420();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_252951FA8();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_2529243CC();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_252951FA8();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_252924378();
      uint64_t v37 = v52;
      sub_252951FA8();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_252924474();
      uint64_t v26 = v52;
      sub_252951FA8();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

unint64_t sub_252924B00()
{
  unint64_t result = qword_269C33058;
  if (!qword_269C33058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33058);
  }
  return result;
}

uint64_t sub_252924B54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Skeleton.Topology.Topology2D.init(from:)(a1, a2);
}

uint64_t sub_252924B6C(void *a1)
{
  return Skeleton.Topology.Topology2D.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Skeleton.Topology.Topology2D()
{
  return &type metadata for Skeleton.Topology.Topology2D;
}

uint64_t getEnumTagSinglePayload for ImageOrientation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10Topology2DOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252924CF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10Topology2DO10CodingKeysOMa()
{
  return &_s10Topology2DO10CodingKeysON;
}

ValueMetadata *_s10Topology2DO14NoneCodingKeysOMa()
{
  return &_s10Topology2DO14NoneCodingKeysON;
}

ValueMetadata *_s10Topology2DO16Coco17CodingKeysOMa()
{
  return &_s10Topology2DO16Coco17CodingKeysON;
}

ValueMetadata *_s10Topology2DO18Orchid2DCodingKeysOMa()
{
  return &_s10Topology2DO18Orchid2DCodingKeysON;
}

ValueMetadata *_s10Topology2DO16Body30CodingKeysOMa()
{
  return &_s10Topology2DO16Body30CodingKeysON;
}

unint64_t sub_252924D74()
{
  unint64_t result = qword_269C33060;
  if (!qword_269C33060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33060);
  }
  return result;
}

unint64_t sub_252924DCC()
{
  unint64_t result = qword_269C33068;
  if (!qword_269C33068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33068);
  }
  return result;
}

unint64_t sub_252924E24()
{
  unint64_t result = qword_269C33070;
  if (!qword_269C33070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33070);
  }
  return result;
}

unint64_t sub_252924E7C()
{
  unint64_t result = qword_269C33078;
  if (!qword_269C33078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33078);
  }
  return result;
}

unint64_t sub_252924ED4()
{
  unint64_t result = qword_269C33080;
  if (!qword_269C33080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33080);
  }
  return result;
}

unint64_t sub_252924F2C()
{
  unint64_t result = qword_269C33088;
  if (!qword_269C33088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33088);
  }
  return result;
}

unint64_t sub_252924F84()
{
  unint64_t result = qword_269C33090;
  if (!qword_269C33090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33090);
  }
  return result;
}

unint64_t sub_252924FDC()
{
  unint64_t result = qword_269C33098;
  if (!qword_269C33098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33098);
  }
  return result;
}

unint64_t sub_252925034()
{
  unint64_t result = qword_269C330A0;
  if (!qword_269C330A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C330A0);
  }
  return result;
}

unint64_t sub_25292508C()
{
  unint64_t result = qword_269C330A8;
  if (!qword_269C330A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C330A8);
  }
  return result;
}

unint64_t sub_2529250E4()
{
  unint64_t result = qword_269C330B0;
  if (!qword_269C330B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C330B0);
  }
  return result;
}

uint64_t sub_252925138()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2529545C0;
  if (qword_269C31838 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C33858;
  *(void *)(v0 + 32) = qword_269C33850;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_269C31810;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C33808;
  *(void *)(v0 + 48) = qword_269C33800;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_269C31840;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C33868;
  *(void *)(v0 + 64) = qword_269C33860;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_269C31830;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C33848;
  *(void *)(v0 + 80) = qword_269C33840;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = qword_269C31850;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C33888;
  *(void *)(v0 + 96) = qword_269C33880;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269C31728;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C33638;
  *(void *)(v0 + 112) = qword_269C33630;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_269C31858;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C33898;
  *(void *)(v0 + 128) = qword_269C33890;
  *(void *)(v0 + 136) = v13;
  uint64_t v14 = qword_269C31740;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C33668;
  *(void *)(v0 + 144) = qword_269C33660;
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = qword_269C31880;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C338E8;
  *(void *)(v0 + 160) = qword_269C338E0;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_269C31748;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C33678;
  *(void *)(v0 + 176) = qword_269C33670;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269C31878;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C338D8;
  *(void *)(v0 + 192) = qword_269C338D0;
  *(void *)(v0 + 200) = v21;
  uint64_t v22 = qword_269C31670;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C334C8;
  *(void *)(v0 + 208) = qword_269C334C0;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_269C31678;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C334D8;
  *(void *)(v0 + 224) = qword_269C334D0;
  *(void *)(v0 + 232) = v25;
  uint64_t v26 = qword_269C31690;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33508;
  *(void *)(v0 + 240) = qword_269C33500;
  *(void *)(v0 + 248) = v27;
  uint64_t v28 = qword_269C316C8;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C33578;
  *(void *)(v0 + 256) = qword_269C33570;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_269C316A0;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C33528;
  *(void *)(v0 + 272) = qword_269C33520;
  *(void *)(v0 + 280) = v31;
  uint64_t v32 = qword_269C316D0;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C33588;
  *(void *)(v0 + 288) = qword_269C33580;
  *(void *)(v0 + 296) = v33;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_252925604()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_252957CE0;
  if (qword_269C317D8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_269C33798;
  *(void *)(v0 + 32) = qword_269C33790;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = qword_269C31660;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_269C334A8;
  *(void *)(v0 + 48) = qword_269C334A0;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = qword_269C31720;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_269C33628;
  *(void *)(v0 + 64) = qword_269C33620;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_269C31708;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_269C335F8;
  *(void *)(v0 + 80) = qword_269C335F0;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = qword_269C31858;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)algn_269C33898;
  *(void *)(v0 + 96) = qword_269C33890;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269C31860;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_269C338A8;
  *(void *)(v0 + 112) = qword_269C338A0;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_269C31868;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_269C338B8;
  *(void *)(v0 + 128) = qword_269C338B0;
  *(void *)(v0 + 136) = v13;
  uint64_t v14 = qword_269C31870;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_269C338C8;
  *(void *)(v0 + 144) = qword_269C338C0;
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = qword_269C31728;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)algn_269C33638;
  *(void *)(v0 + 160) = qword_269C33630;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_269C31730;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_269C33648;
  *(void *)(v0 + 176) = qword_269C33640;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269C31738;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)algn_269C33658;
  *(void *)(v0 + 192) = qword_269C33650;
  *(void *)(v0 + 200) = v21;
  uint64_t v22 = qword_269C31750;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)algn_269C33688;
  *(void *)(v0 + 208) = qword_269C33680;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_269C316B8;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)algn_269C33558;
  *(void *)(v0 + 224) = qword_269C33550;
  *(void *)(v0 + 232) = v25;
  uint64_t v26 = qword_269C316C0;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_269C33568;
  *(void *)(v0 + 240) = qword_269C33560;
  *(void *)(v0 + 248) = v27;
  uint64_t v28 = qword_269C316D8;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)algn_269C33598;
  *(void *)(v0 + 256) = qword_269C33590;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_269C31680;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)algn_269C334E8;
  *(void *)(v0 + 272) = qword_269C334E0;
  *(void *)(v0 + 280) = v31;
  uint64_t v32 = qword_269C31688;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)algn_269C334F8;
  *(void *)(v0 + 288) = qword_269C334F0;
  *(void *)(v0 + 296) = v33;
  uint64_t v34 = qword_269C31698;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void *)algn_269C33518;
  *(void *)(v0 + 304) = qword_269C33510;
  *(void *)(v0 + 312) = v35;
  uint64_t v36 = qword_269C316E0;
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = *(void *)algn_269C335A8;
  *(void *)(v0 + 320) = qword_269C335A0;
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = qword_269C316A8;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)algn_269C33538;
  *(void *)(v0 + 336) = qword_269C33530;
  *(void *)(v0 + 344) = v39;
  *(void *)(v0 + 352) = 0xD000000000000012;
  *(void *)(v0 + 360) = 0x800000025295A9F0;
  *(void *)(v0 + 368) = 0xD000000000000012;
  *(void *)(v0 + 376) = 0x800000025295A930;
  *(void *)(v0 + 384) = 0xD000000000000013;
  *(void *)(v0 + 392) = 0x800000025295AB10;
  *(void *)(v0 + 400) = 0xD000000000000013;
  *(void *)(v0 + 408) = 0x800000025295AA30;
  uint64_t v40 = qword_269C31838;
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v41 = *(void *)algn_269C33858;
  *(void *)(v0 + 416) = qword_269C33850;
  *(void *)(v0 + 424) = v41;
  uint64_t v42 = qword_269C317F0;
  swift_bridgeObjectRetain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v43 = *(void *)algn_269C337C8;
  *(void *)(v0 + 432) = qword_269C337C0;
  *(void *)(v0 + 440) = v43;
  uint64_t v44 = qword_269C31810;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = *(void *)algn_269C33808;
  *(void *)(v0 + 448) = qword_269C33800;
  *(void *)(v0 + 456) = v45;
  uint64_t v46 = qword_269C31830;
  swift_bridgeObjectRetain();
  if (v46 != -1) {
    swift_once();
  }
  uint64_t v47 = *(void *)algn_269C33848;
  *(void *)(v0 + 464) = qword_269C33840;
  *(void *)(v0 + 472) = v47;
  uint64_t v48 = qword_269C31840;
  swift_bridgeObjectRetain();
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)algn_269C33868;
  *(void *)(v0 + 480) = qword_269C33860;
  *(void *)(v0 + 488) = v49;
  uint64_t v50 = qword_269C31850;
  swift_bridgeObjectRetain();
  if (v50 != -1) {
    swift_once();
  }
  uint64_t v51 = *(void *)algn_269C33888;
  *(void *)(v0 + 496) = qword_269C33880;
  *(void *)(v0 + 504) = v51;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_252925D90(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x37316F636F63 && a2 == 0xE600000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x443264696863726FLL && a2 == 0xE800000000000000 || (sub_252952108() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x303379646F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_252952108();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_252925F14()
{
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for SlidingWindow()
{
  return self;
}

uint64_t ImageDescriptor.tensor(for:)(uint64_t a1, uint64_t *a2)
{
  v3[2] = a1;
  v3[3] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  v3[4] = swift_task_alloc();
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  v3[7] = v5;
  v3[8] = v6;
  v3[9] = v7;
  return MEMORY[0x270FA2498](sub_252926030, 0, 0);
}

uint64_t sub_252926030()
{
  uint64_t v1 = v0[9];
  if ((v0[8] != 0xD00000000000001DLL || v1 != 0x800000025295A0B0) && (sub_252952108() & 1) == 0)
  {
    if (v0[8] == 0xD000000000000023 && v0[9] == 0x800000025295A0D0 || (sub_252952108() & 1) != 0)
    {
      BOOL v3 = v0 + 6;
      uint64_t v9 = v0[6];
      uint64_t v10 = v0[3];
      uint64_t v11 = *(int *)(type metadata accessor for ImageDescriptor() + 44);
    }
    else
    {
      if ((v0[8] != 0xD00000000000002ALL || v0[9] != 0x800000025295A100) && (sub_252952108() & 1) == 0)
      {
        if ((v0[8] != 0xD000000000000017 || v0[9] != 0x800000025295A130) && (sub_252952108() & 1) == 0)
        {
          uint64_t v18 = v0[8];
          sub_2528E5158();
          swift_allocError();
          *uint64_t v19 = v18;
          v19[1] = v1;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        }
        uint64_t v15 = *(void *)(v0[3] + 24);
        if (v15 && *(void *)(v15 + 16))
        {
          BOOL v3 = v0 + 4;
          uint64_t v16 = v0[4];
          sub_252926F24(v15, v16);
          uint64_t v6 = sub_252951A08();
          uint64_t v7 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) != 1) {
            goto LABEL_26;
          }
          sub_2528AE5CC(*v3);
        }
        sub_2528E5158();
        swift_allocError();
        long long v13 = xmmword_252958270;
        goto LABEL_12;
      }
      BOOL v3 = v0 + 5;
      uint64_t v9 = v0[5];
      uint64_t v10 = v0[3];
      uint64_t v11 = *(int *)(type metadata accessor for ImageDescriptor() + 40);
    }
    sub_2528D68A4(v10 + v11, v9);
    uint64_t v6 = sub_252951A08();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6) != 1) {
      goto LABEL_26;
    }
    sub_2528AE5CC(*v3);
    sub_2528E5158();
    swift_allocError();
    long long v13 = xmmword_252958280;
LABEL_12:
    long long *v12 = v13;
    goto LABEL_13;
  }
  BOOL v3 = v0 + 7;
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[3];
  uint64_t v5 = type metadata accessor for ImageDescriptor();
  sub_2528D68A4(v4 + *(int *)(v5 + 36), v2);
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2, 1, v6) == 1)
  {
    sub_2528AE5CC(*v3);
    sub_2528E5158();
    swift_allocError();
    *uint64_t v8 = 0;
    v8[1] = 0;
LABEL_13:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    goto LABEL_27;
  }
LABEL_26:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0[2], *v3, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
LABEL_27:
  return v14();
}

uint64_t ImageDescriptor.init(imageBuffer:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, __int32 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v47.i64[0] = a6;
  v48.i32[0] = a5;
  uint64_t v45 = a4;
  uint64_t v58 = a2;
  uint64_t v10 = sub_252951A08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v38 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v41 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v43 = (char *)&v37 - v19;
  uint64_t v20 = *a1;
  char v21 = *a3;
  uint64_t v22 = (int *)type metadata accessor for ImageDescriptor();
  uint64_t v23 = v22[9];
  uint64_t v44 = v11;
  uint64_t v24 = *(void (**)(void))(v11 + 56);
  uint64_t v42 = a7 + v23;
  v24();
  uint64_t v40 = a7 + v22[10];
  v24();
  uint64_t v39 = a7 + v22[11];
  uint64_t v46 = v24;
  v24();
  uint64_t v25 = v22[12];
  *(void *)(a7 + v25) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  *(void *)(a7 + 24) = v47.i64[0];
  uint64_t v26 = v58;
  *(void *)a7 = v20;
  *(void *)(a7 + 8) = v26;
  *(unsigned char *)(a7 + 16) = v21;
  *(unsigned char *)(a7 + 17) = v48.i8[0];
  uint64_t v27 = v20;
  CVPixelBufferLockBaseAddress(v27, 0);
  if (CVPixelBufferGetPlaneCount(v27) == 2)
  {
    sub_2528FC670(v27, (uint64_t)v15);
    uint64_t v28 = v44;
  }
  else
  {
    uint64_t v29 = v38;
    uint64_t v30 = v49.i64[0];
    sub_2528FCFD4(v27, v38);
    if (v30)
    {

      return sub_2528AE3B8(a7);
    }
    uint64_t v28 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v15, v29, v10);
  }
  uint64_t v32 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v43, v15, v10);
  CVPixelBufferUnlockBaseAddress(v27, 0);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v10);
  uint64_t v33 = v46;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v46)(v32, 0, 1, v10);
  sub_2528FA264(v32, v42);
  sub_2528EB258(v45, (uint64_t)&v50);
  if (v53)
  {
    v57[0] = xmmword_252957AA0;
    v57[1] = xmmword_252957AB0;
    v57[2] = xmmword_252957AC0;
    uint64_t v34 = (uint64_t)v41;
    MLTensor.init(matrix3x3:)((uint64_t)v57);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v33)(v34, 0, 1, v10);
    sub_2528FA264(v34, v39);
    simd_float3x3 v59 = __invert_f3(*(simd_float3x3 *)_PromotedConst_1);
    simd_float3 v56 = v59.columns[0];
    uint64_t v35 = &v56;
  }
  else
  {
    simd_float3 v47 = v50;
    v54[0] = v50;
    v54[1] = v51;
    simd_float3 v48 = v52;
    simd_float3 v49 = v51;
    v54[2] = v52;
    uint64_t v34 = (uint64_t)v41;
    MLTensor.init(matrix3x3:)((uint64_t)v54);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v33)(v34, 0, 1, v10);
    sub_2528FA264(v34, v39);
    v60.columns[0] = v47;
    v60.columns[2] = v48;
    v60.columns[1] = v49;
    simd_float3x3 v59 = __invert_f3(v60);
    simd_float3 v55 = v59.columns[0];
    uint64_t v35 = &v55;
  }
  uint64_t v36 = v40;
  v35[1] = v59.columns[1];
  v35[2] = v59.columns[2];
  MLTensor.init(matrix3x3:)((uint64_t)v35);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v33)(v34, 0, 1, v10);
  return sub_2528FA264(v34, v36);
}

void ImageDescriptor.init(image:timestamp:imageOrientation:cameraIntrinsics:isMirrored:detectedBoundingBoxes:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v46.i64[0] = a6;
  int v45 = a5;
  uint64_t v41 = a4;
  uint64_t v44 = a2;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v10 = sub_252951A08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v47.i64[0] = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = (uint64_t)&v36 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v37 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (char *)&v36 - v18;
  int v43 = *a3;
  uint64_t v19 = (int *)type metadata accessor for ImageDescriptor();
  uint64_t v20 = *(void (**)(void))(v11 + 56);
  uint64_t v38 = a7 + v19[9];
  v20();
  uint64_t v42 = a7 + v19[10];
  v20();
  uint64_t v36 = a7 + v19[11];
  v20();
  uint64_t v21 = v19[12];
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  *(void *)(a7 + v21) = v22;
  CVPixelBufferRef pixelBufferOut = 0;
  id v49 = a1;
  objc_msgSend(a1, sel_extent);
  double Width = CGRectGetWidth(v62);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v49, sel_extent);
  double Height = CGRectGetHeight(v63);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_22;
  }
  CVPixelBufferCreate(0, (uint64_t)Width, (uint64_t)Height, 0x42475241u, 0, &pixelBufferOut);
  if (pixelBufferOut)
  {
    uint64_t v25 = pixelBufferOut;
    objc_msgSend(v22, sel_render_toCVPixelBuffer_, v49, v25);
    *(void *)(a7 + 24) = v46.i64[0];
    uint64_t v26 = v44;
    *(void *)a7 = v25;
    *(void *)(a7 + 8) = v26;
    *(unsigned char *)(a7 + 16) = v43;
    *(unsigned char *)(a7 + 17) = v45 & 1;
    uint64_t v27 = v25;
    CVPixelBufferLockBaseAddress(v27, 0);
    size_t PlaneCount = CVPixelBufferGetPlaneCount(v27);
    uint64_t v29 = v47.i64[0];
    if (PlaneCount == 2)
    {
      uint64_t v30 = v40;
      sub_2528FC670(v27, v40);
    }
    else
    {
      uint64_t v31 = v48.i64[0];
      sub_2528FCFD4(v27, v47.i64[0]);
      if (v31)
      {

        sub_2528AE3B8(a7);
        return;
      }
      uint64_t v32 = v29;
      uint64_t v30 = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v40, v32, v10);
    }
    uint64_t v33 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v39, v30, v10);
    CVPixelBufferUnlockBaseAddress(v27, 0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v10);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v20)(v33, 0, 1, v10);
    sub_2528FA264(v33, v38);
    sub_2528EB258(v41, (uint64_t)&v55);
    if (v58)
    {
      v53[0] = xmmword_252957AA0;
      v53[1] = xmmword_252957AB0;
      v53[2] = xmmword_252957AC0;
      uint64_t v34 = (uint64_t)v37;
      MLTensor.init(matrix3x3:)((uint64_t)v53);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v20)(v34, 0, 1, v10);
      sub_2528FA264(v34, v36);
      simd_float3x3 v60 = __invert_f3(*(simd_float3x3 *)_PromotedConst_1);
      simd_float3 v52 = v60.columns[0];
      uint64_t v35 = &v52;
    }
    else
    {
      simd_float3 v46 = v55;
      v50[0] = v55;
      v50[1] = v56;
      simd_float3 v47 = v57;
      simd_float3 v48 = v56;
      v50[2] = v57;
      uint64_t v34 = (uint64_t)v37;
      MLTensor.init(matrix3x3:)((uint64_t)v50);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v20)(v34, 0, 1, v10);
      sub_2528FA264(v34, v36);
      v61.columns[0] = v46;
      v61.columns[2] = v47;
      v61.columns[1] = v48;
      simd_float3x3 v60 = __invert_f3(v61);
      simd_float3 v51 = v60.columns[0];
      uint64_t v35 = &v51;
    }
    v35[1] = v60.columns[1];
    v35[2] = v60.columns[2];
    MLTensor.init(matrix3x3:)((uint64_t)v35);

    ((void (*)(uint64_t, void, uint64_t, uint64_t))v20)(v34, 0, 1, v10);
    sub_2528FA264(v34, v42);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_252951F28();
    __break(1u);
  }
}

uint64_t sub_252926F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_252951A08();
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v26 = v5;
    uint64_t v27 = a1;
    swift_bridgeObjectRetain();
    sub_2529286B8(&v27);
    uint64_t v8 = v27;
    uint64_t v9 = *(void *)(v27 + 16);
    if (v9)
    {
      uint64_t v23 = a2;
      uint64_t v25 = v26 + 32;
      unint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v11 = 40;
      long long v24 = xmmword_252953B10;
      uint64_t v12 = v4;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C60);
        uint64_t v13 = swift_allocObject();
        long long v14 = *(_OWORD *)(v8 + v11);
        *(_OWORD *)(v13 + 16) = v24;
        *(_OWORD *)(v13 + 32) = v14;
        uint64_t v27 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C30);
        sub_2528CA548((unint64_t *)&qword_269C31C58, &qword_269C31C30);
        sub_252951A18();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_2528C4584(0, *(void *)(v10 + 16) + 1, 1, v10);
        }
        unint64_t v16 = *(void *)(v10 + 16);
        unint64_t v15 = *(void *)(v10 + 24);
        uint64_t v17 = v26;
        if (v16 >= v15 >> 1)
        {
          uint64_t v19 = sub_2528C4584(v15 > 1, v16 + 1, 1, v10);
          uint64_t v17 = v26;
          unint64_t v10 = v19;
        }
        *(void *)(v10 + 16) = v16 + 1;
        unint64_t v18 = v10
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
            + *(void *)(v17 + 72) * v16;
        uint64_t v4 = v12;
        (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v18, v7, v12);
        v11 += 40;
        --v9;
      }
      while (v9);
      swift_release();
      a2 = v23;
    }
    else
    {
      swift_release();
      unint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v27 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528CA548((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_252951A28();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(a2, 0, 1, v4);
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(a2, 1, 1, v4);
  }
}

uint64_t type metadata accessor for ImageDescriptor()
{
  uint64_t result = qword_269C330C8;
  if (!qword_269C330C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252927298(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return ImageDescriptor.tensor(for:)(a1, a2);
}

id ImageDescriptor.ImageBuffer.pixelBuffer.getter()
{
  return *v0;
}

char *initializeBufferWithCopyOfBuffer for ImageDescriptor(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
    *((void *)a1 + 3) = a2[3];
    uint64_t v8 = a3[9];
    __dst = &a1[v8];
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_252951A08();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    long long v14 = v12;
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
      memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v16 = a3[10];
    uint64_t v17 = &v7[v16];
    unint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v10))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    }
    uint64_t v20 = a3[11];
    uint64_t v21 = &v7[v20];
    uint64_t v22 = (char *)a2 + v20;
    if (v14((char *)a2 + v20, 1, v10))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
    }
    uint64_t v24 = a3[12];
    uint64_t v25 = *(char **)((char *)a2 + v24);
    *(void *)&v7[v24] = v25;
    id v26 = v25;
  }
  return v7;
}

void destroy for ImageDescriptor(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[9];
  uint64_t v5 = sub_252951A08();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (char *)a1 + a2[10];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (char *)a1 + a2[11];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = *(id *)((char *)a1 + a2[12]);
}

uint64_t initializeWithCopy for ImageDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_252951A08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v16, v17, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v12((const void *)(a2 + v19), 1, v10))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v20, v21, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  uint64_t v23 = a3[12];
  uint64_t v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  id v25 = v24;
  return a1;
}

uint64_t assignWithCopy for ImageDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_252951A08();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v19, v20, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[11];
  id v25 = (void *)(a1 + v24);
  id v26 = (void *)(a2 + v24);
  int v27 = v14((void *)(a1 + v24), 1, v12);
  int v28 = v14(v26, 1, v12);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v25, v26, v12);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v25, v12);
    goto LABEL_18;
  }
  if (v28)
  {
LABEL_18:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v25, v26, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
LABEL_19:
  uint64_t v30 = a3[12];
  uint64_t v31 = *(void **)(a2 + v30);
  uint64_t v32 = *(void **)(a1 + v30);
  *(void *)(a1 + v30) = v31;
  id v33 = v31;

  return a1;
}

uint64_t initializeWithTake for ImageDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_252951A08();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v11((const void *)(a2 + v17), 1, v9))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for ImageDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[9];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_252951A08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v12((void *)(a1 + v22), 1, v10);
  int v26 = v12(v24, 1, v10);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v23, v24, v10);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v23, v24, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
LABEL_19:
  uint64_t v28 = a3[12];
  uint64_t v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImageDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252928468);
}

uint64_t sub_252928468(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ImageDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252928530);
}

void *sub_252928530(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    void *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D20);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2529285DC()
{
  sub_25290062C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ImageDescriptor.ImageBuffer()
{
  return &type metadata for ImageDescriptor.ImageBuffer;
}

uint64_t sub_2529286B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2528AB1D0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_252928724(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_252928724(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2529520B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = 0;
      uint64_t v94 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v96 = *(void *)(v94 + 40 * i);
        uint64_t v97 = v93;
        do
        {
          uint64_t v98 = v94 + v97;
          if (v96 >= *(void *)(v94 + v97)) {
            break;
          }
          if (!v94) {
            goto LABEL_140;
          }
          uint64_t v99 = v94 + v97;
          long long v101 = *(_OWORD *)(v94 + v97 + 48);
          long long v100 = *(_OWORD *)(v94 + v97 + 64);
          long long v102 = *(_OWORD *)(v98 + 16);
          *(_OWORD *)(v94 + v97 + 40) = *(_OWORD *)v98;
          *(_OWORD *)(v94 + v97 + 56) = v102;
          *(void *)(v94 + v97 + 72) = *(void *)(v98 + 32);
          *(void *)uint64_t v99 = v96;
          *(_OWORD *)(v99 + 8) = v101;
          *(_OWORD *)(v99 + 24) = v100;
          v97 -= 40;
        }
        while (v97 != -40);
        v93 += 40;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v112 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      long long v103 = v12;
      uint64_t v114 = v9;
      if (v13 >= 2)
      {
        uint64_t v104 = *v112;
        do
        {
          unint64_t v105 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v104) {
            goto LABEL_144;
          }
          uint64_t v106 = v103;
          uint64_t v107 = *(void *)&v103[16 * v105 + 32];
          uint64_t v108 = *(void *)&v103[16 * v13 + 24];
          sub_252928E50((char *)(v104 + 40 * v107), (char *)(v104 + 40 * *(void *)&v103[16 * v13 + 16]), v104 + 40 * v108, __dst);
          if (v1) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_2528AA3C4((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_133;
          }
          unint64_t v109 = &v106[16 * v105 + 32];
          *(void *)unint64_t v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v13 > v110) {
            goto LABEL_134;
          }
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          long long v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v114 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v114 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_252951BD8();
    *(void *)(v8 + 16) = v7;
    uint64_t v114 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v113 = *a1 + 80;
  uint64_t v111 = *a1 + 24;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v115 = v6;
  uint64_t v116 = v3;
  uint64_t v117 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 40 * v10);
      uint64_t v16 = *(void *)(v11 + 40 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v113 + 40 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 5;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 40 * v10;
          uint64_t v22 = 40 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = *(void *)(v11 + v22);
              uint64_t v27 = v11 + v21;
              long long v28 = *(_OWORD *)(v11 + v22 + 8);
              long long v29 = *(_OWORD *)(v11 + v22 + 24);
              uint64_t v30 = *(void *)(v11 + v21 - 8);
              long long v31 = *(_OWORD *)(v11 + v21 - 24);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 40);
              *(_OWORD *)(v25 + 16) = v31;
              *(void *)(v25 + 32) = v30;
              *(void *)(v27 - 40) = v26;
              *(_OWORD *)(v27 - 32) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v24;
            v21 -= 40;
            v22 += 40;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v32 >= v3) {
      uint64_t v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      id v33 = (_OWORD *)(v111 + 40 * v10);
      do
      {
        uint64_t v34 = *(void *)(v11 + 40 * v10);
        uint64_t v35 = v14;
        uint64_t v36 = v33;
        do
        {
          uint64_t v37 = v36 - 4;
          if (v34 >= *((void *)v36 - 8)) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v38 = *((void *)v36 - 4);
          long long v40 = *v37;
          long long v39 = *(v36 - 3);
          *(_OWORD *)((char *)v36 - 40) = *v36;
          uint64_t v36 = (_OWORD *)((char *)v36 - 40);
          long long v41 = *(_OWORD *)((char *)v36 + 24);
          *(_OWORD *)((char *)v37 + 40) = v40;
          *(_OWORD *)((char *)v37 + 56) = v39;
          *((void *)v37 + 9) = v38;
          *((void *)v36 - 3) = v34;
          *(v36 - 1) = v41;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        id v33 = (_OWORD *)((char *)v33 + 40);
      }
      while (v10 != v32);
      uint64_t v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_2528A9FCC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v43 = *((void *)v12 + 2);
    unint64_t v42 = *((void *)v12 + 3);
    unint64_t v13 = v43 + 1;
    uint64_t v11 = v117;
    if (v43 >= v42 >> 1)
    {
      id v92 = sub_2528A9FCC((char *)(v42 > 1), v43 + 1, 1, v12);
      uint64_t v11 = v117;
      uint64_t v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v44 = v12 + 32;
    int v45 = &v12[16 * v43 + 32];
    *(void *)int v45 = v14;
    *((void *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v13 - 1;
        if (v13 >= 4)
        {
          simd_float3 v51 = &v44[16 * v13];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_119;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_120;
          }
          unint64_t v58 = v13 - 2;
          uint64_t v59 = &v44[16 * v13 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_122;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_125;
          }
          if (v63 >= v54)
          {
            id v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_129;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v75 = *((void *)v12 + 4);
            uint64_t v76 = *((void *)v12 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_77;
          }
          uint64_t v48 = *((void *)v12 + 4);
          uint64_t v47 = *((void *)v12 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_121;
        }
        unint64_t v58 = v13 - 2;
        uint64_t v64 = &v44[16 * v13 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_124;
        }
        uint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_127;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_128;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_83:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v69) {
          goto LABEL_123;
        }
        uint64_t v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_126;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v86 = v12;
        uint64_t v87 = &v44[16 * v85];
        uint64_t v88 = *(void *)v87;
        id v89 = &v44[16 * v46];
        uint64_t v90 = *((void *)v89 + 1);
        sub_252928E50((char *)(v11 + 40 * *(void *)v87), (char *)(v11 + 40 * *(void *)v89), v11 + 40 * v90, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v90 < v88) {
          goto LABEL_116;
        }
        if (v46 > *((void *)v86 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v87 = v88;
        *(void *)&v44[16 * v85 + 8] = v90;
        unint64_t v91 = *((void *)v86 + 2);
        if (v46 >= v91) {
          goto LABEL_118;
        }
        uint64_t v12 = v86;
        unint64_t v13 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((void *)v86 + 2) = v91 - 1;
        uint64_t v11 = v117;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v115;
    uint64_t v3 = v116;
    if (v10 >= v116)
    {
      uint64_t v9 = v114;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_252951F18();
  __break(1u);
  return result;
}

uint64_t sub_252928E50(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v30 = __src;
  long long v29 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      uint64_t v18 = &v4[40 * v11];
      long long v28 = v18;
      uint64_t v30 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = (char *)(v19 + 40);
          uint64_t v22 = *((void *)v20 - 5);
          v20 -= 40;
          if (*((void *)v18 - 5) >= v22)
          {
            long long v28 = v18 - 40;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              long long v25 = *(_OWORD *)(v18 - 40);
              long long v26 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 32) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v25;
              *(_OWORD *)(v19 + 16) = v26;
            }
            uint64_t v20 = v6;
            v18 -= 40;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v20;
              long long v24 = *((_OWORD *)v20 + 1);
              *(void *)(v19 + 32) = *((void *)v20 + 4);
              *(_OWORD *)unint64_t v19 = v23;
              *(_OWORD *)(v19 + 16) = v24;
            }
            uint64_t v30 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 40;
          uint64_t v6 = v20;
          if (v18 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    uint64_t v12 = &v4[40 * v9];
    long long v28 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            long long v17 = *((_OWORD *)v4 + 1);
            *((void *)v7 + 4) = *((void *)v4 + 4);
            *(_OWORD *)uint64_t v7 = v16;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 40;
          long long v29 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 40;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            long long v15 = *((_OWORD *)v6 + 1);
            *((void *)v7 + 4) = *((void *)v6 + 4);
            *(_OWORD *)uint64_t v7 = v14;
            *((_OWORD *)v7 + 1) = v15;
          }
        }
        v7 += 40;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v30 = v7;
    }
LABEL_38:
    sub_2528AA184((void **)&v30, (const void **)&v29, &v28);
    return 1;
  }
  uint64_t result = sub_252951F78();
  __break(1u);
  return result;
}

double simd_float3x3.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2529292CC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t simd_float3x3.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2529521F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31F88);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = *v1;
  long long v4 = v1[1];
  long long v5 = v1[2];
  v2[1] = xmmword_252953970;
  v2[2] = v3;
  v2[3] = v4;
  v2[4] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C330D8);
  sub_252929434(&qword_269C330E0, (unint64_t *)&qword_269C330E8);
  sub_2529520E8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

double sub_252929270@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2529292CC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2529292B4(void *a1)
{
  return simd_float3x3.encode(to:)(a1);
}

uint64_t sub_2529292CC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2529521D8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C330D8);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  sub_252929434(&qword_269C330F8, &qword_269C33100);
  sub_2529520D8();
  uint64_t result = v11;
  if (*(void *)(v11 + 16) == 3)
  {
    long long v7 = *(_OWORD *)(v11 + 48);
    long long v8 = *(_OWORD *)(v11 + 32);
    long long v6 = *(_OWORD *)(v11 + 64);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_252929434(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C330D8);
    sub_2529294B4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2529294B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C330F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static VideoSource.read(contentsOf:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a3 + 16);
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  *(unsigned char *)(v3 + 81) = *(unsigned char *)a3;
  *(_OWORD *)(v3 + 120) = v4;
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a3 + 48);
  *(unsigned char *)(v3 + 82) = *(unsigned char *)(a3 + 64);
  return MEMORY[0x270FA2498](sub_252929544, 0, 0);
}

uint64_t sub_252929544()
{
  char v1 = *(unsigned char *)(v0 + 82);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  long long v10 = *(_OWORD *)(v0 + 104);
  long long v11 = *(_OWORD *)(v0 + 120);
  char v4 = *(unsigned char *)(v0 + 81);
  uint64_t v5 = *(void *)(sub_252951268() - 8);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 152) = v6;
  (*(void (**)(void))(v5 + 16))();
  *(unsigned char *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 32) = v10;
  *(_OWORD *)(v0 + 48) = v11;
  *(void *)(v0 + 64) = v3;
  *(void *)(v0 + 72) = v2;
  *(unsigned char *)(v0 + 80) = v1;
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v7;
  void *v7 = v0;
  v7[1] = sub_2529296B4;
  uint64_t v8 = *(void *)(v0 + 88);
  return sub_2528DBFF4(v8, v6, v0 + 16);
}

uint64_t sub_2529296B4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2529297F0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2529297F0()
{
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static VideoSource.read<A>(_:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 96) = a3;
  *(void *)(v4 + 104) = a4;
  *(void *)(v4 + 88) = a1;
  *(void *)(v4 + 112) = *(void *)(type metadata accessor for VideoSource.ImageDescriptors(0) - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = *(void *)(a3 - 8);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 152) = AssociatedTypeWitness;
  *(void *)(v4 + 160) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v4 + 168) = swift_task_alloc();
  *(unsigned char *)(v4 + 81) = *(unsigned char *)a2;
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 176) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 192) = v8;
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(v4 + 82) = *(unsigned char *)(a2 + 64);
  return MEMORY[0x270FA2498](sub_252929A20, 0, 0);
}

uint64_t sub_252929A20()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = sub_252951B48();
  uint64_t v6 = sub_2528C4F9C(0, v5 & ~(v5 >> 63), 0, MEMORY[0x263F8EE78]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_252951B38();
  __swift_instantiateConcreteTypeFromMangledName(qword_269C32880);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 224) = v7;
  *(void *)(v0 + 232) = v6;
  swift_getAssociatedConformanceWitness();
  sub_252951DD8();
  uint64_t v8 = sub_252951268();
  *(void *)(v0 + 240) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v0 + 248) = v9;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v10(v6);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 216);
    char v13 = *(unsigned char *)(v0 + 82);
    uint64_t v14 = *(void *)(v0 + 208);
    long long v19 = *(_OWORD *)(v0 + 176);
    long long v20 = *(_OWORD *)(v0 + 192);
    char v15 = *(unsigned char *)(v0 + 81);
    *(void *)(v0 + 256) = swift_task_alloc();
    (*(void (**)(void))(v9 + 32))();
    uint64_t v16 = swift_task_alloc();
    *(void *)(v0 + 264) = v16;
    (*(void (**)(void))(v9 + 16))();
    *(unsigned char *)(v0 + 16) = v15;
    *(_OWORD *)(v0 + 32) = v19;
    *(_OWORD *)(v0 + 48) = v20;
    *(void *)(v0 + 64) = v14;
    *(void *)(v0 + 72) = v12;
    *(unsigned char *)(v0 + 80) = v13;
    long long v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v17;
    void *v17 = v0;
    v17[1] = sub_252929D40;
    uint64_t v18 = *(void *)(v0 + 128);
    return sub_2528DBFF4(v18, v16, v0 + 16);
  }
}

uint64_t sub_252929D40()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25292A180;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_252929E5C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252929E5C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  sub_25292A288(*(void *)(v0 + 128), *(void *)(v0 + 120));
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v0 + 232);
  if (v3 >= v2 >> 1) {
    uint64_t v4 = sub_2528C4F9C(v2 > 1, v3 + 1, 1, *(void *)(v0 + 232));
  }
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 112);
  *(void *)(v4 + 16) = v3 + 1;
  sub_25292A2EC(v8, v4+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v3);
  sub_25292A350(v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  *(void *)(v0 + 232) = v4;
  uint64_t v11 = *(void *)(v0 + 224);
  swift_getAssociatedConformanceWitness();
  sub_252951DD8();
  uint64_t v12 = sub_252951268();
  *(void *)(v0 + 240) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v0 + 248) = v13;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(v4);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 216);
    char v17 = *(unsigned char *)(v0 + 82);
    uint64_t v18 = *(void *)(v0 + 208);
    long long v23 = *(_OWORD *)(v0 + 176);
    long long v24 = *(_OWORD *)(v0 + 192);
    char v19 = *(unsigned char *)(v0 + 81);
    *(void *)(v0 + 256) = swift_task_alloc();
    (*(void (**)(void))(v13 + 32))();
    uint64_t v20 = swift_task_alloc();
    *(void *)(v0 + 264) = v20;
    (*(void (**)(void))(v13 + 16))();
    *(unsigned char *)(v0 + 16) = v19;
    *(_OWORD *)(v0 + 32) = v23;
    *(_OWORD *)(v0 + 48) = v24;
    *(void *)(v0 + 64) = v18;
    *(void *)(v0 + 72) = v16;
    *(unsigned char *)(v0 + 80) = v17;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_252929D40;
    uint64_t v22 = *(void *)(v0 + 128);
    return sub_2528DBFF4(v22, v20, v0 + 16);
  }
}

uint64_t sub_25292A180()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_25292A288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoSource.ImageDescriptors(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25292A2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoSource.ImageDescriptors(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25292A350(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoSource.ImageDescriptors(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for VideoSource()
{
  return &type metadata for VideoSource;
}

uint64_t static BodySkeleton2DTracker.prepare()()
{
  return sub_2528D0458(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t BodySkeleton2DTracker.init()(uint64_t a1)
{
  v1[44] = a1;
  type metadata accessor for BodyPose2DEstimator();
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for HiFiBodyPose2DEstimator();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25292A4C4, 0, 0);
}

uint64_t sub_25292A4C4()
{
  sub_252910520(v0 + 16);
  long long v1 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 328) = v1;
  *(void *)(v0 + 344) = *(void *)(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 264) = v2;
  long long v3 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 296) = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 200) = v4;
  long long v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 232) = v5;
  id v6 = sub_25294B500();
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v11 = *(void *)(v0 + 376);
  uint64_t v13 = *(void *)(v0 + 352);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00620]), sel_init);
  uint64_t v15 = v13 + *(int *)(type metadata accessor for BodySkeleton2DTracker() + 20);
  *(void *)uint64_t v15 = v14;
  *(void *)(v15 + 8) = v6;
  *(unsigned char *)(v15 + 16) = v8 & 1;
  *(void *)(v15 + 24) = v10;
  long long v17 = *(_OWORD *)(v0 + 200);
  long long v16 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = v16;
  long long v18 = *(_OWORD *)(v0 + 280);
  long long v20 = *(_OWORD *)(v0 + 232);
  long long v19 = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v15 + 128) = v18;
  *(_OWORD *)(v15 + 80) = v20;
  *(_OWORD *)(v15 + 96) = v19;
  long long v22 = *(_OWORD *)(v0 + 312);
  long long v21 = *(_OWORD *)(v0 + 328);
  long long v23 = *(_OWORD *)(v0 + 296);
  *(void *)(v15 + 192) = *(void *)(v0 + 344);
  *(_OWORD *)(v15 + 160) = v22;
  *(_OWORD *)(v15 + 176) = v21;
  *(_OWORD *)(v15 + 144) = v23;
  *(_DWORD *)(v11 + *(int *)(v12 + 20)) = 1068149419;
  *(unsigned char *)(v11 + *(int *)(v12 + 28)) = 1;
  long long v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v24;
  *long long v24 = v0;
  v24[1] = sub_25292A6D8;
  uint64_t v25 = *(void *)(v0 + 360);
  return sub_25291E4E8(v25);
}

uint64_t sub_25292A6D8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25292A7D4, 0, 0);
}

uint64_t sub_25292A7D4()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[46];
  uint64_t v4 = v0[44];
  sub_25290A5AC(v0[45], v1, (uint64_t (*)(void))type metadata accessor for BodyPose2DEstimator);
  uint64_t v5 = v1 + *(int *)(v3 + 24);
  *(unsigned char *)uint64_t v5 = 0;
  *(_OWORD *)(v5 + 8) = xmmword_252957040;
  sub_25290A5AC(v1, v2, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  sub_25290A5AC(v2, v4, (uint64_t (*)(void))type metadata accessor for HiFiBodyPose2DEstimator);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t BodySkeleton2DTracker.applied(to:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for ImageDescriptor();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_252951598();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25292A9C0, 0, 0);
}

uint64_t sub_25292A9C0()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_252951588();
  sub_2528AC618(v3, v1);
  uint64_t v4 = swift_task_alloc();
  v0[9] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  uint64_t v6 = type metadata accessor for SceneDescriptor();
  *uint64_t v5 = v0;
  v5[1] = sub_25292AAB8;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[2];
  return MEMORY[0x270EE76C0](v8, v7, &unk_269C33138, v4, v6);
}

uint64_t sub_25292AAB8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void **)v1;
  v5[11] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25292ACAC, 0, 0);
  }
  else
  {
    sub_25292C4CC(v5[5], (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
}

uint64_t sub_25292ACAC()
{
  sub_25292C4CC(*(void *)(v0 + 40), (uint64_t (*)(void))type metadata accessor for ImageDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25292AD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[28] = a2;
  v3[29] = a3;
  v3[27] = a1;
  type metadata accessor for SceneDescriptor();
  v3[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25292ADD0, 0, 0);
}

uint64_t sub_25292ADD0()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for BodySkeleton2DTracker() + 20);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v2;
  long long v3 = *(_OWORD *)(v2 + 144);
  long long v4 = *(_OWORD *)(v2 + 160);
  long long v5 = *(_OWORD *)(v2 + 176);
  *(void *)(v0 + 208) = *(void *)(v2 + 192);
  *(_OWORD *)(v0 + 176) = v4;
  *(_OWORD *)(v0 + 192) = v5;
  *(_OWORD *)(v0 + 160) = v3;
  long long v6 = *(_OWORD *)(v2 + 80);
  long long v7 = *(_OWORD *)(v2 + 96);
  long long v8 = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v0 + 144) = v8;
  *(_OWORD *)(v0 + 96) = v6;
  *(_OWORD *)(v0 + 112) = v7;
  long long v9 = *(_OWORD *)(v2 + 16);
  long long v10 = *(_OWORD *)(v2 + 32);
  long long v11 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v0 + 80) = v11;
  *(_OWORD *)(v0 + 32) = v9;
  *(_OWORD *)(v0 + 48) = v10;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v12;
  void *v12 = v0;
  v12[1] = sub_25292AEC0;
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 240);
  return VideoAdaptor.applied(to:)(v13, v14);
}

uint64_t sub_25292AEC0()
{
  uint64_t v2 = (void *)*v1;
  v2[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2529197B8, 0, 0);
  }
  else
  {
    long long v3 = (void *)swift_task_alloc();
    v2[33] = v3;
    *long long v3 = v2;
    v3[1] = sub_25292B034;
    uint64_t v4 = v2[30];
    uint64_t v5 = v2[27];
    return sub_2528C8664(v5, v4);
  }
}

uint64_t sub_25292B034()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25292B1CC;
  }
  else {
    uint64_t v2 = sub_25292B148;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25292B148()
{
  sub_25292C4CC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25292B1CC()
{
  sub_25292C4CC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for SceneDescriptor);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25292B24C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2528A91AC;
  return BodySkeleton2DTracker.applied(to:)(a1, a2);
}

uint64_t type metadata accessor for BodySkeleton2DTracker()
{
  uint64_t result = qword_269C33148;
  if (!qword_269C33148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25292B340(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_2528A91AC;
  return sub_25292AD3C(a1, v5, v4);
}

void *initializeBufferWithCopyOfBuffer for BodySkeleton2DTracker(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (void *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252951A08();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    long long v9 = (int *)type metadata accessor for BodyPose2DEstimator();
    v8((void *)((char *)a1 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    uint64_t v10 = v9[6];
    long long v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    v8((void *)((char *)a1 + v10), (void *)((char *)a2 + v10), v7);
    uint64_t v13 = type metadata accessor for GaussianFilter();
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    uint64_t v14 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
    *(_DWORD *)((char *)a1 + v14[5]) = *(_DWORD *)((char *)a2 + v14[5]);
    uint64_t v15 = v14[6];
    uint64_t v16 = (char *)a1 + v15;
    long long v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
    uint64_t v18 = *(int *)(a3 + 20);
    long long v19 = (char *)a1 + v18;
    long long v20 = (char *)a2 + v18;
    long long v22 = *(void **)v20;
    long long v21 = (void *)*((void *)v20 + 1);
    *(void *)long long v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v19[16] = v20[16];
    long long v24 = (void *)*((void *)v20 + 3);
    uint64_t v23 = *((void *)v20 + 4);
    *((void *)v19 + 3) = v24;
    *((void *)v19 + 4) = v23;
    uint64_t v25 = *((void *)v20 + 6);
    *((void *)v19 + 5) = *((void *)v20 + 5);
    *((void *)v19 + 6) = v25;
    uint64_t v26 = *((void *)v20 + 8);
    *((void *)v19 + 7) = *((void *)v20 + 7);
    *((void *)v19 + 8) = v26;
    uint64_t v27 = *((void *)v20 + 10);
    *((void *)v19 + 9) = *((void *)v20 + 9);
    *((void *)v19 + 10) = v27;
    uint64_t v28 = *((void *)v20 + 12);
    *((void *)v19 + 11) = *((void *)v20 + 11);
    *((void *)v19 + 12) = v28;
    uint64_t v29 = *((void *)v20 + 14);
    *((void *)v19 + 13) = *((void *)v20 + 13);
    *((void *)v19 + 14) = v29;
    uint64_t v30 = *((void *)v20 + 16);
    *((void *)v19 + 15) = *((void *)v20 + 15);
    *((void *)v19 + 16) = v30;
    unint64_t v42 = (void *)*((void *)v20 + 18);
    *((void *)v19 + 17) = *((void *)v20 + 17);
    *((void *)v19 + 18) = v42;
    unint64_t v43 = (void *)*((void *)v20 + 19);
    uint64_t v44 = (void *)*((void *)v20 + 20);
    *((void *)v19 + 19) = v43;
    *((void *)v19 + 20) = v44;
    int v45 = (void *)*((void *)v20 + 21);
    unint64_t v46 = (void *)*((void *)v20 + 22);
    *((void *)v19 + 21) = v45;
    *((void *)v19 + 22) = v46;
    uint64_t v47 = (void *)*((void *)v20 + 24);
    *((void *)v19 + 23) = *((void *)v20 + 23);
    *((void *)v19 + 24) = v47;
    swift_retain();
    id v31 = v22;
    id v32 = v21;
    id v33 = v24;
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v34 = v42;
    id v35 = v43;
    id v36 = v44;
    id v37 = v45;
    id v38 = v46;
    swift_unknownObjectRetain();
    id v39 = v47;
  }
  return a1;
}

void destroy for BodySkeleton2DTracker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252951A08();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for BodyPose2DEstimator();
  v5(a1 + *(int *)(v6 + 20), v4);
  v5(a1 + *(int *)(v6 + 24), v4);
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 20);

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v8 = *(void **)(v7 + 192);
}

uint64_t initializeWithCopy for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v21 = *(void **)v19;
  long long v20 = *(void **)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v23 = *(void **)(v19 + 24);
  uint64_t v22 = *(void *)(v19 + 32);
  *(void *)(v18 + 24) = v23;
  *(void *)(v18 + 32) = v22;
  uint64_t v24 = *(void *)(v19 + 48);
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  *(void *)(v18 + 48) = v24;
  uint64_t v25 = *(void *)(v19 + 64);
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  *(void *)(v18 + 64) = v25;
  uint64_t v26 = *(void *)(v19 + 80);
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  *(void *)(v18 + 80) = v26;
  uint64_t v27 = *(void *)(v19 + 96);
  *(void *)(v18 + 88) = *(void *)(v19 + 88);
  *(void *)(v18 + 96) = v27;
  uint64_t v28 = *(void *)(v19 + 112);
  *(void *)(v18 + 104) = *(void *)(v19 + 104);
  *(void *)(v18 + 112) = v28;
  uint64_t v29 = *(void *)(v19 + 128);
  *(void *)(v18 + 120) = *(void *)(v19 + 120);
  *(void *)(v18 + 128) = v29;
  uint64_t v40 = *(void **)(v19 + 144);
  *(void *)(v18 + 136) = *(void *)(v19 + 136);
  *(void *)(v18 + 144) = v40;
  long long v41 = *(void **)(v19 + 152);
  unint64_t v42 = *(void **)(v19 + 160);
  *(void *)(v18 + 152) = v41;
  *(void *)(v18 + 160) = v42;
  unint64_t v43 = *(void **)(v19 + 168);
  uint64_t v44 = *(void **)(v19 + 176);
  *(void *)(v18 + 168) = v43;
  *(void *)(v18 + 176) = v44;
  int v45 = *(void **)(v19 + 192);
  *(void *)(v18 + 184) = *(void *)(v19 + 184);
  *(void *)(v18 + 192) = v45;
  swift_retain();
  id v30 = v21;
  id v31 = v20;
  id v32 = v23;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v33 = v40;
  id v34 = v41;
  id v35 = v42;
  id v36 = v43;
  id v37 = v44;
  swift_unknownObjectRetain();
  id v38 = v45;
  return a1;
}

uint64_t assignWithCopy for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_retain();
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(void **)(a2 + v17);
  long long v21 = *(void **)v18;
  *(void *)uint64_t v18 = v20;
  id v22 = v20;

  uint64_t v23 = *(void **)(v19 + 8);
  uint64_t v24 = *(void **)(v18 + 8);
  *(void *)(v18 + 8) = v23;
  id v25 = v23;

  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v26 = *(void **)(v19 + 24);
  uint64_t v27 = *(void **)(v18 + 24);
  *(void *)(v18 + 24) = v26;
  id v28 = v26;

  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  swift_retain();
  swift_release();
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 48) = *(void *)(v19 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 64) = *(void *)(v19 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 80) = *(void *)(v19 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 88) = *(void *)(v19 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 96) = *(void *)(v19 + 96);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 104) = *(void *)(v19 + 104);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 112) = *(void *)(v19 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v18 + 120) = *(void *)(v19 + 120);
  *(void *)(v18 + 128) = *(void *)(v19 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 136) = *(void *)(v19 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v29 = *(void **)(v19 + 144);
  id v30 = *(void **)(v18 + 144);
  *(void *)(v18 + 144) = v29;
  id v31 = v29;

  id v32 = *(void **)(v19 + 152);
  id v33 = *(void **)(v18 + 152);
  *(void *)(v18 + 152) = v32;
  id v34 = v32;

  id v35 = *(void **)(v19 + 160);
  id v36 = *(void **)(v18 + 160);
  *(void *)(v18 + 160) = v35;
  id v37 = v35;

  id v38 = *(void **)(v19 + 168);
  id v39 = *(void **)(v18 + 168);
  *(void *)(v18 + 168) = v38;
  id v40 = v38;

  long long v41 = *(void **)(v19 + 176);
  unint64_t v42 = *(void **)(v18 + 176);
  *(void *)(v18 + 176) = v41;
  id v43 = v41;

  *(void *)(v18 + 184) = *(void *)(v19 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v44 = *(void **)(v18 + 192);
  int v45 = *(void **)(v19 + 192);
  *(void *)(v18 + 192) = v45;
  id v46 = v45;

  return a1;
}

uint64_t initializeWithTake for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(_OWORD *)(v19 + 176);
  *(_OWORD *)(v18 + 160) = *(_OWORD *)(v19 + 160);
  *(_OWORD *)(v18 + 176) = v20;
  *(void *)(v18 + 192) = *(void *)(v19 + 192);
  long long v21 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v21;
  long long v22 = *(_OWORD *)(v19 + 144);
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(v19 + 128);
  *(_OWORD *)(v18 + 144) = v22;
  long long v23 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v23;
  long long v24 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v24;
  long long v25 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v25;
  return a1;
}

uint64_t assignWithTake for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252951A08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BodyPose2DEstimator();
  v7(a1 + v8[5], a2 + v8[5], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  uint64_t v12 = type metadata accessor for GaussianFilter();
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_release();
  uint64_t v13 = (int *)type metadata accessor for HiFiBodyPose2DEstimator();
  *(_DWORD *)(a1 + v13[5]) = *(_DWORD *)(a2 + v13[5]);
  uint64_t v14 = v13[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)v19;

  long long v21 = *(void **)(v18 + 8);
  *(void *)(v18 + 8) = *(void *)(v19 + 8);

  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  long long v22 = *(void **)(v18 + 24);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);

  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  swift_release();
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  swift_unknownObjectRelease();
  *(void *)(v18 + 48) = *(void *)(v19 + 48);
  swift_unknownObjectRelease();
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  swift_unknownObjectRelease();
  *(void *)(v18 + 64) = *(void *)(v19 + 64);
  swift_unknownObjectRelease();
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  swift_unknownObjectRelease();
  *(void *)(v18 + 80) = *(void *)(v19 + 80);
  swift_unknownObjectRelease();
  *(void *)(v18 + 88) = *(void *)(v19 + 88);
  swift_unknownObjectRelease();
  *(void *)(v18 + 96) = *(void *)(v19 + 96);
  swift_unknownObjectRelease();
  *(void *)(v18 + 104) = *(void *)(v19 + 104);
  swift_unknownObjectRelease();
  *(void *)(v18 + 112) = *(void *)(v19 + 112);
  swift_unknownObjectRelease();
  uint64_t v23 = *(void *)(v19 + 128);
  *(void *)(v18 + 120) = *(void *)(v19 + 120);
  *(void *)(v18 + 128) = v23;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 136) = *(void *)(v19 + 136);
  swift_unknownObjectRelease();
  long long v24 = *(void **)(v18 + 144);
  *(void *)(v18 + 144) = *(void *)(v19 + 144);

  long long v25 = *(void **)(v18 + 152);
  *(void *)(v18 + 152) = *(void *)(v19 + 152);

  uint64_t v26 = *(void **)(v18 + 160);
  *(void *)(v18 + 160) = *(void *)(v19 + 160);

  uint64_t v27 = *(void **)(v18 + 168);
  *(void *)(v18 + 168) = *(void *)(v19 + 168);

  id v28 = *(void **)(v18 + 176);
  *(void *)(v18 + 176) = *(void *)(v19 + 176);

  *(void *)(v18 + 184) = *(void *)(v19 + 184);
  swift_unknownObjectRelease();
  uint64_t v29 = *(void **)(v18 + 192);
  *(void *)(v18 + 192) = *(void *)(v19 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25292C2A8);
}

uint64_t sub_25292C2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BodySkeleton2DTracker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25292C37C);
}

uint64_t sub_25292C37C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25292C438()
{
  uint64_t result = type metadata accessor for HiFiBodyPose2DEstimator();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25292C4CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t VideoAdaptorError.debugDescription.getter()
{
  uint64_t v1 = type metadata accessor for VideoAdaptorError();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25292C8E8(v0, (uint64_t)v3);
  unint64_t v4 = 0xD000000000000028;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
      uint64_t v5 = sub_252951268();
      uint64_t v6 = *(void *)(v5 - 8);
      MEMORY[0x270FA5388](v5);
      uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v3, v5);
      v10[0] = 0;
      v10[1] = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      v10[0] = 0xD00000000000001ELL;
      v10[1] = 0x800000025295B760;
      sub_2528AED6C();
      sub_2529520C8();
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      sub_252951B08();
      swift_bridgeObjectRelease();
      unint64_t v4 = v10[0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      break;
    case 2u:
      return v4;
    case 3u:
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 4u:
      unint64_t v4 = 0xD000000000000029;
      break;
    case 5u:
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 6u:
      unint64_t v4 = 0xD000000000000031;
      break;
    case 7u:
      unint64_t v4 = 0xD000000000000034;
      break;
    case 8u:
      unint64_t v4 = 0xD000000000000026;
      break;
    case 9u:
      unint64_t v4 = 0xD000000000000046;
      break;
    default:
      v10[0] = 0;
      v10[1] = 0xE000000000000000;
      sub_252951E48();
      swift_bridgeObjectRelease();
      BYTE5(v10[1]) = 0;
      HIWORD(v10[1]) = -5120;
      sub_252951B08();
      swift_bridgeObjectRelease();
      sub_252951B08();
      unint64_t v4 = v10[0];
      break;
  }
  return v4;
}

uint64_t type metadata accessor for VideoAdaptorError()
{
  uint64_t result = qword_269C33158;
  if (!qword_269C33158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25292C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdaptorError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s5Human17VideoAdaptorErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdaptorError();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (void *)((char *)v34 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33168);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v13[*(int *)(v11 + 56)];
  sub_25292C8E8(a1, (uint64_t)v13);
  sub_25292C8E8(a2, (uint64_t)v14);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25292C8E8((uint64_t)v13, (uint64_t)v7);
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
      uint64_t v19 = *(void *)&v7[v17];
      uint64_t v18 = *(void *)&v7[v17 + 8];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_252951268();
        (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v7, v30);
        goto LABEL_29;
      }
      uint64_t v20 = *(void *)&v14[v17];
      uint64_t v21 = *(void *)&v14[v17 + 8];
      v34[0] = v20;
      uint64_t v22 = sub_252951268();
      v34[1] = v34;
      uint64_t v23 = *(void *)(v22 - 8);
      MEMORY[0x270FA5388](v22);
      long long v25 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v14, v22);
      char v26 = MEMORY[0x2533BFC10](v7, v25);
      uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
      v27(v7, v22);
      if ((v26 & 1) == 0)
      {
        v27(v25, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      if (v19 == v34[0] && v18 == v21)
      {
        swift_bridgeObjectRelease_n();
        v27(v25, v22);
        goto LABEL_41;
      }
      char v29 = sub_252952108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27(v25, v22);
      if (v29) {
        goto LABEL_41;
      }
      goto LABEL_38;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 6u:
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 7u:
      if (swift_getEnumCaseMultiPayload() == 7) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 8u:
      if (swift_getEnumCaseMultiPayload() == 8) {
        goto LABEL_41;
      }
      goto LABEL_29;
    case 9u:
      if (swift_getEnumCaseMultiPayload() == 9) {
        goto LABEL_41;
      }
      goto LABEL_29;
    default:
      sub_25292C8E8((uint64_t)v13, (uint64_t)v9);
      uint64_t v16 = *v9;
      uint64_t v15 = v9[1];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
LABEL_29:
        sub_25292D0D8((uint64_t)v13);
        return 0;
      }
      if (v16 == *(void *)v14 && v15 == *((void *)v14 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v33 = sub_252952108();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0)
        {
LABEL_38:
          sub_252905904((uint64_t)v13);
          return 0;
        }
      }
LABEL_41:
      sub_252905904((uint64_t)v13);
      return 1;
  }
}

void *assignWithCopy for VideoAdaptorError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252905904((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_252951268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C32618) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      void *v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *assignWithTake for VideoAdaptorError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252905904((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_252951268();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C32618);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25292D030()
{
  v2[4] = &unk_2529584F8;
  uint64_t result = sub_252951268();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_25292D0D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25292D138(char a1)
{
  return *(void *)&aIndex_4[8 * a1];
}

uint64_t sub_25292D158(char *a1, char *a2)
{
  return sub_25293140C(*a1, *a2);
}

uint64_t sub_25292D164()
{
  return sub_252930DB8();
}

uint64_t sub_25292D16C()
{
  return sub_252930EFC();
}

uint64_t sub_25292D174()
{
  return sub_2529313A4();
}

uint64_t sub_25292D17C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25292DB34();
  *a1 = result;
  return result;
}

uint64_t sub_25292D1AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25292D138(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25292D1D8()
{
  return sub_25292D138(*v0);
}

uint64_t sub_25292D1E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25292DB34();
  *a1 = result;
  return result;
}

uint64_t sub_25292D208(uint64_t a1)
{
  unint64_t v2 = sub_25292D560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25292D244(uint64_t a1)
{
  unint64_t v2 = sub_25292D560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Keypoint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33170);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25292D560();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v22) = 0;
  uint64_t v9 = sub_252952008();
  LOBYTE(v22) = 1;
  uint64_t v10 = sub_252952008();
  char v24 = 2;
  sub_25292D5B4();
  sub_252952018();
  uint64_t v19 = v10;
  uint64_t v20 = v22;
  uint64_t v11 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C33188);
  char v24 = 3;
  sub_25292D8B0(&qword_269C33190);
  uint64_t v21 = v11;
  swift_bridgeObjectRetain();
  sub_252952018();
  uint64_t v12 = v22;
  LOBYTE(v22) = 4;
  sub_252951FF8();
  int v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v21;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v16;
  uint64_t v17 = v19;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25292D560()
{
  unint64_t result = qword_269C33178;
  if (!qword_269C33178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33178);
  }
  return result;
}

unint64_t sub_25292D5B4()
{
  unint64_t result = qword_269C33180;
  if (!qword_269C33180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33180);
  }
  return result;
}

uint64_t Skeleton.Keypoint.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33198);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v15 = v8;
  uint64_t v16 = v1[3];
  uint64_t v9 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25292D560();
  sub_252952208();
  LOBYTE(v17) = 0;
  sub_252952088();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v10 = v15;
    LOBYTE(v17) = 1;
    sub_252952088();
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    char v19 = 2;
    sub_25292D85C();
    sub_252952098();
    uint64_t v17 = v9;
    char v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C33188);
    sub_25292D8B0((unint64_t *)&qword_269C331A8);
    sub_252952098();
    LOBYTE(v17) = 4;
    sub_252952078();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_25292D85C()
{
  unint64_t result = qword_269C331A0;
  if (!qword_269C331A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331A0);
  }
  return result;
}

uint64_t sub_25292D8B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C33188);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25292D8F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Skeleton.Keypoint.init(from:)(a1, a2);
}

uint64_t sub_25292D910(void *a1)
{
  return Skeleton.Keypoint.encode(to:)(a1);
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25292D9F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_25292DA30()
{
  unint64_t result = qword_269C331B0;
  if (!qword_269C331B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331B0);
  }
  return result;
}

unint64_t sub_25292DA88()
{
  unint64_t result = qword_269C331B8;
  if (!qword_269C331B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331B8);
  }
  return result;
}

unint64_t sub_25292DAE0()
{
  unint64_t result = qword_269C331C0;
  if (!qword_269C331C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331C0);
  }
  return result;
}

uint64_t sub_25292DB34()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_25292DB80(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x79676F6C6F706F74;
      break;
    case 2:
      unint64_t result = 0x73746E696F6ALL;
      break;
    case 3:
      unint64_t result = 0x73656E6F62;
      break;
    case 4:
      unint64_t result = 0x746E696F7079656BLL;
      break;
    case 5:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0x6569566C65646F6DLL;
      break;
    case 8:
      unint64_t result = 0x74696C6172696863;
      break;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

unint64_t sub_25292DCB0(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x79676F6C6F706F74;
      break;
    case 2:
      unint64_t result = 0x73746E696F6ALL;
      break;
    case 3:
      unint64_t result = 0x73656E6F62;
      break;
    case 4:
      unint64_t result = 0x746E696F7079656BLL;
      break;
    case 5:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0x6569566C65646F6DLL;
      break;
    case 8:
      unint64_t result = 0x74696C6172696863;
      break;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

uint64_t sub_25292DDE0(unsigned __int8 *a1, char *a2)
{
  return sub_25293162C(*a1, *a2);
}

uint64_t sub_25292DDEC()
{
  return sub_2529521C8();
}

uint64_t sub_25292DE34()
{
  return sub_25293104C();
}

uint64_t sub_25292DE3C()
{
  return sub_2529521C8();
}

uint64_t sub_25292DE80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25292F21C();
  *a1 = result;
  return result;
}

unint64_t sub_25292DEB0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25292DB80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25292DEDC()
{
  return sub_25292DCB0(*v0);
}

uint64_t sub_25292DEE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25292F21C();
  *a1 = result;
  return result;
}

void sub_25292DF0C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_25292DF18(uint64_t a1)
{
  unint64_t v2 = sub_25292E4CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25292DF54(uint64_t a1)
{
  unint64_t v2 = sub_25292E4CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C331C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25292E4CC();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v32) = 0;
  uint64_t v9 = sub_252952008();
  char v37 = 1;
  sub_25292E520();
  sub_252952018();
  int v36 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C331E0);
  char v37 = 2;
  sub_25292EDA4(&qword_269C331E8, &qword_269C331E0, (void (*)(void))sub_25292E574);
  sub_252952018();
  uint64_t v10 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C331F8);
  char v37 = 4;
  sub_25292EDA4(&qword_269C33200, &qword_269C331F8, (void (*)(void))sub_25292E5C8);
  uint64_t v31 = v10;
  swift_bridgeObjectRetain();
  sub_252952018();
  uint64_t v11 = v32;
  char v37 = 6;
  sub_25292E61C();
  uint64_t v30 = v11;
  swift_bridgeObjectRetain();
  sub_252951FC8();
  uint64_t v28 = *((void *)&v32 + 1);
  uint64_t v29 = v32;
  uint64_t v26 = *((void *)&v33 + 1);
  uint64_t v27 = v33;
  uint64_t v25 = v34;
  int v24 = BYTE8(v34);
  type metadata accessor for simd_float4x4(0);
  char v37 = 7;
  sub_25292EEB8(&qword_269C33218);
  sub_252952018();
  uint64_t v13 = v29;
  long long v22 = v33;
  long long v23 = v32;
  long long v21 = v34;
  long long v20 = v35;
  char v37 = 8;
  sub_25292E670();
  sub_252952018();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v14 = v32;
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v36;
  uint64_t v15 = v30;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v15;
  uint64_t v16 = v28;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v16;
  uint64_t v17 = v26;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v24;
  long long v18 = v22;
  *(_OWORD *)(a2 + 80) = v23;
  *(_OWORD *)(a2 + 96) = v18;
  long long v19 = v20;
  *(_OWORD *)(a2 + 112) = v21;
  *(_OWORD *)(a2 + 128) = v19;
  *(unsigned char *)(a2 + 144) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_25292E4CC()
{
  unint64_t result = qword_269C331D0;
  if (!qword_269C331D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331D0);
  }
  return result;
}

unint64_t sub_25292E520()
{
  unint64_t result = qword_269C331D8;
  if (!qword_269C331D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331D8);
  }
  return result;
}

unint64_t sub_25292E574()
{
  unint64_t result = qword_269C331F0;
  if (!qword_269C331F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331F0);
  }
  return result;
}

unint64_t sub_25292E5C8()
{
  unint64_t result = qword_269C33208;
  if (!qword_269C33208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33208);
  }
  return result;
}

unint64_t sub_25292E61C()
{
  unint64_t result = qword_269C33210;
  if (!qword_269C33210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33210);
  }
  return result;
}

unint64_t sub_25292E670()
{
  unint64_t result = qword_269C33220;
  if (!qword_269C33220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33220);
  }
  return result;
}

uint64_t Skeleton.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33228);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v50 = *((unsigned __int8 *)v1 + 8);
  uint64_t v9 = v1[3];
  uint64_t v37 = v1[2];
  uint64_t v38 = v9;
  uint64_t v34 = v1[4];
  uint64_t v27 = v1[5];
  uint64_t v29 = v1[6];
  uint64_t v28 = v1[7];
  uint64_t v36 = v1[8];
  int v35 = *((unsigned __int8 *)v1 + 72);
  long long v33 = *((_OWORD *)v1 + 5);
  long long v32 = *((_OWORD *)v1 + 6);
  long long v31 = *((_OWORD *)v1 + 7);
  long long v30 = *((_OWORD *)v1 + 8);
  char v10 = *((unsigned char *)v1 + 144);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_25292E4CC();
  uint64_t v15 = v8;
  sub_252952208();
  LOBYTE(v39) = 0;
  sub_252952088();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  }
  uint64_t v17 = v38;
  uint64_t v26 = v5;
  char v18 = v50;
  LOBYTE(v39) = v50;
  char v51 = 1;
  sub_25292ECA8();
  sub_252952098();
  *(void *)&long long v39 = v37;
  char v51 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C331E0);
  sub_25292EDA4(&qword_269C33238, &qword_269C331E0, (void (*)(void))sub_25292ECFC);
  uint64_t v25 = v14;
  sub_252952098();
  *(void *)&long long v39 = v17;
  char v51 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C331F8);
  sub_25292EDA4(&qword_269C33248, &qword_269C331F8, (void (*)(void))sub_25292ED50);
  sub_252952098();
  *(void *)&long long v39 = v15;
  BYTE8(v39) = v18;
  *(void *)&long long v40 = v37;
  *((void *)&v40 + 1) = v17;
  uint64_t v19 = v27;
  *(void *)&long long v41 = v34;
  *((void *)&v41 + 1) = v27;
  uint64_t v20 = v29;
  uint64_t v21 = v28;
  *(void *)&long long v42 = v29;
  *((void *)&v42 + 1) = v28;
  uint64_t v43 = v36;
  char v44 = v35;
  long long v45 = v33;
  long long v46 = v32;
  long long v47 = v31;
  long long v48 = v30;
  char v49 = v10;
  *(void *)&long long v39 = Skeleton.connections.getter();
  char v51 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C33258);
  sub_25292EDA4(&qword_269C33260, &qword_269C33258, (void (*)(void))sub_25292EE10);
  sub_252952098();
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = v34;
  *((void *)&v39 + 1) = v19;
  *(void *)&long long v40 = v20;
  *((void *)&v40 + 1) = v21;
  *(void *)&long long v41 = v36;
  BYTE8(v41) = v35;
  char v51 = 6;
  sub_25292EE64();
  uint64_t v22 = v25;
  sub_252952048();
  long long v39 = v33;
  long long v40 = v32;
  long long v41 = v31;
  long long v42 = v30;
  char v51 = 7;
  type metadata accessor for simd_float4x4(0);
  sub_25292EEB8(&qword_269C33278);
  sub_252952098();
  uint64_t v23 = v26;
  LOBYTE(v39) = v10;
  char v51 = 8;
  sub_25292EEFC();
  sub_252952098();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v22);
}

unint64_t sub_25292ECA8()
{
  unint64_t result = qword_269C33230;
  if (!qword_269C33230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33230);
  }
  return result;
}

unint64_t sub_25292ECFC()
{
  unint64_t result = qword_269C33240;
  if (!qword_269C33240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33240);
  }
  return result;
}

unint64_t sub_25292ED50()
{
  unint64_t result = qword_269C33250;
  if (!qword_269C33250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33250);
  }
  return result;
}

uint64_t sub_25292EDA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25292EE10()
{
  unint64_t result = qword_269C33268;
  if (!qword_269C33268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33268);
  }
  return result;
}

unint64_t sub_25292EE64()
{
  unint64_t result = qword_269C33270;
  if (!qword_269C33270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33270);
  }
  return result;
}

uint64_t sub_25292EEB8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for simd_float4x4(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25292EEFC()
{
  unint64_t result = qword_269C33280;
  if (!qword_269C33280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33280);
  }
  return result;
}

uint64_t sub_25292EF50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Skeleton.init(from:)(a1, a2);
}

uint64_t sub_25292EF68(void *a1)
{
  return Skeleton.encode(to:)(a1);
}

uint64_t _s10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    void *result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25292F0DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_25292F118()
{
  unint64_t result = qword_269C33288;
  if (!qword_269C33288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33288);
  }
  return result;
}

unint64_t sub_25292F170()
{
  unint64_t result = qword_269C33290;
  if (!qword_269C33290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33290);
  }
  return result;
}

unint64_t sub_25292F1C8()
{
  unint64_t result = qword_269C33298;
  if (!qword_269C33298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33298);
  }
  return result;
}

uint64_t sub_25292F21C()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t PnPAlgorithm.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)PnPSolver), sel_init);
  return v0;
}

uint64_t PnPAlgorithm.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)PnPSolver), sel_init);
  return v0;
}

id sub_25292F2EC(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5)
{
  return objc_msgSend(*(id *)(v5 + 16), sel_solveWithImagePoints_modelPoints_numImagePoints_cameraIntrinsics_transform_, a1 + 32, a2 + 32, a3, a5, *a4, a4[2], a4[4]);
}

uint64_t PnPAlgorithm.deinit()
{
  return v0;
}

uint64_t PnPAlgorithm.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PnPAlgorithm()
{
  return self;
}

uint64_t method lookup function for PnPAlgorithm(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PnPAlgorithm);
}

uint64_t dispatch thunk of PnPAlgorithm.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PnPAlgorithm.solve(imagePoints:modelPoints:numPoints:intrinsics:cameraTransform:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v5 = a4[1];
  long long v6 = a4[2];
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _OWORD *))(*(void *)v4 + 96);
  v9[0] = *a4;
  v9[1] = v5;
  v9[2] = v6;
  return v7(a1, a2, a3, v9) & 1;
}

uint64_t sub_25292F434(char a1)
{
  return *(void *)&aIndex_5[8 * a1];
}

uint64_t sub_25292F454(char *a1, char *a2)
{
  return sub_252931494(*a1, *a2);
}

uint64_t sub_25292F460()
{
  return sub_25293133C();
}

uint64_t sub_25292F46C()
{
  return sub_252930F50();
}

uint64_t sub_25292F474()
{
  return sub_25293133C();
}

uint64_t sub_25292F47C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252930058();
  *a1 = result;
  return result;
}

uint64_t sub_25292F4AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25292F434(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25292F4D8()
{
  return sub_25292F434(*v0);
}

uint64_t sub_25292F4E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252930058();
  *a1 = result;
  return result;
}

void sub_25292F508(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25292F514(uint64_t a1)
{
  unint64_t v2 = sub_25292F9E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25292F550(uint64_t a1)
{
  unint64_t v2 = sub_25292F9E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Joint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C332A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25292F9E8();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v35) = 0;
  uint64_t v9 = sub_252952008();
  LOBYTE(v35) = 1;
  uint64_t v10 = sub_252952008();
  char v39 = 2;
  sub_25292D5B4();
  sub_252952018();
  uint64_t v11 = *((void *)&v35 + 1);
  uint64_t v31 = v35;
  uint64_t v32 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C330F0);
  char v39 = 3;
  uint64_t v12 = sub_2529294B4(&qword_269C33100);
  uint64_t v34 = v11;
  swift_bridgeObjectRetain();
  *(void *)&long long v33 = v12;
  sub_252952018();
  long long v30 = v35;
  char v39 = 4;
  sub_252952018();
  long long v29 = v35;
  type metadata accessor for simd_float4x4(0);
  char v39 = 5;
  *(void *)&long long v33 = sub_25292EEB8(&qword_269C33218);
  sub_252952018();
  long long v28 = v35;
  long long v27 = v36;
  long long v26 = v37;
  long long v25 = v38;
  char v39 = 6;
  sub_252952018();
  long long v33 = v35;
  long long v24 = v36;
  long long v23 = v37;
  long long v22 = v38;
  LOBYTE(v35) = 7;
  LOBYTE(v11) = sub_252951FE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v14 = v11 & 1;
  uint64_t v15 = v32;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v15;
  uint64_t v16 = v34;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v16;
  long long v17 = v29;
  *(_OWORD *)(a2 + 32) = v30;
  *(_OWORD *)(a2 + 48) = v17;
  long long v18 = v27;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 80) = v18;
  long long v19 = v25;
  *(_OWORD *)(a2 + 96) = v26;
  *(_OWORD *)(a2 + 112) = v19;
  long long v20 = v24;
  *(_OWORD *)(a2 + 128) = v33;
  *(_OWORD *)(a2 + 144) = v20;
  long long v21 = v22;
  *(_OWORD *)(a2 + 160) = v23;
  *(_OWORD *)(a2 + 176) = v21;
  *(unsigned char *)(a2 + 192) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25292F9E8()
{
  unint64_t result = qword_269C332A8;
  if (!qword_269C332A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332A8);
  }
  return result;
}

uint64_t Skeleton.Joint.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C332B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v25 = *(void *)(v1 + 16);
  uint64_t v26 = v7;
  uint64_t v24 = *(void *)(v1 + 24);
  long long v8 = *(_OWORD *)(v1 + 32);
  long long v22 = *(_OWORD *)(v1 + 48);
  long long v23 = v8;
  long long v9 = *(_OWORD *)(v1 + 64);
  long long v20 = *(_OWORD *)(v1 + 80);
  long long v21 = v9;
  long long v19 = *(_OWORD *)(v1 + 96);
  long long v18 = *(_OWORD *)(v1 + 112);
  long long v17 = *(_OWORD *)(v1 + 128);
  long long v16 = *(_OWORD *)(v1 + 144);
  long long v15 = *(_OWORD *)(v1 + 160);
  long long v14 = *(_OWORD *)(v1 + 176);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25292F9E8();
  sub_252952208();
  LOBYTE(v28) = 0;
  uint64_t v10 = v27;
  sub_252952088();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  LOBYTE(v28) = 1;
  sub_252952088();
  *(void *)&long long v28 = v12;
  *((void *)&v28 + 1) = v13;
  char v32 = 2;
  sub_25292D85C();
  sub_252952098();
  long long v28 = v23;
  char v32 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C330F0);
  sub_2529294B4((unint64_t *)&qword_269C330E8);
  sub_252952098();
  long long v28 = v22;
  char v32 = 4;
  sub_252952098();
  long long v28 = v21;
  long long v29 = v20;
  long long v30 = v19;
  long long v31 = v18;
  char v32 = 5;
  type metadata accessor for simd_float4x4(0);
  sub_25292EEB8(&qword_269C33278);
  sub_252952098();
  long long v28 = v17;
  long long v29 = v16;
  long long v30 = v15;
  long long v31 = v14;
  char v32 = 6;
  sub_252952098();
  LOBYTE(v28) = 7;
  sub_252952068();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v3);
}

uint64_t sub_25292FE1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Skeleton.Joint.init(from:)(a1, a2);
}

uint64_t sub_25292FE34(void *a1)
{
  return Skeleton.Joint.encode(to:)(a1);
}

unsigned char *_s10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25292FF18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unint64_t sub_25292FF54()
{
  unint64_t result = qword_269C332B8;
  if (!qword_269C332B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332B8);
  }
  return result;
}

unint64_t sub_25292FFAC()
{
  unint64_t result = qword_269C332C0;
  if (!qword_269C332C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332C0);
  }
  return result;
}

unint64_t sub_252930004()
{
  unint64_t result = qword_269C332C8;
  if (!qword_269C332C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332C8);
  }
  return result;
}

uint64_t sub_252930058()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_2529300A4()
{
  return sub_252951B68();
}

uint64_t sub_252930104()
{
  return sub_252951B58();
}

unint64_t sub_252930154()
{
  unint64_t result = qword_269C332D0;
  if (!qword_269C332D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332D0);
  }
  return result;
}

uint64_t sub_2529301A8(char a1)
{
  return *(void *)&aParent_4[8 * a1];
}

uint64_t sub_2529301C8(char *a1, char *a2)
{
  return sub_2529315A4(*a1, *a2);
}

uint64_t sub_2529301D4()
{
  return sub_252930E24();
}

uint64_t sub_2529301DC()
{
  return sub_252930FF8();
}

uint64_t sub_2529301E4()
{
  return sub_25293126C();
}

uint64_t sub_2529301EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252930B1C();
  *a1 = result;
  return result;
}

uint64_t sub_25293021C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2529301A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_252930248()
{
  return sub_2529301A8(*v0);
}

uint64_t sub_252930250@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252930B1C();
  *a1 = result;
  return result;
}

uint64_t sub_252930278(uint64_t a1)
{
  unint64_t v2 = sub_252930550();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2529302B4(uint64_t a1)
{
  unint64_t v2 = sub_252930550();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Connection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C332D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252930550();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  sub_25292E5C8();
  sub_252952018();
  uint64_t v9 = v24;
  uint64_t v21 = v25;
  uint64_t v22 = v23;
  uint64_t v20 = *((void *)&v25 + 1);
  uint64_t v10 = v26;
  int v11 = v27;
  char v28 = 1;
  swift_bridgeObjectRetain();
  sub_252952018();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  uint64_t v14 = v26;
  int v15 = v27;
  long long v16 = v25;
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v9;
  uint64_t v17 = v20;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v10;
  *(_DWORD *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v13;
  *(_OWORD *)(a2 + 64) = v16;
  *(void *)(a2 + 80) = v14;
  *(_DWORD *)(a2 + 88) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_252930550()
{
  unint64_t result = qword_269C332E0;
  if (!qword_269C332E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332E0);
  }
  return result;
}

uint64_t Skeleton.Connection.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C332E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v26 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  float32x2_t v9 = (float32x2_t)v1[2];
  int v10 = *((_DWORD *)v1 + 10);
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v24 = *((void *)v1 + 7);
  uint64_t v25 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v22 = *((void *)v1 + 9);
  uint64_t v23 = v12;
  float32x2_t v13 = (float32x2_t)v1[5];
  int v14 = *((_DWORD *)v1 + 22);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252930550();
  sub_252952208();
  long long v28 = v26;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  float32x2_t v31 = v9;
  int v32 = v10;
  char v33 = 0;
  sub_25292ED50();
  uint64_t v15 = v27;
  sub_252952098();
  if (!v15)
  {
    *(void *)&long long v28 = v25;
    *((void *)&v28 + 1) = v24;
    uint64_t v29 = v23;
    uint64_t v30 = v22;
    float32x2_t v31 = v13;
    int v32 = v14;
    char v33 = 1;
    sub_252952098();
    LOBYTE(v28) = 2;
    sub_252952078();
    float32x2_t v16 = vsub_f32(v13, v9);
    *(float32x2_t *)&long long v17 = vmul_f32(v16, v16);
    long long v27 = v17;
    LOBYTE(v28) = 3;
    sub_252952078();
    unsigned __int32 v18 = vadd_f32(*(float32x2_t *)&v27, (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v27, 1)).u32[0];
    float32x2_t v19 = vrsqrte_f32((float32x2_t)v18);
    float32x2_t v20 = vmul_f32(v19, vrsqrts_f32((float32x2_t)v18, vmul_f32(v19, v19)));
    *(float32x2_t *)&long long v28 = vmul_n_f32(v16, vmul_f32(v20, vrsqrts_f32((float32x2_t)v18, vmul_f32(v20, v20))).f32[0]);
    char v33 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C33188);
    sub_252930884();
    sub_252952098();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_252930884()
{
  unint64_t result = qword_269C331A8;
  if (!qword_269C331A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C33188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C331A8);
  }
  return result;
}

uint64_t sub_2529308E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Skeleton.Connection.init(from:)(a1, a2);
}

uint64_t sub_2529308F8(void *a1)
{
  return Skeleton.Connection.encode(to:)(a1);
}

unsigned char *_s10CodingKeysOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2529309DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON_2;
}

unint64_t sub_252930A18()
{
  unint64_t result = qword_269C332F0;
  if (!qword_269C332F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332F0);
  }
  return result;
}

unint64_t sub_252930A70()
{
  unint64_t result = qword_269C332F8;
  if (!qword_269C332F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C332F8);
  }
  return result;
}

unint64_t sub_252930AC8()
{
  unint64_t result = qword_269C33300;
  if (!qword_269C33300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33300);
  }
  return result;
}

uint64_t sub_252930B1C()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

BOOL static ImageOrientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImageOrientation.hash(into:)()
{
  return sub_2529521A8();
}

uint64_t ImageOrientation.hashValue.getter()
{
  return sub_2529521C8();
}

unint64_t sub_252930BF4()
{
  unint64_t result = qword_269C33308;
  if (!qword_269C33308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33308);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ImageOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252930D14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageOrientation()
{
  return &type metadata for ImageOrientation;
}

uint64_t sub_252930D4C()
{
  return sub_2529521C8();
}

uint64_t sub_252930DB8()
{
  return sub_2529521C8();
}

uint64_t sub_252930E24()
{
  return sub_2529521C8();
}

uint64_t sub_252930E90()
{
  return sub_2529521C8();
}

uint64_t sub_252930EFC()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252930F50()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252930FA4()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252930FF8()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25293104C()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2529311B0()
{
  sub_252951AF8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252931204()
{
  return sub_2529521C8();
}

uint64_t sub_25293126C()
{
  return sub_2529521C8();
}

uint64_t sub_2529312D4()
{
  return sub_2529521C8();
}

uint64_t sub_25293133C()
{
  return sub_2529521C8();
}

uint64_t sub_2529313A4()
{
  return sub_2529521C8();
}

uint64_t sub_25293140C(char a1, char a2)
{
  if (*(void *)&aIndex_6[8 * a1] == *(void *)&aIndex_6[8 * a2]
    && *(void *)&aLocationconfid_0[8 * a1 + 16] == *(void *)&aLocationconfid_0[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_252931494(char a1, char a2)
{
  if (*(void *)&aIndex_7[8 * a1] == *(void *)&aIndex_7[8 * a2] && qword_252959028[a1] == qword_252959028[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_25293151C(char a1, char a2)
{
  if (*(void *)&aIsvalid_3[8 * a1] == *(void *)&aIsvalid_3[8 * a2] && qword_252959130[a1] == qword_252959130[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2529315A4(char a1, char a2)
{
  if (*(void *)&aParent_5[8 * a1] == *(void *)&aParent_5[8 * a2]
    && *(void *)&aUnitdire_0[8 * a1 + 8] == *(void *)&aUnitdire_0[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_25293162C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000019;
  unint64_t v3 = 0x800000025295A010;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000019;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x79676F6C6F706F74;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x73746E696F6ALL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x73656E6F62;
      break;
    case 4:
      unint64_t v3 = 0xE900000000000073;
      unint64_t v5 = 0x746E696F7079656BLL;
      break;
    case 5:
      unint64_t v3 = 0xEB00000000736E6FLL;
      unint64_t v5 = 0x697463656E6E6F63;
      break;
    case 6:
      break;
    case 7:
      unint64_t v3 = 0xEF78697274614D77;
      unint64_t v5 = 0x6569566C65646F6DLL;
      break;
    case 8:
      unint64_t v5 = 0x74696C6172696863;
      unint64_t v3 = 0xE900000000000079;
      break;
    default:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 25705;
      break;
  }
  unint64_t v6 = 0x800000025295A010;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x79676F6C6F706F74) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x73746E696F6ALL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x73656E6F62) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != 0x746E696F7079656BLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEB00000000736E6FLL;
      if (v5 != 0x697463656E6E6F63) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      goto LABEL_24;
    case 7:
      unint64_t v6 = 0xEF78697274614D77;
      unint64_t v2 = 0x6569566C65646F6DLL;
LABEL_24:
      if (v5 == v2) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE900000000000079;
      if (v5 != 0x74696C6172696863) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 25705) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_252952108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_252931908(char a1, char a2)
{
  if (qword_2529590B8[a1] == qword_2529590B8[a2] && qword_2529590E0[a1] == qword_2529590E0[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_252952108();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_252931990(char a1)
{
  return *(void *)&aIsvalid_3[8 * a1];
}

uint64_t sub_2529319B0(char *a1, char *a2)
{
  return sub_25293151C(*a1, *a2);
}

uint64_t sub_2529319BC()
{
  return sub_252930E90();
}

uint64_t sub_2529319C4()
{
  return sub_252930FA4();
}

uint64_t sub_2529319CC()
{
  return sub_2529312D4();
}

uint64_t sub_2529319D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252932800();
  *a1 = result;
  return result;
}

uint64_t sub_252931A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_252931990(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_252931A30()
{
  return sub_252931990(*v0);
}

uint64_t sub_252931A38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252932800();
  *a1 = result;
  return result;
}

uint64_t sub_252931A60(uint64_t a1)
{
  unint64_t v2 = sub_252931F1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252931A9C(uint64_t a1)
{
  unint64_t v2 = sub_252931F1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Skeleton.Bone.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33310);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252931F1C();
  sub_2529521E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v8 = v5;
  LOBYTE(v44[0]) = 3;
  sub_25292E574();
  sub_252952018();
  uint64_t v31 = v46;
  uint64_t v32 = v45;
  uint64_t v30 = v47;
  uint64_t v9 = v48;
  long long v41 = v50;
  long long v42 = v49;
  long long v39 = v52;
  long long v40 = v51;
  long long v37 = v54;
  long long v38 = v53;
  long long v35 = v56;
  long long v36 = v55;
  long long v33 = v58;
  long long v34 = v57;
  int v88 = v59;
  char v89 = 4;
  swift_bridgeObjectRetain();
  sub_252952018();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
  uint64_t v28 = *((void *)&v75 + 1);
  uint64_t v29 = v75;
  uint64_t v26 = *((void *)&v76 + 1);
  uint64_t v27 = v76;
  long long v24 = v78;
  long long v25 = v77;
  long long v22 = v80;
  long long v23 = v79;
  long long v20 = v82;
  long long v21 = v81;
  long long v18 = v84;
  long long v19 = v83;
  long long v16 = v86;
  long long v17 = v85;
  char v10 = v87;
  uint64_t v12 = v31;
  uint64_t v11 = v32;
  *(void *)&v44[0] = v32;
  *((void *)&v44[0] + 1) = v31;
  uint64_t v13 = v30;
  *(void *)&v44[1] = v30;
  *((void *)&v44[1] + 1) = v9;
  v44[2] = v42;
  v44[3] = v41;
  v44[4] = v40;
  v44[5] = v39;
  v44[6] = v38;
  v44[7] = v37;
  v44[8] = v36;
  v44[9] = v35;
  v44[10] = v34;
  v44[11] = v33;
  unsigned __int8 v14 = v88;
  LOBYTE(v44[12]) = v88;
  v44[13] = v75;
  v44[14] = v76;
  v44[15] = v77;
  v44[16] = v78;
  v44[17] = v79;
  v44[18] = v80;
  v44[19] = v81;
  v44[20] = v82;
  v44[21] = v83;
  v44[22] = v84;
  v44[23] = v85;
  v44[24] = v86;
  LOBYTE(v44[25]) = v87;
  sub_252931F70((uint64_t)v44);
  swift_bridgeObjectRelease();
  memcpy(v43, v44, 0x191uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v45 = v11;
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  uint64_t v48 = v9;
  long long v49 = v42;
  long long v50 = v41;
  long long v51 = v40;
  long long v52 = v39;
  long long v53 = v38;
  long long v54 = v37;
  long long v55 = v36;
  long long v56 = v35;
  long long v57 = v34;
  long long v58 = v33;
  unsigned __int8 v59 = v14;
  uint64_t v60 = v29;
  uint64_t v61 = v28;
  uint64_t v62 = v27;
  uint64_t v63 = v26;
  long long v64 = v25;
  long long v65 = v24;
  long long v66 = v23;
  long long v67 = v22;
  long long v68 = v21;
  long long v69 = v20;
  long long v70 = v19;
  long long v71 = v18;
  long long v72 = v17;
  long long v73 = v16;
  char v74 = v10;
  return sub_252931FA8((uint64_t)&v45);
}

unint64_t sub_252931F1C()
{
  unint64_t result = qword_269C33318;
  if (!qword_269C33318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33318);
  }
  return result;
}

uint64_t sub_252931F70(uint64_t a1)
{
  return a1;
}

uint64_t sub_252931FA8(uint64_t a1)
{
  return a1;
}

uint64_t Skeleton.Bone.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33320);
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  uint64_t v51 = v2[1];
  uint64_t v52 = v7;
  uint64_t v8 = v2[2];
  uint64_t v49 = v2[3];
  uint64_t v50 = v8;
  long long v9 = *((_OWORD *)v2 + 2);
  long long v61 = *((_OWORD *)v2 + 3);
  long long v62 = v9;
  long long v10 = *((_OWORD *)v2 + 4);
  long long v59 = *((_OWORD *)v2 + 5);
  long long v60 = v10;
  long long v11 = *((_OWORD *)v2 + 6);
  long long v57 = *((_OWORD *)v2 + 7);
  long long v58 = v11;
  long long v12 = *((_OWORD *)v2 + 8);
  long long v55 = *((_OWORD *)v2 + 9);
  long long v56 = v12;
  long long v13 = *((_OWORD *)v2 + 10);
  long long v53 = *((_OWORD *)v2 + 11);
  long long v54 = v13;
  int v14 = *((unsigned __int8 *)v2 + 192);
  uint64_t v33 = v2[26];
  uint64_t v15 = v2[27];
  uint64_t v37 = v2[28];
  uint64_t v38 = v15;
  uint64_t v36 = v2[29];
  long long v16 = *((_OWORD *)v2 + 15);
  long long v47 = *((_OWORD *)v2 + 16);
  long long v48 = v16;
  long long v17 = *((_OWORD *)v2 + 17);
  long long v45 = *((_OWORD *)v2 + 18);
  long long v46 = v17;
  long long v18 = *((_OWORD *)v2 + 19);
  long long v43 = *((_OWORD *)v2 + 20);
  long long v44 = v18;
  long long v19 = *((_OWORD *)v2 + 21);
  long long v41 = *((_OWORD *)v2 + 22);
  long long v42 = v19;
  long long v20 = *((_OWORD *)v2 + 23);
  long long v39 = *((_OWORD *)v2 + 24);
  long long v40 = v20;
  int v21 = *((unsigned __int8 *)v2 + 400);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252931F1C();
  sub_252952208();
  int v34 = v14;
  int v35 = v21;
  LOBYTE(v66) = 0;
  uint64_t v96 = v4;
  uint64_t v22 = v64;
  sub_252952068();
  if (v22) {
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v6, v96);
  }
  *(void *)&long long v66 = v52;
  *((void *)&v66 + 1) = v51;
  uint64_t v67 = v50;
  uint64_t v68 = v49;
  long long v69 = v62;
  long long v70 = v61;
  long long v71 = v60;
  long long v72 = v59;
  long long v73 = v58;
  long long v74 = v57;
  long long v75 = v56;
  long long v76 = v55;
  long long v77 = v54;
  long long v78 = v53;
  char v79 = v34;
  uint64_t v26 = *(uint64_t *)((char *)v2 + 193);
  long long v25 = (uint64_t *)((char *)v2 + 193);
  *(void *)long long v80 = v26;
  uint64_t v27 = v33;
  *(void *)&v80[7] = *(void *)((char *)v25 + 7);
  uint64_t v81 = v33;
  uint64_t v82 = v38;
  uint64_t v83 = v37;
  uint64_t v84 = v36;
  long long v85 = v48;
  long long v86 = v47;
  long long v87 = v46;
  long long v88 = v45;
  long long v89 = v44;
  long long v90 = v43;
  long long v91 = v42;
  long long v92 = v41;
  long long v93 = v40;
  long long v94 = v39;
  char v95 = v35;
  Skeleton.Bone.length.getter(*(double *)&v39, *(double *)&v40, v23);
  LOBYTE(v66) = 1;
  sub_252952078();
  *(void *)&long long v66 = v52;
  *((void *)&v66 + 1) = v51;
  uint64_t v67 = v50;
  uint64_t v68 = v49;
  long long v69 = v62;
  long long v70 = v61;
  long long v71 = v60;
  long long v72 = v59;
  long long v73 = v58;
  long long v74 = v57;
  long long v75 = v56;
  long long v76 = v55;
  long long v77 = v54;
  long long v78 = v53;
  char v79 = v34;
  *(void *)long long v80 = *v25;
  *(void *)&v80[7] = *(void *)((char *)v25 + 7);
  uint64_t v81 = v27;
  uint64_t v82 = v38;
  uint64_t v83 = v37;
  uint64_t v84 = v36;
  long long v85 = v48;
  long long v86 = v47;
  long long v87 = v46;
  long long v88 = v45;
  long long v89 = v44;
  long long v90 = v43;
  long long v91 = v42;
  long long v92 = v41;
  long long v93 = v40;
  long long v94 = v39;
  char v95 = v35;
  *(double *)&long long v29 = Skeleton.Bone.unitDirection.getter(*(double *)&v39, *(double *)&v40, v28);
  long long v66 = v29;
  char v65 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C330F0);
  sub_252932568();
  sub_252952098();
  *(void *)&long long v66 = v52;
  *((void *)&v66 + 1) = v51;
  uint64_t v67 = v50;
  uint64_t v68 = v49;
  long long v69 = v62;
  long long v70 = v61;
  long long v71 = v60;
  long long v72 = v59;
  long long v73 = v58;
  long long v74 = v57;
  long long v75 = v56;
  long long v76 = v55;
  long long v77 = v54;
  long long v78 = v53;
  char v79 = v14 & 1;
  char v65 = 3;
  sub_25292ECFC();
  sub_252952098();
  uint64_t v30 = v63;
  *(void *)&long long v66 = v27;
  *((void *)&v66 + 1) = v38;
  uint64_t v67 = v37;
  uint64_t v68 = v36;
  long long v69 = v48;
  long long v70 = v47;
  long long v71 = v46;
  long long v72 = v45;
  long long v73 = v44;
  long long v74 = v43;
  long long v75 = v42;
  long long v76 = v41;
  long long v77 = v40;
  long long v78 = v39;
  char v79 = v35 & 1;
  char v65 = 4;
  uint64_t v31 = v96;
  sub_252952098();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v6, v31);
}

unint64_t sub_252932568()
{
  unint64_t result = qword_269C330E8;
  if (!qword_269C330E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C330F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C330E8);
  }
  return result;
}

uint64_t sub_2529325C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Skeleton.Bone.init(from:)(a1, a2);
}

uint64_t sub_2529325DC(void *a1)
{
  return Skeleton.Bone.encode(to:)(a1);
}

unsigned char *_s10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2529326C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_3()
{
  return &_s10CodingKeysON_3;
}

unint64_t sub_2529326FC()
{
  unint64_t result = qword_269C33328;
  if (!qword_269C33328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33328);
  }
  return result;
}

unint64_t sub_252932754()
{
  unint64_t result = qword_269C33330;
  if (!qword_269C33330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33330);
  }
  return result;
}

unint64_t sub_2529327AC()
{
  unint64_t result = qword_269C33338;
  if (!qword_269C33338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C33338);
  }
  return result;
}

uint64_t sub_252932800()
{
  unint64_t v0 = sub_252951F98();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25293284C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_252922FA8(0, v6, 0);
  int64_t v7 = v6;
  unint64_t v31 = v4;
  uint64_t v33 = a1;
  int64_t v30 = v5;
  if (v6)
  {
    uint64_t v8 = (void *)(a1 + 32);
    long long v9 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v11 = v7;
    uint64_t v12 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_28;
      }
      uint64_t v13 = *v8 - *v9;
      if (__OFSUB__(*v8, *v9)) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v34 + 16);
      unint64_t v14 = *(void *)(v34 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v28 = v12;
        uint64_t result = sub_252922FA8(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v28;
      }
      --v5;
      *(void *)(v34 + 16) = v15 + 1;
      *(void *)(v34 + 8 * v15 + 32) = v13;
      --v4;
      ++v9;
      ++v8;
      if (!--v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = a2;
LABEL_14:
    if (v31 <= v30)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v34;
    }
    uint64_t v16 = 0;
    if (v7 <= v30) {
      int64_t v17 = v30;
    }
    else {
      int64_t v17 = v7;
    }
    int64_t v18 = v17 - v7;
    unint64_t v19 = v31 - v7;
    uint64_t v20 = 8 * v7 + 32;
    uint64_t v21 = v33 + v20;
    uint64_t v22 = v12 + v20;
    while (v19 != v16)
    {
      if (v30 - v7 == v16) {
        goto LABEL_26;
      }
      if (v18 == v16) {
        goto LABEL_31;
      }
      uint64_t v23 = *(void *)(v21 + 8 * v16);
      uint64_t v24 = *(void *)(v22 + 8 * v16);
      uint64_t v25 = v23 - v24;
      if (__OFSUB__(v23, v24)) {
        goto LABEL_32;
      }
      unint64_t v27 = *(void *)(v34 + 16);
      unint64_t v26 = *(void *)(v34 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t v29 = v12;
        uint64_t v32 = v18;
        uint64_t result = sub_252922FA8(v26 > 1, v27 + 1, 1);
        int64_t v18 = v32;
        uint64_t v12 = v29;
      }
      *(void *)(v34 + 16) = v27 + 1;
      *(void *)(v34 + 8 * v27 + 32) = v25;
      if (v19 == ++v16) {
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_252932A80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_252952108();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  long long v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_252952108() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_252932B48(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_252951A08();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v87[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  long long v10 = &v87[-v9];
  int v11 = *a1;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex) = 0;
  uint64_t v12 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  *(void *)(v2 + v12) = sub_2528F085C(MEMORY[0x263F8EE78]);
  uint64_t v14 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction;
  *(void *)(v2 + v14) = sub_2528F085C(v13);
  uint64_t v15 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction;
  *(void *)(v2 + v15) = sub_2528F085C(v13);
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionTimeState) = v13;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory) = v13;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount) = 0;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory) = v13;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_completedRepetitions) = v13;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass) = v13;
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass) = v13;
  *(_DWORD *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevClass) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_modelType) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C28);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_252953740;
  LOBYTE(v95) = v11;
  sub_25293FD58();
  uint64_t v18 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 32) = v18;
  sub_2529519E8();
  LOBYTE(v95) = v11;
  sub_25293FD58();
  uint64_t v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  float v95 = (float)v20;
  sub_252951728();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v21 = v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_defaultDistribution;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_defaultDistribution, v10, v4);
  uint64_t v89 = v5;
  uint64_t v90 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution, v21, v4);
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_medianFilter) = 5;
  *(void *)(v2 + 16) = 0x3EB333333F400000;
  *(_DWORD *)(v2 + 24) = 1056964608;
  uint64_t v22 = (void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionTimeState);
  swift_beginAccess();
  void *v22 = v13;
  swift_bridgeObjectRelease();
  *(void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount) = 0;
  uint64_t v91 = v2;
  uint64_t v23 = (void *)(v2 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_completedRepetitions);
  swift_beginAccess();
  *uint64_t v23 = v13;
  swift_bridgeObjectRelease();
  int v88 = v11;
  char v94 = v11;
  sub_25293FD58();
  uint64_t v25 = *(void *)(v24 + 16);
  swift_bridgeObjectRelease();
  uint64_t v92 = v25;
  if (!v25)
  {
LABEL_38:
    char v76 = v88;
    char v94 = v88;
    sub_25293FD58();
    unint64_t v78 = *(void *)(v77 + 16);
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_2528EC664(0, v78);
    uint64_t v80 = v91;
    uint64_t v81 = (uint64_t *)(v91 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass);
    swift_beginAccess();
    *uint64_t v81 = v79;
    swift_bridgeObjectRelease();
    LOBYTE(v93) = v76;
    sub_25293FD58();
    unint64_t v83 = *(void *)(v82 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v80 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass) = sub_2528EC664(0, v83);
    swift_bridgeObjectRelease();
    uint64_t v84 = v80 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_defaultDistribution;
    uint64_t v85 = v80 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 24))(v85, v84, v90);
    swift_endAccess();
    return v80;
  }
  uint64_t v26 = 0;
  unint64_t v27 = (void *)(v91 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction);
  uint64_t v28 = (void *)(v91 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction);
  uint64_t v29 = (void *)(v91 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction);
  while (1)
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v93 = (void *)*v27;
    uint64_t v32 = v93;
    *unint64_t v27 = 0x8000000000000000;
    unint64_t v34 = sub_252923060(v26);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v41 = v93;
        if (v33) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_25293A0E0();
        long long v41 = v93;
        if (v38) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_252939CEC(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_252923060(v26);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_45;
      }
      unint64_t v34 = v39;
      long long v41 = v93;
      if (v38)
      {
LABEL_12:
        uint64_t v42 = v41[7];
        swift_bridgeObjectRelease();
        *(void *)(v42 + 8 * v34) = v13;
        goto LABEL_16;
      }
    }
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v43 = 8 * v34;
    *(void *)(v41[6] + v43) = v26;
    *(void *)(v41[7] + v43) = v13;
    uint64_t v44 = v41[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_42;
    }
    v41[2] = v46;
LABEL_16:
    *unint64_t v27 = v41;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    long long v93 = (void *)*v28;
    long long v48 = v93;
    *uint64_t v28 = 0x8000000000000000;
    unint64_t v50 = sub_252923060(v26);
    uint64_t v51 = v48[2];
    BOOL v52 = (v49 & 1) == 0;
    uint64_t v53 = v51 + v52;
    if (__OFADD__(v51, v52)) {
      goto LABEL_40;
    }
    char v54 = v49;
    if (v48[3] >= v53)
    {
      if (v47)
      {
        long long v57 = v93;
        if (v49) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_25293A0E0();
        long long v57 = v93;
        if (v54) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_252939CEC(v53, v47);
      unint64_t v55 = sub_252923060(v26);
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_45;
      }
      unint64_t v50 = v55;
      long long v57 = v93;
      if (v54)
      {
LABEL_23:
        uint64_t v58 = v57[7];
        swift_bridgeObjectRelease();
        *(void *)(v58 + 8 * v50) = v13;
        goto LABEL_27;
      }
    }
    v57[(v50 >> 6) + 8] |= 1 << v50;
    uint64_t v59 = 8 * v50;
    *(void *)(v57[6] + v59) = v26;
    *(void *)(v57[7] + v59) = v13;
    uint64_t v60 = v57[2];
    BOOL v45 = __OFADD__(v60, 1);
    uint64_t v61 = v60 + 1;
    if (v45) {
      goto LABEL_43;
    }
    v57[2] = v61;
LABEL_27:
    *uint64_t v28 = v57;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    long long v93 = (void *)*v29;
    uint64_t v63 = v93;
    *uint64_t v29 = 0x8000000000000000;
    unint64_t v65 = sub_252923060(v26);
    uint64_t v66 = v63[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67)) {
      goto LABEL_41;
    }
    char v69 = v64;
    if (v63[3] >= v68)
    {
      if (v62)
      {
        long long v72 = v93;
        if (v64) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25293A0E0();
        long long v72 = v93;
        if (v69) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_252939CEC(v68, v62);
      unint64_t v70 = sub_252923060(v26);
      if ((v69 & 1) != (v71 & 1)) {
        goto LABEL_45;
      }
      unint64_t v65 = v70;
      long long v72 = v93;
      if (v69)
      {
LABEL_3:
        uint64_t v30 = v72[7];
        swift_bridgeObjectRelease();
        *(void *)(v30 + 8 * v65) = v13;
        goto LABEL_4;
      }
    }
    v72[(v65 >> 6) + 8] |= 1 << v65;
    uint64_t v73 = 8 * v65;
    *(void *)(v72[6] + v73) = v26;
    *(void *)(v72[7] + v73) = v13;
    uint64_t v74 = v72[2];
    BOOL v45 = __OFADD__(v74, 1);
    uint64_t v75 = v74 + 1;
    if (v45) {
      goto LABEL_44;
    }
    v72[2] = v75;
LABEL_4:
    ++v26;
    *uint64_t v29 = v72;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (v92 == v26) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_252952128();
  __break(1u);
  return result;
}

uint64_t sub_25293334C()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionTimeState);
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x263F8EE78];
  void *v1 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount) = 0;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory);
  swift_beginAccess();
  void *v4 = v2;
  swift_bridgeObjectRelease();
  sub_25293FD58();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v58 = v6;
  if (!v6) {
    return result;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction);
  long long v10 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction);
  int v11 = (void *)(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction);
  while (1)
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = (void *)*v9;
    uint64_t v59 = (void *)*v9;
    void *v9 = 0x8000000000000000;
    unint64_t v16 = sub_252923060(v8);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v20 = v15;
    if (v14[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v23 = v59;
        if (v15) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_25293A0E0();
        uint64_t v23 = v59;
        if (v20) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_252939CEC(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_252923060(v8);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_45;
      }
      unint64_t v16 = v21;
      uint64_t v23 = v59;
      if (v20)
      {
LABEL_12:
        uint64_t v24 = v23[7];
        swift_bridgeObjectRelease();
        *(void *)(v24 + 8 * v16) = v2;
        goto LABEL_16;
      }
    }
    v23[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v25 = 8 * v16;
    *(void *)(v23[6] + v25) = v8;
    *(void *)(v23[7] + v25) = v2;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_42;
    }
    v23[2] = v28;
LABEL_16:
    void *v9 = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = (void *)*v10;
    uint64_t v60 = (void *)*v10;
    void *v10 = 0x8000000000000000;
    unint64_t v32 = sub_252923060(v8);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      goto LABEL_40;
    }
    char v36 = v31;
    if (v30[3] >= v35)
    {
      if (v29)
      {
        unint64_t v39 = v60;
        if (v31) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_25293A0E0();
        unint64_t v39 = v60;
        if (v36) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_252939CEC(v35, v29);
      unint64_t v37 = sub_252923060(v8);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_45;
      }
      unint64_t v32 = v37;
      unint64_t v39 = v60;
      if (v36)
      {
LABEL_23:
        uint64_t v40 = v39[7];
        swift_bridgeObjectRelease();
        *(void *)(v40 + 8 * v32) = v2;
        goto LABEL_27;
      }
    }
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v41 = 8 * v32;
    *(void *)(v39[6] + v41) = v8;
    *(void *)(v39[7] + v41) = v2;
    uint64_t v42 = v39[2];
    BOOL v27 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v27) {
      goto LABEL_43;
    }
    void v39[2] = v43;
LABEL_27:
    void *v10 = v39;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    BOOL v45 = (void *)*v11;
    uint64_t v61 = (void *)*v11;
    void *v11 = 0x8000000000000000;
    unint64_t v47 = sub_252923060(v8);
    uint64_t v48 = v45[2];
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49)) {
      goto LABEL_41;
    }
    char v51 = v46;
    if (v45[3] >= v50)
    {
      if (v44)
      {
        char v54 = v61;
        if (v46) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25293A0E0();
        char v54 = v61;
        if (v51) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_252939CEC(v50, v44);
      unint64_t v52 = sub_252923060(v8);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_45;
      }
      unint64_t v47 = v52;
      char v54 = v61;
      if (v51)
      {
LABEL_3:
        uint64_t v12 = v54[7];
        swift_bridgeObjectRelease();
        *(void *)(v12 + 8 * v47) = v2;
        goto LABEL_4;
      }
    }
    v54[(v47 >> 6) + 8] |= 1 << v47;
    uint64_t v55 = 8 * v47;
    *(void *)(v54[6] + v55) = v8;
    *(void *)(v54[7] + v55) = v2;
    uint64_t v56 = v54[2];
    BOOL v27 = __OFADD__(v56, 1);
    uint64_t v57 = v56 + 1;
    if (v27) {
      goto LABEL_44;
    }
    v54[2] = v57;
LABEL_4:
    ++v8;
    void *v11 = v54;
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    if (v58 == v8) {
      return result;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_252952128();
  __break(1u);
  return result;
}

uint64_t sub_252933820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  void v6[5] = a4;
  _OWORD v6[2] = a1;
  v6[3] = a2;
  v6[8] = *v5;
  uint64_t v7 = sub_252951598();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252933910, 0, 0);
}

uint64_t sub_252933910()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  int8x16_t v9 = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  long long v10 = *(_OWORD *)(v0 + 32);
  sub_252951588();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + 16) = v2;
  *(int8x16_t *)(v3 + 24) = v9;
  *(_OWORD *)(v3 + 40) = v10;
  *(void *)(v3 + 56) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  uint64_t v5 = sub_252951A08();
  void *v4 = v0;
  v4[1] = sub_252933A1C;
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270EE76C0](v7, v6, &unk_269C33380, v3, v5);
}

uint64_t sub_252933A1C()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_252933BE0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_252933BE0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252933C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[62] = a5;
  v6[63] = a6;
  v6[60] = a3;
  v6[61] = a4;
  v6[58] = a1;
  v6[59] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  v6[64] = v7;
  v6[65] = *(void *)(v7 - 8);
  v6[66] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C33388);
  v6[67] = v8;
  v6[68] = *(void *)(v8 - 8);
  v6[69] = swift_task_alloc();
  uint64_t v9 = sub_252951A08();
  v6[70] = v9;
  v6[71] = *(void *)(v9 - 8);
  v6[72] = swift_task_alloc();
  v6[73] = swift_task_alloc();
  v6[74] = swift_task_alloc();
  v6[75] = swift_task_alloc();
  v6[76] = swift_task_alloc();
  v6[77] = swift_task_alloc();
  v6[78] = swift_task_alloc();
  v6[79] = swift_task_alloc();
  v6[80] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252933E30, 0, 0);
}

uint64_t sub_252933E30()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 648) = v6;
  *(void *)(v0 + 656) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v3);
  uint64_t v7 = (unint64_t *)(v5 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionTimeState);
  swift_beginAccess();
  if (*(void *)(*v7 + 16) >= 0xBuLL)
  {
    uint64_t v8 = *(void *)(v0 + 632);
    uint64_t v9 = *(void *)(v0 + 568);
    uint64_t v10 = *(void *)(v0 + 560);
    swift_beginAccess();
    sub_252936B74(0, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_endAccess();
  }
  sub_2529516E8();
  swift_beginAccess();
  unint64_t v11 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v7 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_2528C4584(0, *(void *)(v11 + 16) + 1, 1, v11);
    unint64_t *v7 = v11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_2528C4584(v13 > 1, v14 + 1, 1, v11);
    unint64_t *v7 = v11;
  }
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v16 = *(void *)(v0 + 568);
  uint64_t v17 = *(void *)(v0 + 560);
  *(void *)(v11 + 16) = v14 + 1;
  BOOL v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32);
  v16 += 32;
  int v19 = *(_DWORD *)(v16 + 48);
  *(_DWORD *)(v0 + 868) = v19;
  uint64_t v20 = *(void *)(v16 + 40);
  *(void *)(v0 + 664) = v20;
  *(void *)(v0 + 672) = v18;
  *(void *)(v0 + 680) = v16 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v18(v11 + ((v19 + 32) & ~(unint64_t)v19) + v20 * v14, v15, v17);
  unint64_t v21 = *v7;
  swift_endAccess();
  if (*(void *)(v21 + 16) < 6uLL)
  {
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
    uint64_t v27 = *(void *)(v0 + 640);
    uint64_t v28 = *(void *)(v0 + 600);
    uint64_t v29 = *(void *)(v0 + 568);
    uint64_t v30 = *(void *)(v0 + 480);
    uint64_t v31 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
    *(void *)(v0 + 720) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
    uint64_t v32 = *(void *)(v0 + 560);
    *(void *)(v0 + 728) = *(void *)(v30 + v31);
    uint64_t v33 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution;
    *(void *)(v0 + 736) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution;
    uint64_t v34 = v30 + v33;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(v34, v27, v32);
    swift_endAccess();
    v26(v28, v34, v32);
    uint64_t v35 = sub_252951898();
    if (v35 == 1)
    {
      uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
      uint64_t v40 = *(void *)(v0 + 632);
      uint64_t v41 = *(void *)(v0 + 600);
      uint64_t v42 = *(void *)(v0 + 592);
      uint64_t v43 = *(void *)(v0 + 584);
      uint64_t v44 = *(void *)(v0 + 568);
      uint64_t v45 = *(void *)(v0 + 560);
      sub_252951948();
      sub_252951868();
      char v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      *(void *)(v0 + 744) = v46;
      *(void *)(v0 + 752) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v46(v43, v45);
      sub_252951658();
      v46(v42, v45);
      v46(v41, v45);
      swift_beginAccess();
      sub_2529517C8();
      v46(v40, v45);
      swift_endAccess();
      v48(v41, v34, v45);
      sub_252951938();
      v46(v41, v45);
      unint64_t v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 760) = v47;
      *unint64_t v47 = v0;
      v47[1] = sub_252934848;
      uint64_t v35 = *(void *)(v0 + 552);
      uint64_t v36 = MEMORY[0x263F8E548];
      uint64_t v38 = MEMORY[0x263F00CC8];
      uint64_t v39 = MEMORY[0x263F00CC0];
      uint64_t v37 = MEMORY[0x263F8E548];
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270EE76F8](v35, v36, v37, v38, v39);
  }
  else
  {
    *(void *)(v0 + 456) = v21;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C31D10);
    sub_2528AB6E8((unint64_t *)&qword_269C31D18, &qword_269C31D10);
    sub_2529516D8();
    char v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v22;
    void *v22 = v0;
    v22[1] = sub_252934368;
    uint64_t v23 = *(void *)(v0 + 616);
    uint64_t v24 = *(void *)(v0 + 608);
    return sub_2528A8460(v23, v24, 5);
  }
}

uint64_t sub_252934368()
{
  uint64_t v2 = (void *)*v1;
  v2[87] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[76];
  uint64_t v4 = v2[71];
  uint64_t v5 = v2[70];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v7 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v0)
  {
    v2[104] = v6;
    v2[105] = v7;
    v6(v3, v5);
    uint64_t v8 = sub_252936A54;
  }
  else
  {
    v2[88] = v6;
    v2[89] = v7;
    v6(v3, v5);
    uint64_t v8 = sub_2529344F4;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2529344F4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[88];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[84];
  uint64_t v3 = v0[80];
  uint64_t v4 = v0[79];
  uint64_t v5 = v0[77];
  uint64_t v6 = v0[70];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31E08);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_252953740;
  uint64_t v8 = MEMORY[0x263F00C68];
  *(void *)(v7 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 32) = -1;
  sub_252951A48();
  swift_bridgeObjectRelease();
  v1(v5, v6);
  v1(v3, v6);
  v2(v3, v4, v6);
  uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[81];
  uint64_t v10 = v0[80];
  uint64_t v11 = v0[75];
  uint64_t v12 = v0[71];
  uint64_t v13 = v0[60];
  uint64_t v14 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
  v0[90] = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
  uint64_t v15 = v0[70];
  v0[91] = *(void *)(v13 + v14);
  uint64_t v16 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution;
  v0[92] = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution;
  uint64_t v17 = v13 + v16;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v17, v10, v15);
  swift_endAccess();
  v9(v11, v17, v15);
  uint64_t v18 = sub_252951898();
  if (v18 == 1)
  {
    uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t))v0[81];
    uint64_t v23 = v0[79];
    uint64_t v24 = v0[75];
    uint64_t v25 = v0[74];
    uint64_t v26 = v0[73];
    uint64_t v27 = v0[71];
    uint64_t v28 = v0[70];
    sub_252951948();
    sub_252951868();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v0[93] = v29;
    v0[94] = (v27 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v29(v26, v28);
    sub_252951658();
    v29(v25, v28);
    v29(v24, v28);
    swift_beginAccess();
    sub_2529517C8();
    v29(v23, v28);
    swift_endAccess();
    v32(v24, v17, v28);
    sub_252951938();
    v29(v24, v28);
    uint64_t v30 = (void *)swift_task_alloc();
    v0[95] = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_252934848;
    uint64_t v18 = v0[69];
    uint64_t v19 = MEMORY[0x263F8E548];
    uint64_t v21 = MEMORY[0x263F00CC8];
    uint64_t v22 = MEMORY[0x263F00CC0];
    uint64_t v20 = MEMORY[0x263F8E548];
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270EE76F8](v18, v19, v20, v21, v22);
}

uint64_t sub_252934848()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 744);
  uint64_t v2 = *(void *)(*(void *)v0 + 632);
  uint64_t v3 = *(void *)(*(void *)v0 + 560);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_2529349A8, 0, 0);
}

uint64_t sub_2529349A8()
{
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 536);
  sub_2528AB6E8(&qword_269C33390, &qword_269C33388);
  sub_2529515C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_DWORD *)(v0 + 872) = *(_DWORD *)(v0 + 856);
  if (*(unsigned char *)(v0 + 860))
  {
    sub_252911D18();
    swift_allocError();
    unsigned char *v4 = 2;
    swift_willThrow();
    (*(void (**)(void, void))(v0 + 744))(*(void *)(v0 + 640), *(void *)(v0 + 560));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    uint64_t v8 = *(void *)(v0 + 600);
    uint64_t v9 = *(void *)(v0 + 560);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 648))(v8, *(void *)(v0 + 480) + *(void *)(v0 + 736), v9);
    sub_252951838();
    v7(v8, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 768) = v10;
    void *v10 = v0;
    v10[1] = sub_252934C54;
    uint64_t v11 = *(void *)(v0 + 528);
    uint64_t v12 = MEMORY[0x263F8D5C8];
    uint64_t v13 = MEMORY[0x263F00C58];
    uint64_t v14 = MEMORY[0x263F00C50];
    uint64_t v15 = MEMORY[0x263F8D5C8];
    return MEMORY[0x270EE76F8](v11, v12, v15, v13, v14);
  }
}

uint64_t sub_252934C54()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 744);
  uint64_t v2 = *(void *)(*(void *)v0 + 632);
  uint64_t v3 = *(void *)(*(void *)v0 + 560);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_252934DB4, 0, 0);
}

uint64_t sub_252934DB4()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 512);
  sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  sub_2529515C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((*(unsigned char *)(v0 + 852) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v0 + 480);
    int v8 = *(_DWORD *)(v0 + 848);
    uint64_t v9 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory;
    *(void *)(v0 + 776) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory;
    uint64_t v10 = (unint64_t *)(v7 + v9);
    swift_beginAccess();
    if (*(void *)(*v10 + 16) > 5uLL)
    {
      uint64_t v11 = swift_beginAccess();
      if (!*(void *)(*v10 + 16))
      {
        __break(1u);
        return MEMORY[0x270FA2498](v11, v12, v13);
      }
      sub_25293A540(0, 1);
      swift_endAccess();
    }
    uint64_t v14 = (unint64_t *)(v0 + 184);
    swift_beginAccess();
    unint64_t v15 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v10 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = (unint64_t)sub_2528C4204(0, *(void *)(v15 + 16) + 1, 1, (char *)v15);
      unint64_t *v10 = v15;
    }
    unint64_t v18 = *(void *)(v15 + 16);
    unint64_t v17 = *(void *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = (unint64_t)sub_2528C4204((char *)(v17 > 1), v18 + 1, 1, (char *)v15);
      unint64_t *v10 = v15;
    }
    uint64_t v19 = *(int *)(v0 + 872);
    uint64_t v20 = *(void *)(v0 + 720);
    uint64_t v21 = *(void *)(v0 + 480);
    *(void *)(v15 + 16) = v18 + 1;
    *(_DWORD *)(v15 + 4 * v18 + 32) = v8;
    swift_endAccess();
    *(void *)(v21 + v20) = v19;
    uint64_t v22 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount;
    *(void *)(v0 + 784) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount;
    uint64_t v23 = *(void *)(v21 + v22);
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
      uint64_t v27 = *(void *)(v0 + 576);
      uint64_t v28 = *(void *)(v0 + 560);
      uint64_t v30 = *(void *)(v0 + 480);
      uint64_t v29 = *(void *)(v0 + 488);
      *(void *)(v21 + v22) = v25;
      v26(v27, v29, v28);
      uint64_t v31 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory;
      *(void *)(v0 + 792) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory;
      uint64_t v14 = (unint64_t *)(v30 + v31);
      swift_beginAccess();
      unint64_t v15 = *v14;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v14 = v15;
      if (v32)
      {
LABEL_14:
        unint64_t v34 = *(void *)(v15 + 16);
        unint64_t v33 = *(void *)(v15 + 24);
        if (v34 >= v33 >> 1)
        {
          unint64_t v15 = sub_2528C4584(v33 > 1, v34 + 1, 1, v15);
          *uint64_t v14 = v15;
        }
        uint64_t v35 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 672);
        uint64_t v36 = *(void *)(v0 + 664);
        uint64_t v37 = *(unsigned __int8 *)(v0 + 868);
        uint64_t v38 = *(void *)(v0 + 576);
        uint64_t v39 = *(void *)(v0 + 560);
        *(void *)(v15 + 16) = v34 + 1;
        v35(v15 + ((v37 + 32) & ~v37) + v36 * v34, v38, v39);
        swift_endAccess();
        uint64_t v40 = swift_task_alloc();
        *(void *)(v0 + 800) = v40;
        *(void *)uint64_t v40 = v0;
        *(void *)(v40 + 8) = sub_252935238;
        uint64_t v41 = *(void *)(v0 + 480);
        long long v42 = *(_OWORD *)(v0 + 496);
        *(void *)(v40 + 176) = *(void *)(v0 + 728);
        *(void *)(v40 + 184) = v41;
        *(_OWORD *)(v40 + 160) = v42;
        uint64_t v11 = (uint64_t)sub_252937CE8;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        return MEMORY[0x270FA2498](v11, v12, v13);
      }
    }
    unint64_t v15 = sub_2528C4584(0, *(void *)(v15 + 16) + 1, 1, v15);
    *uint64_t v14 = v15;
    goto LABEL_14;
  }
  sub_252911D18();
  swift_allocError();
  unsigned char *v4 = 2;
  swift_willThrow();
  (*(void (**)(void, void))(v0 + 744))(*(void *)(v0 + 640), *(void *)(v0 + 560));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_252935238()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252935334, 0, 0);
}

uint64_t sub_252935334()
{
  uint64_t v131 = v0;
  uint64_t v5 = (uint64_t *)(v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_9;
  }
  uint64_t v7 = v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction;
  swift_beginAccess();
  uint64_t v8 = *(void *)v7;
  if (!*(void *)(*(void *)v7 + 16)
    || (unint64_t v9 = sub_252923060(v0[91]), (v10 & 1) == 0)
    || (uint64_t v11 = v0[91],
        uint64_t v12 = *(void *)(*(void *)(v6 + 56) + 8 * v9),
        v0[101] = v12,
        unint64_t v13 = sub_252923060(v11),
        (v14 & 1) == 0))
  {
LABEL_9:
    uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[93];
    uint64_t v27 = v0[80];
    uint64_t v28 = v0[70];
    v0[53] = &unk_2702D1760;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C32790);
    sub_2528AB6E8((unint64_t *)&qword_269C32798, &qword_269C32790);
    sub_252951A18();
    v26(v27, v28);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  uint64_t v15 = v0[97];
  unint64_t v16 = v0[91];
  unint64_t v17 = *(uint64_t **)(*(void *)(v8 + 56) + 8 * v13);
  uint64_t v18 = v0[60];
  v0[102] = v17;
  uint64_t v19 = (uint64_t *)(*(void *)(*(void *)(v18 + v15) + 16) - 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_252936CD0(v16, v12, (uint64_t)v19);
  if ((~v20 & 0x101) == 0)
  {
    uint64_t v21 = (void *)swift_task_alloc();
    v0[103] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_252936264;
    uint64_t v22 = v0[60];
    v21[28] = v0[91];
    v21[29] = v22;
    v21[26] = v12;
    v21[27] = v17;
    uint64_t v23 = (uint64_t)sub_25293746C;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    return MEMORY[0x270FA2498](v23, v24, v25);
  }
  uint64_t v31 = (char *)v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v32 = &unk_269C3D000;
  uint64_t v128 = v0;
  if ((v31 & 0x10000) == 0)
  {
    if (!(v31 >> 24)) {
      goto LABEL_50;
    }
    uint64_t v33 = v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass;
    swift_beginAccess();
    unint64_t v34 = *(uint64_t **)v33;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v33 = v34;
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v36 = v0[91];
      if ((v36 & 0x8000000000000000) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v34 = sub_252939CC4(v34);
      *(void *)uint64_t v33 = v34;
      unint64_t v36 = v0[91];
      if ((v36 & 0x8000000000000000) == 0)
      {
LABEL_17:
        if (v36 < v34[2])
        {
          uint64_t v37 = v34 + 4;
          uint64_t v38 = v34[v36 + 4];
          BOOL v39 = __OFADD__(v38, 1);
          uint64_t v40 = v38 + 1;
          if (!v39)
          {
            uint64_t v33 = v0[98];
            unint64_t v34 = (uint64_t *)v0[60];
            v37[v36] = v40;
            swift_endAccess();
            uint64_t v41 = *(uint64_t *)((char *)v34 + v33);
            unint64_t v2 = v41 - 1;
            if (!__OFSUB__(v41, 1))
            {
              unint64_t v34 = (uint64_t *)(v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction);
              swift_beginAccess();
              uint64_t v42 = *v34;
              if (*(void *)(*v34 + 16))
              {
                unint64_t v43 = sub_252923060(v0[91]);
                if (v44)
                {
                  uint64_t v45 = *(void *)(*(void *)(*(void *)(v42 + 56) + 8 * v43) + 16);
                  uint64_t v1 = v2 - v45;
                  if (!__OFSUB__(v2, v45))
                  {
                    unint64_t v16 = v0[91];
                    LOBYTE(v130) = *(unsigned char *)(v0[60]
                                            + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_modelType);
                    sub_25293FD58();
                    if (v16 < *(void *)(v46 + 16))
                    {
                      uint64_t v47 = v0[91];
                      uint64_t v48 = v0[60];
                      uint64_t v49 = v46 + 16 * v47;
                      char v32 = *(void **)(v49 + 32);
                      unint64_t v16 = *(void *)(v49 + 40);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      uint64_t v33 = v48 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_completedRepetitions;
                      swift_beginAccess();
                      uint64_t v19 = *(uint64_t **)v33;
                      char v50 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)uint64_t v33 = v19;
                      if (v50) {
                        goto LABEL_25;
                      }
                      goto LABEL_104;
                    }
LABEL_103:
                    __break(1u);
LABEL_104:
                    uint64_t v19 = sub_2528C5350(0, v19[2] + 1, 1, v19);
                    *(void *)uint64_t v33 = v19;
LABEL_25:
                    uint64_t v3 = v1 & ~(v1 >> 63);
                    unint64_t v52 = v19[2];
                    unint64_t v51 = v19[3];
                    if (v52 >= v51 >> 1)
                    {
                      uint64_t v19 = sub_2528C5350((void *)(v51 > 1), v52 + 1, 1, v19);
                      *(void *)uint64_t v33 = v19;
                    }
                    v19[2] = v52 + 1;
                    char v53 = &v19[5 * v52];
                    v53[4] = v3;
                    *(int64x2_t *)(v53 + 5) = vdupq_n_s64(v2);
                    v53[7] = (uint64_t)v32;
                    v53[8] = v16;
                    swift_endAccess();
                    if (qword_269C31658 != -1) {
                      swift_once();
                    }
                    uint64_t v0 = v128;
                    uint64_t v54 = sub_252951338();
                    __swift_project_value_buffer(v54, (uint64_t)qword_269C3D730);
                    swift_retain();
                    uint64_t v55 = sub_252951318();
                    os_log_type_t v56 = sub_252951CF8();
                    if (os_log_type_enabled(v55, v56))
                    {
                      uint64_t v57 = swift_slowAlloc();
                      uint64_t v58 = swift_slowAlloc();
                      uint64_t v130 = v58;
                      *(_DWORD *)uint64_t v57 = 134218242;
                      v128[55] = *(void *)(*(void *)v33 + 16);
                      uint64_t v23 = sub_252951DE8();
                      *(_WORD *)(v57 + 12) = 2080;
                      uint64_t v59 = *(void *)(*(void *)v33 + 16);
                      if (!v59) {
                        goto LABEL_106;
                      }
                      uint64_t v60 = *(void *)v33 + 40 * v59;
                      uint64_t v3 = *(void *)(v60 + 16);
                      unint64_t v61 = *(void *)(v60 + 24);
                      swift_bridgeObjectRetain();
                      v128[56] = sub_25293961C(v3, v61, &v130);
                      sub_252951DE8();
                      swift_bridgeObjectRelease();
                      swift_release();
                      _os_log_impl(&dword_2528A2000, v55, v56, "total reps: %ld, last rep: %s", (uint8_t *)v57, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x2533C16C0](v58, -1, -1);
                      MEMORY[0x2533C16C0](v57, -1, -1);
                    }
                    else
                    {
                      swift_release();
                    }

                    uint64_t v77 = v128[99];
                    uint64_t v78 = v128[91];
                    uint64_t v79 = v128[60];
                    swift_beginAccess();
                    char v80 = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v130 = *v34;
                    *unint64_t v34 = 0x8000000000000000;
                    uint64_t v81 = MEMORY[0x263F8EE78];
                    sub_252939FA4(MEMORY[0x263F8EE78], v78, v80);
                    *unint64_t v34 = v130;
                    swift_bridgeObjectRelease();
                    uint64_t v23 = swift_endAccess();
                    uint64_t v82 = *(void *)(*(void *)(v79 + v77) + 16);
                    uint64_t v83 = *(void *)(v79
                                    + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount);
                    BOOL v39 = __OFADD__(v83, v82);
                    uint64_t v84 = v83 + v82;
                    if (!v39)
                    {
                      uint64_t v85 = v128[99];
                      uint64_t v86 = v128[60];
                      *(void *)(v79
                                + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount) = v84;
                      *(void *)(v86 + v85) = v81;
                      swift_bridgeObjectRelease();
                      goto LABEL_50;
                    }
                    __break(1u);
LABEL_106:
                    __break(1u);
                    return MEMORY[0x270FA2498](v23, v24, v25);
                  }
LABEL_102:
                  __break(1u);
                  goto LABEL_103;
                }
LABEL_101:
                __break(1u);
                goto LABEL_102;
              }
LABEL_100:
              __break(1u);
              goto LABEL_101;
            }
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
LABEL_98:
          __break(1u);
          goto LABEL_99;
        }
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
    }
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v62 = v0[60];
  uint64_t v63 = *(void *)(v62 + v0[97]);
  uint64_t v64 = *(void *)(v63 + 16);
  if (!v64)
  {
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v65 = *(void *)(v62 + v0[90]);
  int v4 = *(_DWORD *)(v63 + 4 * v64 + 28);
  unint64_t v17 = (uint64_t *)(v62 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction);
  swift_beginAccess();
  char v66 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v130 = *v17;
  uint64_t v31 = (char *)v130;
  uint64_t *v17 = 0x8000000000000000;
  unint64_t v16 = sub_252923060(v65);
  uint64_t v68 = *((void *)v31 + 2);
  BOOL v69 = (v67 & 1) == 0;
  uint64_t v70 = v68 + v69;
  if (__OFADD__(v68, v69))
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  char v71 = v67;
  if (*((void *)v31 + 3) >= v70)
  {
    if ((v66 & 1) == 0)
    {
      uint64_t v31 = (char *)&v130;
      sub_25293A0E0();
    }
LABEL_42:
    if (v71)
    {
      uint64_t v31 = *(char **)(*(void *)(v130 + 56) + 8 * v16);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_44:
        unint64_t v75 = *((void *)v31 + 2);
        unint64_t v74 = *((void *)v31 + 3);
        if (v75 >= v74 >> 1) {
          uint64_t v31 = sub_2528C4204((char *)(v74 > 1), v75 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v75 + 1;
        *(_DWORD *)&v31[4 * v75 + 32] = v4;
        uint64_t v76 = v130;
        *(void *)(*(void *)(v130 + 56) + 8 * v16) = v31;
        uint64_t *v17 = v76;
        swift_endAccess();
LABEL_50:
        uint64_t v87 = v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass;
        swift_beginAccess();
        uint64_t v126 = (void *)v87;
        uint64_t v88 = *(void *)v87;
        int64_t v89 = *(void *)(*(void *)v87 + 16);
        uint64_t v90 = MEMORY[0x263F8EE78];
        if (v89)
        {
          uint64_t v130 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_252922FC8(0, v89, 0);
          uint64_t v0 = 0;
          uint64_t v90 = v130;
          LODWORD(v91) = 0x80000000;
          do
          {
            uint64_t v92 = *(void *)(v88 + 8 * (void)v0 + 32);
            if (v92 < (uint64_t)0xFFFFFFFF80000000)
            {
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
              goto LABEL_86;
            }
            if (v92 > 0x7FFFFFFF) {
              goto LABEL_85;
            }
            uint64_t v130 = v90;
            uint64_t v3 = *(void *)(v90 + 16);
            unint64_t v93 = *(void *)(v90 + 24);
            if (v3 >= v93 >> 1)
            {
              sub_252922FC8(v93 > 1, v3 + 1, 1);
              uint64_t v90 = v130;
            }
            uint64_t v0 = (void *)((char *)v0 + 1);
            *(void *)(v90 + 16) = v3 + 1;
            *(_DWORD *)(v90 + 4 * v3 + 32) = v92;
          }
          while ((void *)v89 != v0);
          swift_bridgeObjectRelease();
          uint64_t v88 = *(void *)v87;
          uint64_t v94 = *(void *)(*(void *)v87 + 16);
          if (!v94)
          {
            LODWORD(v3) = 0;
            uint64_t v0 = v128;
            goto LABEL_66;
          }
          uint64_t v95 = 0;
          uint64_t v3 = 0;
          while (1)
          {
            uint64_t v96 = *(void *)(v88 + 8 * v95 + 32);
            BOOL v39 = __OFADD__(v3, v96);
            v3 += v96;
            if (v39) {
              break;
            }
            if (v94 == ++v95)
            {
              uint64_t v0 = v128;
              if (v3 < (uint64_t)0xFFFFFFFF80000000)
              {
                __break(1u);
                goto LABEL_84;
              }
              if (v3 <= 0x7FFFFFFF) {
                goto LABEL_66;
              }
              __break(1u);
              goto LABEL_64;
            }
          }
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
        }
        else
        {
LABEL_64:
          LODWORD(v3) = 0;
LABEL_66:
          uint64_t v97 = v0[60];
          uint64_t v124 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass;
          uint64_t v98 = *(void *)(v97 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass);
          uint64_t v125 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevClass;
          uint64_t v99 = *(unsigned int *)(v97 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevClass);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v91) = sub_25293A69C(v88, v98, v99);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v91 & 0x80000000) == 0)
          {
            if (*(void *)(v90 + 16) > (int)v91)
            {
              uint64_t v123 = v97;
              int v122 = *(_DWORD *)(v90 + 4 * (int)v91 + 32);
              LOBYTE(v130) = *(unsigned char *)(v0[60] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_modelType);
              sub_25293FD58();
              uint64_t v101 = *(void *)(v100 + 16);
              unint64_t v102 = 0x269C31000uLL;
              if (v101)
              {
                int v120 = (int)v91;
                int v121 = v3;
                uint64_t v3 = 0;
                uint64_t v91 = (unint64_t *)(v100 + 40);
                uint64_t v127 = *(void *)(v100 + 16);
                do
                {
                  unint64_t v103 = *v91;
                  uint64_t v129 = *(v91 - 1);
                  uint64_t v104 = *(void *)(v102 + 1624);
                  swift_bridgeObjectRetain();
                  if (v104 != -1) {
                    swift_once();
                  }
                  uint64_t v105 = sub_252951338();
                  __swift_project_value_buffer(v105, (uint64_t)qword_269C3D730);
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  uint64_t v106 = sub_252951318();
                  os_log_type_t v107 = sub_252951CE8();
                  if (os_log_type_enabled(v106, v107))
                  {
                    unint64_t v108 = v102;
                    uint64_t v109 = swift_slowAlloc();
                    uint64_t v110 = swift_slowAlloc();
                    uint64_t v130 = v110;
                    *(_DWORD *)uint64_t v109 = 136315394;
                    swift_bridgeObjectRetain();
                    *(void *)(v109 + 4) = sub_25293961C(v129, v103, &v130);
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v109 + 12) = 1024;
                    if ((unint64_t)v3 >= *(void *)(v90 + 16)) {
                      goto LABEL_87;
                    }
                    int v111 = *(_DWORD *)(v90 + 4 * v3 + 32);
                    swift_bridgeObjectRelease();
                    *(_DWORD *)(v109 + 14) = v111;
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_2528A2000, v106, v107, "%s: %d", (uint8_t *)v109, 0x12u);
                    swift_arrayDestroy();
                    MEMORY[0x2533C16C0](v110, -1, -1);
                    MEMORY[0x2533C16C0](v109, -1, -1);

                    uint64_t v0 = v128;
                    unint64_t v102 = v108;
                    uint64_t v101 = v127;
                  }
                  else
                  {
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                  }
                  ++v3;
                  v91 += 2;
                }
                while (v101 != v3);
                swift_bridgeObjectRelease();
                LODWORD(v91) = v120;
                LODWORD(v3) = v121;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              if (*(void *)(v102 + 1624) == -1) {
                goto LABEL_80;
              }
              goto LABEL_90;
            }
LABEL_89:
            __break(1u);
LABEL_90:
            swift_once();
LABEL_80:
            uint64_t v112 = sub_252951338();
            __swift_project_value_buffer(v112, (uint64_t)qword_269C3D730);
            uint64_t v113 = sub_252951318();
            os_log_type_t v114 = sub_252951CE8();
            if (os_log_type_enabled(v113, v114))
            {
              uint64_t v115 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v115 = 67109120;
              *((_DWORD *)v0 + 216) = v3;
              sub_252951DE8();
              _os_log_impl(&dword_2528A2000, v113, v114, "Total repetitions: Total reps: %d", v115, 8u);
              MEMORY[0x2533C16C0](v115, -1, -1);
            }
            uint64_t v116 = (void (*)(uint64_t, uint64_t))v128[93];
            uint64_t v117 = v128[80];
            uint64_t v118 = v128[70];

            *(void *)(v123 + v124) = *v126;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_DWORD *)(v123 + v125) = v91;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C70);
            uint64_t v119 = swift_allocObject();
            *(_OWORD *)(v119 + 16) = xmmword_252953970;
            *(_DWORD *)(v119 + 32) = v91;
            *(_DWORD *)(v119 + 36) = v122;
            *(_DWORD *)(v119 + 40) = v3;
            v128[54] = v119;
            __swift_instantiateConcreteTypeFromMangledName(&qword_269C32790);
            sub_2528AB6E8((unint64_t *)&qword_269C32798, &qword_269C32790);
            sub_252951A18();
            v116(v117, v118);
            uint64_t v0 = v128;
            goto LABEL_10;
          }
        }
        __break(1u);
        goto LABEL_89;
      }
LABEL_94:
      uint64_t v31 = sub_2528C4204(0, *((void *)v31 + 2) + 1, 1, v31);
      goto LABEL_44;
    }
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  sub_252939CEC(v70, v66);
  uint64_t v31 = (char *)v130;
  unint64_t v72 = sub_252923060(v65);
  if ((v71 & 1) == (v73 & 1))
  {
    unint64_t v16 = v72;
    goto LABEL_42;
  }
  return sub_252952128();
}

uint64_t sub_252936264()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_252936398, 0, 0);
}

uint64_t sub_252936398()
{
  uint64_t v53 = v0;
  uint64_t v2 = *(void *)(v0 + 480) + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass;
  swift_beginAccess();
  uint64_t v49 = (void *)v2;
  uint64_t v3 = *(void *)v2;
  int64_t v4 = *(void *)(*(void *)v2 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v52 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_252922FC8(0, v4, 0);
    uint64_t v6 = 0;
    uint64_t v5 = v52;
    do
    {
      uint64_t v7 = *(void *)(v3 + 8 * v6 + 32);
      if (v7 < (uint64_t)0xFFFFFFFF80000000)
      {
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v7 > 0x7FFFFFFF) {
        goto LABEL_37;
      }
      uint64_t v52 = v5;
      unint64_t v1 = *(void *)(v5 + 16);
      unint64_t v8 = *(void *)(v5 + 24);
      if (v1 >= v8 >> 1)
      {
        sub_252922FC8(v8 > 1, v1 + 1, 1);
        uint64_t v5 = v52;
      }
      ++v6;
      *(void *)(v5 + 16) = v1 + 1;
      *(_DWORD *)(v5 + 4 * v1 + 32) = v7;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)v2;
    uint64_t v9 = *(void *)(*(void *)v2 + 16);
    if (!v9) {
      goto LABEL_15;
    }
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *(void *)(v3 + 8 * v10 + 32);
      BOOL v13 = __OFADD__(v11, v12);
      v11 += v12;
      if (v13) {
        break;
      }
      if (v9 == ++v10)
      {
        if (v11 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v11 <= 0x7FFFFFFF) {
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_15;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_15:
  LODWORD(v11) = 0;
LABEL_16:
  unint64_t v1 = *(void *)(v50 + 480);
  uint64_t v47 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass;
  int v48 = v11;
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevRepetitionsByClass);
  uint64_t v15 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevClass;
  uint64_t v16 = *(unsigned int *)(v1 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_prevClass);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v17 = sub_25293A69C(v3, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (*(void *)(v5 + 16) <= v17)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
    goto LABEL_30;
  }
  uint64_t v45 = v15;
  int v46 = v17;
  int v44 = *(_DWORD *)(v5 + 4 * v17 + 32);
  LOBYTE(v52) = *(unsigned char *)(*(void *)(v50 + 480) + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_modelType);
  sub_25293FD58();
  uint64_t v19 = *(void *)(v18 + 16);
  unint64_t v20 = 0x269C31000uLL;
  if (v19)
  {
    unint64_t v43 = v1;
    unint64_t v1 = 0;
    uint64_t v21 = (unint64_t *)(v18 + 40);
    uint64_t v51 = *(void *)(v18 + 16);
    do
    {
      uint64_t v23 = *(v21 - 1);
      unint64_t v22 = *v21;
      uint64_t v24 = *(void *)(v20 + 1624);
      swift_bridgeObjectRetain();
      if (v24 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_252951338();
      __swift_project_value_buffer(v25, (uint64_t)qword_269C3D730);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_252951318();
      os_log_type_t v27 = sub_252951CE8();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = v20;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = v23;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v52 = v31;
        *(_DWORD *)uint64_t v29 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v29 + 4) = sub_25293961C(v30, v22, &v52);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 1024;
        if (v1 >= *(void *)(v5 + 16)) {
          goto LABEL_39;
        }
        int v32 = *(_DWORD *)(v5 + 4 * v1 + 32);
        swift_bridgeObjectRelease();
        *(_DWORD *)(v29 + 14) = v32;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2528A2000, v26, v27, "%s: %d", (uint8_t *)v29, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x2533C16C0](v31, -1, -1);
        MEMORY[0x2533C16C0](v29, -1, -1);

        unint64_t v20 = v28;
        uint64_t v19 = v51;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      ++v1;
      v21 += 2;
    }
    while (v19 != v1);
    swift_bridgeObjectRelease();
    unint64_t v1 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + 1624) != -1) {
    goto LABEL_42;
  }
LABEL_30:
  uint64_t v33 = sub_252951338();
  __swift_project_value_buffer(v33, (uint64_t)qword_269C3D730);
  unint64_t v34 = sub_252951318();
  os_log_type_t v35 = sub_252951CE8();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v36 = 67109120;
    *(_DWORD *)(v50 + 864) = v48;
    sub_252951DE8();
    _os_log_impl(&dword_2528A2000, v34, v35, "Total repetitions: Total reps: %d", v36, 8u);
    MEMORY[0x2533C16C0](v36, -1, -1);
  }
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v50 + 744);
  uint64_t v38 = *(void *)(v50 + 640);
  uint64_t v39 = *(void *)(v50 + 560);

  *(void *)(v1 + v47) = *v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + v45) = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C31C70);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_252953970;
  *(_DWORD *)(v40 + 32) = v46;
  *(_DWORD *)(v40 + 36) = v44;
  *(_DWORD *)(v40 + 40) = v48;
  *(void *)(v50 + 432) = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C32790);
  sub_2528AB6E8((unint64_t *)&qword_269C32798, &qword_269C32790);
  sub_252951A18();
  v37(v38, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v50 + 8);
  return v41();
}

uint64_t sub_252936A54()
{
  (*(void (**)(void, void))(v0 + 832))(*(void *)(v0 + 640), *(void *)(v0 + 560));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252936B74@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_252939CD8(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = sub_252951A08();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_252951F78();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  unint64_t *v2 = v5;
  return result;
}

uint64_t sub_252936CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v9 = 0x6B6E616C50;
  LODWORD(v10) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_modelType);
  if (v10 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_252953B00;
    *(void *)(v11 + 32) = 0x6B6E616C50;
    *(void *)(v11 + 40) = 0xE500000000000000;
    *(void *)(v11 + 48) = 0xD000000000000011;
    *(void *)(v11 + 56) = 0x800000025295CEE0;
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  sub_25293FD58();
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_86;
  }
  if (*(void *)(v12 + 16) <= (unint64_t)a1)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v13 = v12 + 16 * a1;
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v68 = sub_252932A80(v14, v15, (void *)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
  unint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex) != a1 && a1 != 0;
  unint64_t v17 = *(void *)(a2 + 16);
  unint64_t v18 = sub_2529373F0(a2);
  if ((v18 & 0x100000000) == 0 && a1 && v17 >= 2)
  {
    if ((float)(*(float *)&v18 - *(float *)(a2 + 4 * v17 + 28)) > 0.4) {
      unint64_t v9 = 1;
    }
    else {
      unint64_t v9 = v9;
    }
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_252953B00;
    *(void *)(v19 + 32) = 0x6B6E616C50;
    *(void *)(v19 + 40) = 0xE500000000000000;
    *(void *)(v19 + 48) = 0xD000000000000011;
    *(void *)(v19 + 56) = 0x800000025295CEE0;
  }
  else
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  sub_25293FD58();
  unint64_t v21 = *(void *)(v5 + v4);
  if ((v21 & 0x8000000000000000) != 0) {
    goto LABEL_87;
  }
  if (v21 >= *(void *)(v20 + 16))
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  int v67 = v9;
  uint64_t v22 = v20 + 16 * v21;
  uint64_t v11 = *(void *)(v22 + 32);
  uint64_t v23 = *(void *)(v22 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v66 = sub_252932A80(v11, v23, (void *)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a3 < 0) {
    goto LABEL_40;
  }
  uint64_t v24 = (uint64_t *)(v5 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory);
  swift_beginAccess();
  uint64_t v11 = *v24;
  unint64_t v9 = *(void *)(*v24 + 16);
  if (v9 < a3) {
    goto LABEL_93;
  }
  sub_252952118();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = *(void *)(v25 + 16);
  swift_release();
  if (v26 != v9 - a3) {
    goto LABEL_94;
  }
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v27 + 16);
    if (!v28)
    {
      float v30 = 0.0;
      goto LABEL_39;
    }
    if (v28 == 1)
    {
      uint64_t v29 = 0;
      float v30 = 0.0;
LABEL_37:
      uint64_t v33 = v28 - v29;
      unint64_t v34 = (float *)(v27 + 4 * v29 + 32);
      do
      {
        float v35 = *v34++;
        float v30 = v30 + v35;
        --v33;
      }
      while (v33);
      goto LABEL_39;
    }
    uint64_t v29 = v28 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v31 = (float *)(v27 + 36);
    float v30 = 0.0;
    uint64_t v32 = v28 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      float v30 = (float)(v30 + *(v31 - 1)) + *v31;
      v31 += 2;
      v32 -= 2;
    }
    while (v32);
    if (v28 != v29) {
      goto LABEL_37;
    }
LABEL_39:
    swift_release();
    unint64_t v9 = (float)(v30 / 5.0) > 0.8;
    if ((v66 & 1) == 0) {
LABEL_40:
    }
      unint64_t v9 = 0;
    uint64_t v4 = *(void *)(v5 + v4);
    unint64_t v36 = (uint64_t *)(v5 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceHistory);
    swift_beginAccess();
    uint64_t v37 = *(void *)(*v36 + 16);
    if (!v37)
    {
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    float v38 = *(float *)(*v36 + 4 * v37 + 28);
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A40);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_252953B00;
      *(void *)(v11 + 32) = 0x6B6E616C50;
      *(void *)(v11 + 40) = 0xE500000000000000;
      *(void *)(v11 + 48) = 0xD000000000000011;
      *(void *)(v11 + 56) = 0x800000025295CEE0;
    }
    else
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    sub_25293FD58();
    if (*(void *)(v39 + 16) <= a1) {
      goto LABEL_90;
    }
    uint64_t v40 = v39 + 16 * a1;
    uint64_t v41 = *(void *)(v40 + 32);
    uint64_t v10 = *(void *)(v40 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unsigned __int8 v42 = sub_252932A80(v41, v10, (void *)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = a3 - 1;
    if (__OFSUB__(a3, 1)) {
      goto LABEL_91;
    }
    if (a3 < 1)
    {
      a3 = 1;
      goto LABEL_67;
    }
    uint64_t v43 = *v36;
    uint64_t v44 = *(void *)(*v36 + 16);
    if (v44 <= v11)
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_2528A9398(v43, v43 + 32, v11, a3);
      goto LABEL_56;
    }
    if (v11 < 0) {
      goto LABEL_96;
    }
    if (!v44) {
      goto LABEL_97;
    }
    a3 = 2 * v44 - 1;
    sub_252952118();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v45 = swift_dynamicCastClass();
    if (!v45)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = MEMORY[0x263F8EE78];
    }
    uint64_t v10 = *(void *)(v45 + 16);
    swift_release();
    if (v10 != ((unint64_t)a3 >> 1) - v11) {
      goto LABEL_98;
    }
    uint64_t v46 = swift_dynamicCastClass();
    if (!v46)
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = MEMORY[0x263F8EE78];
    }
LABEL_56:
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)(v46 + 16);
    if (v47)
    {
      if (v47 == 1)
      {
        uint64_t v48 = 0;
        float v49 = 0.0;
      }
      else
      {
        uint64_t v48 = v47 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v50 = (float *)(v46 + 36);
        float v49 = 0.0;
        uint64_t v51 = v47 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          float v49 = (float)(v49 + *(v50 - 1)) + *v50;
          v50 += 2;
          v51 -= 2;
        }
        while (v51);
        if (v47 == v48) {
          goto LABEL_66;
        }
      }
      uint64_t v52 = v47 - v48;
      uint64_t v53 = (float *)(v46 + 4 * v48 + 32);
      do
      {
        float v54 = *v53++;
        float v49 = v49 + v54;
        --v52;
      }
      while (v52);
    }
    else
    {
      float v49 = 0.0;
    }
LABEL_66:
    swift_release();
    a3 = (float)(v49 / 5.0) <= 0.8;
LABEL_67:
    uint64_t v55 = (uint64_t *)(v5 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_confidenceByAction);
    uint64_t result = swift_beginAccess();
    uint64_t v57 = *v55;
    if (!*(void *)(v57 + 16))
    {
      __break(1u);
      return result;
    }
    sub_252923060(a1);
    uint64_t v5 = v58;
    unint64_t v59 = sub_252923060(a1);
    if (v60) {
      break;
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_2528A9398(v11, v11 + 32, a3, (2 * v9) | 1);
  }
  BOOL v62 = v38 <= 0.5 || v4 != 0;
  if (v62 | (v42 ^ 1) & 1 | (v11 < 0) | a3 & 1 | ((v5 & 1) == 0) | (*(void *)(*(void *)(*(void *)(v57 + 56)
                                                                                           + 8 * v59)
                                                                               + 16) < 5uLL))
    int v63 = 0;
  else {
    int v63 = 0x1000000;
  }
  if (v9) {
    int v64 = 0x10000;
  }
  else {
    int v64 = 0;
  }
  if (v67) {
    int v65 = 256;
  }
  else {
    int v65 = 0;
  }
  return v65 & 0xFFFFFFFE | ((v68 & 1) == 0) | v64 | v63;
}

unint64_t sub_2529373F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      uint64_t v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_252937448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[28] = a3;
  v4[29] = v3;
  v4[26] = a1;
  v4[27] = a2;
  return MEMORY[0x270FA2498](sub_25293746C, 0, 0);
}

void sub_25293746C()
{
  if (sub_252939238(v0[26], v0[27]))
  {
    uint64_t v1 = *(void *)(v0[29] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_actionHistoryCount);
    uint64_t v2 = v1 - 1;
    if (__OFSUB__(v1, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = *(void *)(v0[26] + 16);
      uint64_t v4 = v2 - v3;
      if (!__OFSUB__(v2, v3))
      {
        uint64_t v5 = sub_252937C58(v0[27]);
        if (v6)
        {
LABEL_19:
          __break(1u);
          return;
        }
        uint64_t v7 = v4 + v5;
        if (!__OFADD__(v4, v5))
        {
          uint64_t v8 = v0[28];
          sub_25293FD58();
          if ((v8 & 0x8000000000000000) == 0)
          {
            unint64_t v10 = v0[28];
            if (*(void *)(v9 + 16) > v10)
            {
              uint64_t v11 = v9 + 16 * v10;
              uint64_t v13 = *(void *)(v11 + 32);
              uint64_t v12 = *(void *)(v11 + 40);
              v0[30] = v12;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v0[2] = v4;
              v0[3] = v7;
              v0[4] = v2;
              v0[5] = v13;
              v0[6] = v12;
              uint64_t v14 = (void *)swift_task_alloc();
              v0[31] = v14;
              *uint64_t v14 = v0;
              v14[1] = sub_252937708;
              sub_2529385E8((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
              return;
            }
            goto LABEL_18;
          }
LABEL_17:
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = v0[28];
  uint64_t v16 = v0[29];
  unint64_t v17 = (uint64_t *)(v16 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v17;
  uint64_t *v17 = 0x8000000000000000;
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_252939FA4(MEMORY[0x263F8EE78], v15, isUniquelyReferenced_nonNull_native);
  uint64_t *v17 = v23;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v20 = (uint64_t *)(v16 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction);
  swift_beginAccess();
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v20;
  *uint64_t v20 = 0x8000000000000000;
  sub_252939FA4(v19, v15, v21);
  *uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v22 = (void (*)(void))v0[1];
  v22();
}

uint64_t sub_252937708()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_252937820, 0, 0);
}

uint64_t sub_252937820()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 232) + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_completedRepetitions;
  swift_beginAccess();
  uint64_t v2 = *(void **)v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_2528C5350(0, v2[2] + 1, 1, v2);
    *(void *)uint64_t v1 = v2;
  }
  unint64_t v5 = v2[2];
  unint64_t v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    uint64_t v2 = sub_2528C5350((void *)(v4 > 1), v5 + 1, 1, v2);
    *(void *)uint64_t v1 = v2;
  }
  v2[2] = v5 + 1;
  char v6 = &v2[5 * v5];
  long long v7 = *(_OWORD *)(v0 + 56);
  long long v8 = *(_OWORD *)(v0 + 72);
  v6[8] = *(void *)(v0 + 88);
  *((_OWORD *)v6 + 2) = v7;
  *((_OWORD *)v6 + 3) = v8;
  swift_endAccess();
  if (qword_269C31658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_252951338();
  __swift_project_value_buffer(v9, (uint64_t)qword_269C3D730);
  swift_retain();
  unint64_t v10 = sub_252951318();
  os_log_type_t v11 = sub_252951CF8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v33 = v13;
    *(_DWORD *)uint64_t v12 = 134218242;
    *(void *)(v0 + 192) = *(void *)(*(void *)v1 + 16);
    uint64_t result = sub_252951DE8();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v15 = *(void *)(*(void *)v1 + 16);
    if (!v15)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v16 = *(void *)v1 + 40 * v15;
    uint64_t v17 = *(void *)(v16 + 16);
    unint64_t v18 = *(void *)(v16 + 24);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_25293961C(v17, v18, &v33);
    sub_252951DE8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_2528A2000, v10, v11, "total reps: %ld, last rep: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533C16C0](v13, -1, -1);
    MEMORY[0x2533C16C0](v12, -1, -1);
  }
  else
  {
    swift_release();
  }

  uint64_t v19 = (uint64_t *)(*(void *)(v0 + 232) + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_repetitionsByClass);
  swift_beginAccess();
  uint64_t v20 = (void *)*v19;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v19 = (uint64_t)v20;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_252939CC4(v20);
    uint64_t v20 = (void *)result;
    *uint64_t v19 = result;
  }
  unint64_t v21 = *(void *)(v0 + 224);
  if (v20[2] <= v21)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = v20[v21 + 4];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20[v21 + 4] = v24;
  swift_endAccess();
  uint64_t v25 = *(void *)(v0 + 224);
  uint64_t v26 = *(void *)(v0 + 232);
  uint64_t v27 = (uint64_t *)(v26 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction);
  swift_beginAccess();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *v27;
  *uint64_t v27 = 0x8000000000000000;
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_252939FA4(MEMORY[0x263F8EE78], v25, v28);
  *uint64_t v27 = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  float v30 = (uint64_t *)(v26 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction);
  swift_beginAccess();
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *v30;
  *float v30 = 0x8000000000000000;
  sub_252939FA4(v29, v25, v31);
  *float v30 = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_252937C58(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 < 2) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t result = 0;
  int64_t v5 = 0;
  uint64_t v6 = a1 + 32;
  uint64_t v7 = a1 + 36;
  while (v5 < (uint64_t)v1)
  {
    uint64_t v8 = v4 + 1;
    if (*(float *)(v6 + 4 * v5) < *(float *)(v7 + 4 * v4))
    {
      uint64_t result = v4 + 1;
      int64_t v5 = v4 + 1;
    }
    ++v4;
    if (v1 - 1 == v8) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_252937CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  return MEMORY[0x270FA2498](sub_252937CE8, 0, 0);
}

uint64_t sub_252937CE8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
  v0[24] = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_currentActionIndex;
  uint64_t v3 = *(void *)(v1 + v2);
  v0[25] = v3;
  uint64_t v4 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction;
  if (v3)
  {
    v0[26] = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction;
    uint64_t v5 = v1 + v4;
    unint64_t v6 = swift_beginAccess();
    if (*(void *)(*(void *)v5 + 16))
    {
      unint64_t v6 = sub_252923060(v3);
      if (v7)
      {
        uint64_t v9 = (void *)swift_task_alloc();
        v0[27] = v9;
        void *v9 = v0;
        v9[1] = sub_252937E9C;
        uint64_t v7 = MEMORY[0x263F8D5C8];
        uint64_t v8 = MEMORY[0x263F00C50];
        unint64_t v6 = MEMORY[0x263F8D5C8];
        return MEMORY[0x270EE7870](v6, v7, v8);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction;
  unint64_t v6 = swift_beginAccess();
  if (!*(void *)(*(void *)v10 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v6 = sub_252923060(v0[22]);
  if ((v7 & 1) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = v0[23] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction;
  unint64_t v6 = swift_beginAccess();
  if (!*(void *)(*(void *)v11 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v6 = sub_252923060(v0[22]);
  if ((v7 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    return MEMORY[0x270EE7870](v6, v7, v8);
  }
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_252937E9C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252937F9C, 0, 0);
}

uint64_t sub_252937F9C()
{
  uint64_t v4 = v1[28];
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = v1[25];
  uint64_t v2 = (char *)(v1[23] + v1[26]);
  int v3 = *(_DWORD *)(v4 + 32);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)v2;
  uint64_t v28 = *(void *)v2;
  *(void *)uint64_t v2 = 0x8000000000000000;
  unint64_t v0 = sub_252923060(v5);
  uint64_t v9 = *(void *)(v7 + 16);
  BOOL v10 = (v8 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v2 = v8;
  if (*(void *)(v7 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_25293A0E0();
    }
LABEL_11:
    if (v2)
    {
      uint64_t v2 = *(char **)(*(void *)(v28 + 56) + 8 * v0);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t v2 = sub_2528C4204(0, *((void *)v2 + 2) + 1, 1, v2);
LABEL_13:
    unint64_t v17 = *((void *)v2 + 2);
    unint64_t v16 = *((void *)v2 + 3);
    if (v17 >= v16 >> 1) {
      uint64_t v2 = sub_2528C4204((char *)(v16 > 1), v17 + 1, 1, v2);
    }
    uint64_t v18 = v1[26];
    uint64_t v20 = v1[23];
    uint64_t v19 = v1[24];
    *((void *)v2 + 2) = v17 + 1;
    *(_DWORD *)&v2[4 * v17 + 32] = v3;
    *(void *)(*(void *)(v28 + 56) + 8 * v0) = v2;
    *(void *)(v20 + v18) = v28;
    swift_endAccess();
    uint64_t v21 = *(void *)(v20 + v19);
    uint64_t v22 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction;
    v1[29] = v21;
    v1[30] = v22;
    uint64_t v23 = v20 + v22;
    unint64_t v24 = swift_beginAccess();
    if (*(void *)(*(void *)v23 + 16))
    {
      unint64_t v24 = sub_252923060(v21);
      if (v25)
      {
        uint64_t v27 = (void *)swift_task_alloc();
        v1[31] = v27;
        *uint64_t v27 = v1;
        v27[1] = sub_252938250;
        uint64_t v25 = MEMORY[0x263F8D5C8];
        uint64_t v26 = MEMORY[0x263F00C50];
        unint64_t v24 = MEMORY[0x263F8D5C8];
        return MEMORY[0x270EE7870](v24, v25, v26);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return MEMORY[0x270EE7870](v24, v25, v26);
  }
  uint64_t v12 = v1[25];
  sub_252939CEC(v11, isUniquelyReferenced_nonNull_native);
  unint64_t v13 = sub_252923060(v12);
  if ((v2 & 1) == (v14 & 1))
  {
    unint64_t v0 = v13;
    goto LABEL_11;
  }
  return sub_252952128();
}

uint64_t sub_252938250(uint64_t a1)
{
  *(void *)(*(void *)v1 + 256) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252938350, 0, 0);
}

uint64_t sub_252938350()
{
  uint64_t v4 = v1[32];
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v5 = v1[29];
  uint64_t v2 = (char *)(v1[23] + v1[30]);
  int v3 = *(_DWORD *)(v4 + 32);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)v2;
  uint64_t v25 = *(void *)v2;
  *(void *)uint64_t v2 = 0x8000000000000000;
  unint64_t v0 = sub_252923060(v5);
  uint64_t v9 = *(void *)(v7 + 16);
  BOOL v10 = (v8 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v2 = v8;
  if (*(void *)(v7 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_25293A0E0();
    }
  }
  else
  {
    uint64_t v12 = v1[29];
    sub_252939CEC(v11, isUniquelyReferenced_nonNull_native);
    unint64_t v13 = sub_252923060(v12);
    if ((v2 & 1) != (v14 & 1))
    {
      return sub_252952128();
    }
    unint64_t v0 = v13;
  }
  if (v2)
  {
    uint64_t v2 = *(char **)(*(void *)(v25 + 56) + 8 * v0);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t v2 = sub_2528C4204(0, *((void *)v2 + 2) + 1, 1, v2);
LABEL_13:
  unint64_t v17 = *((void *)v2 + 2);
  unint64_t v16 = *((void *)v2 + 3);
  if (v17 >= v16 >> 1) {
    uint64_t v2 = sub_2528C4204((char *)(v16 > 1), v17 + 1, 1, v2);
  }
  uint64_t v18 = v1[30];
  uint64_t v19 = v1[23];
  *((void *)v2 + 2) = v17 + 1;
  *(_DWORD *)&v2[4 * v17 + 32] = v3;
  *(void *)(*(void *)(v25 + 56) + 8 * v0) = v2;
  *(void *)(v19 + v18) = v25;
  swift_endAccess();
  uint64_t v20 = v1[23] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_progressByAction;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v20 + 16))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = sub_252923060(v1[22]);
  if ((v21 & 1) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v22 = v1[23] + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyByAction;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v22 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = sub_252923060(v1[22]);
  if ((v23 & 1) == 0)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  unint64_t v24 = (uint64_t (*)(void))v1[1];
  return v24();
}

uint64_t sub_2529385E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 72) = a2;
  *(void *)(v3 + 80) = v2;
  *(void *)(v3 + 64) = a1;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 104) = v4;
  *(void *)(v3 + 120) = *(void *)(a2 + 32);
  uint64_t v5 = sub_252951A08();
  *(void *)(v3 + 128) = v5;
  *(void *)(v3 + 136) = *(void *)(v5 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C32A30);
  *(void *)(v3 + 152) = v6;
  *(void *)(v3 + 160) = *(void *)(v6 - 8);
  *(void *)(v3 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252938720, 0, 0);
}

uint64_t sub_252938720()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_completedRepetitions);
  swift_beginAccess();
  uint64_t v3 = *v2;
  unint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory;
  *(void *)(v0 + 176) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartHistory;
  uint64_t v6 = (uint64_t *)(v1 + v5);
  uint64_t v7 = swift_beginAccess();
  uint64_t v12 = *(void *)(*v6 + 16);
  if (v4 < 2) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v13 = v3 + 32;
  uint64_t v14 = v13 + 40 * v4;
  if (v7 == *(void *)(v14 - 16) && v8 == *(void *)(v14 - 8))
  {
    char v16 = 1;
  }
  else
  {
    char v16 = sub_252952108();
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
  }
  uint64_t v17 = v13 + 40 * v4;
  uint64_t v9 = *(void *)(v17 - 56);
  uint64_t v10 = *(void *)(v17 - 48);
  if (v7 == v9 && v8 == v10)
  {
    if (v16 & 1 | (v12 == 0)) {
      goto LABEL_37;
    }
LABEL_16:
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v21 = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount;
    *(void *)(v0 + 184) = OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount;
    uint64_t v22 = *(void *)(v19 + v21);
    unint64_t v23 = v20 - v22;
    *(void *)(v0 + 192) = v20 - v22;
    if (__OFSUB__(v20, v22))
    {
      __break(1u);
    }
    else
    {
      uint64_t v24 = *(void *)(v0 + 104);
      BOOL v25 = __OFSUB__(v24, v20);
      uint64_t v26 = v24 - v20;
      if (!v25)
      {
        uint64_t v27 = v26 / 2;
        if (!__OFSUB__(v23, v27))
        {
          *(void *)(v0 + 200) = (v23 - v27) & ~((uint64_t)(v23 - v27) >> 63);
          BOOL v25 = __OFADD__(v23, v27);
          uint64_t v28 = v23 + v27;
          if (!v25)
          {
            if (v28 >= v12 - 1) {
              uint64_t v28 = v12 - 1;
            }
            *(void *)(v0 + 208) = v28;
            sub_25293FD58();
            uint64_t v30 = *(void *)(v29 + 16);
            if (v30)
            {
              uint64_t v31 = 0;
              uint64_t v32 = (void *)(v29 + 40);
              while (1)
              {
                *(void *)(v0 + 216) = v31;
                BOOL v33 = *(v32 - 1) == *(void *)(v0 + 112) && *v32 == *(void *)(v0 + 120);
                if (v33 || (sub_252952108() & 1) != 0) {
                  break;
                }
                ++v31;
                v32 += 2;
                if (v30 == v31) {
                  goto LABEL_30;
                }
              }
            }
            else
            {
LABEL_30:
              sub_2529395F0(*(void *)(v0 + 72));
              swift_bridgeObjectRelease();
              __break(1u);
            }
            sub_2529395F0(*(void *)(v0 + 72));
            uint64_t v7 = swift_bridgeObjectRelease();
            if ((v23 & 0x8000000000000000) == 0)
            {
              uint64_t v34 = *v6;
              if (v23 < *(void *)(*v6 + 16))
              {
                uint64_t v36 = *(void *)(v0 + 136);
                uint64_t v35 = *(void *)(v0 + 144);
                uint64_t v37 = *(void *)(v0 + 128);
                float v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v36 + 16);
                v36 += 16;
                int v39 = *(_DWORD *)(v36 + 64);
                *(_DWORD *)(v0 + 320) = v39;
                uint64_t v40 = v34 + ((v39 + 32) & ~(unint64_t)v39);
                uint64_t v41 = *(void *)(v36 + 56);
                *(void *)(v0 + 224) = v41;
                *(void *)(v0 + 232) = v38;
                *(void *)(v0 + 240) = v36 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
                v38(v35, v40 + v41 * v23, v37);
                unsigned __int8 v42 = (void *)swift_task_alloc();
                *(void *)(v0 + 248) = v42;
                *unsigned __int8 v42 = v0;
                v42[1] = sub_252938AE4;
                uint64_t v7 = *(void *)(v0 + 168);
                uint64_t v8 = MEMORY[0x263F8D5C8];
                uint64_t v10 = MEMORY[0x263F00C58];
                uint64_t v11 = MEMORY[0x263F00C50];
                uint64_t v9 = MEMORY[0x263F8D5C8];
                return MEMORY[0x270EE76F8](v7, v8, v9, v10, v11);
              }
              goto LABEL_46;
            }
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v7 = sub_252952108();
  if ((v16 & 1) == 0)
  {
LABEL_15:
    if (!v12) {
      goto LABEL_37;
    }
    goto LABEL_16;
  }
  if (!((v12 == 0) | v7 & 1)) {
    goto LABEL_16;
  }
LABEL_37:
  uint64_t v43 = *(void *)(v0 + 80);
  uint64_t v44 = *(void *)(v43 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount);
  BOOL v25 = __OFADD__(v44, v12);
  uint64_t v45 = v44 + v12;
  if (v25)
  {
LABEL_47:
    __break(1u);
    return MEMORY[0x270EE76F8](v7, v8, v9, v10, v11);
  }
  *(void *)(v43 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_saliencyStartRemovalCount) = v45;
  uint64_t *v6 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v0 + 120);
  long long v50 = *(_OWORD *)(v0 + 104);
  long long v51 = *(_OWORD *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v47 = v51;
  *(_OWORD *)(v47 + 16) = v50;
  *(void *)(v47 + 32) = v46;
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_252938AE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 144);
  uint64_t v3 = *(void *)(*v0 + 136);
  uint64_t v4 = *(void *)(*v0 + 128);
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 256) = v5;
  *(void *)(v1 + 264) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return MEMORY[0x270FA2498](sub_252938C48, 0, 0);
}

uint64_t sub_252938C48()
{
  unint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  *(void *)(v0 + 272) = sub_2528AB6E8((unint64_t *)&qword_269C31C50, (uint64_t *)&unk_269C32A30);
  uint64_t v5 = sub_2529515D8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 280) = v6;
  *(void *)(v0 + 288) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v7 = v6(v2, v4);
  if (v1 >= *(void *)(v5 + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 200);
  int v14 = *(_DWORD *)(v5 + 4 * *(void *)(v0 + 216) + 32);
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v12 < v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v15 = *(void *)(v0 + 200);
  uint64_t v16 = *(void *)(v0 + 208);
  if (v15 != v16)
  {
    if ((uint64_t)v15 < v16)
    {
      uint64_t v25 = *(void *)(v0 + 192);
      *(_DWORD *)(v0 + 324) = v14;
      *(void *)(v0 + 296) = v25;
      *(void *)(v0 + 304) = v15;
      uint64_t v26 = *(void *)(*(void *)(v0 + 80) + *(void *)(v0 + 176));
      if (v15 < *(void *)(v26 + 16))
      {
        (*(void (**)(void, unint64_t, void))(v0 + 232))(*(void *)(v0 + 144), v26+ ((*(unsigned __int8 *)(v0 + 320) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 320))+ *(void *)(v0 + 224) * v15, *(void *)(v0 + 128));
        uint64_t v27 = (void *)swift_task_alloc();
        *(void *)(v0 + 312) = v27;
        *uint64_t v27 = v0;
        v27[1] = sub_252938EA8;
        uint64_t v7 = *(void *)(v0 + 168);
        uint64_t v8 = MEMORY[0x263F8D5C8];
        uint64_t v10 = MEMORY[0x263F00C58];
        uint64_t v11 = MEMORY[0x263F00C50];
        uint64_t v9 = MEMORY[0x263F8D5C8];
        return MEMORY[0x270EE76F8](v7, v8, v9, v10, v11);
      }
LABEL_17:
      __break(1u);
      return MEMORY[0x270EE76F8](v7, v8, v9, v10, v11);
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = *(void *)(v0 + 192);
  uint64_t v18 = *(void *)(*(void *)(v0 + 80) + *(void *)(v0 + 184));
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v21 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 120);
  long long v28 = *(_OWORD *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v22 = v19;
  *(_OWORD *)(v22 + 8) = v28;
  *(void *)(v22 + 24) = v21;
  *(void *)(v22 + 32) = v20;
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_252938EA8()
{
  unint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 256);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  v1(v2, v3);
  return MEMORY[0x270FA2498](sub_252939008, 0, 0);
}

uint64_t sub_252939008()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 280);
  unint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = sub_2529515D8();
  uint64_t v6 = v1(v3, v4);
  if (v2 >= *(void *)(v5 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  float v11 = *(float *)(v0 + 324);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v14 = *(void *)(v0 + 208);
  float v15 = *(float *)(v5 + 4 * *(void *)(v0 + 216) + 32);
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v11 >= v15) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = v12;
  }
  if (v12 + 1 != v14)
  {
    if (v11 >= v15) {
      float v24 = v11;
    }
    else {
      float v24 = v15;
    }
    unint64_t v25 = *(void *)(v0 + 304) + 1;
    *(float *)(v0 + 324) = v24;
    *(void *)(v0 + 296) = v16;
    *(void *)(v0 + 304) = v25;
    uint64_t v26 = *(void *)(*(void *)(v0 + 80) + *(void *)(v0 + 176));
    if (v25 < *(void *)(v26 + 16))
    {
      (*(void (**)(void, unint64_t, void))(v0 + 232))(*(void *)(v0 + 144), v26+ ((*(unsigned __int8 *)(v0 + 320) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 320))+ *(void *)(v0 + 224) * v25, *(void *)(v0 + 128));
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_252938EA8;
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = MEMORY[0x263F8D5C8];
      uint64_t v9 = MEMORY[0x263F00C58];
      uint64_t v10 = MEMORY[0x263F00C50];
      uint64_t v8 = MEMORY[0x263F8D5C8];
      return MEMORY[0x270EE76F8](v6, v7, v8, v9, v10);
    }
LABEL_19:
    __break(1u);
    return MEMORY[0x270EE76F8](v6, v7, v8, v9, v10);
  }
  uint64_t v17 = *(void *)(*(void *)(v0 + 80) + *(void *)(v0 + 184));
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(v0 + 112);
  uint64_t v19 = *(void *)(v0 + 120);
  long long v28 = *(_OWORD *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v21 = v18;
  *(_OWORD *)(v21 + 8) = v28;
  *(void *)(v21 + 24) = v20;
  *(void *)(v21 + 32) = v19;
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

BOOL sub_252939238(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 < 5) {
    return 0;
  }
  uint64_t v5 = 0;
  float v6 = *(float *)(a1 + 32);
  unint64_t v7 = v3 - 1;
  do
  {
    uint64_t v8 = a1 + 4 * v5;
    if (v6 < *(float *)(v8 + 36)) {
      float v6 = *(float *)(v8 + 36);
    }
    ++v5;
  }
  while (v7 != v5);
  if (v6 < 0.75) {
    return 0;
  }
  unint64_t v10 = sub_2529392E8(a1);
  BOOL result = 0;
  if ((v10 & 0x100000000) == 0 && *(float *)&v10 <= 0.35)
  {
    unint64_t v11 = sub_2529373F0(a2);
    return (v11 & 0x100000000) == 0 && *(float *)(v2 + 24) <= *(float *)&v11;
  }
  return result;
}

unint64_t sub_2529392E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      uint64_t v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v5 < v2) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_252939340()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_defaultDistribution;
  uint64_t v2 = sub_252951A08();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC5Human17RepetitionCounter13PostProcessor_distribution, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_252939464()
{
  sub_252939340();

  return swift_deallocClassInstance();
}

uint64_t sub_2529394BC()
{
  return _s13PostProcessorCMa();
}

uint64_t _s13PostProcessorCMa()
{
  uint64_t result = qword_269C33340;
  if (!qword_269C33340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252939510()
{
  uint64_t result = sub_252951A08();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_2529395F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25293961C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2529396F0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2528D9690((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2528D9690((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}