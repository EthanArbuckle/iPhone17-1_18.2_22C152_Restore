uint64_t sub_1000920CC(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  long long v18;
  long long v19;
  uint64_t v20;
  __int16 v21;

  if (!result) {
    goto LABEL_38;
  }
  v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  v4 = sub_10006D8BC(result);
  result = *(void *)(v2 + 8);
  if (!result) {
    goto LABEL_37;
  }
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  result = sub_10001CE30(result);
  if (!v4) {
    goto LABEL_38;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_38;
  }
  v5 = result;
  v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)v4 + 152))(v4, *(void *)(v2 + 8));
  v7 = (*(uint64_t (**)(uint64_t, void))(*(void *)v4 + 168))(v4, *(void *)(v2 + 8));
  sub_100080A00(v2, v5, v7 | v6);
  sub_10007DCF8(v2, v5, 1, 1);
  sub_100080304(v2, v8, 1);
  result = sub_1000DB62C();
  if (!result) {
    goto LABEL_38;
  }
  v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  v10 = sub_1000DD4C4(*(void *)(v2 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 136))(v9, v10);
  v21 = 117;
  v20 = 0;
  while (!sub_10006FB58(v2, -1, &v21, &v20, 0xFFFFu))
  {
    if (v20) {
      operator delete[]();
    }
  }
  v21 = 118;
  while (!sub_10006FB58(v2, -1, &v21, &v20, 0xFFFFu))
  {
    if (v20) {
      operator delete[]();
    }
  }
  result = sub_10007F2B8(v2, 0, 0);
  v11 = *(_DWORD *)(v2 + 2372);
  if (!v11)
  {
    if (!a2) {
      goto LABEL_33;
    }
    *(void *)&v15 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v15 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v18 = v15;
    v19 = v15;
    v17 = v15;
    if (v5)
    {
      if ((v5 & 7) != 0) {
        goto LABEL_38;
      }
      v16 = *(void *)(v5 + 32);
      if (v16)
      {
        LODWORD(v17) = 4;
        result = *(void *)(v2 + 8);
        if (!result) {
          goto LABEL_38;
        }
        if ((result & 7) != 0) {
          goto LABEL_38;
        }
        result = sub_100063618(result);
        DWORD1(v17) = result;
        *((void *)&v18 + 1) = *(void *)(v2 + 8);
        *((void *)&v17 + 1) = v5;
        if ((v16 & 7) != 0 || ((v16 + 36) & 3) != 0) {
          goto LABEL_38;
        }
        *(void *)&v18 = *(unsigned int *)(v16 + 36);
        sub_100080D68(v2, 0, 0, (uint64_t)&v17, 48);
        goto LABEL_33;
      }
    }
LABEL_37:
    __break(0x5518u);
    goto LABEL_38;
  }
  v12 = 0;
  LODWORD(v13) = -1;
  do
  {
    if ((v11 >> v12)) {
      v13 = v12;
    }
    else {
      v13 = v13;
    }
    ++v12;
  }
  while (v12 != 15);
  v14 = sub_10007152C(v13);
  sub_100099718(1, v5, v14);
LABEL_33:
  result = v2 + 1992;
  if (((v2 + 1992) & 7) == 0)
  {
    sub_10007DECC(result);
    sub_10007DC34(v2);
    sub_10007D998(v2, 1);
    *(void *)(v2 + 1272) = 0;
    result = *(void *)(v2 + 8);
    if (result)
    {
      if ((result & 7) == 0) {
        return sub_10006359C(result);
      }
    }
  }
LABEL_38:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000923B8(uint64_t result, unsigned __int16 a2, unsigned __int8 a3, int a4)
{
  unsigned __int16 v12 = a2;
  unsigned __int8 v11 = a3;
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_33;
  }
  result = sub_10001CE30(result);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_33;
  }
  result = sub_1000861A0(result);
  if (!result) {
    return 45;
  }
  uint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  if (((v4 + 1200) & 7) != 0) {
    goto LABEL_33;
  }
  result = sub_100017548(v4 + 1200, &v12);
  uint64_t v10 = result;
  if (((v4 + 1208) & 7) != 0) {
    goto LABEL_33;
  }
  if (v4 + 1208 == result)
  {
    if (a4 != -1) {
      return 0;
    }
    result = v4 + 2088;
    if (((v4 + 2088) & 7) == 0)
    {
      sub_1000942A4(result, &v11);
      if (*v9) {
        operator new();
      }
      goto LABEL_31;
    }
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
  result = (uint64_t)sub_100004C28(&v10);
  if (!result) {
    goto LABEL_33;
  }
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  v7 = (uint64_t *)(result + 8);
  if (((result + 8) & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v8 = *v7;
  if (!*v7 || (v8 & 7) != 0) {
    goto LABEL_33;
  }
  if (*(unsigned __int8 *)(v8 + 32) < 2u)
  {
    if (*(unsigned char *)(v8 + 32) || a4 == -1 || *(unsigned char *)(v8 + 33) == 10)
    {
      if (*(unsigned char *)(v8 + 33) == 10)
      {
        result = 0;
        *(unsigned char *)(v8 + 33) = 0;
        return result;
      }
      return 0;
    }
LABEL_31:
    operator new[]();
  }
LABEL_34:
  __break(0x550Au);
  __break(0x5513u);
  __break(0x5507u);
  return result;
}

uint64_t sub_100092704(uint64_t result, unsigned __int16 a2, int a3)
{
  unsigned __int16 v14 = a2;
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t v6 = sub_10001CE30(result);
  result = sub_100051084();
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_31;
  }
  uint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
  result = v3 + 1200;
  if (((v3 + 1200) & 7) != 0) {
    goto LABEL_31;
  }
  result = sub_100017548(result, &v14);
  uint64_t v13 = result;
  if (((v3 + 1208) & 7) != 0) {
    goto LABEL_31;
  }
  if (v3 + 1208 == result)
  {
    uint64_t v8 = 0;
    goto LABEL_21;
  }
  result = (uint64_t)sub_100004C28(&v13);
  if (!result
    || (result & 7) != 0
    || (v7 = (std::string **)(result + 8), ((result + 8) & 7) != 0)
    || (uint64_t v8 = *v7) == 0
    || (v8 & 7) != 0)
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }
  if (v8[2].__r_.__value_.__s.__data_[8] >= 2u)
  {
LABEL_32:
    __break(0x550Au);
    __break(0x5507u);
    return result;
  }
  if (!v8[2].__r_.__value_.__s.__data_[8])
  {
    BOOL v9 = a3 != -1 || sub_100094900((BOOL)v8);
    goto LABEL_22;
  }
  sub_10009476C(v3, v8);
LABEL_21:
  BOOL v9 = 0;
LABEL_22:
  int v10 = sub_1000861A0(v6);
  if (v9 && v8)
  {
    if (v10)
    {
      sub_100094938(*(void *)(v3 + 8));
      uint64_t v12 = 0;
      char v11 = 0;
      operator new[]();
    }
  }
  return 0;
}

uint64_t sub_100092A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8)
{
  uint64_t result = sub_1000D289C();
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_1000A216C(result, a1);
    if (!a5 || (a6 - 1) > 0xFFFD || a8 > 2 || !result)
    {
      sub_1000EE4F4(0, 4, "%s:%d Invalid connection(%hhx)(bValidHandle:%d), data(%hhx)=NULL, size(%d), or resentCount:%d", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18403, a1, result, a5, a6, a8);
      return 0;
    }
    if (a1)
    {
      if ((a1 & 7) == 0)
      {
        sub_10001CE30(a1);
        operator new[]();
      }
    }
  }
  __break(0x5516u);
  __break(0x5513u);
  __break(0x5507u);
  return result;
}

uint64_t sub_100092D7C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000A216C(result, a1);
  if (a2 && result)
  {
    if ((a2 & 7) == 0)
    {
      *(_DWORD *)(a2 + 196) = *(_DWORD *)(a2 + 200);
      return result;
    }
LABEL_8:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_100092DD4(uint64_t a1)
{
  uint64_t result = sub_10006D8BC(a1);
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = sub_1000A15B4(result, a1, 0);
    return sub_100086980(v3);
  }
  return result;
}

uint64_t sub_100092E24(uint64_t result)
{
  uint64_t v1 = result;
  if (!result) {
    goto LABEL_16;
  }
  uint64_t result = sub_10006D8BC(result);
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_1000A15B4(result, v1, 0);
    if (!result)
    {
      uint64_t result = sub_10006D8BC(0);
      if (!result || (result & 7) != 0) {
        goto LABEL_21;
      }
      uint64_t result = (uint64_t)sub_1000A1B54((uint64_t *)result, v1);
      if (!result) {
        return 0;
      }
    }
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100063520(result);
      if (result)
      {
        uint64_t v2 = result;
        if ((result & 7) == 0)
        {
          sub_100063334(result, 0);
          uint64_t result = sub_10006DB30(0, v2);
          if (!result)
          {
            sub_1000EE4F4(0, 4, "%s:%d Cannot get GeneralLingo object pointer. Cannot GetDeviceWWiState. port=%hhx handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 11481, v1, v2);
            uint64_t v1 = 0;
            goto LABEL_18;
          }
          if ((result & 7) == 0 && ((result + 1528) & 7) == 0)
          {
            uint64_t v1 = *(unsigned int *)(result + 1528);
            if (v1 >= 8)
            {
              __break(0x550Au);
LABEL_16:
              sub_1000EE4F4(result, 4, "%s:%d NULL devPort\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 11494);
              return v1;
            }
LABEL_18:
            sub_100063380(v2, 0);
            return v1;
          }
        }
      }
    }
  }
LABEL_21:
  __break(0x5516u);
  return result;
}

uint64_t sub_100092F60()
{
  return 1;
}

uint64_t sub_100092F68(uint64_t result, void *a2)
{
  uint64_t v6 = 0;
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_19;
    }
    uint64_t result = sub_100063520(result);
    if (!result) {
      goto LABEL_19;
    }
    uint64_t v3 = result;
    if ((result & 7) != 0) {
      goto LABEL_19;
    }
    sub_100063334(result, 0);
    uint64_t result = sub_10006DB30(0, v3);
    if (result)
    {
      if ((result & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v4 = (uint64_t *)(result + 1408);
      if (((result + 1408) & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t result = *v4;
      if (*v4)
      {
        if ((result & 3) != 0) {
          goto LABEL_19;
        }
        uint64_t v5 = sub_1000616E8(result, &v6);
        goto LABEL_15;
      }
    }
    else
    {
      sub_1000EE4F4(0, 4, "%s:%d Cannot get GeneralLingo object pointer. handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 11547, v3);
    }
    uint64_t v5 = 0;
LABEL_15:
    uint64_t result = sub_100063380(v3, 0);
    if (!a2) {
      return v5;
    }
    goto LABEL_16;
  }
  uint64_t v5 = 0;
  if (!a2) {
    return v5;
  }
LABEL_16:
  if ((a2 & 7) == 0)
  {
    *a2 = v6;
    return v5;
  }
LABEL_19:
  __break(0x5516u);
  return result;
}

uint64_t sub_100093078(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_35;
  }
  if (a3)
  {
    uint64_t v5 = *a3;
  }
  else
  {
    syslog(3, "%s:%s-%d sizeof(uintptr_t) = %ld bytes, pHintData=%hhx", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", "SendChargingInfoNotification", 11822, 8, 0);
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_35;
  }
  if (sub_10001CE30(v6) == v5) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
  BOOL v8 = sub_1000634B8(v7);
  uint64_t result = 2;
  if (v5 && v8)
  {
    if ((v5 & 7) == 0)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      if (v10)
      {
        if ((v10 & 7) == 0)
        {
          uint64_t v11 = *(void *)(v5 + 40);
          if (v11 != sub_1000622A4(v10)) {
            return 2;
          }
LABEL_17:
          if (a2 < 4)
          {
            switch(a2)
            {
              case 0u:
                uint64_t v12 = sub_10004E9C8();
                if (!v12 || (v12 & 7) != 0) {
                  goto LABEL_35;
                }
                unsigned int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 296))(v12, v5);
                break;
              case 1u:
                uint64_t v16 = sub_10004E9C8();
                if (!v16 || (v16 & 7) != 0) {
                  goto LABEL_35;
                }
                unsigned int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v16 + 328))(v16, v5);
                break;
              case 2u:
                uint64_t v14 = sub_10004E9C8();
                if (!v14 || (v14 & 7) != 0) {
                  goto LABEL_35;
                }
                unsigned int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v14 + 344))(v14, v5);
                break;
              case 3u:
                uint64_t v15 = sub_10004E9C8();
                if (!v15 || (v15 & 7) != 0) {
                  goto LABEL_35;
                }
                unsigned int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v15 + 360))(v15, v5);
                break;
              default:
                return 2;
            }
            __int16 v18 = -21846;
            char v17 = a2;
            if (&vars0 != (uint64_t *)34)
            {
              __int16 v18 = __rev16(v13);
              return sub_100093308(*(void *)(a1 + 8), 5u, &v17, 3u, 2u, 0, -1);
            }
LABEL_37:
            __break(0x5500u);
            JUMPOUT(0x1000932F8);
          }
LABEL_36:
          __break(0x550Au);
          goto LABEL_37;
        }
      }
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_100093308(uint64_t a1, unsigned int a2, char *a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_66;
  }
  uint64_t v13 = sub_10001CE30(a1);
  if (!v13) {
    return 4;
  }
  if (a2 >= 0x20) {
    goto LABEL_71;
  }
  uint64_t v14 = v13;
  if ((*(void *)(a1 + 1992) & (1 << a2)) == 0)
  {
    uint64_t v15 = sub_1000D289C();
    if (!v15 || (v15 & 7) != 0) {
      goto LABEL_66;
    }
    uint64_t v16 = 45;
    if (!sub_1000A10E4(v15, v14) || ((1 << a2) & 0x84) == 0) {
      return v16;
    }
  }
  char v17 = malloc_type_calloc(a4 + 1, 1uLL, 0x8508FAB0uLL);
  if (!v17) {
    return 12;
  }
  unint64_t v18 = (unint64_t)v17;
  *char v17 = a2;
  uint64_t v16 = 2;
  switch(a2)
  {
    case 0u:
    case 0xEu:
      if (a4 < 4) {
        goto LABEL_48;
      }
      if (!a3) {
        goto LABEL_66;
      }
      v19 = v17 + 1;
      if (v17 == (unsigned char *)-1) {
        goto LABEL_74;
      }
      unsigned int v20 = *a3;
      goto LABEL_29;
    case 1u:
      if (a4 < 8) {
        goto LABEL_48;
      }
      if (!a3) {
        goto LABEL_66;
      }
      if (v17 == (unsigned char *)-1) {
        goto LABEL_74;
      }
      *(_DWORD *)(v17 + 1) = bswap32(*a3);
      if ((unint64_t)a3 >= 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_73;
      }
      v19 = v17 + 5;
      if ((unint64_t)v17 >= 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_74;
      }
      unsigned int v20 = a3[4];
LABEL_29:
      _DWORD *v19 = bswap32(v20);
      goto LABEL_43;
    case 2u:
      if (a4 >= 6)
      {
        if (!a3) {
          goto LABEL_66;
        }
        if (v17 != (unsigned char *)-1)
        {
          *(_DWORD *)(v17 + 1) = bswap32(*a3);
          if ((unint64_t)a3 > 0xFFFFFFFFFFFFFFFBLL)
          {
LABEL_73:
            __break(0x5513u);
            goto LABEL_74;
          }
          unsigned int v21 = a3[4];
          if ((v21 & 0xFFFF0000) != 0)
          {
LABEL_72:
            __break(0x5507u);
            goto LABEL_73;
          }
          if ((unint64_t)v17 < 0xFFFFFFFFFFFFFFFBLL)
          {
            *(_WORD *)(v17 + 5) = bswap32(v21) >> 16;
LABEL_43:
            if (a6)
            {
              if ((a6 & 7) == 0) {
                goto LABEL_45;
              }
LABEL_66:
              __break(0x5516u);
              return 12;
            }
            int v23 = a7;
LABEL_52:
            if (v23 == -1)
            {
              if ((v14 & 7) != 0) {
                goto LABEL_66;
              }
              (*(void (**)(uint64_t, void))(*(void *)v14 + 16))(v14, 0);
            }
            if (a4 != 0xFFFF) {
              sub_1000C51E0();
            }
            goto LABEL_72;
          }
        }
        goto LABEL_74;
      }
      free(v17);
      v24 = (char *)malloc_type_calloc(7uLL, 1uLL, 0x69D1582AuLL);
      if (!v24) {
        return 12;
      }
      unint64_t v18 = (unint64_t)v24;
      char *v24 = a2;
      if (v24 == (char *)-1) {
        goto LABEL_74;
      }
      *(_DWORD *)(v24 + 1) = 1677721600;
      int v23 = a7;
      if (!a6)
      {
        syslog(3, "%s:%d No pRxdPacket!\n", "SendiPodNotificationForHandle", 12012);
        if (v18 < 0xFFFFFFFFFFFFFFFBLL)
        {
          *(_WORD *)(v18 + 5) = 0;
          goto LABEL_52;
        }
LABEL_74:
        __break(0x5500u);
        JUMPOUT(0x10009376CLL);
      }
      if ((a6 & 7) != 0) {
        goto LABEL_66;
      }
      if ((unint64_t)v24 >= 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_74;
      }
      *(_WORD *)(v24 + 5) = bswap32(*(unsigned __int16 *)(a6 + 68)) >> 16;
LABEL_45:
      if ((v14 & 7) != 0) {
        goto LABEL_66;
      }
      int v22 = (*(uint64_t (**)(uint64_t, void))(*(void *)v14 + 16))(v14, 0);
      if (a4 == 0xFFFF) {
        goto LABEL_72;
      }
      sub_1000C5B58(a6, v14, 0, 0, 74, v22, (const void *)v18, (unsigned __int16)(a4 + 1));
      if (a5 > 3)
      {
LABEL_71:
        __break(0x550Au);
        goto LABEL_72;
      }
      uint64_t v16 = sub_1000C4B20(a1, a6, 0, a5);
LABEL_59:
      free((void *)v18);
      return v16;
    case 3u:
    case 7u:
    case 0xCu:
    case 0xFu:
    case 0x14u:
      if (!a4) {
        goto LABEL_48;
      }
      if (!a3) {
        goto LABEL_66;
      }
      if (v17 == (unsigned char *)-1) {
        goto LABEL_73;
      }
      v17[1] = *a3;
      goto LABEL_43;
    case 5u:
    case 0xAu:
    case 0xDu:
    case 0x10u:
    case 0x11u:
    case 0x13u:
      if (v17 == (unsigned char *)-1) {
        goto LABEL_73;
      }
      memcpy(v17 + 1, a3, a4);
      goto LABEL_43;
    case 9u:
      if (!a4) {
        goto LABEL_43;
      }
      sub_1000EE4F4(0, 4, "%s:%d incorrect dataLen!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 12080);
LABEL_48:
      uint64_t v16 = 22;
LABEL_49:
      if (a5 > 3) {
        goto LABEL_71;
      }
      syslog(3, "%s:%d error encountered %x, for notificationType %d, dataLen %d, msgPriority %d, transID 0x%x", "SendiPodNotificationForHandle", 12225, v16, a2, a4, a5, a7);
      goto LABEL_59;
    case 0xBu:
      if (a4 < 2) {
        goto LABEL_48;
      }
      if (!a3) {
        goto LABEL_66;
      }
      if (v17 == (unsigned char *)-1) {
        goto LABEL_74;
      }
      *(_WORD *)(v17 + 1) = bswap32(*a3) >> 16;
      goto LABEL_43;
    default:
      goto LABEL_49;
  }
}

uint64_t sub_1000937C0(uint64_t a1, int a2, unint64_t a3, uint64_t *a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0 || ((uint64_t v6 = *(void *)(a1 + 8)) != 0 ? (v7 = (v6 & 7) == 0) : (v7 = 0), !v7))
  {
LABEL_55:
    __break(0x5516u);
    goto LABEL_56;
  }
  uint64_t result = sub_10001CE30(v6);
  if (result)
  {
    uint64_t v13 = result;
    if (a2 > 917506)
    {
      switch(a2)
      {
        case 1048577:
          uint64_t v14 = a1;
          unsigned int v15 = 0;
          goto LABEL_41;
        case 1048578:
          uint64_t v14 = a1;
          unsigned int v15 = 1;
          goto LABEL_41;
        case 1048579:
          uint64_t result = sub_100093078(a1, 2u, a4);
          unsigned int v20 = *(_DWORD *)(a1 + 2208);
          if ((v20 & 0x80000000) != 0) {
            return result;
          }
          if (HIWORD(v20)) {
            goto LABEL_56;
          }
          sub_10008E260(a1, v13, (unsigned __int16)*(_DWORD *)(a1 + 2208));
          uint64_t v21 = sub_10004E9C8();
          if (!v21 || (v21 & 7) != 0) {
            goto LABEL_55;
          }
          int v22 = *(uint64_t (**)(void))(*(void *)v21 + 288);
          return v22();
        case 1048580:
          uint64_t v14 = a1;
          unsigned int v15 = 3;
LABEL_41:
          return sub_100093078(v14, v15, a4);
        case 1048581:
        case 1048582:
          return result;
        case 1048583:
          uint64_t v23 = sub_10004E9C8();
          if (!v23 || (v23 & 7) != 0 || ((a1 + 1592) & 7) != 0) {
            goto LABEL_55;
          }
          v24 = *(uint64_t (**)(void))(*(void *)v23 + 312);
          return v24();
        default:
          if (a2 == 917507)
          {
            if (!HIWORD(a5))
            {
              uint64_t v16 = *(void *)(a1 + 8);
              unsigned int v17 = (unsigned __int16)a5;
              unsigned int v18 = 1;
              goto LABEL_52;
            }
          }
          else
          {
            if (a2 != 1376277) {
              return result;
            }
            if (!HIWORD(a5))
            {
              uint64_t v16 = *(void *)(a1 + 8);
              unsigned int v17 = (unsigned __int16)a5;
              unsigned int v18 = 16;
              goto LABEL_52;
            }
          }
          break;
      }
      goto LABEL_56;
    }
    if (a2 > 917504)
    {
      if (a2 == 917505)
      {
        if (a5 < 0x10000)
        {
          uint64_t v16 = *(void *)(a1 + 8);
          unsigned int v17 = (unsigned __int16)a5;
          unsigned int v18 = 0;
          goto LABEL_52;
        }
      }
      else if (!HIWORD(a5))
      {
        uint64_t v16 = *(void *)(a1 + 8);
        unsigned int v17 = (unsigned __int16)a5;
        unsigned int v18 = 14;
LABEL_52:
        return sub_100093308(v16, v18, (char *)a4, v17, 2u, 0, -1);
      }
LABEL_56:
      __break(0x5507u);
      JUMPOUT(0x100093C00);
    }
    if (a2 == 196613)
    {
      if (HIDWORD(a3)) {
        syslog(3, "%s:%s-%d losing integer precision for index value 0x08%lx", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", "SendISLPropertyChangeWithHints", 12305, a3);
      }
      uint64_t v19 = sub_1000D289C();
      if (!v19 || (v19 & 7) != 0) {
        goto LABEL_55;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v19 + 128))(v19, 6);
    }
    else if (a2 == 327708 && a5 == 14)
    {
      operator new[]();
    }
  }
  return result;
}

uint64_t sub_100093C1C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result >= 8) {
    goto LABEL_8;
  }
  if (result != 2 || a2 != 327708)
  {
    __break(0x5518u);
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (a4) {
    operator delete[]();
  }
  return result;
}

void sub_100093C64(uint64_t a1, int a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10001CE30(v4);
  if (a2 <= 1310720)
  {
    if (a2 == 327687)
    {
      uint64_t v10 = sub_1000D289C();
      if (v10 && (v10 & 7) == 0)
      {
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)v10 + 128);
        goto LABEL_26;
      }
    }
    else
    {
      if (a2 != 327688) {
        return;
      }
      uint64_t v10 = sub_1000D289C();
      if (v10 && (v10 & 7) == 0)
      {
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)v10 + 128);
LABEL_26:
        v11(v10, 2);
        return;
      }
    }
LABEL_33:
    __break(0x5516u);
    return;
  }
  if ((a2 - 1310721) < 2 || a2 == 1310724 || a2 == 1310723 && (sub_1000889B8(a1) & 0x800) != 0)
  {
    uint64_t v8 = sub_1000DC6C0(a3);
    if (!v8 || (uint64_t v9 = v8, (sub_100061FC4(v8) & 1) == 0))
    {
      sub_1000EE4F4(0, 4, "%s:%d INVALID HANDLE in GeneralLingo::SendISLNotification\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 12445);
      return;
    }
    if (a2 == 1310721) {
      operator new();
    }
    if ((v9 & 7) != 0) {
      goto LABEL_33;
    }
    if (*(void *)(a1 + 8) == sub_100063520(v9))
    {
      uint64_t v12 = sub_1000D289C();
      if (v12 && (v12 & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 128))(v12, 3);
        return;
      }
      goto LABEL_33;
    }
  }
}

uint64_t sub_100093F04(uint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result >= 8) {
    goto LABEL_9;
  }
  if (result != 3 || a2 != 1310721)
  {
    __break(0x5518u);
LABEL_9:
    __break(0x550Au);
LABEL_10:
    __break(0x5516u);
    return result;
  }
  if (a5)
  {
    if ((a5 & 1) == 0) {
      operator delete();
    }
    goto LABEL_10;
  }
  return result;
}

BOOL sub_100093F54(BOOL result, int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if (!(result & 7))
    {
      uint64_t result = sub_100094FA8(result, a2);
      BOOL v3 = result;
      if (result) {
        return !v3;
      }
      if ((((_BYTE)v2 + 44) & 3) == 0 && ((v2 + 54) & 1) == 0)
      {
        *(_WORD *)(v2 + 54) = 0;
        uint64_t v4 = *(void *)(v2 + 45);
        if (v4)
        {
          sub_1000C6E1C(v4);
          *(void *)(v2 + 45) = 0;
        }
        *(unsigned char *)(v2 + 53) = 0;
        *(unsigned char *)(v2 + 44) = 0;
        return !v3;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100093FCC(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100063520(result);
      if (result)
      {
        uint64_t v1 = result;
        if ((result & 7) == 0)
        {
          if (!sub_10001CE30(result)) {
            return 0;
          }
          sub_100063334(v1, 0);
          uint64_t result = sub_10006DB30(0, v1);
          if (!result)
          {
            uint64_t v2 = 0;
            goto LABEL_13;
          }
          if ((result & 7) == 0 && (((_BYTE)result + 56) & 7) == 0 && ((result + 1952) & 7) == 0)
          {
            uint64_t v2 = *(unsigned int *)(result + 1952);
LABEL_13:
            sub_100063380(v1, 0);
            return v2;
          }
        }
      }
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009408C(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((uint64_t v1 = *(void *)(result + 8)) != 0 ? (v2 = (*(void *)(result + 8) & 7) == 0) : (v2 = 0), v2))
  {
    *(void *)(v1 + 1992) = 0;
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000940B8(uint64_t result, int a2, int a3, uint64_t a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v5 = (int *)result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  __int16 v7 = *(_WORD *)(result + 126);
  __int16 v16 = v7;
  if (!a5) {
    goto LABEL_12;
  }
  if ((a5 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return result;
  }
  int v11 = *(_DWORD *)(result + 68);
  sub_100063334(a5, 0);
  uint64_t result = sub_10006DB30(0, a5);
  if (!result)
  {
LABEL_12:
    __break(0x5518u);
    goto LABEL_13;
  }
  uint64_t v12 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v13 = sub_10006F9E0((void *)result, v5[17], v7, a4, a3);
  if (v13)
  {
    uint64_t v14 = (uint64_t)v13;
    (*(void (**)(int *))(*(void *)v5 + 8))(v5);
  }
  else
  {
    sub_100062FD8(a5, 0, 1);
    int v15 = sub_10006FADC();
    sub_100062F84(a5, 0, v15);
    uint64_t v14 = sub_1000C4B20(a5, (uint64_t)v5, a2, 1u);
    if (v14) {
      sub_10006FB58(v12, v11, &v16, 0, 0xFFFFu);
    }
  }
  sub_100063380(a5, 0);
  return v14;
}

uint64_t sub_100094210(uint64_t result, int a2, _WORD *a3, void *a4)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  sub_100063334(result, 0);
  uint64_t result = sub_10006DB30(0, v4);
  if (!result)
  {
LABEL_6:
    __break(0x5518u);
    goto LABEL_7;
  }
  if ((result & 7) == 0)
  {
    uint64_t v8 = sub_10006FB58(result, a2, a3, a4, 0xFFFFu);
    sub_100063380(v4, 0);
    return v8;
  }
LABEL_7:
  __break(0x5516u);
  return result;
}

void sub_1000942A4(uint64_t a1, unsigned __int8 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100099E48(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_100099F48((void *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_100094388(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100017680(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_100099FDC((void *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_10009446C(uint64_t a1, std::string *a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_18;
  }
  sub_10009767C(a2, &v11);
  int v4 = SHIBYTE(v11.__r_.__value_.__r.__words[2]);
  uint64_t v5 = (void *)v11.__r_.__value_.__r.__words[0];
  uint64_t v6 = (v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
     ? &v11
     : (std::string *)v11.__r_.__value_.__r.__words[0];
  uint64_t v7 = strcmp((const char *)v6, off_10013B6A8);
  int v8 = v7;
  if (v4 < 0)
  {
    operator delete(v5);
    if (v8) {
      return;
    }
  }
  else if (v7)
  {
    return;
  }
  uint64_t v9 = sub_10006D8BC(v7);
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v10 = sub_10009EF00(v9, *(void *)(a1 + 8), 0xDu);
  if (!v10) {
    return;
  }
  if ((v10 & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    return;
  }
  (*(void (**)(uint64_t, std::string *))(*(void *)v10 + 112))(v10, a2);
}

uint64_t sub_10009455C(uint64_t result, unsigned __int16 a2)
{
  unsigned __int16 v8 = a2;
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t result = sub_10001CE30(result);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_24;
  }
  uint64_t v7 = 0xAAAAAAAAAAAAAAAALL;
  if (((v2 + 1200) & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v4 = result;
  uint64_t result = sub_100017548(v2 + 1200, &v8);
  uint64_t v7 = result;
  if (((v2 + 1208) & 7) != 0) {
    goto LABEL_24;
  }
  if (v2 + 1208 != result)
  {
    uint64_t result = (uint64_t)sub_100004C28(&v7);
    if (result)
    {
      if ((result & 7) == 0)
      {
        uint64_t v5 = (uint64_t *)(result + 8);
        if (((result + 8) & 7) == 0)
        {
          uint64_t result = *v5;
          if (*v5)
          {
            if ((result & 7) == 0)
            {
              if (*(unsigned __int8 *)(result + 56) < 2u)
              {
                sub_100094F3C(result);
                operator delete();
              }
              goto LABEL_25;
            }
          }
        }
      }
    }
LABEL_24:
    __break(0x5516u);
LABEL_25:
    __break(0x550Au);
    return result;
  }
  if (sub_1000861A0(v4)) {
    operator new[]();
  }
  return 2;
}

void sub_10009476C(uint64_t a1, std::string *a2)
{
  if (!a1) {
    goto LABEL_25;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v4 = sub_100051084();
  uint64_t v5 = sub_1000DD4C4(*(void *)(a1 + 8));
  if (!a2 || (a2 & 7) != 0 || !v4 || (v4 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v6 = v5;
  uint64_t data_low = LOWORD(a2->__r_.__value_.__l.__data_);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 88))(v4, v5, data_low))
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 96))(v4, v6, data_low);
    uint64_t v9 = v8;
    if (v8 && (v8 & 7) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_10009767C(a2, &v17);
  int v10 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
  std::string v11 = (void *)v17.__r_.__value_.__r.__words[0];
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v12 = &v17;
  }
  else {
    uint64_t v12 = (std::string *)v17.__r_.__value_.__r.__words[0];
  }
  uint64_t v13 = strcmp((const char *)v12, off_10013B6A8);
  int v14 = v13;
  if (v10 < 0)
  {
    operator delete(v11);
    if (v14) {
      return;
    }
  }
  else if (v13)
  {
    return;
  }
  uint64_t v15 = sub_10006D8BC(v13);
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v16 = sub_10009EF00(v15, *(void *)(a1 + 8), 0xDu);
  if (!v16) {
    return;
  }
  if ((v16 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    return;
  }
  (*(void (**)(uint64_t, std::string *, uint64_t))(*(void *)v16 + 144))(v16, a2, v9);
}

BOOL sub_100094900(BOOL result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 53);
    if (v1 <= 1) {
      return v1 == 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_100094938(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_100063520(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_10001CE30(result);
  if (!result)
  {
LABEL_11:
    __break(0x5518u);
    goto LABEL_12;
  }
  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 136))(result, 0);
  if (result >= 0x10000)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }
  unsigned __int16 v1 = result - 2;
  if (result <= 2) {
    return (unsigned __int16)result;
  }
  return v1;
}

uint64_t sub_1000949D8(uint64_t result, __int16 a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  unsigned int v3 = *(unsigned __int8 *)(result + 53);
  if (v3 <= 1)
  {
    if (*(unsigned char *)(result + 53)) {
      return v3 == 0;
    }
    if (((result + 54) & 1) == 0)
    {
      *(_WORD *)(result + 54) = a2;
      *(void *)(result + 45) = a3;
      *(unsigned char *)(result + 53) = 1;
      return v3 == 0;
    }
    goto LABEL_9;
  }
LABEL_10:
  __break(0x550Au);
  return result;
}

BOOL sub_100094A2C(BOOL result, int a2, void *a3, unsigned char *a4)
{
  if (result)
  {
    uint64_t v4 = result;
    if (!(result & 7))
    {
      uint64_t result = sub_100094FA8(result, a2);
      if (result) {
        return !result;
      }
      if ((((_BYTE)v4 + 44) & 3) == 0)
      {
        *a3 = *(void *)(v4 + 45);
        *a4 = *(unsigned char *)(v4 + 44);
        return !result;
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_100094A9C(BOOL result, int a2)
{
  if (!result) {
    goto LABEL_8;
  }
  BOOL v2 = result;
  if (result & 7) {
    goto LABEL_8;
  }
  uint64_t result = sub_100094FA8(result, a2);
  if (result) {
    return !result;
  }
  unsigned int v3 = (unsigned char *)(v2 + 44);
  if ((v2 + 44) & 3)
  {
LABEL_8:
    __break(0x5516u);
  }
  else
  {
    int v4 = *v3;
    if (v4 != 255)
    {
      *unsigned int v3 = v4 + 1;
      return !result;
    }
  }
  __break(0x5507u);
  return result;
}

uint64_t *sub_100094B04(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10013BF00, memory_order_acquire) & 1) == 0) {
    goto LABEL_17;
  }
  while (1)
  {
    if (!a1)
    {
      __break(0x5518u);
      goto LABEL_16;
    }
    if ((a1 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v2 = sub_100063520(a1);
    if (!v2) {
      goto LABEL_16;
    }
    a1 = v2;
    if ((v2 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v3 = sub_100063334(v2, 0);
    uint64_t v4 = sub_10006D8BC(v3);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v5 = sub_10009EF00(v4, a1, 0);
    if (v5)
    {
      if ((v5 & 7) != 0 || (((_BYTE)v5 - 56) & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v6 = (uint64_t *)(v5 + 2088);
    }
    else
    {
      uint64_t v6 = &qword_10013BEE8;
    }
    if ((v6 & 7) == 0) {
      break;
    }
LABEL_16:
    __break(0x5516u);
LABEL_17:
    if (__cxa_guard_acquire(&qword_10013BF00))
    {
      qword_10013BEF8 = 0;
      qword_10013BEF0 = 0;
      qword_10013BEE8 = (uint64_t)&qword_10013BEF0;
      __cxa_atexit((void (*)(void *))sub_100094C2C, &qword_10013BEE8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10013BF00);
    }
  }
  sub_100063380(a1, 0);
  return v6;
}

uint64_t sub_100094C2C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10000C538(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100094C40(uint64_t result, unsigned int a2, uint64_t *a3)
{
  if (!result) {
    goto LABEL_38;
  }
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_100063520(result);
  if (!result) {
    goto LABEL_39;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t v6 = sub_100063334(result, 0);
  uint64_t result = sub_10006D8BC(v6);
  if (!result || (result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_10009EF00(result, v5, 0);
  if (result)
  {
    uint64_t v7 = result;
    if ((result & 7) == 0 && (((_BYTE)result - 56) & 7) == 0)
    {
      uint64_t v8 = *(_DWORD ***)(result + 1992);
      if (v8 == *(_DWORD ***)(result + 2000))
      {
LABEL_37:
        sub_100063380(v5, 0);
        return 1;
      }
      uint64_t v9 = *(void *)(result + 1992) & 7;
      while (1)
      {
        unint64_t v18 = 0xAAAAAAAAAAAAAAAALL;
        if (!v8 || v9) {
          break;
        }
        int v10 = *v8;
        unint64_t v18 = (unint64_t)v10;
        BOOL v11 = v10 && (v10 & 7) == 0;
        if (!v11) {
          break;
        }
        if (a2 > 0xF) {
          goto LABEL_40;
        }
        if (*v10 == a2)
        {
          uint64_t v12 = (uint64_t *)(v10 + 2);
          if ((v12 & 7) != 0) {
            break;
          }
          uint64_t v13 = *v12;
          if (v13)
          {
            BOOL v11 = (v13 & 7) == 0;
            int v14 = (unsigned int *)(v13 + 8);
            if (!v11 || (v14 & 7) != 0) {
              break;
            }
            unsigned int v16 = *v14;
            if (v16 > 0xF) {
              goto LABEL_40;
            }
            if (!v16)
            {
              unint64_t v17 = a3[1];
              if (v17 >= a3[2])
              {
                uint64_t result = sub_10009A074(a3, &v18);
              }
              else
              {
                uint64_t result = (uint64_t)sub_10002A9E0(a3, &v18);
                if (v17 >= 0xFFFFFFFFFFFFFFF8) {
                  goto LABEL_41;
                }
                uint64_t result = v17 + 8;
              }
              a3[1] = result;
            }
          }
        }
        if ((unint64_t)v8 >= 0xFFFFFFFFFFFFFFF8) {
          goto LABEL_41;
        }
        if (++v8 == *(_DWORD ***)(v7 + 2000)) {
          goto LABEL_37;
        }
      }
    }
  }
  else
  {
LABEL_38:
    __break(0x5518u);
  }
LABEL_39:
  __break(0x5516u);
LABEL_40:
  __break(0x550Au);
LABEL_41:
  __break(0x5513u);
  return result;
}

uint64_t sub_100094DEC(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100063520(result);
      if (result)
      {
        uint64_t v1 = result;
        if ((result & 7) == 0)
        {
          uint64_t v2 = sub_100063334(result, 0);
          uint64_t result = sub_10006D8BC(v2);
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t result = sub_10009EF00(result, v1, 0);
              if (!result)
              {
                sub_1000EE4F4(0, 4, "%s:%d GetPreferredBundleSeedID handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 14040, v1);
                uint64_t v3 = 0;
                goto LABEL_13;
              }
              if ((result & 7) == 0 && (((_BYTE)result - 56) & 7) == 0 && ((result + 2112) & 7) == 0)
              {
                uint64_t v3 = *(void *)(result + 2112);
LABEL_13:
                sub_100063380(v1, 0);
                return v3;
              }
            }
          }
        }
      }
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

std::string *sub_100094ED4(std::string *result, std::string::value_type a2, __int16 a3, std::string::value_type *__s)
{
  if (!result
    || (uint64_t v4 = result, (result & 7) != 0)
    || (uint64_t result = (std::string *)((char *)result + 8), ((unint64_t)&v4->__r_.__value_.__l.__size_ & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result->__r_.__value_.__r.__words[0] = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4[1].__r_.__value_.__r.__words[0] = 0;
    v4->__r_.__value_.__s.__data_[2] = a2;
    LOWORD(v4->__r_.__value_.__l.__data_) = a3;
    LOWORD(v4[1].__r_.__value_.__r.__words[1]) = 0;
    v4[2].__r_.__value_.__s.__data_[8] = 0;
    std::string::assign(result, __s);
    *(std::string::size_type *)((char *)&v4[1].__r_.__value_.__r.__words[2] + 4) = 0;
    HIDWORD(v4[2].__r_.__value_.__r.__words[0]) = 0;
    return v4;
  }
  return result;
}

uint64_t sub_100094F3C(uint64_t result)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0) {
    goto LABEL_10;
  }
  uint64_t result = *(void *)(result + 45);
  if (result)
  {
    uint64_t result = sub_1000C6E1C(result);
    *(void *)(v1 + 45) = 0;
  }
  if (((v1 + 8) & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    return v1;
  }
  return result;
}

BOOL sub_100094FA8(BOOL result, int a2)
{
  if (result && (result & 7) == 0 && !(((_BYTE)result + 44) & 3 | (result + 54) & 1)) {
    return *(unsigned __int16 *)(result + 54) != a2;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100094FE0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      result += 48;
      if (((v2 + 48) & 7) == 0 && ((v2 + 56) & 7) == 0 && a2) {
        return v2 + 56 != sub_100099C60(result, a2);
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_100095038(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_10009A32C(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_10009A4B4((void *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_10009511C(uint64_t a1, uint64_t *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_7;
  }
  if ((uint64_t *)a1 == a2) {
    return;
  }
  sub_10000B13C(a1);
  if ((((_BYTE)a1 + 16) & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return;
  }
  sub_10009A550((uint64_t *)a1, *a2, (uint64_t)(a2 + 1));
}

void sub_100095180(uint64_t a1, _DWORD *a2, uint64_t a3, int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_214;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_214;
  }
  uint64_t v9 = sub_10001CE30(v5);
  unsigned int v105 = 0;
  uint64_t v10 = sub_10006D8BC(v9);
  if (!v10) {
    goto LABEL_214;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_214;
  }
  uint64_t v11 = sub_10009F368(v10, v9);
  unsigned int v103 = v11;
  uint64_t v12 = sub_10006D8BC(v11);
  if (!v12) {
    goto LABEL_214;
  }
  if ((v12 & 7) != 0) {
    goto LABEL_214;
  }
  uint64_t v13 = sub_10009FE80(v12, v9);
  int v101 = v13;
  if ((((_BYTE)a1 - 56) & 7) != 0) {
    goto LABEL_214;
  }
  if ((*(unsigned char *)(a1 + 2185) & 1) != 0 && (*(unsigned char *)(a1 + 2193) & 1) != 0 && (a4 & 1) == 0) {
    return;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_214;
  }
  if (*a2)
  {
    uint64_t v14 = 0;
    int v15 = 2;
    unsigned int v16 = 5;
    goto LABEL_196;
  }
  if (((unint64_t)(a2 + 7) & 3) != 0) {
    goto LABEL_214;
  }
  v99 = (int *)(a1 + 1224);
  if (((a1 + 1224) & 7) != 0) {
    goto LABEL_214;
  }
  int v104 = a2[7];
  int *v99 = 1;
  if ((((_BYTE)a2 + 20) & 3) != 0 || ((unint64_t)(a2 + 6) & 7) != 0) {
    goto LABEL_214;
  }
  if (*(unsigned __int8 *)(a1 + 2369) > 1u) {
    goto LABEL_217;
  }
  int v17 = a2[5];
  unsigned int v18 = a2[6];
  if (*(unsigned char *)(a1 + 2369)) {
    BOOL v19 = v104 == 53248;
  }
  else {
    BOOL v19 = 0;
  }
  int v21 = v19 || (v104 & 0xFFFFFF00) == 512;
  uint64_t v22 = sub_10007E4F4(a1, a2[6]);
  int v23 = v18 >> 4;
  if (v23 == 2) {
    int v24 = 1;
  }
  else {
    int v24 = 5;
  }
  if (v23 == 1) {
    int v24 = 0;
  }
  if (*(unsigned __int8 *)(a1 + 2368) > 1u) {
    goto LABEL_217;
  }
  int v100 = v18 & 3;
  uint64_t v98 = v22;
  if (*(unsigned char *)(a1 + 2368))
  {
    int v25 = 0;
    goto LABEL_58;
  }
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_214;
  }
  int v26 = v24;
  int v27 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 280))(v9);
  int v25 = 0;
  if ((v18 & 3) != 0) {
    char v28 = v21;
  }
  else {
    char v28 = 0;
  }
  if (v27)
  {
    uint64_t v22 = v98;
    int v24 = v26;
    if (v28) {
      goto LABEL_58;
    }
    uint64_t v29 = *(void *)(a1 + 8);
    if (!v29 || (v29 & 7) != 0) {
      goto LABEL_214;
    }
    if (!sub_1000637F0(v29))
    {
      if (!v30 || (v30 & 7) != 0) {
        goto LABEL_214;
      }
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (*(uint64_t (**)(void *))(*(void *)v30 + 384))(v30);
      sub_10008055C(1, v31, (void *)v9, v32);
    }
    sub_100080608(*(void *)(a1 + 8), v9, 0);
    int v25 = 1;
  }
  uint64_t v22 = v98;
  int v24 = v26;
LABEL_58:
  BOOL v33 = v9 != 0;
  if ((v9 & 7) != 0) {
    BOOL v33 = 0;
  }
  unsigned int v97 = v24;
  if (v24 != 5 || v22)
  {
    if (!v33) {
      goto LABEL_214;
    }
    if (v24 == (*(unsigned int (**)(uint64_t))(*(void *)v9 + 216))(v9))
    {
      int v37 = 1;
      goto LABEL_75;
    }
    if (v100 == 2) {
      int v38 = 1;
    }
    else {
      int v38 = a4;
    }
    int v36 = v21 & v38 ^ 1;
  }
  else
  {
    if (!v33) {
      goto LABEL_214;
    }
    int v34 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232))(v9);
    if (v104) {
      int v35 = v34;
    }
    else {
      int v35 = 0;
    }
    int v36 = v35 & (v21 ^ 1);
  }
  int v37 = v25 | v36;
LABEL_75:
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
  v39 = (uint64_t *)(a1 + 1408);
  if (((a1 + 1408) & 7) != 0) {
    goto LABEL_214;
  }
  uint64_t v40 = *v39;
  if (*v39)
  {
    if ((v40 & 3) == 0)
    {
      sub_1000614CC(v40);
      operator delete();
    }
    goto LABEL_214;
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
  if ((((_BYTE)a1 - 48) & 7) != 0) {
    goto LABEL_214;
  }
  if ((((_BYTE)a1 - 40) & 7) != 0) {
    goto LABEL_214;
  }
  *(_DWORD *)(a1 + 1240) = v104;
  if ((((_BYTE)a1 - 36) & 3) != 0) {
    goto LABEL_214;
  }
  *(_DWORD *)(a1 + 1244) = v17;
  uint64_t v41 = sub_1000808B4(a1, v9, v17, &v105);
  uint64_t v42 = sub_10006D8BC(v41);
  if (!v42 || (v42 & 7) != 0) {
    goto LABEL_214;
  }
  int v96 = sub_10005FCF8(v42, (const void *)v9, v104);
  if (!v96) {
    int v21 = 0;
  }
  if ((v17 & 1) == 0) {
    sub_1000EE4F4(0, 4, "%s:%d General lingo missing from mask!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 16593);
  }
  if ((v9 & 7) != 0)
  {
LABEL_214:
    __break(0x5516u);
LABEL_215:
    __break(0x5507u);
LABEL_216:
    __break(0x5500u);
    __break(0x5513u);
    goto LABEL_217;
  }
  int v43 = v18 & 0xC;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232))(v9);
  if (v44 && v43 | v17 & 0xFFFF8DE2) {
    int v37 = 1;
  }
  BOOL v45 = !(v17 & 1);
  if (v18 > 0xFF) {
    BOOL v45 = 1;
  }
  if (v100 == 3) {
    BOOL v45 = 1;
  }
  int v46 = v45 | v37;
  char v47 = v46 != 0;
  if ((v17 & 2) != 0)
  {
    uint64_t v48 = sub_10004CDB4();
    if (!v48) {
      goto LABEL_214;
    }
    uint64_t v49 = v48;
    if ((v48 & 7) != 0) {
      goto LABEL_214;
    }
    char v95 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 200))(v48);
    char v50 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 248))(v9);
    uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 184))(v49);
    char v51 = v95 & v50;
    int v43 = v18 & 0xC;
    char v52 = (v51 | v44) ^ 1;
    if (v46) {
      char v47 = 1;
    }
    else {
      char v47 = v52;
    }
  }
  if ((v17 & 0x400) != 0)
  {
    uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 256))(v9);
    v47 |= v44 ^ 1;
  }
  if ((v17 & 0x40) != 0)
  {
    uint64_t v53 = *(void *)(v9 + 40);
    if (!v53 || (v53 & 7) != 0) {
      goto LABEL_214;
    }
    uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v53 + 216))(v53);
    if (v44) {
      char v47 = 1;
    }
  }
  char v54 = a4 ^ 1 | v47;
  if (v100 == 2) {
    char v54 = v47;
  }
  if ((v54 & 1) == 0
    && ((v41 ^ 1) & 1) == 0
    && ((v21 ^ 1) & 1) == 0
    && (v17 & *(_DWORD *)(a1 + 1516) & v96) == v17)
  {
    unsigned int v55 = v103;
    if (v101 == 56 || v101 == 19) {
      unsigned int v55 = (~v17 | 0x2010) & v103;
    }
    sub_100080A00(a1, v9, v55);
    uint64_t v57 = sub_10006D8BC(v56);
    if (!v57 || (v57 & 7) != 0) {
      goto LABEL_214;
    }
    uint64_t v58 = sub_10005FCC8(v57, v104, (char *)(a1 + 1440), (unsigned char *)(a1 + 1441));
    if (v58) {
      sub_1000F264C();
    }
    if ((((_BYTE)a1 - 96) & 7) != 0) {
      goto LABEL_214;
    }
    int v59 = *(unsigned __int8 *)(a1 + 1440);
    if (v59 == 1)
    {
      if (*(unsigned __int8 *)(a1 + 2369) > 1u)
      {
LABEL_217:
        __break(0x550Au);
        return;
      }
      if (*(unsigned char *)(a1 + 2369))
      {
        if ((((_BYTE)a1 - 108) & 3) != 0) {
          goto LABEL_214;
        }
        *(_DWORD *)(a1 + 1428) = 1000;
        if ((((_BYTE)a1 - 104) & 7) != 0) {
          goto LABEL_214;
        }
        *(_DWORD *)(a1 + 1432) = 7500;
        *(unsigned char *)(a1 + 1439) = 4;
        v60 = (__int16 *)(a1 + 1436);
        if (((a1 + 1436) & 3) != 0) {
          goto LABEL_214;
        }
        __int16 v61 = 70;
        goto LABEL_153;
      }
    }
    else if (v59 == 2)
    {
      if ((((_BYTE)a1 - 108) & 3) != 0) {
        goto LABEL_214;
      }
      *(_DWORD *)(a1 + 1428) = 15000;
      if ((((_BYTE)a1 - 104) & 7) != 0) {
        goto LABEL_214;
      }
      *(_DWORD *)(a1 + 1432) = 75000;
      *(unsigned char *)(a1 + 1439) = 3;
      v60 = (__int16 *)(a1 + 1436);
      if (((a1 + 1436) & 3) != 0) {
        goto LABEL_214;
      }
      __int16 v61 = 255;
LABEL_153:
      __int16 *v60 = v61;
LABEL_158:
      uint64_t v67 = sub_10006D8BC(v58);
      if (v67)
      {
        if ((v67 & 7) == 0)
        {
          sub_10009FCEC(v67, v9, v104);
          uint64_t v69 = sub_10006D8BC(v68);
          if (v69)
          {
            if ((v69 & 7) == 0)
            {
              sub_10009F814(v69, v9, v18);
              uint64_t v71 = sub_10006D8BC(v70);
              if (v71)
              {
                if ((v71 & 7) == 0)
                {
                  sub_10009F924(v71, v9, 0, v43 == 12);
                  uint64_t v73 = sub_10006D8BC(v72);
                  if (v73)
                  {
                    if ((v73 & 7) == 0)
                    {
                      unsigned int v74 = v17 & 0x7FFF;
                      uint64_t v75 = (*(uint64_t (**)(uint64_t, void, void))(*(void *)v73 + 144))(v73, *(void *)(a1 + 8), v17 & 0x7FFF);
                      if (v75 == v74)
                      {
                        int v15 = 0;
                      }
                      else
                      {
                        sub_1000EE4F4(0, 4, "%s:%d setActiveLingoMaskReturn != devLingoes\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 16760);
                        int v15 = 2;
                      }
                      uint64_t v76 = sub_10006D8BC(v75);
                      if (v76)
                      {
                        if ((v76 & 7) == 0)
                        {
                          if ((*(unsigned int (**)(uint64_t, void, void))(*(void *)v76 + 160))(v76, *(void *)(a1 + 8), v17 & 0x7FFF) != v74)
                          {
                            sub_1000EE4F4(0, 4, "%s:%d setAllowedLingoMaskReturn != devLingoes\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 16770);
                            int v15 = 2;
                          }
                          uint64_t v13 = qword_10013C908;
                          if (qword_10013C908)
                          {
                            if ((qword_10013C908 & 7) != 0) {
                              goto LABEL_214;
                            }
                            uint64_t v13 = (*(uint64_t (**)(void))(*(void *)qword_10013C908 + 8))();
                            qword_10013C908 = 0;
                          }
                          unsigned int v77 = 0;
                          while (1)
                          {
                            if ((v74 >> v77))
                            {
                              uint64_t v78 = *(void *)(a1 + 8);
                              if (v78) {
                                BOOL v79 = (*(void *)(a1 + 8) & 7) == 0;
                              }
                              else {
                                BOOL v79 = 0;
                              }
                              if (!v79) {
                                goto LABEL_214;
                              }
                              uint64_t v80 = sub_100063334(v78, v77);
                              uint64_t v81 = sub_10006D8BC(v80);
                              if (!v81 || (v81 & 7) != 0) {
                                goto LABEL_214;
                              }
                              uint64_t v82 = sub_10009EF00(v81, *(void *)(a1 + 8), v77);
                              if (v82)
                              {
                                if ((v82 & 7) != 0) {
                                  goto LABEL_214;
                                }
                                (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v82 + 80))(v82, 4, 0, v9);
                              }
                              else
                              {
                                sub_1000EE4F4(0, 4, "%s:%d No lingo object! lingo=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 16800, v77);
                              }
                              uint64_t v83 = *(void *)(a1 + 8);
                              if (!v83 || (v83 & 7) != 0) {
                                goto LABEL_214;
                              }
                              uint64_t v13 = sub_100063380(v83, v77);
                            }
                            if (++v77 == 15) {
                              goto LABEL_195;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      goto LABEL_214;
    }
    if ((((_BYTE)a1 - 108) & 3) != 0) {
      goto LABEL_214;
    }
    *(_DWORD *)(a1 + 1428) = 0;
    if ((((_BYTE)a1 - 104) & 7) != 0) {
      goto LABEL_214;
    }
    *(_DWORD *)(a1 + 1432) = 0;
    *(unsigned char *)(a1 + 1439) = 0;
    if (((a1 + 1436) & 3) != 0) {
      goto LABEL_214;
    }
    *(_WORD *)(a1 + 1436) = 0;
    goto LABEL_158;
  }
  uint64_t v62 = sub_10006D8BC(v44);
  if (!v62 || (v62 & 7) != 0) {
    goto LABEL_214;
  }
  sub_100060464(v62, (void *)v9);
  sub_100080A00(a1, v9, v103);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232))(v9);
  if (v13)
  {
    int v63 = 4;
LABEL_137:
    uint64_t v14 = v98;
    unsigned int v16 = v97;
    int *v99 = v63;
    int v15 = 2;
    goto LABEL_196;
  }
  if ((v41 & 1) == 0)
  {
    LOBYTE(v64) = 0;
    unsigned int v65 = 0;
    int *v99 = 6;
    while (((v105 >> v64) & 1) == 0 || !__CFADD__(v65++, 1))
    {
      unsigned int v64 = (v64 + 1);
      if (v64 >= 0xF)
      {
        if (v65 > 0xFF) {
          goto LABEL_215;
        }
        if (a3 && (a3 & 7) == 0 && (((_BYTE)a3 + 24) & 7) == 0)
        {
          *(unsigned char *)(a3 + 24) = v65;
          operator new[]();
        }
        goto LABEL_214;
      }
    }
    goto LABEL_216;
  }
  int *v99 = 5;
  if ((v17 & 0x7FFF) != 0)
  {
    if ((*(_DWORD *)(a1 + 1516) & v17 & 0x7FFF) != 0) {
      int v63 = 3;
    }
    else {
      int v63 = 4;
    }
    goto LABEL_137;
  }
  int v15 = 2;
LABEL_195:
  uint64_t v14 = v98;
  unsigned int v16 = v97;
LABEL_196:
  *(_DWORD *)(a1 + 2372) = 0;
  if (v15)
  {
    sub_10007DCF8(a1, v9, 1, 1);
    sub_100080304(a1, v84, 1);
    return;
  }
  if (v14 || v16 != 5)
  {
    uint64_t v85 = sub_10006D8BC(v13);
    if (v85)
    {
      if ((v85 & 7) == 0)
      {
        uint64_t v86 = sub_10006074C(v85, v9, v14);
        uint64_t v87 = sub_10006D8BC(v86);
        if (v87)
        {
          if ((v87 & 7) == 0)
          {
            uint64_t v88 = sub_100060790(v87, v9, v16);
            uint64_t v89 = sub_10006D8BC(v88);
            if (v89)
            {
              if ((v89 & 7) == 0)
              {
                uint64_t v90 = sub_1000A15B4(v89, v14, 0);
                if (!v90) {
                  return;
                }
                uint64_t v91 = v90;
                uint64_t v92 = sub_10006D8BC(v90);
                if (v92)
                {
                  if ((v92 & 7) == 0)
                  {
                    uint64_t v93 = sub_1000A11DC(v92, *(void *)(a1 + 8), v91);
                    uint64_t v94 = sub_10006D8BC(v93);
                    if (v94)
                    {
                      if ((v94 & 7) == 0)
                      {
                        sub_1000A11DC(v94, v91, *(void *)(a1 + 8));
                        return;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_214;
  }
}

uint64_t sub_100095E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_140;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_140;
  }
  uint64_t v8 = sub_10001CE30(v4);
  if (!a2) {
    goto LABEL_140;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_140;
  }
  uint64_t v9 = (unsigned char *)(a2 + 16);
  if (((a2 + 16) & 7) != 0) {
    goto LABEL_140;
  }
  int v10 = *v9;
  size_t v11 = *(unsigned __int8 *)(a2 + 17);
  switch(*v9)
  {
    case 0:
      if (v11 != 4) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      unsigned int v20 = *(unsigned int **)(a2 + 24);
      if (!v20) {
        goto LABEL_140;
      }
      unsigned int v21 = bswap32(*v20);
      uint64_t v22 = (unsigned int *)(a1 + 1968);
      uint64_t v23 = (a1 + 1968) & 7;
      if (v21)
      {
        if (!v23)
        {
          int v17 = 0;
          uint64_t v19 = 0;
          *uint64_t v22 = v21;
          goto LABEL_132;
        }
      }
      else if (!v23)
      {
        int v17 = 0;
        *uint64_t v22 = 0;
LABEL_113:
        uint64_t v19 = 2;
        goto LABEL_132;
      }
      goto LABEL_140;
    case 1:
    case 6:
    case 7:
    case 8:
    case 0xE:
      if ((v11 - 1) > 0x3Fu) {
        goto LABEL_28;
      }
      uint64_t v12 = (const void **)(a2 + 24);
      if (v11 <= 1) {
        char v13 = 1;
      }
      else {
        char v13 = *(unsigned char *)(a2 + 17);
      }
      unsigned __int8 v14 = v13 + 1;
      unsigned __int8 v15 = 1;
      do
      {
        if (v11 <= v15) {
          goto LABEL_28;
        }
        if (((a2 + 24) & 7) != 0) {
          goto LABEL_140;
        }
        unsigned int v16 = *v12;
        if (__CFADD__(*v12, v15)) {
          goto LABEL_141;
        }
        if (!v16) {
          goto LABEL_140;
        }
        if (!v16[v15]) {
          goto LABEL_24;
        }
        ++v15;
      }
      while (v11 >= v15);
      unsigned __int8 v15 = v14;
LABEL_24:
      if (v11 <= v15)
      {
LABEL_28:
        int v17 = 0;
        if (v10 == 8) {
          uint64_t v19 = 2;
        }
        else {
          uint64_t v19 = 1;
        }
        goto LABEL_132;
      }
      int v17 = 0;
      switch(v10)
      {
        case 6:
          if ((((_BYTE)a1 + 56) & 7) != 0) {
            goto LABEL_140;
          }
          unsigned int v18 = (void *)(a1 + 1696);
          int v17 = 32;
          goto LABEL_126;
        case 7:
          if ((((_BYTE)a1 + 56) & 7) != 0) {
            goto LABEL_140;
          }
          unsigned int v18 = (void *)(a1 + 1760);
          int v17 = 64;
          goto LABEL_126;
        case 8:
          if ((((_BYTE)a1 + 56) & 7) != 0) {
            goto LABEL_140;
          }
          int v17 = 0;
          unsigned int v18 = (void *)(a1 + 1824);
          goto LABEL_126;
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
          goto LABEL_127;
        case 14:
          if ((((_BYTE)a1 + 56) & 7) != 0) {
            goto LABEL_140;
          }
          int v17 = 0;
          unsigned int v18 = (void *)(a1 + 1888);
          goto LABEL_126;
        default:
          if (v10 != 1) {
            goto LABEL_127;
          }
          unsigned int v18 = (void *)(a1 + 1592);
          if (((a1 + 1592) & 7) != 0) {
            goto LABEL_140;
          }
          int v17 = 4;
LABEL_126:
          memcpy(v18, *v12, v11);
LABEL_127:
          char v50 = *(char **)(a1 + 8);
          if (!v50 || (v50 & 7) != 0 || ((a1 + 1592) & 3) != 0) {
            goto LABEL_140;
          }
          sub_100063778(v50, (const void *)(a1 + 1592));
          break;
      }
      goto LABEL_131;
    case 2:
      if (v11 != 7) {
        goto LABEL_112;
      }
      int v24 = (unsigned int **)(a2 + 24);
      if ((v24 & 7) != 0) {
        goto LABEL_140;
      }
      if (!*v24) {
        goto LABEL_140;
      }
      unsigned int v25 = **v24;
      uint64_t v26 = sub_10005176C();
      if (!v26 || (v26 & 7) != 0) {
        goto LABEL_140;
      }
      if (bswap32(v25) != (*(unsigned int (**)(uint64_t))(*(void *)v26 + 112))(v26)) {
        goto LABEL_111;
      }
      int v27 = *v24;
      if ((unint64_t)*v24 > 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_141;
      }
      char v28 = (const void *)(a1 + 1592);
      if ((a1 + 1592) & 7) != 0 || ((a1 + 1662)) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1662) = *((unsigned char *)v27 + 4);
      if ((unint64_t)v27 > 0xFFFFFFFFFFFFFFFALL) {
        goto LABEL_141;
      }
      *(unsigned char *)(a1 + 1663) = *((unsigned char *)v27 + 5);
      if ((unint64_t)v27 > 0xFFFFFFFFFFFFFFF9) {
        goto LABEL_141;
      }
      if ((((_BYTE)a1 + 0x80) & 7) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1664) = *((unsigned char *)v27 + 6);
      goto LABEL_108;
    case 3:
      if (v11 != 3) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      uint64_t v29 = *(unsigned __int8 **)(a2 + 24);
      if (!v29) {
        goto LABEL_140;
      }
      unint64_t v30 = *v29;
      if (v30 > 0xE)
      {
LABEL_112:
        int v17 = 0;
        goto LABEL_113;
      }
      if ((unint64_t)v29 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_141;
      }
      char v28 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0)
      {
LABEL_140:
        __break(0x5516u);
        goto LABEL_141;
      }
      if (__CFADD__(a1 + 1666, 2 * v30))
      {
LABEL_141:
        __break(0x5513u);
        JUMPOUT(0x1000964C4);
      }
      uint64_t v31 = a1 + 1666 + 2 * v30;
      if (v31) {
        goto LABEL_140;
      }
      *(_WORD *)uint64_t v31 = bswap32(*(unsigned __int16 *)(v29 + 1)) >> 16;
LABEL_108:
      uint64_t v49 = *(char **)(a1 + 8);
      if (!v49 || *(void *)(a1 + 8) & 7 | v28 & 3) {
        goto LABEL_140;
      }
      sub_100063778(v49, v28);
LABEL_111:
      int v17 = 0;
LABEL_131:
      uint64_t v19 = 0;
LABEL_132:
      if (!a3 || (a3 & 7) != 0 || (((_BYTE)a3 + 12) & 3) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a3 + 12) = 1;
      *(unsigned char *)(a3 + 13) = v10;
      if (!v19)
      {
        if ((((_BYTE)a1 - 72) & 7) == 0)
        {
          *(unsigned char *)(a1 + 1976) = 1;
          if (((a1 + 2184) & 7) == 0)
          {
            *(_DWORD *)(a1 + 2184) |= v17;
            return v19;
          }
        }
        goto LABEL_140;
      }
      return v19;
    case 4:
      if (v11 != 3) {
        goto LABEL_114;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      uint64_t v32 = *(unsigned char **)(a2 + 24);
      if (!v32) {
        goto LABEL_140;
      }
      BOOL v33 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0 || ((a1 + 1656) & 7) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1656) = *v32;
      if (v32 == (unsigned char *)-1) {
        goto LABEL_141;
      }
      *(unsigned char *)(a1 + 1657) = v32[1];
      if ((unint64_t)v32 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_141;
      }
      if ((a1 + 1658)) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1658) = v32[2];
      int v34 = *(char **)(a1 + 8);
      if (!v34 || *(void *)(a1 + 8) & 7 | v33 & 3) {
        goto LABEL_140;
      }
      sub_100063778(v34, v33);
      uint64_t v19 = 0;
      int v17 = 8;
      goto LABEL_132;
    case 5:
      if (v11 != 3)
      {
LABEL_114:
        int v17 = 0;
        uint64_t v19 = 1;
        goto LABEL_132;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      int v35 = *(unsigned char **)(a2 + 24);
      if (!v35) {
        goto LABEL_140;
      }
      int v36 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1659) = *v35;
      if (v35 == (unsigned char *)-1) {
        goto LABEL_141;
      }
      if (((a1 + 1660) & 3) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1660) = v35[1];
      if ((unint64_t)v35 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_141;
      }
      *(unsigned char *)(a1 + 1661) = v35[2];
      int v37 = *(char **)(a1 + 8);
      if (!v37 || *(void *)(a1 + 8) & 7 | v36 & 3) {
        goto LABEL_140;
      }
      sub_100063778(v37, v36);
      uint64_t v19 = 0;
      int v17 = 16;
      goto LABEL_132;
    case 9:
      if (v11 != 2) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      int v38 = *(unsigned __int16 **)(a2 + 24);
      if (!v38) {
        goto LABEL_140;
      }
      unsigned int v39 = *v38;
      if (!v8 || (v8 & 7) != 0) {
        goto LABEL_140;
      }
      (*(void (**)(uint64_t, void))(*(void *)v8 + 152))(v8, __rev16(v39));
      goto LABEL_111;
    case 0xA:
      int v17 = 0;
      uint64_t v19 = 2 * (v11 != 1);
      goto LABEL_132;
    case 0xB:
      if (v11 != 4) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      uint64_t v40 = *(unsigned int **)(a2 + 24);
      if (!v40) {
        goto LABEL_140;
      }
      unsigned int v41 = *v40;
      uint64_t v42 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0) {
        goto LABEL_140;
      }
      if ((((_BYTE)a1 - 96) & 7) != 0) {
        goto LABEL_140;
      }
      unsigned int v43 = bswap32(v41);
      *(_DWORD *)(a1 + 1952) = v43;
      uint64_t v44 = *(char **)(a1 + 8);
      if (!v44 || *(void *)(a1 + 8) & 7 | v42 & 3) {
        goto LABEL_140;
      }
      uint64_t v19 = 2 * ((v43 & 0xF) == 0);
      sub_100063778(v44, v42);
      int v17 = 0;
      goto LABEL_132;
    case 0xC:
      if (v11 != 4) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      BOOL v45 = *(unsigned int **)(a2 + 24);
      if (!v45) {
        goto LABEL_140;
      }
      unsigned int v46 = *v45;
      char v28 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0) {
        goto LABEL_140;
      }
      if ((((_BYTE)a1 - 92) & 3) != 0) {
        goto LABEL_140;
      }
      *(_DWORD *)(a1 + 1956) = bswap32(v46);
      if ((((_BYTE)a1 - 84) & 3) != 0) {
        goto LABEL_140;
      }
      *(unsigned char *)(a1 + 1964) = 1;
      goto LABEL_108;
    case 0xD:
      if (v11 != 4) {
        goto LABEL_112;
      }
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_140;
      }
      char v47 = *(unsigned int **)(a2 + 24);
      if (!v47) {
        goto LABEL_140;
      }
      unsigned int v48 = *v47;
      char v28 = (const void *)(a1 + 1592);
      if (((a1 + 1592) & 7) != 0 || (((_BYTE)a1 - 88) & 7) != 0) {
        goto LABEL_140;
      }
      *(_DWORD *)(a1 + 1960) = bswap32(v48);
      *(unsigned char *)(a1 + 1965) = 1;
      goto LABEL_108;
    default:
      goto LABEL_112;
  }
}

uint64_t sub_100096524(uint64_t result, uint64_t a2)
{
  if (!a2) {
    goto LABEL_11;
  }
  __int16 v4 = -21846;
  char v5 = -86;
  if ((a2 & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v2 = (unsigned char *)result;
  uint64_t result = sub_10001CE30(a2);
  if (!result)
  {
LABEL_11:
    __break(0x5518u);
    goto LABEL_12;
  }
  if (!v2 || (v2 & 7) != 0 || ((unint64_t)(v2 + 16) & 7) != 0) {
    goto LABEL_12;
  }
  LOBYTE(v4) = v2[16];
  if (&v3 == (uint64_t *)-14) {
    goto LABEL_13;
  }
  HIBYTE(v4) = v2[17];
  if ((v2 + 18))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  if (&v6 == 0 || (unint64_t)&v4 < 0xFFFFFFFFFFFFFFFDLL)
  {
    char v5 = v2[18];
    sub_1000C51E0();
  }
LABEL_13:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000965EC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_70;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_70;
  }
  if (!a2) {
    goto LABEL_70;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_70;
  }
  __int16 v4 = (_DWORD *)(a2 + 20);
  if (((a2 + 20) & 3) != 0) {
    goto LABEL_70;
  }
  if (((a2 + 24) & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_70;
  }
  int v5 = *(_DWORD *)(a2 + 20);
  int v6 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_10001CE30(result);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_70;
  }
  if ((((_BYTE)v2 - 56) & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v7 = result;
  if (*(unsigned char *)(v2 + 2184) & 1) != 0 && (*(unsigned char *)(v2 + 2192)) {
    return 6;
  }
  int v8 = v6 >> 4;
  int v9 = v8 == 2 ? 1 : 5;
  unsigned int v10 = v8 - 1;
  unsigned int v11 = v8 == 1 ? 0 : v9;
  __int16 v28 = 116;
  uint64_t result = sub_10006FB58(v2, -1, &v28, 0, 0xFFFFu);
  if ((v7 & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 216))(v7);
  if (v11 == result) {
    goto LABEL_21;
  }
  uint64_t v12 = 1;
  if (v10 > 1 || (v6 & 3) != 0)
  {
LABEL_22:
    uint64_t result = sub_10006D8BC(result);
    if (result)
    {
      if ((result & 7) == 0)
      {
        uint64_t v13 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)result + 144))(result, *(void *)(v2 + 8), 1);
        uint64_t result = sub_10006D8BC(v13);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)result + 160))(result, *(void *)(v2 + 8), 1);
            uint64_t result = sub_10006D8BC(v14);
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_100060464(result, (void *)v7);
                return v12;
              }
            }
          }
        }
      }
    }
    goto LABEL_70;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t result = sub_1000A190C(result, v11);
  if (!result) {
    goto LABEL_22;
  }
  unsigned __int8 v15 = (void *)result;
  uint64_t result = sub_10006D8BC(result);
  if (!result
    || (result & 7) != 0
    || (v16 = sub_1000601E8(result, (uint64_t)v15), v17 = v16, (uint64_t result = sub_10006D8BC(v16)) == 0)
    || (result & 7) != 0)
  {
LABEL_70:
    __break(0x5516u);
    goto LABEL_71;
  }
  uint64_t result = sub_100060700(result, (uint64_t)v15);
  if (result <= 7)
  {
    int v18 = result;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 216))(v7);
    if (v18 == result)
    {
      uint64_t result = sub_10006D8BC(result);
      if (!result || (result & 7) != 0) {
        goto LABEL_70;
      }
      uint64_t result = sub_1000A15B4(result, (uint64_t)v15, 0);
      if (result)
      {
        uint64_t v19 = result;
        uint64_t result = sub_10006D8BC(result);
        if (!result) {
          goto LABEL_70;
        }
        if ((result & 7) != 0) {
          goto LABEL_70;
        }
        uint64_t v20 = sub_1000A11DC(result, *(void *)(v2 + 8), v19);
        uint64_t result = sub_10006D8BC(v20);
        if (!result || (result & 7) != 0) {
          goto LABEL_70;
        }
        uint64_t result = sub_1000A11DC(result, v19, *(void *)(v2 + 8));
      }
    }
    if (!v5) {
      goto LABEL_21;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 216))(v7);
    if (v18 != result) {
      goto LABEL_21;
    }
    if ((v17 + 8) <= 0xF)
    {
      if (v17 != 6) {
        goto LABEL_21;
      }
      *(void *)&long long v21 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v21 + 1) = 0xAAAAAAAAAAAAAAAALL;
      long long v26 = v21;
      long long v27 = v21;
      v25[0] = v21;
      v25[1] = v21;
      LODWORD(v26) = 0;
      DWORD1(v25[0]) = 0;
      if (((a2 + 16) & 7) == 0)
      {
        LOBYTE(v27) = *(unsigned char *)(a2 + 16);
        DWORD1(v27) = *v4;
        uint64_t result = sub_10006D8BC(result);
        if (result)
        {
          if ((result & 7) == 0)
          {
            DWORD2(v27) = v6 & 0xC | 2;
            HIDWORD(v27) = sub_10009FDA4(result, (uint64_t)v15);
            sub_100095180(v2, &v26, (uint64_t)v25, 1);
            uint64_t v12 = result;
            if (result) {
              goto LABEL_22;
            }
            uint64_t result = sub_10006D8BC(result);
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_1000604FC(result, v15, (void *)v7);
                if (!result)
                {
                  uint64_t result = sub_10006D8BC(result);
                  if (result)
                  {
                    if ((result & 7) == 0)
                    {
                      uint64_t v22 = sub_10009FDA4(result, (uint64_t)v15);
                      int v23 = v22;
                      uint64_t result = sub_10006D8BC(v22);
                      if (result)
                      {
                        if ((result & 7) == 0)
                        {
                          sub_10009FCEC(result, v7, v23);
                          if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 216))(v7) == 2) {
                            int v24 = 10100;
                          }
                          else {
                            int v24 = 3100;
                          }
                          sub_10006F9E0((void *)v2, -1, 116, 0, v24);
                          return 0;
                        }
                      }
                    }
                  }
                  goto LABEL_70;
                }
LABEL_21:
                uint64_t v12 = 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      goto LABEL_70;
    }
  }
LABEL_71:
  __break(0x550Au);
  return result;
}

void sub_100096A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_40;
  }
  if (!a2 || !a3) {
    return;
  }
  if ((a2 & 7) != 0 || (((_BYTE)a2 + 8) & 7) != 0) {
    goto LABEL_40;
  }
  *(void *)(a2 + 8) = a3;
  if (!*(_DWORD *)a2)
  {
    if ((a3 & 7) != 0 || ((a3 + 4) & 3) != 0) {
      goto LABEL_40;
    }
    unsigned int v9 = *(_DWORD *)(a3 + 4);
    if (v9 >= 0x200) {
      goto LABEL_41;
    }
    if (v9) {
      goto LABEL_33;
    }
    if (((a2 + 20) & 3) == 0)
    {
      if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
        goto LABEL_33;
      }
      if (((a3 + 8) & 7) == 0)
      {
        unsigned int v10 = *(_DWORD *)(a3 + 8);
        if (v10 <= 0xF)
        {
          if (v10) {
            goto LABEL_33;
          }
          int v8 = *(_DWORD *)(a1 + 192) | 0x80;
          goto LABEL_31;
        }
        goto LABEL_41;
      }
    }
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }
  if (*(_DWORD *)a2 != 6)
  {
    if ((a3 & 7) == 0) {
      goto LABEL_33;
    }
    goto LABEL_40;
  }
  if ((a3 & 7) != 0 || ((a3 + 4) & 3) != 0) {
    goto LABEL_40;
  }
  unsigned int v5 = *(_DWORD *)(a3 + 4);
  if (v5 > 0x1FF) {
    goto LABEL_41;
  }
  if (v5 != 6) {
    goto LABEL_33;
  }
  if (((a3 + 8) & 7) != 0) {
    goto LABEL_40;
  }
  unsigned int v6 = *(_DWORD *)(a3 + 8);
  if (v6 > 0xF)
  {
LABEL_41:
    __break(0x550Au);
    return;
  }
  if (v6 == 6) {
    goto LABEL_33;
  }
  unsigned int v7 = *(_DWORD *)(a1 + 192) & 0xFFFFFEFE;
  *(_DWORD *)(a1 + 192) = v7 | 0x100;
  if (((a2 + 20) & 3) != 0) {
    goto LABEL_40;
  }
  if (!v6 && (*(_DWORD *)(a2 + 20) & 2) != 0)
  {
    int v8 = v7 | 0x180;
LABEL_31:
    *(_DWORD *)(a1 + 192) = v8;
  }
LABEL_33:
  if (((a3 + 8) & 7) != 0) {
    goto LABEL_40;
  }
  unsigned int v11 = *(_DWORD *)(a3 + 8);
  if (v11 > 0xF) {
    goto LABEL_41;
  }
  if (!v11) {
    sub_100097828((uint64_t *)a1, a2);
  }
  sub_100097AA8(a1, (unsigned __int8 *)a3);
}

uint64_t sub_100096BC0(uint64_t result, char a2)
{
  char v4 = a2;
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result += 168, ((v2 + 168) & 7) != 0) || ((v2 + 184) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unint64_t v3 = *(void *)(v2 + 176);
    if (v3 >= *(void *)(v2 + 184))
    {
      uint64_t result = sub_10009AB54((uint64_t *)result, &v4);
      goto LABEL_9;
    }
    uint64_t result = (uint64_t)sub_10009AAE8((void *)result, &v4);
    if (v3 != -1)
    {
      uint64_t result = v3 + 1;
LABEL_9:
      *(void *)(v2 + 176) = result;
      return result;
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t sub_100096C48(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || ((result + 1992) & 7) != 0)
  {
    __break(0x5516u);
    __break(0x5513u);
LABEL_18:
    __break(0x5507u);
    __break(0x550Au);
LABEL_19:
    __break(0x5500u);
  }
  else
  {
    unsigned int v2 = sub_100097040(result + 1992);
    uint64_t result = sub_10009706C(v1 + 1992);
    int v3 = v2 - result;
    if (v2 >= result)
    {
      if (result >= v2)
      {
        if (v3) {
          goto LABEL_14;
        }
      }
      else
      {
        int v4 = 0;
        if (result <= 0x10000) {
          int v5 = 0x10000;
        }
        else {
          int v5 = result;
        }
        int v6 = result;
        do
        {
          if (v5 == v6) {
            goto LABEL_18;
          }
          uint64_t result = sub_1000970F0(v1 + 1992, (unsigned __int16)v6);
          BOOL v7 = __CFADD__(v4, result + 2);
          v4 += result + 2;
          if (v7) {
            goto LABEL_19;
          }
          ++v6;
        }
        while (v2 != v6);
        if (v3) {
LABEL_14:
        }
          operator new[]();
      }
      operator new[]();
    }
  }
  __break(0x5515u);
  return result;
}

uint64_t sub_100097040(uint64_t result)
{
  if (result && (result & 7) == 0 && (((_BYTE)result + 24) & 7) == 0) {
    return (*(void *)(result + 32) - *(void *)(result + 24)) >> 3;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009706C(uint64_t result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result - 88) & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    __break(0x5513u);
    goto LABEL_18;
  }
  uint64_t v1 = *(void *)(result + 168);
  unint64_t v2 = *(void *)(result + 176) - v1 - 1;
  if (*(void *)(result + 176) - v1 == 1) {
    return 0;
  }
  if (*(void *)(result + 176) != v1)
  {
    if (*(void *)(result + 176) - v1 != 1)
    {
      unint64_t v3 = 0;
      uint64_t result = 0;
      while (v3 <= ~v1)
      {
        if (!v1) {
          goto LABEL_16;
        }
        int v4 = *(unsigned __int8 *)(v1 + v3);
        BOOL v5 = __CFADD__(result, v4);
        uint64_t result = (result + v4);
        if (v5 || (unsigned int v6 = v3 + 1, v3 == -1))
        {
          __break(0x5500u);
          goto LABEL_16;
        }
        ++v3;
        if (v2 <= v6) {
          return result;
        }
      }
      goto LABEL_17;
    }
    return 0;
  }
LABEL_18:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000970F0(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0 || ((result + 24) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)(result + 24);
  if (!__CFADD__(v2, 8 * a2))
  {
    if (v2)
    {
      unint64_t v3 = (unsigned __int8 **)(v2 + 8 * a2);
      if ((v3 & 7) == 0)
      {
        int v4 = *v3;
        if (v4 && (v4 & 7) == 0) {
          return *v4;
        }
      }
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(0x5513u);
  return result;
}

uint64_t sub_100097148(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_105;
  }
  int v1 = *(_DWORD *)(result + 192);
  int v2 = *(_DWORD *)(result + 196);
  if ((v1 & ~v2) != 0)
  {
    int v5 = *(_DWORD *)(result + 200);
    if (v5 == v2) {
      unsigned int v6 = 2;
    }
    else {
      unsigned int v6 = 3;
    }
    if ((v1 & ~v5) != 0) {
      return v6;
    }
    else {
      return 1;
    }
  }
  int v3 = *(_DWORD *)(result + 204);
  if ((v3 & 8) != 0)
  {
    uint64_t v7 = *(void *)(result + 56);
    if (!v7) {
      goto LABEL_105;
    }
    if ((v7 & 7) != 0) {
      goto LABEL_105;
    }
    int v8 = (unsigned char *)(v7 + 16);
    if ((v8 & 7) != 0) {
      goto LABEL_105;
    }
    if (*v8) {
      int v4 = 8;
    }
    else {
      int v4 = 7;
    }
  }
  else
  {
    int v4 = 8;
  }
  if ((v3 & 0x507) == 0) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(result + 56);
  if (!v9 || (v9 & 7) != 0 || ((v9 + 16) & 7) != 0) {
    goto LABEL_105;
  }
  if ((*(_WORD *)(v9 + 16) & 0x1004) == 0)
  {
    uint64_t v12 = (_WORD *)(v9 + 24);
    if ((v12 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*v12 & 0x1004) == 0) {
      int v4 = 7;
    }
    if ((v3 & 0x40000) == 0) {
      goto LABEL_36;
    }
  }
  else
  {
LABEL_23:
    if ((v3 & 0x40000) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v10 = *(void *)(result + 56);
  if (!v10 || (v10 & 7) != 0 || ((v10 + 16) & 7) != 0) {
    goto LABEL_105;
  }
  if ((*(unsigned char *)(v10 + 17) & 0x10) == 0)
  {
    uint64_t v11 = v10 + 24;
    if ((v11 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v11 + 1) & 0x10) == 0) {
      int v4 = 7;
    }
  }
LABEL_36:
  if ((v3 & 0x80000) != 0)
  {
    uint64_t v13 = *(void *)(result + 56);
    if (!v13 || (v13 & 7) != 0 || ((v13 + 16) & 7) != 0) {
      goto LABEL_105;
    }
    if ((~*(_DWORD *)(v13 + 16) & 0x10800) != 0)
    {
      uint64_t v14 = (_DWORD *)(v13 + 24);
      if ((v14 & 7) != 0) {
        goto LABEL_105;
      }
      if ((~*v14 & 0x10800) != 0) {
        int v4 = 7;
      }
    }
  }
  if ((((_BYTE)result + 72) & 7) != 0) {
    goto LABEL_105;
  }
  if (*(void *)(result + 80) != *(void *)(result + 72) || *(void *)(result + 120))
  {
    uint64_t v15 = *(void *)(result + 56);
    if (!v15 || (v15 & 7) != 0 || ((v15 + 16) & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v15 + 17) & 6) == 0)
    {
      uint64_t v16 = v15 + 24;
      if ((v16 & 7) != 0) {
        goto LABEL_105;
      }
      if ((*(unsigned char *)(v16 + 1) & 6) == 0) {
        int v4 = 7;
      }
    }
  }
  __int16 v17 = v1 & v2;
  if ((v17 & 1) != 0 && (uint64_t v18 = *(void *)(result + 48)) != 0)
  {
    if ((v18 & 7) != 0) {
      goto LABEL_105;
    }
    uint64_t v19 = (int *)(v18 + 20);
  }
  else
  {
    if ((v17 & 0x100) == 0) {
      goto LABEL_85;
    }
    uint64_t v20 = *(void *)(result + 128);
    if (!v20) {
      goto LABEL_85;
    }
    if ((v20 & 7) != 0) {
      goto LABEL_105;
    }
    uint64_t v19 = (int *)(v20 + 20);
  }
  if ((v19 & 3) != 0) {
    goto LABEL_105;
  }
  int v21 = *v19;
  if ((v21 & 0x400) != 0)
  {
    uint64_t v22 = *(void *)(result + 56);
    if (!v22 || (v22 & 7) != 0 || ((v22 + 16) & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v22 + 16) & 0x10) == 0)
    {
      int v23 = (unsigned char *)(v22 + 24);
      if ((v23 & 7) != 0) {
        goto LABEL_105;
      }
      if ((*v23 & 0x10) == 0) {
        int v4 = 7;
      }
    }
  }
  if ((v21 & 2) != 0)
  {
    uint64_t v24 = *(void *)(result + 56);
    if (!v24 || (v24 & 7) != 0 || ((v24 + 16) & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v24 + 16) & 2) == 0)
    {
      unsigned int v25 = (unsigned char *)(v24 + 24);
      if ((v25 & 7) != 0) {
        goto LABEL_105;
      }
      if ((*v25 & 2) == 0) {
        int v4 = 7;
      }
    }
  }
  if ((v21 & 8) == 0)
  {
    uint64_t v26 = *(void *)(result + 56);
    if (!v26) {
      goto LABEL_105;
    }
    if ((v26 & 7) != 0) {
      goto LABEL_105;
    }
    uint64_t v27 = v26 + 16;
    if ((v27 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v27 + 1) & 8) != 0) {
      int v4 = 7;
    }
  }
LABEL_85:
  if ((v3 & 0x100000) != 0)
  {
    uint64_t v28 = *(void *)(result + 56);
    if (!v28) {
      goto LABEL_105;
    }
    if ((v28 & 7) != 0) {
      goto LABEL_105;
    }
    uint64_t v29 = v28 + 16;
    if ((v29 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v29 + 2) & 2) == 0) {
      int v4 = 7;
    }
  }
  if ((v3 & 0x400000) != 0)
  {
    uint64_t v30 = *(void *)(result + 56);
    if (!v30) {
      goto LABEL_105;
    }
    if ((v30 & 7) != 0) {
      goto LABEL_105;
    }
    uint64_t v31 = v30 + 16;
    if ((v31 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(unsigned char *)(v31 + 2) & 0x80) == 0) {
      int v4 = 7;
    }
  }
  uint64_t v32 = *(void *)(result + 56);
  if (!v32 || (v32 & 7) != 0 || (uint64_t v33 = v32 + 16, (v33 & 7) != 0))
  {
LABEL_105:
    __break(0x5516u);
    return result;
  }
  if ((*(unsigned char *)(v33 + 1) & 6) != 0) {
    sub_100097CE8(result);
  }
  if (v4 == 8) {
    return 0;
  }
  else {
    return 7;
  }
}

uint64_t sub_1000974D0(uint64_t result)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  char v6 = 0;
  if (((result + 2088) & 7) != 0 || ((result + 2104) & 7) != 0) {
    goto LABEL_18;
  }
  if (*(void *)(result + 2104))
  {
    if (((result + 2096) & 7) != 0) {
      goto LABEL_18;
    }
    uint64_t v5 = result + 2096;
    sub_10009A914((void **)&v5);
    uint64_t result = (uint64_t)sub_100004C28(&v5);
    if (!result || (result & 7) != 0) {
      goto LABEL_18;
    }
    int v2 = *(unsigned __int8 *)result;
    if (v2 == 255)
    {
LABEL_19:
      __break(0x5507u);
      return result;
    }
    char v6 = v2 + 1;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (uint64_t v3 = result, (result & 7) != 0) || (result = *(void *)(v1 + 8)) == 0 || (result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  uint64_t v4 = sub_10001CE30(result);
  uint64_t result = sub_10009F368(v3, v4);
  if ((result & 0x2000) != 0) {
    operator new();
  }
  return result;
}

std::string *sub_10009767C@<X0>(std::string *result@<X0>, std::string *a2@<X8>)
{
  if (result
    && (result & 7) == 0
    && ((unint64_t)&result->__r_.__value_.__l.__size_ & 7) == 0
    && a2)
  {
    return std::string::basic_string(a2, (const std::string *)&result->__r_.__value_.__r.__words[1]);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000976A4(uint64_t result)
{
  if (!result)
  {
    __break(0x5518u);
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v2 = sub_100063334(result, 0);
  uint64_t result = sub_10006D8BC(v2);
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_10009EF00(result, v1, 0);
  if (!result)
  {
    BOOL v4 = 0;
    goto LABEL_11;
  }
  if ((result & 7) != 0 || ((result + 2200) & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v3 = *(unsigned __int8 *)(result + 2200);
  if (v3 <= 1)
  {
    BOOL v4 = v3 != 0;
LABEL_11:
    sub_100063380(v1, 0);
    return v4;
  }
LABEL_14:
  __break(0x550Au);
  return result;
}

void *sub_100097748(void *result)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  *uint64_t result = 0;
  result[1] = 0;
  if ((((_BYTE)result + 16) & 7) != 0) {
    goto LABEL_13;
  }
  result[2] = 0;
  if (((unint64_t)(result + 3) & 7) != 0) {
    goto LABEL_13;
  }
  result[3] = 0;
  result[4] = 0;
  if ((((_BYTE)result + 40) & 7) != 0) {
    goto LABEL_13;
  }
  result[5] = 0;
  if (((unint64_t)(result + 9) & 7) != 0) {
    goto LABEL_13;
  }
  result[9] = 0;
  result[10] = 0;
  if ((((_BYTE)result + 88) & 7) != 0
    || (result[11] = 0, result += 12, ((unint64_t)(v1 + 12) & 7) != 0)
    || (sub_10000C500(result), uint64_t result = v1 + 17, ((unint64_t)(v1 + 17) & 7) != 0)
    || (uint64_t result = sub_10000C500(result), ((unint64_t)(v1 + 21) & 7) != 0)
    || (v1[21] = 0, v1[22] = 0, (((_BYTE)v1 - 72) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }
  else
  {
    v1[23] = 0;
    sub_10007DECC((uint64_t)v1);
    return v1;
  }
  return result;
}

void sub_100097828(uint64_t *a1, uint64_t a2)
{
  uint64_t v15 = a2;
  if (!a1 || (a1 & 7) != 0 || ((unint64_t)(a1 + 2) & 7) != 0) {
    goto LABEL_42;
  }
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t v4 = sub_10009A074(a1, &v15);
  }
  else
  {
    sub_10002A9E0(a1, &v15);
    if (v3 >= 0xFFFFFFFFFFFFFFF8)
    {
LABEL_43:
      __break(0x5513u);
LABEL_44:
      __break(0x550Au);
      JUMPOUT(0x100097A64);
    }
    uint64_t v4 = v3 + 8;
  }
  a1[1] = v4;
  uint64_t v5 = v15;
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_42;
  }
  switch(*(_DWORD *)v15)
  {
    case 0:
      a1[6] = v15;
      return;
    case 1:
      a1[7] = v15;
      if (((v5 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      a1[8] = *(void *)(v5 + 16);
      return;
    case 2:
    case 3:
    case 7:
      return;
    case 4:
      char v6 = a1 + 9;
      if (((unint64_t)(a1 + 9) & 7) != 0 || ((unint64_t)(a1 + 11) & 7) != 0) {
        goto LABEL_42;
      }
      unint64_t v7 = a1[10];
      if (v7 >= a1[11])
      {
        uint64_t v8 = sub_10009A074(v6, &v15);
        goto LABEL_33;
      }
      sub_10002A9E0(v6, &v15);
      if (v7 >= 0xFFFFFFFFFFFFFFF8) {
        goto LABEL_43;
      }
      uint64_t v8 = v7 + 8;
LABEL_33:
      a1[10] = v8;
      unsigned __int8 v14 = -86;
      uint64_t v5 = v15;
      if (!v15
        || (v15 & 7) != 0
        || ((v15 + 16) & 7) != 0
        || (unsigned __int8 v14 = *(unsigned char *)(v15 + 16), ((unint64_t)(a1 + 12) & 7) != 0))
      {
LABEL_42:
        __break(0x5516u);
        goto LABEL_43;
      }
      sub_1000942A4((uint64_t)(a1 + 12), &v14);
LABEL_38:
      *uint64_t v12 = v5;
      return;
    case 5:
      if (((v15 + 8) & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v9 = *(void *)(v15 + 8);
      if (!v9) {
        goto LABEL_25;
      }
      if ((v9 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v10 = (unsigned int *)(v9 + 8);
      if ((v10 & 7) != 0) {
        goto LABEL_42;
      }
      unsigned int v11 = *v10;
      if (v11 >= 0x10) {
        goto LABEL_44;
      }
      if (v11)
      {
LABEL_25:
        a1[15] = 0;
        return;
      }
      if (((v15 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      a1[15] = *(void *)(v15 + 16);
      return;
    case 6:
      a1[16] = v15;
      return;
    case 8:
      unsigned __int8 v13 = -86;
      if (((v15 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      unsigned __int8 v13 = *(unsigned char *)(v15 + 16);
      if (((unint64_t)(a1 + 17) & 7) != 0) {
        goto LABEL_42;
      }
      sub_1000942A4((uint64_t)(a1 + 17), &v13);
      goto LABEL_38;
    case 0x10:
      a1[20] = v15;
      return;
    default:
      sub_1000EE4F4(0, 4, "%s:%d Unknown ACK type %X in AddFIDTokenValue\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 17712, *(_DWORD *)v15);
      return;
  }
}

void sub_100097AA8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v16 = a2;
  if (!a1) {
    goto LABEL_41;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v3 = (uint64_t *)(a1 + 24);
  if (((a1 + 24) & 7) != 0 || ((a1 + 40) & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v4 = *(void *)(a1 + 32);
  if (v4 >= *(void *)(a1 + 40))
  {
    uint64_t v5 = sub_10009A074(v3, &v16);
  }
  else
  {
    sub_10002A9E0(v3, &v16);
    if (v4 >= 0xFFFFFFFFFFFFFFF8)
    {
LABEL_43:
      __break(0x5513u);
      goto LABEL_44;
    }
    uint64_t v5 = v4 + 8;
  }
  *(void *)(a1 + 32) = v5;
  char v6 = v16;
  if (!v16 || (v16 & 7) != 0 || ((unint64_t)(v16 + 12) & 3) != 0) {
    goto LABEL_41;
  }
  unsigned int v7 = v16[12];
  if (v7 >= 2) {
    goto LABEL_42;
  }
  if (v16[12]) {
    unsigned __int8 v8 = 4;
  }
  else {
    unsigned __int8 v8 = 3;
  }
  *uint64_t v16 = v8;
  if (((unint64_t)(v6 + 4) & 3) != 0) {
    goto LABEL_41;
  }
  unsigned int v9 = *((_DWORD *)v6 + 1);
  if (v9 > 0x1FF)
  {
LABEL_42:
    __break(0x550Au);
    goto LABEL_43;
  }
  switch(v9)
  {
    case 0u:
      if (((unint64_t)(v6 + 8) & 7) != 0) {
        goto LABEL_41;
      }
      unsigned int v10 = *((_DWORD *)v6 + 2);
      if (v10 > 0xF) {
        goto LABEL_42;
      }
      if (v10 == 4)
      {
        if (((unint64_t)(v6 + 24) & 7) != 0)
        {
LABEL_41:
          __break(0x5516u);
          goto LABEL_42;
        }
        unsigned int v11 = v6[24] + v8;
        if (v11 > 0xFF)
        {
LABEL_44:
          __break(0x5507u);
          JUMPOUT(0x100097CC4);
        }
        LOBYTE(v9) = 0;
        *char v6 = v11;
      }
      else
      {
        LOBYTE(v9) = 0;
      }
LABEL_35:
      int v13 = 1 << v9;
      *(_DWORD *)(a1 + 200) |= v13;
      unsigned __int8 v14 = (unsigned int *)(v6 + 8);
      if ((v14 & 7) != 0) {
        goto LABEL_41;
      }
      unsigned int v15 = *v14;
      if (v15 > 0xF) {
        goto LABEL_42;
      }
      if (v15) {
        *(_DWORD *)(a1 + 196) = 0;
      }
      else {
        *(_DWORD *)(a1 + 196) |= v13;
      }
      return;
    case 1u:
      goto LABEL_35;
    case 2u:
      if (!v7) {
        return;
      }
      unsigned int v12 = v6[13] - 1;
      if (v12 >= 7 || ((0x79u >> v12) & 1) == 0) {
        return;
      }
      unsigned int v9 = dword_1000FF0CC[(char)v12];
      goto LABEL_35;
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 8u:
      return;
    case 6u:
      LOBYTE(v9) = 8;
      goto LABEL_35;
    default:
      if (v9 != 256)
      {
        sub_1000EE4F4(0, 4, "%s:%d Unknown ACK type %X in AddFIDTokenAck\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 17828, *((_DWORD *)v6 + 1));
        return;
      }
      if ((*(unsigned char *)(a1 + 192) & 0x80) == 0) {
        return;
      }
      LOBYTE(v9) = 7;
      goto LABEL_35;
  }
}

uint64_t sub_100097CE8(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      unsigned __int8 v16 = -86;
      uint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)result - 120) & 7) == 0)
      {
        uint64_t v15 = *(void *)(result + 136);
        uint64_t v1 = result + 144;
        if (((result + 144) & 7) == 0)
        {
          if (v15 == v1) {
            return result;
          }
          uint64_t v2 = result + 96;
          uint64_t v3 = (result + 96) & 7;
          uint64_t v4 = result + 104;
          uint64_t v5 = (result + 104) & 7;
          while (1)
          {
            uint64_t result = (uint64_t)sub_100004C28(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            unsigned __int8 v16 = *(unsigned char *)result;
            uint64_t result = (uint64_t)sub_100004C28(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            if (((result + 8) & 7) != 0) {
              break;
            }
            uint64_t v6 = *(void *)(result + 8);
            if (!v6) {
              break;
            }
            if ((v6 & 7) != 0) {
              break;
            }
            unsigned int v7 = (int *)(v6 + 20);
            if ((v7 & 3) != 0) {
              break;
            }
            int v8 = *v7;
            if (*v7 >= 8) {
              goto LABEL_36;
            }
            uint64_t result = (uint64_t)sub_100004C28(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            if (((result + 8) & 7) != 0) {
              break;
            }
            uint64_t v9 = *(void *)(result + 8);
            if (!v9) {
              break;
            }
            if ((v9 & 7) != 0) {
              break;
            }
            unsigned int v10 = (unsigned __int8 *)(v9 + 24);
            if ((v10 & 7) != 0) {
              break;
            }
            int v11 = *v10;
            uint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
            if (v3) {
              break;
            }
            uint64_t result = sub_10009A9B0(v2, &v16);
            uint64_t v14 = result;
            if (v5) {
              break;
            }
            if (v4 != result && !v11)
            {
              uint64_t result = (uint64_t)sub_100004C28(&v14);
              if (!result) {
                break;
              }
              if ((result & 7) != 0) {
                break;
              }
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v12 = *(void *)(result + 8);
              if (!v12) {
                break;
              }
              if ((v12 & 7) != 0) {
                break;
              }
              int v13 = (_DWORD *)(v12 + 32);
              if ((v13 & 7) != 0) {
                break;
              }
              *int v13 = v8;
            }
            uint64_t result = (uint64_t)sub_10000B05C(&v15);
            if (v15 == v1) {
              return result;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_36:
  __break(0x550Au);
  return result;
}

void sub_100097EA8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_28;
  }
  for (i = *(void **)a1; i != *(void **)(a1 + 8); ++i)
  {
    if (!i || (*(void *)a1 & 7) != 0) {
      goto LABEL_28;
    }
    uint64_t v3 = (int *)*i;
    if (!*i || (*i & 7) != 0) {
      goto LABEL_28;
    }
    int v5 = *v3;
    if (*v3 == 5)
    {
      uint64_t v6 = v3 + 4;
    }
    else
    {
      if (v5 != 4 && v5 != 2) {
        goto LABEL_19;
      }
      uint64_t v6 = v3 + 6;
    }
    if ((v6 & 7) != 0) {
      goto LABEL_28;
    }
    if (*(void *)v6) {
      operator delete[]();
    }
LABEL_19:
    if (*i)
    {
      if ((*i & 7) == 0) {
        operator delete();
      }
      goto LABEL_28;
    }
    if ((unint64_t)i >= 0xFFFFFFFFFFFFFFF8) {
      goto LABEL_29;
    }
  }
  sub_10006863C(a1);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  if (((a1 + 72) & 7) != 0
    || (sub_10006863C(a1 + 72), ((a1 + 96) & 7) != 0)
    || (sub_10000B13C(a1 + 96), ((a1 + 136) & 7) != 0))
  {
LABEL_28:
    __break(0x5516u);
LABEL_29:
    __break(0x5513u);
  }
  else
  {
    sub_10000B13C(a1 + 136);
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 160) = 0;
  }
}

uint64_t sub_100097FDC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0 && ((result + 24) & 7) == 0)
    {
      uint64_t v2 = *(uint64_t **)(result + 24);
      if (v2 == *(uint64_t **)(result + 32))
      {
LABEL_23:
        return sub_10006863C(v1 + 24);
      }
      uint64_t v3 = *(void *)(result + 24) & 7;
      while (v2 && !v3)
      {
        uint64_t v4 = *v2;
        if (!*v2 || (*v2 & 7) != 0) {
          break;
        }
        unsigned int v6 = *(_DWORD *)(v4 + 8);
        if (v6 >= 0x10) {
          goto LABEL_27;
        }
        if (v6 == 4)
        {
          unsigned int v7 = (void *)(v4 + 16);
          if ((v7 & 7) != 0) {
            break;
          }
          if (*v7) {
            operator delete[]();
          }
        }
        uint64_t result = *v2;
        if (*v2)
        {
          if ((result & 7) == 0) {
            operator delete();
          }
          break;
        }
        if ((unint64_t)v2 >= 0xFFFFFFFFFFFFFFF8) {
          goto LABEL_28;
        }
        if (++v2 == *(uint64_t **)(v1 + 32)) {
          goto LABEL_23;
        }
      }
    }
  }
  __break(0x5516u);
LABEL_27:
  __break(0x550Au);
LABEL_28:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000980E0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100099BB4(result, *(void *)result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000980F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result = sub_1000D289C();
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_1000A216C(result, a1);
    if (a4 && a3 && result)
    {
      if (a1 && (a1 & 7) == 0)
      {
        uint64_t result = sub_10001CE30(a1);
        if (a4 != -1) {
          operator new[]();
        }
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t result = sub_1000D289C();
      if (result && (result & 7) == 0)
      {
        int v8 = sub_1000A216C(result, a1);
        sub_1000EE4F4(0, 4, "%s:%d invalid connection(%hhx)(%d) or data(%hhx)=NULL or size(%d)<=0", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18496, a1, v8, a3, a4);
        return 0;
      }
    }
  }
  __break(0x5516u);
LABEL_14:
  __break(0x5500u);
  __break(0x5513u);
  __break(0x5507u);
  return result;
}

uint64_t sub_1000982C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, __int16 a5)
{
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  int v11 = sub_1000A216C(result, a1);
  uint64_t result = 0;
  if (a2 && v11)
  {
    if ((a2 & 7) == 0)
    {
      unsigned int v12 = (unsigned __int16)(*(_WORD *)(a2 + 184) & a5);
      if (*(unsigned __int16 *)(a2 + 196) == a4 && v12 == *(unsigned __int16 *)(a2 + 198)) {
        return 0;
      }
      uint64_t result = sub_1000983CC(a1, a2, 0, a4, v12);
      __int16 v14 = -21846;
      __int16 v13 = __rev16(a4);
      if ((unint64_t)&v13 < 0xFFFFFFFFFFFFFFFELL)
      {
        __int16 v14 = __rev16(v12);
        return sub_100092A48(a1, a2, a3, 1, (uint64_t)&v13, 4, 0, 0);
      }
LABEL_13:
      __break(0x5500u);
      return result;
    }
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1000983CC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, __int16 a5)
{
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000A216C(result, a1);
  if (a2 && result)
  {
    if ((a2 & 7) == 0)
    {
      *(_DWORD *)(a2 + 200) = *(_DWORD *)(a2 + 196);
      *(_WORD *)(a2 + 196) = a4;
      *(_WORD *)(a2 + 198) = a5;
      return result;
    }
LABEL_8:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_10009843C(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)sub_100098950((uint64_t *)result, a2);
  if (!result) {
    goto LABEL_13;
  }
  if ((result & 7) != 0 || ((result + 12) & 3) != 0) {
    goto LABEL_14;
  }
  unsigned int v4 = *(_DWORD *)(result + 12);
  if (v4 >= 4)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }
  if (!v4)
  {
LABEL_13:
    sub_1000EE4F4(0, 4, "%s:%d No VPort for DETACH Id=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18682, a2);
    return 4;
  }
  if (((result + 16) & 7) != 0)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  if (!*(void *)(result + 16)) {
    goto LABEL_13;
  }
  return sub_100098A30(v2, result);
}

uint64_t sub_100098534(uint64_t result, int a2, unsigned __int8 *a3, int a4)
{
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_33;
  }
  unsigned int v7 = *a3;
  uint64_t result = (uint64_t)sub_100098950((uint64_t *)result, a2);
  uint64_t v12 = result;
  if (!result)
  {
    if (v7 <= 3)
    {
      if (v7 != 1) {
        return 4;
      }
      uint64_t result = *(void *)(v4 + 8);
      if (result && (result & 7) == 0)
      {
        sub_10001CE30(result);
        operator new();
      }
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  if ((result & 7) != 0 || ((result + 12) & 3) != 0) {
    goto LABEL_33;
  }
  unsigned int v8 = *(_DWORD *)(result + 12);
  if (v8 > 3)
  {
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }
  if (v8 != 1) {
    return 4;
  }
  if (((result + 16) & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
  if (!*(void *)(result + 16)) {
    return 4;
  }
  if (v7 > 3) {
    goto LABEL_34;
  }
  if (v7 == 1)
  {
    if (a3 == (unsigned __int8 *)-1) {
      goto LABEL_35;
    }
    if (!a4) {
      goto LABEL_36;
    }
    uint64_t result = sub_10009941C(v4, result, (unsigned __int16 *)(a3 + 1), a4 - 1);
    if (v12)
    {
      if ((v12 & 7) == 0)
      {
        int v11 = (uint64_t *)(v12 + 16);
        if (((v12 + 16) & 7) == 0)
        {
          uint64_t v10 = result;
          uint64_t result = *v11;
          if (*v11)
          {
            if ((result & 7) == 0)
            {
              sub_1000C7C98(result, 1);
              return v10;
            }
          }
        }
      }
    }
    goto LABEL_33;
  }
  if (v7) {
    return 4;
  }
  if (a3 == (unsigned __int8 *)-1)
  {
LABEL_35:
    __break(0x5513u);
    goto LABEL_36;
  }
  if (a4)
  {
    sub_100098F1C(v4, result, a3 + 1, a4 - 1);
    return v9;
  }
LABEL_36:
  __break(0x5515u);
  return result;
}

uint64_t *sub_100098950(uint64_t *result, int a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 282)),
        uint64_t i = 0xAAAAAAAAAAAAAAAALL,
        ((unint64_t)(v2 + 279) & 7) != 0)
    || ((unint64_t)(v2 + 280) & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
  }
  else
  {
    uint64_t v4 = v2[280];
    for (i = v4; ; uint64_t v4 = i)
    {
      if ((uint64_t *)v4 == v2 + 279)
      {
        uint64_t v8 = 0;
        goto LABEL_19;
      }
      uint64_t result = sub_10000FDD0(&i);
      if (*result) {
        BOOL v5 = (*result & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      uint64_t v6 = *result + 8;
      if (!v5 || (v6 & 7) != 0) {
        goto LABEL_20;
      }
      if (*(unsigned __int8 *)v6 == a2) {
        break;
      }
      sub_10000FE04(&i);
    }
    uint64_t v8 = *sub_10000FDD0(&i);
LABEL_19:
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 282));
    return (uint64_t *)v8;
  }
  return result;
}

uint64_t sub_100098A30(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 2256));
    sub_100098A98((void *)v2, a2);
    uint64_t v5 = v4;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 2256));
    return v5;
  }
  return result;
}

void sub_100098A98(void *a1, uint64_t a2)
{
  uint64_t v27 = (void *)a2;
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_78;
  }
  if (!a2) {
    goto LABEL_20;
  }
  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_78;
  }
  unsigned int v4 = *(_DWORD *)(a2 + 12);
  if (v4 >= 4)
  {
LABEL_79:
    __break(0x550Au);
    return;
  }
  if (!v4) {
    goto LABEL_20;
  }
  uint64_t v5 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0) {
    goto LABEL_78;
  }
  if (!*v5)
  {
LABEL_20:
    sub_1000EE4F4(0, 4, "%s:%d Invalid VPort(%hhx) for VPort DETACH\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18791, a2);
    return;
  }
  uint64_t v6 = sub_10006D8BC(a1);
  if (!v6 || (v6 & 7) != 0 || (*v5 & 7) != 0) {
    goto LABEL_78;
  }
  uint64_t v7 = sub_1000A15B4(v6, *v5, 0);
  if (!v7)
  {
    uint64_t v12 = sub_10006D8BC(0);
    if (!v12 || (v12 & 7) != 0 || (*v5 & 7) != 0) {
      goto LABEL_78;
    }
    if (sub_1000D67F0(v12, *v5))
    {
      uint64_t v8 = 0;
      uint64_t v7 = 0;
      goto LABEL_30;
    }
    uint64_t v13 = *v5;
    if (!*v5 || (v13 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 400))(v13);
    if (!v7)
    {
      uint64_t v8 = 0;
      goto LABEL_30;
    }
  }
  if ((v7 & 7) != 0) {
    goto LABEL_78;
  }
  uint64_t v8 = sub_1000633E4(v7);
  if (sub_1000637F0(v7))
  {
    uint64_t v9 = (void *)*v5;
    if ((*v5 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v10 = a1[1];
    if (!v10 || (v10 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v11 = sub_10001CE30(v10);
    sub_10008055C(0, v7, v9, v11);
  }
LABEL_30:
  if (((a2 + 24) & 7) != 0) {
    goto LABEL_78;
  }
  if ((*(unsigned char *)(a2 + 24) & 4) != 0)
  {
    if (((a2 + 8) & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v14 = a1[1];
    if (!v14) {
      goto LABEL_78;
    }
    if ((v14 & 7) != 0) {
      goto LABEL_78;
    }
    int v15 = *(unsigned __int8 *)(a2 + 8);
    uint64_t v16 = sub_10001CE30(v14);
    if (!v16) {
      goto LABEL_78;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_78;
    }
    __int16 v17 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 208))(v16);
    sub_1000EE4F4(0, 4, "%s:%d Load fault %s for VPort ID %d on port %s\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18738, "cleared", v15, v17);
    uint64_t v18 = (void *)*v5;
    if ((*v5 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v19 = a1[1];
    if (!v19 || (v19 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v20 = sub_10001CE30(v19);
    sub_1000998A4(24, v7, v18, v20);
  }
  uint64_t v21 = *v5;
  if (!*v5) {
    goto LABEL_78;
  }
  if ((v21 & 7) != 0) {
    goto LABEL_78;
  }
  *(unsigned char *)(v21 + 190) = 1;
  if (((unint64_t)(a1 + 279) & 7) != 0) {
    goto LABEL_78;
  }
  sub_1000672F0(a1 + 279, &v27);
  if (!v8)
  {
    uint64_t v23 = sub_1000D289C();
    if (!v23) {
      goto LABEL_78;
    }
    if ((v23 & 7) != 0) {
      goto LABEL_78;
    }
    if (!v27) {
      goto LABEL_78;
    }
    if ((v27 & 7) != 0) {
      goto LABEL_78;
    }
    if (((unint64_t)(v27 + 2) & 7) != 0) {
      goto LABEL_78;
    }
    if ((v27[2] & 7) != 0) {
      goto LABEL_78;
    }
    (*(void (**)(uint64_t))(*(void *)v23 + 104))(v23);
    uint64_t v24 = v27;
    if (!v27 || (v27 & 7) != 0 || (((_BYTE)v27 + 16) & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v25 = v27[2];
    if (v25)
    {
      if ((v25 & 7) != 0) {
        goto LABEL_78;
      }
      (*(void (**)(void))(*(void *)v25 + 8))(v27[2]);
      uint64_t v24 = v27;
    }
    if (v24 && (v24 & 7) == 0 && (((_BYTE)v24 + 16) & 7) == 0)
    {
      v24[2] = 0;
      (*(void (**)(void *))(*v24 + 8))(v24);
      goto LABEL_72;
    }
LABEL_78:
    __break(0x5516u);
    goto LABEL_79;
  }
  uint64_t v22 = a1[1];
  if (!v22) {
    goto LABEL_78;
  }
  if ((v22 & 7) != 0) {
    goto LABEL_78;
  }
  if (!v27) {
    goto LABEL_78;
  }
  if ((v27 & 7) != 0) {
    goto LABEL_78;
  }
  if (((unint64_t)(v27 + 2) & 7) != 0) {
    goto LABEL_78;
  }
  sub_1000627BC(v22, v27[2]);
  if ((v8 & 7) != 0
    || !v27
    || (v27 & 7) != 0
    || ((unint64_t)(v27 + 2) & 7) != 0
    || (v27[2] & 7) != 0)
  {
    goto LABEL_78;
  }
  sub_10006B1A0(v8, 8);
LABEL_72:
  uint64_t v27 = 0;
  if (((unint64_t)(a1 + 281) & 7) != 0) {
    goto LABEL_78;
  }
  if (a1[281]) {
    return;
  }
  uint64_t v26 = a1[1];
  if (!v26 || (v26 & 7) != 0) {
    goto LABEL_78;
  }
  sub_100063568(v26, 0, 4u);
}

void sub_100098F1C(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_96;
  }
  if (!a3) {
    goto LABEL_95;
  }
  if (!a2) {
    return;
  }
  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_96;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  if (v7 > 3)
  {
LABEL_97:
    __break(0x550Au);
    goto LABEL_98;
  }
  if (!v7)
  {
LABEL_95:
    __break(0x5518u);
    goto LABEL_96;
  }
  if (!a4 || v7 != 1) {
    return;
  }
  uint64_t v9 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0) {
    goto LABEL_96;
  }
  if (!*v9) {
    return;
  }
  uint64_t v10 = (_DWORD *)(a2 + 24);
  if (((a2 + 24) & 7) != 0) {
    goto LABEL_96;
  }
  int v11 = *a3;
  int v12 = *v10 ^ v11;
  if ((v12 & 4) != 0)
  {
    if ((v11 & 4) != 0) {
      uint64_t v13 = "detected";
    }
    else {
      uint64_t v13 = "cleared";
    }
    if (((a2 + 8) & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v14 = *(void *)(a1 + 8);
    if (!v14) {
      goto LABEL_96;
    }
    if ((v14 & 7) != 0) {
      goto LABEL_96;
    }
    int v15 = *(unsigned __int8 *)(a2 + 8);
    uint64_t v16 = sub_10001CE30(v14);
    if (!v16) {
      goto LABEL_96;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_96;
    }
    __int16 v17 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 208))(v16);
    sub_1000EE4F4(0, 4, "%s:%d Load fault %s for VPort ID %d on port %s\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp", 18925, v13, v15, v17);
    uint64_t v18 = (void *)*v9;
    if ((*v9 & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v19 = *(void *)(a1 + 8);
    if (!v19 || (v19 & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v20 = sub_10001CE30(v19);
    if ((v11 & 4) != 0) {
      uint64_t v21 = 23;
    }
    else {
      uint64_t v21 = 24;
    }
    sub_1000998A4(v21, 0, v18, v20);
  }
  unsigned int v22 = -1;
  if (a4 >= 2 && (v11 & 2) != 0)
  {
    if (a3 == (unsigned __int8 *)-1)
    {
LABEL_98:
      __break(0x5513u);
      return;
    }
    unsigned int v23 = a3[1];
    if (v23 == 255) {
      unsigned int v22 = 100;
    }
    else {
      unsigned int v22 = v23 >> 4;
    }
  }
  if ((v11 & 1) == 0)
  {
    uint64_t v24 = (void *)*v9;
    if (!*v9 || (v24 & 7) != 0) {
      goto LABEL_96;
    }
    if (!(*(uint64_t (**)(void *))(*v24 + 376))(v24))
    {
      uint64_t v25 = (void *)*v9;
      if (!*v9 || (v25 & 7) != 0) {
        goto LABEL_96;
      }
      (*(void (**)(void *, void))(*v25 + 368))(v25, *(void *)(a1 + 8));
    }
  }
  uint64_t v26 = (unsigned char *)(a2 + 28);
  if ((v26 & 3) != 0)
  {
LABEL_96:
    __break(0x5516u);
    goto LABEL_97;
  }
  if (v22 == *v26)
  {
LABEL_57:
    if (v12) {
      goto LABEL_77;
    }
LABEL_58:
    if (v22 == -1) {
      goto LABEL_84;
    }
    int v30 = *v26;
    if (v22 == v30 || v30 == 100 || v30 == 255) {
      goto LABEL_81;
    }
    uint64_t v31 = *v9;
    if (*v9 && (v31 & 7) == 0)
    {
      sub_1000C7B90(v31, 8, 0);
      goto LABEL_81;
    }
    goto LABEL_96;
  }
  switch(v22)
  {
    case 0xBu:
      uint64_t v29 = sub_10004E9C8();
      if (!v29 || (v29 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      (*(void (**)(uint64_t))(*(void *)v29 + 336))(v29);
      goto LABEL_57;
    case 0xAu:
      uint64_t v32 = sub_10005176C();
      if (!v32 || (v32 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v32 + 280);
      break;
    case 3u:
      uint64_t v27 = sub_10005176C();
      if (!v27 || (v27 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v27 + 280);
      break;
    default:
      uint64_t v33 = sub_10004E9C8();
      if (!v33) {
        goto LABEL_96;
      }
      if ((v33 & 7) != 0) {
        goto LABEL_96;
      }
      if ((*v9 & 7) != 0) {
        goto LABEL_96;
      }
      (*(void (**)(uint64_t))(*(void *)v33 + 336))(v33);
      uint64_t v34 = sub_10005176C();
      if (!v34 || (v34 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v34 + 280);
      break;
  }
  v28();
  if ((v12 & 1) == 0) {
    goto LABEL_58;
  }
LABEL_77:
  if ((v11 & 1) == 0)
  {
    if (v22 == 100) {
      unsigned int v22 = 15;
    }
    if (v22 != -1)
    {
LABEL_81:
      uint64_t v35 = *v9;
      if (*v9 && (v35 & 7) == 0)
      {
        sub_1000C7B90(v35, 128, v22);
        *uint64_t v10 = v11;
LABEL_92:
        *uint64_t v26 = v22;
        return;
      }
      goto LABEL_96;
    }
LABEL_84:
    *uint64_t v10 = v11;
    return;
  }
  uint64_t v36 = *v9;
  if (v22 != -1)
  {
    if (!v36 || (v36 & 7) != 0) {
      goto LABEL_96;
    }
    sub_1000C7B90(v36, 128, v22);
    uint64_t v36 = *v9;
  }
  if (!v36 || (v36 & 7) != 0) {
    goto LABEL_96;
  }
  sub_1000C7B90(v36, 8, 0);
  *uint64_t v10 = v11;
  if (v22 != -1) {
    goto LABEL_92;
  }
}

uint64_t sub_10009941C(uint64_t result, uint64_t a2, unsigned __int16 *a3, unsigned int a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_41;
  }
  if (a3)
  {
    if (!a2) {
      return 4;
    }
    if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
      goto LABEL_41;
    }
    unsigned int v4 = *(_DWORD *)(a2 + 12);
    if (v4 > 3)
    {
LABEL_42:
      __break(0x550Au);
      goto LABEL_43;
    }
    if (v4 == 1) {
      goto LABEL_11;
    }
    if (v4) {
      return 4;
    }
  }
  __break(0x5518u);
LABEL_11:
  uint64_t v5 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0)
  {
LABEL_41:
    __break(0x5516u);
    goto LABEL_42;
  }
  uint64_t v6 = *v5;
  if (!*v5) {
    return 4;
  }
  if (a4 < 2)
  {
    LOWORD(v8) = 0;
    LOWORD(v7) = 0;
  }
  else
  {
    unsigned int v7 = bswap32(*a3) >> 16;
    if (a4 < 4)
    {
      LOWORD(v8) = 0;
    }
    else
    {
      if ((unint64_t)a3 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_43;
      }
      unsigned int v8 = bswap32(a3[1]) >> 16;
      if (a4 >= 6)
      {
        if ((unint64_t)a3 < 0xFFFFFFFFFFFFFFFCLL)
        {
          unsigned int v9 = bswap32(a3[2]) >> 16;
          goto LABEL_23;
        }
LABEL_43:
        __break(0x5500u);
        return result;
      }
    }
  }
  LOWORD(v9) = -1;
LABEL_23:
  if ((v6 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v10 = (const void *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 384))(v6);
  if ((sub_100070E9C((uint64_t)v10) & 1) == 0 && (sub_100070DA8((uint64_t)v10) & 1) == 0)
  {
    LOWORD(v7) = v7 & 0xFFFE;
    LOWORD(v8) = v8 & 0xFFFE;
  }
  if (!sub_100070F9C((uint64_t)v10)) {
    LOWORD(v7) = v7 & 0xFFFD;
  }
  if (!sub_100071090(v10)) {
    LOWORD(v7) = v7 & 0xFFEF;
  }
  if (!sub_1000711D8((uint64_t)v10)) {
    LOWORD(v7) = v7 & 0xFFF7;
  }
  if (!sub_1000712DC((uint64_t)v10)) {
    LOWORD(v7) = v7 & 0xFFDF;
  }
  int v11 = sub_1000713D0((uint64_t)v10);
  uint64_t result = 0;
  BOOL v12 = v11 == 0;
  __int16 v13 = v7 & 0xFFBF;
  if (!v12) {
    __int16 v13 = v7;
  }
  *(_WORD *)(v6 + 184) = v8;
  *(_WORD *)(v6 + 186) = v13;
  *(_WORD *)(v6 + 188) = v9;
  int v14 = v13 & 2;
  if ((v13 & 0x40) != 0) {
    int v15 = 32765;
  }
  else {
    int v15 = 31677;
  }
  *(_DWORD *)(v6 + 204) = v15 | v14;
  return result;
}

uint64_t sub_10009960C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t v2 = *(void *)(result + 208);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 376))(result);
      if (!v2) {
        sub_1000F2364();
      }
      if (!result) {
        sub_1000F2364();
      }
      if ((result & 7) == 0)
      {
        uint64_t result = sub_1000628C0(result, v1);
        uint64_t v3 = result;
        if (!result) {
          return v3;
        }
        *(void *)(v1 + 208) = 0;
        if ((v2 & 7) == 0)
        {
          (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
          return v3;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000996D8(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((result + 8) & 7) != 0
    || ((uint64_t v1 = *(void *)(result + 8)) != 0 ? (v2 = (*(void *)(result + 8) & 7) == 0) : (v2 = 0),
        !v2 || (uint64_t result = v1 + 16, ((v1 + 16) & 7) != 0)))
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_100099718(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4) {
    return result;
  }
  uint64_t v5 = (uint64_t *)(v4 + 40);
  if ((v4 & 7) != 0 || ((v4 + 40) & 7) != 0) {
    goto LABEL_34;
  }
  char v8 = result;
  uint64_t v9 = *v5;
  if (*v5)
  {
    if (result)
    {
      if ((v9 & 7) == 0)
      {
        uint64_t result = sub_100063834(v9);
        if (result) {
          return result;
        }
        int v10 = 19;
LABEL_25:
        unint64_t v19 = 0xAAAAAAAAAAAAAAAALL;
        v13[0] = v10;
        if (sub_100063618(v9) == -1) {
          uint64_t result = 16;
        }
        else {
          uint64_t result = sub_100063618(v9);
        }
        goto LABEL_28;
      }
    }
    else if ((v9 & 7) == 0)
    {
      uint64_t result = sub_100063834(v9);
      if ((result & 1) == 0) {
        return result;
      }
      int v10 = 20;
      goto LABEL_25;
    }
LABEL_34:
    __break(0x5516u);
    goto LABEL_35;
  }
  unint64_t v19 = 0xAAAAAAAAAAAAAAAALL;
  if (result) {
    int v11 = 19;
  }
  else {
    int v11 = 20;
  }
  v13[0] = v11;
  if (((v4 + 52) & 3) != 0) {
    goto LABEL_34;
  }
  unsigned int v12 = *(_DWORD *)(v4 + 52);
  if (v12 != (char)v12)
  {
LABEL_35:
    __break(0x550Au);
    return result;
  }
  if (v12 == -1) {
    uint64_t result = 16;
  }
  else {
    uint64_t result = v12;
  }
LABEL_28:
  v13[1] = result;
  uint64_t v14 = a2;
  if (((v4 + 36) & 3) != 0) {
    goto LABEL_34;
  }
  int v15 = *(_DWORD *)(v4 + 36);
  int v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = a3;
  if (v9)
  {
    if ((v9 & 7) == 0)
    {
      sub_1000634E4(v9, 0, 0, (uint64_t)v13, 48);
      return sub_10006381C(v9, v8);
    }
    goto LABEL_34;
  }
  return sub_100067D3C(0, 0, (uint64_t)v13, 48, 0);
}

uint64_t sub_1000998A4(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_31;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_32;
  }
  unsigned int v7 = result;
  uint64_t result = (*(uint64_t (**)(void *))(*a3 + 280))(a3);
  if ((result & 1) == 0) {
LABEL_31:
  }
    sub_1000F2364();
  uint64_t v8 = a3[4];
  if (!a2)
  {
    if (!v8 || (v8 & 7) != 0 || ((v8 + 40) & 7) != 0) {
      goto LABEL_32;
    }
    a2 = *(void *)(v8 + 40);
  }
  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  if (v7 > 0x1F) {
    goto LABEL_33;
  }
  v10[0] = v7;
  if (a2)
  {
    if ((a2 & 7) == 0)
    {
      if (sub_100063618(a2) == -1) {
        uint64_t result = 16;
      }
      else {
        uint64_t result = sub_100063618(a2);
      }
      goto LABEL_22;
    }
LABEL_32:
    __break(0x5516u);
    goto LABEL_33;
  }
  if (!v8 || (v8 & 7) != 0 || ((v8 + 52) & 3) != 0) {
    goto LABEL_32;
  }
  unsigned int v9 = *(_DWORD *)(v8 + 52);
  if (v9 != (char)v9)
  {
LABEL_33:
    __break(0x550Au);
    return result;
  }
  if (v9 == -1) {
    uint64_t result = 16;
  }
  else {
    uint64_t result = v9;
  }
LABEL_22:
  v10[1] = result;
  int v11 = a3;
  if (!v8 || (v8 & 7) != 0 || ((v8 + 36) & 3) != 0) {
    goto LABEL_32;
  }
  int v12 = *(_DWORD *)(v8 + 36);
  int v13 = 0;
  uint64_t v14 = a2;
  uint64_t v16 = a4;
  if (a2)
  {
    if ((a2 & 7) == 0) {
      return sub_1000634E4(a2, 0, 0, (uint64_t)v10, 48);
    }
    goto LABEL_32;
  }
  return sub_100067D3C(0, 0, (uint64_t)v10, 48, 0);
}

uint64_t sub_100099A48(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 624;
      if ((result & 7) == 0) {
        return sub_1000CEACC(result, a2, 0);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100099A6C(uint64_t result)
{
  byte_10013BED8 = result;
  return result;
}

void sub_100099A78(uint64_t *a1)
{
  if (!a1
    || (a1 & 7) != 0
    || ((unint64_t)(a1 + 21) & 7) != 0
    || (BOOL v2 = a1 + 21, sub_100099B28((unint64_t **)&v2), ((unint64_t)(a1 + 17) & 7) != 0)
    || (sub_10000C538((uint64_t)(a1 + 17)), ((unint64_t)(a1 + 12) & 7) != 0)
    || (sub_10000C538((uint64_t)(a1 + 12)), ((unint64_t)(a1 + 9) & 7) != 0)
    || (BOOL v2 = a1 + 9, sub_10000B3B0(&v2), ((unint64_t)(a1 + 3) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    BOOL v2 = a1 + 3;
    sub_10000B3B0(&v2);
    BOOL v2 = a1;
    sub_10000B3B0(&v2);
  }
}

void sub_100099B28(unint64_t **a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  BOOL v2 = *a1;
  if (!*a1 || ((unint64_t)*a1 & 7) != 0) {
    goto LABEL_16;
  }
  if (*v2)
  {
    sub_100099BB4((uint64_t)v2, *v2);
    uint64_t v4 = (void **)*a1;
    if (!*a1 || (v4 & 7) != 0 || (((_BYTE)v4 + 16) & 7) != 0)
    {
LABEL_16:
      __break(0x5516u);
      return;
    }
    uint64_t v5 = *v4;
    operator delete(v5);
  }
}

uint64_t sub_100099BB4(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  unint64_t v2 = *(void *)(result + 8);
  if (v2 == a2)
  {
LABEL_6:
    *(void *)(result + 8) = a2;
    return result;
  }
  if ((((_BYTE)result + 16) & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }
  else if (v2 > a2)
  {
    goto LABEL_6;
  }
  __break(0x5513u);
  return result;
}

BOOL sub_100099BF0(BOOL result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 56);
    BOOL v2 = v1 && (*(void *)(result + 56) & 7) == 0;
    uint64_t v3 = (_DWORD *)(v1 + 16);
    if (v2 && (v3 & 7) == 0) {
      return *v3 != 0;
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100099C30(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 120) & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }
  uint64_t result = *(unsigned int *)(result + 120);
  if (result >= 4) {
LABEL_7:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_100099C60(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_10000B24C(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_100099D50(v2, a2, result, v2 + 8);
        uint64_t v10 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          uint64_t v5 = sub_100056808(&v10);
          unsigned int v6 = bswap32(*(_DWORD *)a2);
          unsigned int v7 = bswap32(*(_DWORD *)v5);
          if (v6 == v7)
          {
            unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4)) >> 16;
            unsigned int v8 = bswap32(*((unsigned __int16 *)v5 + 2));
            if (v6 == HIWORD(v8)) {
              return v10;
            }
            unsigned int v7 = HIWORD(v8);
          }
          if (v6 < v7) {
            int v9 = -1;
          }
          else {
            int v9 = 1;
          }
          if (v9 < 0) {
            return v4;
          }
          return v10;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100099D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (1)
      {
        unsigned int v4 = bswap32(*(_DWORD *)(a3 + 25));
        unsigned int v5 = bswap32(*(_DWORD *)a2);
        if (v4 == v5)
        {
          unsigned int v4 = bswap32(*(unsigned __int16 *)(a3 + 29)) >> 16;
          unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4));
          if (v4 == HIWORD(v6)) {
            goto LABEL_17;
          }
          unsigned int v5 = HIWORD(v6);
        }
        if (v4 < v5) {
          int v8 = -1;
        }
        else {
          int v8 = 1;
        }
        if ((v8 & 0x80000000) == 0)
        {
LABEL_17:
          uint64_t v7 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
          goto LABEL_18;
        }
        if (((a3 + 8) & 7) != 0) {
          break;
        }
        uint64_t v7 = *(void *)(a3 + 8);
        if (!v7) {
          return a4;
        }
        a3 = a4;
LABEL_18:
        if ((v7 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v7;
      }
    }
  }
  __break(0x5516u);
  return a3;
}

uint64_t sub_100099E10(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_100099E24(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100099E48(uint64_t a1, uint64_t *a2, unsigned __int8 *a3)
{
  if (!a1 || (v5 = a1, (a1 & 7) != 0) || (unsigned int v4 = a2, a1 = sub_10000B24C(a1), v7 = v5 + 8, ((v5 + 8) & 7) != 0))
  {
LABEL_20:
    __break(0x5516u);
LABEL_21:
    uint64_t v7 = a1;
    a1 = (uint64_t)v3;
    goto LABEL_22;
  }
  if (a1)
  {
    if ((((_BYTE)v5 + 16) & 7) == 0 && (a1 & 7) == 0)
    {
      unsigned int v8 = *a3;
      while (((a1 + 32) & 7) == 0)
      {
        unsigned int v9 = *(unsigned __int8 *)(a1 + 32);
        if (v8 >= v9)
        {
          if (v9 >= v8)
          {
            *unsigned int v4 = a1;
            if ((v7 & 7) == 0) {
              return v7;
            }
            goto LABEL_20;
          }
          uint64_t v3 = (uint64_t *)(a1 + 8);
          if (((a1 + 8) & 7) != 0) {
            goto LABEL_20;
          }
          uint64_t v10 = *v3;
          if (!*v3) {
            goto LABEL_21;
          }
          a1 += 8;
        }
        else
        {
          uint64_t v10 = *(void *)a1;
          if (!*(void *)a1)
          {
            uint64_t v7 = a1;
            goto LABEL_22;
          }
        }
        if ((v10 & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v7 = a1;
        a1 = v10;
      }
    }
    goto LABEL_20;
  }
  a1 = v5 + 8;
LABEL_22:
  *unsigned int v4 = v7;
  return a1;
}

void *sub_100099F48@<X0>(void *result@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (*((unsigned char *)result + 32) = *a2, *(unsigned char *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[5] = 0;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

void *sub_100099FDC@<X0>(void *result@<X0>, _WORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (((_BYTE)result + 32) & 1) != 0
    || (*((_WORD *)result + 16) = *a2, *(unsigned char *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[5] = 0;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

uint64_t sub_10009A074(uint64_t *a1, void *a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v2 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v3 = a1 + 2;
  if (((unint64_t)(a1 + 2) & 7) != 0) {
    goto LABEL_15;
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v12 = v4;
  long long v13 = v4;
  uint64_t v5 = (a1[1] - *a1) >> 3;
  unint64_t v6 = v5 + 1;
  if (v5 == -1)
  {
LABEL_16:
    __break(0x5500u);
LABEL_17:
    sub_10002A278((uint64_t)v2);
  }
  if (v6 >> 61) {
    goto LABEL_17;
  }
  unint64_t v8 = *v3 - *a1;
  if (v8 >> 2 > v6) {
    unint64_t v6 = v8 >> 2;
  }
  unint64_t v9 = v8 >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_10002AC34((uint64_t)&v12, v9, v5, (uint64_t)v3);
  if (!(void)v13 || (v13 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  *(void *)long long v13 = *a2;
  if ((unint64_t)v13 >= 0xFFFFFFFFFFFFFFF8)
  {
    __break(0x5513u);
  }
  else
  {
    *(void *)&long long v13 = v13 + 8;
    sub_10002AB70(v2, &v12);
    uint64_t v11 = v2[1];
    sub_10002AE10((uint64_t)&v12);
    return v11;
  }
  return result;
}

uint64_t sub_10009A170(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_10000B24C(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_10009A260(v2, a2, result, v2 + 8);
        uint64_t v10 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          uint64_t v5 = sub_10000B10C(&v10);
          unsigned int v6 = bswap32(*(_DWORD *)a2);
          unsigned int v7 = bswap32(*(_DWORD *)v5);
          if (v6 == v7)
          {
            unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4)) >> 16;
            unsigned int v8 = bswap32(*((unsigned __int16 *)v5 + 2));
            if (v6 == HIWORD(v8)) {
              return v10;
            }
            unsigned int v7 = HIWORD(v8);
          }
          if (v6 < v7) {
            int v9 = -1;
          }
          else {
            int v9 = 1;
          }
          if (v9 < 0) {
            return v4;
          }
          return v10;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009A260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (((a3 + 32) & 7) == 0)
      {
        unsigned int v4 = bswap32(*(_DWORD *)(a3 + 32));
        unsigned int v5 = bswap32(*(_DWORD *)a2);
        if (v4 == v5)
        {
          unsigned int v4 = bswap32(*(unsigned __int16 *)(a3 + 36)) >> 16;
          unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4));
          if (v4 == HIWORD(v6)) {
            goto LABEL_18;
          }
          unsigned int v5 = HIWORD(v6);
        }
        if (v4 < v5) {
          int v8 = -1;
        }
        else {
          int v8 = 1;
        }
        if ((v8 & 0x80000000) == 0)
        {
LABEL_18:
          uint64_t v7 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
          goto LABEL_19;
        }
        if (((a3 + 8) & 7) != 0) {
          break;
        }
        uint64_t v7 = *(void *)(a3 + 8);
        if (!v7) {
          return a4;
        }
        a3 = a4;
LABEL_19:
        if ((v7 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v7;
      }
    }
  }
  __break(0x5516u);
  return a3;
}

uint64_t sub_10009A32C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if (!a1 || (v5 = a1, (a1 & 7) != 0) || (unsigned int v4 = a2, a1 = sub_10000B24C(a1), v7 = v5 + 8, ((v5 + 8) & 7) != 0))
  {
LABEL_32:
    __break(0x5516u);
LABEL_33:
    uint64_t v7 = a1;
    a1 = v3;
    goto LABEL_34;
  }
  if (a1)
  {
    if ((((_BYTE)v5 + 16) & 7) == 0 && (a1 & 7) == 0)
    {
      while (1)
      {
        int v8 = (unsigned int *)(a1 + 32);
        if (((a1 + 32) & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v9 = bswap32(*(_DWORD *)a3);
        unsigned int v10 = bswap32(*v8);
        if (v9 == v10)
        {
          unsigned int v9 = bswap32(*(unsigned __int16 *)(a3 + 4)) >> 16;
          unsigned int v11 = bswap32(*(unsigned __int16 *)(a1 + 36));
          if (v9 == HIWORD(v11)) {
            goto LABEL_18;
          }
          unsigned int v10 = HIWORD(v11);
        }
        if (v9 < v10) {
          uint64_t v3 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v3 = 1;
        }
        if ((v3 & 0x80000000) != 0)
        {
          uint64_t v12 = *(void *)a1;
          if (!*(void *)a1)
          {
            uint64_t v7 = a1;
            goto LABEL_34;
          }
          goto LABEL_28;
        }
LABEL_18:
        uint64_t v3 = bswap32(*v8);
        unsigned int v13 = bswap32(*(_DWORD *)a3);
        if (v3 == v13)
        {
          uint64_t v3 = bswap32(*(unsigned __int16 *)(a1 + 36)) >> 16;
          unsigned int v14 = bswap32(*(unsigned __int16 *)(a3 + 4));
          if (v3 == HIWORD(v14)) {
            goto LABEL_31;
          }
          unsigned int v13 = HIWORD(v14);
        }
        if (v3 < v13) {
          int v15 = -1;
        }
        else {
          int v15 = 1;
        }
        if ((v15 & 0x80000000) == 0)
        {
LABEL_31:
          *unsigned int v4 = a1;
          if ((v7 & 7) == 0) {
            return v7;
          }
          goto LABEL_32;
        }
        uint64_t v3 = a1 + 8;
        if (((a1 + 8) & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v12 = *(void *)v3;
        if (!*(void *)v3) {
          goto LABEL_33;
        }
        a1 += 8;
LABEL_28:
        if ((v12 & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v7 = a1;
        a1 = v12;
      }
    }
    goto LABEL_32;
  }
  a1 = v5 + 8;
LABEL_34:
  *unsigned int v4 = v7;
  return a1;
}

void *sub_10009A4B4@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!result) {
    goto LABEL_8;
  }
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  unsigned int v4 = (char *)(result + 1);
  if (((unint64_t)(result + 1) & 7) != 0
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (*((_DWORD *)result + 8) = *(_DWORD *)a2,
        *((_WORD *)result + 18) = *(_WORD *)(a2 + 4),
        *(unsigned char *)(a3 + 16) = 1,
        ((unint64_t)(result + 5) & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
  }
  else
  {
    result[5] = 0;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

uint64_t *sub_10009A550(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (!result
    || (uint64_t v3 = (uint64_t)result, (result & 7) != 0)
    || ((unint64_t)(result + 1) & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a2 != a3)
  {
    do
    {
      uint64_t v5 = sub_100004C28(&v6);
      sub_10009A5DC(v3, (void *)(v3 + 8), (unsigned __int8 *)v5, v5);
      uint64_t result = sub_10000B05C(&v6);
    }
    while (v6 != a3);
  }
  return result;
}

void sub_10009A5DC(uint64_t a1, void *a2, unsigned __int8 *a3, _OWORD *a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v11 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v6 = (uint64_t *)sub_10009A6BC(a1, a2, &v11, (uint64_t)&v10, a3);
  uint64_t v7 = (void *)*v6;
  if (*v6)
  {
    if ((v7 & 7) == 0) {
      goto LABEL_8;
    }
LABEL_10:
    __break(0x5516u);
    return;
  }
  int v8 = v6;
  memset(v9, 170, sizeof(v9));
  sub_10009A894((_OWORD *)a1, a4, (uint64_t)v9);
  if (((uint64_t)v9[0] & 7) != 0) {
    goto LABEL_10;
  }
  sub_10000B634(a1, v11, v8, (void *)v9[0]);
  uint64_t v7 = v9[0];
  v9[0] = 0;
  sub_100020CD4(v9, 0);
  if (!v7) {
    return;
  }
LABEL_8:
  if ((v7 & 7) != 0) {
    goto LABEL_10;
  }
}

uint64_t sub_10009A6BC(uint64_t result, void *a2, uint64_t *a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v13 = (uint64_t)a2;
  if (!result) {
    goto LABEL_36;
  }
  uint64_t v5 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v6 = (void *)(result + 8);
  if (((result + 8) & 7) != 0) {
    goto LABEL_36;
  }
  if (v6 == a2)
  {
    a4 = (uint64_t)a2;
LABEL_9:
    unsigned int v14 = a2;
    if (*v5 == a4) {
      goto LABEL_13;
    }
    if ((((_BYTE)v5 + 16) & 7) == 0)
    {
      unint64_t v10 = (uint64_t *)sub_10009A914(&v14);
      uint64_t result = (uint64_t)sub_10000B10C(v10);
      if (*(unsigned __int8 *)result < *a5)
      {
        a4 = v13;
LABEL_13:
        if (!a4 || (a4 & 7) != 0) {
          goto LABEL_36;
        }
        if (!*(void *)a4)
        {
          *a3 = a4;
          return a4;
        }
        uint64_t v11 = v14;
        *a3 = (uint64_t)v14;
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_36;
        }
        a4 = (uint64_t)(v11 + 1);
        goto LABEL_19;
      }
      return sub_100099E48((uint64_t)v5, a3, a5);
    }
    goto LABEL_36;
  }
  if ((((_BYTE)result + 16) & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (uint64_t)sub_10000B10C(&v13);
  if (*a5 < *(unsigned __int8 *)result)
  {
    a4 = v13;
    a2 = (void *)v13;
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)sub_10000B10C(&v13);
  if (*(unsigned __int8 *)result < *a5)
  {
    unsigned int v14 = (void *)v13;
    uint64_t result = (uint64_t)sub_10000B05C((uint64_t *)&v14);
    if (v14 == v6 || (uint64_t result = (uint64_t)sub_10000B10C((uint64_t *)&v14), *a5 < *(unsigned __int8 *)result))
    {
      if (!v13) {
        goto LABEL_36;
      }
      if ((v13 & 7) != 0) {
        goto LABEL_36;
      }
      a4 = v13 + 8;
      if (((v13 + 8) & 7) != 0) {
        goto LABEL_36;
      }
      if (!*(void *)a4)
      {
        *a3 = v13;
        return a4;
      }
      a4 = (uint64_t)v14;
      *a3 = (uint64_t)v14;
      if (!a4) {
        goto LABEL_36;
      }
LABEL_19:
      if ((a4 & 7) != 0) {
        goto LABEL_36;
      }
      return a4;
    }
    return sub_100099E48((uint64_t)v5, a3, a5);
  }
  uint64_t v12 = v13;
  *a3 = v13;
  if ((v12 & 7) == 0)
  {
    *(void *)a4 = v12;
    return a4;
  }
LABEL_36:
  __break(0x5516u);
  return result;
}

_OWORD *sub_10009A894@<X0>(_OWORD *result@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)result + 8, (((unint64_t)result + 8) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 2) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    result[2] = *a2;
    *(unsigned char *)(a3 + 16) = 1;
  }
  return result;
}

void **sub_10009A914(void **result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *result;
    if (*result && ((unint64_t)*result & 7) == 0)
    {
      uint64_t v3 = (void *)*v1;
      if (*v1)
      {
        while ((v3 & 7) == 0)
        {
          unsigned int v4 = v3;
          if ((((_BYTE)v3 + 8) & 7) != 0) {
            break;
          }
          uint64_t v3 = (void *)v3[1];
          if (!v3) {
            goto LABEL_12;
          }
        }
      }
      else if ((v1 & 7) == 0)
      {
        do
        {
          if (((unint64_t)(v1 + 2) & 7) != 0) {
            break;
          }
          unsigned int v4 = (void *)v1[2];
          if (!v4 || (v1[2] & 7) != 0) {
            break;
          }
          if ((void *)*v4 != v1)
          {
LABEL_12:
            if ((v4 & 7) != 0) {
              break;
            }
            *uint64_t result = v4;
            return result;
          }
          uint64_t v1 = (void *)v1[2];
        }
        while ((v4 & 7) == 0);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009A9B0(uint64_t result, unsigned __int8 *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_10000B24C(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_10009AA5C(v2, a2, result, v2 + 8);
        uint64_t v5 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          if (*a2 >= *(unsigned __int8 *)sub_10000B10C(&v5)) {
            return v5;
          }
          return v4;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009AA5C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (((a3 + 32) & 7) == 0)
      {
        if (*(unsigned __int8 *)(a3 + 32) >= *a2)
        {
          uint64_t v4 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }
        else
        {
          if (((a3 + 8) & 7) != 0) {
            break;
          }
          uint64_t v4 = *(void *)(a3 + 8);
          if (!v4) {
            return a4;
          }
          a3 = a4;
        }
        if ((v4 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v4;
      }
    }
  }
  __break(0x5516u);
  return a3;
}

void *sub_10009AAE8(void *result, unsigned char *a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }
  v3[0] = result;
  uint64_t v2 = (unsigned char *)result[1];
  if (v2 != (unsigned char *)-1)
  {
    v3[2] = v2 + 1;
    if ((((_BYTE)result + 16) & 7) == 0 && v2)
    {
      *uint64_t v2 = *a2;
      v3[1] = v2 + 1;
      return sub_10002A1A0(v3);
    }
    goto LABEL_7;
  }
LABEL_8:
  __break(0x5513u);
  return result;
}

uint64_t sub_10009AB54(uint64_t *a1, unsigned char *a2)
{
  if (!a1) {
    goto LABEL_14;
  }
  uint64_t v2 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t v3 = a1 + 2;
  if (((unint64_t)(a1 + 2) & 7) != 0) {
    goto LABEL_14;
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v12 = v4;
  long long v13 = v4;
  unint64_t v5 = a1[1] - *a1;
  unint64_t v6 = v5 + 1;
  if (v5 == -1)
  {
LABEL_15:
    __break(0x5500u);
LABEL_16:
    sub_10002A278((uint64_t)v2);
  }
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  unint64_t v8 = *v3 - *a1;
  if (2 * v8 > v6) {
    unint64_t v6 = 2 * v8;
  }
  size_t v9 = v8 >= 0x3FFFFFFFFFFFFFFFLL ? 0x7FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_10009ACD0((uint64_t)&v12, v9, v5, (uint64_t)v3);
  if (!(void)v13)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  *(unsigned char *)long long v13 = *a2;
  if ((void)v13 == -1)
  {
    __break(0x5513u);
  }
  else
  {
    *(void *)&long long v13 = v13 + 1;
    sub_10009AC40(v2, &v12);
    uint64_t v11 = v2[1];
    sub_10009AD7C((uint64_t)&v12);
    return v11;
  }
  return result;
}

uint64_t *sub_10009AC40(uint64_t *result, void *a2)
{
  if (!result || (result & 7) != 0 || (uint64_t v2 = result + 2, ((unint64_t)(result + 2) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = result + 1;
    uint64_t v4 = result[1];
    uint64_t v5 = *result;
    uint64_t v6 = a2[1];
    while (v4 != v5)
    {
      if (!v4 || !v6)
      {
        __break(0x5513u);
        goto LABEL_12;
      }
      char v7 = *(unsigned char *)--v4;
      *(unsigned char *)--uint64_t v6 = v7;
    }
    a2[1] = v6;
    uint64_t v8 = *result;
    *uint64_t result = v6;
    a2[1] = v8;
    if ((v3 & 7) != 0) {
      goto LABEL_12;
    }
    uint64_t v9 = *v3;
    *uint64_t v3 = a2[2];
    a2[2] = v9;
    uint64_t v10 = *v2;
    *uint64_t v2 = a2[3];
    a2[3] = v10;
    *a2 = a2[1];
  }
  return result;
}

uint64_t sub_10009ACD0(uint64_t result, size_t a2, unint64_t a3, uint64_t a4)
{
  if (!result
    || (uint64_t v4 = (void *)result, (result & 7) != 0)
    || (((_BYTE)result + 24) & 7) != 0
    || (*(void *)(result + 24) = 0, ((result + 32) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)(result + 32) = a4;
    if (a2)
    {
      sub_10002A378(result);
      uint64_t result = (uint64_t)operator new(a2);
    }
    else
    {
      uint64_t result = 0;
    }
    *uint64_t v4 = result;
    if (~result >= a3)
    {
      v4[1] = result + a3;
      v4[2] = result + a3;
      if (~result >= a2)
      {
        v4[3] = result + a2;
        return (uint64_t)v4;
      }
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t sub_10009AD7C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void **)result;
    if ((result & 7) == 0)
    {
      sub_10009ADDC(result);
      if (!*v1) {
        return (uint64_t)v1;
      }
      uint64_t result = sub_10002A378((uint64_t)v1);
      if ((((_BYTE)v1 + 24) & 7) == 0)
      {
        operator delete(*v1);
        return (uint64_t)v1;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009ADDC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10009ADF4(result, *(void *)(result + 8));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009ADF4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    for (uint64_t i = *(void *)(result + 16); i != a2; *(void *)(v2 + 16) = i)
    {
      uint64_t result = sub_10002A378(v2);
      uint64_t v5 = *(void *)(v2 + 16);
      if (!v5)
      {
        __break(0x5513u);
        goto LABEL_9;
      }
      uint64_t i = v5 - 1;
    }
  }
  return result;
}

uint64_t sub_10009AE54(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      sub_10006D698(result, a2, 14);
      *(void *)uint64_t v2 = off_100126148;
      *(_DWORD *)(v2 + 1208) = 0;
      uint64_t v4 = sub_100033C50();
      *(void *)(v2 + 1192) = v4;
      if (!v4) {
        return v2;
      }
      uint64_t v5 = sub_1000DD4C4(a2);
      uint64_t v6 = sub_1000E1AE8(v5, 1);
      *(void *)(v2 + 1200) = v6;
      uint64_t result = sub_10006D8BC(v6);
      if (result && (result & 7) == 0)
      {
        sub_10009F1D8(result, 14, 32, a2);
        return v2;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009AEF8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10009AE54(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_10009AF0C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_100126148, (uint64_t v2 = sub_10006D8BC(a1)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(v2, 14, 0, *(void *)(a1 + 8));
    sub_10009AF98(a1);
    *(void *)(a1 + 1192) = 0;
    sub_10006D970(a1);
  }
}

uint64_t sub_10009AF98(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      while (1)
      {
        __int16 v3 = -1;
        uint64_t v4 = 0;
        uint64_t result = sub_10006FB58(v1, -1, &v3, &v4, 0xFFFFu);
        int v2 = result;
        if (!result)
        {
          if (v4)
          {
            sub_10009DC64(v1, v4);
            uint64_t result = v4;
            if (v4) {
              break;
            }
          }
        }
        if (v2) {
          return result;
        }
      }
      if ((v4 & 7) == 0) {
        operator delete();
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_10009B03C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009AF0C(a1);
  }
}

uint64_t sub_10009B050(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_10009AF0C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009B098(uint64_t result, unsigned int a2)
{
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_13;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_1000A216C(result, v2);
  if (!result)
  {
LABEL_13:
    uint64_t result = sub_10006D8BC(result);
    if (result && (result & 7) == 0)
    {
      int v7 = sub_1000A216C(result, v2);
      sub_1000EE4F4(0, 4, "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 185, v2, v7);
      return 2;
    }
    goto LABEL_29;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_100063520(v2);
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  sub_100063334(result, 0xEu);
  uint64_t result = sub_10009B2D4(v4);
  if (!result)
  {
    uint64_t v6 = 2;
    goto LABEL_27;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_100070B54(result, v4);
  if (a2 >= 4)
  {
LABEL_30:
    __break(0x550Au);
LABEL_31:
    __break(0x5513u);
    goto LABEL_32;
  }
  if (a2 == 3)
  {
    uint64_t v6 = 22;
LABEL_27:
    sub_100063380(v4, 0xEu);
    return v6;
  }
  char v8 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0 || (uint64_t result = sub_1000A1140(result, v4)) == 0 || (result & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16))(result, 0);
  __int16 v13 = -21846;
  char v14 = -86;
  if (v8)
  {
    unsigned int v9 = 0;
    goto LABEL_25;
  }
  int v10 = *(_DWORD *)(v5 + 1208);
  BOOL v11 = __CFADD__(v10, 1);
  unsigned int v12 = v10 + 1;
  if (!v11)
  {
    *(_DWORD *)(v5 + 1208) = (unsigned __int16)v12;
    __int16 v13 = bswap32(v12) >> 16;
    unsigned int v9 = 2;
LABEL_25:
    if (!__CFADD__(&v13, v9))
    {
      *((unsigned char *)&v13 + v9) = a2;
      sub_1000C51E0();
    }
    goto LABEL_31;
  }
LABEL_32:
  __break(0x5500u);
  return result;
}

uint64_t sub_10009B2D4(uint64_t a1)
{
  uint64_t result = sub_1000D289C();
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (!sub_1000A216C(result, a1)) {
    return 0;
  }
  uint64_t result = sub_10009EF00(v3, a1, 0xEu);
  if (!result)
  {
    sub_1000A1140(v3, a1);
    return 0;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return result;
  }
  uint64_t result = sub_1000A1140(v3, a1);
  if (result)
  {
    if (sub_1000602FC(v3, result)) {
      return v4;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10009B37C(uint64_t result, unsigned int a2)
{
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_13;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_1000A216C(result, v2);
  if (!result)
  {
LABEL_13:
    uint64_t result = sub_10006D8BC(result);
    if (result && (result & 7) == 0)
    {
      int v7 = sub_1000A216C(result, v2);
      sub_1000EE4F4(0, 4, "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 268, v2, v7);
      return 2;
    }
    goto LABEL_29;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_100063520(v2);
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  sub_100063334(result, 0xEu);
  uint64_t result = sub_10009B2D4(v4);
  if (!result)
  {
    uint64_t v6 = 2;
    goto LABEL_27;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t result = sub_100070B54(result, v4);
  if (a2 >= 4)
  {
LABEL_30:
    __break(0x550Au);
LABEL_31:
    __break(0x5513u);
    goto LABEL_32;
  }
  if (a2 == 3)
  {
    uint64_t v6 = 22;
LABEL_27:
    sub_100063380(v4, 0xEu);
    return v6;
  }
  char v8 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0 || (uint64_t result = sub_1000A1140(result, v4)) == 0 || (result & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16))(result, 0);
  __int16 v13 = -21846;
  char v14 = -86;
  if (v8)
  {
    unsigned int v9 = 0;
    goto LABEL_25;
  }
  int v10 = *(_DWORD *)(v5 + 1208);
  BOOL v11 = __CFADD__(v10, 1);
  unsigned int v12 = v10 + 1;
  if (!v11)
  {
    *(_DWORD *)(v5 + 1208) = (unsigned __int16)v12;
    __int16 v13 = bswap32(v12) >> 16;
    unsigned int v9 = 2;
LABEL_25:
    if (!__CFADD__(&v13, v9))
    {
      *((unsigned char *)&v13 + v9) = a2;
      sub_1000C51E0();
    }
    goto LABEL_31;
  }
LABEL_32:
  __break(0x5500u);
  return result;
}

uint64_t sub_10009B5B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v6 = sub_10006D8BC(a1);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_31;
  }
  a1 = sub_1000A216C(v6, v3);
  if (!a1)
  {
LABEL_13:
    uint64_t v13 = sub_10006D8BC(a1);
    if (v13 && (v13 & 7) == 0)
    {
      int v14 = sub_1000A216C(v13, v3);
      sub_1000EE4F4(0, 4, "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 382, v3, v14);
      return 2;
    }
    goto LABEL_31;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t v7 = sub_100063520(v3);
  if (!v7) {
    goto LABEL_31;
  }
  uint64_t v8 = v7;
  if ((v7 & 7) != 0) {
    goto LABEL_31;
  }
  sub_100063334(v7, 0xEu);
  uint64_t v9 = sub_10009B2D4(v8);
  if (!v9)
  {
    uint64_t v12 = 2;
    goto LABEL_29;
  }
  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100070B54(v9, v8);
  if (a2 >= 4)
  {
    __break(0x550Au);
    goto LABEL_33;
  }
  if (a2 == 3)
  {
    uint64_t v12 = 22;
LABEL_29:
    sub_100063380(v8, 0xEu);
    return v12;
  }
  char v15 = result;
  uint64_t v16 = sub_10006D8BC(result);
  if (!v16 || (v16 & 7) != 0 || (uint64_t v17 = sub_1000A1140(v16, v8)) == 0 || (v17 & 7) != 0) {
LABEL_31:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v17 + 16))(v17, 0);
  memset(v22, 170, 19);
  if (v15)
  {
    unsigned int v18 = 0;
LABEL_25:
    *(unsigned char *)((unint64_t)v22 | v18) = a2;
    if (a3 && (a3 & 7) == 0 && ((a3 + 8) & 7) == 0)
    {
      *(void *)((unint64_t)v22 | v18 | 1) = bswap64(*(void *)(a3 + 8));
      sub_1000C51E0();
    }
    goto LABEL_31;
  }
  int v19 = *(_DWORD *)(v10 + 1208);
  BOOL v20 = __CFADD__(v19, 1);
  unsigned int v21 = v19 + 1;
  if (!v20)
  {
    *(_DWORD *)(v10 + 1208) = (unsigned __int16)v21;
    LOWORD(v22[0]) = bswap32(v21) >> 16;
    unsigned int v18 = 2;
    goto LABEL_25;
  }
LABEL_33:
  __break(0x5500u);
  __break(0x5513u);
  return result;
}

uint64_t sub_10009B8AC(uint64_t a1, unsigned int a2, unsigned int a3, const char *a4)
{
  uint64_t v4 = a1;
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v8 = sub_10006D8BC(a1);
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_50;
  }
  a1 = sub_1000A216C(v8, v4);
  if (!a1)
  {
LABEL_15:
    uint64_t v16 = sub_10006D8BC(a1);
    if (v16 && (v16 & 7) == 0)
    {
      int v17 = sub_1000A216C(v16, v4);
      sub_1000EE4F4(0, 4, "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 531, v4, v17);
      return 2;
    }
    goto LABEL_50;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_50;
  }
  uint64_t v9 = sub_100063520(v4);
  if (!v9) {
    goto LABEL_50;
  }
  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_50;
  }
  sub_100063334(v9, 0xEu);
  uint64_t v11 = sub_10009B2D4(v10);
  if (!v11)
  {
    uint64_t v18 = 2;
LABEL_43:
    sub_100063380(v10, 0xEu);
    return v18;
  }
  uint64_t v12 = v11;
  if ((v11 & 7) != 0) {
LABEL_50:
  }
    __break(0x5516u);
  uint64_t result = sub_100070B54(v11, v10);
  if (a2 >= 4) {
    goto LABEL_51;
  }
  char v14 = result;
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      unsigned int v15 = 6;
    }
    else
    {
      if (a2 == 3) {
        goto LABEL_42;
      }
      unsigned int v15 = 0;
    }
    if (a3 <= 0xFF)
    {
      LOBYTE(v19) = 0;
      goto LABEL_30;
    }
LABEL_51:
    __break(0x550Au);
    goto LABEL_52;
  }
  if (a3 > 0xFF) {
    goto LABEL_51;
  }
  if (!a3)
  {
    LOBYTE(v19) = 0;
    unsigned int v15 = 1;
LABEL_30:
    if (v15 > a3)
    {
      uint64_t v20 = sub_10006D8BC(result);
      if (v20)
      {
        if ((v20 & 7) == 0)
        {
          uint64_t v21 = sub_1000A1140(v20, v10);
          if (v21)
          {
            if ((v21 & 7) == 0)
            {
              uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v21 + 16))(v21, 0);
              *(_DWORD *)&v31[15] = -1431655766;
              *(void *)&long long v22 = 0xAAAAAAAAAAAAAAAALL;
              *((void *)&v22 + 1) = 0xAAAAAAAAAAAAAAAALL;
              v30[3] = v22;
              *(_OWORD *)uint64_t v31 = v22;
              v30[1] = v22;
              v30[2] = v22;
              v30[0] = v22;
              if (v14)
              {
                unsigned int v23 = 0;
              }
              else
              {
                int v24 = *(_DWORD *)(v12 + 1208);
                BOOL v25 = __CFADD__(v24, 1);
                unsigned int v26 = v24 + 1;
                if (v25)
                {
LABEL_53:
                  __break(0x5500u);
                  goto LABEL_54;
                }
                *(_DWORD *)(v12 + 1208) = (unsigned __int16)v26;
                LOWORD(v30[0]) = bswap32(v26) >> 16;
                unsigned int v23 = 2;
              }
              unint64_t v27 = ~(unint64_t)v30;
              if (~(unint64_t)v30 >= v23)
              {
                *(unsigned char *)((unint64_t)v30 | v23) = a2;
                unint64_t v28 = v23 | 1;
                if (v27 >= v28)
                {
                  *(unsigned char *)((unint64_t)v30 | v28) = a3;
                  if (81 - v23 < v19) {
                    goto LABEL_42;
                  }
                  uint64_t v29 = v23 + 2;
                  if (!a4) {
LABEL_48:
                  }
                    sub_1000C51E0();
                  if (v27 >= v29)
                  {
                    memcpy((void *)((unint64_t)v30 | v29), a4, v19);
                    goto LABEL_48;
                  }
                }
              }
LABEL_52:
              __break(0x5513u);
              goto LABEL_53;
            }
          }
        }
      }
      goto LABEL_50;
    }
LABEL_42:
    uint64_t v18 = 22;
    goto LABEL_43;
  }
  if (a3 != 128) {
    goto LABEL_42;
  }
  if (!a4) {
    a4 = "";
  }
  uint64_t result = strlen(a4);
  unint64_t v19 = result + 1;
  if (result == -1) {
    goto LABEL_53;
  }
  if (v19 <= 0xFF)
  {
    unsigned int v15 = 129;
    goto LABEL_30;
  }
LABEL_54:
  __break(0x5507u);
  return result;
}

uint64_t sub_10009BC18(uint64_t result, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_16;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t result = sub_1000A216C(result, v4);
  if (!result)
  {
LABEL_16:
    uint64_t result = sub_10006D8BC(result);
    if (result && (result & 7) == 0)
    {
      int v10 = sub_1000A216C(result, v4);
      sub_1000EE4F4(0, 4, "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 697, v4, v10);
      return 2;
    }
    goto LABEL_33;
  }
  if ((v4 & 7) != 0 || (result = sub_100063520(v4)) == 0 || (uint64_t v8 = result, (result & 7) != 0))
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
  sub_100063334(result, 0xEu);
  uint64_t result = sub_10009B2D4(v8);
  if (!result)
  {
    uint64_t v11 = 2;
LABEL_30:
    sub_100063380(v8, 0xEu);
    return v11;
  }
  if (!a4)
  {
LABEL_29:
    uint64_t v11 = 22;
    goto LABEL_30;
  }
  if (a2 >= 4) {
    goto LABEL_34;
  }
  uint64_t v9 = result;
  if (a2 == 2)
  {
    if (a3 > 0xFF) {
      goto LABEL_34;
    }
    if (!a3 || a3 == 5) {
LABEL_32:
    }
      operator new();
    if (a3 != 1) {
      goto LABEL_29;
    }
    *(void *)&long long v12 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
    long long v13 = v12;
    long long v14 = v12;
    LOWORD(v14) = 8;
    HIDWORD(v13) = -1;
    if ((result & 7) == 0 && (((_BYTE)result - 68) & 3) == 0)
    {
      *(unsigned char *)(result + 1212) = 0;
      uint64_t result = sub_100070338(result, (uint64_t)&v13, (unsigned int (*)(void *, long long *))sub_10009BF80, 0);
      if (*(unsigned __int8 *)(v9 + 1212) <= 1u)
      {
        if (!*(unsigned char *)(v9 + 1212)) {
          goto LABEL_32;
        }
        sub_100063380(v8, 0xEu);
        return 0;
      }
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (a2 != 1) {
    goto LABEL_29;
  }
  if (a3 <= 0xFF)
  {
    if ((a3 & 0xFFFFFF7F) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
LABEL_34:
  __break(0x550Au);
  __break(0x5500u);
  return result;
}

uint64_t sub_10009BF80(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 16) & 7) != 0) {
    goto LABEL_18;
  }
  if (*(_WORD *)(a2 + 16) != 8) {
    return 0;
  }
  if (((a2 + 24) & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)(a2 + 24);
  if (!v2) {
    return 0;
  }
  if ((v2 | (v2 + 16)) & 7) != 0 || ((v2 + 18)) {
    goto LABEL_18;
  }
  unsigned int v3 = *(_DWORD *)(v2 + 18);
  if (v3 >= 4) {
    goto LABEL_19;
  }
  if (v3 != 2) {
    return 0;
  }
  uint64_t v4 = (unsigned int *)(v2 + 22);
  if (v4) {
    goto LABEL_18;
  }
  unsigned int v5 = *v4;
  if (v5 <= 0xFF)
  {
    if (v5 == 1)
    {
      *(unsigned char *)(result + 1212) = 1;
      return 37;
    }
    return 0;
  }
LABEL_19:
  __break(0x550Au);
  return result;
}

uint64_t sub_10009C028(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_121;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_121;
  }
  if (!a2) {
    goto LABEL_121;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_121;
  }
  uint64_t v3 = sub_100070B54(a1, *(void *)a2);
  int v4 = v3;
  uint64_t v5 = sub_10006D8BC(v3);
  if (!v5) {
    goto LABEL_121;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_121;
  }
  uint64_t v6 = sub_1000A1140(v5, *(void *)(a1 + 8));
  if (!v6) {
    goto LABEL_121;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_121;
  }
  unsigned int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 136))(v6, 14);
  if (((_BYTE)a2 + 16) & 7) != 0 || ((a2 + 18)) {
    goto LABEL_121;
  }
  unsigned int v8 = *(_DWORD *)(a2 + 18);
  if (v8 >= 4) {
    goto LABEL_122;
  }
  if ((a2 + 22))
  {
LABEL_121:
    __break(0x5516u);
    goto LABEL_122;
  }
  unsigned int v9 = *(_DWORD *)(a2 + 22);
  if (v9 > 0xFF) {
    goto LABEL_122;
  }
  unsigned int v10 = *(unsigned __int16 *)(a2 + 113);
  if (v4) {
    int v11 = 10;
  }
  else {
    int v11 = 12;
  }
  if (v4) {
    unsigned int v12 = 6;
  }
  else {
    unsigned int v12 = 8;
  }
  if (!*(_WORD *)(a2 + 113))
  {
    if (v8 == 2)
    {
      uint64_t v19 = 0;
      unsigned int v20 = 16;
      unsigned int v21 = *(_DWORD *)(a2 + 22);
      switch(v9)
      {
        case 0u:
          goto LABEL_38;
        case 1u:
        case 2u:
          goto LABEL_33;
        case 3u:
        case 4u:
          unsigned int v21 = 0;
          uint64_t v19 = 0;
          unsigned int v20 = 4;
          goto LABEL_38;
        case 5u:
          unsigned int v21 = 0;
          uint64_t v19 = 0;
          unsigned int v20 = 6;
          goto LABEL_38;
        default:
          int v18 = 1977;
          goto LABEL_31;
      }
    }
    if (v8 != 1)
    {
      int v18 = 1986;
      goto LABEL_31;
    }
    if (v9 == 128)
    {
      uint64_t v19 = a2 + 26;
      if ((a2 + 26)) {
        goto LABEL_121;
      }
      unsigned int v23 = (unsigned int *)(a2 + 109);
    }
    else
    {
      if (v9)
      {
        int v18 = 1928;
LABEL_31:
        sub_1000EE4F4(0, 4, "%s:%d Unsupported type!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", v18);
        return 22;
      }
LABEL_33:
      unsigned int v23 = (unsigned int *)(a2 + 34);
      if (((a2 + 26) | (a2 + 34))) {
        goto LABEL_121;
      }
      uint64_t v19 = *(void *)(a2 + 26);
    }
    unsigned int v20 = *v23;
    unsigned int v21 = v20;
    if (!v20) {
      return 22;
    }
LABEL_38:
    unsigned int v24 = v20 + v11;
    if (!__CFADD__(v20, v11))
    {
      if (v24 <= v7)
      {
        LOWORD(v27) = 0;
        goto LABEL_47;
      }
      if (v20 < 0xFFFFFFFC)
      {
        BOOL v25 = v7 >= v12;
        unsigned int v26 = v7 - v12;
        if (!v25) {
          goto LABEL_125;
        }
        if (!v26)
        {
LABEL_127:
          __break(0x5503u);
          JUMPOUT(0x10009C990);
        }
        unsigned int v27 = (v20 + 4) / v26;
        if (HIWORD(v27)) {
          goto LABEL_124;
        }
        unsigned int v24 = v7;
LABEL_47:
        *(_WORD *)(a2 + 113) = 0;
        *(_WORD *)(a2 + 115) = v27;
        *(_DWORD *)(a2 + 137) = v24;
        *(void *)(a2 + 117) = v19;
        *(_DWORD *)(a2 + 125) = 0;
        *(_DWORD *)(a2 + 129) = v21;
        *(_DWORD *)(a2 + 133) = v20;
        operator new[]();
      }
    }
LABEL_126:
    __break(0x5500u);
    goto LABEL_127;
  }
  if (!*(_DWORD *)(a2 + 133)) {
    return 22;
  }
  unsigned int v13 = *(unsigned __int16 *)(a2 + 115);
  unsigned int v14 = *(_DWORD *)(a2 + 137);
  uint64_t v15 = *(void *)(a2 + 117);
  unsigned int v16 = *(_DWORD *)(a2 + 125);
  unsigned int v17 = *(_DWORD *)(a2 + 129);
  unint64_t v28 = *(char **)(a2 + 141);
  if (v28)
  {
    if (!__CFADD__(v28, v14))
    {
      unint64_t v29 = *(void *)(a2 + 141);
      if (v4) {
        goto LABEL_55;
      }
      if (((a2 + 8) & 7) != 0) {
        goto LABEL_121;
      }
      unsigned int v30 = *(_DWORD *)(a2 + 8);
      if (HIWORD(v30)) {
        goto LABEL_124;
      }
      *(_WORD *)unint64_t v28 = bswap32(v30) >> 16;
      if ((unint64_t)v28 <= 0xFFFFFFFFFFFFFFFDLL)
      {
        unint64_t v29 = (unint64_t)(v28 + 2);
LABEL_55:
        *(unsigned char *)unint64_t v29 = v8;
        if (v29 == -1) {
          goto LABEL_123;
        }
        *(unsigned char *)(v29 + 1) = v9;
        if (v29 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_123;
        }
        *(_WORD *)(v29 + 2) = __rev16(v10);
        if (v29 + 2 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_123;
        }
        *(_WORD *)(v29 + 4) = bswap32(v13) >> 16;
        if (v29 + 4 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_123;
        }
        uint64_t v31 = (char *)(v29 + 6);
        size_t v32 = v17 - v16;
        if (v17 < v16)
        {
LABEL_125:
          __break(0x5515u);
          goto LABEL_126;
        }
        unint64_t v33 = &v28[v14] - v31;
        if (v8 == 2)
        {
          switch(v9)
          {
            case 0u:
              if (v10 != (unsigned __int16)v13)
              {
                uint64_t v41 = v15;
                unsigned int v42 = v16;
                unint64_t v43 = v33;
                sub_1000EE4F4(0, 4, "%s:%d sectCur != sectMax\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2129);
                unint64_t v33 = v43;
                unsigned int v16 = v42;
                uint64_t v15 = v41;
              }
              uint64_t v44 = (unsigned __int16 *)(a2 + 26);
              if ((a2 + 26)) {
                goto LABEL_121;
              }
              if (*v44 >= 0x2000u)
              {
                uint64_t v45 = v15;
                unsigned int v46 = v16;
                unint64_t v47 = v33;
                sub_1000EE4F4(0, 4, "%s:%d pLocMsg->msg.locData.data.locPoint.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2134);
                unint64_t v33 = v47;
                unsigned int v16 = v46;
                uint64_t v15 = v45;
              }
              if ((a2 + 28)) {
                goto LABEL_121;
              }
              if (*(_DWORD *)(a2 + 28) > 0x240C83FFu)
              {
                uint64_t v48 = v15;
                unsigned int v49 = v16;
                unint64_t v50 = v33;
                sub_1000EE4F4(0, 4, "%s:%d pLocMsg->msg.locData.data.locPoint.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2139);
                unint64_t v33 = v50;
                unsigned int v16 = v49;
                uint64_t v15 = v48;
              }
              if (v33 <= 0xF) {
                goto LABEL_120;
              }
              *(_WORD *)uint64_t v31 = bswap32(*v44) >> 16;
              if ((unint64_t)v31 >= 0xFFFFFFFFFFFFFFFELL) {
                goto LABEL_126;
              }
              *(_DWORD *)(v31 + 2) = bswap32(*(_DWORD *)(a2 + 28));
              if ((a2 + 32)) {
                goto LABEL_121;
              }
              if ((unint64_t)v31 >= 0xFFFFFFFFFFFFFFFALL) {
                goto LABEL_126;
              }
              *(_DWORD *)(v31 + 6) = bswap32(*(_DWORD *)(a2 + 32));
              if ((a2 + 36)) {
                goto LABEL_121;
              }
              if ((unint64_t)v31 >= 0xFFFFFFFFFFFFFFF6) {
                goto LABEL_126;
              }
              *(_DWORD *)(v31 + 10) = bswap32(*(_DWORD *)(a2 + 36));
              if ((a2 + 40)) {
                goto LABEL_121;
              }
              if ((unint64_t)v31 >= 0xFFFFFFFFFFFFFFF2) {
                goto LABEL_126;
              }
              *((_WORD *)v31 + 7) = bswap32(*(unsigned __int16 *)(a2 + 40)) >> 16;
              if ((unint64_t)v31 > 0xFFFFFFFFFFFFFFEFLL) {
                goto LABEL_123;
              }
              v31 += 16;
              break;
            case 1u:
            case 2u:
              break;
            case 3u:
            case 4u:
              if (v33 <= 3)
              {
                uint64_t v34 = v15;
                unsigned int v35 = v16;
                unint64_t v36 = v33;
                sub_1000EE4F4(0, 4, "%s:%d buffLen < sizeof (pLocMsg->msg.locData.data.ephRefresh)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2247);
                unint64_t v33 = v36;
                unsigned int v16 = v35;
                uint64_t v15 = v34;
              }
              if ((a2 + 26)) {
                goto LABEL_121;
              }
              *(_DWORD *)uint64_t v31 = bswap32(*(_DWORD *)(a2 + 26));
              if ((unint64_t)v31 > 0xFFFFFFFFFFFFFFFBLL) {
                goto LABEL_123;
              }
              v31 += 4;
              break;
            case 5u:
              if (v10 != (unsigned __int16)v13)
              {
                uint64_t v51 = v15;
                unsigned int v52 = v16;
                unint64_t v53 = v33;
                sub_1000EE4F4(0, 4, "%s:%d sectCur != sectMax\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2263);
                unint64_t v33 = v53;
                unsigned int v16 = v52;
                uint64_t v15 = v51;
              }
              char v54 = (unsigned __int16 *)(a2 + 26);
              if ((a2 + 26)) {
                goto LABEL_121;
              }
              if (*v54 >= 0x2000u)
              {
                uint64_t v55 = v15;
                unsigned int v56 = v16;
                unint64_t v57 = v33;
                sub_1000EE4F4(0, 4, "%s:%d pLocMsg->msg.locData.data.gpsWeekTime.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2268);
                unint64_t v33 = v57;
                unsigned int v16 = v56;
                uint64_t v15 = v55;
              }
              uint64_t v58 = (unsigned int *)(a2 + 28);
              if ((a2 + 28)) {
                goto LABEL_121;
              }
              if (*v58 > 0x240C83FF)
              {
                uint64_t v59 = v15;
                unsigned int v60 = v16;
                unint64_t v61 = v33;
                sub_1000EE4F4(0, 4, "%s:%d pLocMsg->msg.locData.data.gpsWeekTime.gpsWeekTimeMs > IAP_LOCATION_MAX_WEEKTIME\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 2273);
                unint64_t v33 = v61;
                unsigned int v16 = v60;
                uint64_t v15 = v59;
              }
              if (v33 < 6)
              {
LABEL_120:
                __break(0x5518u);
                goto LABEL_121;
              }
              *(_WORD *)uint64_t v31 = bswap32(*v54) >> 16;
              if ((unint64_t)v31 >= 0xFFFFFFFFFFFFFFFELL) {
                goto LABEL_126;
              }
              *(_DWORD *)(v31 + 2) = bswap32(*v58);
              if ((unint64_t)v31 > 0xFFFFFFFFFFFFFFF9) {
                goto LABEL_123;
              }
              v31 += 6;
              break;
            default:
              uint64_t v65 = 2294;
              int v37 = "%s:%d Should never have unhandled case!\n";
              goto LABEL_70;
          }
        }
        else if (v8 != 1)
        {
          uint64_t v65 = 2302;
          int v37 = "%s:%d Should never reach unhandled case!\n";
LABEL_70:
          uint64_t v38 = v15;
          unsigned int v39 = v16;
          unint64_t v40 = v33;
          sub_1000EE4F4(0, 4, v37, "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", v65);
          unint64_t v33 = v40;
          unsigned int v16 = v39;
          uint64_t v15 = v38;
        }
        if (!v15 || !v32) {
          goto LABEL_113;
        }
        if (v33 >= v32) {
          size_t v62 = v32;
        }
        else {
          size_t v62 = v33;
        }
        if (__CFADD__(v15, v16)) {
          goto LABEL_123;
        }
        uint64_t v63 = v16;
        memcpy(v31, (const void *)(v15 + v16), v62);
        if (__CFADD__(v31, v62)) {
          goto LABEL_123;
        }
        if (!((v62 + v63) >> 32))
        {
          v31 += v62;
          *(_DWORD *)(a2 + 125) = v62 + v63;
LABEL_113:
          if (((a2 + 12) & 3) == 0)
          {
            if (*(_DWORD *)(a2 + 12) <= 0xFFu)
            {
              if (((a2 + 8) & 7) == 0)
              {
                if (!((unint64_t)(v31 - v28) >> 16)) {
                  sub_1000C51E0();
                }
                goto LABEL_124;
              }
              goto LABEL_121;
            }
LABEL_122:
            __break(0x550Au);
            goto LABEL_123;
          }
          goto LABEL_121;
        }
LABEL_124:
        __break(0x5507u);
        goto LABEL_125;
      }
    }
LABEL_123:
    __break(0x5513u);
    goto LABEL_124;
  }
  return 12;
}

uint64_t sub_10009C9C0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_40;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_40;
  }
  if (!*(void *)(a1 + 8)) {
    return 89;
  }
  uint64_t v4 = sub_10006D8BC(a1);
  if (!v4 || (v4 & 7) != 0)
  {
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }
  if (!sub_1000A1834(v4, *(void *)(a1 + 8))) {
    return 89;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_40;
  }
  if (sub_1000622BC(v5)) {
    return 89;
  }
  if (!sub_10009B2D4(*(void *)(a1 + 8))) {
    return 22;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_40;
  }
  unsigned int v7 = *(unsigned __int16 *)(a2 + 126);
  if (v7 >= 0x100)
  {
LABEL_41:
    __break(0x5507u);
    goto LABEL_42;
  }
  unsigned int v8 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v9 = *(unsigned __int16 *)(a2 + 128);
  if ((sub_100070B54(a1, *(void *)(a1 + 8)) & 1) == 0)
  {
    uint64_t result = 22;
    if (!v8) {
      return result;
    }
    BOOL v11 = v9 >= 2;
    v9 -= 2;
    if (!v11) {
      return result;
    }
    unsigned int v12 = *v8;
    if ((unint64_t)v8 < 0xFFFFFFFFFFFFFFFELL)
    {
      ++v8;
      int v10 = __rev16(v12);
      goto LABEL_24;
    }
LABEL_42:
    __break(0x5513u);
    JUMPOUT(0x10009CB7CLL);
  }
  int v10 = *(_DWORD *)(a2 + 68);
LABEL_24:
  uint64_t result = 22;
  if (v8 && v9)
  {
    if ((v7 & 0x80) != 0)
    {
      return 0;
    }
    else
    {
      uint64_t v14 = 0;
      switch(v7)
      {
        case 0u:
          if (v9 < 2) {
            return result;
          }
          if (v8 == (unsigned __int16 *)-1) {
            goto LABEL_42;
          }
          __int16 v13 = *((unsigned __int8 *)v8 + 1);
LABEL_36:
          __int16 v15 = v13;
          uint64_t result = sub_10006FB58(a1, v10, &v15, &v14, 0xFFFFu);
          if (v7 == 9 || !result) {
            uint64_t result = sub_10009CBA4(a1, a2, v14);
          }
          break;
        case 2u:
          __int16 v13 = 1;
          goto LABEL_36;
        case 4u:
          __int16 v13 = 3;
          goto LABEL_36;
        case 7u:
          __int16 v13 = 6;
          goto LABEL_36;
        case 9u:
          __int16 v13 = 9;
          goto LABEL_36;
        default:
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_10009CBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_230;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v7 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v8 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v9 = sub_100070B54(a1, *(void *)(a1 + 8));
  char v10 = v9;
  if (v9)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 68);
    unsigned int v12 = v8;
  }
  else
  {
    unsigned int v12 = 0;
    unsigned int v11 = -1;
    if (v7 && v8 >= 2)
    {
      unsigned int v14 = *v7;
      if ((unint64_t)v7 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_231;
      }
      ++v7;
      unsigned int v11 = __rev16(v14);
      unsigned int v12 = v8 - 2;
      goto LABEL_13;
    }
  }
  if (v7)
  {
LABEL_13:
    unsigned int v15 = *(unsigned __int8 *)v7;
    long long v69 = 0u;
    long long v70 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    uint64_t v77 = 0;
    uint64_t v16 = *(void *)(a1 + 8);
    unint64_t v67 = 0xAAAAAAAAAAAAAAAALL;
    *(void *)&long long v68 = v16;
    *((void *)&v68 + 1) = __PAIR64__(v6, v11);
    switch(v6)
    {
      case 0u:
        int v17 = *(unsigned __int8 *)v7;
        if (v17 == 19)
        {
          uint64_t v13 = 22;
          if (!a3 || v12 < 4) {
            goto LABEL_162;
          }
          if (v7 == (unsigned __int16 *)-1) {
            goto LABEL_231;
          }
          if ((unint64_t)v7 >= 0xFFFFFFFFFFFFFFFELL) {
            goto LABEL_233;
          }
          unsigned int v18 = v7[1];
          if ((a3 & 7) != 0 || ((a3 + 12) & 3) != 0) {
            goto LABEL_230;
          }
          unsigned int v19 = *(_DWORD *)(a3 + 12);
          if (v19 <= 0xFF)
          {
            if (v19 != *((unsigned __int8 *)v7 + 1)) {
              goto LABEL_163;
            }
            if ((((_BYTE)a3 + 16) & 7) != 0) {
              goto LABEL_230;
            }
            unsigned int v20 = __rev16(v18);
            if (v20 != *(unsigned __int16 *)(a3 + 113)) {
              goto LABEL_163;
            }
            if (v18 != 0xFFFF)
            {
              *(_WORD *)(a3 + 113) = v20 + 1;
              if (*(unsigned __int16 *)(a3 + 115) < (unsigned __int16)(v20 + 1)) {
                goto LABEL_163;
              }
              uint64_t v13 = sub_10009C028(a1, a3);
              if (!v13)
              {
                a3 = 0;
                goto LABEL_157;
              }
LABEL_162:
              if (!a3) {
                goto LABEL_166;
              }
              goto LABEL_163;
            }
LABEL_234:
            __break(0x5507u);
            JUMPOUT(0x10009D918);
          }
          goto LABEL_232;
        }
        if (v12 >= 2)
        {
          size_t v32 = &v68;
          if (a3) {
            unint64_t v33 = (long long *)a3;
          }
          else {
            unint64_t v33 = &v68;
          }
          if ((v33 & 7) != 0) {
            goto LABEL_230;
          }
          char v34 = a3 + 16;
          if (a3) {
            size_t v32 = (long long *)a3;
          }
          else {
            char v34 = 16;
          }
          if ((v34 & 7) != 0) {
            goto LABEL_230;
          }
          *((unsigned char *)v32 + 16) = v17;
          if (v7 == (unsigned __int16 *)-1) {
            goto LABEL_231;
          }
          unsigned int v35 = &v68;
          if (a3) {
            unsigned int v35 = (long long *)a3;
          }
          *((unsigned char *)v35 + 17) = *((unsigned char *)v7 + 1);
          a3 = (uint64_t)v33;
LABEL_157:
          uint64_t v47 = *(void *)(a1 + 8);
          if (v47 && (v47 & 7) == 0)
          {
            if (!a3) {
              a3 = (uint64_t)&v68;
            }
            sub_1000634E4(v47, 0xEu, 0, a3, 152);
            uint64_t v13 = 0;
LABEL_163:
            sub_10009DC64(a1, a3);
            if ((long long *)a3 != &v68)
            {
              if ((a3 & 7) == 0) {
                operator delete();
              }
              goto LABEL_230;
            }
LABEL_166:
            sub_1000C6E1C(a2);
            return v13;
          }
          goto LABEL_230;
        }
        goto LABEL_91;
      case 2u:
        if (v15 > 3) {
          goto LABEL_232;
        }
        DWORD1(v69) = v15;
        if (v15 == 2 || v15 == 1) {
          goto LABEL_42;
        }
        if (v15)
        {
          sub_1000EE4F4(0, 4, "%s:%d Invalid Location type!\n");
        }
        else if (v12 >= 0x13)
        {
          if (v7 != (unsigned __int16 *)-1)
          {
            BYTE8(v69) = *((unsigned char *)v7 + 1);
            if ((unint64_t)v7 <= 0xFFFFFFFFFFFFFFFDLL)
            {
              BYTE9(v69) = *((unsigned char *)v7 + 2);
              if ((unint64_t)v7 <= 0xFFFFFFFFFFFFFFFCLL)
              {
                unint64_t v67 = *(void *)((char *)v7 + 3);
                *(void *)&long long v70 = bswap64(v67);
                if ((unint64_t)v7 <= 0xFFFFFFFFFFFFFFF4)
                {
                  unint64_t v67 = *(void *)((char *)v7 + 11);
                  *((void *)&v70 + 1) = bswap64(v67);
LABEL_45:
                  a3 = (uint64_t)&v68;
                  goto LABEL_157;
                }
              }
            }
          }
LABEL_231:
          __break(0x5513u);
        }
LABEL_91:
        uint64_t v13 = 22;
        goto LABEL_162;
      case 4u:
        if (v15 > 3) {
          goto LABEL_232;
        }
        DWORD1(v69) = v15;
        if (v15 > 2)
        {
          sub_1000EE4F4(0, 4, "%s:%d Unsupported type!\n");
        }
        else
        {
LABEL_42:
          if (v12 >= 9)
          {
            if (v7 == (unsigned __int16 *)-1) {
              goto LABEL_231;
            }
            unint64_t v67 = *(void *)((char *)v7 + 1);
            *((void *)&v69 + 1) = bswap64(v67);
            goto LABEL_45;
          }
        }
        goto LABEL_91;
      case 7u:
        goto LABEL_53;
      case 9u:
        if (v12 < 2) {
          goto LABEL_136;
        }
        uint64_t v9 = *(void *)(a1 + 1200);
        if (!v9) {
          goto LABEL_53;
        }
        __int16 v66 = 0;
        if (v7 == (unsigned __int16 *)-1) {
          goto LABEL_231;
        }
        if ((v9 & 7) != 0) {
          goto LABEL_230;
        }
        int v21 = *((unsigned __int8 *)v7 + 1);
        uint64_t v9 = (*(uint64_t (**)(uint64_t, char *, __int16 *))(*(void *)v9 + 152))(v9, (char *)&v66 + 1, &v66);
        if (!v9) {
          goto LABEL_106;
        }
        if (HIBYTE(v66) > 1u) {
          goto LABEL_232;
        }
        if (HIBYTE(v66)) {
          goto LABEL_53;
        }
        if (v15 > 3) {
          goto LABEL_232;
        }
        if (v15 != 2 || v21 != 2 && v21 != 5)
        {
LABEL_106:
          int v64 = -1431655766;
          if (v10)
          {
            unsigned int v36 = 0;
          }
          else
          {
            if (HIWORD(v11)) {
              goto LABEL_234;
            }
            LOWORD(v64) = bswap32(v11) >> 16;
            unsigned int v36 = 2;
          }
          unint64_t v37 = v36 | (unint64_t)&v64;
          *(unsigned char *)unint64_t v37 = 2;
          *(unsigned char *)(v37 | 1) = 9;
          sub_1000C51E0();
        }
LABEL_53:
        unsigned int v22 = v12 - 6;
        if (v12 < 6) {
          goto LABEL_136;
        }
        if (v15 > 3) {
          goto LABEL_232;
        }
        *(_DWORD *)((char *)&v69 + 2) = v15;
        if (v7 == (unsigned __int16 *)-1) {
          goto LABEL_231;
        }
        if ((unint64_t)v7 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_233;
        }
        int v23 = *((unsigned __int8 *)v7 + 1);
        unsigned int v24 = v7[1];
        if ((unint64_t)v7 >= 0xFFFFFFFFFFFFFFFCLL) {
          goto LABEL_233;
        }
        if ((unint64_t)v7 > 0xFFFFFFFFFFFFFFF9) {
          goto LABEL_231;
        }
        unsigned int v25 = __rev16(v24);
        unsigned int v63 = __rev16(v7[2]);
        if (v25 > v63) {
          goto LABEL_137;
        }
        unsigned int v26 = v7 + 3;
        if (v7[1])
        {
          if (a3)
          {
            int v62 = v7[2];
            if ((a3 & 7) != 0 || ((a3 + 12) & 3) != 0) {
              goto LABEL_230;
            }
            unsigned int v27 = *(_DWORD *)(a3 + 12);
            if (v27 > 0xFF) {
              goto LABEL_232;
            }
            if (v27 != v6) {
              goto LABEL_137;
            }
            if (((a3 + 8) & 7) != 0) {
              goto LABEL_230;
            }
            if (v11 != *(_DWORD *)(a3 + 8)) {
              goto LABEL_137;
            }
            if (((_BYTE)a3 + 16) & 7) != 0 || ((a3 + 18)) {
              goto LABEL_230;
            }
            unsigned int v28 = *(_DWORD *)(a3 + 18);
            if (v28 > 3) {
              goto LABEL_232;
            }
            if (v28 != v15) {
              goto LABEL_137;
            }
            if ((a3 + 22)) {
              goto LABEL_230;
            }
            unsigned int v29 = *(_DWORD *)(a3 + 22);
            if (v29 > 0xFF)
            {
LABEL_232:
              __break(0x550Au);
              goto LABEL_233;
            }
            if (v29 == v23 && v25 == *(unsigned __int16 *)(a3 + 113))
            {
              unsigned int v30 = v63;
              if (v63 == *(unsigned __int16 *)(a3 + 115))
              {
                unsigned int v31 = *(_DWORD *)(a3 + 133);
                goto LABEL_119;
              }
            }
          }
        }
        else if (v22 < 4)
        {
          unsigned int v25 = 0;
        }
        else
        {
          if ((unint64_t)v26 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_231;
          }
          int v62 = v7[2];
          if (a3)
          {
            sub_10009DC64(a1, a3);
            if ((a3 & 7) == 0) {
              operator delete();
            }
            goto LABEL_230;
          }
          unsigned int v31 = bswap32(*(_DWORD *)(v7 + 3));
          unsigned int v22 = v12 - 10;
          if (v7[2]) {
            operator new();
          }
          if (v31 == v22)
          {
            a3 = (uint64_t)&v68;
            uint64_t v77 = 0;
            long long v75 = 0u;
            long long v76 = 0u;
            long long v73 = 0u;
            long long v74 = 0u;
            long long v71 = 0u;
            long long v72 = 0u;
            long long v69 = 0u;
            long long v70 = 0u;
            long long v68 = 0u;
            if (((unint64_t)&v68 & 7) != 0) {
              goto LABEL_230;
            }
            *(void *)&long long v68 = *(void *)(a1 + 8);
            if (((&v68 + 8) & 7) != 0) {
              goto LABEL_230;
            }
            DWORD2(v68) = v11;
            if (((&v68 + 12) & 3) != 0) {
              goto LABEL_230;
            }
            HIDWORD(v68) = v6;
            if (((&v68 + 16) & 7) != 0) {
              goto LABEL_230;
            }
            if ((&v68 + 18)) {
              goto LABEL_230;
            }
            *(_DWORD *)((char *)&v69 + 2) = v15;
            if ((&v68 + 22)) {
              goto LABEL_230;
            }
            unsigned int v26 = v7 + 5;
            *(_DWORD *)((char *)&v69 + 6) = v23;
            *(_WORD *)((char *)&v75 + 1) = v25;
            unsigned int v30 = v63;
            *(_WORD *)((char *)&v75 + 3) = v63;
            *(_DWORD *)((char *)&v76 + 5) = v31;
LABEL_119:
            if (v15 != 2)
            {
              if (v15 == 1)
              {
                if (v23 == 128)
                {
                  uint64_t v49 = a3 & 7;
                  if (!v24 && v31 && v31 <= 0x53)
                  {
                    if (a3 & 7) != 0 || (((_BYTE)a3 + 16) & 7) != 0 || ((a3 + 26)) {
                      goto LABEL_230;
                    }
                    uint64_t v49 = 0;
                    *(_DWORD *)(a3 + 109) = v31;
                    *(_DWORD *)(a3 + 129) = v31;
                  }
                  if (v49 || (((_BYTE)a3 + 16) & 7) != 0 || (uint64_t v39 = a3 + 26, ((a3 + 26) & 1) != 0))
                  {
LABEL_230:
                    __break(0x5516u);
                    goto LABEL_231;
                  }
                  goto LABEL_213;
                }
                if (!v23)
                {
                  if (!v24 && v31 && v31 < 0x10001) {
                    operator new[]();
                  }
                  uint64_t v51 = a3 & 7;
LABEL_210:
                  if (v51 | ((_BYTE)a3 + 16) & 7 || ((a3 + 26) & 1) != 0) {
                    goto LABEL_230;
                  }
                  uint64_t v39 = *(void *)(a3 + 26);
                  goto LABEL_213;
                }
                uint64_t v50 = 1539;
LABEL_182:
                uint64_t v61 = v50;
                unint64_t v40 = "%s:%d Unsupported data!\n";
              }
              else
              {
                uint64_t v61 = 1691;
                unint64_t v40 = "%s:%d Unsupported location type!\n";
              }
              int v38 = 4;
              sub_1000EE4F4(0, 4, v40, "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", v61);
              goto LABEL_138;
            }
            switch(v23)
            {
              case 0:
                int v38 = 4;
                if (v30 | v25 || v22 < 0x10 || v31 < 0x10) {
                  goto LABEL_138;
                }
                if ((a3 | (a3 + 16)) & 7) != 0 || ((a3 + 26)) {
                  goto LABEL_230;
                }
                *(_WORD *)(a3 + 26) = bswap32(*v26) >> 16;
                if ((unint64_t)v26 >= 0xFFFFFFFFFFFFFFFELL) {
                  goto LABEL_233;
                }
                if ((a3 + 28)) {
                  goto LABEL_230;
                }
                *(_DWORD *)(a3 + 28) = bswap32(*(_DWORD *)(v26 + 1));
                if ((unint64_t)v26 >= 0xFFFFFFFFFFFFFFFALL) {
                  goto LABEL_233;
                }
                if ((a3 + 32)) {
                  goto LABEL_230;
                }
                *(_DWORD *)(a3 + 32) = bswap32(*(_DWORD *)(v26 + 3));
                if ((unint64_t)v26 >= 0xFFFFFFFFFFFFFFF6) {
                  goto LABEL_233;
                }
                if ((a3 + 36)) {
                  goto LABEL_230;
                }
                *(_DWORD *)(a3 + 36) = bswap32(*(_DWORD *)(v26 + 5));
                if ((unint64_t)v26 >= 0xFFFFFFFFFFFFFFF2) {
                  goto LABEL_233;
                }
                if ((a3 + 40)) {
                  goto LABEL_230;
                }
                uint64_t v39 = 0;
                *(_WORD *)(a3 + 40) = __rev16(v26[7]);
                break;
              case 1:
                uint64_t v51 = a3 & 7;
                if (v24 || !v31) {
                  goto LABEL_210;
                }
                unsigned int v52 = 2097153;
                goto LABEL_204;
              case 2:
                uint64_t v51 = a3 & 7;
                if (v24 || !v31) {
                  goto LABEL_210;
                }
                unsigned int v52 = 131073;
LABEL_204:
                if (v31 >= v52) {
                  goto LABEL_210;
                }
                if (!(v51 | ((_BYTE)a3 + 16) & 7) && ((a3 + 26) & 1) == 0)
                {
                  if (*(void *)(a3 + 26)) {
                    operator delete[]();
                  }
                  operator new[]();
                }
                goto LABEL_230;
              case 3:
              case 4:
                int v38 = 4;
                if (v30 | v25 || v22 < 4 || v31 < 4) {
                  goto LABEL_138;
                }
                if ((a3 | (a3 + 16)) & 7) != 0 || ((a3 + 26)) {
                  goto LABEL_230;
                }
                uint64_t v39 = 0;
                *(_DWORD *)(a3 + 26) = bswap32(*(_DWORD *)v26);
                break;
              case 5:
                if (v6 != 9) {
                  goto LABEL_137;
                }
                if (((a3 | (a3 + 16)) & 7) != 0) {
                  goto LABEL_230;
                }
                if ((a3 + 26)) {
                  goto LABEL_230;
                }
                *(_WORD *)(a3 + 26) = 0;
                if ((a3 + 28)) {
                  goto LABEL_230;
                }
                uint64_t v39 = 0;
                *(_DWORD *)(a3 + 28) = 0;
                break;
              default:
                uint64_t v50 = 1682;
                goto LABEL_182;
            }
LABEL_213:
            if ((((_BYTE)a3 + 16) & 7) != 0) {
              goto LABEL_230;
            }
            uint64_t v53 = *(unsigned int *)(a3 + 125);
            unsigned int v54 = *(_DWORD *)(a3 + 129);
            BOOL v55 = v54 >= v53;
            unsigned int v56 = v54 - v53;
            if (!v55) {
              unsigned int v56 = 0;
            }
            if (v39)
            {
              int v57 = v62;
              if (v22 <= v56)
              {
                if (__CFADD__(v39, v53)) {
                  goto LABEL_231;
                }
                unsigned int v58 = v24;
                unsigned int v59 = v22;
                uint64_t v9 = (uint64_t)memcpy((void *)(v39 + v53), v26, v22);
                int v60 = *(_DWORD *)(a3 + 125);
                LODWORD(v53) = v60 + v59;
                if (__CFADD__(v60, v59)) {
                  goto LABEL_233;
                }
                *(_DWORD *)(a3 + 125) = v53;
                unsigned int v24 = v58;
                int v57 = v62;
              }
            }
            else
            {
              int v57 = v62;
            }
            if (v24 == v57) {
              int v38 = 2 * (v53 != *(_DWORD *)(a3 + 129));
            }
            else {
              int v38 = 19;
            }
LABEL_138:
            uint64_t v41 = sub_10006D8BC(v9);
            if (!v41 || (v41 & 7) != 0) {
              goto LABEL_230;
            }
            sub_1000A1140(v41, *(void *)(a1 + 8));
            __int16 v65 = -21846;
            int v64 = -1431655766;
            if (v10)
            {
              unsigned int v42 = 0;
            }
            else
            {
              if (HIWORD(v11)) {
                goto LABEL_234;
              }
              LOWORD(v64) = bswap32(v11) >> 16;
              unsigned int v42 = 2;
            }
            if (~(unint64_t)&v64 >= v42)
            {
              *(unsigned char *)((unint64_t)&v64 | v42) = v38;
              unint64_t v43 = v42 | 1;
              if (~(unint64_t)&v64 >= v43)
              {
                *(unsigned char *)((unint64_t)&v64 | v43) = v6;
                unsigned int v44 = v42 + 2;
                if (v38 == 19)
                {
                  uint64_t v45 = (_WORD *)((char *)&v64 + v44);
                  if (__CFADD__(&v64, v44))
                  {
LABEL_233:
                    __break(0x5500u);
                    goto LABEL_234;
                  }
                  if (!v45) {
                    goto LABEL_230;
                  }
                  *uint64_t v45 = __rev16(v25);
                  if (!a3 || (a3 & 7) != 0 || (((_BYTE)a3 + 16) & 7) != 0) {
                    goto LABEL_230;
                  }
                  int v46 = *(unsigned __int16 *)(a3 + 113);
                  if (v46 == 0xFFFF) {
                    goto LABEL_234;
                  }
                  *(_WORD *)(a3 + 113) = v46 + 1;
                  if (!sub_10006F9E0((void *)a1, v11, 6, a3, 500) && (long long *)a3 == &v68) {
                    sub_1000EE4F4(0, 4, "%s:%d pLocMsg == &locMsg\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 1772);
                  }
                }
                sub_1000C51E0();
              }
            }
            goto LABEL_231;
          }
          a3 = 0;
LABEL_136:
          unsigned int v25 = 0;
        }
LABEL_137:
        int v38 = 4;
        goto LABEL_138;
      default:
        sub_1000EE4F4(0, 4, "%s:%d Unsupported cmdID!\n");
        goto LABEL_91;
    }
  }
  return 22;
}

uint64_t sub_10009D958(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v2 = 0;
    if (a2 != 4)
    {
      if (a2 == 8)
      {
        sub_10009AF98(result);
      }
      else
      {
        if (a2 == 32)
        {
          sub_10006FF9C(result, (uint64_t)&v2);
          return v2;
        }
        sub_1000EE4F4(0, 4, "%s:%d CIapLingoLocation::NotifyEvent unknown event class: 0x%04X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 892, a2);
      }
    }
    return 0;
  }
  return result;
}

void sub_10009D9E4(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4, _DWORD *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_28;
  }
  char v6 = a3;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v25 = 0;
  long long v24 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)&long long v16 = *(void *)(a1 + 8);
  *((void *)&v16 + 1) = a2 | 0xA00000000;
  LOBYTE(v17) = 15;
  if (a3 >= 0x100) {
    goto LABEL_29;
  }
  BYTE1(v17) = a3;
  if (a3 > 9) {
    goto LABEL_23;
  }
  char v11 = 1;
  if (((1 << a3) & 0x16A) != 0)
  {
    HIDWORD(v16) = 0;
    if (!v8) {
      goto LABEL_28;
    }
LABEL_7:
    if ((v8 & 7) != 0) {
      goto LABEL_28;
    }
    sub_1000634E4(v8, 0xEu, 0, (uint64_t)&v16, 152);
    goto LABEL_9;
  }
  if (a3 != 7)
  {
    if (a3 == 9)
    {
      if (a4)
      {
LABEL_16:
        uint64_t v12 = sub_10006D8BC(v8);
        if (v12 && (v12 & 7) == 0)
        {
          sub_1000A1140(v12, *(void *)(a1 + 8));
          int v15 = -1431655766;
          if (sub_100070B54(a1, *(void *)(a1 + 8)))
          {
            unsigned int v13 = 0;
            goto LABEL_26;
          }
          if (!HIWORD(a2))
          {
            LOWORD(v15) = bswap32(a2) >> 16;
            unsigned int v13 = 2;
LABEL_26:
            unint64_t v14 = v13 | (unint64_t)&v15;
            *(unsigned char *)unint64_t v14 = 2;
            *(unsigned char *)(v14 | 1) = v6;
            sub_1000C51E0();
          }
LABEL_29:
          __break(0x5507u);
          return;
        }
LABEL_28:
        __break(0x5516u);
      }
      goto LABEL_21;
    }
LABEL_23:
    sub_1000EE4F4(0, 4, "%s:%d Invalid command!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 1002);
    goto LABEL_9;
  }
  char v11 = 0;
  HIDWORD(v16) = 0;
  if (a4) {
    goto LABEL_16;
  }
LABEL_21:
  sub_1000EE4F4(0, 4, "%s:%d NULL pLocMsg\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", 996);
  if ((v11 & 1) == 0)
  {
    uint64_t v8 = *(void *)(a1 + 8);
    if (!v8) {
      goto LABEL_28;
    }
    goto LABEL_7;
  }
LABEL_9:
  if (a4)
  {
    sub_10009DC64(a1, a4);
    if ((a4 & 7) == 0) {
      operator delete();
    }
    goto LABEL_28;
  }
  *a5 = 0;
}

uint64_t sub_10009DC64(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_27;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_27;
  }
  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_27;
  }
  unsigned int v2 = *(_DWORD *)(a2 + 12);
  if (v2 > 0xFF) {
    goto LABEL_28;
  }
  if (v2 - 6 > 3) {
    return result;
  }
  if (((_BYTE)a2 + 16) & 7) != 0 || ((a2 + 18)) {
    goto LABEL_27;
  }
  unsigned int v3 = *(_DWORD *)(a2 + 18);
  if (v3 > 3)
  {
LABEL_28:
    __break(0x550Au);
    return result;
  }
  if ((a2 + 22))
  {
LABEL_27:
    __break(0x5516u);
    goto LABEL_28;
  }
  unsigned int v4 = *(_DWORD *)(a2 + 22);
  if (v4 > 0xFF) {
    goto LABEL_28;
  }
  if (v3 == 2)
  {
    if (v4 == 2 || v4 == 1)
    {
LABEL_19:
      uint64_t v5 = (void *)(a2 + 26);
      if (((a2 + 26) & 1) == 0)
      {
        if (*v5) {
          operator delete[]();
        }
        *uint64_t v5 = 0;
        goto LABEL_23;
      }
      goto LABEL_27;
    }
  }
  else if (v3 == 1 && !v4)
  {
    goto LABEL_19;
  }
LABEL_23:
  uint64_t result = *(void *)(a2 + 141);
  if (result) {
    operator delete[]();
  }
  return result;
}

uint64_t sub_10009DD70(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(unsigned char *)uint64_t result = 14;
    if (result != -1)
    {
      *(void *)(result + 1) = 0x300000000000000;
      return 0;
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5500u);
  return result;
}

uint64_t sub_10009DDA4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  sub_10006D698(result, a2, 1);
  *(void *)uint64_t v2 = off_1001261F8;
  *(void *)(v2 + 1264) = 0x400000004;
  pthread_mutex_init((pthread_mutex_t *)(v2 + 1200), 0);
  *(void *)(v2 + 1192) = 0;
  uint64_t result = *(void *)(v2 + 8);
  if (!result
    || (result & 7) != 0
    || (sub_100062FD8(result, 1u, 0), (uint64_t result = *(void *)(v2 + 8)) == 0)
    || (result & 7) != 0
    || (uint64_t v4 = sub_100062F84(result, 1u, 0), (result = sub_10006D8BC(v4)) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(result, 1, 109, a2);
    return v2;
  }
  return result;
}

uint64_t sub_10009DE74(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10009DDA4(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_10009DE88(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_1001261F8, (uint64_t v2 = sub_10006D8BC(a1)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(v2, 1, 0, *(void *)(a1 + 8));
    *(void *)(a1 + 1192) = 0;
    pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1200));
    sub_10006D970(a1);
  }
}

void sub_10009DF14(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009DE88(a1);
  }
}

uint64_t sub_10009DF28(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_10009DE88(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009DF70(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_40;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_40;
  }
  if (!*(void *)(result + 8)) {
    goto LABEL_10;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_40;
  }
  if (!sub_1000A1834(result, *(void *)(v2 + 8)))
  {
LABEL_10:
    uint64_t v4 = 89;
LABEL_11:
    sub_1000C6E1C(a2);
    return v4;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t result = sub_1000622BC(result);
  if (result) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_40;
  }
  int v5 = *(unsigned __int16 *)(a2 + 126);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 8);
  __int16 v12 = *(_WORD *)(a2 + 126);
  uint64_t v11 = 0;
  uint64_t v14 = 0;
  if (*(void *)(v2 + 1192) != v8) {
    goto LABEL_38;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0)
  {
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }
  uint64_t result = sub_1000602FC(result, *(void *)(v2 + 1192));
  if (!result) {
    goto LABEL_38;
  }
  if (!v6)
  {
    __break(0x5518u);
    goto LABEL_40;
  }
  LOWORD(v14) = v5;
  uint64_t v13 = v8;
  if (v5 != 10)
  {
    if (v5 != 8)
    {
      if (v5 == 4 && v7 == 2)
      {
        if (v6 != -1)
        {
          __int16 v12 = *(unsigned __int8 *)(v6 + 1);
          BYTE5(v14) = *(unsigned char *)v6;
          BYTE4(v14) = v12;
LABEL_34:
          uint64_t v4 = sub_10006FB58(v2, *(_DWORD *)(a2 + 68), &v12, &v11, 0xFFFFu);
          if (v4) {
            goto LABEL_11;
          }
          pthread_mutex_lock((pthread_mutex_t *)(v2 + 1200));
          uint64_t result = *(void *)(v2 + 8);
          if (result && (result & 7) == 0)
          {
            sub_1000634E4(result, 1u, 0, (uint64_t)&v13, 16);
            pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1200));
            uint64_t v4 = 0;
            goto LABEL_11;
          }
          goto LABEL_40;
        }
        goto LABEL_41;
      }
LABEL_38:
      uint64_t v4 = 2;
      goto LABEL_11;
    }
    if (v7 != 4) {
      goto LABEL_38;
    }
    uint64_t result = sub_10006D8BC(result);
    if (result && (result & 7) == 0)
    {
      int v9 = sub_10009FDA4(result, *(void *)(v2 + 1192));
      __int16 v12 = 7;
      unsigned int v10 = bswap32(*(_DWORD *)v6);
      HIDWORD(v14) = v10;
      if ((v9 - 29) <= 1 && (v10 & 0x10) == 0) {
        HIDWORD(v14) = v10 | 0x10;
      }
      goto LABEL_34;
    }
    goto LABEL_40;
  }
  if (v7 != 2) {
    goto LABEL_38;
  }
  __int16 v12 = 9;
  BYTE4(v14) = *(unsigned char *)v6;
  if (v6 != -1)
  {
    BYTE5(v14) = *(unsigned char *)(v6 + 1);
    goto LABEL_34;
  }
LABEL_41:
  __break(0x5513u);
  return result;
}

uint64_t sub_10009E190(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (a3 == 6) {
    return result;
  }
  uint64_t v6 = 4;
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_10001CE30(result);
  uint64_t v5 = result;
  if (a3 > 0xFF)
  {
LABEL_12:
    __break(0x5507u);
    return result;
  }
  BYTE4(v6) = a3;
  BYTE5(v6) = 15;
  pthread_mutex_lock((pthread_mutex_t *)(v3 + 1200));
  uint64_t result = *(void *)(v3 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  sub_1000634E4(result, 1u, 0, (uint64_t)&v5, 16);
  return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 1200));
}

uint64_t sub_10009E24C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_88;
  }
  unsigned int v40 = 0;
  if (a2 <= 7)
  {
    if (a2 == 1)
    {
      if (!*(void *)(a1 + 1192)) {
        return v40;
      }
      LOBYTE(v39[0]) = 4;
      uint64_t v18 = sub_10009E818(*(void *)(a1 + 8));
      int v19 = v18;
      uint64_t v20 = sub_10006D8BC(v18);
      if (v20)
      {
        if ((v20 & 7) == 0)
        {
          uint64_t v21 = sub_10009F8A0(v20, *(void *)(a1 + 1192));
          char v22 = v21;
          uint64_t v23 = sub_10006D8BC(v21);
          if (v23)
          {
            if ((v23 & 7) == 0)
            {
              uint64_t v24 = sub_10009FA3C(v23, *(void *)(a1 + 1192));
              char v25 = v24;
              int v26 = v22 & 0xC;
              switch(a3)
              {
                case 1:
                  LOBYTE(v39[0]) = 2;
                  unsigned int v27 = *(_DWORD *)(a1 + 1264);
                  if (v27 > 7) {
                    goto LABEL_89;
                  }
                  if (v27 == 2) {
                    return 0;
                  }
                  int v28 = 0;
                  *(_DWORD *)(a1 + 1264) = 2;
                  if (v26 == 4) {
                    char v29 = 1;
                  }
                  else {
                    char v29 = v24;
                  }
                  goto LABEL_78;
                case 2:
                  LOBYTE(v39[0]) = 3;
                  unsigned int v32 = *(_DWORD *)(a1 + 1264);
                  if (v32 > 7) {
                    goto LABEL_89;
                  }
                  if (v32 == 3) {
                    return 0;
                  }
                  int v28 = 0;
                  *(_DWORD *)(a1 + 1264) = 3;
                  goto LABEL_75;
                case 3:
                  LOBYTE(v39[0]) = 0;
                  unsigned int v33 = *(_DWORD *)(a1 + 1268);
                  if (v33 > 7) {
                    goto LABEL_89;
                  }
                  if (!v33) {
                    return 0;
                  }
                  *(_DWORD *)(a1 + 1268) = 0;
                  if (v26 == 4) {
                    char v29 = 1;
                  }
                  else {
                    char v29 = v24;
                  }
                  int v28 = 1;
                  goto LABEL_78;
                case 4:
                  LOBYTE(v39[0]) = 1;
                  unsigned int v34 = *(_DWORD *)(a1 + 1268);
                  if (v34 > 7) {
                    goto LABEL_89;
                  }
                  if (v34 == 1) {
                    return 0;
                  }
                  int v28 = 0;
                  *(_DWORD *)(a1 + 1268) = 1;
LABEL_75:
                  if (v26 == 4) {
                    char v29 = 0;
                  }
                  else {
                    char v29 = v24;
                  }
LABEL_78:
                  if (!v19) {
                    return v40;
                  }
                  uint64_t v36 = sub_10006D8BC(v24);
                  if (v36 && (v36 & 7) == 0)
                  {
                    sub_10009F924(v36, *(void *)(a1 + 1192), 1, v25 | v29);
                    if (v28) {
                      usleep(0x3D090u);
                    }
                    uint64_t v37 = *(void *)(a1 + 1192);
                    if (v37 && (v37 & 7) == 0)
                    {
                      (*(void (**)(void, void))(*(void *)v37 + 16))(*(void *)(a1 + 1192), 0);
                      sub_1000C51E0();
                    }
                  }
                  return result;
                default:
                  return v40;
              }
            }
          }
        }
      }
      goto LABEL_88;
    }
    if (a2 != 4) {
      return v40;
    }
    *(void *)(a1 + 1192) = a4;
    if (!a4) {
      sub_1000F2364();
    }
    uint64_t v7 = sub_10006D8BC(a1);
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_88;
    }
    if (sub_10009FE80(v7, *(void *)(a1 + 1192)) == 1)
    {
      v39[4] = 0xAAAAAAAAAAAAAAAALL;
      v39[5] = 0xAAAAAAAAAAAAAAAALL;
      v39[0] = 0x1100000004;
      v39[1] = *(void *)(a1 + 1192);
      v39[2] = 0x300000000;
      uint64_t v8 = *(void *)(a1 + 8);
      v39[3] = v8;
      if (!v8 || (v8 & 7) != 0) {
        goto LABEL_88;
      }
      sub_1000634E4(v8, 0, 0, (uint64_t)v39, 48);
      *(void *)(a1 + 1192) = 0;
    }
    uint64_t v9 = sub_1000E4458();
    if (v9)
    {
      if ((v9 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v9 + 88))(v9, *(void *)(a1 + 1192));
        uint64_t v10 = sub_1000E4458();
        if (v10)
        {
          if ((v10 & 7) == 0)
          {
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)v10 + 144))(v10, *(void *)(a1 + 1192), 2);
            return v40;
          }
        }
      }
    }
    goto LABEL_88;
  }
  if (a2 == 8)
  {
    if (*(void *)(a1 + 1192) != a4) {
      return v40;
    }
    uint64_t v11 = sub_1000E4458();
    if (v11 && (v11 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)v11 + 104))(v11, *(void *)(a1 + 1192));
      *(void *)(a1 + 1192) = 0;
      do
      {
        __int16 v38 = -1;
        v39[0] = 0;
      }
      while (!sub_10006FB58(a1, -1, &v38, v39, 0xFFFFu));
      return 0;
    }
    goto LABEL_88;
  }
  if (a2 == 32)
  {
    sub_10006FF9C(a1, (uint64_t)&v40);
    unsigned int v40 = 0;
    uint64_t v12 = *(void *)(a1 + 8);
    if (v12 && (v12 & 7) == 0)
    {
      if (!sub_100063090(v12, 1u)) {
        return v40;
      }
      unsigned int v13 = sub_10006FADC();
      uint64_t v14 = *(void *)(a1 + 8);
      if (v14)
      {
        if ((v14 & 7) == 0)
        {
          unsigned int v15 = sub_10006303C(v14, 1u);
          if (v13 < v15) {
            goto LABEL_90;
          }
          if (v13 - v15 < 0x1F4) {
            return v40;
          }
          uint64_t v16 = *(void *)(a1 + 8);
          if (v16)
          {
            if ((v16 & 7) == 0)
            {
              sub_100062FD8(v16, 1u, 0);
              uint64_t v17 = *(void *)(a1 + 8);
              if (v17)
              {
                if ((v17 & 7) == 0)
                {
                  sub_100062F84(v17, 1u, 0);
                  return v40;
                }
              }
            }
          }
        }
      }
    }
LABEL_88:
    __break(0x5516u);
LABEL_89:
    __break(0x550Au);
LABEL_90:
    __break(0x5515u);
    JUMPOUT(0x10009E808);
  }
  if (a2 != 64) {
    return v40;
  }
  switch(a3)
  {
    case -1:
      uint64_t v31 = sub_1000E4458();
      if (v31 && (v31 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v31 + 136))(v31, *(void *)(a1 + 1192));
        return v40;
      }
      goto LABEL_88;
    case 6:
      uint64_t v30 = sub_1000E4458();
      if (v30 && (v30 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v30 + 128))(v30, *(void *)(a1 + 1192));
        return v40;
      }
      goto LABEL_88;
    case 4:
      uint64_t v6 = sub_1000E4458();
      if (v6 && (v6 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v6 + 120))(v6, *(void *)(a1 + 1192));
        return v40;
      }
      goto LABEL_88;
  }
  return v40;
}

uint64_t sub_10009E818(uint64_t result)
{
  if (!result) {
    return 0;
  }
  if ((result & 7) == 0)
  {
    uint64_t result = sub_100063520(result);
    if (result)
    {
      uint64_t v1 = result;
      if ((result & 7) == 0)
      {
        sub_100063334(result, 1u);
        uint64_t result = sub_10006DB30(1, v1);
        int v2 = result;
        if (!result) {
          goto LABEL_13;
        }
        if ((result & 7) == 0)
        {
          uint64_t v3 = (uint64_t *)(result + 1192);
          if (((result + 1192) & 7) == 0)
          {
            if (!*v3) {
              goto LABEL_13;
            }
            uint64_t result = sub_10006D8BC(result);
            if (result)
            {
              if ((result & 7) == 0)
              {
                if (sub_1000602FC(result, *v3))
                {
                  uint64_t v4 = 1;
LABEL_14:
                  sub_100063380(v1, 1u);
                  return v4;
                }
LABEL_13:
                sub_1000EE4F4(0, 4, "%s:%d LingoMicrophone:DeviceHandle devValid=%d handle=%hhx pMicLingo=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoMicrophone.cpp", 1084, 0, v1, v2);
                uint64_t v4 = 0;
                goto LABEL_14;
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009E920(uint64_t result, int a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v4 = a3;
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  __int16 v6 = *(_WORD *)(result + 126);
  int v7 = *(_DWORD *)(result + 68);
  uint64_t result = sub_1000C4B20(a3, result, a2, 1u);
  uint64_t v8 = (void *)result;
  if (result) {
    return (uint64_t)v8;
  }
  if (!v4)
  {
    uint64_t result = sub_10006D8BC(result);
    if (!result || (result & 7) != 0) {
      goto LABEL_17;
    }
    uint64_t result = sub_10009EF84(result, 1);
    uint64_t v4 = result;
    if (!result) {
      return 0;
    }
  }
  if ((v4 & 7) == 0)
  {
    sub_100063334(v4, 1u);
    uint64_t result = sub_10006DB30(1, v4);
    if (!result)
    {
      uint64_t v8 = 0;
LABEL_14:
      sub_100063380(v4, 1u);
      return (uint64_t)v8;
    }
    if ((result & 7) == 0)
    {
      uint64_t v8 = sub_10006F9E0((void *)result, v7, v6, 0, a4);
      if (!v8)
      {
        sub_100062FD8(v4, 1u, 1);
        int v9 = sub_10006FADC();
        sub_100062F84(v4, 1u, v9);
      }
      goto LABEL_14;
    }
  }
LABEL_17:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009EA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_10009E818(a2);
  if (!result) {
    return 19;
  }
  if (!v2)
  {
    uint64_t result = sub_10006D8BC(result);
    if (!result || (result & 7) != 0) {
      goto LABEL_18;
    }
    uint64_t result = sub_10009EF84(result, 1);
    uint64_t v2 = result;
    if (!result) {
      return 19;
    }
  }
  if ((v2 & 7) == 0)
  {
    uint64_t result = sub_100063520(v2);
    if (result)
    {
      uint64_t v4 = result;
      if ((result & 7) == 0)
      {
        sub_100063334(result, 1u);
        uint64_t result = sub_10006DB30(1, v4);
        if (result)
        {
          uint64_t v5 = result;
          if ((result & 7) == 0)
          {
            uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 1200));
            __int16 v6 = (uint64_t *)(v5 + 1192);
            if (((v5 + 1192) & 7) == 0)
            {
              uint64_t v7 = *v6;
              if (*v6)
              {
                if ((v7 & 7) == 0)
                {
                  (*(void (**)(uint64_t, void))(*(void *)v7 + 16))(v7, 0);
                  sub_1000C51E0();
                }
              }
            }
          }
          goto LABEL_18;
        }
        sub_1000EE4F4(0, 4, "%s:%d No Object Pointer, cannot GetDevCapabilities\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoMicrophone.cpp", 720);
        sub_100063380(v4, 1u);
        return 19;
      }
    }
  }
LABEL_18:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009EBD4(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t v2 = result;
  uint64_t result = sub_10004CDB4();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 184))(result);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 200))(v3);
  *(unsigned char *)uint64_t v2 = 1;
  if (v2 == -1)
  {
LABEL_13:
    __break(0x5500u);
    return result;
  }
  uint64_t v5 = 0x100000000000000;
  if (v4) {
    uint64_t v5 = 0x900000000000000;
  }
  if (result) {
    v5 |= 0x1000000000000000uLL;
  }
  *(void *)(v2 + 1) = v5;
  return 0;
}

void *sub_10009ECB0(void *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*uint64_t result = off_1001262A8,
        char v2 = (_BYTE)result + 8,
        sub_1000142B4(result + 1),
        *((unsigned char *)v1 + 168) = 0,
        pthread_mutex_init((pthread_mutex_t *)(v1 + 4), 0),
        uint64_t result = (void *)pthread_mutex_init((pthread_mutex_t *)(v1 + 12), 0),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C7D0((uint64_t)(v1 + 1));
    v1[20] = 0;
    return v1;
  }
  return result;
}

uint64_t sub_10009ED3C(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_1001262A8,
        char v2 = result + 8,
        pthread_mutex_destroy((pthread_mutex_t *)(result + 32)),
        uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(v1 + 96)),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C7D0(v1 + 8);
    return v1;
  }
  return result;
}

uint64_t sub_10009EDB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10009ED3C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009EDC4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_10009ED3C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009EE0C(uint64_t result, signed int a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_17:
    __break(0x550Au);
    return result;
  }
  if (a2 >= 15)
  {
    __break(0x5518u);
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
  if (((v2 + 8) & 7) != 0 || ((v2 + 24) & 7) != 0) {
    goto LABEL_16;
  }
  if (*(void *)(v2 + 24))
  {
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v6 = *(void *)(v2 + 16);
      while (v6 != v2 + 8)
      {
        int v4 = sub_10000FDD0(&v6);
        uint64_t v5 = sub_10009EF00(v2, *v4, a2);
        sub_10000FE04(&v6);
        if (v5) {
          goto LABEL_14;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v5 = 0;
LABEL_14:
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
  return v5;
}

uint64_t sub_10009EF00(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_100061FC4(a2);
  if (!a2 || !result) {
    return 0;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  if (a3 + 32 >= 0x40)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  return sub_100062E24(a2, a3);
}

uint64_t sub_10009EF84(uint64_t result, signed int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  if ((a2 + 32) < 0x40)
  {
    if (a2 >= 15)
    {
      __break(0x5518u);
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24)) {
          goto LABEL_19;
        }
        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v9 = *(void *)(v2 + 16);
          if (v9 != v4)
          {
            uint64_t v5 = 0;
            do
            {
              uint64_t v6 = sub_10000FDD0(&v9);
              uint64_t v7 = sub_10009EF00(v2, *v6, a2);
              if (v7) {
                uint64_t v5 = *sub_10000FDD0(&v9);
              }
              sub_10000FE04(&v9);
              if (v7) {
                BOOL v8 = 1;
              }
              else {
                BOOL v8 = v9 == v4;
              }
            }
            while (!v8);
            goto LABEL_20;
          }
LABEL_19:
          uint64_t v5 = 0;
LABEL_20:
          pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
          return v5;
        }
      }
    }
    goto LABEL_22;
  }
LABEL_23:
  __break(0x550Au);
  return result;
}

uint64_t *sub_10009F094(uint64_t *result, int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_37:
    __break(0x5516u);
LABEL_38:
    __break(0x5514u);
    goto LABEL_39;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_39:
    __break(0x550Au);
    return result;
  }
  if (a2 >= 15)
  {
    __break(0x5518u);
    goto LABEL_37;
  }
  uint64_t v3 = sub_10000FC8C();
  pthread_mutex_lock(&stru_10013B980);
  uint64_t v12 = *(void *)(v3 + 8);
  if (v12 != v3)
  {
    while (1)
    {
      uint64_t result = sub_10000FDD0(&v12);
      if (!*result || (*result & 7) != 0) {
        goto LABEL_37;
      }
      if (!*(void *)(*result + 32)) {
        goto LABEL_28;
      }
      uint64_t result = sub_10000FDD0(&v12);
      if (*result) {
        BOOL v5 = (*result & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_37;
      }
      uint64_t v6 = *(void *)(*result + 32);
      BOOL v7 = v6 && (*(void *)(*result + 32) & 7) == 0;
      BOOL v8 = (_DWORD *)(v6 + 8);
      if (!v7 || (v8 & 7) != 0) {
        goto LABEL_37;
      }
      if (a2 >= 0x20) {
        goto LABEL_38;
      }
      if ((*v8 & (1 << a2)) != 0) {
        uint64_t v10 = *sub_10000FDD0(&v12);
      }
      else {
LABEL_28:
      }
        uint64_t v10 = 0;
      sub_10000FE04(&v12);
      if (v12 == v3 || v10 != 0) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v10 = 0;
LABEL_35:
  pthread_mutex_unlock(&stru_10013B980);
  return (uint64_t *)v10;
}

uint64_t sub_10009F1D8(uint64_t result, signed int a2, int a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_17:
    __break(0x550Au);
    return result;
  }
  if (a2 >= 15 || a2 != 7 && a2 != 9 && !a4)
  {
    __break(0x5518u);
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  uint64_t result = sub_100061FC4(a4);
  if (!a4 || !result) {
    return result;
  }
  if ((a4 & 7) != 0) {
    goto LABEL_16;
  }
  return sub_100062C30(a4, a2, a3);
}

uint64_t sub_10009F28C(uint64_t result, signed int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (a2 >= 15)
  {
    __break(0x5518u);
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t result = sub_100061FC4(a3);
  if (!a3 || !result) {
    return 0;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_13;
  }
  return sub_100062D88(a3, a2);
}

uint64_t sub_10009F31C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return 0;
  }
  if ((v3 & 7) == 0)
  {
    uint64_t v4 = (_DWORD *)(v3 + 8);
    if ((v4 & 7) == 0)
    {
      *uint64_t v4 = a3;
      return a3;
    }
  }
LABEL_11:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009F368(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 8);
          if ((v3 & 7) == 0) {
            return *v3;
          }
        }
        goto LABEL_10;
      }
      return 0;
    }
  }
LABEL_10:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009F3B0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return result;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 8), (v3 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }
  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_10009F3F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return 0;
  }
  if ((v3 & 7) == 0)
  {
    uint64_t v4 = (_DWORD *)(v3 + 12);
    if ((v4 & 3) == 0)
    {
      *uint64_t v4 = a3;
      return a3;
    }
  }
LABEL_11:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009F43C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 12);
          if ((v3 & 3) == 0) {
            return *v3;
          }
        }
        goto LABEL_10;
      }
      return 0;
    }
  }
LABEL_10:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009F484(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0 && (((_BYTE)v2 + 8) & 7) == 0)
    {
      *(_DWORD *)(v2 + 8) = 0;
      if ((((_BYTE)v2 + 12) & 3) == 0)
      {
        *(_DWORD *)(v2 + 12) = 0;
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          *(_DWORD *)(v2 + 16) = 0;
          if ((((_BYTE)v2 + 20) & 3) == 0)
          {
            *(_DWORD *)(v2 + 20) = 0;
            if ((((_BYTE)v2 + 28) & 3) == 0)
            {
              *(_DWORD *)(v2 + 28) = -1;
              if ((((_BYTE)v2 + 32) & 7) == 0)
              {
                *(_DWORD *)(v2 + 32) = 0;
                if ((((_BYTE)v2 + 36) & 3) == 0)
                {
                  *(_DWORD *)(v2 + 36) = 0;
                  if ((((_BYTE)v2 + 48) & 7) == 0)
                  {
                    *(unsigned char *)(v2 + 48) = 0;
                    uint64_t v3 = (_DWORD *)(v2 + 24);
                    if ((v3 & 7) == 0)
                    {
                      *uint64_t v3 = -1;
                      goto LABEL_17;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_21:
    __break(0x5516u);
    return result;
  }
LABEL_17:
  return sub_10009F570(result, a2);
}

uint64_t sub_10009F570(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_52;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_52;
  }
  int v19 = -1431655766;
  int v20 = 4;
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0) {
    goto LABEL_52;
  }
  sub_1000D6A40(result, &v19, &v20);
  uint64_t v4 = sub_10000FC8C();
  uint64_t result = pthread_mutex_lock(&stru_10013B980);
  if ((v20 + 8) >= 0x10) {
    goto LABEL_51;
  }
  unsigned int v5 = v20 - 3;
  if ((v20 - 3) < 0xFFFFFFFE)
  {
    uint64_t v18 = *(void *)(v4 + 8);
    if (v18 != v4)
    {
      if (a2 && (a2 & 7) == 0)
      {
        while (1)
        {
          uint64_t v6 = sub_10000FDD0(&v18);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a2 + 104))(a2, *v6))
          {
            uint64_t result = (uint64_t)sub_10000FDD0(&v18);
            if (!*(void *)result || (*(void *)result & 7) != 0) {
              break;
            }
            if (*(void *)(*(void *)result + 32))
            {
              uint64_t result = (uint64_t)sub_10000FDD0(&v18);
              uint64_t v8 = *(void *)result;
              if (!*(void *)result || (v8 & 7) != 0) {
                break;
              }
              uint64_t v9 = *(void *)(v8 + 32);
              BOOL v10 = v9 && (v9 & 7) == 0;
              if (!v10 || (((_BYTE)v9 + 16) & 7) != 0) {
                break;
              }
            }
          }
          sub_10000FE04(&v18);
          if (v18 == v4) {
            goto LABEL_28;
          }
        }
      }
      goto LABEL_52;
    }
LABEL_28:
    uint64_t result = pthread_mutex_unlock(&stru_10013B980);
    int v12 = v19;
    if ((v19 + 8) < 0x10) {
      return sub_10009FF64(a2, v5 < 0xFFFFFFFE, (v12 - 1) < 2);
    }
    goto LABEL_51;
  }
  uint64_t v18 = *(void *)(v4 + 8);
  if (v18 != v4)
  {
    BOOL v14 = (a2 & 7) == 0 && a2 != 0;
    do
    {
      uint64_t result = (uint64_t)sub_10000FDD0(&v18);
      if (!*(void *)result || (*(void *)result & 7) != 0) {
        goto LABEL_52;
      }
      if (*(void *)(*(void *)result + 32))
      {
        if (!v14) {
          goto LABEL_52;
        }
        uint64_t v16 = sub_10000FDD0(&v18);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a2 + 104))(a2, *v16))
        {
          uint64_t v17 = sub_10000FDD0(&v18);
          sub_10009FF24(v2, *v17);
        }
      }
      sub_10000FE04(&v18);
    }
    while (v18 != v4);
  }
  pthread_mutex_unlock(&stru_10013B980);
  uint64_t result = sub_10004E9C8();
  if (result && (result & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 200))(result, a2);
    if (result) {
      return result;
    }
    int v12 = v19;
    if ((v19 + 8) <= 0xF) {
      return sub_10009FF64(a2, v5 < 0xFFFFFFFE, (v12 - 1) < 2);
    }
LABEL_51:
    __break(0x550Au);
  }
LABEL_52:
  __break(0x5516u);
  return result;
}

void sub_10009F814(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  if (a3 >= 0x100)
  {
    __break(0x5518u);
    goto LABEL_13;
  }
  if (!a2) {
    goto LABEL_10;
  }
  if ((a2 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = (unsigned int *)(v3 + 20);
      if ((v4 & 3) == 0)
      {
        *uint64_t v4 = a3;
        return;
      }
    }
    goto LABEL_13;
  }
LABEL_10:
  sub_1000EE4F4(0, 4, "%s:%d NULL devPort.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 675);
}

uint64_t sub_10009F8A0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_9;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned int *)(v2 + 20);
      if ((v3 & 3) == 0) {
        return *v3;
      }
    }
    goto LABEL_11;
  }
LABEL_9:
  sub_1000EE4F4(0, 4, "%s:%d NULL devPort.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 706);
  return 0;
}

void sub_10009F924(uint64_t a1, uint64_t a2, int a3, char a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_26;
  }
  if (!a2) {
    goto LABEL_14;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4)
  {
LABEL_14:
    sub_1000EE4F4(0, 4, "%s:%d NULL devPort.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 753);
    return;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_26;
  }
  unsigned int v5 = (int *)(v4 + 16);
  if (((v4 + 16) & 7) != 0) {
    goto LABEL_26;
  }
  int v6 = *v5;
  *v5 &= ~1u;
  unsigned int v7 = a3 + 32;
  if (a4)
  {
    if (v7 <= 0x3F)
    {
      uint64_t v8 = (int *)(v4 + 32);
      if ((v8 & 7) == 0)
      {
        int v9 = 1 << a3;
        if (a3 < 0) {
          int v9 = 0;
        }
        int v10 = *v8 | v9;
        goto LABEL_21;
      }
      goto LABEL_26;
    }
LABEL_27:
    __break(0x550Au);
    return;
  }
  if (v7 > 0x3F) {
    goto LABEL_27;
  }
  uint64_t v8 = (int *)(v4 + 32);
  if ((v8 & 7) != 0)
  {
LABEL_26:
    __break(0x5516u);
    goto LABEL_27;
  }
  if (a3 >= 0) {
    int v11 = ~(1 << a3);
  }
  else {
    int v11 = -1;
  }
  int v10 = *v8 & v11;
LABEL_21:
  *uint64_t v8 = v10;
  if (v10) {
    *unsigned int v5 = v6 | 1;
  }
  sub_10009F570(a1, a2);
}

uint64_t sub_10009FA3C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned char *)(v2 + 16);
      if ((v3 & 7) == 0) {
        return *v3 & 1;
      }
    }
    goto LABEL_12;
  }
  return 0;
}

uint64_t sub_10009FA9C(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (!*(void *)(a2 + 32)) {
    return result;
  }
  uint64_t result = sub_10009FB84(result, a2);
  if (a3)
  {
    if (result) {
      return result;
    }
    uint64_t v6 = *(void *)(a2 + 32);
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        unsigned int v7 = (_DWORD *)(v6 + 16);
        if ((v7 & 7) == 0)
        {
          *v7 |= 2u;
          int v8 = *(unsigned __int8 *)(v3 + 168);
          if (v8 != 255)
          {
            char v9 = v8 + 1;
            goto LABEL_19;
          }
LABEL_23:
          __break(0x5507u);
          return result;
        }
      }
    }
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  if (!result) {
    return result;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v10) {
    goto LABEL_22;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_22;
  }
  int v11 = (_DWORD *)(v10 + 16);
  if ((v11 & 7) != 0) {
    goto LABEL_22;
  }
  *v11 &= ~2u;
  if (!*(unsigned char *)(v3 + 168)) {
    return result;
  }
  char v9 = *(unsigned char *)(v3 + 168) - 1;
LABEL_19:
  *(unsigned char *)(v3 + 168) = v9;
  return result;
}

uint64_t sub_10009FB84(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned __int8 *)(v2 + 16);
      if ((v3 & 7) == 0) {
        return (*v3 >> 1) & 1;
      }
    }
    goto LABEL_12;
  }
  return 0;
}

uint64_t *sub_10009FBE4(uint64_t *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = sub_10000FC8C();
  pthread_mutex_lock(&stru_10013B980);
  if (*((unsigned char *)v1 + 168))
  {
    uint64_t v10 = *(void *)(v2 + 8);
    if (v10 != v2)
    {
      uint64_t v3 = 0;
      while (1)
      {
        uint64_t result = sub_10000FDD0(&v10);
        if (!*result || (*result & 7) != 0) {
          goto LABEL_31;
        }
        if (*(void *)(*result + 32))
        {
          uint64_t result = sub_10000FDD0(&v10);
          if (*result) {
            BOOL v5 = (*result & 7) == 0;
          }
          else {
            BOOL v5 = 0;
          }
          if (!v5) {
            goto LABEL_31;
          }
          uint64_t v6 = *(void *)(*result + 32);
          BOOL v7 = v6 && (*(void *)(*result + 32) & 7) == 0;
          int v8 = (unsigned char *)(v6 + 16);
          if (!v7 || (v8 & 7) != 0) {
            goto LABEL_31;
          }
          if ((*v8 & 2) != 0) {
            uint64_t v3 = *sub_10000FDD0(&v10);
          }
        }
        sub_10000FE04(&v10);
        if (v10 == v2) {
          goto LABEL_30;
        }
      }
    }
  }
  uint64_t v3 = 0;
LABEL_30:
  pthread_mutex_unlock(&stru_10013B980);
  return (uint64_t *)v3;
}

void sub_10009FCEC(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  if (!a2) {
    goto LABEL_14;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3)
  {
LABEL_14:
    sub_1000EE4F4(0, 4, "%s:%d NULL devPort.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 926);
    return;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_16;
  }
  if ((((_BYTE)v3 + 36) & 3) != 0) {
    goto LABEL_16;
  }
  *(_DWORD *)(v3 + 36) = a3;
  uint64_t v4 = (uint64_t *)(v3 + 40);
  if ((v4 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v5 = *v4;
  if (!*v4) {
    return;
  }
  if ((v5 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return;
  }
  sub_100063690(v5, a3);
}

uint64_t sub_10009FDA4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 36);
          if ((v3 & 3) == 0) {
            return *v3;
          }
        }
        goto LABEL_10;
      }
      return 0;
    }
  }
LABEL_10:
  __break(0x5516u);
  return result;
}

void sub_10009FDEC(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    goto LABEL_10;
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = (_DWORD *)(v3 + 28);
      if (((v3 + 28) & 3) == 0)
      {
        uint64_t v5 = (_DWORD *)(v3 + 24);
        if ((v5 & 7) == 0)
        {
          *uint64_t v5 = *v4;
          *uint64_t v4 = a3;
          return;
        }
      }
    }
    goto LABEL_12;
  }
LABEL_10:
  sub_1000EE4F4(0, 4, "%s:%d NULL devPort.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 984);
}

uint64_t sub_10009FE80(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0xFFFFFFFFLL;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 28);
          if ((v3 & 3) == 0) {
            return *v3;
          }
        }
        goto LABEL_10;
      }
      return 0xFFFFFFFFLL;
    }
  }
LABEL_10:
  __break(0x5516u);
  return result;
}

uint64_t sub_10009FEC8(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned int *)(v2 + 24);
      if ((v3 & 7) == 0) {
        return *v3;
      }
    }
    goto LABEL_12;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_10009FF24(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return result;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 32), (v3 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }
  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_10009FF64(uint64_t result, int a2, char a3)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216))(result) == 3)
  {
    if (a3) {
      return 0;
    }
    if (a2) {
      BOOL v6 = (*(_WORD *)(v3 + 196) & 1) == 0;
    }
    else {
      BOOL v6 = 0;
    }
    sub_1000C7C98(v3, a2);
    return v6;
  }
  if (a2)
  {
    uint64_t result = sub_10004E9C8();
    if (!result || (result & 7) != 0) {
      goto LABEL_27;
    }
    BOOL v6 = (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)result + 152))(result, v3) != 2;
  }
  else
  {
    BOOL v6 = 0;
  }
  uint64_t result = sub_10004E9C8();
  if (result)
  {
    if ((result & 7) == 0)
    {
      int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152))(result, v3);
      uint64_t result = sub_10004E9C8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          if (v7 == 3) {
            unsigned int v8 = 3;
          }
          else {
            unsigned int v8 = 2;
          }
          if (a2) {
            uint64_t v9 = v8;
          }
          else {
            uint64_t v9 = 1;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 144))(result, v3, v9);
          return v6;
        }
      }
    }
  }
LABEL_27:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A00E0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      sub_1000F2364();
    }
    if ((a2 & 7) == 0) {
      operator new();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A0150(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  if (!result) {
    return result;
  }
  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 8);
  return v2();
}

uint64_t sub_1000A01D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    sub_1000F2364();
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (void *)(v3 + 64), (v4 & 7) != 0)) {
LABEL_11:
  }
    __break(0x5516u);
  else {
    *uint64_t v4 = a3;
  }
  return result;
}

void sub_1000A0228(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  if (!a2) {
    goto LABEL_22;
  }
  if ((a2 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    return;
  }
  uint64_t v5 = a2[4];
  if (!v5) {
    goto LABEL_23;
  }
  if (!a3)
  {
LABEL_22:
    __break(0x5518u);
LABEL_23:
    sub_1000F2364();
  }
  if ((v5 & 7) != 0) {
    goto LABEL_25;
  }
  int v7 = (uint64_t *)(v5 + 40);
  if ((v7 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v8 = *v7;
  if (v8)
  {
    if (v8 != a3) {
      sub_1000F2364();
    }
    return;
  }
  if (!sub_100061FC4(a3)) {
    goto LABEL_22;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v9 = sub_10001CE30(a3);
  if (v9) {
    sub_1000A0328(a1, v9, a3);
  }
  uint64_t v10 = a2[4];
  if (!v10) {
    goto LABEL_25;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_25;
  }
  int v11 = (uint64_t *)(v10 + 40);
  if ((v11 & 7) != 0) {
    goto LABEL_25;
  }
  *int v11 = a3;
  sub_1000623A0(a3, a2);
}

void sub_1000A0328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_36;
  }
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_36;
  }
  int v6 = sub_100061FC4(a3);
  if (v6) {
    uint64_t v7 = a3;
  }
  else {
    uint64_t v7 = 0;
  }
  if (!v6) {
    goto LABEL_14;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_36;
  }
  char v8 = v6;
  uint64_t v9 = sub_10001CE30(a3);
  if (!v9)
  {
LABEL_14:
    sub_1000EE4F4(0, 4, "%s:%d Handle not associated with a portObj! handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1352, v7);
    if (!a2) {
      return;
    }
    int v10 = 0;
    int v11 = "Unknown";
LABEL_16:
    if ((a2 & 7) == 0)
    {
      int v12 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 208))(a2);
      goto LABEL_18;
    }
LABEL_36:
    __break(0x5516u);
    return;
  }
  int v10 = v9;
  if (v9 != a2)
  {
    if ((v9 & 7) != 0) {
      goto LABEL_36;
    }
    int v11 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 208))(v9);
    if (!a2)
    {
      int v12 = "Unknown";
LABEL_18:
      sub_1000EE4F4(0, 4, "%s:%d Port do not match! handle=%hhx port:%hhx(%s) != %hhx(%s)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1358, v7, v10, v11, a2, v12);
      return;
    }
    goto LABEL_16;
  }
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_36;
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (v13)
    {
      if ((v13 & 7) != 0) {
        goto LABEL_36;
      }
      BOOL v14 = (void *)(v13 + 40);
      if ((v14 & 7) != 0) {
        goto LABEL_36;
      }
      *BOOL v14 = 0;
      char v15 = v8 ^ 1;
      if ((v7 & 7) != 0) {
        char v15 = 1;
      }
      if (v15) {
        goto LABEL_36;
      }
      sub_100062504(v7);
      if ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 280))(a2))
      {
        if (!v16 || (v16 & 7) != 0) {
          goto LABEL_36;
        }
        (*(void (**)(void *, void))(*(void *)v16 + 392))(v16, 0);
      }
      sub_10009F484(a1, a2);
    }
  }
}

uint64_t sub_1000A05B8(uint64_t result, signed int a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!a4) {
    goto LABEL_17;
  }
  uint64_t result = sub_100061FC4(a4);
  if ((a2 + 32) > 0x3F)
  {
LABEL_20:
    __break(0x550Au);
    return result;
  }
  char v7 = result ^ 1;
  if (a2 > 14) {
    char v7 = 1;
  }
  if (v7)
  {
LABEL_17:
    __break(0x5518u);
    goto LABEL_18;
  }
  if ((a4 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }
  if (sub_100062E24(a4, a2) && sub_100062E24(a4, a2) != a3) {
    sub_100061E4C(a4, a2);
  }
  if (sub_100062E24(a4, a2) && sub_100062E24(a4, a2) != a3) {
LABEL_18:
  }
    sub_1000F2364();
  return sub_100062AAC(a4, a2, a3);
}

uint64_t sub_1000A06A4(uint64_t result, signed int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }
  if (a2 >= 15 || (uint64_t result = sub_100061FC4(a3), !a3) || !result)
  {
    __break(0x5518u);
    goto LABEL_14;
  }
  if ((a3 & 7) != 0)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  uint64_t result = sub_100062E24(a3, a2);
  if (result)
  {
    sub_100061E4C(a3, a2);
    return sub_100062A04(a3, a2, 0);
  }
  return result;
}

void sub_1000A0750(uint64_t a1, uint64_t a2, char a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a3)
  {
    sub_1000A07F4(a1, a2);
  }
  else
  {
    v5[6] = v3;
    v5[7] = v4;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 0x40000000;
    v5[2] = sub_1000A07E8;
    v5[3] = &unk_1001262D0;
    v5[4] = a1;
    v5[5] = a2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

void sub_1000A07E8(uint64_t a1)
{
}

void sub_1000A07F4(uint64_t a1, uint64_t a2)
{
  if (a1 && (a1 & 7) == 0)
  {
    int v4 = sub_100061FC4(a2);
    if (!a2 || !v4)
    {
      sub_1000EE4F4(0, 4, "%s:%d No Handle! Cannot delete registered Objects!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1552);
      return;
    }
    uint64_t v5 = sub_1000D289C();
    if (v5)
    {
      if ((v5 & 7) == 0)
      {
        sub_1000D8C0C(v5);
        if ((a2 & 7) == 0)
        {
          if (sub_1000633E4(a2))
          {
            uint64_t v6 = sub_1000633E4(a2);
            if (!v6 || (v6 & 7) != 0) {
              goto LABEL_26;
            }
            sub_10006B080(v6);
          }
          if (!sub_100063434(a2)) {
            goto LABEL_16;
          }
          uint64_t v7 = sub_100063434(a2);
          if (v7 && (v7 & 7) == 0)
          {
            sub_1000C4CF0(v7);
LABEL_16:
            for (signed int i = 0; i != 15; ++i)
              sub_1000A06A4(a1, i, a2);
            uint64_t v9 = sub_10001CE30(a2);
            if (v9) {
              sub_1000A0328(a1, v9, a2);
            }
            sub_1000626A8(a2);
            uint64_t v10 = sub_1000629EC(a2);
            if (!v10)
            {
LABEL_24:
              sub_1000A0B5C(a1, a2);
              sub_1000A0C04(a1, a2);
              sub_100061FB0(a2);
              operator delete();
            }
            uint64_t v11 = v10;
            if ((v10 & 7) == 0)
            {
              if (sub_1000629EC(v10) == a2)
              {
                sub_1000629D4(v11, 0);
                sub_1000629D4(a2, 0);
              }
              goto LABEL_24;
            }
          }
        }
      }
    }
  }
LABEL_26:
  __break(0x5516u);
  __break(0x550Au);
}

void sub_1000A0B5C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  int v3 = sub_100061FC4(a2);
  if (!a2 || !v3)
  {
    sub_1000EE4F4(0, 4, "%s:%d No Handle, cannot delete IncomingProcess\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1718);
    return;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v4 = sub_1000633FC(a2);
  if (!v4) {
    return;
  }
  if ((v4 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }
  sub_10006B2F4(v4);
}

void sub_1000A0C04(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  int v3 = sub_100061FC4(a2);
  if (!a2 || !v3)
  {
    sub_1000EE4F4(0, 4, "%s:%d No Handle, cannot delete OugoingProcess\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1757);
    return;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v4 = sub_10006344C(a2);
  if (!v4) {
    return;
  }
  if ((v4 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }
  sub_1000C4D24(v4);
}

void sub_1000A0CAC(uint64_t a1)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      uint64_t v3 = 0;
      pthread_mutex_lock((pthread_mutex_t *)(a1 + 32));
      if ((((_BYTE)a1 + 8) & 7) == 0 && ((a1 + 24) & 7) == 0)
      {
        if (!*(void *)(a1 + 24))
        {
LABEL_8:
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 32));
          return;
        }
        while ((((int)a1 + 16) & 7) == 0)
        {
          uint64_t v3 = *(void *)(a1 + 16);
          uint64_t v2 = sub_10000FDD0(&v3);
          sub_1000A0D54(a1, *v2);
          if (!*(void *)(a1 + 24)) {
            goto LABEL_8;
          }
        }
      }
    }
  }
  __break(0x5516u);
}

void sub_1000A0D54(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_29;
  }
  if (!a2) {
    return;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 32));
  if (((a1 + 8) & 7) != 0 || ((a1 + 24) & 7) != 0) {
    goto LABEL_29;
  }
  if (*(void *)(a1 + 24))
  {
    if (((a1 + 16) & 7) != 0) {
      goto LABEL_29;
    }
    uint64_t v4 = *(uint64_t **)(a1 + 16);
    uint64_t v9 = v4;
    while (v4 != (uint64_t *)(a1 + 8))
    {
      if (*sub_10000FDD0((uint64_t *)&v9) == a2)
      {
        if (*(void *)(a1 + 160) == a2) {
          *(void *)(a1 + 160) = 0;
        }
        if ((a2 & 7) == 0)
        {
          sub_100062344(a2);
          sub_100025DC8(a1 + 8, v9);
          break;
        }
        goto LABEL_29;
      }
      sub_10000FE04(&v9);
      uint64_t v4 = v9;
    }
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 32));
  if ((a2 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v5 = sub_1000633E4(a2);
  uint64_t v6 = sub_100063434(a2);
  if (v6)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_29;
    }
    sub_1000C4CF0(v6);
  }
  if (v5)
  {
    if ((v5 & 7) == 0)
    {
      sub_10006B080(v5);
      sub_10006B3F0(v5);
      return;
    }
    goto LABEL_29;
  }
  uint64_t v7 = sub_10001CE30(a2);
  if (!v7)
  {
    char v8 = 0;
    goto LABEL_27;
  }
  if ((v7 & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    return;
  }
  char v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 280))(v7);
LABEL_27:
  sub_1000A0750(a1, a2, v8);
}

void sub_1000A0EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  int v5 = sub_100061FC4(a2);
  if (!a2 || !v5)
  {
    sub_1000EE4F4(0, 4, "%s:%d No Handle, cannot register IncomingProcess, obj=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1616, a3);
    return;
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    if (sub_1000633E4(a2)) {
      sub_1000F2634();
    }
    sub_1000633CC(a2, a3);
  }
}

void sub_1000A0F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  int v5 = sub_100061FC4(a2);
  if (!a2 || !v5)
  {
    sub_1000EE4F4(0, 4, "%s:%d No Handle, cannot register OugoingProcess, obj=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 1680, a3);
    return;
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    if (sub_100063434(a2)) {
      sub_1000F2634();
    }
    sub_10006341C(a2, a3);
  }
}

uint64_t sub_1000A104C(uint64_t result, uint64_t a2, int a3, int a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_18;
  }
  if ((a3 + 32) >= 0x40)
  {
LABEL_18:
    __break(0x550Au);
    return result;
  }
  if (a3) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = a4 == 56;
  }
  char v5 = v4;
  if (v4 || !a3 && (a4 == 19 || a4 == 1)) {
    return sub_1000A10A4(result, a2, v5);
  }
  return result;
}

uint64_t sub_1000A10A4(uint64_t result, uint64_t a2, char a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return result;
  }
  if ((v3 & 7) != 0 || (BOOL v4 = (unsigned char *)(v3 + 48), (v4 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }
  *BOOL v4 = a3;
  return result;
}

BOOL sub_1000A10E4(BOOL result, uint64_t a2)
{
  if (!result || result & 7) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return 0;
  }
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = (unsigned __int8 *)(v2 + 48);
    if ((v3 & 7) == 0)
    {
      unsigned int v4 = *v3;
      if (v4 < 2) {
        return v4 != 0;
      }
      goto LABEL_12;
    }
  }
LABEL_11:
  __break(0x5516u);
LABEL_12:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000A1140(uint64_t a1, uint64_t a2)
{
  if (a1 && (a1 & 7) == 0)
  {
    uint64_t v2 = a2;
    int v3 = sub_100061FC4(a2);
    uint64_t result = 0;
    if (!v2 || !v3) {
      return result;
    }
    if ((v2 & 7) == 0)
    {
      uint64_t result = sub_10001CE30(v2);
      if (result) {
        return result;
      }
      if (!sub_1000634B8(v2)) {
        goto LABEL_12;
      }
      uint64_t result = sub_100062690(v2);
      if (!result) {
        goto LABEL_12;
      }
      if ((result & 7) == 0) {
        return result;
      }
    }
  }
  __break(0x5516u);
LABEL_12:
  return sub_1000622A4(v2);
}

uint64_t sub_1000A11DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t result = sub_100061FC4(a2);
  if (!result) {
    return result;
  }
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }
  return sub_1000629D4(a2, a3);
}

uint64_t sub_1000A124C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_100061FC4(a2);
  if (!result) {
    return 0;
  }
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    if (!sub_1000629EC(a2)) {
      sub_1000EE4F4(0, 4, "%s:%d No ctaHandle handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2065, a2);
    }
    return sub_1000629EC(a2);
  }
  return result;
}

uint64_t sub_1000A12F4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = 0;
    pthread_mutex_lock((pthread_mutex_t *)(result + 32));
    operator new();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A139C(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (uint64_t v2 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        (((_BYTE)v1 + 8) & 7) != 0)
    || ((v1 + 24) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = *(unsigned int *)(v1 + 24);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

void sub_1000A1400(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  if (!a2) {
    return;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v4 = sub_10001CE30(a2);
  if (!v4)
  {
    char v5 = 0;
    goto LABEL_10;
  }
  if ((v4 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }
  char v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 280))(v4);
LABEL_10:
  sub_1000A0750(a1, a2, v5);
}

uint64_t sub_1000A14B0(uint64_t result, void (*a2)(uint64_t, uint64_t), uint64_t a3, _DWORD *a4)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (a2)
  {
    uint64_t v10 = 0;
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
    if (a4)
    {
      if ((((_BYTE)v4 + 8) & 7) != 0 || ((v4 + 24) & 7) != 0 || (a4 & 3) != 0) {
        goto LABEL_20;
      }
      *a4 = *(void *)(v4 + 24);
    }
    if (((v4 + 8) & 7) == 0 && ((v4 + 24) & 7) == 0)
    {
      if (!*(void *)(v4 + 24)) {
        return pthread_mutex_unlock((pthread_mutex_t *)(v4 + 32));
      }
      if (((v4 + 16) & 7) == 0)
      {
        uint64_t v8 = *(void *)(v4 + 16);
        uint64_t v10 = v8;
        while (v8 != v4 + 8)
        {
          uint64_t v9 = *sub_10000FDD0(&v10);
          if (v9) {
            a2(v9, a3);
          }
          sub_10000FE04(&v10);
          uint64_t v8 = v10;
        }
        return pthread_mutex_unlock((pthread_mutex_t *)(v4 + 32));
      }
    }
  }
  else
  {
    __break(0x5518u);
  }
LABEL_20:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A15B4(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_9;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return result;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = v3 + 40;
      if ((v4 & 7) == 0) {
        return *(void *)v4;
      }
    }
    goto LABEL_11;
  }
LABEL_9:
  sub_1000EE4F4(0, 4, "%s:%d devPort=NULL, index=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2296, a3);
  return 0;
}

uint64_t sub_1000A163C(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = (pthread_mutex_t *)(result + 32);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v5 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24))
        {
LABEL_19:
          uint64_t v7 = 0;
LABEL_20:
          pthread_mutex_unlock(v4);
          return v7;
        }
        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v6 = *(void *)(v2 + 16);
          uint64_t v9 = v6;
          while (v6 != v5)
          {
            uint64_t result = (uint64_t)sub_10000FDD0(&v9);
            uint64_t v7 = *(void *)result;
            if (*(void *)result) {
              BOOL v8 = (*(void *)result & 7) == 0;
            }
            else {
              BOOL v8 = 0;
            }
            if (!v8) {
              goto LABEL_21;
            }
            uint64_t result = sub_10001CE30(*(void *)result);
            if (result)
            {
              if ((result & 7) != 0) {
                goto LABEL_21;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
              if (a2 >= 8) {
                goto LABEL_22;
              }
              if (result == a2) {
                goto LABEL_20;
              }
            }
            sub_10000FE04(&v9);
            uint64_t v6 = v9;
          }
          goto LABEL_19;
        }
      }
    }
  }
LABEL_21:
  __break(0x5516u);
LABEL_22:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000A1750(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v4 = (pthread_mutex_t *)(result + 32);
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
  uint64_t v5 = v2 + 8;
  if (((v2 + 8) & 7) != 0 || ((v2 + 24) & 7) != 0) {
    goto LABEL_19;
  }
  if (*(void *)(v2 + 24))
  {
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v6 = *(void *)(v2 + 16);
      uint64_t v9 = v6;
      while (v6 != v5)
      {
        uint64_t v7 = *sub_10000FDD0(&v9);
        uint64_t result = sub_100061FC4(v7);
        if (result)
        {
          if (v7) {
            BOOL v8 = (v7 & 7) == 0;
          }
          else {
            BOOL v8 = 0;
          }
          if (!v8) {
            goto LABEL_19;
          }
          if (sub_1000632D4(v7) == a2) {
            goto LABEL_18;
          }
        }
        sub_10000FE04(&v9);
        uint64_t v6 = v9;
      }
      goto LABEL_17;
    }
LABEL_19:
    __break(0x5516u);
    return result;
  }
LABEL_17:
  uint64_t v7 = 0;
LABEL_18:
  pthread_mutex_unlock(v4);
  return v7;
}

uint64_t sub_1000A1834(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      if (!a2) {
        return 0;
      }
      uint64_t v4 = (pthread_mutex_t *)(result + 32);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v5 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24)) {
          goto LABEL_12;
        }
        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v8 = *(void *)(v2 + 16);
          if (v8 != v5)
          {
            do
            {
              uint64_t v6 = sub_10000FDD0(&v8);
              BOOL v7 = *v6 == a2;
              if (*v6 == a2) {
                break;
              }
              sub_10000FE04(&v8);
            }
            while (v8 != v5);
            goto LABEL_13;
          }
LABEL_12:
          BOOL v7 = 0;
LABEL_13:
          pthread_mutex_unlock(v4);
          return v7;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A190C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x550Au);
  }
  else
  {
    uint64_t v3 = sub_10000FC8C();
    pthread_mutex_lock(&stru_10013B980);
    uint64_t v4 = *(void *)(v3 + 8);
    for (i = v4; ; uint64_t v4 = i)
    {
      if (v4 == v3)
      {
        pthread_mutex_unlock(&stru_10013B980);
        return 0;
      }
      uint64_t result = (uint64_t)sub_10000FDD0(&i);
      if (*(void *)result) {
        BOOL v5 = (*(void *)result & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_22;
      }
      if (*(void *)(*(void *)result + 32))
      {
        uint64_t result = *sub_10000FDD0(&i);
        if (result) {
          BOOL v6 = (result & 7) == 0;
        }
        else {
          BOOL v6 = 0;
        }
        if (!v6) {
          goto LABEL_22;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
        if (a2 >= 8) {
          goto LABEL_23;
        }
        if (result == a2) {
          break;
        }
      }
      sub_10000FE04(&i);
    }
    pthread_mutex_unlock(&stru_10013B980);
    return *sub_10000FDD0(&i);
  }
  return result;
}

uint64_t sub_1000A1A1C(uint64_t result, uint64_t a2, void *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_100062174(a2);
  if (!result) {
    return result;
  }
  if (!a3) {
    return 1;
  }
  uint64_t v5 = sub_1000622A4(a2);
  uint64_t result = sub_100062690(a2);
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (!v5) {
    return 1;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_19;
  }
  BOOL v6 = (void *)result;
  uint64_t result = 1;
  if (v6 == a3) {
    return result;
  }
  uint64_t v7 = a3[5];
  if (v5 == v7) {
    return result;
  }
  if ((v5 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    return result;
  }
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 216))(v5);
  int v9 = (*(uint64_t (**)(void *))(*a3 + 216))(a3);
  uint64_t result = (v8 == 1) == (v9 != 1);
  if (v8 == 1 && v9 != 1)
  {
    sub_1000621A0(a2, v7);
    return 1;
  }
  return result;
}

uint64_t *sub_1000A1B54(uint64_t *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v2 = (uint64_t)result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_30;
    }
    if (!sub_100013BA0(a2)) {
      return 0;
    }
  }
  uint64_t v9 = 0;
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v2 + 32));
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
  {
    if (!*(void *)(v2 + 24))
    {
LABEL_26:
      uint64_t v5 = 0;
LABEL_27:
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
      return (uint64_t *)v5;
    }
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v9 = *(void *)(v2 + 16);
      if (v9 != v4)
      {
        while (1)
        {
          uint64_t result = sub_10000FDD0(&v9);
          uint64_t v5 = *result;
          if (!*result || (*result & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v7 = sub_10001CE30(*result);
          if (sub_100062174(v5) && v7 == 0)
          {
            if (!sub_1000A1A1C(v2, v5, (void *)a2)) {
              uint64_t v5 = 0;
            }
          }
          else
          {
            uint64_t v5 = 0;
          }
          sub_10000FE04(&v9);
          if (v5 || v9 == v4) {
            goto LABEL_27;
          }
        }
      }
      goto LABEL_26;
    }
  }
LABEL_30:
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000A1C94(uint64_t *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v2 = (uint64_t)result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_30;
    }
    if (!sub_100013BA0(a2)) {
      return 0;
    }
  }
  uint64_t v8 = 0;
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v2 + 32));
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
  {
    if (!*(void *)(v2 + 24))
    {
LABEL_26:
      uint64_t v5 = 0;
LABEL_27:
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
      return (uint64_t *)v5;
    }
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v8 = *(void *)(v2 + 16);
      if (v8 != v4)
      {
        while (1)
        {
          uint64_t result = sub_10000FDD0(&v8);
          uint64_t v5 = *result;
          if (!*result || (*result & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v7 = sub_10001CE30(*result);
          uint64_t result = (uint64_t *)sub_100062174(v5);
          if (!result) {
            goto LABEL_20;
          }
          if (!v7) {
            goto LABEL_33;
          }
          if ((v7 & 7) != 0) {
            goto LABEL_30;
          }
          if (sub_1000E6DB4(v7))
          {
LABEL_20:
            uint64_t v5 = 0;
          }
          else
          {
LABEL_33:
            if (!sub_1000A1A1C(v2, v5, (void *)a2)) {
              uint64_t v5 = 0;
            }
          }
          sub_10000FE04(&v8);
          if (v5 || v8 == v4) {
            goto LABEL_27;
          }
        }
      }
      goto LABEL_26;
    }
  }
LABEL_30:
  __break(0x5516u);
  return result;
}

void sub_1000A1DE4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_24;
  }
  int v4 = sub_100061FC4(a2);
  if (!a2 || !v4)
  {
    sub_1000EE4F4(0, 4, "%s:%d Failed to get pIncomingProcess object! handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2833, 0);
    sub_1000EE4F4(0, 4, "%s:%d Failed to get pPort object! handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2850, 0);
    return;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 96));
  if ((a2 & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v5 = sub_1000633E4(a2);
  if (!v5)
  {
    sub_1000D289C();
    sub_100068A70();
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 96));
  uint64_t v6 = sub_10001CE30(a2);
  if (v6 || (uint64_t v6 = sub_1000622A4(a2)) != 0)
  {
    if (!sub_1000E6CE4(v6)) {
      return;
    }
    if ((v6 & 7) != 0)
    {
LABEL_24:
      __break(0x5516u);
      return;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 240))(v6)
      && ((*(uint64_t (**)(uint64_t))(*(void *)v6 + 280))(v6) & 1) == 0
      && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 216))(v6) != 1)
    {
      uint64_t v7 = sub_10004E9C8();
      if (!v7 || (v7 & 7) != 0) {
        goto LABEL_24;
      }
      if ((*(int (**)(uint64_t, uint64_t))(*(void *)v7 + 152))(v7, v6) < 2) {
        return;
      }
    }
  }
  else
  {
    sub_1000EE4F4(0, 4, "%s:%d Failed to get pPort object! handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2850, a2);
  }
  if ((v5 & 7) != 0) {
    goto LABEL_24;
  }
  sub_10006B004(v5);
}

uint64_t sub_1000A2020(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      int v4 = sub_100061FC4(a2);
      if (!a2 || !v4)
      {
        sub_1000EE4F4(0, 4, "%s:%d Failed to get pOutgoingProcess object! handle=%hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 2920, 0);
        return 0;
      }
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(v2 + 96));
      if ((a2 & 7) == 0)
      {
        uint64_t v5 = sub_100063434(a2);
        if (!v5) {
          sub_1000C39C4();
        }
        pthread_mutex_unlock((pthread_mutex_t *)(v2 + 96));
        return v5;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A20FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    return result;
  }
  sub_10006215C(a2, a3);
  return sub_1000621A0(a2, a4);
}

uint64_t sub_1000A216C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (a2)
  {
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
    if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
    {
      if (!*(void *)(v2 + 24))
      {
LABEL_12:
        pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
        goto LABEL_13;
      }
      if (((v2 + 16) & 7) == 0)
      {
        uint64_t v4 = *(void *)(v2 + 16);
        uint64_t v5 = v4;
        while (v4 != v2 + 8)
        {
          if (*sub_10000FDD0(&v5) == a2)
          {
            pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
            return sub_100061FC4(a2);
          }
          sub_10000FE04(&v5);
          uint64_t v4 = v5;
        }
        goto LABEL_12;
      }
    }
LABEL_16:
    __break(0x5516u);
    return result;
  }
LABEL_13:
  sub_1000EE4F4(0, 4, "%s:%d Invalid handle(%hhx)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp", 3006, a2);
  return 0;
}

dispatch_source_t sub_1000A2268(dispatch_source_t result)
{
  if (result)
  {
    dispatch_source_t v1 = result;
    if ((result & 7) == 0)
    {
      result->isa = (Class)&off_100126310;
      *(_OWORD *)&result[1].isa = 0u;
      *(_OWORD *)&result[3].isa = 0u;
      *(_OWORD *)((char *)&result[4].isa + 1) = 0u;
      result[8].isa = 0;
      LODWORD(result[10].isa) = 0;
      *(Class *)((char *)&result[6].isa + 4) = (Class)0xFFFFFFFFLL;
      global_queue = dispatch_get_global_queue(2, 0);
      uint64_t result = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, global_queue);
      v1[9].isa = (Class)result;
      if (result)
      {
        dispatch_source_set_event_handler(result, &stru_100126340);
        uint64_t result = (dispatch_source_t)v1[9].isa;
        if (result)
        {
          dispatch_source_set_timer(result, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
          uint64_t result = (dispatch_source_t)v1[9].isa;
          if (result)
          {
            dispatch_resume(result);
            return v1;
          }
        }
      }
      __break(0x5510u);
    }
  }
  __break(0x5516u);
  return result;
}

NSObject *sub_1000A233C(NSObject *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000A2398(result);
  }
  __break(0x5516u);
  return result;
}

NSObject *sub_1000A2350(NSObject *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000A2398(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

NSObject *sub_1000A2398(NSObject *result)
{
  if (!result || (dispatch_source_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result->isa = (Class)&off_100126310;
    uint64_t result = result[9].isa;
    if (result)
    {
      dispatch_release(result);
      return v1;
    }
  }
  __break(0x5510u);
  return result;
}

uint64_t sub_1000A23F8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_6;
  }
  sub_10006D698(result, a2, 13);
  *(void *)uint64_t v2 = off_100126380;
  *(_OWORD *)(v2 + 1202) = 0u;
  *(_OWORD *)(v2 + 1218) = 0u;
  *(_DWORD *)(v2 + 1234) = 0;
  *(_WORD *)(v2 + 1200) = 0;
  *(void *)(v2 + 1192) = 0;
  *(void *)(v2 + 1240) = 0;
  *(unsigned char *)(v2 + 1248) = 0;
  uint64_t v5 = sub_1000A249C(v4);
  uint64_t result = sub_10006D8BC(v5);
  if (!result || (result & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(result, 13, 44, a2);
    return v2;
  }
  return result;
}

uint64_t sub_1000A249C(uint64_t result)
{
  if (!result) {
    goto LABEL_13;
  }
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if ((result + 1202)) {
    goto LABEL_13;
  }
  *(_DWORD *)(result + 1202) = 5;
  if (((result + 1206) & 1) != 0
    || (*(_DWORD *)(result + 1206) = 107, ((result + 1210) & 1) != 0)
    || (*(_DWORD *)(result + 1210) = 80, ((result + 1214) & 1) != 0)
    || (*(_DWORD *)(result + 1214) = 640, ((result + 1218) & 1) != 0)
    || (*(_DWORD *)(result + 1218) = 480, ((result + 1222) & 1) != 0)
    || (*(_DWORD *)(result + 1222) = 0, ((result + 1226) & 1) != 0)
    || (*(_DWORD *)(result + 1226) = 0, ((result + 1230) & 1) != 0)
    || (*(_DWORD *)(result + 1230) = 0, ((result + 1234) & 1) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 1234) = 0;
  }
  return result;
}

uint64_t sub_1000A2530(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000A23F8(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000A2544(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100126380, (uint64_t v2 = sub_10006D8BC(a1)) == 0)
    || (v2 & 7) != 0
    || (sub_10009F1D8(v2, 13, 0, *(void *)(a1 + 8)), sub_1000A2610(a1), (uint64_t v3 = sub_1000E5F70()) == 0)
    || (v3 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    dword_10013C98C = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 144))(v3);
    *(void *)(a1 + 1240) = 0;
    *(unsigned char *)(a1 + 1248) = 0;
    sub_10006D970(a1);
  }
}

uint64_t sub_1000A2610(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  long long v4 = 0uLL;
  *(void *)((char *)&v4 + 4) = *(void *)(result + 8);
  uint64_t result = sub_1000E5F70();
  unsigned int v2 = *(_DWORD *)(v1 + 1192);
  if (v2 < 4)
  {
    if (!v2) {
      return 0;
    }
    uint64_t v3 = result;
    *(void *)(v1 + 1192) = 0;
    *(_WORD *)(v1 + 1200) = 0;
    if (result && (result & 7) == 0)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)result + 128))(result))
      {
        LODWORD(v4) = 3;
        HIDWORD(v4) = 0;
        sub_100067D3C(0xDu, 0, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      }
      LODWORD(v4) = 1;
      sub_100067D3C(0xDu, 0, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      if ((*(unsigned int (**)(uint64_t))(*(void *)v3 + 120))(v3) != 1000)
      {
        LODWORD(v4) = 2;
        WORD6(v4) = 1000;
        sub_100067D3C(0xDu, 0, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      }
      return 0;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(0x550Au);
  return result;
}

void sub_1000A2754(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A2544(a1);
  }
}

uint64_t sub_1000A2768(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000A2544(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A27B0(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 1192);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

void sub_1000A27D4(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v6 = sub_10006346C(v3);
  if (a2 >= 4) {
    goto LABEL_35;
  }
  uint64_t v7 = v6;
  if (a2 == 1)
  {
    if (*(unsigned __int8 *)(a1 + 1248) > 1u) {
      goto LABEL_35;
    }
    if (!*(unsigned char *)(a1 + 1248)) {
      sub_1000A249C(a1);
    }
  }
  else if (a2 == 2 && sub_1000A2984(a1))
  {
    if (*(unsigned __int8 *)(a1 + 1248) > 1u) {
      goto LABEL_35;
    }
    if (!*(unsigned char *)(a1 + 1248))
    {
      if ((a1 + 1230)) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1230) = 32;
      if ((a1 + 1234)) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1234) = 32;
      if ((a1 + 1222)) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1222) = 24;
      if ((a1 + 1226)) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1226) = 24;
      syslog(4, "%s:%d Sending Actionsafe parameters!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp", 260);
    }
  }
  if (((_BYTE)a1 - 66)) {
    goto LABEL_34;
  }
  if (*(_DWORD *)(a1 + 1214) != 640) {
    goto LABEL_33;
  }
  if ((a1 + 1218)) {
    goto LABEL_34;
  }
  if (!v7 || *(_DWORD *)(a1 + 1218) != 480) {
    goto LABEL_33;
  }
  if ((v7 & 7) != 0)
  {
LABEL_34:
    __break(0x5516u);
    goto LABEL_35;
  }
  unsigned int v8 = sub_1000862B0(v7);
  unsigned int v9 = sub_100086270(v7);
  if (v9 > 1) {
    goto LABEL_35;
  }
  if (!v9)
  {
LABEL_33:
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v10 = v12;
    *(_DWORD *)(a1 + 1192) = a2;
    int v11 = 0;
    unsigned int v13 = a2;
    sub_100067D3C(0xDu, 0, (uint64_t)&v11, 16, v10);
    return;
  }
  if (v8 <= 7)
  {
    if (v8 - 1 <= 2) {
      sub_100087818(v7, 0, 1);
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(0x550Au);
}

BOOL sub_1000A2984(BOOL result)
{
  if (!result || (result & 7) != 0 || ((result + 1202) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1202) != 5) {
    return 0;
  }
  if ((result + 1206)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1206) != 107) {
    return 0;
  }
  if ((result + 1210)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1210) != 80) {
    return 0;
  }
  if ((result + 1214)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1214) != 640) {
    return 0;
  }
  if ((result + 1218)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1218) != 480) {
    return 0;
  }
  if ((result + 1222)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1222)) {
    return 0;
  }
  if ((result + 1226)) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1226)) {
    return 0;
  }
  if (((result + 1230) & 1) == 0)
  {
    if (*(_DWORD *)(result + 1230)) {
      return 0;
    }
    if (((result + 1234) & 1) == 0) {
      return *(_DWORD *)(result + 1234) == 0;
    }
  }
LABEL_22:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A2A48(uint64_t result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2)
    {
      uint64_t v2 = 4;
      sub_1000EE4F4(0, 4, "%s:%d NULL videoScreenInfo\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp", 401);
      return v2;
    }
    if (((result + 1202) & 1) == 0)
    {
      *(_DWORD *)(result + 1202) = *a2;
      if (((result + 1206) & 1) == 0)
      {
        *(_DWORD *)(result + 1206) = a2[1];
        if (((result + 1210) & 1) == 0)
        {
          *(_DWORD *)(result + 1210) = a2[2];
          if (((result + 1214) & 1) == 0)
          {
            *(_DWORD *)(result + 1214) = a2[3];
            if (((result + 1218) & 1) == 0)
            {
              *(_DWORD *)(result + 1218) = a2[4];
              if (((result + 1222) & 1) == 0)
              {
                *(_DWORD *)(result + 1222) = a2[5];
                if (((result + 1226) & 1) == 0)
                {
                  *(_DWORD *)(result + 1226) = a2[6];
                  if (((result + 1230) & 1) == 0)
                  {
                    *(_DWORD *)(result + 1230) = a2[7];
                    if (((result + 1234) & 1) == 0)
                    {
                      uint64_t v2 = 0;
                      *(_DWORD *)(result + 1234) = a2[8];
                      *(unsigned char *)(result + 1248) = 1;
                      return v2;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A2B4C(uint64_t result)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  long long v4 = xmmword_1000FF150;
  if ((result + 1202)) {
    goto LABEL_19;
  }
  int v5 = *(_DWORD *)(result + 1202);
  if ((result + 1206)) {
    goto LABEL_19;
  }
  int v6 = *(_DWORD *)(result + 1206);
  if ((result + 1210)) {
    goto LABEL_19;
  }
  int v7 = *(_DWORD *)(result + 1210);
  if ((result + 1214)) {
    goto LABEL_19;
  }
  int v8 = *(_DWORD *)(result + 1214);
  if ((result + 1218)) {
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(result + 1218);
  if ((result + 1222)) {
    goto LABEL_19;
  }
  int v10 = *(_DWORD *)(result + 1222);
  if ((result + 1226)) {
    goto LABEL_19;
  }
  int v12 = *(_DWORD *)(result + 1226);
  if (((result + 1230) & 1) != 0
    || (int v11 = *(_DWORD *)(result + 1230), ((result + 1234) & 1) != 0)
    || (int v13 = *(_DWORD *)(result + 1234), v14 = 1515870810, (result = sub_100051084()) == 0)
    || (uint64_t v2 = result, (result & 7) != 0)
    || (result = sub_1000DD4C4(*(void *)(v1 + 8)), (uint64_t v3 = *(unsigned __int16 **)(v1 + 1240)) == 0)
    || (v3 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, long long *))(*(void *)v2 + 120))(v2, result, *v3, 56, &v4);
}

uint64_t sub_1000A2C94(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v4 = 0;
  switch(a2)
  {
    case 32:
      sub_10006FF9C(result, (uint64_t)&v4);
      return v4;
    case 8:
      sub_1000A249C(result);
      *(unsigned char *)(v2 + 1248) = 0;
      sub_1000A2610(v2);
      break;
    case 4:
      break;
    default:
      sub_1000F26DC();
  }
  uint64_t result = sub_1000E5F70();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
  }
  else
  {
    int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 144))(result);
    uint64_t result = 0;
    dword_10013C98C = v3;
  }
  return result;
}

uint64_t sub_1000A2D58(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_91;
  }
  if (!*(void *)(a1 + 8)) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_10006D8BC(a1);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_91;
  }
  if (!sub_1000A1834(v4, *(void *)(a1 + 8))) {
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_91;
  }
  uint64_t v6 = sub_1000622BC(v5);
  if ((v6 & 1) == 0)
  {
    if (a2 && (a2 & 7) == 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 68);
      if (v8 >= 0x10000) {
        goto LABEL_92;
      }
      int v9 = *(unsigned __int8 **)(a2 + 24);
      unsigned int v10 = *(unsigned __int16 *)(a2 + 128);
      unsigned int v11 = *(unsigned __int16 *)(a2 + 126);
      uint64_t v12 = sub_10006D8BC(v6);
      if (v12 && (v12 & 7) == 0)
      {
        uint64_t v13 = sub_1000A1140(v12, *(void *)(a1 + 8));
        uint64_t v14 = sub_1000E5F70();
        long long v45 = 0uLL;
        uint64_t v15 = *(void *)(a1 + 8);
        *(void *)((char *)&v45 + 4) = v15;
        if (v11 > 0xF)
        {
LABEL_67:
          if (*(unsigned __int16 *)(a2 + 126) == v11)
          {
            int v41 = 0;
            __int16 v40 = 0;
            char v39 = 0;
            uint64_t v38 = 0;
            char v37 = -1;
            int v36 = 0;
            sub_1000C55C4(a2);
          }
          return sub_1000A37E4(a1, a2, 0);
        }
        switch(v11)
        {
          case 1u:
            if (v10 != 1) {
              goto LABEL_67;
            }
            if (!v9) {
              goto LABEL_91;
            }
            sub_1000A3428(a1, a2, *v9);
            goto LABEL_67;
          case 3u:
            if (v10 - 1 <= 3) {
              sub_1000A353C(a1, a2);
            }
            goto LABEL_67;
          case 4u:
            if (v10 != 1) {
              goto LABEL_67;
            }
            if (!v9) {
              goto LABEL_91;
            }
            unsigned int v16 = *v9;
            if (v16 <= 5)
            {
              syslog(4, "%s:%s-%d pData[0] == 0x%x\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp", "ProcessCmd", 573, v16);
              sub_1000A3600(a1, *v9);
            }
            goto LABEL_67;
          case 5u:
            if (v10 != 2) {
              goto LABEL_67;
            }
            if (!v9) {
              goto LABEL_91;
            }
            unsigned int v17 = bswap32(*(unsigned __int16 *)v9) >> 16;
            if (v17 <= 0x7CF)
            {
              *(_WORD *)(a1 + 1200) = v17;
              WORD6(v45) = v17;
              LODWORD(v45) = 2;
              sub_100067D3C(0xDu, 0, (uint64_t)&v45, 16, v15);
            }
            goto LABEL_67;
          case 6u:
            goto LABEL_67;
          case 7u:
            if (!v14 || (v14 & 7) != 0) {
              goto LABEL_91;
            }
            uint64_t v18 = *(uint64_t (**)(void))(*(void *)v14 + 152);
            goto LABEL_89;
          case 9u:
            if (!v10) {
              goto LABEL_67;
            }
            if (!v9) {
              goto LABEL_91;
            }
            if (*v9) {
              goto LABEL_67;
            }
            if (!v13 || (v13 & 7) != 0) {
              goto LABEL_91;
            }
            unsigned int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 136))(v13, 13);
            if (v19 < 3) {
              goto LABEL_96;
            }
            if ((v19 - 3) >> 16) {
              goto LABEL_92;
            }
            if ((_WORD)v19 == 3) {
              goto LABEL_97;
            }
            if ((unsigned __int16)(v19 - 3) < 0xAu) {
              goto LABEL_92;
            }
            LOWORD(v44[0]) = -22016;
            if (&v36 == (int *)-45) {
              break;
            }
            BYTE1(v44[0]) = 0x9A8u / (unsigned __int16)(v19 - 3);
            uint64_t v20 = a2;
            uint64_t v21 = v13;
            __int16 v22 = 10;
            int v23 = (unsigned __int16)v8;
            unsigned int v24 = 2;
LABEL_90:
            sub_1000C5B58(v20, v21, 0, 13, v22, v23, v44, v24);
            goto LABEL_67;
          case 0xBu:
            if (v10 < 2) {
              goto LABEL_67;
            }
            if (!v9) {
              goto LABEL_91;
            }
            if (*v9) {
              goto LABEL_67;
            }
            if (v9 == (unsigned __int8 *)-1) {
              break;
            }
            if (!v13 || (v13 & 7) != 0) {
              goto LABEL_91;
            }
            unsigned int v25 = v9[1];
            unsigned int v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 136))(v13, 13);
            unsigned int v27 = v26 - 3;
            if (v26 < 3) {
              goto LABEL_96;
            }
            if (HIWORD(v27)) {
              goto LABEL_92;
            }
            unsigned int v28 = (unsigned __int16)(v26 - 3);
            if ((_WORD)v26 == 3) {
              goto LABEL_97;
            }
            if (v28 < 0xA) {
              goto LABEL_92;
            }
            unsigned int v29 = 0x9A8u / (unsigned __int16)(v26 - 3);
            unsigned int v30 = (v29 + 1);
            if (v30 <= v25) {
              goto LABEL_67;
            }
            unint64_t v31 = v28 * v25;
            if (WORD1(v31)) {
              goto LABEL_92;
            }
            if (v31 > 0x9A8) {
              goto LABEL_98;
            }
            if (v31 <= ~(unint64_t)&unk_1000FF190)
            {
              unsigned int v32 = v30 - 1;
              int v33 = 2472 - v29 * v27;
              unsigned int v34 = (unsigned __int16)v33;
              if (v32 != v25) {
                int v33 = v26 - 3;
              }
              int v43 = v33;
              if (v32 == v25) {
                unsigned int v35 = v34;
              }
              else {
                unsigned int v35 = v26 - 3;
              }
              uint64_t v42 = v35 + 3;
              operator new[]();
            }
            return result;
          case 0xDu:
            if (v10 == 1) {
              sub_1000A36C8(a1, a2);
            }
            goto LABEL_67;
          case 0xEu:
            if (v10 != 1) {
              goto LABEL_67;
            }
            if (!v9 || !v14 || (v14 & 7) != 0) {
              goto LABEL_91;
            }
            if (*v9 > 1u) {
              goto LABEL_95;
            }
            uint64_t v18 = *(uint64_t (**)(void))(*(void *)v14 + 152);
LABEL_89:
            v44[0] = bswap32(v18());
            uint64_t v20 = a2;
            uint64_t v21 = v13;
            __int16 v22 = 8;
            int v23 = (unsigned __int16)v8;
            unsigned int v24 = 4;
            goto LABEL_90;
          case 0xFu:
            if (v10 != 36) {
              goto LABEL_80;
            }
            if (!v9) {
              goto LABEL_91;
            }
            v44[0] = bswap32(*(unsigned __int16 *)v9) >> 16;
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFFELL) {
              goto LABEL_93;
            }
            v44[1] = bswap32(*(_DWORD *)(v9 + 2));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFFALL) {
              goto LABEL_93;
            }
            v44[2] = bswap32(*(_DWORD *)(v9 + 6));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFF6) {
              goto LABEL_93;
            }
            v44[3] = bswap32(*(_DWORD *)(v9 + 10));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFF2) {
              goto LABEL_93;
            }
            v44[4] = bswap32(*(_DWORD *)(v9 + 14));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFEELL) {
              goto LABEL_93;
            }
            v44[5] = bswap32(*(_DWORD *)(v9 + 18));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFEALL) {
              goto LABEL_93;
            }
            v44[6] = bswap32(*(_DWORD *)(v9 + 22));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFE6) {
              goto LABEL_93;
            }
            v44[7] = bswap32(*(_DWORD *)(v9 + 26));
            if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFE2) {
              goto LABEL_93;
            }
            v44[8] = bswap32(*(_DWORD *)(v9 + 30));
            sub_1000A2A48(a1, v44);
            sub_1000A2B4C(a1);
LABEL_80:
            sub_1000EE4F4(0, 4, "%s:%d ERROR: CIapLingoPushUI::ProcessCmd Unknown CmdID: 0x%02X", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp", 754, v11);
            goto LABEL_67;
          default:
            goto LABEL_80;
        }
LABEL_94:
        __break(0x5513u);
LABEL_95:
        __break(0x550Au);
LABEL_96:
        __break(0x5515u);
LABEL_97:
        __break(0x5503u);
LABEL_98:
        __break(0x5512u);
        JUMPOUT(0x1000A33ECLL);
      }
    }
LABEL_91:
    __break(0x5516u);
LABEL_92:
    __break(0x5507u);
LABEL_93:
    __break(0x5500u);
    goto LABEL_94;
  }
LABEL_10:
  if (a2) {
    return sub_1000A37E4(a1, a2, 0);
  }
  return 89;
}

uint64_t sub_1000A3428(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  unsigned int v9 = -1431655766;
  uint64_t result = sub_10006D8BC(result);
  if (!result) {
    goto LABEL_17;
  }
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_1000A1140(result, *(void *)(v3 + 8));
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v6 = result;
  int v7 = *(unsigned __int16 *)(a2 + 68);
  uint64_t result = sub_1000E5F70();
  char v8 = a3;
  if (a3 == 1)
  {
    uint64_t result = dword_10013C98C;
LABEL_13:
    if (&v8 != (char *)-1)
    {
      unsigned int v9 = bswap32(result);
      sub_1000C5B58(a2, v6, 0, 13, 2, v7, &v8, 5u);
      return 0;
    }
    goto LABEL_18;
  }
  if (!a3)
  {
    if (result && (result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
      goto LABEL_13;
    }
LABEL_17:
    __break(0x5516u);
LABEL_18:
    __break(0x5500u);
    return result;
  }
  return 4;
}

uint64_t sub_1000A353C(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || !a2
    || (a2 & 7) != 0
    || (v3 = *(unsigned int **)(a2 + 24), int v4 = *(unsigned __int16 *)(a2 + 128), (result = sub_1000E5F70()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    int v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
    uint64_t result = 4;
    if (v3 && v4 == 4)
    {
      unsigned int v6 = bswap32(*v3);
      if (v6 & ~v5) == 0 && (v6)
      {
        dword_10013C98C = v6;
        sub_1000A38A0(v2);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000A3600(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  long long v5 = xmmword_1000FF160;
  if (a2 >= 8)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  unsigned int v6 = a2;
  int v7 = 1515870810;
  uint64_t result = sub_100051084();
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (result = sub_1000DD4C4(*(void *)(v2 + 8)), (int v4 = *(unsigned __int16 **)(v2 + 1240)) == 0)
    || (v4 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, long long *))(*(void *)v3 + 120))(v3, result, *v4, 24, &v5);
}

uint64_t sub_1000A36C8(uint64_t result, uint64_t a2)
{
  if (result
    && (result & 7) == 0
    && a2
    && (a2 & 7) == 0
    && (v2 = *(unsigned __int8 **)(a2 + 24), v16 = -1431655766, uint64_t v3 = *(void *)(result + 8), v15 = v3, v14 = 3, v2))
  {
    LOBYTE(v4) = 0;
    int v5 = 0;
    unsigned int v6 = *v2;
    unsigned int v7 = v6 >> 5;
    int v8 = (8 * v6) & 0x700;
    int v9 = 2 * (v6 & 0x1F);
    do
    {
      if (((((v7 & 7) << 8) | 0x1000) >> v4))
      {
        if (v5 == 0xFFFF)
        {
LABEL_22:
          __break(0x5507u);
          goto LABEL_23;
        }
        ++v5;
      }
      unsigned int v4 = (v4 + 1);
    }
    while (v4 < 0x20);
    LOBYTE(v10) = 0;
    int v11 = 0;
    do
    {
      if (((v9 | 0x40u) >> v10))
      {
        if (v11 == 0xFFFF) {
          goto LABEL_22;
        }
        ++v11;
      }
      unsigned int v10 = (v10 + 1);
    }
    while (v10 < 0x20);
    if (v5) {
      int v12 = 4160;
    }
    else {
      int v12 = 36928;
    }
    int v13 = v9 | v8 | v12;
    if ((v11 & 1) == 0) {
      v13 |= 0x80u;
    }
    int v16 = v13;
    sub_100067D3C(0xDu, 0, (uint64_t)&v14, 16, v3);
    return 0;
  }
  else
  {
LABEL_23:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000A37E4(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10006FADC();
    uint64_t v6 = *(void *)(v3 + 8);
    return sub_1000C4B20(v6, a2, a3, 1u);
  }
  return result;
}

void sub_1000A3848(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000EE4F4(0, 4, "%s:%d CIapLingoPushUI::HandleCmdTimeout invalid timeout cmd ID: 0x%02X", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp", 843, a3);
  }
}

uint64_t sub_1000A38A0(uint64_t result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  v2.i64[1] = 0x206F707473;
  long long v7 = xmmword_1000FF170;
  v2.i64[0] = *(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(dword_10013C98C) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFEFFFFLL) & 0xFF01FF01FF01FF01;
  unsigned __int32 v8 = vmovn_s16(v2).u32[0];
  BOOL v9 = (dword_10013C98C & 0x20) != 0;
  BOOL v10 = (dword_10013C98C & 0x40) != 0;
  BOOL v11 = (dword_10013C98C & 0x80) != 0;
  char v12 = BYTE1(dword_10013C98C) & 1;
  int v3 = (dword_10013C98C & 0x400) != 0 ? 2 : 1;
  int v4 = (dword_10013C98C & 0x200) != 0 ? 0 : v3;
  int v14 = 1515870810;
  int v13 = v4;
  uint64_t result = sub_100051084();
  if (!result
    || (uint64_t v5 = result, (result & 7) != 0)
    || (result = sub_1000DD4C4(*(void *)(v1 + 8)), (uint64_t v6 = *(unsigned __int16 **)(v1 + 1240)) == 0)
    || (v6 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, long long *))(*(void *)v5 + 120))(v5, result, *v6, 32, &v7);
}

void sub_1000A39BC(uint64_t a1, std::string *a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    return;
  }
  sub_10009767C(a2, &v9);
  int v4 = SHIBYTE(v9.__r_.__value_.__r.__words[2]);
  uint64_t v5 = (void *)v9.__r_.__value_.__r.__words[0];
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v9;
  }
  else {
    uint64_t v6 = (std::string *)v9.__r_.__value_.__r.__words[0];
  }
  int v7 = strcmp((const char *)v6, off_10013B6A8);
  int v8 = v7;
  if ((v4 & 0x80000000) == 0)
  {
    if (v7) {
      return;
    }
LABEL_12:
    *(void *)(a1 + 1240) = a2;
    return;
  }
  operator delete(v5);
  if (!v8) {
    goto LABEL_12;
  }
}

void sub_1000A3A64(uint64_t a1, std::string *a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    return;
  }
  sub_10009767C(a2, &v8);
  int v3 = SHIBYTE(v8.__r_.__value_.__r.__words[2]);
  int v4 = (void *)v8.__r_.__value_.__r.__words[0];
  if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v5 = &v8;
  }
  else {
    uint64_t v5 = (std::string *)v8.__r_.__value_.__r.__words[0];
  }
  int v6 = strcmp((const char *)v5, off_10013B6A8);
  int v7 = v6;
  if ((v3 & 0x80000000) == 0)
  {
    if (v6) {
      return;
    }
LABEL_12:
    *(void *)(a1 + 1240) = 0;
    return;
  }
  operator delete(v4);
  if (!v7) {
    goto LABEL_12;
  }
}

uint64_t sub_1000A3B00(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1000E5F70();
  if (!result) {
    goto LABEL_14;
  }
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 88))(result);
  uint64_t result = sub_1000E5F70();
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96))(result);
  *(unsigned char *)uint64_t v2 = 13;
  if (v2 == -1)
  {
LABEL_15:
    __break(0x5500u);
    return result;
  }
  uint64_t v4 = 0x100000000000000;
  if (!v3) {
    uint64_t v4 = 0;
  }
  if (result) {
    v4 |= 0x200000000000000uLL;
  }
  *(void *)(v2 + 1) = v4 | 0x3800000000000000;
  return 0;
}

uint64_t sub_1000A3BD8(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000A3BEC(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (*(void *)(result + 1240) == a2)
  {
    sub_1000A38A0(result);
    return sub_1000A2B4C(v2);
  }
  return result;
}

uint64_t sub_1000A3C50(uint64_t result, unsigned char *a2, unsigned char *a3)
{
  if (result && (result & 7) == 0 && a2 && (*a2 = 1, a3)) {
    *a3 = 0;
  }
  else {
    __break(0x5516u);
  }
  return result;
}

void sub_1000A3C78(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_52;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_52;
  }
  sub_10006D698(a1, a2, 4);
  *(void *)a1 = off_100126440;
  *(_OWORD *)(a1 + 1200) = 0u;
  *(_DWORD *)(a1 + 1216) = 1;
  *(_WORD *)(a1 + 1220) = 256;
  *(void *)(a1 + 1288) = -1;
  *(void *)(a1 + 1296) = 0x200000000;
  *(void *)(a1 + 1304) = -1;
  *(void *)(a1 + 1312) = -1;
  *(void *)(a1 + 1320) = -1;
  *(_DWORD *)(a1 + 1328) = -1;
  *(_WORD *)(a1 + 1332) = 0;
  *(unsigned char *)(a1 + 1334) = 0;
  *(void *)(a1 + 1336) = 0;
  *(void *)(a1 + 1343) = 0;
  if ((((_BYTE)a1 + 72) & 7) != 0) {
    goto LABEL_52;
  }
  *(_OWORD *)(a1 + 1352) = 0uLL;
  *(_DWORD *)(a1 + 1380) = 0;
  *(unsigned char *)(a1 + 1384) = 0;
  *(_DWORD *)(a1 + 1388) = 0;
  *(_WORD *)(a1 + 1392) = 0;
  *(unsigned char *)(a1 + 1395) = 0;
  *(unsigned char *)(a1 + 1398) = 0;
  *(void *)(a1 + 1368) = 0;
  if (((a1 + 1416) & 7) != 0) {
    goto LABEL_52;
  }
  *(void *)(a1 + 1416) = 0;
  *(void *)(a1 + 1424) = 0;
  pthread_mutex_init((pthread_mutex_t *)(a1 + 1224), 0);
  if (dword_10013B6B8 == -1)
  {
    uint64_t v4 = sub_100031160();
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6B8 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v4 + 360))(v4, "SetDurationToZeroOnInvalid");
  }
  if (dword_10013B6BC == -1)
  {
    uint64_t v5 = sub_100031160();
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6BC = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v5 + 360))(v5, "SetDurationToLargeOnInvalid");
  }
  if (dword_10013B6C0 == -1)
  {
    uint64_t v6 = sub_100031160();
    if (!v6 || (v6 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6C0 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v6 + 360))(v6, "SetDurationTo5MinOnInvalid");
  }
  if (dword_10013B6C4 == -1)
  {
    uint64_t v7 = sub_100031160();
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6C4 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v7 + 360))(v7, "SetDurationTo24HrsOnInvalid");
  }
  if (dword_10013B6C8 == -1)
  {
    uint64_t v8 = sub_100031160();
    if (!v8 || (v8 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6C8 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v8 + 360))(v8, "SetDurationTo1HrOnInvalid");
  }
  if (dword_10013B6CC == -1)
  {
    uint64_t v9 = sub_100031160();
    if (!v9 || (v9 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10013B6CC = (*(uint64_t (**)(uint64_t, char *))(*(void *)v9 + 360))(v9, off_10013B6D0);
  }
  uint64_t v10 = sub_10003E5D0();
  *(void *)(a1 + 1200) = v10;
  if (!v10) {
LABEL_51:
  }
    sub_1000F2364();
  *(void *)(a1 + 1404) = 0xFFFFFFFFLL;
  *(unsigned char *)(a1 + 1412) = 0;
  uint64_t v11 = sub_10002B190();
  *(void *)(a1 + 1192) = v11;
  if (!v11) {
    goto LABEL_50;
  }
  sub_10006D90C(a2);
  if (!v12 || (v12 & 7) != 0) {
    goto LABEL_52;
  }
  int v13 = sub_10006AB88(v12);
  *(_DWORD *)(a1 + 1376) = v13;
  if (v13 == -1)
  {
LABEL_50:
    __break(0x5518u);
    goto LABEL_51;
  }
  sub_10006D90C(a2);
  if (!v14
    || (v14 & 7) != 0
    || (sub_10006AE88(v14, *(_DWORD *)(a1 + 1376)), (uint64_t v15 = *(void *)(a1 + 1192)) == 0)
    || (v15 & 7) != 0)
  {
LABEL_52:
    __break(0x5516u);
    goto LABEL_53;
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 112))(v15);
  if (v16 <= 7)
  {
    if ((v16 & 0xFFFFFFFE) == 2) {
      *(unsigned char *)(a1 + 1392) = 1;
    }
    uint64_t v17 = sub_10006D8BC(v16);
    if (v17)
    {
      if ((v17 & 7) == 0)
      {
        sub_10009F1D8(v17, 4, 365, *(void *)(a1 + 8));
        uint64_t v18 = *(void *)(a1 + 1200);
        if (v18)
        {
          if ((v18 & 7) == 0)
          {
            (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 16))(v18, a1);
            uint64_t v19 = *(void *)(a1 + 8);
            if (v19)
            {
              if ((v19 & 7) == 0)
              {
                sub_100062FD8(v19, 4u, 0);
                uint64_t v20 = *(void *)(a1 + 8);
                if (v20)
                {
                  if ((v20 & 7) == 0)
                  {
                    sub_100062F84(v20, 4u, 0);
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_52;
  }
LABEL_53:
  __break(0x550Au);
}

void sub_1000A40F4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_19;
  }
  *(void *)a1 = off_100126440;
  uint64_t v2 = *(void *)(a1 + 1200);
  if (!v2 || (v2 & 7) != 0) {
    goto LABEL_19;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 24))(v2, a1);
  sub_10006D90C(*(void *)(a1 + 8));
  if (!v4) {
    goto LABEL_19;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v5 = sub_10006AE88(v4, *(_DWORD *)(a1 + 1376));
  *(unsigned char *)(a1 + 1384) = 0;
  *(_DWORD *)(a1 + 1388) = 0;
  uint64_t v6 = sub_10006D8BC(v5);
  if (!v6) {
    goto LABEL_19;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_19;
  }
  sub_10009F1D8(v6, 4, 0, *(void *)(a1 + 8));
  sub_1000A423C(a1);
  sub_1000A433C(*(void *)(a1 + 8), 0);
  sub_10006D90C(*(void *)(a1 + 8));
  if (!v7
    || (v7 & 7) != 0
    || (sub_100068F78(v7, *(_DWORD *)(a1 + 1376)),
        *(_DWORD *)(a1 + 1376) = -1,
        *(void *)(a1 + 1192) = 0,
        qword_10013C990 = 0,
        pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1224)),
        ((a1 + 1416) & 7) != 0)
    || (sub_1000B6778((void *)(a1 + 1416)), (((_BYTE)a1 + 72) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
  }
  else
  {
    sub_10006D970(a1);
  }
}

uint64_t sub_1000A423C(uint64_t result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (*(unsigned char *)(result + 1395))
  {
    uint64_t result = *(void *)(result + 1200);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 160))(result, *(__int16 *)(v1 + 1396));
    *(unsigned char *)(v1 + 1395) = 0;
  }
  if (*(unsigned char *)(v1 + 1398))
  {
    uint64_t result = *(void *)(v1 + 1200);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 128))(result, *(__int16 *)(v1 + 1400));
    *(unsigned char *)(v1 + 1398) = 0;
  }
  if (!*(unsigned char *)(v1 + 1393)) {
    return result;
  }
  uint64_t result = *(void *)(v1 + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 192))(result, *(char *)(v1 + 1394));
  *(_WORD *)(v1 + 1393) = 0;
  return result;
}

void sub_1000A433C(uint64_t a1, int a2)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_17;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = sub_100063334(a1, 4u);
  uint64_t v5 = sub_10006D8BC(v4);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v6 = sub_10009EF00(v5, a1, 4u);
  if (v6)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_17;
    }
    uint64_t v7 = qword_10013C990;
    if (!qword_10013C990)
    {
      qword_10013C990 = v6;
      uint64_t v7 = v6;
    }
  }
  else
  {
    uint64_t v7 = qword_10013C990;
    if (!qword_10013C990)
    {
      qword_10013C990 = 0;
      sub_1000EE4F4(0, 4, "%s:%d No RemoteUI Object, cannot get RemoteUI mode!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 894);
      goto LABEL_14;
    }
  }
  if ((v7 & 7) == 0)
  {
    pthread_mutex_lock((pthread_mutex_t *)(v7 + 1224));
    sub_1000A50C8(a1, a2);
    if (qword_10013C990)
    {
      if ((qword_10013C990 & 7) == 0)
      {
        pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C990 + 1224));
LABEL_14:
        sub_100063380(a1, 4u);
        return;
      }
    }
  }
LABEL_17:
  __break(0x5516u);
}

void sub_1000A4450(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A40F4(a1);
  }
}

uint64_t sub_1000A4464(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000A40F4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A44AC(uint64_t result)
{
  if (!result)
  {
    __break(0x5518u);
LABEL_13:
    __break(0x5516u);
    return result;
  }
  uint64_t v1 = result;
  uint64_t result = qword_10013C990;
  if (!qword_10013C990) {
    operator new();
  }
  if ((qword_10013C990 & 7) != 0 || (((_BYTE)qword_10013C990 + 8) & 7) != 0) {
    goto LABEL_13;
  }
  if (*(void *)(qword_10013C990 + 8) != v1) {
    return 0;
  }
  return result;
}

uint64_t sub_1000A453C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  int v3 = (unsigned char *)result;
  *(unsigned char *)uint64_t result = 0;
  uint64_t result = sub_10006D8BC(result);
  if (!result) {
    goto LABEL_18;
  }
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152))(result, a2);
  char v5 = v4;
  uint64_t result = sub_10006D8BC(v4);
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_10009EF00(result, a2, 4u);
  if (!result)
  {
    if ((v5 & 0x10) != 0) {
      sub_1000EE4F4(0, 4, "No RemoteUI Object but device identified for RemoteUI, cannot handle GetRemoteUIMode!\n");
    }
    return 2;
  }
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  if (result != qword_10013C990)
  {
    if ((v5 & 0x10) != 0) {
      sub_1000EE4F4(0, 4, "RemoteUI Object does not match but device identified for RemoteUI, cannot handle GetRemoteUIMode!\n");
    }
    return 2;
  }
  uint64_t result = sub_10002B190();
  if (!result)
  {
    sub_1000EE4F4(0, 4, "%s:%d No ExtendedModeMgr handle, cannot get ExtendedMode state!\n");
    return 2;
  }
  if ((result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
  }
  else
  {
    char v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 96))(result);
    uint64_t result = 0;
    *int v3 = v6;
  }
  return result;
}

void sub_1000A467C(uint64_t a1)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_86;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v2 = sub_100063334(a1, 4u);
  uint64_t v3 = sub_10006D8BC(v2);
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v4 = sub_10009EF00(v3, a1, 4u);
  uint64_t v5 = v4;
  if (!v4)
  {
    uint64_t v6 = qword_10013C990;
    if (!qword_10013C990)
    {
      qword_10013C990 = 0;
      sub_1000EE4F4(0, 4, "%s:%d No RemoteUI Object, cannot handle EnterRemoteUIMode!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 680);
      uint64_t v6 = qword_10013C990;
    }
LABEL_11:
    if (v6 != v5)
    {
      sub_1000EE4F4(0, 4, "%s:%d RemoteUI Object does not match, cannot handle EnterRemoteUIMode! %hhx != %hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 685, v6, v5);
      uint64_t v5 = qword_10013C990;
    }
    if (!v5) {
      goto LABEL_84;
    }
    goto LABEL_14;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v6 = qword_10013C990;
  if (qword_10013C990) {
    goto LABEL_11;
  }
  qword_10013C990 = v4;
LABEL_14:
  if ((v5 & 7) != 0 || ((v5 + 8) & 7) != 0) {
    goto LABEL_87;
  }
  if (*(void *)(v5 + 8) != a1) {
    goto LABEL_84;
  }
  uint64_t v7 = pthread_mutex_lock((pthread_mutex_t *)(v5 + 1224));
  uint64_t v8 = qword_10013C990;
  if (!qword_10013C990 || (qword_10013C990 & 7) != 0 || ((qword_10013C990 + 1192) & 7) != 0) {
    goto LABEL_87;
  }
  if (!*(void *)(qword_10013C990 + 1192))
  {
LABEL_81:
    if (qword_10013C990 && (qword_10013C990 & 7) == 0)
    {
      pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C990 + 1224));
LABEL_84:
      sub_100063380(a1, 4u);
      return;
    }
    goto LABEL_87;
  }
  if ((((_BYTE)qword_10013C990 - 72) & 7) != 0) {
    goto LABEL_87;
  }
  if (!*(void *)(qword_10013C990 + 1208))
  {
    uint64_t v9 = (uint64_t *)sub_10006D8BC(v7);
    if (!v9) {
      goto LABEL_87;
    }
    if ((v9 & 7) != 0) {
      goto LABEL_87;
    }
    uint64_t v10 = sub_10009F094(v9, 4);
    uint64_t v8 = qword_10013C990;
    if (!qword_10013C990 || (qword_10013C990 & 7) != 0 || (((_BYTE)qword_10013C990 - 72) & 7) != 0) {
      goto LABEL_87;
    }
    *(void *)(qword_10013C990 + 1208) = v10;
    if (!v10) {
LABEL_86:
    }
      sub_1000F2364();
  }
  if ((v8 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v11 = (uint64_t *)(v8 + 1192);
  if ((v11 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v12 = *v11;
  if (!*v11 || (v12 & 7) != 0) {
    goto LABEL_87;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)v12 + 96))(v12)) {
    goto LABEL_81;
  }
  if (!qword_10013C990 || (qword_10013C990 & 7) != 0 || ((qword_10013C990 + 1380) & 3) != 0) {
    goto LABEL_87;
  }
  *(_DWORD *)(qword_10013C990 + 1380) = 0;
  sub_10006D90C(a1);
  if (v13)
  {
    sub_10006D90C(a1);
    if (!v14) {
      goto LABEL_87;
    }
    if ((v14 & 7) != 0) {
      goto LABEL_87;
    }
    if (!qword_10013C990) {
      goto LABEL_87;
    }
    if ((qword_10013C990 & 7) != 0) {
      goto LABEL_87;
    }
    if (((qword_10013C990 + 1376) & 7) != 0) {
      goto LABEL_87;
    }
    sub_10006AE88(v14, *(_DWORD *)(qword_10013C990 + 1376));
    if (!qword_10013C990 || (qword_10013C990 & 7) != 0 || ((qword_10013C990 + 1384) & 7) != 0) {
      goto LABEL_87;
    }
    *(unsigned char *)(qword_10013C990 + 1384) = 0;
  }
  unsigned int v15 = sub_10006FADC();
  if (qword_10013C990)
  {
    if ((qword_10013C990 & 7) == 0 && ((qword_10013C990 + 1388) & 3) == 0)
    {
      *(_DWORD *)(qword_10013C990 + 1388) = v15;
      sub_100062FD8(a1, 4u, 0);
      sub_100062F84(a1, 4u, 0);
      if (qword_10013C990)
      {
        if ((qword_10013C990 & 7) == 0 && ((qword_10013C990 + 1416) & 7) == 0)
        {
          sub_1000A4B14(qword_10013C990 + 1416, 0);
          if (qword_10013C990)
          {
            if ((qword_10013C990 & 7) == 0 && ((qword_10013C990 + 1220) & 3) == 0)
            {
              *(unsigned char *)(qword_10013C990 + 1220) = 1;
              uint64_t v16 = sub_10003E5D0();
              if (v16)
              {
                if ((v16 & 7) == 0)
                {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v16 + 632))(v16, 1);
                  if (qword_10013C990)
                  {
                    if ((qword_10013C990 & 7) == 0)
                    {
                      uint64_t v17 = (uint64_t *)(qword_10013C990 + 1192);
                      if (((qword_10013C990 + 1192) & 7) == 0)
                      {
                        uint64_t v18 = *v17;
                        if (*v17)
                        {
                          if ((v18 & 7) == 0)
                          {
                            (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 88))(v18, 1);
                            sub_1000A4B88(1, a1, 1);
                            if (qword_10013C990)
                            {
                              if ((qword_10013C990 & 7) == 0)
                              {
                                *(unsigned char *)(qword_10013C990 + 1221) = 1;
                                uint64_t v19 = sub_10004CDB4();
                                if (v19)
                                {
                                  if ((v19 & 7) == 0)
                                  {
                                    uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 80))(v19);
                                    if (v20)
                                    {
                                      uint64_t v21 = sub_10006D8BC(v20);
                                      if (!v21
                                        || (v21 & 7) != 0
                                        || !qword_10013C990
                                        || (qword_10013C990 & 7) != 0
                                        || ((qword_10013C990 + 1208) & 7) != 0)
                                      {
                                        goto LABEL_87;
                                      }
                                      if (sub_10009FE80(v21, *(void *)(qword_10013C990 + 1208)) != 56)
                                      {
                                        uint64_t v22 = sub_10006346C(a1);
                                        if (!v22 || (v22 & 7) != 0) {
                                          goto LABEL_87;
                                        }
                                        if (sub_1000A5088(v22))
                                        {
                                          uint64_t v23 = sub_10006346C(a1);
                                          if (!v23 || (v23 & 7) != 0) {
                                            goto LABEL_87;
                                          }
                                          sub_1000A50A8(v23);
                                        }
                                      }
                                    }
                                    goto LABEL_81;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_87:
  __break(0x5516u);
}

uint64_t sub_1000A4B14(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)result;
      if (*v2 == a2 || result == 0) {
        goto LABEL_9;
      }
      if ((result & 7) == 0)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
LABEL_9:
        *uint64_t v2 = a2;
        return result;
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000A4B88(char a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_10003E5D0();
  __p = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  if (a1)
  {
    uint64_t v7 = sub_10005176C();
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_64;
    }
    if ((*(unsigned int (**)(uint64_t, void **))(*(void *)v7 + 304))(v7, &__p))
    {
      uint64_t v8 = byte_10013C0A7 >= 0 ? &qword_10013C090 : (uint64_t *)qword_10013C090;
      unint64_t v9 = byte_10013C0A7 >= 0 ? byte_10013C0A7 : unk_10013C098;
      unint64_t v10 = v32 >= 0 ? HIBYTE(v32) : v31;
      uint64_t v11 = v32 >= 0 ? &__p : (void **)__p;
      size_t v12 = v9 >= v10 ? v10 : v9;
      if (!memcmp(v11, v8, v12) && v9 == v10)
      {
        uint64_t v14 = sub_10003E5D0();
        if (!v14 || (v14 & 7) != 0) {
          goto LABEL_64;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 416))(v14))
        {
          uint64_t v15 = sub_10006DB30(4, a2);
          if (v15)
          {
            uint64_t v16 = v15;
            if ((v15 & 7) == 0)
            {
              sub_1000719BC(v15, 7u, 1);
              sub_1000719BC(v16, 7u, 0);
              goto LABEL_45;
            }
          }
LABEL_64:
          __break(0x5516u);
          return;
        }
      }
    }
  }
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_64;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 456))(v6)) {
    (*(void (**)(uint64_t))(*(void *)v6 + 336))(v6);
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 384))(v6);
  uint64_t v29 = v17;
  if (!v17) {
    goto LABEL_42;
  }
  uint64_t v18 = v17;
  if ((v17 & 7) != 0) {
    goto LABEL_64;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v17 + 16))(v17))
  {
LABEL_42:
    uint64_t v26 = 9334;
    uint64_t v19 = "%s:%d no trackAccessor! ignore doing pause";
    goto LABEL_43;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 288))(v18)
    && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 528))(v6) == 1)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)v6 + 464))(v6) & 1) == 0) {
      (*(void (**)(uint64_t))(*(void *)v6 + 312))(v6);
    }
    goto LABEL_44;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 424))(v6))
  {
    sub_1000EE4F4(0, 4, "%s:%d not playing! ignore doing pause");
    goto LABEL_44;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_64;
  }
  uint64_t v20 = sub_10001CE30(a2);
  uint64_t v21 = v20;
  if (!a3)
  {
    if (!v20 || (v20 & 7) != 0) {
      goto LABEL_64;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v20 + 216))(v20) != 2)
    {
      BOOL v22 = 1;
      if (!v21) {
        goto LABEL_64;
      }
      goto LABEL_60;
    }
    uint64_t v27 = 0;
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 216))(v21);
    uint64_t v26 = 9322;
    uint64_t v19 = "%s:%d ignore doing Pause for fromCommand=%d portType=%d";
LABEL_43:
    sub_1000EE4F4(0, 4, v19, "HandleMediaOnRemoteUIAttachedOrRemoved", v26, v27, v28, v29);
    goto LABEL_44;
  }
  BOOL v22 = (v20 & 7) == 0;
  if (!v20) {
    goto LABEL_64;
  }
LABEL_60:
  if (!v22) {
    goto LABEL_64;
  }
  int v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 216))(v21);
  sub_1000EE4F4(0, 4, "%s:%d Pause for fromCommand=%d portType=%d", "HandleMediaOnRemoteUIAttachedOrRemoved", 9313, a3, v23);
  uint64_t v24 = sub_10006DB30(4, a2);
  if (!v24) {
    goto LABEL_64;
  }
  uint64_t v25 = v24;
  if ((v24 & 7) != 0) {
    goto LABEL_64;
  }
  sub_1000719BC(v24, 9u, 1);
  sub_1000719BC(v25, 9u, 0);
LABEL_44:
  sub_100072254(&v29);
LABEL_45:
  if (SHIBYTE(v32) < 0) {
    operator delete(__p);
  }
}

uint64_t sub_1000A5088(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16;
      if ((result & 7) == 0) {
        return sub_1000CC9D0(result);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A50A8(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16;
      if ((result & 7) == 0) {
        return sub_1000CDAB8(result);
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000A50C8(uint64_t a1, int a2)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_68;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_68;
  }
  uint64_t v4 = sub_100063334(a1, 4u);
  uint64_t v5 = sub_10006D8BC(v4);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_68;
  }
  uint64_t v6 = sub_10009EF00(v5, a1, 4u);
  int v7 = v6;
  if (v6)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_68;
    }
    uint64_t v8 = qword_10013C990;
    if (!qword_10013C990)
    {
      qword_10013C990 = v6;
      uint64_t v8 = v6;
    }
  }
  else
  {
    uint64_t v8 = qword_10013C990;
    if (!qword_10013C990)
    {
      qword_10013C990 = 0;
      sub_1000EE4F4(0, 4, "%s:%d No RemoteUI Object, cannot handle EnterRemoteUIMode!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 790);
      uint64_t v8 = qword_10013C990;
      if (!qword_10013C990)
      {
LABEL_14:
        sub_1000EE4F4(0, 4, "%s:%d RemoteUI Object does not match, cannot handle EnterRemoteUIMode! %hhx != %hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 795, v8, v7);
        uint64_t v8 = qword_10013C990;
        if (!qword_10013C990)
        {
LABEL_18:
          sub_100063380(a1, 4u);
          return;
        }
        goto LABEL_15;
      }
    }
  }
  if ((v8 & 7) != 0 || ((v8 + 8) & 7) != 0) {
    goto LABEL_68;
  }
  if (*(void *)(v8 + 8) != a1) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v8 & 7) == 0 && ((v8 + 8) & 7) == 0)
  {
    if (*(void *)(v8 + 8) != a1) {
      goto LABEL_18;
    }
    unint64_t v9 = (uint64_t *)(v8 + 1192);
    if ((v9 & 7) == 0)
    {
      uint64_t v10 = *v9;
      if (!*v9) {
        goto LABEL_18;
      }
      if ((v10 & 7) == 0)
      {
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v10 + 96))(v10)) {
          goto LABEL_18;
        }
        sub_10006D90C(a1);
        if (v11)
        {
          sub_10006D90C(a1);
          if (!v12) {
            goto LABEL_68;
          }
          if ((v12 & 7) != 0) {
            goto LABEL_68;
          }
          if (!qword_10013C990) {
            goto LABEL_68;
          }
          if ((qword_10013C990 & 7) != 0) {
            goto LABEL_68;
          }
          if (((qword_10013C990 + 1376) & 7) != 0) {
            goto LABEL_68;
          }
          sub_10006AE88(v12, *(_DWORD *)(qword_10013C990 + 1376));
          uint64_t v13 = qword_10013C990;
          if (!qword_10013C990) {
            goto LABEL_68;
          }
          if ((qword_10013C990 & 7) != 0) {
            goto LABEL_68;
          }
          if ((((_BYTE)qword_10013C990 + 104) & 7) != 0) {
            goto LABEL_68;
          }
          *(unsigned char *)(qword_10013C990 + 1384) = 0;
          if (!v13) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v13 = qword_10013C990;
          if (!qword_10013C990) {
            goto LABEL_68;
          }
        }
        if ((v13 & 7) != 0) {
          goto LABEL_68;
        }
        if ((((_BYTE)v13 + 100) & 3) != 0) {
          goto LABEL_68;
        }
        *(_DWORD *)(v13 + 1380) = 0;
        uint64_t v14 = (_DWORD *)(v13 + 1388);
        if ((v14 & 3) != 0) {
          goto LABEL_68;
        }
        *uint64_t v14 = 0;
        sub_100062FD8(a1, 4u, 0);
        sub_100062F84(a1, 4u, 0);
        if (!qword_10013C990) {
          goto LABEL_68;
        }
        if ((qword_10013C990 & 7) != 0) {
          goto LABEL_68;
        }
        if (((qword_10013C990 + 1416) & 7) != 0) {
          goto LABEL_68;
        }
        sub_1000A4B14(qword_10013C990 + 1416, 0);
        if (!qword_10013C990) {
          goto LABEL_68;
        }
        if ((qword_10013C990 & 7) != 0) {
          goto LABEL_68;
        }
        if (((qword_10013C990 + 1220) & 3) != 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(qword_10013C990 + 1220) = 0;
        uint64_t v15 = sub_10003E5D0();
        if (!v15) {
          goto LABEL_68;
        }
        if ((v15 & 7) != 0) {
          goto LABEL_68;
        }
        (*(void (**)(uint64_t, void))(*(void *)v15 + 632))(v15, 0);
        if (!qword_10013C990) {
          goto LABEL_68;
        }
        if ((qword_10013C990 & 7) != 0) {
          goto LABEL_68;
        }
        uint64_t v16 = (uint64_t *)(qword_10013C990 + 1192);
        if (((qword_10013C990 + 1192) & 7) != 0) {
          goto LABEL_68;
        }
        uint64_t v17 = *v16;
        if (!*v16) {
          goto LABEL_68;
        }
        if ((v17 & 7) != 0) {
          goto LABEL_68;
        }
        (*(void (**)(uint64_t, void))(*(void *)v17 + 88))(v17, 0);
        sub_1000A4B88(0, a1, a2);
        uint64_t v18 = sub_10004CDB4();
        if (!v18 || (v18 & 7) != 0) {
          goto LABEL_68;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 80))(v18))
        {
          uint64_t v19 = sub_10006346C(a1);
          if (!v19 || (v19 & 7) != 0) {
            goto LABEL_68;
          }
          sub_1000A5504(v19);
        }
        if (qword_10013C990)
        {
          if ((qword_10013C990 & 7) == 0)
          {
            uint64_t v20 = (uint64_t *)(qword_10013C990 + 1424);
            if (((qword_10013C990 + 1424) & 7) == 0)
            {
              uint64_t v21 = *v20;
              if (*v20)
              {
                if ((v21 & 7) == 0)
                {
                  sub_1000B5B3C(v21);
                  operator delete();
                }
              }
              else
              {
                uint64_t v22 = sub_10005176C();
                if (v22 && (v22 & 7) == 0)
                {
                  (*(void (**)(uint64_t, void, void))(*(void *)v22 + 600))(v22, 0, 0);
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_68:
  __break(0x5516u);
}

uint64_t sub_1000A5504(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16;
      if ((result & 7) == 0) {
        return sub_1000CE01C(result);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000A5524(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_115;
  }
  int v5 = a3;
  if (a2 <= 31)
  {
    if (a2 != 1)
    {
      if (a2 != 4)
      {
        if (a2 != 8) {
          goto LABEL_118;
        }
        if (!qword_10013C990 || (qword_10013C990 & 7) != 0) {
          goto LABEL_115;
        }
        pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
        *(_DWORD *)(a1 + 1380) = 0;
        sub_10006D90C(*(void *)(a1 + 8));
        if (!v6) {
          goto LABEL_13;
        }
        sub_10006D90C(*(void *)(a1 + 8));
        if (v7 && (v7 & 7) == 0)
        {
          sub_10006AE88(v7, *(_DWORD *)(a1 + 1376));
          *(unsigned char *)(a1 + 1384) = 0;
LABEL_13:
          *(_DWORD *)(a1 + 1388) = 0;
          uint64_t v8 = *(void *)(a1 + 8);
          if (v8)
          {
            if ((v8 & 7) == 0)
            {
              sub_100062FD8(v8, 4u, 0);
              uint64_t v9 = *(void *)(a1 + 8);
              if (v9)
              {
                if ((v9 & 7) == 0)
                {
                  sub_100062F84(v9, 4u, 0);
                  *(unsigned char *)(a1 + 1412) = 0;
                  sub_1000A423C(a1);
                  sub_1000A50C8(*(void *)(a1 + 8), 0);
                  *(void *)(a1 + 1208) = 0;
                  uint64_t v11 = qword_10013C990;
                  if (qword_10013C990)
                  {
                    if ((qword_10013C990 & 7) == 0)
                    {
                      uint64_t v12 = v10;
LABEL_20:
                      pthread_mutex_unlock((pthread_mutex_t *)(v11 + 1224));
                      return v12;
                    }
                  }
                }
              }
            }
          }
          goto LABEL_115;
        }
        goto LABEL_115;
      }
      if (!qword_10013C990 || (qword_10013C990 & 7) != 0) {
        goto LABEL_115;
      }
      pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
      *(_DWORD *)(a1 + 1380) = 0;
      sub_10006D90C(*(void *)(a1 + 8));
      if (v20)
      {
        sub_10006D90C(*(void *)(a1 + 8));
        if (!v21 || (v21 & 7) != 0) {
          goto LABEL_115;
        }
        sub_10006AE88(v21, *(_DWORD *)(a1 + 1376));
        *(unsigned char *)(a1 + 1384) = 0;
      }
      uint64_t v22 = *(void *)(a1 + 8);
      if (v22)
      {
        if ((v22 & 7) == 0)
        {
          sub_100062FD8(v22, 4u, 0);
          uint64_t v23 = *(void *)(a1 + 8);
          if (v23)
          {
            if ((v23 & 7) == 0)
            {
              sub_100062F84(v23, 4u, 0);
              *(unsigned char *)(a1 + 1412) = 0;
              *(_DWORD *)(a1 + 1216) = 1;
              *(void *)(a1 + 1208) = a4;
              if (qword_10013C990)
              {
                if ((qword_10013C990 & 7) == 0)
                {
                  pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C990 + 1224));
                  uint64_t v24 = sub_10004E9C8();
                  if (v24)
                  {
                    if ((v24 & 7) == 0)
                    {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)v24 + 160))(v24, 3600000);
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_115:
      __break(0x5516u);
      goto LABEL_116;
    }
    if ((unint64_t)(a3 - 7) >= 2)
    {
      if (a3 == 6)
      {
        if (qword_10013C990)
        {
          if ((qword_10013C990 & 7) == 0)
          {
            pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
            uint64_t v40 = *(void *)(a1 + 1192);
            if (v40)
            {
              if ((v40 & 7) == 0)
              {
                if ((*(unsigned int (**)(uint64_t))(*(void *)v40 + 96))(v40))
                {
                  uint64_t v12 = sub_1000A5B10(a1, 0);
                  *(_DWORD *)(a1 + 1388) = sub_10006FADC();
                }
                else
                {
                  uint64_t v12 = 0;
                }
                uint64_t v11 = qword_10013C990;
                if (qword_10013C990)
                {
                  if ((qword_10013C990 & 7) == 0) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        goto LABEL_115;
      }
      if (a3 != 5) {
        return 0;
      }
    }
    if (!qword_10013C990) {
      goto LABEL_115;
    }
    if ((qword_10013C990 & 7) != 0) {
      goto LABEL_115;
    }
    pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
    uint64_t v15 = *(void *)(a1 + 1192);
    if (!v15 || (v15 & 7) != 0) {
      goto LABEL_115;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 96))(v15))
    {
      sub_10006D90C(*(void *)(a1 + 8));
      if (v16)
      {
        sub_10006D90C(*(void *)(a1 + 8));
        if (!v17 || (v17 & 7) != 0) {
          goto LABEL_115;
        }
        sub_10006AE88(v17, *(_DWORD *)(a1 + 1376));
        *(unsigned char *)(a1 + 1384) = 0;
      }
      *(_DWORD *)(a1 + 1388) = 0;
    }
    goto LABEL_49;
  }
  if (a2 != 32)
  {
    if (a2 != 64)
    {
      if (a2 != 256) {
        goto LABEL_118;
      }
      if (a3 <= 3)
      {
        if (a3 >= 2)
        {
LABEL_116:
          __break(0x5518u);
          goto LABEL_117;
        }
        if (!qword_10013C990 || (qword_10013C990 & 7) != 0) {
          goto LABEL_115;
        }
        pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
        if (v5) {
          goto LABEL_49;
        }
        if (*(unsigned __int8 *)(a1 + 1220) <= 1u)
        {
          if (*(unsigned char *)(a1 + 1220))
          {
            uint64_t v13 = sub_10004E9C8();
            if (!v13) {
              goto LABEL_115;
            }
            if ((v13 & 7) != 0) {
              goto LABEL_115;
            }
            (*(void (**)(uint64_t, uint64_t))(*(void *)v13 + 160))(v13, 3600000);
            uint64_t v14 = sub_10004E9C8();
            if (!v14 || (v14 & 7) != 0) {
              goto LABEL_115;
            }
            (*(void (**)(uint64_t))(*(void *)v14 + 168))(v14);
          }
LABEL_49:
          uint64_t v18 = qword_10013C990;
          if (!qword_10013C990) {
            goto LABEL_115;
          }
LABEL_102:
          if ((v18 & 7) != 0) {
            goto LABEL_115;
          }
          pthread_mutex_unlock((pthread_mutex_t *)(v18 + 1224));
          return 0;
        }
      }
LABEL_117:
      __break(0x550Au);
LABEL_118:
      sub_1000F2700();
    }
    if (!qword_10013C990 || (qword_10013C990 & 7) != 0) {
      goto LABEL_115;
    }
    uint64_t v26 = pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224));
    if (*(void *)(a1 + 1208))
    {
      uint64_t v27 = sub_10006D8BC(v26);
      if (!v27 || (v27 & 7) != 0) {
        goto LABEL_115;
      }
      uint64_t v28 = sub_1000601E8(v27, *(void *)(a1 + 1208));
      if ((v28 + 8) >= 0x10) {
        goto LABEL_117;
      }
      int v29 = v28;
      if (v28 >= 0xFFFFFFFE)
      {
        uint64_t v30 = sub_10006D8BC(v28);
        if (!v30 || (v30 & 7) != 0) {
          goto LABEL_115;
        }
        if ((sub_10009F8A0(v30, *(void *)(a1 + 1208)) & 3) != 0) {
          sub_1000A50C8(*(void *)(a1 + 8), 0);
        }
      }
      uint64_t v31 = sub_10004CDB4();
      if (!v31 || (v31 & 7) != 0) {
        goto LABEL_115;
      }
      int v32 = (*(uint64_t (**)(uint64_t))(*(void *)v31 + 80))(v31);
      if (v29 >= 4 && v32)
      {
        uint64_t v33 = *(void *)(a1 + 1192);
        if (!v33 || (v33 & 7) != 0) {
          goto LABEL_115;
        }
        uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)v33 + 96))(v33);
        if (v34)
        {
          uint64_t v35 = sub_10006D8BC(v34);
          if (!v35
            || (v35 & 7) != 0
            || !qword_10013C990
            || (qword_10013C990 & 7) != 0
            || ((qword_10013C990 + 1208) & 7) != 0)
          {
            goto LABEL_115;
          }
          if (sub_10009FE80(v35, *(void *)(qword_10013C990 + 1208)) != 56)
          {
            uint64_t v36 = *(void *)(a1 + 8);
            if (!v36) {
              goto LABEL_115;
            }
            if ((v36 & 7) != 0) {
              goto LABEL_115;
            }
            uint64_t v37 = sub_10006346C(v36);
            if (!v37) {
              goto LABEL_115;
            }
            uint64_t v38 = v37;
            if ((v37 & 7) != 0) {
              goto LABEL_115;
            }
            unsigned int v39 = sub_100086230(v37);
            if (sub_1000A5088(v38))
            {
              if (v39 > 3) {
                goto LABEL_117;
              }
              if (!v39) {
                sub_1000A50A8(v38);
              }
            }
          }
        }
      }
    }
    uint64_t v18 = qword_10013C990;
    if (!qword_10013C990) {
      goto LABEL_115;
    }
    goto LABEL_102;
  }
  return sub_1000A6F60(a1, 1);
}

uint64_t sub_1000A5B10(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_233;
  }
  sub_10006D90C(*(void *)(a1 + 8));
  if (v4)
  {
    sub_10006D90C(*(void *)(a1 + 8));
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_233;
    }
    sub_10006AE88(v5, *(_DWORD *)(a1 + 1376));
    *(unsigned char *)(a1 + 1384) = 0;
  }
  uint64_t v6 = &unk_10013C000;
  if (!qword_10013C990 || (qword_10013C990 & 7) != 0 || ((qword_10013C990 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  int v7 = *(_DWORD *)(qword_10013C990 + 1380);
  pthread_mutex_lock(&stru_10013B6E0);
  int v8 = *(_DWORD *)(a1 + 1344);
  *(_DWORD *)(a1 + 1344) = 0;
  __int16 v74 = v8;
  unsigned int v9 = v7 & ~dword_10013B6D8 | v8;
  pthread_mutex_unlock(&stru_10013B6E0);
  if (!v9) {
    return 0;
  }
  unsigned int v10 = *(_DWORD *)(a1 + 1296);
  if (v10 >= 8) {
    goto LABEL_234;
  }
  uint64_t v11 = (_OWORD *)(a1 + 1300);
  unsigned int v69 = *(_DWORD *)(a1 + 1300);
  if (v69 > 3) {
    goto LABEL_234;
  }
  unsigned int v12 = *(unsigned __int8 *)(a1 + 1332);
  if (v12 > 1) {
    goto LABEL_234;
  }
  unsigned int v13 = *(unsigned __int8 *)(a1 + 1333);
  if (v13 > 1) {
    goto LABEL_234;
  }
  unsigned int v68 = *(unsigned __int8 *)(a1 + 1334);
  if (v68 > 1) {
    goto LABEL_234;
  }
  uint64_t v70 = *(void *)(a1 + 1288);
  uint64_t v14 = (unsigned int *)(a1 + 1296);
  int v73 = *(_DWORD *)(a1 + 1308);
  int v71 = *(_DWORD *)(a1 + 1320);
  int v63 = *(_DWORD *)(a1 + 1324);
  int v64 = *(_DWORD *)(a1 + 1336);
  int v61 = *(_DWORD *)(a1 + 1312);
  int v62 = *(_DWORD *)(a1 + 1328);
  int v66 = *(unsigned __int8 *)(a1 + 1348);
  int v67 = *(_DWORD *)(a1 + 1340);
  int v65 = *(unsigned __int8 *)(a1 + 1349);
  uint64_t v15 = sub_10006DBC0((_DWORD *)(a1 + 1300), (int *)(a1 + 1296));
  if (v15 > 0x1F) {
LABEL_234:
  }
    __break(0x550Au);
  if (v15) {
    goto LABEL_232;
  }
  if (*v14 > 7) {
    goto LABEL_234;
  }
  int v72 = v74 & 0x104;
  if (*v14)
  {
    if ((v9 & 0xDE4) != 0)
    {
      uint64_t v16 = *(void *)(a1 + 1200);
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_233;
      }
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 376))(v16);
      *(_DWORD *)(a1 + 1304) = v15;
      v9 |= 0x100u;
    }
    if ((v9 & 0x1000) != 0)
    {
      uint64_t v17 = *(void *)(a1 + 1200);
      if (!v17 || (v17 & 7) != 0) {
        goto LABEL_233;
      }
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 392))(v17);
      *(_DWORD *)(a1 + 1340) = v15;
    }
    if ((v9 & 0xF8) != 0)
    {
      uint64_t v18 = *(void *)(a1 + 1200);
      if (!v18 || (v18 & 7) != 0) {
        goto LABEL_233;
      }
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 408))(v18);
      *(_DWORD *)(a1 + 1308) = v15;
      unsigned int v19 = v73;
      if (v73 != v15)
      {
        sub_1000EE4F4(6u, 4, "%s:%s-%d oldTrackTimeMs=%d, m_TrackTimeMs=%d", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", "PlayStatusUpdateNoLock", 5952, v73, v15);
        unsigned int v19 = *(_DWORD *)(a1 + 1308);
      }
      *(_DWORD *)(a1 + 1312) = v19 / 0x3E8;
    }
    if ((v9 & 3) != 0)
    {
      uint64_t v20 = *(void *)(a1 + 1200);
      if (!v20) {
        goto LABEL_233;
      }
      if ((v20 & 7) != 0) {
        goto LABEL_233;
      }
      *(unsigned char *)(a1 + 1332) = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 440))(v20);
      uint64_t v21 = *(void *)(a1 + 1200);
      if (!v21 || (v21 & 7) != 0) {
        goto LABEL_233;
      }
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 448))(v21);
      *(unsigned char *)(a1 + 1333) = v15;
    }
    if ((v9 & 0xDE0) != 0)
    {
      v75[0] = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v22 = *(void *)(a1 + 1200);
      if (!v22 || (v22 & 7) != 0) {
        goto LABEL_233;
      }
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 384))(v22);
      v75[0] = v23;
      if (v23)
      {
        uint64_t v24 = v23;
        if ((v23 & 7) != 0) {
          goto LABEL_233;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v23 + 16))(v23))
        {
          if ((v9 & 0x100) != 0) {
            *(void *)(a1 + 1288) = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 24))(v24);
          }
          if ((v9 & 0xE0) != 0)
          {
            if ((v74 & 0x104) != 0 || (int v25 = *(_DWORD *)(a1 + 1316), v25 == -1)) {
              int v25 = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 368))(v24);
            }
            if (v25)
            {
              *(_DWORD *)(a1 + 1316) = v25;
              uint64_t v26 = *(void *)(a1 + 1200);
              if (!v26 || (v26 & 7) != 0) {
                goto LABEL_233;
              }
              uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 208))(v26);
              *(_DWORD *)(a1 + 1320) = v27;
              unsigned int v28 = *(_DWORD *)(a1 + 1308);
              unsigned int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v24 + 376))(v24, v27);
              unsigned int v30 = v28 - v29;
              if (v28 < v29)
              {
LABEL_237:
                __break(0x5515u);
                JUMPOUT(0x1000A6F48);
              }
              *(_DWORD *)(a1 + 1324) = v30;
              unsigned int v31 = v30 / 0x3E8;
              uint64_t v6 = (void *)&unk_10013C000;
            }
            else
            {
              *(void *)(a1 + 1316) = 0xFFFFFFFF00000000;
              unsigned int v31 = -1;
              *(_DWORD *)(a1 + 1324) = -1;
            }
            *(_DWORD *)(a1 + 1328) = v31;
          }
          if (*(unsigned __int8 *)(a1 + 1334) > 1u) {
            goto LABEL_234;
          }
          if (*(unsigned char *)(a1 + 1334)) {
            BOOL v42 = v72 == 0;
          }
          else {
            BOOL v42 = 0;
          }
          int v43 = !v42;
          if ((v9 & 0x400) != 0 && v43)
          {
            if ((v74 & 0x104) != 0) {
              *(unsigned char *)(a1 + 1334) = 0;
            }
            *(unsigned char *)(a1 + 1334) = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 256))(v24);
          }
          if (((v72 != 0) & (v9 >> 11)) != 0 || (v74 & 0x800) != 0) {
            *(_DWORD *)(a1 + 1336) = sub_1000ABE8C(a1, 0x27u, v24);
          }
LABEL_72:
          uint64_t v15 = (uint64_t)sub_100072254(v75);
          if ((v9 & 0x2000) != 0) {
            goto LABEL_73;
          }
          goto LABEL_60;
        }
      }
      unsigned int v35 = sub_10006DBC0((_DWORD *)(a1 + 1300), (int *)(a1 + 1296));
      if (v35 > 0x1F) {
        goto LABEL_234;
      }
      if (!v35) {
        goto LABEL_72;
      }
LABEL_232:
      __break(0x5518u);
      goto LABEL_233;
    }
  }
  else
  {
    *(void *)(a1 + 1288) = -1;
    *uint64_t v11 = xmmword_1000FFB60;
    *(void *)(a1 + 1320) = -1;
    *(_DWORD *)(a1 + 1328) = -1;
    *(_WORD *)(a1 + 1332) = 0;
    *(unsigned char *)(a1 + 1334) = 0;
    *(unsigned char *)(a1 + 1350) = 0;
    *(void *)(a1 + 1336) = 0;
  }
  if ((v9 & 0x2000) != 0)
  {
LABEL_73:
    uint64_t v36 = *(void *)(a1 + 1200);
    if (!v36 || (v36 & 7) != 0) {
      goto LABEL_233;
    }
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v36 + 168))(v36);
    if (v15 >= 0x100) {
      goto LABEL_235;
    }
    *(unsigned char *)(a1 + 1348) = v15;
    if ((v9 & 0x4000) != 0) {
      goto LABEL_77;
    }
LABEL_61:
    if (!a2) {
      goto LABEL_225;
    }
    goto LABEL_62;
  }
LABEL_60:
  if ((v9 & 0x4000) == 0) {
    goto LABEL_61;
  }
LABEL_77:
  uint64_t v37 = *(void *)(a1 + 1200);
  if (!v37 || (v37 & 7) != 0) {
    goto LABEL_233;
  }
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 136))(v37);
  if (v15 > 0xFF)
  {
LABEL_235:
    __break(0x5507u);
    __break(0x5500u);
    goto LABEL_236;
  }
  *(unsigned char *)(a1 + 1349) = v15;
  if (!a2) {
    goto LABEL_225;
  }
LABEL_62:
  memset(v75, 170, 9);
  uint64_t v32 = sub_10006D8BC(v15);
  if (!v32 || (v32 & 7) != 0) {
    goto LABEL_233;
  }
  uint64_t v33 = sub_1000A1140(v32, *(void *)(a1 + 8));
  if (!v33) {
    goto LABEL_232;
  }
  uint64_t v34 = v6[306];
  if (!v34 || (v34 & 7) != 0 || (((_BYTE)v34 + 100) & 3) != 0) {
    goto LABEL_233;
  }
  if (*(unsigned char *)(v34 + 1380))
  {
    LOBYTE(v75[0]) = 17;
    if (*v14 > 7) {
      goto LABEL_234;
    }
    if (*v14)
    {
      if (*(unsigned __int8 *)(a1 + 1332) > 1u) {
        goto LABEL_234;
      }
      if (!v12 || *(unsigned char *)(a1 + 1332))
      {
        if (*(unsigned __int8 *)(a1 + 1333) > 1u) {
          goto LABEL_234;
        }
        if (!v13 || *(unsigned char *)(a1 + 1333)) {
          goto LABEL_97;
        }
        char v38 = 3;
      }
      else
      {
        char v38 = 2;
      }
      LOBYTE(v75[0]) = v38;
    }
    else
    {
      if (!v10) {
        goto LABEL_97;
      }
      LOBYTE(v75[0]) = 0;
    }
    if ((v33 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
      sub_1000C51E0();
    }
    goto LABEL_233;
  }
LABEL_97:
  if ((v34 & 7) != 0) {
    goto LABEL_233;
  }
  unsigned int v39 = (unsigned char *)(v34 + 1380);
  if ((v39 & 3) != 0) {
    goto LABEL_233;
  }
  unsigned int v40 = *v14;
  if ((*v39 & 2) != 0)
  {
    if (v40 > 7) {
      goto LABEL_234;
    }
    if (v40 != v10)
    {
      if (&vars0 != (uint64_t *)103)
      {
        BYTE1(v75[0]) = 17;
        char v41 = 2;
        switch(v40)
        {
          case 0u:
            goto LABEL_125;
          case 1u:
            char v41 = 10;
            goto LABEL_125;
          case 2u:
            char v41 = 11;
            goto LABEL_125;
          case 3u:
            char v41 = 5;
            goto LABEL_125;
          case 4u:
            char v41 = 6;
LABEL_125:
            BYTE1(v75[0]) = v41;
            LOBYTE(v75[0]) = 6;
            unsigned int v44 = *(unsigned __int8 *)(a1 + 1332);
            if (v44 > 1) {
              goto LABEL_234;
            }
            if (*(unsigned char *)(a1 + 1332))
            {
              unsigned int v44 = *(unsigned __int8 *)(a1 + 1333);
              if (v44 > 1) {
                goto LABEL_234;
              }
            }
            if (!(v13 | v12) || v44)
            {
LABEL_133:
              if ((v33 & 7) == 0)
              {
                (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
                sub_1000C51E0();
              }
            }
            else if ((v33 & 7) == 0)
            {
              (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
              sub_1000C51E0();
            }
            return result;
          case 5u:
            LOWORD(v75[0]) = 1798;
            goto LABEL_133;
          default:
            goto LABEL_137;
        }
        goto LABEL_233;
      }
      goto LABEL_236;
    }
  }
  else
  {
    unsigned int v10 = *v14;
    if (v40 > 7) {
      goto LABEL_234;
    }
  }
  if (!v10) {
    goto LABEL_225;
  }
LABEL_137:
  uint64_t v45 = v6[306];
  if (!v45 || (v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1380) & 4) != 0 && (v74 & 0x104) != 0)
  {
    LOBYTE(v75[0]) = 1;
    *(_DWORD *)((char *)v75 + 1) = bswap32(*(_DWORD *)(a1 + 1304));
    if ((v33 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
      sub_1000C51E0();
    }
    goto LABEL_233;
  }
  unsigned int v46 = *(_DWORD *)(a1 + 1308);
  if (v46 != v73)
  {
    if ((v45 & 7) != 0 || (((_BYTE)v45 + 100) & 3) != 0) {
      goto LABEL_233;
    }
    if ((*(unsigned char *)(v45 + 1380) & 8) != 0)
    {
      LOBYTE(v75[0]) = 4;
      *(_DWORD *)((char *)v75 + 1) = bswap32(v46);
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
    if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
      goto LABEL_233;
    }
    if ((*(unsigned char *)(v45 + 1380) & 0x10) != 0)
    {
      unsigned int v47 = *(_DWORD *)(a1 + 1312);
      if (v47 != v61)
      {
        LOBYTE(v75[0]) = 7;
        *(_DWORD *)((char *)v75 + 1) = bswap32(v47);
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
    }
  }
  unsigned int v48 = *(_DWORD *)(a1 + 1320);
  if (v48 != -1)
  {
    if ((v45 & 7) != 0 || (((_BYTE)v45 + 100) & 3) != 0) {
      goto LABEL_233;
    }
    if ((*(unsigned char *)(v45 + 1380) & 0x20) != 0 && v48 != v71)
    {
      LOBYTE(v75[0]) = 5;
      *(_DWORD *)((char *)v75 + 1) = bswap32(v48);
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
    if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
      goto LABEL_233;
    }
    if ((*(unsigned char *)(v45 + 1380) & 0x40) != 0)
    {
      unsigned int v49 = *(_DWORD *)(a1 + 1324);
      if (v49 != v63)
      {
        LOBYTE(v75[0]) = 8;
        *(_DWORD *)((char *)v75 + 1) = bswap32(v49);
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
    }
    if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
      goto LABEL_233;
    }
    if ((*(unsigned char *)(v45 + 1380) & 0x80) != 0)
    {
      unsigned int v50 = *(_DWORD *)(a1 + 1328);
      if (v50 != v62)
      {
        LOBYTE(v75[0]) = 9;
        *(_DWORD *)((char *)v75 + 1) = bswap32(v50);
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
    }
  }
  if ((v45 & 7) != 0 || (((_BYTE)v45 + 100) & 3) != 0) {
    goto LABEL_233;
  }
  if (*(unsigned char *)(v45 + 1381))
  {
    unint64_t v51 = *(void *)(a1 + 1288);
    if (v51 != v70)
    {
      LOBYTE(v75[0]) = 10;
      *(void *)((char *)v75 + 1) = bswap64(v51);
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
  }
  if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1381) & 2) != 0)
  {
    int v52 = *(_DWORD *)v11;
    if (*(_DWORD *)v11 > 3u) {
      goto LABEL_234;
    }
    if (v52 != v69)
    {
      LOBYTE(v75[0]) = 11;
      if (&vars0 != (uint64_t *)103)
      {
        BYTE1(v75[0]) = v52;
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
LABEL_236:
      __break(0x5513u);
      goto LABEL_237;
    }
  }
  if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1381) & 4) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 1334) > 1u) {
      goto LABEL_234;
    }
    if (!v68 && *(unsigned char *)(a1 + 1334))
    {
      LOBYTE(v75[0]) = 12;
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
  }
  if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1381) & 8) != 0)
  {
    unsigned int v53 = *(_DWORD *)(a1 + 1336);
    if ((v74 & 0x104) != 0 || v53 != v64)
    {
      LOBYTE(v75[0]) = 13;
      *(_DWORD *)((char *)v75 + 1) = bswap32(v53);
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
  }
  if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1381) & 0x10) != 0)
  {
    unsigned int v54 = *(_DWORD *)(a1 + 1340);
    if (v54 != v67 || (v74 & 0x1000) != 0)
    {
      LOBYTE(v75[0]) = 14;
      *(_DWORD *)((char *)v75 + 1) = bswap32(v54);
      if ((v33 & 7) == 0)
      {
        (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
        sub_1000C51E0();
      }
      goto LABEL_233;
    }
  }
  if ((v45 & 7) != 0 || ((v45 + 1380) & 3) != 0) {
    goto LABEL_233;
  }
  if ((*(unsigned char *)(v45 + 1381) & 0x20) != 0)
  {
    int v55 = *(unsigned __int8 *)(a1 + 1348);
    if (v55 != v66)
    {
      LOBYTE(v75[0]) = 15;
      if (&vars0 != (uint64_t *)103)
      {
        BYTE1(v75[0]) = v55;
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
      goto LABEL_236;
    }
  }
  if ((v45 & 7) != 0 || (uint64_t v56 = v45 + 1380, (v56 & 3) != 0))
  {
LABEL_233:
    __break(0x5516u);
    goto LABEL_234;
  }
  if ((*(unsigned char *)(v56 + 1) & 0x40) != 0)
  {
    int v57 = *(unsigned __int8 *)(a1 + 1349);
    if (v57 != v65)
    {
      LOBYTE(v75[0]) = 16;
      if (&vars0 != (uint64_t *)103)
      {
        BYTE1(v75[0]) = v57;
        if ((v33 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v33 + 16))(v33, 0);
          sub_1000C51E0();
        }
        goto LABEL_233;
      }
      goto LABEL_236;
    }
  }
LABEL_225:
  if (*(unsigned __int8 *)(a1 + 1384) > 1u) {
    goto LABEL_234;
  }
  if (!*(unsigned char *)(a1 + 1384))
  {
    sub_10006D90C(*(void *)(a1 + 8));
    if (v58)
    {
      *(unsigned char *)(a1 + 1384) = 1;
      sub_10006D90C(*(void *)(a1 + 8));
      if (v59 && (v59 & 7) == 0)
      {
        sub_10006ADC0(v59, *(_DWORD *)(a1 + 1376));
        return 0;
      }
      goto LABEL_233;
    }
  }
  return 0;
}

uint64_t sub_1000A6F60(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && (qword_10013C990 ? (BOOL v3 = (qword_10013C990 & 7) == 0) : (BOOL v3 = 0),
        v3
     && (pthread_mutex_lock((pthread_mutex_t *)(qword_10013C990 + 1224)), uint64_t result = sub_1000A5B10(v2, a2),
                                                                          qword_10013C990)
     && (qword_10013C990 & 7) == 0))
  {
    uint64_t v5 = result;
    pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C990 + 1224));
    return v5;
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000A6FE8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_74;
  }
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = sub_10006D8BC(a1);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_74;
    }
    if (sub_1000A1834(v4, *(void *)(a1 + 8)))
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5 && (v5 & 7) == 0)
      {
        if (sub_1000622BC(v5)) {
          return 89;
        }
        if (a2 && (a2 & 7) == 0)
        {
          unsigned int v7 = *(unsigned __int16 *)(a2 + 126);
          unsigned __int8 v12 = 0;
          if (sub_1000A453C((uint64_t)&v12, *(void *)(a1 + 8))) {
            goto LABEL_15;
          }
          if (v12 >= 2u) {
            goto LABEL_75;
          }
          if (!v12) {
            goto LABEL_15;
          }
          unsigned int v7 = *(unsigned __int16 *)(a2 + 126);
          uint64_t v9 = sub_10004E9C8();
          if (v9)
          {
            if ((v9 & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 160))(v9, 3600000);
              uint64_t v10 = sub_10004E9C8();
              if (v10)
              {
                if ((v10 & 7) == 0)
                {
                  (*(void (**)(uint64_t))(*(void *)v10 + 168))(v10);
                  if (v7 <= 0x4F)
                  {
                    switch(v7)
                    {
                      case 2u:
                        unsigned int v8 = sub_1000A776C(a1, a2);
                        unsigned int v7 = 2;
                        goto LABEL_16;
                      case 4u:
                        unsigned int v8 = sub_1000A794C(a1, a2);
                        unsigned int v7 = 4;
                        goto LABEL_16;
                      case 5u:
                        unsigned int v8 = sub_1000A7B54(a1, a2);
                        unsigned int v7 = 5;
                        goto LABEL_16;
                      case 7u:
                        unsigned int v8 = sub_1000A7E68(a1, a2);
                        unsigned int v7 = 7;
                        goto LABEL_16;
                      case 9u:
                        unsigned int v8 = sub_1000A811C(a1, a2);
                        unsigned int v7 = 9;
                        goto LABEL_16;
                      case 0xBu:
                        unsigned int v8 = sub_1000A81E0(a1, a2);
                        unsigned int v7 = 11;
                        goto LABEL_16;
                      case 0xCu:
                        unsigned int v11 = sub_1000A8324(a1, a2);
                        if (!*(void *)(a2 + 8))
                        {
                          sub_1000C6E1C(a2);
                          return 2;
                        }
                        unsigned int v8 = v11;
                        unsigned int v7 = 12;
                        break;
                      case 0xEu:
                        unsigned int v8 = sub_10006DF7C(a1);
                        unsigned int v7 = 14;
                        goto LABEL_16;
                      case 0x10u:
                        unsigned int v8 = sub_1000A8FD4(a1, a2);
                        uint64_t result = 2;
                        if (!v8 || v8 == 6) {
                          return result;
                        }
                        unsigned int v7 = 16;
                        goto LABEL_16;
                      case 0x12u:
                        unsigned int v8 = sub_1000A90C0(a1, a2);
                        unsigned int v7 = 18;
                        goto LABEL_16;
                      case 0x14u:
                        unsigned int v8 = sub_1000A9150(a1, a2);
                        unsigned int v7 = 20;
                        goto LABEL_16;
                      case 0x16u:
                      case 0x17u:
                      case 0x18u:
                      case 0x1Au:
                      case 0x38u:
                      case 0x3Bu:
                        operator new();
                      case 0x1Cu:
                        unsigned int v8 = sub_1000A926C(a1, a2);
                        unsigned int v7 = 28;
                        goto LABEL_16;
                      case 0x1Eu:
                        unsigned int v8 = sub_1000A9520(a1, a2);
                        unsigned int v7 = 30;
                        goto LABEL_16;
                      case 0x20u:
                        unsigned int v8 = sub_1000A95E0(a1, a2);
                        unsigned int v7 = 32;
                        goto LABEL_16;
                      case 0x22u:
                        unsigned int v8 = sub_1000A9880(a1, a2);
                        unsigned int v7 = 34;
                        goto LABEL_16;
                      case 0x24u:
                        unsigned int v8 = sub_1000A9B20(a1, a2);
                        unsigned int v7 = 36;
                        goto LABEL_16;
                      case 0x26u:
                        unsigned int v8 = sub_1000A9DC0(a1, a2);
                        unsigned int v7 = 38;
                        goto LABEL_16;
                      case 0x28u:
                        unsigned int v8 = sub_1000A9E94(a1, a2);
                        unsigned int v7 = 40;
                        goto LABEL_16;
                      case 0x29u:
                        unsigned int v8 = sub_1000A9F34(a1, a2);
                        unsigned int v7 = 41;
                        goto LABEL_16;
                      case 0x2Au:
                        unsigned int v8 = sub_1000AA650(a1, a2);
                        unsigned int v7 = 42;
                        goto LABEL_16;
                      case 0x2Cu:
                        unsigned int v8 = sub_1000AA80C(a1, a2);
                        unsigned int v7 = 44;
                        goto LABEL_16;
                      case 0x2Eu:
                        unsigned int v8 = sub_1000AA8D0(a1, a2);
                        unsigned int v7 = 46;
                        goto LABEL_16;
                      case 0x2Fu:
                        unsigned int v8 = sub_1000AAA04(a1, a2);
                        unsigned int v7 = 47;
                        goto LABEL_16;
                      case 0x31u:
                        unsigned int v8 = sub_1000AAAC8(a1, a2);
                        unsigned int v7 = 49;
                        goto LABEL_16;
                      case 0x32u:
                        unsigned int v8 = sub_1000AABFC(a1, a2);
                        unsigned int v7 = 50;
                        goto LABEL_16;
                      case 0x33u:
                        unsigned int v8 = sub_1000AAE20(a1, a2);
                        unsigned int v7 = 51;
                        goto LABEL_16;
                      case 0x35u:
                        unsigned int v8 = sub_1000AAF54(a1, a2);
                        unsigned int v7 = 53;
                        goto LABEL_16;
                      case 0x37u:
                        unsigned int v8 = sub_1000AB018(a1, a2);
                        unsigned int v7 = 55;
                        goto LABEL_16;
                      case 0x39u:
                        unsigned int v8 = sub_1000AB3DC(a1, a2);
                        unsigned int v7 = 57;
                        goto LABEL_16;
                      case 0x3Cu:
                      case 0x3Eu:
                      case 0x40u:
                      case 0x42u:
                        operator new();
                      case 0x44u:
                        unsigned int v8 = sub_10007065C(a1, a2);
                        unsigned int v7 = 68;
                        goto LABEL_16;
                      case 0x45u:
                        unsigned int v8 = sub_1000AFED4(a1, a2);
                        unsigned int v7 = 69;
                        goto LABEL_16;
                      case 0x47u:
                        unsigned int v8 = sub_1000708F8(a1, a2);
                        unsigned int v7 = 71;
                        goto LABEL_16;
                      case 0x48u:
                        unsigned int v8 = sub_1000AB544(a1, a2);
                        unsigned int v7 = 72;
                        goto LABEL_16;
                      case 0x4Au:
                        unsigned int v8 = sub_1000AB55C(a1, a2);
                        unsigned int v7 = 74;
                        goto LABEL_16;
                      case 0x4Bu:
                        unsigned int v8 = sub_1000AB868(a1, a2);
                        unsigned int v7 = 75;
                        goto LABEL_16;
                      case 0x4Cu:
                        unsigned int v8 = sub_1000ABAD0(a1, a2);
                        unsigned int v7 = 76;
                        goto LABEL_16;
                      case 0x4Eu:
                        unsigned int v8 = sub_1000ABC5C(a1, a2);
                        uint64_t result = 2;
                        if (!v8 || v8 == 6) {
                          return result;
                        }
                        unsigned int v7 = 78;
                        goto LABEL_16;
                      default:
                        unsigned int v8 = 4;
                        sub_1000EE4F4(0, 4, "%s:%d ERROR: CIapLingoRemoteUI::ProcessCmd Unknown CmdID: 0x%04X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 1436, v7);
                        goto LABEL_16;
                    }
                    goto LABEL_16;
                  }
LABEL_15:
                  unsigned int v8 = 4;
LABEL_16:
                  if (*(unsigned __int16 *)(a2 + 126) != v7) {
                    return sub_1000ABD70(a1, a2, 0, 1u);
                  }
                  if (v8 <= 0x1F)
                  {
                    sub_1000C55C4(a2);
                    return sub_1000ABD70(a1, a2, 0, 1u);
                  }
LABEL_75:
                  __break(0x550Au);
                  JUMPOUT(0x1000A7638);
                }
              }
            }
          }
        }
      }
LABEL_74:
      __break(0x5516u);
      goto LABEL_75;
    }
  }
  return 89;
}

uint64_t sub_1000A776C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t v5 = *(void *)(a1 + 1200);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 384))(v5);
  uint64_t v12 = v6;
  if (!v6) {
    goto LABEL_16;
  }
  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_22;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 16))(v6))
  {
LABEL_16:
    uint64_t v4 = 2;
LABEL_20:
    sub_100072254(&v12);
    return v4;
  }
  unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 368))(v7);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 1200);
    if (v9 && (v9 & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 208))(v9);
      goto LABEL_18;
    }
LABEL_22:
    __break(0x5516u);
  }
  uint64_t result = 0xFFFFFFFFLL;
LABEL_18:
  uint64_t v11 = *(void *)(a2 + 8);
  unsigned int v14 = -1431655766;
  unsigned int v13 = bswap32(result);
  if ((unint64_t)&v13 < 0xFFFFFFFFFFFFFFFCLL)
  {
    unsigned int v14 = bswap32(v8);
    sub_1000C5B58(a2, v11, 0, 4, 3, *(_DWORD *)(a2 + 68), &v13, 8u);
    uint64_t v4 = 0;
    goto LABEL_20;
  }
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A794C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_26;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result)) {
    return 2;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384))(result);
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 16))(result)) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 368))(v5);
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v6 = *(unsigned int **)(a2 + 24);
  if (!v6)
  {
LABEL_26:
    __break(0x5516u);
    goto LABEL_27;
  }
  if (bswap32(*v6) >= result)
  {
LABEL_23:
    uint64_t v4 = 2;
    goto LABEL_24;
  }
  unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 376))(v5);
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  if (v7 < 0xFFFFFC18)
  {
    (*(void (**)(uint64_t, void))(*(void *)result + 344))(result, v7 + 1000);
    uint64_t v4 = 0;
LABEL_24:
    sub_100072254(&v8);
    return v4;
  }
LABEL_27:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A7B54(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_37;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 1200);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_37;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 464))(v4)) {
    return 2;
  }
  uint64_t v6 = *(unsigned int **)(a2 + 24);
  if (!v6) {
    goto LABEL_37;
  }
  unsigned int v7 = *v6;
  uint64_t v8 = *(void *)(a1 + 1200);
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_37;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 384))(v8);
  uint64_t v23 = v9;
  if (!v9)
  {
LABEL_22:
    uint64_t v5 = 2;
LABEL_23:
    sub_100072254(&v23);
    return v5;
  }
  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_37;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v9 + 16))(v9)) {
    goto LABEL_22;
  }
  uint64_t v11 = bswap32(v7);
  unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 368))(v10);
  if (v11 >= v12) {
    goto LABEL_22;
  }
  unsigned int v13 = v12;
  unsigned int v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 376))(v10, v11);
  uint64_t v15 = *(void *)v10;
  unsigned int v16 = (int)v11 + 1 >= v13
      ? (*(uint64_t (**)(uint64_t))(v15 + 128))(v10)
      : (*(unint64_t (**)(uint64_t))(v15 + 376))(v10);
  unsigned int v17 = v16;
  if (v14 > v16) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(a1 + 1200);
  if (!v19 || (v19 & 7) != 0) {
LABEL_37:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 408))(v19);
  unsigned int v20 = result - v14;
  if (result > v17 || result < v14) {
    unsigned int v20 = 0;
  }
  unsigned int v25 = -1431655766;
  if (v17 < v14)
  {
    __break(0x5515u);
  }
  else
  {
    unsigned int v24 = bswap32(v17 - v14);
    if ((unint64_t)&v24 < 0xFFFFFFFFFFFFFFFCLL)
    {
      unsigned int v25 = bswap32(v20);
      uint64_t v22 = *(void *)(a2 + 8);
      if (v22)
      {
        sub_1000C5B58(a2, v22, 0, 4, 6, *(_DWORD *)(a2 + 68), &v24, 8u);
        uint64_t v5 = 0;
        goto LABEL_23;
      }
      __break(0x5518u);
      goto LABEL_37;
    }
  }
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A7E68(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_25;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384))(result);
  uint64_t v10 = result;
  if (!result)
  {
    uint64_t v5 = 2;
LABEL_23:
    sub_100072254(&v10);
    return v5;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
  uint64_t v5 = 2;
  if (!v3 || !result) {
    goto LABEL_23;
  }
  uint64_t v6 = *(unsigned int **)(a2 + 24);
  if (!v6) {
    goto LABEL_25;
  }
  uint64_t v7 = bswap32(*v6);
  if (v7 >= (*(unsigned int (**)(uint64_t))(*(void *)v4 + 368))(v4))
  {
    uint64_t v5 = 4;
    goto LABEL_23;
  }
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v9 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)v4 + 384))(v4, v7, __p);
  if (!result)
  {
    uint64_t v5 = 2;
    if (SHIBYTE(v9) < 0) {
      operator delete(__p[0]);
    }
    goto LABEL_23;
  }
  if ((v3 & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 136))(v3, 4);
    if (result < 0x10000) {
      operator new[]();
    }
    goto LABEL_26;
  }
LABEL_25:
  __break(0x5516u);
LABEL_26:
  __break(0x5507u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A811C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 200))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }
  char v4 = result;
  sub_1000C5B58(a2, v3, 0, 4, 10, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0;
}

uint64_t sub_1000A81E0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_24;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  char v4 = *(unsigned char **)(a2 + 24);
  if (v3 != 2)
  {
    if (v3 != 1) {
      return 4;
    }
    if (v4)
    {
      if ((*v4 + 1) <= 2u)
      {
        uint64_t result = *(void *)(result + 1200);
        if (result && (result & 7) == 0)
        {
          uint64_t v5 = *(void (**)(void))(*(void *)result + 192);
LABEL_21:
          v5();
          return 0;
        }
        goto LABEL_24;
      }
      return 4;
    }
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }
  if (!v4) {
    goto LABEL_24;
  }
  int v6 = *v4;
  if ((v6 + 1) > 2u) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 200))(result);
  *(_WORD *)(v2 + 1393) = 0;
  if (result < 0x100)
  {
    if (result == v6) {
      return 0;
    }
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)result + 192);
      goto LABEL_21;
    }
    goto LABEL_24;
  }
LABEL_25:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000A8324(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_109;
  }
  if (*(_WORD *)(a2 + 128) != 7) {
    return 4;
  }
  int v3 = *(unsigned __int8 **)(a2 + 24);
  if (!v3) {
    goto LABEL_109;
  }
  if (v3 == (unsigned __int8 *)-1) {
    goto LABEL_110;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v5 = *v3;
  unsigned int v6 = *(_DWORD *)(v3 + 1);
  uint64_t v7 = *(void *)(a1 + 1200);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_109;
  }
  unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 392))(v7);
  uint64_t v9 = 4;
  if (v5 <= 8)
  {
    uint64_t v10 = bswap32(v6);
    if (v10 < v8)
    {
      uint64_t v11 = *(void *)(a1 + 1200);
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_109;
      }
      char v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 464))(v11);
      uint64_t v9 = 2;
      if (v4)
      {
        if ((v12 & 1) == 0)
        {
          *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
          *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
          *(_OWORD *)__n = v13;
          long long v54 = v13;
          unint64_t v55 = 0xAAAAAAAAAAAAAAAALL;
          __p = 0;
          uint64_t v57 = 0;
          uint64_t v58 = 0;
          uint64_t v14 = *(void *)(a1 + 1200);
          if (!v14 || (v14 & 7) != 0) {
            goto LABEL_109;
          }
          uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v14 + 400))(v14, v10);
          uint64_t v52 = v15;
          if (v15)
          {
            uint64_t v16 = v15;
            if ((v15 & 7) != 0) {
              goto LABEL_109;
            }
            if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 16))(v15))
            {
              HIBYTE(__n[0]) = v5;
              BYTE6(__n[0]) = 1;
              switch(v5)
              {
                case 0u:
                  unsigned int v17 = sub_1000ABE8C(a1, 0xCu, v16);
                  if ((size_t *)((char *)__n + 7) == (size_t *)-1) {
                    goto LABEL_110;
                  }
                  LODWORD(__n[1]) = bswap32(v17);
                  BYTE6(__n[0]) = 5;
                  unsigned int v18 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 128))(v16);
                  if (v18 == -1)
                  {
                    if (dword_10013B6B8)
                    {
                      unsigned int v18 = 0;
                    }
                    else if (dword_10013B6BC)
                    {
                      unsigned int v18 = 0x7FFFFFFF;
                    }
                    else if (dword_10013B6C0)
                    {
                      unsigned int v18 = 300000;
                    }
                    else if (dword_10013B6C4)
                    {
                      unsigned int v18 = 86400000;
                    }
                    else if (dword_10013B6C8)
                    {
                      unsigned int v18 = 3600000;
                    }
                    else
                    {
                      unsigned int v18 = -1;
                    }
                  }
                  char v45 = BYTE6(__n[0]);
                  unsigned int v46 = (_DWORD *)((char *)__n + BYTE6(__n[0]) + 7);
                  if (__CFADD__((char *)__n + 7, BYTE6(__n[0]))) {
                    goto LABEL_110;
                  }
                  if (!v46) {
                    goto LABEL_109;
                  }
                  *unsigned int v46 = bswap32(v18);
                  BYTE6(__n[0]) = v45 + 4;
                  unsigned int v47 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 368))(v16);
                  if (HIWORD(v47)) {
                    goto LABEL_111;
                  }
                  unsigned int v48 = BYTE6(__n[0]);
                  unsigned int v49 = (_WORD *)((char *)__n + BYTE6(__n[0]) + 7);
                  if (__CFADD__((char *)__n + 7, BYTE6(__n[0]))) {
                    goto LABEL_110;
                  }
                  if (!v49) {
                    goto LABEL_109;
                  }
                  *unsigned int v49 = bswap32(v47) >> 16;
                  if (v48 > 0xFD) {
                    goto LABEL_111;
                  }
                  BYTE6(__n[0]) = v48 + 2;
                  goto LABEL_104;
                case 1u:
                  if (!(*(unsigned int (**)(uint64_t))(*(void *)v16 + 272))(v16)) {
                    break;
                  }
                  goto LABEL_57;
                case 2u:
                  time_t v51 = 0xAAAAAAAAAAAAAAAALL;
                  v50.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
                  *(void *)&long long v20 = 0xAAAAAAAAAAAAAAAALL;
                  *((void *)&v20 + 1) = 0xAAAAAAAAAAAAAAAALL;
                  *(_OWORD *)&v50.tm_mon = v20;
                  *(_OWORD *)&v50.tm_isdst = v20;
                  *(_OWORD *)&v50.tm_sec = v20;
                  if ((*(uint64_t (**)(uint64_t, time_t *))(*(void *)v16 + 224))(v16, &v51))
                  {
                    localtime_r(&v51, &v50);
                    char v21 = LOBYTE(v50.tm_mon) + 1;
                    if (__OFADD__(v50.tm_mon, 1)) {
                      goto LABEL_110;
                    }
                    ++v50.tm_mon;
                    unsigned int v22 = v50.tm_year + 1900;
                    if (__OFADD__(v50.tm_year, 1900)) {
                      goto LABEL_110;
                    }
                    v50.tm_year += 1900;
                    unsigned int tm_wday = v50.tm_wday;
                    if (!v50.tm_wday)
                    {
                      unsigned int tm_wday = 7;
                      v50.unsigned int tm_wday = 7;
                    }
                  }
                  else
                  {
                    unsigned int tm_wday = 0;
                    unsigned int v22 = 0;
                    char v21 = 0;
                    memset(&v50, 0, sizeof(v50));
                  }
                  unint64_t v35 = BYTE6(__n[0]);
                  if (BYTE6(__n[0]) == 255) {
                    goto LABEL_111;
                  }
                  unint64_t v36 = BYTE6(__n[0]) + 1;
                  ++BYTE6(__n[0]);
                  if (v35 > 0x20) {
                    goto LABEL_113;
                  }
                  unint64_t v37 = ~((unint64_t)__n + 7);
                  if (~((unint64_t)__n + 7) < v35) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v35 + 7) = v50.tm_sec;
                  unint64_t v38 = v35 + 2;
                  BYTE6(__n[0]) = v35 + 2;
                  if (v35 > 0x1F) {
                    goto LABEL_113;
                  }
                  if (v37 < v36) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v36 + 7) = v50.tm_min;
                  unint64_t v39 = v35 + 3;
                  BYTE6(__n[0]) = v35 + 3;
                  if (v35 > 0x1E) {
                    goto LABEL_113;
                  }
                  if (v37 < v38) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v38 + 7) = v50.tm_hour;
                  unint64_t v40 = v35 + 4;
                  BYTE6(__n[0]) = v35 + 4;
                  if (v35 > 0x1D) {
                    goto LABEL_113;
                  }
                  if (v37 < v39) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v39 + 7) = v50.tm_mday;
                  unint64_t v41 = v35 + 5;
                  BYTE6(__n[0]) = v35 + 5;
                  if (v35 > 0x1C) {
                    goto LABEL_113;
                  }
                  if (v37 < v40) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v40 + 7) = v21;
                  if (HIWORD(v22))
                  {
LABEL_111:
                    __break(0x5507u);
                    goto LABEL_112;
                  }
                  BOOL v42 = (_WORD *)((char *)__n + v41 + 7);
                  if (!__CFADD__((char *)__n + 7, v41))
                  {
                    if (!v42) {
                      goto LABEL_109;
                    }
                    *BOOL v42 = bswap32(v22) >> 16;
                    unint64_t v43 = v35 + 7;
                    BYTE6(__n[0]) = v35 + 7;
                    if (tm_wday <= 0xFF)
                    {
                      BYTE6(__n[0]) = v35 + 8;
                      if (v35 <= 0x19)
                      {
                        if (v43 <= v37)
                        {
                          *((unsigned char *)__n + v43 + 7) = tm_wday;
                          goto LABEL_104;
                        }
                        goto LABEL_112;
                      }
LABEL_113:
                      __break(0x5512u);
LABEL_114:
                      __break(0x550Au);
                      JUMPOUT(0x1000A8FB0);
                    }
                    goto LABEL_111;
                  }
LABEL_110:
                  __break(0x5500u);
                  goto LABEL_111;
                case 3u:
                  memset(&v50, 0, 24);
                  (*(void (**)(uint64_t, void **))(*(void *)v16 + 72))(v16, &__p);
                  unint64_t v24 = BYTE6(__n[0]);
                  if (BYTE6(__n[0]) == 255) {
                    goto LABEL_111;
                  }
                  unint64_t v25 = BYTE6(__n[0]) + 1;
                  ++BYTE6(__n[0]);
                  unint64_t v26 = ~((unint64_t)__n + 7);
                  if (~((unint64_t)__n + 7) < v24) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v24 + 7) = 0;
                  unint64_t v27 = v24 + 2;
                  BYTE6(__n[0]) = v24 + 2;
                  if (v26 < v25) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v25 + 7) = 0;
                  unint64_t v28 = v24 + 3;
                  BYTE6(__n[0]) = v24 + 3;
                  if (v26 < v27) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v27 + 7) = 0;
                  uint64_t v29 = HIBYTE(v58);
                  if (v58 < 0) {
                    uint64_t v29 = v57;
                  }
                  if (v29) {
                    goto LABEL_42;
                  }
                  BYTE6(__n[0]) = v24 + 4;
                  if (v26 < v28) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v28 + 7) = 0;
LABEL_42:
                  std::string::~string((std::string *)&v50);
                  goto LABEL_104;
                case 4u:
                  uint64_t v30 = *(void *)(a1 + 1200);
                  if (!v30 || (v30 & 7) != 0) {
                    goto LABEL_109;
                  }
                  int v31 = (*(uint64_t (**)(uint64_t))(*(void *)v30 + 376))(v30);
                  BYTE6(__n[0]) = 2;
                  if ((size_t *)((char *)__n + 7) == (size_t *)-1) {
                    goto LABEL_112;
                  }
                  LOWORD(__n[1]) = 0;
                  BYTE6(__n[0]) = 4;
                  BYTE2(__n[1]) = 0;
                  if (v31 == v10)
                  {
                    if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 256))(v16))
                    {
                      (*(void (**)(uint64_t, void **))(*(void *)v16 + 96))(v16, &__p);
                      goto LABEL_104;
                    }
                    unsigned int v44 = BYTE6(__n[0]);
                    if (BYTE6(__n[0]) == 255) {
                      goto LABEL_111;
                    }
                    ++BYTE6(__n[0]);
                  }
                  else
                  {
                    BYTE6(__n[0]) = 5;
                    unsigned int v44 = 4;
                  }
                  if (~((unint64_t)__n + 7) >= v44)
                  {
                    *((unsigned char *)__n + v44 + 7) = 0;
                    sub_1000AC1DC((uint64_t)&__p);
LABEL_104:
                    if ((v4 & 7) == 0)
                    {
                      if (!((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v4 + 136))(v4, 4) >> 16)) {
                        operator new[]();
                      }
                      goto LABEL_111;
                    }
LABEL_109:
                    __break(0x5516u);
                  }
LABEL_112:
                  __break(0x5513u);
                  goto LABEL_113;
                case 5u:
                  (*(void (**)(uint64_t, void **))(*(void *)v16 + 56))(v16, &__p);
                  goto LABEL_58;
                case 6u:
                  (*(void (**)(uint64_t, void **))(*(void *)v16 + 64))(v16, &__p);
                  goto LABEL_58;
                case 7u:
                  sub_10006F5B8(a1, v16, (uint64_t)__n + 7, 0x21u, (unsigned char *)__n + 6);
                  if (v32 >= 0x20) {
                    goto LABEL_114;
                  }
                  uint64_t v9 = v32;
                  if (!v32) {
                    goto LABEL_104;
                  }
                  break;
                case 8u:
                  if (!(*(unsigned int (**)(uint64_t))(*(void *)v16 + 280))(v16)) {
                    break;
                  }
LABEL_57:
                  (*(void (**)(uint64_t, void **))(*(void *)v16 + 40))(v16, &__p);
LABEL_58:
                  uint64_t v33 = HIBYTE(v58);
                  if (v58 < 0) {
                    uint64_t v33 = v57;
                  }
                  if (v33) {
                    goto LABEL_104;
                  }
                  uint64_t v34 = BYTE6(__n[0]);
                  if (BYTE6(__n[0]) == 255) {
                    goto LABEL_111;
                  }
                  ++BYTE6(__n[0]);
                  if (__CFADD__((char *)__n + 7, v34)) {
                    goto LABEL_112;
                  }
                  *((unsigned char *)__n + v34 + 7) = 0;
                  goto LABEL_104;
                default:
                  break;
              }
            }
          }
          sub_100072254(&v52);
          if (SHIBYTE(v58) < 0) {
            operator delete(__p);
          }
        }
      }
    }
  }
  return v9;
}

uint64_t sub_1000A8FD4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_14;
  }
  if (*(_WORD *)(a2 + 128) != 10) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  unint64_t v3 = *(void *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result);
  if (result) {
    return 4;
  }
  if (!v3)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  if (v3 > 0xFFFFFFFFFFFFFFF9)
  {
LABEL_15:
    __break(0x5500u);
    goto LABEL_16;
  }
  uint64_t result = sub_10006F440(v2);
  if (result >= 0x20) {
LABEL_16:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000A90C0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  __int16 v2 = 3585;
  if (dword_10013B6CC) {
    HIBYTE(v2) = 12;
  }
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else if (*(_WORD *)(a2 + 128))
  {
    return 4;
  }
  else
  {
    sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 4, 19, *(_DWORD *)(a2 + 68), &v2, 2u);
    return 0;
  }
  return result;
}

uint64_t sub_1000A9150(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  memset(__p, 170, sizeof(__p));
  uint64_t result = sub_10005176C();
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x5500u);
    goto LABEL_24;
  }
  uint64_t result = (uint64_t)(*(void *(**)(void **__return_ptr))(*(void *)result + 88))(__p);
  uint64_t v4 = (void *)HIBYTE(__p[2]);
  if (SHIBYTE(__p[2]) < 0) {
    uint64_t v4 = __p[1];
  }
  if (!v4)
  {
    uint64_t v3 = 2;
    if ((HIBYTE(__p[2]) & 0x80) == 0) {
      return v3;
    }
    goto LABEL_18;
  }
  if (SHIBYTE(__p[2]) >= 0) {
    unsigned int v5 = __p;
  }
  else {
    unsigned int v5 = (void **)__p[0];
  }
  if (v4 == (void *)-1) {
    goto LABEL_23;
  }
  if (!(((unint64_t)v4 + 1) >> 16))
  {
    sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 4, 21, *(_DWORD *)(a2 + 68), v5, (unsigned __int16)((_WORD)v4 + 1));
    uint64_t v3 = 0;
    if ((HIBYTE(__p[2]) & 0x80) == 0) {
      return v3;
    }
LABEL_18:
    operator delete(__p[0]);
    return v3;
  }
LABEL_24:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000A926C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_36;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t v5 = *(void *)(a1 + 1200);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 416))(v5);
  if (result >= 4)
  {
    __break(0x550Au);
    goto LABEL_38;
  }
  char v6 = result;
  if (result)
  {
    uint64_t v7 = *(void *)(a1 + 1200);
    if (v7)
    {
      if ((v7 & 7) == 0)
      {
        unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 408))(v7);
        uint64_t v9 = *(void *)(a1 + 1200);
        if (v9)
        {
          if ((v9 & 7) == 0)
          {
            uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 384))(v9);
            uint64_t v11 = v10;
            unint64_t v13 = v10;
            if (!v10) {
              goto LABEL_21;
            }
            if ((v10 & 7) == 0)
            {
              if (!(*(unsigned int (**)(uint64_t))(*(void *)v10 + 16))(v10))
              {
LABEL_20:
                LODWORD(v11) = 0;
                goto LABEL_21;
              }
              LODWORD(v11) = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 128))(v11);
              if (v11 == -1)
              {
                if (!dword_10013B6B8)
                {
                  if (dword_10013B6BC)
                  {
                    LODWORD(v11) = 0x7FFFFFFF;
                  }
                  else if (dword_10013B6C0)
                  {
                    LODWORD(v11) = 300000;
                  }
                  else if (dword_10013B6C4)
                  {
                    LODWORD(v11) = 86400000;
                  }
                  else if (dword_10013B6C8)
                  {
                    LODWORD(v11) = 3600000;
                  }
                  else
                  {
                    LODWORD(v11) = -1;
                  }
                  goto LABEL_21;
                }
                goto LABEL_20;
              }
LABEL_21:
              uint64_t result = (uint64_t)sub_100072254(&v13);
              goto LABEL_23;
            }
          }
        }
      }
    }
LABEL_36:
    __break(0x5516u);
  }
  unsigned int v8 = 0;
  LODWORD(v11) = 0;
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 8);
  char v14 = -86;
  unint64_t v13 = bswap32(v11) | 0xAAAAAAAA00000000;
  if ((unint64_t)&v13 >= 0xFFFFFFFFFFFFFFFCLL)
  {
LABEL_38:
    __break(0x5500u);
    goto LABEL_39;
  }
  HIDWORD(v13) = bswap32(v8);
  if ((unint64_t)&v13 >= 0xFFFFFFFFFFFFFFF8)
  {
LABEL_39:
    __break(0x5513u);
    return result;
  }
  char v14 = v6;
  sub_1000C5B58(a2, v12, 0, 4, 29, *(_DWORD *)(a2 + 68), &v13, 9u);
  return 0;
}

uint64_t sub_1000A9520(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    unsigned int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 376))(result);
    uint64_t v4 = *(void *)(a2 + 8);
    unsigned int v5 = bswap32(v3);
    sub_1000C5B58(a2, v4, 0, 4, 31, *(_DWORD *)(a2 + 68), &v5, 4u);
    return 0;
  }
  return result;
}

uint64_t sub_1000A95E0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_23;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  unsigned int v3 = *(unsigned int **)(a2 + 24);
  if (!v3) {
    goto LABEL_23;
  }
  unsigned int v4 = *v3;
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v5) {
    sub_1000F2364();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result)) {
    return 4;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400))(result, bswap32(v4));
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_20;
  }
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
  if (!result)
  {
LABEL_20:
    sub_100072254(&v6);
    return 4;
  }
  if ((v5 & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136))(v5, 4);
    if (result < 0x10000) {
      operator new[]();
    }
    goto LABEL_24;
  }
LABEL_23:
  __break(0x5516u);
LABEL_24:
  __break(0x5507u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A9880(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_23;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  unsigned int v3 = *(unsigned int **)(a2 + 24);
  if (!v3) {
    goto LABEL_23;
  }
  unsigned int v4 = *v3;
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v5) {
    sub_1000F2364();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result)) {
    return 4;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400))(result, bswap32(v4));
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_20;
  }
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
  if (!result)
  {
LABEL_20:
    sub_100072254(&v6);
    return 4;
  }
  if ((v5 & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136))(v5, 4);
    if (result < 0x10000) {
      operator new[]();
    }
    goto LABEL_24;
  }
LABEL_23:
  __break(0x5516u);
LABEL_24:
  __break(0x5507u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A9B20(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_23;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  unsigned int v3 = *(unsigned int **)(a2 + 24);
  if (!v3) {
    goto LABEL_23;
  }
  unsigned int v4 = *v3;
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v5) {
    sub_1000F2364();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result)) {
    return 4;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400))(result, bswap32(v4));
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_20;
  }
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
  if (!result)
  {
LABEL_20:
    sub_100072254(&v6);
    return 4;
  }
  if ((v5 & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136))(v5, 4);
    if (result < 0x10000) {
      operator new[]();
    }
    goto LABEL_24;
  }
LABEL_23:
  __break(0x5516u);
LABEL_24:
  __break(0x5507u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000A9DC0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_18;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  if (v3 != 4 && v3 != 1) {
    return 4;
  }
  unsigned int v4 = *(unsigned int **)(a2 + 24);
  if (v3 == 1)
  {
    if (v4)
    {
      if (*(unsigned char *)v4) {
        unsigned int v5 = 45;
      }
      else {
        unsigned int v5 = 0;
      }
      goto LABEL_14;
    }
LABEL_18:
    __break(0x5516u);
    return result;
  }
  if (!v4) {
    goto LABEL_18;
  }
  unsigned int v5 = bswap32(*v4);
  if (v5 >> 15) {
    return 4;
  }
LABEL_14:
  int v6 = *(_DWORD *)(result + 1380);
  if (v5 == v6) {
    return 0;
  }
  *(_DWORD *)(result + 1380) = v5;
  int v7 = v5 & ~v6;
  *(_DWORD *)(result + 1344) |= v7;
  sub_1000A6F60(result, 0);
  uint64_t result = 0;
  *(_DWORD *)(v2 + 1344) |= v7;
  return result;
}

uint64_t sub_1000A9E94(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (!a2) {
    goto LABEL_16;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_16;
  }
  int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t result = sub_1000708B8(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  if (v4 != 4) {
    return 4;
  }
  int v6 = *(unsigned int **)(a2 + 24);
  if (v6)
  {
    int v7 = sub_1000AD9A0(v2, v5, bswap32(*v6));
    if (v7 == 22) {
      unsigned int v8 = 4;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v7) {
      return v8;
    }
    else {
      return 0;
    }
  }
  else
  {
LABEL_16:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000A9F34(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_81;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_81;
  }
  if (!a2) {
    goto LABEL_81;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_81;
  }
  uint64_t v4 = *(void *)(a1 + 1200);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_81;
  }
  int v5 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 384))(v4);
  uint64_t v33 = v6;
  if (v5 != 1)
  {
    uint64_t v13 = 4;
    goto LABEL_57;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(a1 + 1200);
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_81;
  }
  unsigned int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 416))(v8);
  uint64_t v10 = *(unsigned char **)(a2 + 24);
  if (!v10)
  {
    __break(0x5518u);
    goto LABEL_81;
  }
  unsigned int v11 = *v10;
  if (v11 > 0xF)
  {
LABEL_82:
    __break(0x550Au);
LABEL_83:
    __break(0x5515u);
    JUMPOUT(0x1000AA618);
  }
  switch(*v10)
  {
    case 1:
      uint64_t v12 = *(void *)(a1 + 1200);
      if (!v12 || (v12 & 7) != 0) {
        goto LABEL_81;
      }
      uint64_t v13 = 0;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, void, void))(*(void *)v12 + 296))(v12, 1, *(void *)(a2 + 8), 0))goto LABEL_56; {
      sub_1000719BC(a1, 0, 1);
      }
      uint64_t v14 = a1;
      unsigned int v15 = 0;
      goto LABEL_53;
    case 2:
      sub_1000719BC(a1, 7u, 1);
      uint64_t v14 = a1;
      unsigned int v15 = 7;
      goto LABEL_53;
    case 3:
      goto LABEL_42;
    case 4:
      goto LABEL_51;
    case 5:
      if (v9 > 3) {
        goto LABEL_82;
      }
      if (!v9) {
        goto LABEL_72;
      }
      if (*(unsigned char *)(a1 + 1412) == 5) {
        goto LABEL_55;
      }
      uint64_t v14 = a1;
      unsigned int v15 = 20;
      goto LABEL_31;
    case 6:
      if (v9 > 3) {
        goto LABEL_82;
      }
      if (!v9)
      {
LABEL_72:
        uint64_t v13 = 4;
        goto LABEL_56;
      }
      if (*(unsigned char *)(a1 + 1412) != 6)
      {
        uint64_t v14 = a1;
        unsigned int v15 = 21;
LABEL_31:
        char v17 = 1;
LABEL_54:
        sub_1000719BC(v14, v15, v17);
      }
      goto LABEL_55;
    case 7:
      sub_1000719BC(a1, 0x14u, 0);
      uint64_t v14 = a1;
      unsigned int v15 = 21;
      goto LABEL_53;
    case 8:
      if (!v7) {
        goto LABEL_42;
      }
      if ((v7 & 7) != 0) {
        goto LABEL_81;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 16))(v7)
        || !(*(unsigned int (**)(uint64_t))(*(void *)v7 + 368))(v7))
      {
        goto LABEL_42;
      }
      uint64_t v18 = *(void *)(a1 + 1200);
      if (!v18 || (v18 & 7) != 0) {
        goto LABEL_81;
      }
      unsigned int v19 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 208))(v18);
      int v20 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 368))(v7);
      if (!v20) {
        goto LABEL_83;
      }
      if (v19 >= v20 - 1)
      {
LABEL_42:
        sub_1000719BC(a1, 3u, 1);
        uint64_t v14 = a1;
        unsigned int v15 = 3;
      }
      else
      {
LABEL_41:
        sub_1000719BC(a1, 0xBu, 1);
        uint64_t v14 = a1;
        unsigned int v15 = 11;
      }
LABEL_53:
      char v17 = 0;
      goto LABEL_54;
    case 9:
      if (!v7) {
        goto LABEL_51;
      }
      if ((v7 & 7) != 0) {
        goto LABEL_81;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 16))(v7)
        || !(*(unsigned int (**)(uint64_t))(*(void *)v7 + 368))(v7))
      {
        goto LABEL_51;
      }
      uint64_t v21 = *(void *)(a1 + 1200);
      if (!v21 || (v21 & 7) != 0) {
        goto LABEL_81;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v21 + 208))(v21))
      {
LABEL_50:
        sub_1000719BC(a1, 0xCu, 1);
        uint64_t v14 = a1;
        unsigned int v15 = 12;
      }
      else
      {
LABEL_51:
        sub_1000719BC(a1, 4u, 1);
        uint64_t v14 = a1;
        unsigned int v15 = 4;
      }
      goto LABEL_53;
    case 0xA:
      uint64_t v16 = *(void *)(a1 + 1200);
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_81;
      }
      uint64_t v13 = 0;
      if (!(*(unsigned int (**)(uint64_t, void, void, void))(*(void *)v16 + 296))(v16, 0, *(void *)(a2 + 8), 0))goto LABEL_56; {
      sub_1000719BC(a1, 8u, 1);
      }
      uint64_t v14 = a1;
      unsigned int v15 = 8;
      goto LABEL_53;
    case 0xB:
      sub_1000719BC(a1, 9u, 1);
      uint64_t v14 = a1;
      unsigned int v15 = 9;
      goto LABEL_53;
    case 0xC:
      goto LABEL_41;
    case 0xD:
      goto LABEL_50;
    case 0xE:
      uint64_t v23 = *(void *)(a1 + 1200);
      if (!v23 || (v23 & 7) != 0) {
        goto LABEL_81;
      }
      uint64_t v13 = 0;
      if (!(*(unsigned int (**)(uint64_t, void, void, void))(*(void *)v23 + 296))(v23, 0, *(void *)(a2 + 8), 0))goto LABEL_56; {
      memset(&v32, 0, sizeof(v32));
      }
      uint64_t v24 = sub_10005176C();
      if (!v24 || (v24 & 7) != 0) {
        goto LABEL_81;
      }
      (*(void (**)(uint64_t, std::string *))(*(void *)v24 + 304))(v24, &v32);
      if (!std::string::compare(&v32, "com.apple.podcasts") || !std::string::compare(&v32, "com.apple.iBooks"))
      {
        sub_1000719BC(a1, 8u, 1);
        sub_1000719BC(a1, 8u, 0);
        uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
        if (v27)
        {
          uint64_t v28 = v27;
          if ((v27 & 7) == 0)
          {
            sub_1000638A4(v27, 1);
            uint64_t v29 = sub_10006DB30(0, v28);
            if (v29)
            {
              uint64_t v30 = v29;
              if ((v29 & 7) == 0)
              {
                uint64_t v31 = sub_10001CE30(v28);
                sub_1000885B8(v30, 1, v31);
                goto LABEL_78;
              }
            }
          }
        }
LABEL_81:
        __break(0x5516u);
        goto LABEL_82;
      }
      uint64_t v25 = *(void *)(a1 + 1200);
      if (!v25 || (v25 & 7) != 0) {
        goto LABEL_81;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v25 + 584))(v25))
      {
        uint64_t v26 = *(void *)(a1 + 1200);
        if (v26 && (v26 & 7) == 0)
        {
          (*(void (**)(uint64_t))(*(void *)v26 + 560))(v26);
          goto LABEL_78;
        }
        goto LABEL_81;
      }
      sub_1000ADA2C(a1, 0xFFFFFFFFLL);
LABEL_78:
      std::string::~string(&v32);
LABEL_55:
      uint64_t v13 = 0;
LABEL_56:
      *(unsigned char *)(a1 + 1412) = v11;
LABEL_57:
      sub_100072254(&v33);
      return v13;
    default:
      uint64_t v13 = 4;
      sub_1000EE4F4(0, 4, "%s:%d ERROR: Cmd0x0029_PlayControl invalid play control: 0x%02X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 3520, v11);
      goto LABEL_56;
  }
}

uint64_t sub_1000AA650(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_23;
  }
  if (*(_WORD *)(a2 + 128) != 10) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result);
  if (result) {
    return 4;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)v4;
    if (v4 >= 0xFFFFFFFFFFFFFFFCLL) {
      goto LABEL_24;
    }
    unsigned int v6 = *(unsigned __int16 *)(v4 + 4);
    if (v4 >= 0xFFFFFFFFFFFFFFFALL) {
      goto LABEL_24;
    }
    unsigned int v7 = *(unsigned __int16 *)(v4 + 6);
    BOOL v8 = __CFADD__(v4, 8);
    unsigned int v9 = (unsigned __int16 *)(v4 + 8);
    if (v8) {
      goto LABEL_24;
    }
    unsigned int v10 = *v9;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      uint64_t v11 = bswap32(v5);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 400))(result, v11);
      uint64_t v14 = result;
      if (!result)
      {
LABEL_20:
        sub_100072254(&v14);
        return 4;
      }
      uint64_t v12 = result;
      if ((result & 7) == 0)
      {
        if ((*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result))
        {
          uint64_t v13 = sub_10006E280(v2, a2, 1u, v11, v12, bswap32(v6) >> 16, bswap32(v7) >> 16, bswap32(v10) >> 16);
          sub_100072254(&v14);
          if (v13 < 0x20) {
            return v13;
          }
          __break(0x550Au);
        }
        goto LABEL_20;
      }
    }
  }
LABEL_23:
  __break(0x5516u);
LABEL_24:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000AA80C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 168))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }
  char v4 = result;
  sub_1000C5B58(a2, v3, 0, 4, 45, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0;
}

uint64_t sub_1000AA8D0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  if ((v3 - 1) > 1) {
    return 4;
  }
  char v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_22;
  }
  uint64_t v5 = *v4;
  if (v5 >= 3) {
    return 4;
  }
  if (v3 != 2)
  {
    LOWORD(result) = 0;
    unsigned __int8 v6 = 0;
    goto LABEL_19;
  }
  if (v4 == (unsigned __int8 *)-1)
  {
LABEL_23:
    __break(0x5513u);
    goto LABEL_24;
  }
  unsigned __int8 v6 = v4[1];
  if (!v6)
  {
    LOWORD(result) = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(result + 1395))
  {
    LOWORD(result) = *(_WORD *)(result + 1396);
LABEL_19:
    *(_WORD *)(v2 + 1396) = result;
    *(unsigned char *)(v2 + 1395) = v6;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160))(result, v5);
      return 0;
    }
    goto LABEL_22;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 168))(result);
  if (result == (__int16)result) {
    goto LABEL_19;
  }
LABEL_24:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000AAA04(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }
  char v4 = result;
  sub_1000C5B58(a2, v3, 0, 4, 48, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0;
}

uint64_t sub_1000AAAC8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  if ((v3 - 1) > 1) {
    return 4;
  }
  char v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_22;
  }
  uint64_t v5 = *v4;
  if (v5 >= 3) {
    return 4;
  }
  if (v3 != 2)
  {
    LOWORD(result) = 0;
    unsigned __int8 v6 = 0;
    goto LABEL_19;
  }
  if (v4 == (unsigned __int8 *)-1)
  {
LABEL_23:
    __break(0x5513u);
    goto LABEL_24;
  }
  unsigned __int8 v6 = v4[1];
  if (!v6)
  {
    LOWORD(result) = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(result + 1398))
  {
    LOWORD(result) = *(_WORD *)(result + 1400);
LABEL_19:
    *(_WORD *)(v2 + 1400) = result;
    *(unsigned char *)(v2 + 1398) = v6;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 128))(result, v5);
      return 0;
    }
    goto LABEL_22;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
  if (result == (__int16)result) {
    goto LABEL_19;
  }
LABEL_24:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000AABFC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_42;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_42;
  }
  unsigned int v3 = *(unsigned __int16 *)(a2 + 128);
  if (v3 < 3) {
    return 4;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
LABEL_42:
    __break(0x5516u);
    goto LABEL_43;
  }
  if (v3 < 0xB || *(_WORD *)v4)
  {
    if (*(_DWORD *)(result + 1368) < *(_DWORD *)(result + 1372))
    {
      return sub_1000ADC38(result, v3 - 2);
    }
    return 4;
  }
  if (v4 >= 0xFFFFFFFFFFFFFFFELL)
  {
LABEL_44:
    __break(0x5513u);
    goto LABEL_45;
  }
  if (v4 >= 0xFFFFFFFFFFFFFFFDLL
    || (v5 = *(unsigned __int8 *)(v4 + 2), unsigned int v6 = *(unsigned __int16 *)(v4 + 3), v4 >= 0xFFFFFFFFFFFFFFFBLL)
    || (v7 = *(unsigned __int16 *)(v4 + 5), BOOL v8 = __CFADD__(v4, 7), v9 = (unsigned int *)(v4 + 7), v8))
  {
LABEL_43:
    __break(0x5500u);
    goto LABEL_44;
  }
  unsigned int v10 = *v9;
  if (v5 == 3)
  {
    unsigned int v13 = *(unsigned __int8 *)(result + 1392);
    if (v13 > 1)
    {
LABEL_26:
      __break(0x550Au);
      goto LABEL_27;
    }
LABEL_24:
    BOOL v12 = v13 != 0;
    int v11 = 16 * v12;
    goto LABEL_28;
  }
  if (v5 == 2)
  {
    unsigned int v13 = *(unsigned __int8 *)(result + 1392);
    if (v13 >= 2) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v5 != 1)
  {
LABEL_27:
    BOOL v12 = 0;
    int v11 = 0;
    goto LABEL_28;
  }
  int v11 = 2;
  BOOL v12 = 1;
LABEL_28:
  int v19 = -1431655766;
  int v20 = -1431655766;
  uint64_t result = *(void *)(result + 1192);
  if (!result || (result & 7) != 0) {
    goto LABEL_42;
  }
  (*(void (**)(uint64_t, int *, int *))(*(void *)result + 104))(result, &v20, &v19);
  if (v6) {
    BOOL v14 = v12;
  }
  else {
    BOOL v14 = 0;
  }
  uint64_t result = 4;
  if (v7)
  {
    if (v14)
    {
      signed int v15 = __rev16(v6);
      if (v20 >= v15)
      {
        unsigned int v16 = __rev16(v7);
        if (v19 >= (int)v16)
        {
          unsigned int v17 = bswap32(v10);
          if (v17 == (((v11 * v15 + 31) >> 3) & 0x7FFFC))
          {
            *(_DWORD *)(v2 + 1368) = 0;
            unint64_t v18 = v17 * (unint64_t)v16;
            if ((v18 & 0xFFFFFFFF00000000) == 0)
            {
              *(_DWORD *)(v2 + 1372) = v18;
              if (v3 < 0xC) {
                return 0;
              }
              else {
                return sub_1000ADC38(v2, v3 - 11);
              }
            }
LABEL_45:
            __break(0x550Cu);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000AAE20(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_13;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  memset(v7, 170, 20);
  unsigned int v5 = -1431655766;
  unsigned int v6 = -1431655766;
  uint64_t v4 = *(void *)(a1 + 1192);
  if (!v4 || (v4 & 7) != 0) {
LABEL_13:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned int *, unsigned int *))(*(void *)v4 + 104))(v4, &v6, &v5);
  if (HIWORD(v6) || (LOWORD(v7[0]) = bswap32(v6) >> 16, HIWORD(v5)))
  {
    __break(0x5507u);
  }
  else
  {
    WORD1(v7[0]) = bswap32(v5) >> 16;
    BYTE4(v7[0]) = 1;
    sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 4, 52, *(_DWORD *)(a2 + 68), v7, 5u);
    return 0;
  }
  return result;
}

uint64_t sub_1000AAF54(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    unsigned int v4 = bswap32((*(uint64_t (**)(uint64_t))(*(void *)result + 392))(result));
    sub_1000C5B58(a2, v3, 0, 4, 54, *(_DWORD *)(a2 + 68), &v4, 4u);
    return 0;
  }
  return result;
}

uint64_t sub_1000AB018(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_56;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_56;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4;
  }
  unsigned int v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_56;
  }
  unsigned int v5 = *v4;
  uint64_t result = *(void *)(result + 1200);
  if (!result) {
    goto LABEL_56;
  }
  if ((result & 7) != 0) {
    goto LABEL_56;
  }
  unsigned int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 392))(result);
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v7 = bswap32(v5);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)result + 512))(result);
  uint64_t result = *(void *)(v2 + 1200);
  BOOL v10 = (result & 7) == 0 && result != 0;
  if (v8)
  {
    if (v10)
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)result + 664))(result, v7, 0);
      goto LABEL_20;
    }
    goto LABEL_56;
  }
  if (!v10) {
    goto LABEL_56;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 592))(result))
  {
    uint64_t result = *(void *)(v2 + 1200);
    if (result)
    {
      if ((result & 7) == 0)
      {
        unsigned int v11 = (*(uint64_t (**)(uint64_t))(*(void *)result + 376))(result);
        uint64_t result = *(void *)(v2 + 1200);
        if (result)
        {
          if ((result & 7) == 0)
          {
            unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)result + 392))(result);
            uint64_t result = *(void *)(v2 + 1200);
            if (result)
            {
              if ((result & 7) == 0)
              {
                (*(void (**)(uint64_t, uint64_t))(*(void *)result + 672))(result, v7);
                uint64_t result = *(void *)(v2 + 1200);
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    if ((*(uint64_t (**)(uint64_t))(*(void *)result + 608))(result))
                    {
                      if (v12 < 3) {
                        goto LABEL_20;
                      }
                      goto LABEL_49;
                    }
                    uint64_t result = *(void *)(v2 + 1200);
                    if (result && (result & 7) == 0)
                    {
                      char v13 = (*(uint64_t (**)(uint64_t))(*(void *)result + 616))(result);
                      if (v12 < 3 || (v13 & 1) == 0) {
                        goto LABEL_20;
                      }
LABEL_49:
                      unsigned int v14 = v12 - 1;
                      if (v5 && v11 == v14 || v7 <= v11 && v11 < v14 || !v11 && v7 == v14)
                      {
                        sub_100071BD4(v2);
                        return 0;
                      }
LABEL_20:
                      sub_100071B0C(v2);
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_56:
    __break(0x5516u);
    return result;
  }
  if (v7 >= v6) {
    return 2;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result) {
    goto LABEL_56;
  }
  if ((result & 7) != 0) {
    goto LABEL_56;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)result + 672))(result, v7);
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_56;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(*(void *)result + 304))(result, v7, 0, 0, 0, *(void *)(a2 + 8), 0xFFFFFFFFLL, 1))
  {
    return 0;
  }
  else
  {
    return 2;
  }
}

uint64_t sub_1000AB3DC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_16;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4;
  }
  if (*(unsigned __int8 *)(result + 1392) >= 2u) {
    goto LABEL_18;
  }
  if (!*(unsigned char *)(result + 1392)) {
    return 4;
  }
  memset(v8, 170, 20);
  unsigned int v6 = -1431655766;
  unsigned int v7 = -1431655766;
  uint64_t v3 = *(void *)(result + 1192);
  if (!v3 || (v3 & 7) != 0) {
LABEL_16:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned int *, unsigned int *))(*(void *)v3 + 104))(v3, &v7, &v6);
  if (HIWORD(v7) || (unsigned int v4 = bswap32(v7) >> 16, LOWORD(v8[0]) = v4, HIWORD(v6)))
  {
    __break(0x5507u);
LABEL_18:
    __break(0x550Au);
    goto LABEL_19;
  }
  unsigned int v5 = bswap32(v6) >> 16;
  WORD1(v8[0]) = v5;
  BYTE4(v8[0]) = 2;
  if ((unint64_t)v8 >= 0xFFFFFFFFFFFFFFFBLL)
  {
LABEL_19:
    __break(0x5513u);
    return result;
  }
  *(_WORD *)((char *)v8 + 5) = v4;
  *(_WORD *)((char *)v8 + 7) = v5;
  BYTE1(v8[1]) = 3;
  sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 4, 58, *(_DWORD *)(a2 + 68), v8, 0xAu);
  return 0;
}

uint64_t sub_1000AB544(uint64_t a1, uint64_t a2)
{
  if (a1 && (a1 & 7) == 0) {
    return sub_1000B0110(a1, a2);
  }
  __break(0x5516u);
  return a1;
}

uint64_t sub_1000AB55C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_62;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_62;
  }
  unsigned int v3 = *(unsigned __int16 *)(a2 + 128);
  if (v3 < 4 || (((_BYTE)v3 - 4) & 7) != 0) {
    return 4;
  }
  unsigned int v4 = *(unsigned __int16 **)(a2 + 24);
  if (!v4) {
    goto LABEL_62;
  }
  unsigned int v5 = *v4;
  if ((unint64_t)v4 >= 0xFFFFFFFFFFFFFFFELL)
  {
LABEL_64:
    __break(0x5500u);
    goto LABEL_65;
  }
  unsigned int v6 = v4[1];
  if ((unint64_t)v4 >= 0xFFFFFFFFFFFFFFFCLL)
  {
LABEL_63:
    __break(0x5513u);
    goto LABEL_64;
  }
  unsigned int v7 = __rev16(v5);
  unsigned int v8 = __rev16(v6);
  if (v7 > v8) {
    return 4;
  }
  if (*v4)
  {
    int v10 = 0;
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t result = *(void *)(result + 1424);
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_1000B5B3C(result);
        operator delete();
      }
      goto LABEL_62;
    }
    if (v3 != 4) {
      operator new();
    }
    uint64_t v9 = 0;
    int v10 = 1;
  }
  uint64_t result = *(void *)(v2 + 1424);
  if (!result)
  {
    if (v10) {
      return 0;
    }
    else {
      return 2;
    }
  }
  if ((result & 7) != 0) {
    goto LABEL_62;
  }
  if (v7 != *(unsigned __int16 *)result) {
    goto LABEL_51;
  }
  if ((result + 2)) {
    goto LABEL_62;
  }
  if (v8 != *(unsigned __int16 *)(result + 2)) {
    goto LABEL_51;
  }
  if (((result + 4) & 3) != 0) {
    goto LABEL_62;
  }
  if (*(_DWORD *)(a2 + 68) != *(_DWORD *)(result + 4))
  {
LABEL_51:
    if ((v10 & 1) == 0)
    {
      sub_1000B5B3C(result);
      operator delete();
    }
    return 0;
  }
  if (v3 != 4)
  {
    unsigned int v11 = (unint64_t *)(v4 + 2);
    unsigned int v12 = v3 - 12;
    do
    {
      char v13 = *(void **)(v2 + 1424);
      if (!v13 || (*(void *)(v2 + 1424) & 7) != 0) {
        goto LABEL_62;
      }
      signed int v15 = v13 + 1;
      unint64_t v19 = bswap64(*v11);
      unint64_t v16 = v13[2];
      if (v16 >= v13[3])
      {
        uint64_t result = sub_1000B67E0(v15, &v19);
      }
      else
      {
        uint64_t result = (uint64_t)sub_10002A9E0(v15, &v19);
        if (v16 >= 0xFFFFFFFFFFFFFFF8) {
          goto LABEL_63;
        }
        uint64_t result = v16 + 8;
      }
      _DWORD v13[2] = result;
      if (HIWORD(v12)) {
        goto LABEL_65;
      }
      if ((unint64_t)v11 > 0xFFFFFFFFFFFFFFF7) {
        goto LABEL_63;
      }
      ++v11;
      v12 -= 8;
    }
    while (v12 != -8);
  }
  if (v5 == v6)
  {
    uint64_t result = sub_1000708B8(v2);
    if (result)
    {
      if ((result & 7) == 0)
      {
        uint64_t v17 = *(void *)(v2 + 1424);
        if (v17)
        {
          if ((v17 & 7) == 0)
          {
            if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 672))(result, v17 + 8) & 1) == 0)
            {
              uint64_t result = *(void *)(v2 + 1424);
              if (!result)
              {
                *(void *)(v2 + 1424) = 0;
                return v9;
              }
              if ((result & 7) == 0)
              {
                sub_1000B5B3C(result);
                operator delete();
              }
              goto LABEL_62;
            }
            return 0;
          }
        }
      }
    }
LABEL_62:
    __break(0x5516u);
    goto LABEL_63;
  }
  if (v5 != 0xFFFF)
  {
    unint64_t v18 = *(_WORD **)(v2 + 1424);
    if (v18 && (v18 & 7) == 0)
    {
      *unint64_t v18 = v7 + 1;
      return 19;
    }
    goto LABEL_62;
  }
LABEL_65:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000AB868(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_38;
  }
  if (*(_WORD *)(a2 + 128) != 9) {
    return 4;
  }
  uint64_t v3 = *(void *)(result + 1424);
  if (!v3) {
    return 2;
  }
  unsigned int v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_38;
  }
  if (v4 != (unsigned __int8 *)-1)
  {
    uint64_t v5 = *v4;
    unint64_t v6 = *(void *)(v4 + 1);
    uint64_t v7 = *(void *)(result + 1200);
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_38;
    }
    if (v5 >= 2) {
      goto LABEL_39;
    }
    if ((v3 & 7) != 0) {
      goto LABEL_38;
    }
    uint64_t result = sub_10006D8BC(result);
    if (!result || (result & 7) != 0) {
      goto LABEL_38;
    }
    uint64_t v8 = sub_1000A1140(result, *(void *)(v2 + 8));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(void *)v7 + 104))(v7, v5, v3 + 8, bswap64(v6), v8))
    {
      uint64_t result = sub_10004CDB4();
      if (!result || (result & 7) != 0) {
        goto LABEL_38;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
      if (!result) {
        goto LABEL_30;
      }
      unsigned int v9 = *(_DWORD *)(v2 + 1216);
      if (v9 <= 3)
      {
        if (v9 == 2)
        {
          uint64_t result = *(void *)(v2 + 1200);
          if (result)
          {
            if ((result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t))(*(void *)result + 112))(result, 1);
              uint64_t result = *(void *)(v2 + 8);
              if (result)
              {
                if ((result & 7) == 0)
                {
                  uint64_t result = sub_10006346C(result);
                  if (result)
                  {
                    if ((result & 7) == 0)
                    {
                      uint64_t result = sub_1000A50A8(result);
LABEL_33:
                      uint64_t v10 = *(void *)(v2 + 1200);
                      if (v10)
                      {
                        if ((v10 & 7) == 0)
                        {
                          uint64_t result = sub_10006D8BC(result);
                          if (result)
                          {
                            if ((result & 7) == 0)
                            {
                              uint64_t v11 = sub_1000A1140(result, *(void *)(v2 + 8));
                              (*(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v10 + 304))(v10, 0xFFFFFFFFLL, 0, 0, 0, v11, 0xFFFFFFFFLL, 0);
                              return 0;
                            }
                          }
                        }
                      }
                      goto LABEL_38;
                    }
                  }
                }
              }
            }
          }
          goto LABEL_38;
        }
LABEL_30:
        uint64_t result = *(void *)(v2 + 1200);
        if (result && (result & 7) == 0)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 112))(result, 0);
          goto LABEL_33;
        }
LABEL_38:
        __break(0x5516u);
      }
LABEL_39:
      __break(0x550Au);
      goto LABEL_40;
    }
    return 4;
  }
LABEL_40:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000ABAD0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v5 = 4;
  if (v4 < 2) {
    return v5;
  }
  unint64_t v6 = *(unsigned __int8 **)(a2 + 24);
  if (!v6) {
    return v5;
  }
  unsigned int v7 = *v6;
  if (v7 >= 4)
  {
LABEL_22:
    __break(0x550Au);
    return 2;
  }
  if ((v4 != 11 || !*v6) && (v4 != 15 || *v6)) {
    return v5;
  }
  unsigned int v16 = 0;
  if (v6 != (unsigned __int8 *)-1)
  {
    uint64_t v8 = v6 + 1;
    uint64_t result = sub_100071580(result, v7, (unsigned int *)(v6 + 1), (int *)&v16);
    uint64_t v9 = result;
    uint64_t v10 = (unsigned int *)(v6 + 1);
    uint64_t v11 = v7 ? bswap32(*v10) : bswap64(*(void *)v10);
    if (!__CFADD__(v8, v16))
    {
      if (!result) {
        return 2;
      }
      unint64_t v12 = (unint64_t)&v8[v16];
      if (v12 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_26;
      }
      unsigned int v13 = *(unsigned __int16 *)(v12 + 2);
      BOOL v14 = __CFADD__(v12, 4);
      signed int v15 = (unsigned __int16 *)(v12 + 4);
      if (v14) {
        goto LABEL_26;
      }
      uint64_t result = sub_10006E280(v2, a2, v7, v11, result, bswap32(*(unsigned __int16 *)&v8[v16]) >> 16, __rev16(v13), bswap32(*v15) >> 16);
      if ((v9 & 7) == 0)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        if (v5 <= 0x1F) {
          return v5;
        }
        goto LABEL_22;
      }
LABEL_25:
      __break(0x5516u);
LABEL_26:
      __break(0x5500u);
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t sub_1000ABC5C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_20;
  }
  unsigned int v3 = *(unsigned __int16 *)(a2 + 128);
  uint64_t result = 4;
  if (v3 >= 2)
  {
    unsigned int v4 = *(unsigned __int8 **)(a2 + 24);
    if (v4)
    {
      unsigned int v5 = *v4;
      if (v5 >= 4) {
        goto LABEL_21;
      }
      if (v3 == 11 && *v4 || v3 == 15 && !*v4)
      {
        unsigned int v7 = 0;
        if (v4 != (unsigned __int8 *)-1)
        {
          unint64_t v6 = v4 + 1;
          uint64_t result = sub_1000717F0(v2, v5, (unsigned int *)(v4 + 1), (int *)&v7);
          if (!__CFADD__(v6, v7))
          {
            if (result == 0xFFFFFFFFLL) {
              return 2;
            }
            if ((unint64_t)&v6[v7] >= 0xFFFFFFFFFFFFFFFELL) {
              goto LABEL_22;
            }
            uint64_t result = sub_10006F440(v2);
            if (result <= 0x1F) {
              return result;
            }
LABEL_21:
            __break(0x550Au);
LABEL_22:
            __break(0x5500u);
            return result;
          }
        }
LABEL_20:
        __break(0x5513u);
        goto LABEL_21;
      }
    }
  }
  return result;
}

uint64_t sub_1000ABD70(uint64_t result, uint64_t a2, int a3, unsigned int a4)
{
  if (!result
    || (uint64_t v4 = result, (result & 7) != 0)
    || ((uint64_t result = *(void *)(result + 8)) != 0 ? (v5 = (result & 7) == 0) : (v5 = 0),
        !v5 || (result = sub_100062FD8(result, 4u, 1), (uint64_t v9 = *(void *)(v4 + 8)) == 0) || (v9 & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_15;
  }
  int v10 = sub_10006FADC();
  uint64_t result = sub_100062F84(v9, 4u, v10);
  if (a4 >= 4)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 8);
  return sub_1000C4B20(v11, a2, a3, a4);
}

void sub_1000ABE2C(_DWORD *a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || (a1[345] = 0, a1[336] = 0, sub_10006D90C(a2), !v3) || (v3 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v4 = a1[344];
    sub_10006AE88(v3, v4);
  }
}

uint64_t sub_1000ABE8C(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_36;
  }
  if ((a3 & 7) != 0)
  {
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }
  int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 264))(a3);
  if ((*(unsigned int (**)(uint64_t))(*(void *)a3 + 368))(a3)) {
    v5 |= 2u;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a3 + 232))(a3)) {
    v5 |= 4u;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a3 + 256))(a3)) {
    v5 |= 8u;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a3 + 272))(a3)) {
    v5 |= 0x10u;
  }
  if ((*(unsigned int (**)(uint64_t, unint64_t *))(*(void *)a3 + 224))(a3, &v15)) {
    v5 |= 0x20u;
  }
  __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  (*(void (**)(uint64_t, void **))(*(void *)a3 + 72))(a3, &__p);
  uint64_t v6 = HIBYTE(v14);
  if (v14 < 0) {
    uint64_t v6 = v13;
  }
  if (v6) {
    int v7 = v5 | 0x40;
  }
  else {
    int v7 = v5;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 288))(a3);
  int v8 = v7;
  if (!result) {
    goto LABEL_28;
  }
  if (a2 > 0x7F)
  {
LABEL_37:
    __break(0x550Au);
    return result;
  }
  int v8 = v7 | 0x80;
  if (a2 == 66 || a2 == 12)
  {
    uint64_t result = sub_10004CDB4();
    if (result && (result & 7) == 0)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176))(result)) {
        int v8 = v7 | 0x180;
      }
      goto LABEL_28;
    }
    goto LABEL_36;
  }
LABEL_28:
  int v9 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 360))(a3);
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 280))(a3);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  unsigned int v11 = v8 | 0x2000;
  if (!v9) {
    unsigned int v11 = v8;
  }
  if (v10) {
    return v11 | 0x4000;
  }
  else {
    return v11;
  }
}

uint64_t sub_1000AC1DC(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t result = 0;
    *(unsigned char *)(result + 23) = 0;
    return result;
  }
  if (*(void *)result)
  {
    **(unsigned char **)uint64_t result = 0;
    *(void *)(result + 8) = 0;
  }
  else
  {
LABEL_7:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000AC214(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (*(_WORD *)(a2 + 128))
  {
    return 4;
  }
  else
  {
    sub_1000AC260(result, 1u);
    return 0;
  }
  return result;
}

uint64_t sub_1000AC260(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  *(unsigned char *)(result + 1221) = 1;
  uint64_t result = sub_1000708B8(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 104))(result);
  if (a2 >= 4) {
    goto LABEL_29;
  }
  *(_DWORD *)(v2 + 1216) = a2;
  if (a2 != 1)
  {
    uint64_t result = sub_10004CDB4();
    if (!result || (result & 7) != 0) {
      goto LABEL_28;
    }
    int v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
    uint64_t result = sub_1000708B8(v2);
    BOOL v7 = (result & 7) == 0 && result != 0;
    if (v5)
    {
      if (v7)
      {
        int v8 = *(void (**)(void))(*(void *)result + 208);
LABEL_26:
        v8();
        goto LABEL_27;
      }
    }
    else if (v7)
    {
      int v8 = *(void (**)(void))(*(void *)result + 208);
      goto LABEL_26;
    }
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  uint64_t result = sub_1000708B8(v2);
  if (!result) {
    goto LABEL_28;
  }
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)result + 208))(result, 2097501, 0);
  uint64_t result = sub_1000708B8(v2);
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 1216);
  if (v4 <= 3)
  {
    (*(void (**)(uint64_t, void, BOOL))(*(void *)result + 112))(result, 0, v4 == 2);
LABEL_27:
    *(void *)(v2 + 1404) = 0xFFFFFFFFLL;
    return 0;
  }
LABEL_29:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000AC448(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0)
  {
    if (*(_WORD *)(a2 + 128) != 1) {
      return 4;
    }
    uint64_t v2 = *(unsigned __int8 **)(a2 + 24);
    if (v2)
    {
      unsigned int v3 = *v2;
      if (v3 == 2 || v3 == 1)
      {
        sub_1000AC260(result, v3);
        return 0;
      }
      return 4;
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AC4B0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_10;
  }
  if (*(_WORD *)(a2 + 128) != 5) {
    return 4;
  }
  uint64_t v2 = *(unsigned __int8 **)(a2 + 24);
  if (v2)
  {
    if (v2 != (unsigned __int8 *)-1) {
      return sub_1000AC508(result, *v2, 255, bswap32(*(_DWORD *)(v2 + 1)));
    }
  }
  else
  {
LABEL_10:
    __break(0x5516u);
  }
  __break(0x5500u);
  return result;
}

uint64_t sub_1000AC508(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_88;
  }
  unsigned int v6 = a2 - 1;
  if (a2 - 1 > 0xA) {
    return 4;
  }
  LODWORD(v8) = a3;
  if (!sub_1000B0330(a1, a2) || (v8 + 1) > 0xAu) {
    return 4;
  }
  uint64_t v9 = sub_1000708B8(a1);
  if (!v9 || (uint64_t v10 = v9, (v9 & 7) != 0))
  {
LABEL_88:
    __break(0x5516u);
LABEL_89:
    __break(0x550Au);
LABEL_90:
    sub_1000F2724();
  }
  switch(v6)
  {
    case 0u:
      if (a4 == -1) {
        a4 = 0;
      }
      else {
        a4 = a4;
      }
      if (a4) {
        char v11 = 5;
      }
      else {
        char v11 = 4;
      }
      if (v8 == 255) {
        LOBYTE(v8) = v11;
      }
      unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000B0468;
      goto LABEL_72;
    case 1u:
      unint64_t v12 = sub_1000B06F0;
      if (v8 != 255) {
        goto LABEL_72;
      }
      unsigned int v13 = *(_DWORD *)(a1 + 1216);
      if (v13 >= 4) {
        goto LABEL_89;
      }
      uint64_t v14 = sub_1000B06F0;
      if (v13 != 2) {
        goto LABEL_77;
      }
      unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(unsigned int *)(a1 + 1404);
      switch(*(_DWORD *)(a1 + 1404))
      {
        case 0:
        case 4:
          unsigned int v16 = sub_1000B06F0;
          goto LABEL_28;
        case 1:
          uint64_t v28 = sub_1000B06F0;
          goto LABEL_86;
        case 2:
          LOBYTE(v8) = 8;
          uint64_t result = sub_1000B06F0(a1, v9, a4);
          break;
        case 3:
        case 5:
          uint64_t v27 = sub_1000B06F0;
          goto LABEL_82;
        default:
          goto LABEL_79;
      }
      goto LABEL_73;
    case 2u:
      unint64_t v12 = sub_1000B0AB0;
      if (v8 != 255) {
        goto LABEL_72;
      }
      unsigned int v17 = *(_DWORD *)(a1 + 1216);
      if (v17 > 3) {
        goto LABEL_89;
      }
      uint64_t v14 = sub_1000B0AB0;
      if (v17 == 2)
      {
        unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(unsigned int *)(a1 + 1404);
        switch(*(_DWORD *)(a1 + 1404))
        {
          case 0:
          case 4:
            unsigned int v16 = sub_1000B0AB0;
LABEL_28:
            LOBYTE(v8) = 4;
            uint64_t result = v16(a1, v9, a4);
            break;
          case 1:
            uint64_t v28 = sub_1000B0AB0;
LABEL_86:
            LOBYTE(v8) = 1;
            uint64_t result = v28(a1, v9, a4);
            break;
          case 2:
            LOBYTE(v8) = 9;
            uint64_t result = sub_1000B0AB0(a1, v9, a4);
            break;
          case 3:
          case 5:
            uint64_t v27 = sub_1000B0AB0;
LABEL_82:
            LOBYTE(v8) = 6;
            uint64_t result = v27(a1, v9, a4);
            break;
          default:
            goto LABEL_79;
        }
      }
      else
      {
LABEL_77:
        LOBYTE(v8) = 3;
        uint64_t result = v14(a1, v9, a4);
      }
      goto LABEL_73;
    case 3u:
      unint64_t v12 = sub_1000B0D84;
      if (v8 != 255) {
        goto LABEL_72;
      }
      unsigned int v19 = *(_DWORD *)(a1 + 1216);
      if (v19 > 3) {
        goto LABEL_89;
      }
      if (v19 == 2)
      {
        unint64_t v15 = sub_1000B0D84;
        if (a4 >= 6)
        {
LABEL_79:
          LOBYTE(v8) = -1;
          uint64_t result = v15(a1, v9, a4);
        }
        else
        {
          unint64_t v8 = 0x60404070104uLL >> (8 * a4);
          unint64_t v12 = sub_1000B0D84;
LABEL_72:
          uint64_t result = v12(a1, v10, a4);
        }
      }
      else
      {
        LOBYTE(v8) = 0;
        uint64_t result = sub_1000B0D84(a1, v9, a4);
      }
LABEL_73:
      if (result)
      {
        uint64_t result = 2;
      }
      else
      {
        *(unsigned char *)(a1 + 1221) = 0;
        if ((a2 & 0xFFFFFFFD) != 5)
        {
          sub_1000B19D0(a1, v10, v8);
          uint64_t result = 0;
        }
      }
      break;
    case 4u:
      unint64_t v12 = sub_1000B10F8;
      if (v8 == 255)
      {
        int v29 = 1;
        int v30 = 1;
        (*(void (**)(uint64_t, int *, int *))(*(void *)v9 + 264))(v9, &v30, &v29);
        if ((v30 & 0x200004) != 0) {
          LOBYTE(v8) = 6;
        }
        else {
          LOBYTE(v8) = 4;
        }
        unint64_t v12 = sub_1000B10F8;
      }
      goto LABEL_72;
    case 5u:
      if (v8 == 255) {
        LOBYTE(v8) = 3;
      }
      unint64_t v12 = sub_1000B11A0;
      goto LABEL_72;
    case 6u:
      if (v8 == 255) {
        LOBYTE(v8) = 5;
      }
      unint64_t v12 = sub_1000B12B8;
      goto LABEL_72;
    case 7u:
      if (v8 == 255) {
        LOBYTE(v8) = 6;
      }
      unsigned int v20 = *(_DWORD *)(a1 + 1216);
      if (v20 > 3) {
        goto LABEL_89;
      }
      unint64_t v12 = sub_1000B1474;
      if (v20 != 2) {
        goto LABEL_72;
      }
      *(_DWORD *)(a1 + 1404) = 3;
      uint64_t v21 = sub_10004CDB4();
      if (!v21 || (v21 & 7) != 0) {
        goto LABEL_88;
      }
      int v22 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 80))(v21);
      unint64_t v12 = sub_1000B1474;
      if (v22)
      {
        (*(void (**)(uint64_t))(*(void *)v10 + 240))(v10);
        unint64_t v12 = sub_1000B1474;
      }
      goto LABEL_72;
    case 8u:
      uint64_t v23 = sub_10004CDB4();
      if (!v23 || (v23 & 7) != 0) {
        goto LABEL_88;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v23 + 56))(v23)) {
        return 4;
      }
      if (v8 == 255) {
        LOBYTE(v8) = 5;
      }
      unint64_t v12 = sub_1000B163C;
      goto LABEL_72;
    case 9u:
      if (v8 == 255) {
        LOBYTE(v8) = 5;
      }
      unint64_t v12 = sub_1000B175C;
      goto LABEL_72;
    case 0xAu:
      if (v8 == 255) {
        LOBYTE(v8) = 6;
      }
      unsigned int v24 = *(_DWORD *)(a1 + 1216);
      if (v24 > 3) {
        goto LABEL_89;
      }
      unint64_t v12 = sub_1000B18C8;
      if (v24 != 2) {
        goto LABEL_72;
      }
      *(_DWORD *)(a1 + 1404) = 5;
      uint64_t v25 = sub_10004CDB4();
      if (!v25 || (v25 & 7) != 0) {
        goto LABEL_88;
      }
      int v26 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 80))(v25);
      unint64_t v12 = sub_1000B18C8;
      if (v26)
      {
        (*(void (**)(uint64_t))(*(void *)v10 + 248))(v10);
        unint64_t v12 = sub_1000B18C8;
      }
      goto LABEL_72;
    default:
      goto LABEL_90;
  }
  return result;
}

uint64_t sub_1000ACBC4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0)
  {
    if (*(_WORD *)(a2 + 128) != 1) {
      return 4;
    }
    unsigned int v3 = *(unsigned __int8 **)(a2 + 24);
    if (v3)
    {
      int v4 = *v3;
      unsigned int v8 = 0;
      uint64_t v5 = sub_1000ACC70(result, v4, (int *)&v8);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a2 + 8);
        unsigned int v7 = bswap32(v8);
        sub_1000C5B58(a2, v6, 0, 4, 25, *(_DWORD *)(a2 + 68), &v7, 4u);
      }
      return v5;
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000ACC70(uint64_t a1, int a2, int *a3)
{
  if (!a1) {
    goto LABEL_77;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_77;
  }
  uint64_t v6 = sub_1000708B8(a1);
  if (!v6) {
    goto LABEL_77;
  }
  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_77;
  }
  switch(a2)
  {
    case 0:
      if (!a3 || (a3 & 3) != 0) {
        goto LABEL_77;
      }
      int v8 = 12;
      goto LABEL_75;
    case 1:
      if (*(unsigned __int8 *)(a1 + 1221) >= 2u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 320))(v6);
      }
      int v8 = sub_1000B1D54(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 2:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 272))(v6);
      }
      int v8 = sub_1000B1F50(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 3:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 280))(v6);
      }
      int v8 = sub_1000B21C0(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 4:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 288))(v6);
      }
      int v8 = sub_1000B23B4(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 5:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 312))(v6);
      }
      int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 352))(v7);
      if (a3) {
        goto LABEL_74;
      }
      goto LABEL_77;
    case 6:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 296))(v6);
      }
      int v8 = sub_1000B24EC(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 7:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 320))(v6);
      }
      int v8 = sub_1000B262C(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 8:
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v6 + 344))(v6);
      }
      int v8 = sub_1000B2778(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 9:
      uint64_t v10 = sub_10004CDB4();
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_77;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v10 + 56))(v10)) {
        return 4;
      }
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v7 + 320))(v7);
      }
      int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 576))(v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 10:
      uint64_t v11 = sub_10004CDB4();
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_77;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v11 + 64))(v11)) {
        return 4;
      }
      if (*(unsigned __int8 *)(a1 + 1221) > 1u) {
        goto LABEL_78;
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v7 + 320))(v7);
      }
      int v8 = sub_1000B2880(a1, v7);
      if (!a3) {
        goto LABEL_77;
      }
      goto LABEL_74;
    case 11:
      uint64_t v12 = sub_10004CDB4();
      if (!v12 || (v12 & 7) != 0) {
        goto LABEL_77;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v12 + 72))(v12)) {
        return 4;
      }
      if (*(unsigned __int8 *)(a1 + 1221) > 1u)
      {
LABEL_78:
        __break(0x550Au);
        JUMPOUT(0x1000AD1C4);
      }
      if (*(unsigned char *)(a1 + 1221)) {
        (*(void (**)(uint64_t))(*(void *)v7 + 344))(v7);
      }
      int v8 = sub_1000B28E0(a1, v7);
      if (!a3)
      {
LABEL_77:
        __break(0x5516u);
        goto LABEL_78;
      }
LABEL_74:
      if ((a3 & 3) != 0) {
        goto LABEL_77;
      }
LABEL_75:
      uint64_t v9 = 0;
      *a3 = v8;
      return v9;
    default:
      return 1;
  }
}

uint64_t sub_1000AD1F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_30;
  }
  if (*(_WORD *)(a2 + 128) != 9) {
    return 4;
  }
  int v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_30;
  }
  if (v4 == (unsigned __int8 *)-1) {
    goto LABEL_31;
  }
  unsigned int v5 = *v4;
  unsigned int v6 = *(_DWORD *)(v4 + 1);
  BOOL v7 = __CFADD__(v4, 5);
  int v8 = (unsigned int *)(v4 + 5);
  if (v7) {
    goto LABEL_31;
  }
  unsigned int v10 = *v8;
  unsigned int v16 = 0;
  uint64_t result = sub_1000ACC70(result, v5, (int *)&v16);
  if (result) {
    return result;
  }
  unsigned int v11 = bswap32(v6);
  unsigned int v12 = bswap32(v10);
  int v13 = v16 - v11;
  if (v16 <= v11) {
    int v13 = -1;
  }
  unsigned int v14 = v10 == -1 ? v13 : v12;
  if (__CFADD__(v11, v14))
  {
LABEL_31:
    __break(0x5500u);
    return result;
  }
  uint64_t result = 4;
  if (v16 > v11 && v14 && v11 + v14 <= v16 && v5 <= 0xB)
  {
    if (v5 != 9)
    {
LABEL_26:
      uint64_t result = sub_1000AD34C(v3, a3, v11, v5, v14, 0, 0, 0);
      if (result <= 0x1F) {
        return result;
      }
      __break(0x550Au);
      return 4;
    }
    uint64_t result = sub_10004CDB4();
    if (result && (result & 7) == 0)
    {
      if ((*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result)) {
        goto LABEL_26;
      }
      return 4;
    }
LABEL_30:
    __break(0x5516u);
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1000AD34C(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int a7, uint64_t a8)
{
  LODWORD(v33) = a7;
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v13 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0 || (((_BYTE)a2 + 24) & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t v8 = a8;
  unsigned int v12 = a6;
  sub_10008778C(*(void *)(result + 8));
  if (!*(void *)(a2 + 104)) {
    operator new();
  }
  if (!v8) {
    operator new();
  }
  uint64_t result = *(void *)(v13 + 8);
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10001CE30(result)) == 0 || (result & 7) != 0)
  {
LABEL_23:
    while (1)
    {
      while (1)
      {
        __break(0x5516u);
        if (a4 >= 0xC) {
          goto LABEL_68;
        }
        if (!a5) {
          goto LABEL_66;
        }
        uint64_t v15 = a5 >= 0x64 ? 100 : a5;
        if (!v33) {
          break;
        }
        if (__CFADD__(v12, v33)) {
          goto LABEL_69;
        }
        if (v12 + v33 <= a3) {
          break;
        }
LABEL_27:
        unint64_t v19 = a3 - v12;
        if (a3 < v12) {
          goto LABEL_70;
        }
        if (v19 >= v33) {
          goto LABEL_66;
        }
        memset(&v35, 170, sizeof(v35));
        if ((v8 & 7) == 0)
        {
          unsigned int v20 = (const std::string *)sub_1000B5540(v8, v19);
          uint64_t result = (uint64_t)std::string::basic_string(&v35, v20);
          if (!a4) {
            goto LABEL_45;
          }
          std::string::size_type v21 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
          char v22 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
          std::string::size_type size = v35.__r_.__value_.__l.__size_;
          if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v24 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v24 = v35.__r_.__value_.__l.__size_;
          }
          if (v24) {
            goto LABEL_42;
          }
          uint64_t result = sub_100033488();
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, std::string *))(*(void *)result + 88))(result, 1376257, &v35);
              std::string::size_type v21 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
              char v22 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
              std::string::size_type size = v35.__r_.__value_.__l.__size_;
              if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::string::size_type v25 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
              }
              else {
                std::string::size_type v25 = v35.__r_.__value_.__l.__size_;
              }
              if (!v25)
              {
                uint64_t result = (uint64_t)std::string::assign(&v35, "Unknown");
                std::string::size_type v21 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
                std::string::size_type size = v35.__r_.__value_.__l.__size_;
                char v22 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
              }
LABEL_42:
              if (v22 < 0) {
                std::string::size_type v21 = size;
              }
              if (!v21)
              {
                if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v35.__r_.__value_.__l.__data_);
                }
LABEL_66:
                operator delete[]();
              }
LABEL_45:
              _DWORD *v9 = bswap32(a3);
              std::string::size_type v26 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
              if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::string::size_type v26 = v35.__r_.__value_.__l.__size_;
              }
              BOOL v27 = __CFADD__(v26, 1);
              unint64_t v28 = v26 + 1;
              if (v27) {
                goto LABEL_69;
              }
              BOOL v27 = v10 >= 4;
              unsigned int v29 = v10 - 4;
              if (!v27) {
                goto LABEL_70;
              }
              if (v28 <= v29)
              {
                if (v28 >> 16) {
                  goto LABEL_67;
                }
                LOWORD(v29) = v28;
              }
              else if (HIWORD(v29))
              {
                goto LABEL_67;
              }
              if ((unint64_t)v9 < 0xFFFFFFFFFFFFFFFCLL)
              {
                if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v30 = &v35;
                }
                else {
                  int v30 = (std::string *)v35.__r_.__value_.__r.__words[0];
                }
                memcpy(v9 + 1, v30, (unsigned __int16)v29);
                uint64_t result = sub_10006DE60(v13, (uint64_t)(v9 + 1), (unsigned __int16)v29);
                if ((unsigned __int16)v29 <= 0xFFFBu) {
                  sub_1000C51E0();
                }
                goto LABEL_67;
              }
              goto LABEL_71;
            }
          }
        }
      }
      uint64_t v33 = off_1001265A0[(char)a4];
      if ((v8 & 7) == 0)
      {
        uint64_t v16 = v15;
        sub_10003B238(v8);
        uint64_t v17 = v11;
        uint64_t v11 = a3;
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))v33)(v13, v17, a3, v16, v8);
        int v18 = v16;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v8 + 8) - *(void *)v8) >> 3) != v16) {
          goto LABEL_66;
        }
        unsigned int v12 = a3;
        LODWORD(v33) = v18;
        goto LABEL_27;
      }
    }
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 136))(result, 4);
  if (result < 0x10000) {
    operator new[]();
  }
LABEL_67:
  __break(0x5507u);
LABEL_68:
  __break(0x5518u);
LABEL_69:
  __break(0x5500u);
LABEL_70:
  __break(0x5515u);
LABEL_71:
  __break(0x5513u);
  __break(0x550Au);
  return result;
}

uint64_t sub_1000AD9A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result
    && (uint64_t v3 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 1200)) != 0 ? (BOOL v4 = (result & 7) == 0) : (BOOL v4 = 0), v4))
  {
    (*(void (**)(uint64_t))(*(void *)result + 312))(result);
    return sub_1000ADA2C(v3, a3);
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000ADA2C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v3 = *(void *)(result + 1200);
  if (!v3 || (*(void *)(result + 1200) & 7) != 0) {
    goto LABEL_32;
  }
  BOOL v6 = *(_DWORD *)(result + 1404) == 4;
  uint64_t v7 = sub_1000708B8(result);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t))(*(void *)v3 + 88))(v3, a2, v6, 3, 3, v7);
  if (!result)
  {
    uint64_t result = sub_10004CDB4();
    if (!result || (result & 7) != 0) {
      goto LABEL_32;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
    if (!result) {
      goto LABEL_21;
    }
    unsigned int v8 = *(_DWORD *)(v2 + 1216);
    if (v8 > 3)
    {
LABEL_33:
      __break(0x550Au);
      return result;
    }
    if (v8 == 2)
    {
      uint64_t result = *(void *)(v2 + 1200);
      if (!result) {
        goto LABEL_32;
      }
      if ((result & 7) != 0) {
        goto LABEL_32;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 112))(result, 1);
      uint64_t result = *(void *)(v2 + 8);
      if (!result) {
        goto LABEL_32;
      }
      if ((result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = sub_10006346C(result);
      if (!result || (result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = sub_1000A50A8(result);
    }
    else
    {
LABEL_21:
      uint64_t result = *(void *)(v2 + 1200);
      if (!result || (result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 112))(result, 0);
    }
    uint64_t v9 = *(void *)(v2 + 1200);
    if (v9)
    {
      if ((v9 & 7) == 0)
      {
        uint64_t result = sub_10006D8BC(result);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v10 = sub_1000A1140(result, *(void *)(v2 + 8));
            if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v9 + 304))(v9, 0xFFFFFFFFLL, 0, 0, 0, v10, a2, 0))
            {
              return 0;
            }
            else
            {
              return 2;
            }
          }
        }
      }
    }
LABEL_32:
    __break(0x5516u);
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_1000ADC38(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_12;
  }
  unsigned int v2 = *(_DWORD *)(result + 1372);
  unsigned int v3 = *(_DWORD *)(result + 1368);
  if (v2 < v3)
  {
LABEL_12:
    __break(0x5515u);
    goto LABEL_13;
  }
  if (a2 - 1 >= v2 - v3) {
    return 4;
  }
  BOOL v4 = __CFADD__(v3, a2);
  unsigned int v5 = v3 + a2;
  if (!v4)
  {
    *(_DWORD *)(result + 1368) = v5;
    if (v5 < v2) {
      return 0;
    }
    uint64_t v6 = 0;
    *(void *)(result + 1368) = 0;
    return v6;
  }
LABEL_13:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000ADCA4(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128) != 6) {
    return 4;
  }
  unsigned int v2 = *(unsigned __int8 **)(a2 + 24);
  if (v2)
  {
    if (v2 != (unsigned __int8 *)-1)
    {
      if ((unint64_t)v2 < 0xFFFFFFFFFFFFFFFBLL) {
        return sub_1000AC508(result, *v2, v2[5], bswap32(*(_DWORD *)(v2 + 1)));
      }
      goto LABEL_13;
    }
  }
  else
  {
LABEL_11:
    __break(0x5516u);
  }
  __break(0x5500u);
LABEL_13:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000ADD08(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
LABEL_49:
  }
    __break(0x5516u);
  unsigned int v3 = *(unsigned char **)(a2 + 24);
  int v4 = *(unsigned __int16 *)(a2 + 128);
  *(void *)&long long v16 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v16 + 1) = 0xAAAAAAAAAAAAAAAALL;
  if (!v3)
  {
    uint64_t v5 = 4;
    sub_1000EE4F4(0, 4, "%s:%d No data!\n");
    return v5;
  }
  uint64_t v5 = 4;
  if (v4 == 1 && !dword_10013B6CC && *v3 <= 5u)
  {
    uint64_t v6 = sub_1000708B8(a1);
    LOBYTE(v16) = *v3;
    switch(*v3)
    {
      case 0:
        if (!v6 || (v6 & 7) != 0) {
          goto LABEL_49;
        }
        *(void *)((char *)&v16 + 1) = bswap64((*(uint64_t (**)(uint64_t))(*(void *)v6 + 88))(v6));
        unsigned int v7 = 9;
        goto LABEL_35;
      case 1:
        time_t v15 = 0xAAAAAAAAAAAAAAAALL;
        v14.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
        *(void *)&long long v8 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
        *(_OWORD *)&v14.tm_mon = v8;
        *(_OWORD *)&v14.tm_isdst = v8;
        *(_OWORD *)&v14.char tm_sec = v8;
        if (!v6 || (v6 & 7) != 0) {
          goto LABEL_49;
        }
        if ((*(uint64_t (**)(uint64_t, time_t *))(*(void *)v6 + 96))(v6, &v15))
        {
          localtime_r(&v15, &v14);
          unsigned int v9 = v14.tm_mon + 1;
          if (__OFADD__(v14.tm_mon, 1) || (++v14.tm_mon, unsigned int v10 = v14.tm_year + 1900, __OFADD__(v14.tm_year, 1900)))
          {
            __break(0x5500u);
            goto LABEL_51;
          }
          v14.tm_year += 1900;
          char tm_sec = v14.tm_sec;
          if (v14.tm_sec > 0xFFu) {
            goto LABEL_51;
          }
        }
        else
        {
          unsigned int v10 = 0;
          unsigned int v9 = 0;
          char tm_sec = 0;
          memset(&v14, 0, sizeof(v14));
        }
        if (&vars0 == (uint64_t *)55) {
          goto LABEL_52;
        }
        BYTE1(v16) = tm_sec;
        if (v14.tm_min > 0xFFu) {
          goto LABEL_51;
        }
        if ((unint64_t)&v16 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_52;
        }
        BYTE2(v16) = v14.tm_min;
        if (v14.tm_hour > 0xFFu) {
          goto LABEL_51;
        }
        if ((unint64_t)&v16 > 0xFFFFFFFFFFFFFFFCLL) {
          goto LABEL_52;
        }
        BYTE3(v16) = v14.tm_hour;
        if (v14.tm_mday > 0xFFu) {
          goto LABEL_51;
        }
        if ((unint64_t)&v16 > 0xFFFFFFFFFFFFFFFBLL) {
          goto LABEL_52;
        }
        BYTE4(v16) = v14.tm_mday;
        if (v9 <= 0xFF)
        {
          if ((unint64_t)&v16 > 0xFFFFFFFFFFFFFFFALL)
          {
LABEL_52:
            __break(0x5513u);
            JUMPOUT(0x1000AE0E8);
          }
          BYTE5(v16) = v9;
          if (!HIWORD(v10))
          {
            WORD3(v16) = bswap32(v10) >> 16;
            unsigned int v7 = 8;
LABEL_35:
            sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 4, 61, *(_DWORD *)(a2 + 68), &v16, v7);
            return 0;
          }
        }
LABEL_51:
        __break(0x5507u);
        goto LABEL_52;
      case 2:
        if (!v6 || (v6 & 7) != 0) {
          goto LABEL_49;
        }
        unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 592))(v6);
        goto LABEL_31;
      case 3:
        if (!v6 || (v6 & 7) != 0) {
          goto LABEL_49;
        }
        unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 600))(v6);
        goto LABEL_31;
      case 4:
        if (!v6 || (v6 & 7) != 0) {
          goto LABEL_49;
        }
        unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 408))(v6);
LABEL_31:
        *(_DWORD *)((char *)&v16 + 1) = bswap32(v12);
LABEL_34:
        unsigned int v7 = 5;
        goto LABEL_35;
      case 5:
        *(_DWORD *)((char *)&v16 + 1) = 0;
        goto LABEL_34;
      default:
        sub_1000EE4F4(0, 4, "%s:%d ERROR: Cmd0x003C_GetDBiTunesInfo Unknown DB info type: 0x%02X\n");
        return v5;
    }
  }
  return v5;
}

uint64_t sub_1000AE100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_30;
  }
  unint64_t v5 = *(void *)(a2 + 24);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  if (!v5) {
    sub_1000EE4F4(0, 4, "%s:%d No data!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 4462);
  }
  unsigned int v7 = v6 - 9;
  uint64_t v8 = 4;
  if (v7 <= 3 && v5 && !dword_10013B6CC)
  {
    unint64_t v9 = *(void *)v5;
    unint64_t v10 = 0;
    unint64_t v11 = 0;
    unint64_t v12 = 0;
    switch(v7)
    {
      case 0u:
        goto LABEL_17;
      case 1u:
        goto LABEL_15;
      case 2u:
        goto LABEL_13;
      case 3u:
        if (v5 > 0xFFFFFFFFFFFFFFF4) {
          goto LABEL_31;
        }
        unint64_t v10 = (unint64_t)*(unsigned __int8 *)(v5 + 11) << 24;
LABEL_13:
        if (v5 > 0xFFFFFFFFFFFFFFF5) {
          goto LABEL_31;
        }
        unint64_t v11 = v10 | ((unint64_t)*(unsigned __int8 *)(v5 + 10) << 16);
LABEL_15:
        if (v5 > 0xFFFFFFFFFFFFFFF6) {
          goto LABEL_31;
        }
        unint64_t v12 = v11 | ((unint64_t)*(unsigned __int8 *)(v5 + 9) << 8);
LABEL_17:
        if (v5 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_31;
        }
        if ((v12 & 0xE0000000) != 0) {
          return v8;
        }
        uint64_t v13 = v12 | *(unsigned __int8 *)(v5 + 8);
        if (!v13) {
          return v8;
        }
        uint64_t v14 = bswap64(v9);
        uint64_t v15 = sub_10006E914(a1, 0, v14);
        uint64_t v19 = v15;
        if (!v15) {
          goto LABEL_27;
        }
        uint64_t v16 = v15;
        if ((v15 & 7) != 0) {
          break;
        }
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v15 + 16))(v15))
        {
LABEL_27:
          sub_1000EE4F4(0, 4, "%s:%d Invalid TrackAccessor uid=%08x%08x\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 4540, HIDWORD(v14), v14);
          uint64_t v8 = 2;
          goto LABEL_28;
        }
        if (a3 && (a3 & 7) == 0 && (((_BYTE)a3 + 24) & 7) == 0)
        {
          sub_1000AE314(a1, v16, 0x3Fu, 0, v13);
          uint64_t v8 = v17;
LABEL_28:
          sub_100072254(&v19);
          return v8;
        }
        break;
      default:
        goto LABEL_32;
    }
LABEL_30:
    __break(0x5516u);
LABEL_31:
    __break(0x5513u);
LABEL_32:
    sub_1000F2384();
  }
  return v8;
}

void sub_1000AE314(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  if (!a2) {
    goto LABEL_14;
  }
  if (a3 > 0x7F)
  {
    __break(0x550Au);
    __break(0x5505u);
    __break(0x5503u);
    JUMPOUT(0x1000AF660);
  }
  if (a3 <= 0x4F && a5)
  {
    if ((a5 & 0xE0000000) == 0)
    {
      uint64_t v5 = sub_10006D8BC(0);
      if (v5)
      {
        if ((v5 & 7) == 0)
        {
          uint64_t v6 = sub_1000A1140(v5, *(void *)(a1 + 8));
          if (v6)
          {
            if ((v6 & 7) == 0)
            {
              if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v6 + 136))(v6, 4) < 0x10000) {
                operator new[]();
              }
              __break(0x5507u);
            }
          }
        }
      }
LABEL_17:
      __break(0x5516u);
      __break(0x5500u);
      __break(0x5515u);
      sub_1000F2384();
    }
  }
  else
  {
LABEL_14:
    __break(0x5518u);
  }
  sub_1000F2634();
}

uint64_t sub_1000AF6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_51;
  }
  if (!a3) {
    sub_1000F2364();
  }
  unint64_t v5 = *(void *)(a2 + 24);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  if (!v5) {
    sub_1000EE4F4(0, 4, "%s:%d No data!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 4580);
  }
  int v7 = v6 - 9;
  uint64_t v8 = 4;
  if ((v6 - 9) <= 3 && v5 && !dword_10013B6CC)
  {
    uint64_t v9 = sub_1000708B8(a1);
    if (!v9) {
      goto LABEL_51;
    }
    if ((v9 & 7) != 0) {
      goto LABEL_51;
    }
    unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 352))(v9);
    if ((a3 & 7) != 0) {
      goto LABEL_51;
    }
    uint64_t v11 = *(void *)(a3 + 104);
    if (!v11)
    {
      if (v5 < 0xFFFFFFFFFFFFFFFCLL)
      {
        switch(v7)
        {
          case 0:
            goto LABEL_20;
          case 1:
            goto LABEL_19;
          case 2:
            goto LABEL_18;
          case 3:
            if (v5 <= 0xFFFFFFFFFFFFFFF4)
            {
LABEL_18:
              if (v5 <= 0xFFFFFFFFFFFFFFF5)
              {
LABEL_19:
                if (v5 <= 0xFFFFFFFFFFFFFFF6)
                {
LABEL_20:
                  if (v5 <= 0xFFFFFFFFFFFFFFF7) {
                    operator new();
                  }
                }
              }
            }
            goto LABEL_53;
          default:
            goto LABEL_54;
        }
      }
LABEL_52:
      __break(0x5500u);
LABEL_53:
      __break(0x5513u);
LABEL_54:
      sub_1000F2384();
    }
    if ((v11 & 7) != 0 || (((_BYTE)v11 + 16) & 7) != 0) {
      goto LABEL_51;
    }
    uint64_t v13 = (_DWORD *)(v11 + 4);
    uint64_t v12 = *(unsigned int *)(v11 + 4);
    if (v12 == -1) {
      goto LABEL_52;
    }
    uint64_t v14 = *(void *)(v11 + 16);
    *(_DWORD *)(v11 + 4) = v12 + 1;
    if (((v11 + 12) & 3) != 0) {
      goto LABEL_51;
    }
    int v15 = *(_DWORD *)(v11 + 12);
    if (v15) {
      unsigned int v16 = v12 + 1;
    }
    else {
      unsigned int v16 = v12;
    }
    uint64_t v8 = 4;
    if (v14 && (v14 & 0xE0000000) == 0 && v16 <= v10 && v15)
    {
      do
      {
        uint64_t v21 = 0xAAAAAAAAAAAAAAAALL;
        uint64_t v17 = sub_1000708B8(a1);
        if (!v17 || (v17 & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 448))(v17, v12);
        uint64_t v21 = v18;
        if (!v18) {
          goto LABEL_40;
        }
        if ((v18 & 7) != 0) {
          goto LABEL_51;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 16))(v18))
        {
          if ((((int)a3 + 24) & 7) != 0) {
            goto LABEL_51;
          }
          sub_1000AE314(a1, v21, 0x41u, v12, v14);
          uint64_t v8 = v19;
        }
        else
        {
LABEL_40:
          uint64_t v8 = 2;
        }
        sub_100072254(&v21);
        uint64_t v12 = (v12 + 1);
      }
      while (v12 < v16 && !v8);
      if (!v8)
      {
        if ((v13 & 3) == 0 && ((v11 + 8) & 7) == 0)
        {
          if (*v13 >= *(_DWORD *)(v11 + 8)) {
            return 0;
          }
          else {
            return 6;
          }
        }
LABEL_51:
        __break(0x5516u);
        goto LABEL_52;
      }
    }
  }
  return v8;
}

uint64_t sub_1000AFA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_56;
  }
  if (*(void *)(a2 + 24))
  {
    uint64_t v5 = 4;
    if (!dword_10013B6CC && *(unsigned __int16 *)(a2 + 128) - 9 <= 3)
    {
      uint64_t v6 = *(void *)(a1 + 1200);
      if (!v6) {
        goto LABEL_56;
      }
      if ((v6 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 392))(v6);
      if (!a3 || (a3 & 7) != 0) {
        goto LABEL_56;
      }
      uint64_t v9 = *(void *)(a3 + 104);
      if (!v9)
      {
        unint64_t v10 = *(void *)(a2 + 24);
        if (v10)
        {
          if (v10 < 0xFFFFFFFFFFFFFFFCLL)
          {
            switch(*(_WORD *)(a2 + 128))
            {
              case 9:
                goto LABEL_23;
              case 0xA:
                goto LABEL_22;
              case 0xB:
                goto LABEL_21;
              case 0xC:
                goto LABEL_20;
              case 0xD:
                goto LABEL_19;
              case 0xE:
                goto LABEL_18;
              case 0xF:
                goto LABEL_17;
              case 0x10:
                if (v10 < 0xFFFFFFFFFFFFFFF1)
                {
LABEL_17:
                  if (v10 <= 0xFFFFFFFFFFFFFFF1)
                  {
LABEL_18:
                    if (v10 <= 0xFFFFFFFFFFFFFFF2)
                    {
LABEL_19:
                      if (v10 <= 0xFFFFFFFFFFFFFFF3)
                      {
LABEL_20:
                        if (v10 <= 0xFFFFFFFFFFFFFFF4)
                        {
LABEL_21:
                          if (v10 <= 0xFFFFFFFFFFFFFFF5)
                          {
LABEL_22:
                            if (v10 <= 0xFFFFFFFFFFFFFFF6)
                            {
LABEL_23:
                              if (v10 <= 0xFFFFFFFFFFFFFFF7) {
                                operator new();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                goto LABEL_58;
              default:
                goto LABEL_59;
            }
          }
LABEL_57:
          __break(0x5500u);
LABEL_58:
          __break(0x5513u);
LABEL_59:
          sub_1000F2384();
        }
        goto LABEL_56;
      }
      if ((v9 & 7) != 0 || (((_BYTE)v9 + 16) & 7) != 0) {
        goto LABEL_56;
      }
      uint64_t v12 = (_DWORD *)(v9 + 4);
      uint64_t v11 = *(unsigned int *)(v9 + 4);
      if (v11 == -1) {
        goto LABEL_57;
      }
      uint64_t v13 = *(void *)(v9 + 16);
      *(_DWORD *)(v9 + 4) = v11 + 1;
      if (((v9 + 12) & 3) != 0)
      {
LABEL_56:
        __break(0x5516u);
        goto LABEL_57;
      }
      int v14 = *(_DWORD *)(v9 + 12);
      if (v14) {
        unsigned int v15 = v11 + 1;
      }
      else {
        unsigned int v15 = v11;
      }
      uint64_t v5 = 4;
      if (v13 && (v13 & 0xE0000000) == 0 && v15 <= v8 && v14)
      {
        do
        {
          uint64_t v21 = 0xAAAAAAAAAAAAAAAALL;
          uint64_t v16 = *(void *)(a1 + 1200);
          if (v16) {
            BOOL v17 = (*(void *)(a1 + 1200) & 7) == 0;
          }
          else {
            BOOL v17 = 0;
          }
          if (!v17) {
            goto LABEL_56;
          }
          uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v16 + 400))(v16, v11);
          uint64_t v21 = v18;
          if (!v18) {
            goto LABEL_45;
          }
          if ((v18 & 7) != 0) {
            goto LABEL_56;
          }
          if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 16))(v18))
          {
            sub_1000AE314(a1, v21, 0x43u, v11, v13);
            uint64_t v5 = v19;
          }
          else
          {
LABEL_45:
            uint64_t v5 = 2;
          }
          sub_100072254(&v21);
          if (v5) {
            break;
          }
          uint64_t v11 = (v11 + 1);
        }
        while (v11 < v15);
        if (!v5)
        {
          if ((v12 & 3) != 0 || ((v9 + 8) & 7) != 0) {
            goto LABEL_56;
          }
          if (*v12 >= *(_DWORD *)(v9 + 8)) {
            return 0;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
  else
  {
    uint64_t v5 = 4;
    sub_1000EE4F4(0, 4, "%s:%d No data!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 4742);
  }
  return v5;
}

uint64_t sub_1000AFED4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0 && a2 && (a2 & 7) == 0)
    {
      if (*(_WORD *)(a2 + 128) != 4) {
        return 4;
      }
      unsigned int v3 = *(unsigned int **)(a2 + 24);
      if (v3)
      {
        unsigned int v4 = *v3;
        if (!*v3) {
          return 18;
        }
        uint64_t result = sub_1000708B8(result);
        if (result)
        {
          if ((result & 7) == 0)
          {
            if (sub_1000B0088(v2, result, bswap32(v4)) != -1) {
              sub_10004E4C0();
            }
            return 4;
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0088(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_13:
    __break(0x5500u);
    return result;
  }
  if (a3 < 0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568))(a2);
  if (result == -1) {
    goto LABEL_13;
  }
  if ((int)result + 1 <= a3 || a3 == 0) {
    return 0xFFFFFFFFLL;
  }
  else {
    return (a3 - 1);
  }
}

uint64_t sub_1000B0110(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(_WORD *)(a2 + 128) != 5) {
    return 4;
  }
  unsigned int v3 = *(unsigned __int8 **)(a2 + 24);
  if (!v3) {
    goto LABEL_22;
  }
  if (v3 == (unsigned __int8 *)-1) {
    goto LABEL_23;
  }
  int v4 = *v3;
  unsigned int v5 = *(_DWORD *)(v3 + 1);
  uint64_t v6 = sub_1000708B8(a1);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_22;
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 568))(v6);
  int v8 = v7 + 1;
  if (v7 == -1) {
    goto LABEL_23;
  }
  uint64_t result = 4;
  if (!v4)
  {
    int v10 = bswap32(v5);
    if ((v10 & 0x80000000) == 0 && v10 < v8)
    {
      uint64_t v11 = sub_1000708B8(a1);
      if (v11 && (v11 & 7) == 0)
      {
        int v12 = sub_1000B0088(a1, v11, v10);
        *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
        long long v15 = v13;
        *(_OWORD *)&__n[1] = v13;
        HIBYTE(__n[0]) = 0;
        if (v12 != -1) {
          sub_10004E4C0();
        }
        if ((_WORD *)((char *)__n + 1) != (_WORD *)-1)
        {
          *(_DWORD *)&__n[1] = 0;
          operator new[]();
        }
LABEL_23:
        __break(0x5500u);
      }
LABEL_22:
      __break(0x5516u);
      goto LABEL_23;
    }
  }
  return result;
}

uint64_t sub_1000B0330(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }
  if (a2 < 0x10)
  {
    if (a2 - 1 < 8) {
      return 1;
    }
    switch(a2)
    {
      case 9u:
        uint64_t result = sub_10004CDB4();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 56);
          return v2();
        }
        break;
      case 0xAu:
        uint64_t result = sub_10004CDB4();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 64);
          return v2();
        }
        break;
      case 0xBu:
        uint64_t result = sub_10004CDB4();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 72);
          return v2();
        }
        break;
      default:
        return 0;
    }
    goto LABEL_25;
  }
LABEL_26:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B0468(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v3 = (_DWORD *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (a3 == -1) {
    goto LABEL_16;
  }
  unsigned int v6 = *(_DWORD *)(result + 1216);
  if (v6 >= 4) {
    goto LABEL_36;
  }
  if (v6 == 2)
  {
    uint64_t result = sub_10004CDB4();
    if (!result || (result & 7) != 0) {
      goto LABEL_35;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
    if (!result)
    {
      int v7 = 1;
      goto LABEL_15;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 584))(a2);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568))(a2);
  }
  int v7 = result + 1;
  if (result == -1)
  {
LABEL_37:
    __break(0x5500u);
    return result;
  }
  if (v7 < 0) {
    sub_1000F2694();
  }
LABEL_15:
  if (v7 <= a3) {
    return 22;
  }
LABEL_16:
  unsigned int v8 = v3[304];
  if (v8 > 3) {
    goto LABEL_36;
  }
  if (v8 != 2)
  {
    if (!a3)
    {
      (*(void (**)(uint64_t))(*(void *)a2 + 104))(a2);
      uint64_t result = sub_1000708B8((uint64_t)v3);
      if (!result || (result & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v11 = v3[304];
      if (v11 <= 3)
      {
        (*(void (**)(uint64_t, void, BOOL))(*(void *)result + 112))(result, 0, v11 == 2);
        return 0;
      }
LABEL_36:
      __break(0x550Au);
      goto LABEL_37;
    }
    uint64_t result = sub_1000B0088((uint64_t)v3, a2, a3);
    if (result != -1)
    {
      unsigned int v9 = v3[304];
      if (v9 <= 3)
      {
        uint64_t v10 = result;
        sub_1000AC260((uint64_t)v3, v9);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 128))(a2, v10);
        return 0;
      }
      goto LABEL_36;
    }
    return 22;
  }
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (result)
  {
    if ((a3 + 1) > 1)
    {
      uint64_t result = 22;
    }
    else
    {
      sub_1000AC260((uint64_t)v3, 2u);
      uint64_t result = 0;
    }
  }
  v3[351] = -1;
  v3[352] = a3;
  return result;
}

uint64_t sub_1000B06F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_45;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t v6 = sub_10004CDB4();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_45;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 80))(v6))
  {
    unsigned int v7 = *(_DWORD *)(a1 + 1216);
    if (v7 >= 4) {
      goto LABEL_46;
    }
    if (v7 == 2)
    {
      switch(*(_DWORD *)(a1 + 1404))
      {
        case 0:
        case 4:
          if ((int)a3 <= 0) {
            return 0;
          }
          else {
            return 22;
          }
        case 1:
          int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360))(a2);
          if (v13 < 0) {
            sub_1000F2694();
          }
          goto LABEL_27;
        case 2:
          int v14 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 392))(a2);
          if (v14 < 0) {
            sub_1000F2694();
          }
          if (a3 != -1 && v14 <= (int)a3) {
            return 22;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 176))(a2, a3);
          return 0;
        case 3:
          int v15 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432))(a2);
          if (v15 < 0) {
            sub_1000F2694();
          }
          if (a3 != -1 && v15 <= (int)a3) {
            return 22;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 184))(a2, a3);
          return 0;
        case 5:
          int v16 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 440))(a2);
          if (a3 != -1 && v16 <= (int)a3) {
            return 22;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 192))(a2, a3);
          return 0;
        default:
          int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360))(a2);
          if (v13 < 0) {
            sub_1000F2694();
          }
LABEL_27:
          if (a3 == -1 || v13 > (int)a3) {
            goto LABEL_22;
          }
          return 22;
      }
    }
  }
  unsigned int v9 = *(_DWORD *)(a1 + 1216);
  if (v9 > 3) {
    goto LABEL_46;
  }
  if (v9 != 2)
  {
    int v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360))(a2);
    if (v10 < 0) {
      sub_1000F2694();
    }
    if (a3 != -1 && v10 <= (int)a3) {
      return 22;
    }
    uint64_t v11 = sub_1000708B8(a1);
    if (v11 && (v11 & 7) == 0)
    {
      unsigned int v12 = *(_DWORD *)(a1 + 1216);
      if (v12 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)v11 + 112))(v11, 1, v12 == 2);
LABEL_22:
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 144))(a2, a3);
        return 0;
      }
LABEL_46:
      __break(0x550Au);
      JUMPOUT(0x1000B0A98);
    }
LABEL_45:
    __break(0x5516u);
    goto LABEL_46;
  }
  return 0;
}

uint64_t sub_1000B0AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_35;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v6 = sub_10004CDB4();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_35;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 80))(v6))
  {
    unsigned int v7 = *(_DWORD *)(a1 + 1216);
    if (v7 >= 4) {
      goto LABEL_36;
    }
    if (v7 == 2)
    {
      switch(*(_DWORD *)(a1 + 1404))
      {
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
          if (a3 == -1
            || ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 352))(a2) != 0) > (int)a3)
          {
            return 0;
          }
          return 22;
        case 2:
          int v14 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 400))(a2);
          if (v14 < 0) {
            sub_1000F2694();
          }
          if (a3 != -1 && v14 <= (int)a3) {
            return 22;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 200))(a2, a3);
          break;
        default:
          int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368))(a2);
          if (v13 < 0) {
            sub_1000F2694();
          }
          if (a3 == -1 || v13 > (int)a3) {
            goto LABEL_22;
          }
          return 22;
      }
      return 0;
    }
  }
  unsigned int v8 = *(_DWORD *)(a1 + 1216);
  if (v8 > 3) {
    goto LABEL_36;
  }
  if (v8 != 2)
  {
    int v9 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368))(a2);
    if (v9 < 0) {
      sub_1000F2694();
    }
    if (a3 != -1 && v9 <= (int)a3) {
      return 22;
    }
    uint64_t v11 = sub_1000708B8(a1);
    if (v11 && (v11 & 7) == 0)
    {
      unsigned int v12 = *(_DWORD *)(a1 + 1216);
      if (v12 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)v11 + 112))(v11, 1, v12 == 2);
LABEL_22:
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 152))(a2, a3);
        return 0;
      }
LABEL_36:
      __break(0x550Au);
      JUMPOUT(0x1000B0D6CLL);
    }
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
  return 0;
}

uint64_t sub_1000B0D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_35;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v6 = sub_10004CDB4();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_35;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 80))(v6)) {
    goto LABEL_12;
  }
  unsigned int v7 = *(_DWORD *)(a1 + 1216);
  if (v7 >= 4) {
    goto LABEL_36;
  }
  if (v7 != 2)
  {
LABEL_12:
    unsigned int v10 = *(_DWORD *)(a1 + 1216);
    if (v10 > 3) {
      goto LABEL_36;
    }
    if (v10 == 2)
    {
      uint64_t result = 0;
      *(_DWORD *)(a1 + 1404) = a3;
      return result;
    }
    int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 376))(a2);
    if (v11 < 0) {
      sub_1000F2694();
    }
    if (a3 != -1 && v11 <= (int)a3) {
      return 22;
    }
    uint64_t v12 = sub_1000708B8(a1);
    if (v12 && (v12 & 7) == 0)
    {
      unsigned int v13 = *(_DWORD *)(a1 + 1216);
      if (v13 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)v12 + 112))(v12, 1, v13 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 160))(a2, a3);
        return 0;
      }
LABEL_36:
      __break(0x550Au);
      JUMPOUT(0x1000B10DCLL);
    }
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
  switch((int)a3)
  {
    case -1:
      int v8 = *(_DWORD *)(a1 + 1408);
      return sub_1000B0468(a1, a2, v8);
    case 0:
      (*(void (**)(uint64_t))(*(void *)a2 + 216))(a2);
      uint64_t result = 0;
      *(_DWORD *)(a1 + 1404) = 0;
      return result;
    case 1:
      (*(void (**)(uint64_t))(*(void *)a2 + 256))(a2);
      uint64_t result = 0;
      int v14 = 1;
      goto LABEL_32;
    case 2:
      (*(void (**)(uint64_t))(*(void *)a2 + 232))(a2);
      uint64_t result = 0;
      int v14 = 2;
      goto LABEL_32;
    case 3:
      (*(void (**)(uint64_t))(*(void *)a2 + 240))(a2);
      uint64_t result = 0;
      int v14 = 3;
      goto LABEL_32;
    case 4:
      (*(void (**)(uint64_t))(*(void *)a2 + 224))(a2);
      uint64_t result = 0;
      int v14 = 4;
      goto LABEL_32;
    case 5:
      uint64_t v15 = sub_10004CDB4();
      if (!v15 || (v15 & 7) != 0) {
        goto LABEL_35;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v15 + 72))(v15)) {
        return 22;
      }
      (*(void (**)(uint64_t))(*(void *)a2 + 248))(a2);
      uint64_t result = 0;
      int v14 = 5;
LABEL_32:
      *(_DWORD *)(a1 + 1404) = v14;
      break;
    default:
      return 22;
  }
  return result;
}

uint64_t sub_1000B10F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 352))(a2);
    if (v5 < 0) {
      sub_1000F2694();
    }
    if (a3 == -1 || v5 <= (int)a3)
    {
      return 22;
    }
    else
    {
      return sub_1000AD9A0(v3, v6, a3);
    }
  }
  return result;
}

uint64_t sub_1000B11A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 384))(a2);
  if (v6 < 0) {
    sub_1000F2694();
  }
  if (a3 != -1 && v6 <= (int)a3) {
    return 22;
  }
  uint64_t result = sub_1000708B8(v3);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    unsigned int v7 = *(_DWORD *)(v3 + 1216);
    if (v7 < 4)
    {
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v7 == 2);
      (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 168))(a2, a3);
      return 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B12B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if (a3 == -1) {
    return 22;
  }
  unsigned int v5 = *(_DWORD *)(result + 1216);
  if (v5 >= 4) {
    goto LABEL_24;
  }
  if (v5 == 2) {
    return 22;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 408))(a2);
  if ((result & 0x80000000) != 0) {
    sub_1000F2694();
  }
  if ((int)result <= (int)a3) {
    return 22;
  }
  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 > 3) {
    goto LABEL_24;
  }
  sub_1000AC260(v3, v6);
  uint64_t result = sub_1000708B8(v3);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3)
  {
LABEL_24:
    __break(0x550Au);
    return result;
  }
  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v7 == 2);
  uint64_t result = *(void *)(v3 + 1200);
  if (!result
    || (result & 7) != 0
    || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, a3),
        (uint64_t v8 = *(void *)(v3 + 1200)) == 0)
    || (v8 & 7) != 0
    || (uint64_t result = sub_10006D8BC(result)) == 0
    || (result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }
  uint64_t v9 = sub_1000A1140(result, *(void *)(v3 + 8));
  if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v8 + 304))(v8, 0xFFFFFFFFLL, 0, 0, 0, v9, 0xFFFFFFFFLL, 0))
  {
    return 0;
  }
  else
  {
    return 2;
  }
}

uint64_t sub_1000B1474(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if (a3 == -1) {
    goto LABEL_16;
  }
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (!result) {
    goto LABEL_10;
  }
  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 >= 4) {
    goto LABEL_24;
  }
  if (v6 == 2)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432))(a2);
  }
  else
  {
LABEL_10:
    unsigned int v7 = *(_DWORD *)(v3 + 1216);
    if (v7 > 3) {
      goto LABEL_24;
    }
    if (v7 == 2)
    {
      uint64_t result = 0;
      goto LABEL_15;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 416))(a2);
  }
  if ((result & 0x80000000) != 0) {
    sub_1000F2694();
  }
LABEL_15:
  if ((int)result <= (int)a3) {
    return 22;
  }
LABEL_16:
  unsigned int v8 = *(_DWORD *)(v3 + 1216);
  if (v8 <= 3)
  {
    sub_1000AC260(v3, v8);
    uint64_t result = sub_1000708B8(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v9 = *(_DWORD *)(v3 + 1216);
      if (v9 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v9 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 184))(a2, a3);
        return 0;
      }
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_24:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B163C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  unsigned int v4 = *(_DWORD *)(result + 1216);
  if (v4 < 4)
  {
    if (v4 != 1 || a3 != -1 && (*(int (**)(uint64_t))(*(void *)a2 + 576))(a2) <= (int)a3) {
      return 22;
    }
    uint64_t result = sub_1000708B8(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v7 = *(_DWORD *)(v3 + 1216);
      if (v7 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v7 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 136))(a2, a3);
        return 0;
      }
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B175C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (a3 == -1) {
    return 22;
  }
  unsigned int v5 = *(_DWORD *)(result + 1216);
  if (v5 >= 4) {
    goto LABEL_20;
  }
  if (v5 == 2) {
    return 22;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 632))(a2);
  if ((result & 0x80000000) != 0) {
    sub_1000F2694();
  }
  if ((int)result <= (int)a3) {
    return 22;
  }
  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3) {
    goto LABEL_20;
  }
  sub_1000AC260(v3, v7);
  uint64_t result = sub_1000708B8(v3);
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  unsigned int v8 = *(_DWORD *)(v3 + 1216);
  if (v8 > 3)
  {
LABEL_20:
    __break(0x550Au);
    return result;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v8 == 2);
  uint64_t result = sub_10006D8BC(v9);
  if (!result || (result & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }
  uint64_t v10 = sub_1000A1140(result, *(void *)(v3 + 8));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 640))(a2, a3, v10)) {
    return 0;
  }
  else {
    return 22;
  }
}

uint64_t sub_1000B18C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  if (a3 != -1)
  {
    uint64_t result = sub_1000B28E0(result, a2);
    if ((result & 0x80000000) != 0) {
      sub_1000F2694();
    }
    if ((int)result <= (int)a3) {
      return 22;
    }
  }
  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 < 4)
  {
    sub_1000AC260(v3, v6);
    uint64_t result = sub_1000708B8(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v7 = *(_DWORD *)(v3 + 1216);
      if (v7 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, 1, v7 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 192))(a2, a3);
        return 0;
      }
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(0x550Au);
  return result;
}

void sub_1000B19D0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_37;
  }
  if (a3 >= 0x100)
  {
LABEL_37:
    __break(0x550Au);
    JUMPOUT(0x1000B1D2CLL);
  }
  switch(a3)
  {
    case 0u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 288);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 1u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 272);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 2u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 296);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 3u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 280);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 4u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 312);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 5u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 320);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 6u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 344);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 7u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 336);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 8u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 328);
      uint64_t v4 = a2;
      goto LABEL_35;
    case 9u:
      uint64_t v3 = *(void (**)(uint64_t))(*(void *)a2 + 304);
      uint64_t v4 = a2;
LABEL_35:
      v3(v4);
      break;
    default:
      sub_1000EE4F4(0, 4, "%s:%d ERROR: Unknown sort type: 0x%08X !\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 9247, a3);
      break;
  }
}

uint64_t sub_1000B1D54(uint64_t result, uint64_t a2)
{
  if (!result || (v2 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_23:
      __break(0x550Au);
      goto LABEL_24;
    }
    if (v4 == 2)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 584))(a2);
      uint64_t v5 = (result + 1);
      if (result == -1) {
        goto LABEL_24;
      }
      return v5;
    }
  }
  unsigned int v6 = *(_DWORD *)(v2 + 1216);
  if (v6 > 3) {
    goto LABEL_23;
  }
  if (v6 == 2) {
    return 1;
  }
  uint64_t result = sub_1000708B8(v2);
  if (!result || (result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 120))(result);
  unsigned int v7 = *(_DWORD *)(v2 + 1216);
  if (v7 > 3) {
    goto LABEL_23;
  }
  uint64_t v8 = result;
  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v7 == 2);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568))(a2);
  uint64_t v5 = (result + 1);
  if (result != -1)
  {
    uint64_t result = sub_1000708B8(v2);
    if (result && (result & 7) == 0)
    {
      unsigned int v9 = *(_DWORD *)(v2 + 1216);
      if (v9 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112))(result, v8, v9 == 2);
        return v5;
      }
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000B1F50(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v4 = sub_10004CDB4()) == 0 || (v4 & 7) != 0)
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v4 + 80))(v4)) {
    goto LABEL_12;
  }
  unsigned int v5 = *(_DWORD *)(a1 + 1216);
  if (v5 >= 4) {
    goto LABEL_32;
  }
  if (v5 != 2)
  {
LABEL_12:
    unsigned int v9 = *(_DWORD *)(a1 + 1216);
    if (v9 <= 3)
    {
      if (v9 == 2) {
        return (*(_DWORD *)(a1 + 1404) & 0xFFFFFFFB) == 0;
      }
      uint64_t v10 = *(void *)(a1 + 1200);
      if (v10 && (v10 & 7) == 0)
      {
        if ((*(uint64_t (**)(uint64_t))(*(void *)v10 + 472))(v10)) {
          return 0;
        }
        uint64_t v11 = *(void *)(a1 + 1200);
        if (v11 && (v11 & 7) == 0)
        {
          if (((*(uint64_t (**)(uint64_t))(*(void *)v11 + 480))(v11) & 1) == 0)
          {
LABEL_22:
            return sub_1000B47C8(a1, a2);
          }
          return 0;
        }
      }
      goto LABEL_31;
    }
LABEL_32:
    __break(0x550Au);
    JUMPOUT(0x1000B21A8);
  }
  uint64_t result = 1;
  switch(*(_DWORD *)(a1 + 1404))
  {
    case 0:
    case 4:
      return result;
    case 2:
      unsigned int v7 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 392);
      uint64_t v8 = a2;
      goto LABEL_30;
    case 3:
      unsigned int v7 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 432);
      uint64_t v8 = a2;
      goto LABEL_30;
    case 5:
      unsigned int v7 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 440);
      uint64_t v8 = a2;
LABEL_30:
      uint64_t result = v7(v8);
      break;
    default:
      goto LABEL_22;
  }
  return result;
}

uint64_t sub_1000B21C0(uint64_t result, uint64_t a2)
{
  if (!result || (v2 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (!result) {
    goto LABEL_11;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 1216);
  if (v4 >= 4) {
    goto LABEL_29;
  }
  if (v4 != 2)
  {
LABEL_11:
    unsigned int v6 = *(_DWORD *)(v2 + 1216);
    if (v6 <= 3)
    {
      if (v6 == 2)
      {
        uint64_t v7 = *(int *)(v2 + 1404);
        if (v7 < 6) {
          return dword_1000FFBF0[v7];
        }
        return 0;
      }
      uint64_t result = *(void *)(v2 + 1200);
      if (result && (result & 7) == 0)
      {
        if ((*(uint64_t (**)(uint64_t))(*(void *)result + 472))(result)) {
          return 0;
        }
        uint64_t result = *(void *)(v2 + 1200);
        if (result && (result & 7) == 0)
        {
          if (((*(uint64_t (**)(uint64_t))(*(void *)result + 480))(result) & 1) == 0) {
            goto LABEL_22;
          }
          return 0;
        }
      }
      goto LABEL_28;
    }
LABEL_29:
    __break(0x550Au);
    return result;
  }
  unsigned int v5 = *(_DWORD *)(v2 + 1404);
  if (v5 <= 5)
  {
    if (v5 != 2) {
      return (*(unsigned int (**)(uint64_t))(*(void *)a2 + 352))(a2) != 0;
    }
    uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 400);
    return v8(a2);
  }
LABEL_22:
  return sub_1000B48F8(v2, a2);
}

uint64_t sub_1000B23B4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  unsigned int v3 = *(_DWORD *)(result + 1216);
  if (v3 >= 4)
  {
LABEL_21:
    __break(0x550Au);
    return result;
  }
  if (v3 == 2)
  {
    uint64_t result = sub_10004CDB4();
    if (result && (result & 7) == 0)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)result + 72))(result)) {
        return 6;
      }
      else {
        return 5;
      }
    }
    goto LABEL_20;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 472))(result)) {
    return 0;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)result + 480))(result)) {
    return 0;
  }
  return sub_1000B4A28(v2, a2);
}

uint64_t sub_1000B24EC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (!result) {
    goto LABEL_8;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 1216);
  if (v4 >= 4) {
    goto LABEL_21;
  }
  if (v4 != 2)
  {
LABEL_8:
    unsigned int v5 = *(_DWORD *)(v2 + 1216);
    if (v5 <= 3)
    {
      if (v5 == 2) {
        return 0;
      }
      uint64_t result = *(void *)(v2 + 1200);
      if (result && (result & 7) == 0)
      {
        if (((*(uint64_t (**)(uint64_t))(*(void *)result + 472))(result) & 1) == 0)
        {
          uint64_t result = *(void *)(v2 + 1200);
          if (result && (result & 7) == 0)
          {
            if ((*(uint64_t (**)(uint64_t))(*(void *)result + 480))(result)) {
              return 0;
            }
            goto LABEL_17;
          }
          goto LABEL_20;
        }
        return 0;
      }
LABEL_20:
      __break(0x5516u);
    }
LABEL_21:
    __break(0x550Au);
    return result;
  }
LABEL_17:
  return sub_1000B4B58(v2, a2);
}

uint64_t sub_1000B262C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unsigned int v3 = *(_DWORD *)(result + 1216);
      if (v3 < 4)
      {
        if (v3 == 2) {
          return 0;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v6 == 2);
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 408))(a2);
          unsigned int v8 = *(_DWORD *)(v2 + 1216);
          if (v8 <= 3)
          {
            uint64_t v4 = result;
            (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v7, v8 == 2);
            return v4;
          }
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2778(uint64_t result, uint64_t a2)
{
  if (!result || (v2 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_18;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_18:
      __break(0x550Au);
      return result;
    }
    if (v4 == 2)
    {
      unsigned int v5 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 432);
      return v5(a2);
    }
  }
  unsigned int v6 = *(_DWORD *)(v2 + 1216);
  if (v6 > 3) {
    goto LABEL_18;
  }
  if (v6 == 2) {
    return 0;
  }
  return sub_1000B4C88(v2, a2);
}

uint64_t sub_1000B2880(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  unsigned int v2 = *(_DWORD *)(result + 1216);
  if (v2 >= 4)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (v2 == 2) {
    return 0;
  }
  else {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 632))(a2);
  }
}

uint64_t sub_1000B28E0(uint64_t result, uint64_t a2)
{
  if (!result || (v2 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_18;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  if (result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_18:
      __break(0x550Au);
      return result;
    }
    if (v4 == 2)
    {
      unsigned int v5 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 440);
      return v5(a2);
    }
  }
  unsigned int v6 = *(_DWORD *)(v2 + 1216);
  if (v6 > 3) {
    goto LABEL_18;
  }
  if (v6 == 2) {
    return 0;
  }
  return sub_1000B4DB8(v2, a2);
}

void sub_1000B29E8(uint64_t a1, uint64_t a2, int a3, int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_81;
  }
  uint64_t v9 = sub_100033488();
  memset(&__str, 0, sizeof(__str));
  if (a4 < 1) {
    return;
  }
  uint64_t v10 = v9;
  int v11 = 0;
  BOOL v13 = (v9 & 7) == 0 && v9 != 0;
  do
  {
    int v14 = a3 + v11;
    if (__OFADD__(a3, v11))
    {
      __break(0x5500u);
LABEL_81:
      __break(0x5516u);
LABEL_82:
      __break(0x5513u);
      JUMPOUT(0x1000B2F00);
    }
    if (v14 <= 11)
    {
      int v15 = sub_1000B0330(a1, a3 + v11);
      int v16 = "";
      if (v15)
      {
        switch(v14)
        {
          case 1:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376267, &__str);
            std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type size = __str.__r_.__value_.__l.__size_;
            }
            if (size) {
              goto LABEL_71;
            }
            int v16 = "Playlists";
            break;
          case 2:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376268, &__str);
            std::string::size_type v18 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v18 = __str.__r_.__value_.__l.__size_;
            }
            if (v18) {
              goto LABEL_71;
            }
            int v16 = "Artists";
            break;
          case 3:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376269, &__str);
            std::string::size_type v19 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v19 = __str.__r_.__value_.__l.__size_;
            }
            if (v19) {
              goto LABEL_71;
            }
            int v16 = "Albums";
            break;
          case 4:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376271, &__str);
            std::string::size_type v20 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v20 = __str.__r_.__value_.__l.__size_;
            }
            if (v20) {
              goto LABEL_71;
            }
            int v16 = "Genres";
            break;
          case 5:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376270, &__str);
            std::string::size_type v21 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v21 = __str.__r_.__value_.__l.__size_;
            }
            if (v21) {
              goto LABEL_71;
            }
            int v16 = "Songs";
            break;
          case 6:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376272, &__str);
            std::string::size_type v22 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v22 = __str.__r_.__value_.__l.__size_;
            }
            if (v22) {
              goto LABEL_71;
            }
            int v16 = "Composers";
            break;
          case 7:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376273, &__str);
            std::string::size_type v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v23 = __str.__r_.__value_.__l.__size_;
            }
            if (v23) {
              goto LABEL_71;
            }
            int v16 = "Audiobooks";
            break;
          case 8:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376274, &__str);
            std::string::size_type v24 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v24 = __str.__r_.__value_.__l.__size_;
            }
            if (v24) {
              goto LABEL_71;
            }
            int v16 = "Podcasts";
            break;
          case 9:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376275, &__str);
            std::string::size_type v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
            }
            if (v25) {
              goto LABEL_71;
            }
            int v16 = "Nested Playlists";
            break;
          case 10:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376266, &__str);
            std::string::size_type v26 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v26 = __str.__r_.__value_.__l.__size_;
            }
            if (v26) {
              goto LABEL_71;
            }
            int v16 = "Genius Mix";
            break;
          case 11:
            if (!v13) {
              goto LABEL_81;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88))(v10, 1376276, &__str);
            std::string::size_type v27 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v27 = __str.__r_.__value_.__l.__size_;
            }
            if (v27) {
              goto LABEL_71;
            }
            int v16 = "iTunesU";
            break;
          default:
            int v16 = "";
            break;
        }
      }
      std::string::assign(&__str, v16);
LABEL_71:
      unint64_t v28 = a5->__r_.__value_.__l.__size_;
      if (v28 >= a5->__r_.__value_.__r.__words[2])
      {
        unsigned int v29 = sub_1000B6948(a5, &__str);
      }
      else
      {
        sub_1000B68D8((uint64_t)a5, &__str);
        if (v28 >= 0xFFFFFFFFFFFFFFE8) {
          goto LABEL_82;
        }
        unsigned int v29 = (std::string *)(v28 + 24);
      }
      a5->__r_.__value_.__l.__size_ = (std::string::size_type)v29;
    }
    ++v11;
  }
  while (a4 != v11);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1000B2F2C(uint64_t a1, uint64_t a2, unsigned int a3, signed int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_36;
  }
  unsigned int v5 = *(_DWORD *)(a1 + 1216);
  if (v5 >= 4)
  {
LABEL_37:
    __break(0x550Au);
    goto LABEL_38;
  }
  if (v5 == 1)
  {
    sub_1000B3124(a1, a2, a3, a4, a5);
    return;
  }
  uint64_t v9 = sub_10004CDB4();
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 80))(v9))
  {
    if (a4 < 1) {
      return;
    }
    int v10 = 0;
    while (!__OFADD__(a3, v10))
    {
      if (!(a3 + v10))
      {
        uint64_t v11 = sub_10005176C();
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_36;
        }
        (*(void (**)(std::string *__return_ptr))(*(void *)v11 + 88))(&__p);
        unint64_t size = a5->__r_.__value_.__l.__size_;
        if (size >= a5->__r_.__value_.__r.__words[2])
        {
          BOOL v13 = sub_10002A048(a5, &__p);
        }
        else
        {
          sub_100029FB4(a5, &__p);
          if (size >= 0xFFFFFFFFFFFFFFE8) {
            goto LABEL_38;
          }
          BOOL v13 = (std::string *)(size + 24);
        }
        a5->__r_.__value_.__l.__size_ = (std::string::size_type)v13;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      if (a4 == ++v10) {
        return;
      }
    }
    __break(0x5500u);
    goto LABEL_36;
  }
  if (a3) {
    return;
  }
  uint64_t v14 = sub_10005176C();
  if (!v14 || (v14 & 7) != 0) {
    goto LABEL_36;
  }
  (*(void (**)(std::string *__return_ptr))(*(void *)v14 + 88))(&__p);
  unint64_t v15 = a5->__r_.__value_.__l.__size_;
  if (v15 >= a5->__r_.__value_.__r.__words[2])
  {
    int v16 = sub_10002A048(a5, &__p);
  }
  else
  {
    sub_100029FB4(a5, &__p);
    if (v15 >= 0xFFFFFFFFFFFFFFE8)
    {
LABEL_38:
      __break(0x5513u);
      return;
    }
    int v16 = (std::string *)(v15 + 24);
  }
  a5->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1000B3124(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  if ((a3 & 0x80000000) != 0 || !a4)
  {
    sub_1000EE4F4(0, 4, "%s:%d Invalid startIndex(%d) or count(%d)!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 9569, a3, a4);
    return;
  }
  unint64_t v8 = (__PAIR64__(a4, a3) - 1) >> 32;
  sub_10003B238((uint64_t)a5);
  if (v8)
  {
    if (a3) {
      uint64_t v9 = a3 - 1;
    }
    else {
      uint64_t v9 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, unint64_t, std::string *))(*(void *)a2 + 472))(a2, v9, v8, a5);
  }
  if (!a3)
  {
    int v10 = (const std::string *)a5->__r_.__value_.__r.__words[0];
    uint64_t v11 = sub_10005176C();
    if (v11 && (v11 & 7) == 0)
    {
      (*(void (**)(std::string *__return_ptr))(*(void *)v11 + 88))(&__p);
      sub_1000B4FDC(a5, v10, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return;
    }
LABEL_17:
    __break(0x5516u);
  }
}

void sub_1000B3258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  unsigned int v5 = *(_DWORD *)(a1 + 1216);
  if (v5 >= 4)
  {
LABEL_8:
    __break(0x550Au);
    return;
  }
  if (v5 == 1) {
    sub_1000B3288(a1, a2, a3, a4, a5);
  }
}

void sub_1000B3288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10003B238(a5);
    if ((a3 & 0x80000000) != 0 || !a4)
    {
      sub_1000EE4F4(0, 4, "%s:%d Invalid startIndex(%d) or count(%d)!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 9606, a3, a4);
    }
    else
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 480);
      v9(a2, a3, a4, a5);
    }
  }
}

void sub_1000B3368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_32;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4)
  {
LABEL_31:
    __break(0x550Au);
    goto LABEL_32;
  }
  if (v6 == 1)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
    unsigned int v12 = *(_DWORD *)(a1 + 1216);
    if (v12 <= 3)
    {
      uint64_t v13 = v11;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v12 == 2);
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 496))(a2, a3, a4, a5);
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 <= 3)
      {
        unint64_t v15 = *(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
        v15(a2, v13, v14 == 2);
        return;
      }
    }
    goto LABEL_31;
  }
  uint64_t v16 = sub_10004CDB4();
  if (!v16 || (v16 & 7) != 0)
  {
LABEL_32:
    __break(0x5516u);
    JUMPOUT(0x1000B36A8);
  }
  int v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 80))(v16);
  int v21 = *(_DWORD *)(a1 + 1404);
  if (v17)
  {
    switch(v21)
    {
      case 0:
      case 4:
        goto LABEL_18;
      case 2:
        std::string::size_type v22 = *(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 528);
        uint64_t v23 = a2;
        uint64_t v24 = a3;
        uint64_t v25 = a4;
        std::string::size_type v26 = a5;
        goto LABEL_16;
      case 3:
        sub_1000B37AC(a1, a2, a3, a4, (uint64_t)a5);
        return;
      case 5:
        sub_1000B3900(a1, a2, a3, a4, (uint64_t)a5);
        return;
      default:
        std::string::size_type v22 = *(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 496);
        uint64_t v23 = a2;
        uint64_t v24 = a3;
        uint64_t v25 = a4;
        std::string::size_type v26 = a5;
LABEL_16:
        v22(v23, v24, v25, v26);
        break;
    }
  }
  else if ((v21 | 4) == 4)
  {
LABEL_18:
    sub_1000B36C0(a1, v18, v19, v20, a5);
  }
}

void sub_1000B36C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v6 = sub_100033488(), memset(&__str, 0, sizeof(__str)), !v6) || (v6 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v6 + 88))(v6, 1376258, &__str);
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::assign(&__str, "All");
  }
  unint64_t v8 = a5->__r_.__value_.__l.__size_;
  if (v8 < a5->__r_.__value_.__r.__words[2])
  {
    sub_1000B68D8((uint64_t)a5, &__str);
    if (v8 < 0xFFFFFFFFFFFFFFE8)
    {
      uint64_t v9 = (std::string *)(v8 + 24);
      goto LABEL_13;
    }
LABEL_17:
    __break(0x5513u);
    return;
  }
  uint64_t v9 = sub_1000B6948(a5, &__str);
LABEL_13:
  a5->__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

uint64_t sub_1000B37AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4
    || (uint64_t v11 = result,
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v10 == 2),
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 544))(a2, a3, a4, a5),
        unsigned int v12 = *(_DWORD *)(v5 + 1216),
        v12 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
  return v13(a2, v11, v12 == 2);
}

uint64_t sub_1000B3900(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result || (v5 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 72))(result);
  if (!result) {
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4
    || (uint64_t v11 = result,
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v10 == 2),
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 552))(a2, a3, a4, a5),
        unsigned int v12 = *(_DWORD *)(v5 + 1216),
        v12 > 3))
  {
LABEL_13:
    __break(0x550Au);
    return result;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
  return v13(a2, v11, v12 == 2);
}

void sub_1000B3AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_43;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4)
  {
LABEL_42:
    __break(0x550Au);
    goto LABEL_43;
  }
  if (v6 == 1)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
    unsigned int v12 = *(_DWORD *)(a1 + 1216);
    if (v12 <= 3)
    {
      uint64_t v13 = v11;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v12 == 2);
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 504))(a2, a3, a4, a5);
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 <= 3)
      {
        unint64_t v15 = *(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
        v15(a2, v13, v14 == 2);
        return;
      }
    }
    goto LABEL_42;
  }
  uint64_t v16 = sub_10004CDB4();
  if (!v16 || (v16 & 7) != 0) {
LABEL_43:
  }
    __break(0x5516u);
  int v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 80))(v16);
  unsigned int v21 = *(_DWORD *)(a1 + 1404);
  if (!v17)
  {
    if (v21 > 5 || v21 == 2) {
      return;
    }
    goto LABEL_35;
  }
  if (v21 > 5)
  {
    unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 504);
    v28(a2, a3, a4, a5);
    return;
  }
  if (v21 != 2)
  {
LABEL_35:
    sub_1000B36C0(a1, v18, v19, v20, a5);
    return;
  }
  memset(&__str, 0, sizeof(__str));
  uint64_t v22 = sub_100033488();
  if (!v22 || (v22 & 7) != 0) {
    goto LABEL_43;
  }
  (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v22 + 88))(v22, 1376265, &__str);
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::assign(&__str, "Season");
  }
  if ((int)a4 < 1)
  {
LABEL_31:
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v24 = 0;
    while (1)
    {
      memset(__s, 170, 20);
      memset(&v29, 170, sizeof(v29));
      std::string::basic_string(&v29, &__str);
      if (__OFADD__(a3, v24)) {
        break;
      }
      int v25 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 464))(a2, (a3 + v24));
      snprintf(__s, 0x14uLL, " %d", v25);
      std::string::append(&v29, __s);
      unint64_t v26 = a5->__r_.__value_.__l.__size_;
      if (v26 >= a5->__r_.__value_.__r.__words[2])
      {
        std::string::size_type v27 = sub_1000B6948(a5, &v29);
      }
      else
      {
        sub_1000B68D8((uint64_t)a5, &v29);
        if (v26 >= 0xFFFFFFFFFFFFFFE8) {
          goto LABEL_45;
        }
        std::string::size_type v27 = (std::string *)(v26 + 24);
      }
      a5->__r_.__value_.__l.__size_ = (std::string::size_type)v27;
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
      if (a4 == ++v24) {
        goto LABEL_31;
      }
    }
    __break(0x5500u);
LABEL_45:
    __break(0x5513u);
  }
}

void sub_1000B3EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_65:
    __break(0x5516u);
LABEL_66:
    __break(0x5500u);
LABEL_67:
    __break(0x5513u);
LABEL_68:
    __break(0x550Au);
    JUMPOUT(0x1000B43C0);
  }
  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4) {
    goto LABEL_68;
  }
  if (v6 != 1)
  {
    uint64_t v16 = sub_100033488();
    if ((int)a4 < 1) {
      return;
    }
    uint64_t v17 = v16;
    int v18 = 0;
    BOOL v20 = (v16 & 7) == 0 && v16 != 0;
    while (2)
    {
      memset(&__str, 0, sizeof(__str));
      if (!__OFADD__(a3, v18))
      {
        switch(a3 + v18)
        {
          case 0:
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376259, &__str);
            std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type size = __str.__r_.__value_.__l.__size_;
            }
            if (size) {
              goto LABEL_53;
            }
            uint64_t v22 = "Movies";
            goto LABEL_52;
          case 1:
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376261, &__str);
            std::string::size_type v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v23 = __str.__r_.__value_.__l.__size_;
            }
            if (v23) {
              goto LABEL_53;
            }
            uint64_t v22 = "Music Videos";
            goto LABEL_52;
          case 2:
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376260, &__str);
            std::string::size_type v24 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v24 = __str.__r_.__value_.__l.__size_;
            }
            if (v24) {
              goto LABEL_53;
            }
            uint64_t v22 = "TV Shows";
            goto LABEL_52;
          case 3:
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376262, &__str);
            std::string::size_type v25 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
            }
            if (v25) {
              goto LABEL_53;
            }
            uint64_t v22 = "Video Podcasts";
            goto LABEL_52;
          case 4:
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376264, &__str);
            std::string::size_type v26 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v26 = __str.__r_.__value_.__l.__size_;
            }
            if (v26) {
              goto LABEL_53;
            }
            uint64_t v22 = "Rentals";
            goto LABEL_52;
          case 5:
            uint64_t v27 = sub_10004CDB4();
            if (!v27 || (v27 & 7) != 0) {
              goto LABEL_65;
            }
            if (!(*(unsigned int (**)(uint64_t))(*(void *)v27 + 72))(v27)) {
              goto LABEL_53;
            }
            if (!v20) {
              goto LABEL_65;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v17 + 88))(v17, 1376263, &__str);
            std::string::size_type v28 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v28 = __str.__r_.__value_.__l.__size_;
            }
            if (!v28)
            {
              uint64_t v22 = "Video ITunesU";
LABEL_52:
              std::string::assign(&__str, v22);
            }
LABEL_53:
            std::string::size_type v29 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            char v30 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v29 = __str.__r_.__value_.__l.__size_;
            }
            if (!v29) {
              goto LABEL_61;
            }
            unint64_t v31 = a5->__r_.__value_.__l.__size_;
            if (v31 >= a5->__r_.__value_.__r.__words[2])
            {
              std::string v32 = sub_1000B6948(a5, &__str);
            }
            else
            {
              sub_1000B68D8((uint64_t)a5, &__str);
              if (v31 >= 0xFFFFFFFFFFFFFFE8) {
                goto LABEL_67;
              }
              std::string v32 = (std::string *)(v31 + 24);
            }
            a5->__r_.__value_.__l.__size_ = (std::string::size_type)v32;
            char v30 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
LABEL_61:
            if (v30 < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
            if (a4 == ++v18) {
              return;
            }
            continue;
          default:
            goto LABEL_53;
        }
      }
      goto LABEL_66;
    }
  }
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v12 = *(_DWORD *)(a1 + 1216);
  if (v12 > 3) {
    goto LABEL_68;
  }
  uint64_t v13 = v11;
  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v12 == 2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 512))(a2, a3, a4, a5);
  unsigned int v14 = *(_DWORD *)(a1 + 1216);
  if (v14 > 3) {
    goto LABEL_68;
  }
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
  v15(a2, v13, v14 == 2);
}

uint64_t sub_1000B43D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 488))(a2, a3, a4, a5);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4424(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4
    || (uint64_t v11 = result,
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v10 == 2),
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 520))(a2, a3, a4, a5),
        unsigned int v12 = *(_DWORD *)(v5 + 1216),
        v12 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
  return v13(a2, v11, v12 == 2);
}

uint64_t sub_1000B4578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4
    || (uint64_t v11 = result,
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v10 == 2),
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 536))(a2, a3, a4, a5),
        unsigned int v12 = *(_DWORD *)(v5 + 1216),
        v12 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112);
  return v13(a2, v11, v12 == 2);
}

uint64_t sub_1000B46CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result || (v5 = result, (result & 7) != 0) || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_13;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 64))(result);
  if (!result) {
    return result;
  }
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4)
  {
LABEL_13:
    __break(0x550Au);
    return result;
  }
  if (v10 == 1)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 560);
    return v11(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1000B47C8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B48F8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4A28(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 376))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4B58(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 384))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4C88(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 416))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4DB8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, 1, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 424))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112))(a2, v5, v6 == 2);
          return v7;
        }
      }
      __break(0x550Au);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4EE8(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  uint64_t v2 = result;
  uint64_t result = sub_10004CDB4();
  if (!result) {
    goto LABEL_16;
  }
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 80))(result);
  int v4 = dword_10013B6CC;
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144))(result);
  *(unsigned char *)uint64_t v2 = 4;
  if (v2 == -1)
  {
LABEL_17:
    __break(0x5500u);
    return result;
  }
  uint64_t v5 = 0x100000000000000;
  if (!v3) {
    uint64_t v5 = 0;
  }
  if (!v4) {
    v5 |= 0x600000000000000uLL;
  }
  if (result) {
    v5 |= 0x800000000000000uLL;
  }
  *(void *)(v2 + 1) = v5 | 0xE000000000000000;
  return 0;
}

std::string *sub_1000B4FDC(std::string *a1, const std::string *a2, std::string *__str)
{
  if (!a1) {
    goto LABEL_23;
  }
  int v3 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_23;
  }
  int v4 = (std::string *)a2;
  std::string::size_type v5 = a1->__r_.__value_.__r.__words[0];
  uint64_t v6 = (uint64_t)a2 - a1->__r_.__value_.__r.__words[0];
  BOOL v7 = (unint64_t)a2 >= a1->__r_.__value_.__r.__words[0];
  if (v6 < 0) {
    BOOL v7 = (unint64_t)a2 < a1->__r_.__value_.__r.__words[0];
  }
  if (!v7) {
    goto LABEL_24;
  }
  unint64_t v8 = &a1->__r_.__value_.__r.__words[2];
  if (((unint64_t)&a1->__r_.__value_.__r.__words[2] & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
LABEL_24:
    __break(0x5513u);
    goto LABEL_25;
  }
  unint64_t size = a1->__r_.__value_.__l.__size_;
  unint64_t v11 = *v8;
  if (size < *v8)
  {
    if (a2 == (const std::string *)size)
    {
      sub_100029FB4(a1, __str);
      return v4;
    }
    if ((unint64_t)a2 > 0xFFFFFFFFFFFFFFE7) {
      goto LABEL_24;
    }
    sub_1000B6A6C(a1, a2, size, (uint64_t)&a2[1]);
    if (v5 && (v4 & 7) == 0)
    {
      std::string::operator=(v4, __str);
      return v4;
    }
    goto LABEL_23;
  }
  unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(size - v5) >> 3);
  unint64_t v22 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v21[0] = v13;
  v21[1] = v13;
  BOOL v14 = __CFADD__(v12, 1);
  unint64_t v15 = v12 + 1;
  if (v14)
  {
LABEL_25:
    __break(0x5500u);
LABEL_26:
    sub_10002A278((uint64_t)v3);
  }
  if (v15 > 0xAAAAAAAAAAAAAAALL) {
    goto LABEL_26;
  }
  uint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
  unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v5) >> 3);
  unint64_t v18 = 0x5555555555555556 * ((uint64_t)(v11 - v5) >> 3);
  if (v18 <= v15) {
    unint64_t v18 = v15;
  }
  if (v17 >= 0x555555555555555) {
    int64_t v19 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    int64_t v19 = v18;
  }
  sub_10002A298((uint64_t)v21, v19, v16, (uint64_t)v8);
  sub_1000B6B90((unint64_t)v21, __str);
  int v4 = sub_1000B6D84(v3, (uint64_t)v21, v4);
  sub_10002A4DC((uint64_t)v21);
  return v4;
}

uint64_t sub_1000B516C(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || !a2
    || (a2 & 7) != 0
    || (int v4 = (uint64_t *)(a2 + 32), ((a2 + 32) & 7) != 0)
    || (uint64_t v5 = *v4) == 0
    || (v5 & 7) != 0)
  {
LABEL_37:
    __break(0x5516u);
    goto LABEL_38;
  }
  unsigned int v6 = *(unsigned __int16 *)(v5 + 126);
  unsigned __int8 v11 = 0;
  if (sub_1000A453C((uint64_t)&v11, *(void *)(a1 + 8))) {
    goto LABEL_9;
  }
  if (v11 >= 2u) {
    goto LABEL_38;
  }
  if (!v11)
  {
LABEL_9:
    uint64_t v7 = 2;
  }
  else if (v6 > 0x4F)
  {
    uint64_t v7 = 4;
  }
  else
  {
    switch(v6)
    {
      case 0x16u:
        uint64_t v9 = sub_1000AC214(a1, v5);
        goto LABEL_36;
      case 0x17u:
        uint64_t v9 = sub_1000AC4B0(a1, v5);
        goto LABEL_36;
      case 0x18u:
        uint64_t v9 = sub_1000ACBC4(a1, v5);
        goto LABEL_36;
      case 0x19u:
        goto LABEL_29;
      case 0x1Au:
        uint64_t v10 = sub_1000AD1F4(a1, v5, a2);
        uint64_t v7 = v10;
        if (v10 == 6 || !v10) {
          uint64_t v5 = 0;
        }
        break;
      default:
        if (v6 == 56)
        {
          uint64_t v9 = sub_1000ADCA4(a1, v5);
        }
        else
        {
          if (v6 != 59)
          {
LABEL_29:
            uint64_t v7 = 4;
            sub_1000EE4F4(0, 4, "%s:%d ERROR: CIapLingoRemoteUI::StartProcessRemoteUICmd Unknown CmdID: 0x%04X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 9712, v6);
            break;
          }
          uint64_t v9 = sub_1000AC448(a1, v5);
        }
LABEL_36:
        uint64_t v7 = v9;
        break;
    }
  }
  if (*(unsigned __int8 *)(a2 + 60) >= 2u)
  {
LABEL_38:
    __break(0x550Au);
    JUMPOUT(0x1000B5394);
  }
  if (!v5 || *(unsigned char *)(a2 + 60)) {
    return v7;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_37;
  }
  if (*(unsigned __int16 *)(v5 + 126) == v6) {
    sub_1000C55C4(v5);
  }
  if (sub_1000ABD70(a1, v5, 0, 1u)) {
    return 2;
  }
  else {
    return v7;
  }
}

uint64_t sub_1000B53A8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 20) & 3) != 0) {
    goto LABEL_28;
  }
  if (*(_WORD *)(a2 + 20) != 26)
  {
    uint64_t v5 = 2;
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)(a2 + 104);
  if (!v4
    || (v4 & 7) != 0
    || (((_BYTE)v4 + 8) & 7) != 0
    || (((_BYTE)v4 + 4) & 3) != 0
    || (((_BYTE)v4 + 12) & 3) != 0
    || (((_BYTE)v4 + 16) & 7) != 0
    || ((v4 + 20) & 3) != 0
    || ((v4 + 24) & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  uint64_t result = sub_1000AD34C(result, a2, *(_DWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 4), *(_DWORD *)(v4 + 12), *(_DWORD *)(v4 + 16), *(_DWORD *)(v4 + 20), *(void *)(v4 + 24));
  if (result >= 0x20) {
    goto LABEL_29;
  }
  uint64_t v5 = result;
  if (!result || result == 6) {
    return v5;
  }
LABEL_20:
  if (*(unsigned __int8 *)(a2 + 60) < 2u)
  {
    if (*(unsigned char *)(a2 + 60)) {
      return v5;
    }
    unsigned int v6 = (uint64_t *)(a2 + 32);
    if (((a2 + 32) & 7) == 0)
    {
      uint64_t v7 = *v6;
      if (!*v6) {
        return v5;
      }
      if ((v7 & 7) == 0)
      {
        sub_1000C55C4(v7);
        if (sub_1000ABD70(v2, v7, 0, 1u)) {
          sub_1000C6E1C(v7);
        }
        return v5;
      }
    }
    goto LABEL_28;
  }
LABEL_29:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B5540(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)result;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(result + 8) - *(void *)result) >> 3) <= a2) {
    goto LABEL_12;
  }
  BOOL v3 = __CFADD__(v2, 24 * a2);
  if ((unsigned __int128)((uint64_t)a2 * (__int128)24) >> 64 != (uint64_t)(24 * a2) >> 63 || v3)
  {
    __break(0x5513u);
  }
  else if (!v2 || (uint64_t result = v2 + 24 * a2, (result & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_1000308CC(result);
  }
  return result;
}

uint64_t sub_1000B55C8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      if ((a2 & 7) == 0) {
        return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 64))(a2);
      }
    }
    else
    {
      __break(0x5518u);
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000B5624(uint64_t a1, int a2, uint64_t a3, void *a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_42;
  }
  int v6 = 0;
  switch(a2)
  {
    case 524289:
    case 524290:
      int v6 = 0x4000;
      goto LABEL_31;
    case 524291:
    case 524292:
      int v6 = 12288;
      goto LABEL_31;
    case 524298:
    case 524311:
      int v6 = 2308;
      goto LABEL_31;
    case 524299:
    case 524304:
      int v6 = 4096;
      goto LABEL_31;
    case 524300:
      int v6 = 224;
      goto LABEL_31;
    case 524301:
      int v6 = 3;
      goto LABEL_31;
    case 524302:
      int v6 = 2052;
      goto LABEL_31;
    case 524309:
      int v6 = 1024;
      goto LABEL_31;
    case 524312:
      int v6 = 4100;
      goto LABEL_31;
    case 524313:
      int v6 = 0;
      if (!a4 || a5 < 8) {
        goto LABEL_31;
      }
      if ((a4 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v7 = *(void *)(a1 + 1200);
      BOOL v9 = (v7 & 7) == 0 && v7 != 0;
      if (!a3)
      {
        if (v9)
        {
          int v6 = 0;
          if (!(*(unsigned int (**)(uint64_t, void, void, uint64_t))(*(void *)v7 + 296))(v7, 0, *a4, 1))goto LABEL_31; {
          sub_1000719BC(a1, 8u, 1);
          }
          uint64_t v10 = a1;
          unsigned int v11 = 8;
          goto LABEL_29;
        }
LABEL_42:
        __break(0x5516u);
        goto LABEL_43;
      }
      if (!v9) {
        goto LABEL_42;
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v7 + 296))(v7, 1, *a4, 1))
      {
        sub_1000719BC(a1, 0, 1);
        uint64_t v10 = a1;
        unsigned int v11 = 0;
LABEL_29:
        sub_1000719BC(v10, v11, 0);
      }
      int v6 = 0;
LABEL_31:
      pthread_mutex_lock(&stru_10013B6E0);
      dword_10013B6D8 |= v6;
      *(_DWORD *)(a1 + 1344) |= v6;
      pthread_mutex_unlock(&stru_10013B6E0);
      if (*(unsigned __int8 *)(a1 + 1384) >= 2u)
      {
LABEL_43:
        __break(0x550Au);
        JUMPOUT(0x1000B5870);
      }
      if (!*(unsigned char *)(a1 + 1384) && (*(_DWORD *)(a1 + 1344) || *(_DWORD *)(a1 + 1380)))
      {
        sub_10006D90C(*(void *)(a1 + 8));
        if (v12)
        {
          *(unsigned char *)(a1 + 1384) = 1;
          sub_10006D90C(*(void *)(a1 + 8));
          if (v13 && (v13 & 7) == 0)
          {
            unsigned int v14 = *(_DWORD *)(a1 + 1376);
            sub_10006ADC0(v13, v14);
            return;
          }
          goto LABEL_42;
        }
      }
      return;
    default:
      goto LABEL_31;
  }
}

uint64_t sub_1000B58D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 40))(result, a2, a3, 0, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B5910(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || !a2
    || (a2 & 7) != 0
    || (uint64_t v4 = (uint64_t *)(a2 + 32), ((a2 + 32) & 7) != 0)
    || (uint64_t v5 = *v4) == 0
    || (v5 & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
  unsigned int v6 = *(unsigned __int16 *)(v5 + 126);
  unsigned __int8 v10 = 0;
  if (sub_1000A453C((uint64_t)&v10, *(void *)(a1 + 8))) {
    goto LABEL_9;
  }
  if (v10 >= 2u) {
    goto LABEL_34;
  }
  if (!v10)
  {
LABEL_9:
    uint64_t v7 = 2;
  }
  else if (v6 > 0x4F)
  {
    uint64_t v7 = 4;
  }
  else
  {
    switch(v6)
    {
      case '<':
        uint64_t v7 = sub_1000ADD08(a1, v5);
        break;
      case '>':
        uint64_t v9 = sub_1000AE100(a1, v5, a2);
        goto LABEL_30;
      case '@':
        uint64_t v9 = sub_1000AF6D4(a1, v5, a2);
        goto LABEL_30;
      case 'B':
        uint64_t v9 = sub_1000AFA94(a1, v5, a2);
        if (v9 > 0x1F) {
          goto LABEL_34;
        }
LABEL_30:
        uint64_t v7 = v9;
        if (v9 == 6 || !v9) {
          uint64_t v5 = 0;
        }
        break;
      default:
        uint64_t v7 = 4;
        sub_1000EE4F4(0, 4, "%s:%d ERROR: CIapLingoRemoteUI::%s Unknown CmdID: 0x%04X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp", 10516, "ProcessEnhancedDBCmd", v6);
        break;
    }
  }
  if (*(unsigned __int8 *)(a2 + 60) >= 2u)
  {
LABEL_34:
    __break(0x550Au);
    JUMPOUT(0x1000B5B20);
  }
  if (!v5 || *(unsigned char *)(a2 + 60)) {
    return v7;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_33;
  }
  if (*(unsigned __int16 *)(v5 + 126) == v6) {
    sub_1000C55C4(v5);
  }
  if (sub_1000ABD70(a1, v5, 0, 1u)) {
    return 2;
  }
  else {
    return v7;
  }
}

uint64_t sub_1000B5B3C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || ((result + 8) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(result + 8);
    sub_10000B3B0(&v2);
    return v1;
  }
  return result;
}

uint64_t sub_1000B5B90(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || !a3
    || (a3 & 7) != 0
    || (result = (uint64_t)sub_100066EE8((dispatch_semaphore_t)result, (objc_class *)a2, 4, *(_WORD *)(a3 + 126), *(_DWORD *)(a3 + 68), (objc_class *)a3, 5, 0), *(void *)uint64_t v3 = off_1001264F0, !a2)|| (a2 & 7) != 0|| (result = sub_100062E24(a2, 4u), (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_13;
  }
  *(void *)(v3 + 96) = result;
  *(void *)(v3 + 104) = 0;
  *(_DWORD *)(v3 + 112) = 0;
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFF8)
  {
LABEL_13:
    __break(0x5513u);
    return result;
  }
  if (dword_10013B908) {
    *(_DWORD *)(v3 + 112) = sub_1000D92E0();
  }
  return v3;
}

uint64_t sub_1000B5C78(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B5F18(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B5C8C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000B5F18(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B5CD4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_47;
  }
  uint64_t v2 = *(void *)(a1 + 96);
  BOOL v4 = (v2 & 7) == 0 && v2 != 0;
  if (*(void *)(a1 + 104))
  {
    if (v4)
    {
      int v5 = sub_1000B53A8(v2, a1);
      goto LABEL_14;
    }
LABEL_47:
    __break(0x5516u);
    goto LABEL_48;
  }
  if (!v4) {
    goto LABEL_47;
  }
  int v5 = sub_1000B516C(v2, a1);
LABEL_14:
  if (v5 == 6)
  {
    unsigned int v6 = *(_DWORD **)(a1 + 104);
    if (!v6) {
      return 1;
    }
    if ((v6 & 7) == 0
      && ((unint64_t)(v6 + 2) & 7) == 0
      && ((unint64_t)(v6 + 3) & 3) == 0)
    {
      int v7 = v6[2];
      int v8 = v6[3];
      BOOL v9 = __CFADD__(v7, v8);
      unsigned int v10 = v7 + v8;
      if (v9) {
        goto LABEL_49;
      }
      unsigned int v11 = v6 + 4;
      if (((unint64_t)(v6 + 4) & 7) == 0)
      {
        uint64_t v12 = v6 + 5;
        if ((v12 & 3) == 0)
        {
          int v13 = *v11;
          int v14 = *v12;
          BOOL v9 = __CFADD__(v13, v14);
          unsigned int v15 = v13 + v14;
          if (!v9)
          {
            if (v10 > v15) {
              return 1;
            }
            else {
              return 2;
            }
          }
LABEL_49:
          __break(0x5500u);
LABEL_50:
          __break(0x5515u);
LABEL_51:
          __break(0x550Au);
LABEL_52:
          __break(0x5512u);
          JUMPOUT(0x1000B5F04);
        }
      }
    }
    goto LABEL_47;
  }
  pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFF8)
  {
LABEL_48:
    __break(0x5513u);
    goto LABEL_49;
  }
  uint64_t v16 = dword_10013B908;
  if (dword_10013B908)
  {
    pthread_once(&stru_10013B720, sub_1000B5FA4);
    unsigned int v17 = sub_1000D92E0();
    unsigned int v18 = *(_DWORD *)(a1 + 112);
    if (v18)
    {
      uint64_t v16 = 0;
      switch(*(_WORD *)(a1 + 20))
      {
        case 0x16:
          uint64_t v19 = qword_10013C0A8;
          if (!qword_10013C0A8) {
            goto LABEL_47;
          }
          goto LABEL_38;
        case 0x17:
          uint64_t v19 = qword_10013C0B0;
          if (!qword_10013C0B0) {
            goto LABEL_47;
          }
          goto LABEL_38;
        case 0x18:
          uint64_t v19 = qword_10013C0B8;
          if (!qword_10013C0B8) {
            goto LABEL_47;
          }
          goto LABEL_38;
        case 0x1A:
          uint64_t v19 = qword_10013C0C0;
          if (!qword_10013C0C0) {
            goto LABEL_47;
          }
LABEL_38:
          if ((v19 & 7) != 0) {
            goto LABEL_47;
          }
          uint64_t v20 = v17 - v18;
          if (v17 < v18) {
            goto LABEL_50;
          }
          uint64_t v21 = *(unsigned int *)(v19 + 76);
          if (v21 >= 8) {
            goto LABEL_51;
          }
          if (v21 >= 4) {
            goto LABEL_52;
          }
          if (~(unint64_t)dword_10013B900 < 4 * v21) {
            goto LABEL_48;
          }
          if (dword_10013B900[v21]) {
            (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v19 + 104))(v19, v20, 0, 0);
          }
          break;
        default:
          return v16;
      }
    }
    return 0;
  }
  return v16;
}

uint64_t sub_1000B5F18(uint64_t result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = (uint64_t *)result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  *(void *)uint64_t result = off_1001264F0;
  uint64_t result = *(void *)(result + 104);
  if (result)
  {
    if ((result & 7) == 0)
    {
      sub_1000B6704(result);
      operator delete();
    }
LABEL_9:
    __break(0x5516u);
    return result;
  }
  return (uint64_t)sub_100067084(v1);
}

void sub_1000B5FA4()
{
  sub_1000D8F10(0, 2, 0);
  qword_10013C0A8 = v0;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0B0 = v1;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0B8 = v2;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0C0 = v3;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0C8 = v4;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0D0 = v5;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0D8 = v6;
  sub_1000D8F10(0, 2, 0);
  qword_10013C0E0 = v7;
}

uint64_t sub_1000B60B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || !a3
    || (a3 & 7) != 0
    || (result = (uint64_t)sub_100066EE8((dispatch_semaphore_t)result, (objc_class *)a2, 4, *(_WORD *)(a3 + 126), *(_DWORD *)(a3 + 68), (objc_class *)a3, 5, 0), *(void *)uint64_t v3 = off_100126530, !a2)|| (a2 & 7) != 0|| (result = sub_100062E24(a2, 4u), (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_13;
  }
  *(void *)(v3 + 96) = result;
  *(void *)(v3 + 104) = 0;
  *(_DWORD *)(v3 + 112) = 0;
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFF8)
  {
LABEL_13:
    __break(0x5513u);
    return result;
  }
  if (dword_10013B908) {
    *(_DWORD *)(v3 + 112) = sub_1000D92E0();
  }
  return v3;
}

uint64_t *sub_1000B61A0(uint64_t *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B63C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000B61B4(uint64_t *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000B63C0(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000B61FC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || ((v2 = *(void *)(a1 + 96)) != 0 ? (BOOL v3 = (v2 & 7) == 0) : (BOOL v3 = 0), !v3))
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  int v4 = sub_1000B5910(v2, a1);
  if (v4 != 6)
  {
    pthread_once(&stru_10013B910, sub_1000D8E78);
    if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFF8)
    {
LABEL_29:
      __break(0x5513u);
LABEL_30:
      __break(0x5515u);
LABEL_31:
      __break(0x550Au);
LABEL_32:
      __break(0x5512u);
      JUMPOUT(0x1000B63A4);
    }
    if (dword_10013B908)
    {
      pthread_once(&stru_10013B720, sub_1000B5FA4);
      unsigned int v5 = sub_1000D92E0();
      unsigned int v6 = *(_DWORD *)(a1 + 112);
      if (v6)
      {
        switch(*(_WORD *)(a1 + 20))
        {
          case '<':
            uint64_t v7 = qword_10013C0C8;
            if (!qword_10013C0C8) {
              goto LABEL_28;
            }
            goto LABEL_20;
          case '>':
            uint64_t v7 = qword_10013C0D0;
            if (!qword_10013C0D0) {
              goto LABEL_28;
            }
            goto LABEL_20;
          case '@':
            uint64_t v7 = qword_10013C0D8;
            if (!qword_10013C0D8) {
              goto LABEL_28;
            }
            goto LABEL_20;
          case 'B':
            uint64_t v7 = qword_10013C0E0;
            if (!qword_10013C0E0) {
              goto LABEL_28;
            }
LABEL_20:
            if ((v7 & 7) != 0) {
              goto LABEL_28;
            }
            uint64_t v8 = v5 - v6;
            if (v5 < v6) {
              goto LABEL_30;
            }
            uint64_t v9 = *(unsigned int *)(v7 + 76);
            if (v9 >= 8) {
              goto LABEL_31;
            }
            if (v9 >= 4) {
              goto LABEL_32;
            }
            if (~(unint64_t)dword_10013B900 < 4 * v9) {
              goto LABEL_29;
            }
            if (dword_10013B900[v9]) {
              (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v7 + 104))(v7, v8, 0, 0);
            }
            break;
          default:
            return v4 == 6;
        }
      }
    }
  }
  return v4 == 6;
}

uint64_t *sub_1000B63C0(uint64_t *result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  *uint64_t result = (uint64_t)off_100126530;
  uint64_t result = (uint64_t *)result[13];
  if (result)
  {
    if ((result & 7) == 0) {
      operator delete();
    }
LABEL_9:
    __break(0x5516u);
    return result;
  }
  return sub_100067084(v1);
}

dispatch_semaphore_t sub_1000B6448(dispatch_semaphore_t result, uint64_t a2, uint64_t a3, objc_class *a4)
{
  if (!result) {
    goto LABEL_10;
  }
  int v4 = result;
  if ((result & 7) != 0 || !a3 || (a3 & 7) != 0) {
    goto LABEL_10;
  }
  int v6 = *(_DWORD *)(a3 + 64);
  if ((v6 + 32) >= 0x40) {
    goto LABEL_11;
  }
  uint64_t result = sub_100066EE8(result, (objc_class *)a2, v6, *(_WORD *)(a3 + 126), *(_DWORD *)(a3 + 68), (objc_class *)a3, 5, 0);
  v4->isa = (Class)off_100126570;
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  unsigned int v9 = *(_DWORD *)(a3 + 64);
  if (v9 + 32 < 0x40)
  {
    v4[12].isa = (Class)sub_100062E24(a2, v9);
    v4[14].isa = a4;
    return v4;
  }
LABEL_11:
  __break(0x550Au);
  return result;
}

uint64_t *sub_1000B6514(uint64_t *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B6630(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000B6528(uint64_t *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000B6630(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B6570(uint64_t result)
{
  if (result
    && (uint64_t v1 = result, (result & 7) == 0)
    && ((uint64_t result = *(void *)(result + 96)) != 0 ? (v2 = (result & 7) == 0) : (v2 = 0),
        v2
     && (uint64_t result = sub_1000708B8(result)) != 0
     && (result & 7) == 0
     && (char v3 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 624))(result, *(void *)(v1 + 112)),
         (uint64_t result = *(void *)(v1 + 96)) != 0)
     && (result & 7) == 0))
  {
    int v4 = *(_DWORD *)(v1 + 16);
    if ((v4 + 32) < 0x40)
    {
      sub_1000718F4(result, v4, *(unsigned __int16 *)(v1 + 20), *(_DWORD *)(v1 + 24), v3 ^ 1);
      return 0;
    }
  }
  else
  {
    __break(0x5516u);
  }
  __break(0x550Au);
  return result;
}

uint64_t *sub_1000B6630(uint64_t *result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  *uint64_t result = (uint64_t)off_100126570;
  uint64_t result = (uint64_t *)result[14];
  if (result)
  {
    if ((result & 7) == 0)
    {
      (*(void (**)(uint64_t *))(*result + 8))(result);
      goto LABEL_6;
    }
LABEL_9:
    __break(0x5516u);
    return result;
  }
LABEL_6:
  return sub_100067084(v1);
}

uint64_t sub_1000B66C4(uint64_t result, __int16 a2, int a3)
{
  if (!result
    || (result & 7) != 0
    || (*(_WORD *)uint64_t result = 0, *(_WORD *)(result + 2) = a2, *(_DWORD *)(result + 4) = a3, ((result + 8) & 7) != 0)
    || (*(void *)(result + 8) = 0, *(void *)(result + 16) = 0, (((_BYTE)result + 24) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)(result + 24) = 0;
  }
  return result;
}

uint64_t sub_1000B6704(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    if ((v1 & 7) == 0)
    {
      BOOL v2 = *(uint64_t **)(result + 24);
      sub_10002AEFC(&v2);
      operator delete();
    }
LABEL_7:
    __break(0x5516u);
  }
  return result;
}

void *sub_1000B6778(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (void *)*result;
      if (!*v1) {
        return v1;
      }
      if ((result & 7) == 0)
      {
        (*(void (**)(void *))(*result + 8))(result);
        return v1;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B67E0(uint64_t *a1, void *a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  BOOL v2 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_15;
  }
  char v3 = a1 + 2;
  if (((unint64_t)(a1 + 2) & 7) != 0) {
    goto LABEL_15;
  }
  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v13 = v4;
  long long v14 = v4;
  uint64_t v5 = (a1[1] - *a1) >> 3;
  unint64_t v6 = v5 + 1;
  if (v5 == -1)
  {
LABEL_16:
    __break(0x5500u);
LABEL_17:
    sub_10002A278((uint64_t)v2);
  }
  if (v6 >> 61) {
    goto LABEL_17;
  }
  unint64_t v8 = *v3 - *a1;
  if (v8 >> 2 > v6) {
    unint64_t v6 = v8 >> 2;
  }
  unint64_t v9 = v8 >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_10002AC34((uint64_t)&v13, v9, v5, (uint64_t)v3);
  unint64_t v11 = v14;
  if (!(void)v14 || (v14 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  *(void *)long long v14 = *a2;
  if (v11 >= 0xFFFFFFFFFFFFFFF8)
  {
    __break(0x5513u);
  }
  else
  {
    *(void *)&long long v14 = v11 + 8;
    sub_10002AB70(v2, &v13);
    uint64_t v12 = v2[1];
    sub_10002AE10((uint64_t)&v13);
    return v12;
  }
  return result;
}

uint64_t sub_1000B68D8(uint64_t result, std::string *__str)
{
  if (!result || (result & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    goto LABEL_7;
  }
  v5[0] = result;
  char v3 = *(std::string **)(result + 8);
  if ((unint64_t)v3 < 0xFFFFFFFFFFFFFFE8)
  {
    long long v4 = v3 + 1;
    v5[2] = v3 + 1;
    result += 16;
    if ((result & 7) == 0)
    {
      sub_10002A184(result, v3, __str);
      v5[1] = v4;
      return (uint64_t)sub_10002A1A0(v5);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(0x5513u);
  return result;
}

std::string *sub_1000B6948(std::string *a1, std::string *a2)
{
  if (!a1
    || (BOOL v2 = a1, (a1 & 7) != 0)
    || ((unint64_t)&a1->__r_.__value_.__r.__words[2] & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }
  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v10 = v3;
  *(_OWORD *)unint64_t v11 = v3;
  uint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1->__r_.__value_.__l.__size_ - a1->__r_.__value_.__r.__words[0]) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 == -1)
  {
LABEL_14:
    __break(0x5500u);
LABEL_15:
    sub_10002A278((uint64_t)v2);
  }
  if (v5 > 0xAAAAAAAAAAAAAAALL) {
    goto LABEL_15;
  }
  if (0x5555555555555556 * ((uint64_t)(a1->__r_.__value_.__r.__words[2] - a1->__r_.__value_.__r.__words[0]) >> 3) > v5) {
    unint64_t v5 = 0x5555555555555556 * ((uint64_t)(a1->__r_.__value_.__r.__words[2] - a1->__r_.__value_.__r.__words[0]) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1->__r_.__value_.__r.__words[2] - a1->__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555) {
    int64_t v7 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    int64_t v7 = v5;
  }
  sub_10002A298((uint64_t)&v10, v7, v4, (uint64_t)&a1->__r_.__value_.__r.__words[2]);
  uint64_t result = sub_10002A184((int)v2 + 16, v11[0], a2);
  if (v11[0] >= (std::string *)0xFFFFFFFFFFFFFFE8)
  {
    __break(0x5513u);
  }
  else
  {
    ++v11[0];
    sub_10002A1CC(v2, &v10);
    std::string::size_type size = v2->__r_.__value_.__l.__size_;
    sub_10002A4DC((uint64_t)&v10);
    return (std::string *)size;
  }
  return result;
}

std::string *sub_1000B6A6C(std::string *result, const std::string *a2, unint64_t a3, uint64_t a4)
{
  if (result)
  {
    int v4 = (int)result;
    if ((result & 7) == 0)
    {
      std::string::size_type size = (std::string *)result->__r_.__value_.__l.__size_;
      uint64_t v7 = (uint64_t)size - a4;
      BOOL v8 = __CFADD__((char *)size - a4, a2);
      BOOL v9 = (char *)a2 + (unint64_t)size - a4 >= (char *)a2;
      if (v7 < 0) {
        BOOL v9 = v8;
      }
      if (!v9) {
        goto LABEL_19;
      }
      unint64_t v11 = (const std::string *)((char *)a2 + v7);
      memset(v15, 170, sizeof(v15));
      uint64_t result = (std::string *)sub_10006BCA8(v15, (uint64_t)result, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a3 - ((void)a2 + v7)) >> 3));
      if (a3 <= (unint64_t)v11)
      {
LABEL_17:
        sub_10002A1A0(v15);
        return sub_1000B6E5C(a2, v11, size);
      }
      int v12 = v4 + 16;
      if ((v12 & 7) == 0)
      {
        long long v13 = v15[1];
        long long v14 = (std::string *)v11;
        while (v14 && (a2 & 7) == 0)
        {
          uint64_t result = sub_10002A184(v12, v13, v14);
          if ((unint64_t)v14 > 0xFFFFFFFFFFFFFFE7 || (unint64_t)v13 > 0xFFFFFFFFFFFFFFE7) {
            goto LABEL_19;
          }
          ++v14;
          v15[1] = ++v13;
          if ((unint64_t)v14 >= a3) {
            goto LABEL_17;
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_19:
  __break(0x5513u);
  return result;
}

unint64_t sub_1000B6B90(unint64_t result, std::string *a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (int v4 = (void *)(result + 16), v3 = *(void *)(result + 16), ((result + 24) & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }
  if (v3 != *(void *)(result + 24)) {
    goto LABEL_29;
  }
  unint64_t v6 = (unint64_t *)(result + 8);
  uint64_t result = *(void *)(result + 8);
  uint64_t v7 = *(void *)v2;
  uint64_t v8 = result - *(void *)v2;
  if (result > *(void *)v2)
  {
    int64_t v9 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    if (v9 >= -1) {
      uint64_t v10 = v9 + 1;
    }
    else {
      uint64_t v10 = v9 + 2;
    }
    uint64_t v11 = -(v10 >> 1);
    uint64_t v12 = -3 * (v10 >> 1);
    BOOL v13 = __CFADD__(result, 8 * v12);
    BOOL v14 = result + 8 * v12 >= result;
    if (v8 >= 24) {
      BOOL v14 = v13;
    }
    if (v14)
    {
      uint64_t v15 = 8 * v12;
      uint64_t result = (unint64_t)sub_1000B6F80((std::string *)result, *(std::string **)(v2 + 16), (std::string *)(result + 24 * v11));
      *int v4 = v16;
      unint64_t v17 = *v6;
      BOOL v18 = __CFADD__(v15, *v6);
      BOOL v19 = v15 + *v6 >= v17;
      if (v8 >= 24) {
        BOOL v19 = v18;
      }
      if (v19)
      {
        *unint64_t v6 = v17 + 24 * v11;
        goto LABEL_29;
      }
    }
LABEL_32:
    __break(0x5513u);
    goto LABEL_33;
  }
  if (v3 - v7 >= 0)
  {
    unint64_t v30 = 0xAAAAAAAAAAAAAAAALL;
    *(void *)&long long v20 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v20 + 1) = 0xAAAAAAAAAAAAAAAALL;
    long long v28 = v20;
    long long v29 = v20;
    uint64_t v21 = sub_10002A378(v2);
    if (v3 == v7) {
      unint64_t v22 = 1;
    }
    else {
      unint64_t v22 = ((v3 - v7) / 0xCuLL) & 0x1FFFFFFFFFFFFFFELL;
    }
    sub_10002A298((uint64_t)&v28, v22, v22 >> 2, v21);
    uint64_t result = sub_1000B70A8((uint64_t)&v28, *(std::string **)(v2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 16) - *(void *)(v2 + 8)) >> 3));
    uint64_t v23 = *(void *)v2;
    *(void *)uint64_t v2 = v28;
    *(void *)&long long v28 = v23;
    if ((v6 & 7) == 0)
    {
      unint64_t v24 = *v6;
      *unint64_t v6 = *((void *)&v28 + 1);
      *((void *)&v28 + 1) = v24;
      if ((v4 & 7) == 0)
      {
        long long v25 = *(_OWORD *)v4;
        *(_OWORD *)int v4 = v29;
        long long v29 = v25;
        sub_10002A4DC((uint64_t)&v28);
LABEL_29:
        int v26 = sub_10002A378(v2);
        uint64_t result = (unint64_t)sub_10002A184(v26, *(std::string **)(v2 + 16), a2);
        unint64_t v27 = *(void *)(v2 + 16);
        if (v27 <= 0xFFFFFFFFFFFFFFE7)
        {
          *int v4 = v27 + 24;
          return result;
        }
        goto LABEL_32;
      }
    }
    goto LABEL_31;
  }
LABEL_33:
  __break(0x550Cu);
  return result;
}

std::string *sub_1000B6D84(std::string *result, uint64_t a2, std::string *a3)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_6;
  }
  int v4 = &result->__r_.__value_.__r.__words[2];
  if (((unint64_t)&result->__r_.__value_.__r.__words[2] & 7) != 0) {
    goto LABEL_6;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  sub_10002A404(result + 16, (uint64_t)a3, (unint64_t)a3, result->__r_.__value_.__r.__words[0], result->__r_.__value_.__r.__words[0], v7, v7);
  *(void *)(a2 + 8) = v8;
  p_std::string::size_type size = &v3->__r_.__value_.__l.__size_;
  uint64_t result = sub_1000B7168((std::string *)&v3->__r_.__value_.__r.__words[2], a3, (std::string *)v3->__r_.__value_.__l.__size_, *(std::string **)(a2 + 16));
  *(void *)(a2 + 16) = result;
  std::string::size_type v10 = v3->__r_.__value_.__r.__words[0];
  v3->__r_.__value_.__r.__words[0] = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v10;
  if (((unint64_t)&v3->__r_.__value_.__l.__size_ & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
  }
  else
  {
    std::string::size_type v11 = *p_size;
    *p_std::string::size_type size = *(void *)(a2 + 16);
    *(void *)(a2 + 16) = v11;
    std::string::size_type v12 = *v4;
    *int v4 = *(void *)(a2 + 24);
    *(void *)(a2 + 24) = v12;
    *(void *)a2 = *(void *)(a2 + 8);
    return (std::string *)v7;
  }
  return result;
}

std::string *sub_1000B6E5C(const std::string *a1, const std::string *a2, std::string *a3)
{
  uint64_t result = sub_1000B6ED8(&var11, a1, a2, a3);
  BOOL v7 = result >= a1;
  if ((char *)result - (char *)a1 < 0) {
    BOOL v7 = result < a1;
  }
  if (!v7) {
    goto LABEL_7;
  }
  BOOL v8 = v6 >= (unint64_t)a3;
  if ((uint64_t)(v6 - (void)a3) < 0) {
    BOOL v8 = v6 < (unint64_t)a3;
  }
  if (!v8) {
LABEL_7:
  }
    __break(0x5513u);
  return result;
}

std::string *sub_1000B6ED8(std::string *result, const std::string *a2, const std::string *a3, std::string *a4)
{
  if (result)
  {
    int v4 = a4;
    if (a3 == a2) {
      return (std::string *)a3;
    }
    uint64_t v7 = a4 & 7;
    BOOL v8 = a4;
    int64_t v9 = a3;
    while ((unint64_t)v9 > 0x17)
    {
      if ((a3 & 7) != 0) {
        goto LABEL_12;
      }
      if ((unint64_t)v4-- < 0x18) {
        break;
      }
      if (v7) {
        goto LABEL_12;
      }
      uint64_t result = std::string::operator=(v4, --v9);
      --v8;
      if (v9 == a2) {
        return (std::string *)a3;
      }
    }
    __break(0x5513u);
  }
LABEL_12:
  __break(0x5516u);
  return result;
}

std::string *sub_1000B6F80(std::string *__str, std::string *a2, std::string *this)
{
  uint64_t result = sub_1000B6FFC(&var11, __str, a2, this);
  BOOL v7 = result >= __str;
  if ((char *)result - (char *)__str < 0) {
    BOOL v7 = result < __str;
  }
  if (!v7) {
    goto LABEL_7;
  }
  BOOL v8 = v6 >= (unint64_t)this;
  if ((uint64_t)(v6 - (void)this) < 0) {
    BOOL v8 = v6 < (unint64_t)this;
  }
  if (!v8) {
LABEL_7:
  }
    __break(0x5513u);
  return result;
}

std::string *sub_1000B6FFC(std::string *result, std::string *__str, std::string *a3, std::string *this)
{
  if (result)
  {
    int v4 = this;
    unint64_t v6 = __str;
    if (__str == a3) {
      return (std::string *)v6;
    }
    uint64_t v7 = this & 7;
    uint64_t v8 = __str & 7;
    int64_t v9 = this;
    while (v6 && !v8 && v4 && !v7)
    {
      uint64_t result = std::string::operator=(v4, v6);
      if ((unint64_t)v6 > 0xFFFFFFFFFFFFFFE7 || (unint64_t)v4 >= 0xFFFFFFFFFFFFFFE8) {
        goto LABEL_14;
      }
      ++v6;
      ++v4;
      ++v9;
      if (v6 == a3) {
        return a3;
      }
    }
  }
  __break(0x5516u);
LABEL_14:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000B70A8(uint64_t result, std::string *a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      memset(v7, 170, sizeof(v7));
      sub_10006BD00(v7, (void *)(result + 16), a3);
      if (v7[0] == v7[1]) {
        return (uint64_t)sub_10006667C(v7);
      }
      uint64_t v5 = a2 & 7;
      while (1)
      {
        uint64_t result = sub_10002A378(v3);
        if (!a2 || v5) {
          break;
        }
        uint64_t result = (uint64_t)sub_10002A184(result, v7[0], a2);
        if (v7[0] >= (std::string *)0xFFFFFFFFFFFFFFE8
          || (unint64_t v6 = v7[0] + 1, ++v7[0], (unint64_t)a2 >= 0xFFFFFFFFFFFFFFE8))
        {
          __break(0x5513u);
          break;
        }
        ++a2;
        if (v6 == v7[1]) {
          return (uint64_t)sub_10006667C(v7);
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

std::string *sub_1000B7168(std::string *result, std::string *__str, std::string *a3, std::string *this)
{
  if (__str == a3) {
    return this;
  }
  unint64_t v6 = __str;
  int v7 = (int)result;
  uint64_t v8 = __str & 7;
  while (v6 && !v8)
  {
    uint64_t result = sub_10002A184(v7, this, v6);
    if ((unint64_t)v6 > 0xFFFFFFFFFFFFFFE7 || (unint64_t)this >= 0xFFFFFFFFFFFFFFE8) {
      goto LABEL_10;
    }
    ++v6;
    ++this;
    if (v6 == a3) {
      return this;
    }
  }
  __break(0x5516u);
LABEL_10:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000B71F4()
{
  sub_10002B034((uint64_t)&qword_10013C090, "com.apple.mobileslideshow");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10013C090, (void *)&_mh_execute_header);
}

void sub_1000B7254(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      sub_10006D698(a1, a2, 5);
      *(void *)a1 = off_100126610;
      *(_DWORD *)(a1 + 1192) = -1;
      uint64_t v4 = *(void *)(a1 + 8);
      if (v4)
      {
        if ((v4 & 7) == 0)
        {
          sub_100062FD8(v4, 5u, 0);
          uint64_t v5 = *(void *)(a1 + 8);
          if (v5)
          {
            if ((v5 & 7) == 0)
            {
              uint64_t v6 = sub_100062F84(v5, 5u, 0);
              uint64_t v7 = sub_10006D8BC(v6);
              if (v7)
              {
                if ((v7 & 7) == 0)
                {
                  sub_10009F1D8(v7, 5, 37, *(void *)(a1 + 8));
                  sub_10006D90C(a2);
                  if (v8)
                  {
                    if ((v8 & 7) == 0)
                    {
                      int v9 = sub_10006AB88(v8);
                      *(_DWORD *)(a1 + 1192) = v9;
                      if (v9 == -1)
                      {
                        __break(0x5518u);
                      }
                      else
                      {
                        sub_10006D90C(a2);
                        if (v10 && (v10 & 7) == 0)
                        {
                          sub_10006AE88(v10, *(_DWORD *)(a1 + 1192));
                          return;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
}

void sub_1000B7368(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7254(a1, a2);
  }
}

void sub_1000B737C(uint64_t a1)
{
  if (a1
    && (a1 & 7) == 0
    && ((*(void *)a1 = off_100126610, sub_10006D90C(*(void *)(a1 + 8)), v2) ? (BOOL v3 = (v2 & 7) == 0) : (BOOL v3 = 0),
        v3
     && (sub_100068F78(v2, *(_DWORD *)(a1 + 1192)), *(_DWORD *)(a1 + 1192) = -1, (uint64_t v5 = sub_10006D8BC(v4)) != 0)
     && (v5 & 7) == 0))
  {
    sub_10009F1D8(v5, 5, 0, *(void *)(a1 + 8));
    sub_10006D970(a1);
  }
  else
  {
    __break(0x5516u);
  }
}

void sub_1000B7424(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B737C(a1);
  }
}

uint64_t sub_1000B7438(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000B737C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void sub_1000B7480(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    abort();
  }
  __break(0x5516u);
}

void sub_1000B74A4(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_42;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t v6 = (uint64_t *)sub_10006D8BC(a1);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t v7 = sub_10009F094(v6, 5);
  if (!v7) {
    return;
  }
  uint64_t v8 = (uint64_t)v7;
  if (a2 == 1)
  {
    uint64_t v13 = sub_10006D8BC(v7);
    if (!v13 || (v13 & 7) != 0) {
      goto LABEL_42;
    }
    unsigned int v14 = sub_10009FA3C(v13, v8);
    if (a3 == 5)
    {
      sub_10006D90C(*(void *)(a1 + 8));
      if (v27)
      {
        sub_10006D90C(*(void *)(a1 + 8));
        if (!v28 || (v28 & 7) != 0) {
          goto LABEL_42;
        }
        sub_10006AE88(v28, *(_DWORD *)(a1 + 1192));
      }
      uint64_t v18 = a1;
      uint64_t v19 = v8;
      char v20 = v14;
      char v17 = 0;
      uint64_t v21 = 1;
      unsigned int v26 = 3;
LABEL_40:
      sub_1000B776C(v18, v19, v20, v17, v21, v26);
      return;
    }
    if (a3 != 1) {
      return;
    }
    sub_10006D90C(*(void *)(a1 + 8));
    if (v15)
    {
      sub_10006D90C(*(void *)(a1 + 8));
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_42;
      }
      sub_10006AE88(v16, *(_DWORD *)(a1 + 1192));
    }
    char v17 = sub_1000B7708(a1, v8, v14);
    uint64_t v18 = a1;
    uint64_t v19 = v8;
    char v20 = v14;
    uint64_t v21 = 0;
LABEL_34:
    unsigned int v26 = 2;
    goto LABEL_40;
  }
  if (a2 == 32)
  {
    uint64_t v22 = sub_10003E5D0();
    if (*(_DWORD *)(a1 + 1192) != a3) {
      return;
    }
    if (!v22 || (v22 & 7) != 0) {
      goto LABEL_42;
    }
    uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 416))(v22);
    if (v23 != 1) {
      return;
    }
    uint64_t v24 = sub_10006D8BC(v23);
    if (!v24 || (v24 & 7) != 0)
    {
LABEL_42:
      __break(0x5516u);
      return;
    }
    unsigned int v25 = sub_10009FA3C(v24, v8);
    char v17 = sub_1000B7708(a1, v8, v25);
    uint64_t v18 = a1;
    uint64_t v19 = v8;
    char v20 = v25;
    uint64_t v21 = 1;
    goto LABEL_34;
  }
  if (a2 != 4) {
    return;
  }
  uint64_t v9 = sub_10003E5D0();
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_42;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 416))(v9) == 1)
  {
    sub_10006D90C(*(void *)(a1 + 8));
    if (v10)
    {
      sub_10006D90C(*(void *)(a1 + 8));
      if (v11)
      {
        if ((v11 & 7) == 0)
        {
          sub_10006ACF0(v11, *(_DWORD *)(a1 + 1192), 500);
          sub_10006D90C(*(void *)(a1 + 8));
          if (v12)
          {
            if ((v12 & 7) == 0)
            {
              sub_10006ADC0(v12, *(_DWORD *)(a1 + 1192));
              return;
            }
          }
        }
      }
      goto LABEL_42;
    }
  }
}

uint64_t sub_1000B7708(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10006D8BC(result)) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v5 = sub_10009F8A0(result, a2) & 0xC;
    if (v5 > 7) {
      unsigned int v6 = a3;
    }
    else {
      unsigned int v6 = 0;
    }
    if (v5 == 4) {
      return 1;
    }
    else {
      return v6;
    }
  }
  return result;
}

void sub_1000B776C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, unsigned int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2)
  {
    __break(0x5518u);
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  uint64_t v10 = sub_10006D8BC(a1);
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_10;
  }
  sub_10009F924(v10, a2, 5, a3 | a4);
  if (a6 <= 7)
  {
    if ((a2 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)a2 + 16))(a2, 0);
      sub_1000C51E0();
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(0x550Au);
}

uint64_t sub_1000B78DC(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(unsigned char *)uint64_t result = 5;
    if (result != -1)
    {
      *(void *)(result + 1) = 0;
      return 0;
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5500u);
  return result;
}

void *sub_1000B790C(void *result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = (void **)result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v2 = (_DWORD *)*result;
  if (!*result) {
    return result;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_24;
  }
  unsigned int v3 = *v2;
  if (*v2 >= 8u)
  {
LABEL_25:
    __break(0x550Au);
    return result;
  }
  if (v3 < 3)
  {
    uint64_t v4 = v2 + 2;
    if ((v4 & 7) == 0)
    {
      if (*v4) {
LABEL_14:
      }
        operator delete[]();
      goto LABEL_15;
    }
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }
  if (v3 == 3)
  {
    unsigned int v6 = (void **)(v2 + 2);
    if ((v6 & 7) == 0)
    {
      uint64_t result = *v6;
      if (*v6)
      {
        if ((result & 3) == 0) {
          operator delete();
        }
        goto LABEL_24;
      }
      goto LABEL_15;
    }
    goto LABEL_24;
  }
  if (v3 == 4)
  {
    unsigned int v5 = v2 + 2;
    if ((v5 & 7) != 0) {
      goto LABEL_24;
    }
    if (*v5) {
      goto LABEL_14;
    }
  }
LABEL_15:
  uint64_t result = *v1;
  if (*v1)
  {
    if ((result & 7) == 0) {
      operator delete();
    }
    goto LABEL_24;
  }
  *uint64_t v1 = 0;
  return result;
}

void sub_1000B7A14(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_22;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v4 = (unsigned char *)(a1 + 4432);
  sub_10006D698(a1, a2, 2);
  *(void *)a1 = off_1001266C0;
  *(unsigned char *)(a1 + 4456) = 0;
  bzero((void *)(a1 + 1192), 0xCA8uLL);
  sub_10006D90C(a2);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_22;
  }
  int v6 = sub_10006AB88(v5);
  *(_DWORD *)(a1 + 4444) = v6;
  if (v6 == -1)
  {
    __break(0x5518u);
    goto LABEL_22;
  }
  sub_10006D90C(a2);
  if (!v7) {
    goto LABEL_22;
  }
  if ((v7 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v8 = sub_10006AE88(v7, *(_DWORD *)(a1 + 4444));
  uint64_t v9 = sub_10006D8BC(v8);
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_22;
  }
  sub_10009F1D8(v9, 2, 1068, *(void *)(a1 + 8));
  uint64_t v10 = sub_10002B778();
  if (v10)
  {
    if ((v10 & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 16))(v10, a1);
      goto LABEL_13;
    }
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
LABEL_13:
  uint64_t v11 = sub_10001EA7C();
  if (!v11) {
    goto LABEL_22;
  }
  if ((v11 & 7) != 0) {
    goto LABEL_22;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 16))(v11, a1);
  *(unsigned char *)(a1 + 4437) = 0;
  *(unsigned char *)(a1 + 4439) = 0;
  *(unsigned char *)(a1 + 4433) = 0;
  if ((a1 + 4434)) {
    goto LABEL_22;
  }
  *(unsigned char *)(a1 + 4434) = 0;
  if ((a1 + 4438)) {
    goto LABEL_22;
  }
  *(unsigned char *)(a1 + 4438) = 0;
  if ((v4 & 7) != 0) {
    goto LABEL_22;
  }
  *uint64_t v4 = 0;
  *(unsigned char *)(a1 + 4435) = 0;
  if (a1 != -4436)
  {
    *(unsigned char *)(a1 + 4436) = 0;
    *(_WORD *)(a1 + 4440) = 0;
    *(unsigned char *)(a1 + 4442) = 0;
    *(unsigned char *)(a1 + 4504) = 0;
    *(_WORD *)(a1 + 4456) = 0;
    if ((((_BYTE)a1 - 80) & 7) == 0)
    {
      *(void *)(a1 + 4528) = 0;
      *(_OWORD *)(a1 + 4464) = 0u;
      *(_OWORD *)(a1 + 4480) = 0u;
      *(void *)(a1 + 4496) = 0;
      return;
    }
    goto LABEL_22;
  }
LABEL_23:
  __break(0x5513u);
}

void sub_1000B7BF4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7A14(a1, a2);
  }
}

void sub_1000B7C08(uint64_t a1)
{
  if (!a1) {
    goto LABEL_33;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)a1 = off_1001266C0;
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  __int16 v13 = -21846;
  uint64_t v2 = sub_10006D8BC(a1);
  if (!v2) {
    goto LABEL_33;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10009F1D8(v2, 2, 0, *(void *)(a1 + 8));
  sub_10006D90C(*(void *)(a1 + 8));
  if (!v3) {
    goto LABEL_33;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10006AE88(v3, *(_DWORD *)(a1 + 4444));
  sub_10006D90C(*(void *)(a1 + 8));
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_33;
  }
  sub_100068F78(v4, *(_DWORD *)(a1 + 4444));
  *(_DWORD *)(a1 + 4444) = -1;
  uint64_t v5 = sub_10002B778();
  if (v5)
  {
    if ((v5 & 7) != 0) {
      goto LABEL_33;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 24))(v5, a1);
  }
  uint64_t v6 = sub_10001EA7C();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 24))(v6, a1);
  do
  {
    __int16 v13 = -1;
    unint64_t v14 = 0;
    int v7 = sub_10006FB58(a1, -1, &v13, &v14, 0xFFFFu);
    if (!v7 && v14) {
      operator delete[]();
    }
  }
  while (!v7);
  uint64_t v8 = *(void *)(a1 + 8);
  if (!v8) {
    goto LABEL_33;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v9 = sub_10001CE30(v8);
  uint64_t v10 = *(void *)(a1 + 8);
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_33;
  }
  if (sub_1000635E8(v10))
  {
    uint64_t v11 = sub_10002B778();
    if (!v11 || (v11 & 7) != 0) {
      goto LABEL_33;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 104))(v11, v9);
  }
  if (((a1 + 4528) & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
    return;
  }
  if (*(void *)(a1 + 4528)) {
    operator delete[]();
  }
  uint64_t v12 = -3240;
  do
    v12 += 24;
  while (v12);
  sub_10006D970(a1);
}

void sub_1000B7E40(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7C08(a1);
  }
}

uint64_t sub_1000B7E54(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000B7C08(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B7E9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result)
  {
    __break(0x5518u);
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v6 = sub_100063334(result, 2u);
  uint64_t result = sub_10006D8BC(v6);
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v7 = 2;
  uint64_t result = sub_10009EF00(result, v3, 2u);
  if (!result)
  {
LABEL_9:
    sub_100063380(v3, 2u);
    return v7;
  }
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (a2 <= 0xFF)
  {
    sub_1000B7F44(result, a2, a3);
    uint64_t v7 = v8;
    goto LABEL_9;
  }
LABEL_12:
  __break(0x550Au);
  return result;
}

void sub_1000B7F44(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_85;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_85;
  }
  uint64_t v8 = sub_10001CE30(v4);
  if (!v8) {
    goto LABEL_84;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000D289C();
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_85;
  }
  int v11 = sub_10009FE80(v10, v9);
  if (a2 > 0xFF)
  {
LABEL_86:
    __break(0x550Au);
    goto LABEL_87;
  }
  if (a2 <= 0x86)
  {
    if ((v9 & 7) != 0) {
      goto LABEL_85;
    }
    int v12 = v11;
    int v13 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232))(v9);
    int v14 = 0;
    int v15 = -1;
    unsigned int v16 = a2;
    unsigned int v17 = 0;
    int v18 = -1;
    switch(a2)
    {
      case 0u:
        int v18 = 0;
        if (v13) {
          int v15 = -134216698;
        }
        else {
          int v15 = -134217728;
        }
        unsigned int v17 = 27;
        goto LABEL_25;
      case 2u:
        int v14 = 1;
        unsigned int v17 = 8;
        int v15 = -256;
        int v18 = 1;
        break;
      case 3u:
        int v18 = 2;
        unsigned int v17 = 13;
        int v14 = 1;
        int v15 = -8192;
        break;
      case 4u:
        if (v13) {
          int v15 = -1047546;
        }
        else {
          int v15 = -1048576;
        }
        int v18 = 3;
        unsigned int v17 = 20;
LABEL_25:
        int v14 = 1;
        break;
      case 5u:
        int v18 = 4;
        int v14 = 1;
        int v15 = -2;
        unsigned int v17 = 1;
        break;
      case 0xDu:
        int v18 = 6;
        unsigned int v17 = 2;
        int v14 = 1;
        int v15 = -3;
        break;
      default:
        break;
    }
    if ((v15 & a3) != 0) {
      return;
    }
    v40[0] = 0xAAAAAAAAAAAAAAAALL;
    v40[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_10002EDDC((uint64_t)v40);
    uint64_t v19 = *(void *)(a1 + 8);
    if (!v19 || (v19 & 7) != 0) {
      goto LABEL_85;
    }
    __int16 v20 = sub_100063678(v19);
    if (a2 || (v20 & 0x2000) == 0)
    {
LABEL_40:
      if (a2) {
        BOOL v23 = 0;
      }
      else {
        BOOL v23 = v12 == 1;
      }
      int v24 = v23;
      if (v23)
      {
        uint64_t v25 = *(void *)(a1 + 8);
        if (!v25 || (v25 & 7) != 0) {
          goto LABEL_85;
        }
        int v26 = sub_100062ED4(v25, 2u);
        uint64_t v27 = 0;
        unsigned int v16 = 0;
      }
      else
      {
        if (__CFADD__(a1 + 1192, 24 * a2)) {
          goto LABEL_87;
        }
        if ((((_BYTE)a1 - 88) & 7) != 0 || (((_BYTE)a1 + 24 * (_BYTE)a2 - 72) & 7) != 0) {
          goto LABEL_85;
        }
        uint64_t v27 = 24 * a2;
        int v26 = *(_DWORD *)(a1 + v27 + 1208);
      }
      if (!__CFADD__(a1 + 1192, v27))
      {
        if ((((_BYTE)a1 - 88 + 24 * (_BYTE)v16) & 7) == 0)
        {
          unsigned int v28 = v26 ^ a3;
          sub_1000EE3E8((uint64_t)v40, (__darwin_time_t *)(a1 + 1192 + 24 * v16));
          if (v28)
          {
            if ((((_BYTE)a1 + 24 * (_BYTE)v16 - 72) & 7) != 0) {
              goto LABEL_85;
            }
            *(_DWORD *)(a1 + 24 * v16 + 1208) = a3;
            if (v24)
            {
              uint64_t v29 = *(void *)(a1 + 8);
              if (!v29 || (v29 & 7) != 0) {
                goto LABEL_85;
              }
              sub_100062B74(v29, 2u, a3);
            }
            if (v14)
            {
              int v30 = 0;
              if (v17 <= 1) {
                int v31 = 1;
              }
              else {
                int v31 = v17;
              }
              while (1)
              {
                if (v28)
                {
                  unint64_t v38 = 0xAAAAAAAAAAAAAAAALL;
                  uint64_t v39 = 0xAAAAAAAAAAAAAAAALL;
                  v37[0] = v18;
                  v37[1] = v30;
                  LOBYTE(v38) = a3 & 1;
                  uint64_t v32 = *(void *)(a1 + 8);
                  if (v32) {
                    BOOL v33 = (*(void *)(a1 + 8) & 7) == 0;
                  }
                  else {
                    BOOL v33 = 0;
                  }
                  if (!v33) {
                    goto LABEL_85;
                  }
                  uint64_t v39 = sub_10001CE30(v32);
                  uint64_t v34 = *(void *)(a1 + 8);
                  if (!v34 || (v34 & 7) != 0) {
                    goto LABEL_85;
                  }
                  sub_1000634E4(v34, 2u, 0, (uint64_t)v37, 24);
                }
                if (v28 >= 2)
                {
                  v28 >>= 1;
                  a3 >>= 1;
                  if (v31 != ++v30) {
                    continue;
                  }
                }
                break;
              }
            }
          }
          v40[0] = off_100123868;
          sub_1000EE300(v40);
          if (*(_DWORD *)(a1 + 4444) == -1) {
            return;
          }
          sub_10006D90C(*(void *)(a1 + 8));
          if (!v35) {
            return;
          }
          sub_10006D90C(*(void *)(a1 + 8));
          if (v36 && (v36 & 7) == 0)
          {
            sub_10006ADC0(v36, *(_DWORD *)(a1 + 4444));
            return;
          }
        }
LABEL_85:
        __break(0x5516u);
        goto LABEL_86;
      }
LABEL_87:
      __break(0x5513u);
      JUMPOUT(0x1000B833CLL);
    }
    uint64_t v21 = sub_1000D289C();
    if (!v21 || (v21 & 7) != 0) {
      goto LABEL_85;
    }
    uint64_t v22 = sub_10009EF00(v21, *(void *)(a1 + 8), 0);
    if (v22)
    {
      if ((v22 & 7) != 0) {
        goto LABEL_85;
      }
      if (sub_10008B984(v22) == 2) {
        a3 &= 0x300319u;
      }
      goto LABEL_40;
    }
LABEL_84:
    __break(0x5518u);
    goto LABEL_85;
  }
}

uint64_t sub_1000B8374(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_197;
  }
  if (!*(void *)(a1 + 8)) {
    return 89;
  }
  uint64_t v4 = sub_10006D8BC(a1);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_197;
  }
  if (!sub_1000A1834(v4, *(void *)(a1 + 8))) {
    return 89;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_197;
  }
  if (sub_1000622BC(v5)) {
    return 89;
  }
  if (!a2) {
    goto LABEL_197;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_197;
  }
  signed int v8 = *(unsigned __int16 *)(a2 + 126);
  uint64_t v9 = *(unsigned __int8 **)(a2 + 24);
  unsigned int v10 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v56 = *(void *)(a2 + 8);
  uint64_t v11 = sub_1000E66A8();
  if (!v11 || (v11 & 7) != 0) {
    goto LABEL_197;
  }
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 88))(v11);
  __int16 v62 = 135;
  sub_10004CDB4();
  if (!v56)
  {
    __break(0x5518u);
    goto LABEL_197;
  }
  uint64_t v6 = 2;
  if (v8 <= 128)
  {
    switch(v8)
    {
      case 0:
      case 2:
      case 3:
      case 4:
      case 5:
      case 13:
        if (v9)
        {
          int v13 = 0;
          int v14 = 0;
          int v15 = 0;
          switch(v10)
          {
            case 1u:
              goto LABEL_27;
            case 2u:
              goto LABEL_25;
            case 3u:
              goto LABEL_23;
            case 4u:
              if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFFDLL) {
                goto LABEL_198;
              }
              int v13 = v9[3] << 24;
LABEL_23:
              if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFDLL) {
                goto LABEL_198;
              }
              int v14 = v13 | (v9[2] << 16);
LABEL_25:
              if (v9 == (unsigned __int8 *)-1) {
                goto LABEL_198;
              }
              int v15 = v14 | (v9[1] << 8);
LABEL_27:
              int v16 = *v9;
              uint64_t v17 = sub_10004E9C8();
              if (!v17 || (v17 & 7) != 0) {
                goto LABEL_197;
              }
              (*(void (**)(uint64_t, uint64_t))(*(void *)v17 + 160))(v17, 3600000);
              sub_1000B7E9C(*(void *)(a1 + 8), v8, v15 | v16);
              if (!v8) {
                goto LABEL_30;
              }
              goto LABEL_62;
            default:
              goto LABEL_172;
          }
        }
        goto LABEL_172;
      case 6:
        if (v10) {
          goto LABEL_172;
        }
        if (v12) {
          int v21 = 0x1000000;
        }
        else {
          int v21 = 0;
        }
        LODWORD(v57) = v21;
        sub_1000C5B58(a2, v56, 0, 2, 7, *(_DWORD *)(a2 + 68), &v57, 4u);
        sub_1000C4B20(*(void *)(a1 + 8), a2, 0, 1u);
        sub_1000B9044(*(void *)(a1 + 8));
        return 0;
      case 8:
        char v22 = v12 ^ 1;
        if (v10 != 4) {
          char v22 = 1;
        }
        if (v22) {
          goto LABEL_172;
        }
        if (!v9) {
          goto LABEL_197;
        }
        unsigned int v23 = *(_DWORD *)v9;
        uint64_t v24 = sub_10004E9C8();
        if (!v24 || (v24 & 7) != 0) {
          goto LABEL_197;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v24 + 160))(v24, 3600000);
        if (sub_1000B91D8(*(void *)(a1 + 8), 8u, bswap32(v23), 0) != 25) {
          goto LABEL_62;
        }
LABEL_30:
        sub_1000C6E1C(a2);
        return 0;
      case 9:
        char v25 = v12 ^ 1;
        if (v10) {
          char v25 = 1;
        }
        if (v25) {
          goto LABEL_172;
        }
        uint64_t v26 = sub_10004E9C8();
        if (!v26 || (v26 & 7) != 0) {
          goto LABEL_197;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v26 + 160))(v26, 3600000);
        sub_1000B944C(*(void *)(a1 + 8));
        goto LABEL_62;
      case 10:
        if (v10 - 1 > 4) {
          goto LABEL_172;
        }
        if (!v9) {
          goto LABEL_197;
        }
        int v27 = *v9;
        uint64_t v28 = sub_10004E9C8();
        if (!v28 || (v28 & 7) != 0) {
          goto LABEL_197;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v28 + 160))(v28, 3600000);
        unsigned int v29 = 0;
        switch(v10)
        {
          case 2u:
            goto LABEL_74;
          case 3u:
            goto LABEL_72;
          case 4u:
            goto LABEL_70;
          case 5u:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFBLL) {
              goto LABEL_198;
            }
            unsigned int v29 = v9[4] << 24;
LABEL_70:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFCLL) {
              goto LABEL_198;
            }
            v29 |= v9[3] << 16;
LABEL_72:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFDLL) {
              goto LABEL_198;
            }
            v29 |= v9[2] << 8;
LABEL_74:
            if (v9 == (unsigned __int8 *)-1) {
              goto LABEL_198;
            }
            uint64_t v6 = 0;
            v29 |= v9[1];
LABEL_76:
            sub_1000B95C0(*(void *)(a1 + 8), v27, v29, 0);
            break;
          default:
            goto LABEL_76;
        }
        goto LABEL_172;
      case 11:
        if (v10 - 2 > 3) {
          goto LABEL_172;
        }
        if (!v9) {
          goto LABEL_197;
        }
        unsigned int v30 = 0;
        switch(v10)
        {
          case 2u:
            goto LABEL_86;
          case 3u:
            goto LABEL_84;
          case 4u:
            goto LABEL_82;
          case 5u:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFBLL) {
              goto LABEL_198;
            }
            unsigned int v30 = v9[4] << 24;
LABEL_82:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFCLL) {
              goto LABEL_198;
            }
            v30 |= v9[3] << 16;
LABEL_84:
            if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFDLL) {
              goto LABEL_198;
            }
            v30 |= v9[2] << 8;
LABEL_86:
            if (v9 == (unsigned __int8 *)-1) {
              goto LABEL_198;
            }
            uint64_t v6 = 0;
            v30 |= v9[1];
LABEL_88:
            sub_1000B97C8(a1, *v9, v30, 0);
            break;
          default:
            goto LABEL_88;
        }
        goto LABEL_172;
      case 12:
        memset(v59, 170, 24);
        if (v10 != 13) {
          goto LABEL_172;
        }
        if (!v9) {
          goto LABEL_197;
        }
        LODWORD(v57) = bswap32(*(_DWORD *)v9);
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFBLL) {
          goto LABEL_198;
        }
        HIDWORD(v57) = v9[4];
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFALL) {
          goto LABEL_198;
        }
        LODWORD(v58) = v9[5];
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFF9) {
          goto LABEL_198;
        }
        HIDWORD(v58) = v9[6];
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFF8) {
          goto LABEL_198;
        }
        unsigned int v31 = v9[7];
        *(_DWORD *)uint64_t v59 = v31;
        if (v31 > 3) {
          goto LABEL_200;
        }
        if (v31 != 1)
        {
          LOWORD(v32) = 0;
          *(_DWORD *)&v59[4] = 2;
          *(_WORD *)&v59[8] = 0;
          goto LABEL_159;
        }
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_198;
        }
        *(_DWORD *)&v59[4] = v9[8];
        if ((unint64_t)v9 < 0xFFFFFFFFFFFFFFF7)
        {
          *(_WORD *)&v59[8] = bswap32(*(unsigned __int16 *)(v9 + 9)) >> 16;
          if ((unint64_t)v9 < 0xFFFFFFFFFFFFFFF5)
          {
            unsigned int v32 = bswap32(*(unsigned __int16 *)(v9 + 11)) >> 16;
LABEL_159:
            *(_WORD *)&v59[10] = v32;
            sub_1000B9930(a1, (uint64_t)&v57, 0);
            goto LABEL_172;
          }
        }
        goto LABEL_199;
      case 15:
        uint64_t v33 = *(void *)(a1 + 8);
        if (!v33 || (v33 & 7) != 0) {
          goto LABEL_197;
        }
        if (!sub_1000635E8(v33) || v10 < 6) {
          goto LABEL_172;
        }
        LODWORD(v57) = 0;
        if (v9 == (unsigned __int8 *)-1) {
          goto LABEL_199;
        }
        unsigned int v34 = *(unsigned __int16 *)(v9 + 1);
        if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_199;
        }
        unsigned int v35 = *(unsigned __int16 *)(v9 + 3);
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFALL) {
          goto LABEL_198;
        }
        if (v10 - 6 > 0xFF) {
          goto LABEL_201;
        }
        uint64_t v36 = v9[5];
        uint64_t v37 = sub_10002B778();
        if (!v37 || (v37 & 7) != 0) {
          goto LABEL_197;
        }
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFF9) {
          goto LABEL_198;
        }
        if (((*(uint64_t (**)(uint64_t, uint64_t, void, void, void, uint64_t, unsigned __int8 *, void, uint64_t *))(*(void *)v37 + 88))(v37, v56, *v9, bswap32(v34) >> 16, bswap32(v35) >> 16, v36, v9 + 6, (v10 - 6), &v57) & 1) == 0)
        {
          if (v57 <= 3) {
            goto LABEL_171;
          }
          goto LABEL_200;
        }
        uint64_t v38 = *(void *)(a1 + 8);
        if (v38 && (v38 & 7) == 0)
        {
          sub_100063534(v38, 2, 5u);
LABEL_171:
          uint64_t v6 = 2;
          goto LABEL_172;
        }
        break;
      case 16:
        uint64_t v39 = *(void *)(a1 + 8);
        if (!v39 || (v39 & 7) != 0) {
          goto LABEL_197;
        }
        if (!sub_1000635E8(v39) || v10 < 2) {
          goto LABEL_172;
        }
        uint64_t v40 = sub_10004E9C8();
        if (!v40) {
          goto LABEL_197;
        }
        if ((v40 & 7) != 0) {
          goto LABEL_197;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v40 + 160))(v40, 3600000);
        uint64_t v41 = sub_10002B778();
        if (!v41 || (v41 & 7) != 0 || !v9) {
          goto LABEL_197;
        }
        if ((unint64_t)v9 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_198;
        }
        (*(void (**)(uint64_t, uint64_t, void, void, unsigned __int8 *, void))(*(void *)v41 + 112))(v41, v56, *v9, v9[1], v9 + 2, v10 - 2);
        goto LABEL_172;
      case 18:
        uint64_t v42 = *(void *)(a1 + 8);
        if (!v42 || (v42 & 7) != 0) {
          goto LABEL_197;
        }
        if (!sub_1000635E8(v42) || v10 != 1) {
          goto LABEL_172;
        }
        uint64_t v43 = sub_10002B778();
        if (!v43) {
          goto LABEL_197;
        }
        if ((v43 & 7) != 0) {
          goto LABEL_197;
        }
        if (!v9) {
          goto LABEL_197;
        }
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)v43 + 96))(v43, v56, *v9);
        uint64_t v44 = *(void *)(a1 + 8);
        if (!v44 || (v44 & 7) != 0) {
          goto LABEL_197;
        }
        sub_100063568(v44, 2, 5u);
        goto LABEL_172;
      default:
        goto LABEL_172;
    }
    goto LABEL_197;
  }
  int v18 = (unsigned char *)(a1 + 4432);
  if (v8 != 129)
  {
    if (v8 == 131)
    {
      int v20 = 1;
      if (v10 == 6)
      {
        *(unsigned char *)(a1 + 4437) = 1;
        if (!v9) {
          goto LABEL_197;
        }
        *(unsigned char *)(a1 + 4433) = *v9;
        if (v9 == (unsigned __int8 *)-1) {
          goto LABEL_198;
        }
        if ((a1 + 4434)) {
          goto LABEL_197;
        }
        *(unsigned char *)(a1 + 4434) = v9[1];
        if ((unint64_t)v9 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_199;
        }
        unsigned int v47 = (unsigned char *)(a1 + 4438);
        if ((*(_DWORD *)(v9 + 2) & 0x1000000) == 0
          || bswap32(*(unsigned __int16 *)v9) >> 16 > 0x103
          || ((v12 ^ 1) & 1) != 0)
        {
          if (v47) {
            goto LABEL_197;
          }
          *unsigned int v47 = 0;
        }
        else
        {
          if (v47) {
            goto LABEL_197;
          }
          *unsigned int v47 = 1;
          sub_1000B9A84(*(void *)(a1 + 8));
        }
        int v20 = 0;
        uint64_t v6 = 0;
        *(unsigned char *)(a1 + 4440) = 0;
      }
      __int16 v48 = 130;
LABEL_168:
      __int16 v62 = v48;
      sub_10006FB58(a1, *(_DWORD *)(a2 + 68), &v62, 0, 0xFFFFu);
      if (v20) {
        goto LABEL_172;
      }
LABEL_195:
      sub_1000C6E1C(a2);
      return v6;
    }
    if (v8 == 133)
    {
      char v19 = v12 ^ 1;
      if (v10 != 4) {
        char v19 = 1;
      }
      if (v19)
      {
        int v20 = 1;
        goto LABEL_157;
      }
      if (!v9) {
        goto LABEL_197;
      }
      *(unsigned char *)(a1 + 4439) = *v9 & 1;
      if (v9 != (unsigned __int8 *)-1)
      {
        if ((v18 & 7) == 0)
        {
          *int v18 = v9[1];
          if ((unint64_t)v9 < 0xFFFFFFFFFFFFFFFELL)
          {
            int v20 = 0;
            uint64_t v6 = 0;
            *(_WORD *)(a1 + 4435) = bswap32(*((unsigned __int16 *)v9 + 1)) >> 16;
            *(unsigned char *)(a1 + 4442) = 0;
LABEL_157:
            __int16 v48 = 132;
            goto LABEL_168;
          }
LABEL_199:
          __break(0x5500u);
          goto LABEL_200;
        }
LABEL_197:
        __break(0x5516u);
      }
LABEL_198:
      __break(0x5513u);
      goto LABEL_199;
    }
LABEL_172:
    sub_1000C55C4(a2);
    sub_1000C4B20(*(void *)(a1 + 8), a2, 0, 1u);
    return v6;
  }
  if (v10 != 2)
  {
LABEL_62:
    uint64_t v6 = 0;
    goto LABEL_172;
  }
  if (!v9) {
    goto LABEL_197;
  }
  int v45 = *v9;
  __int16 v61 = -21846;
  if (v9 == (unsigned __int8 *)-1) {
    goto LABEL_198;
  }
  int v46 = v9[1];
  __int16 v61 = v9[1];
  if (v46 > 131)
  {
    if (v46 != 134)
    {
      if (v46 == 132)
      {
        sub_10006FB58(a1, *(_DWORD *)(a2 + 68), &v61, 0, 0xFFFFu);
        if (v45) {
          sub_1000B9A84(*(void *)(a1 + 8));
        }
        goto LABEL_194;
      }
LABEL_188:
      sub_1000EE4F4(0, 4, "CIapLingoSimpleRemote::%s:%d ackedCmdID = %X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp", 977, v46);
      goto LABEL_194;
    }
    sub_10006FB58(a1, *(_DWORD *)(a2 + 68), &v61, 0, 0xFFFFu);
    if (v45)
    {
      unsigned int v54 = *(unsigned __int8 *)(a1 + 4448);
      if (v54 <= 1)
      {
        sub_1000B9C10(*(void *)(a1 + 8), *(_DWORD *)(a1 + 4452), v54 != 0);
        goto LABEL_194;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 4441) = 0;
      unsigned int v55 = *(unsigned __int8 *)(a1 + 4448);
      if (v55 <= 1)
      {
        *(unsigned char *)(a1 + 4439) = v55;
        if ((v18 & 7) != 0) {
          goto LABEL_197;
        }
        *int v18 = *(unsigned char *)(a1 + 4449);
LABEL_194:
        uint64_t v6 = 0;
        goto LABEL_195;
      }
    }
LABEL_200:
    __break(0x550Au);
    goto LABEL_201;
  }
  if (v46 != 17)
  {
    if (v46 == 130)
    {
      sub_10006FB58(a1, *(_DWORD *)(a2 + 68), &v61, 0, 0xFFFFu);
      if (v45) {
        sub_1000B9044(*(void *)(a1 + 8));
      }
      goto LABEL_194;
    }
    goto LABEL_188;
  }
  uint64_t v60 = 0;
  if (sub_10006FB58(a1, *(_DWORD *)(a2 + 68), &v61, &v60, 0xFFFFu)) {
    goto LABEL_194;
  }
  uint64_t v49 = v60;
  if (!v60) {
    goto LABEL_194;
  }
  if (v60) {
    goto LABEL_197;
  }
  tm v50 = (unsigned char *)(v60 + 4);
  int v51 = *(unsigned __int8 *)(v60 + 4);
  if (v51 == 255)
  {
LABEL_201:
    __break(0x5507u);
    JUMPOUT(0x1000B8FC8);
  }
  unsigned int v52 = v51 + 1;
  *tm v50 = v52;
  if (!v45) {
    goto LABEL_192;
  }
  if (v50) {
    goto LABEL_197;
  }
  if (v52 >= *(unsigned __int8 *)(v49 + 5))
  {
LABEL_192:
    uint64_t v58 = 0;
    memset(&v59[8], 0, 24);
    uint64_t v57 = 0x12000100000001;
    *(void *)uint64_t v59 = v56;
    if (((v49 + 6) & 1) == 0)
    {
      *(void *)&v59[8] = *(unsigned __int8 *)(v49 + 6);
      operator delete[]();
    }
    goto LABEL_197;
  }
  if ((v56 & 7) != 0) {
    goto LABEL_197;
  }
  int v53 = (*(uint64_t (**)(uint64_t, void))(*(void *)v56 + 16))(v56, 0);
  if (!v60 || (v60 & 1) != 0 || ((v60 + 2) & 1) != 0) {
    goto LABEL_197;
  }
  sub_1000C5B58(a2, v56, 0, 2, 17, v53, (const void *)(v60 + 6), *(unsigned __int16 *)(v60 + 2));
  sub_10006F8C0(a1, a2, 300, 0, v60);
  return 0;
}

uint64_t sub_1000B9044(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t result = sub_1000A1140(result, v1);
  if (result)
  {
    if ((v1 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v2 = result;
    uint64_t v3 = sub_100063334(v1, 2u);
    uint64_t result = sub_10006D8BC(v3);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = sub_10009EF00(result, v1, 2u);
    if (!result) {
      goto LABEL_14;
    }
    if ((result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v4 = (unsigned char *)(result + 4440);
    if (((result + 4440) & 7) != 0) {
      goto LABEL_16;
    }
    unsigned int v5 = *v4;
    if (v5 > 2)
    {
LABEL_14:
      sub_100063380(v1, 2u);
      return 16;
    }
    *uint64_t v4 = v5 + 1;
    if ((v2 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)v2 + 16))(v2, 0);
      sub_1000C51E0();
    }
  }
  else
  {
LABEL_15:
    __break(0x5518u);
  }
LABEL_16:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B91D8(uint64_t a1, unsigned int a2, unsigned int a3, char a4)
{
  memset(v18, 170, sizeof(v18));
  uint64_t result = sub_10002EDDC((uint64_t)v18);
  if (!a1)
  {
    __break(0x5518u);
LABEL_32:
    __break(0x5516u);
    goto LABEL_33;
  }
  if (a3)
  {
    uint64_t result = sub_1000BA618(a1, a3);
    uint64_t v9 = result;
    if (result) {
      goto LABEL_30;
    }
  }
  if ((a1 & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v10 = sub_100063334(a1, 2u);
  uint64_t result = sub_10006D8BC(v10);
  if (!result || (result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = sub_10009EF00(result, a1, 2u);
  if (!result)
  {
    uint64_t v9 = 0;
LABEL_29:
    sub_100063380(a1, 2u);
LABEL_30:
    v18[0] = off_100123868;
    sub_1000EE300(v18);
    return v9;
  }
  uint64_t v11 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  if (a2 > 0xFF)
  {
LABEL_33:
    __break(0x550Au);
    goto LABEL_34;
  }
  if (a2 >= 0x87)
  {
LABEL_34:
    __break(0x5512u);
    goto LABEL_35;
  }
  if (!__CFADD__(result + 1192, 24 * a2))
  {
    unsigned int v12 = a2;
    int v13 = (__darwin_time_t *)(result + 24 * a2 + 1192);
    if ((v13 & 7) == 0)
    {
      int v14 = (int *)(result + 24 * v12 + 1208);
      if ((((_BYTE)result + 24 * (_BYTE)v12 - 72) & 7) == 0)
      {
        int v15 = *v14;
        if (*v14)
        {
          LODWORD(v18[2]) = 5;
          HIDWORD(v18[2]) = v15;
          LOBYTE(v18[3]) = 0;
          v18[4] = sub_10001CE30(a1);
          if (HIDWORD(v18[2]) < 3)
          {
            uint64_t v9 = 25;
          }
          else
          {
            sub_1000634E4(a1, 2u, 0, (uint64_t)&v18[2], 24);
            uint64_t v9 = 0;
          }
          *int v14 = 0;
          if ((a4 & 1) == 0)
          {
            __int16 v17 = 136;
            sub_10006FB58((uint64_t)v11, -1, &v17, 0, 0xFFFFu);
          }
        }
        else
        {
          uint64_t v9 = 0;
        }
        if (a3)
        {
          int v16 = sub_1000BA7D0(a3);
          *int v14 = v16;
          LODWORD(v18[2]) = 5;
          HIDWORD(v18[2]) = v16;
          LOBYTE(v18[3]) = 1;
          v18[4] = sub_10001CE30(a1);
          sub_1000EE3E8((uint64_t)v18, v13);
          if (HIDWORD(v18[2]) < 3) {
            LODWORD(v9) = 25;
          }
          else {
            sub_1000634E4(a1, 2u, 0, (uint64_t)&v18[2], 24);
          }
          if (sub_10006F9E0(v11, -1, 136, 0, 400)) {
            uint64_t v9 = 2;
          }
          else {
            uint64_t v9 = v9;
          }
        }
        goto LABEL_29;
      }
    }
    goto LABEL_32;
  }
LABEL_35:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000B944C(uint64_t a1)
{
  v8[0] = 0xAAAAAAAAAAAAAAAALL;
  v8[1] = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_10002EDDC((uint64_t)v8);
  if (!a1)
  {
    __break(0x5518u);
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v3 = sub_100063334(a1, 2u);
  uint64_t result = sub_10006D8BC(v3);
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v4 = 2;
  uint64_t result = sub_10009EF00(result, a1, 2u);
  if (!result) {
    goto LABEL_16;
  }
  unsigned int v5 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if ((unint64_t)(result + 1192) < 0xFFFFFFFFFFFFFF40)
  {
    if (((result + 1384) & 7) == 0 && ((result + 1400) & 7) == 0)
    {
      if (*(_DWORD *)(result + 1400))
      {
        sub_1000EE3E8((uint64_t)v8, (__darwin_time_t *)(result + 1384));
        __int16 v7 = 136;
        if (sub_10006FB58((uint64_t)v5, -1, &v7, 0, 0xFFFFu))
        {
          int v6 = 1784;
        }
        else
        {
          if (!sub_10006F9E0(v5, -1, 136, 0, 400))
          {
            uint64_t v4 = 0;
            goto LABEL_16;
          }
          int v6 = 1779;
        }
        sub_1000EE4F4(0, 4, "%s:%d 0 != status\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp", v6);
      }
LABEL_16:
      sub_100063380(a1, 2u);
      v8[0] = off_100123868;
      sub_1000EE300(v8);
      return v4;
    }
    goto LABEL_19;
  }
LABEL_20:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000B95C0(uint64_t result, int a2, unsigned int a3, char a4)
{
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_28;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t v8 = sub_100063334(result, 2u);
  uint64_t result = sub_10006D8BC(v8);
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = sub_10009EF00(result, v4, 2u);
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = sub_10005176C();
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 616))(result, 2);
  if (result != a2)
  {
LABEL_25:
    uint64_t v13 = 4;
LABEL_26:
    sub_100063380(v4, 2u);
    return v13;
  }
  if (((v9 + 4456) & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  *(unsigned char *)(v9 + 4456) = a2;
  if (a3 > 0x1F) {
    goto LABEL_25;
  }
  if ((unint64_t)(v9 + 1192) < 0xFFFFFFFFFFFFFF10)
  {
    if ((((_BYTE)v9 - 104) & 7) == 0)
    {
      uint64_t v10 = (unsigned int *)(v9 + 1448);
      if (((v9 + 1448) & 7) == 0)
      {
        unsigned int v11 = *v10 ^ a3;
        if (v11)
        {
          int v12 = 0;
          *uint64_t v10 = a3;
          do
          {
            if (v11)
            {
              unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
              uint64_t v16 = 0xAAAAAAAAAAAAAAAALL;
              v14[0] = 2;
              v14[1] = v12;
              LOBYTE(v15) = a3 & 1;
              uint64_t v16 = sub_10001CE30(v4);
              sub_1000634E4(v4, 2u, 1, (uint64_t)v14, 24);
            }
            if (v11 < 2) {
              break;
            }
            v11 >>= 1;
            a3 >>= 1;
            ++v12;
          }
          while (v12 != 5);
          if ((a4 & 1) == 0)
          {
            LOWORD(v14[0]) = 137;
            sub_10006FB58(v9, -1, v14, 0, 0xFFFFu);
            if (*(_DWORD *)(v9 + 1448)) {
              sub_10006F9E0((void *)v9, -1, 137, 0, 400);
            }
          }
        }
        uint64_t v13 = 0;
        goto LABEL_26;
      }
    }
    goto LABEL_28;
  }
LABEL_29:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000B97C8(uint64_t result, int a2, unsigned int a3, char a4)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v5 = a3;
  *(unsigned char *)(result + 4457) = a2;
  if (a3 > 0x3F) {
    return 4;
  }
  if ((unint64_t)(result + 1192) >= 0xFFFFFFFFFFFFFEF8) {
    goto LABEL_24;
  }
  if ((((_BYTE)result - 80) & 7) != 0 || ((result + 1472) & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
LABEL_24:
    __break(0x5513u);
    return result;
  }
  unsigned int v8 = *(_DWORD *)(result + 1472) ^ a3;
  if (v8)
  {
    int v9 = 0;
    *(_DWORD *)(result + 1472) = a3;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
        uint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
        v11[0] = a2;
        v11[1] = v9;
        LOBYTE(v12) = v5 & 1;
        uint64_t result = *(void *)(v4 + 8);
        if (result) {
          BOOL v10 = (*(void *)(v4 + 8) & 7) == 0;
        }
        else {
          BOOL v10 = 0;
        }
        if (!v10) {
          goto LABEL_23;
        }
        uint64_t v13 = sub_10001CE30(result);
        sub_100067D3C(2u, 2, (uint64_t)v11, 24, *(void *)(v4 + 8));
      }
      if (v8 >= 2)
      {
        v8 >>= 1;
        v5 >>= 1;
        if (++v9 != 6) {
          continue;
        }
      }
      break;
    }
  }
  if ((a4 & 1) == 0)
  {
    LOWORD(v11[0]) = 138;
    sub_10006FB58(v4, -1, v11, 0, 0xFFFFu);
    if (*(_DWORD *)(v4 + 1472)) {
      sub_10006F9E0((void *)v4, -1, 138, 0, 400);
    }
  }
  return 0;
}

uint64_t sub_1000B9930(uint64_t result, uint64_t a2, char a3)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 4) & 3) != 0) {
    goto LABEL_25;
  }
  unsigned int v5 = *(_DWORD *)(a2 + 4);
  if (v5 >= 4) {
    goto LABEL_26;
  }
  if (v5 == 3) {
    return 4;
  }
  if (((a2 + 8) & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v6 = *(_DWORD *)(a2 + 8);
  if (v6 > 3) {
    goto LABEL_26;
  }
  if (v6 > 1) {
    return 4;
  }
  if (((a2 + 12) & 3) != 0) {
    goto LABEL_25;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  if (v7 > 3)
  {
LABEL_26:
    __break(0x550Au);
    return result;
  }
  if (v7 > 1) {
    return 4;
  }
  unsigned int v8 = (_DWORD *)(a2 + 16);
  if (((a2 + 16) & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }
  if (*v8 > 3u) {
    goto LABEL_26;
  }
  if (*v8 != 3)
  {
    long long v9 = *(_OWORD *)a2;
    long long v10 = *(_OWORD *)(a2 + 16);
    *(void *)(result + 4496) = *(void *)(a2 + 32);
    *(_OWORD *)(result + 4480) = v10;
    *(_OWORD *)(result + 4464) = v9;
    sub_100067D3C(2u, 3, a2, 40, *(void *)(result + 8));
    if (a3) {
      return 0;
    }
    __int16 v11 = 139;
    uint64_t result = sub_10006FB58((uint64_t)v3, -1, &v11, 0, 0xFFFFu);
    if (*v8 <= 3u)
    {
      if (*v8) {
        sub_10006F9E0(v3, -1, 139, 0, 400);
      }
      return 0;
    }
    goto LABEL_26;
  }
  return 4;
}

uint64_t sub_1000B9A84(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t result = sub_1000A1140(result, v1);
  if (result)
  {
    if ((v1 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v2 = result;
    uint64_t v3 = sub_100063334(v1, 2u);
    uint64_t result = sub_10006D8BC(v3);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = sub_10009EF00(result, v1, 2u);
    if (!result) {
      goto LABEL_14;
    }
    if ((result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v4 = (unsigned char *)(result + 4442);
    if ((result + 4442)) {
      goto LABEL_16;
    }
    unsigned int v5 = *v4;
    if (v5 > 2)
    {
LABEL_14:
      sub_100063380(v1, 2u);
      return 2;
    }
    *uint64_t v4 = v5 + 1;
    if ((v2 & 7) == 0)
    {
      (*(void (**)(uint64_t, void))(*(void *)v2 + 16))(v2, 0);
      sub_1000C51E0();
    }
  }
  else
  {
LABEL_15:
    __break(0x5518u);
  }
LABEL_16:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B9C10(uint64_t result, int a2, char a3)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v5 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = sub_1000A1140(result, v5);
  if (!result)
  {
LABEL_21:
    __break(0x5518u);
    goto LABEL_22;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v6 = result;
  uint64_t v7 = sub_100063334(v5, 2u);
  uint64_t result = sub_10006D8BC(v7);
  if (!result || (result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = sub_10009EF00(result, v5, 2u);
  if (!result) {
    goto LABEL_20;
  }
  if (((result | (result + 80)) & 7) != 0) {
    goto LABEL_22;
  }
  if (*(unsigned __int8 *)(result + 4437) > 1u) {
    goto LABEL_23;
  }
  if (!*(unsigned char *)(result + 4437)) {
    goto LABEL_20;
  }
  if ((result + 4438))
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  if (*(unsigned __int8 *)(result + 4438) <= 1u)
  {
    if (*(unsigned char *)(result + 4438))
    {
      unsigned int v8 = *(unsigned __int8 *)(result + 4441);
      if (v8 <= 2)
      {
        *(unsigned char *)(result + 4441) = v8 + 1;
        if ((((_BYTE)result + 100) & 3) == 0)
        {
          *(_DWORD *)(result + 4452) = a2;
          if ((((_BYTE)result + 96) & 7) == 0)
          {
            *(unsigned char *)(result + 4448) = a3;
            *(unsigned char *)(result + 4449) = HIBYTE(a2);
            if ((v6 & 7) == 0)
            {
              (*(void (**)(uint64_t, void))(*(void *)v6 + 16))(v6, 0);
              sub_1000C51E0();
            }
          }
        }
        goto LABEL_22;
      }
    }
LABEL_20:
    sub_100063380(v5, 2u);
    return 2;
  }
LABEL_23:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B9DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a3 || (a3 & 7) != 0 || ((a3 + 4) & 3) != 0) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(a3 + 4) != 1179649) {
    return 2;
  }
  uint64_t v6 = sub_10002B778();
  *(void *)&long long v7 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&__n[1] = v7;
  long long v14 = v7;
  LOWORD(v14) = 17;
  __n[4] = -1;
  *(unsigned char *)(a1 + 4504) = 0;
  uint64_t result = sub_100070338(a1, (uint64_t)&__n[1], (unsigned int (*)(void *, long long *))sub_1000BB2A4, 0);
  if (*(unsigned __int8 *)(a1 + 4504) < 2u)
  {
    uint64_t v9 = 0;
    if (!a2 || !v6 || *(unsigned char *)(a1 + 4504)) {
      return v9;
    }
    if (((a3 + 24) & 7) == 0)
    {
      unsigned __int8 v10 = *(unsigned char *)(a3 + 24);
      *(void *)&long long v11 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
      __src[30] = v11;
      __src[31] = v11;
      __src[28] = v11;
      __src[29] = v11;
      __src[26] = v11;
      __src[27] = v11;
      __src[24] = v11;
      __src[25] = v11;
      __src[22] = v11;
      __src[23] = v11;
      __src[20] = v11;
      __src[21] = v11;
      __src[18] = v11;
      __src[19] = v11;
      __src[16] = v11;
      __src[17] = v11;
      __src[14] = v11;
      __src[15] = v11;
      __src[12] = v11;
      __src[13] = v11;
      __src[10] = v11;
      __src[11] = v11;
      __src[8] = v11;
      __src[9] = v11;
      __src[6] = v11;
      __src[7] = v11;
      __src[4] = v11;
      __src[5] = v11;
      __src[2] = v11;
      __src[3] = v11;
      __src[0] = v11;
      __src[1] = v11;
      if ((v6 & 7) == 0)
      {
        if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)v6 + 120))(v6, a2, v10))
        {
          int v12 = -1;
          __n[0] = 512;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, int *, _OWORD *, _DWORD *))(*(void *)v6 + 128))(v6, a2, v10, &v12, __src, __n);
          if (result)
          {
            if (__n[0] <= 0xFFF7u) {
              operator new[]();
            }
            goto LABEL_22;
          }
        }
        return 0;
      }
    }
LABEL_20:
    __break(0x5516u);
  }
  __break(0x550Au);
LABEL_22:
  __break(0x5507u);
  __break(0x5513u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000BA1BC(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_69;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_69;
  }
  int v30 = 0;
  uint64_t v6 = sub_1000D289C();
  if (!v6) {
    goto LABEL_69;
  }
  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_69;
  }
  uint64_t v8 = sub_1000A1140(v6, *(void *)(a1 + 8));
  uint64_t v9 = v8;
  if (a2 <= 31)
  {
    if (a2 == 4)
    {
      uint64_t v11 = sub_10004E9C8();
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_69;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 160))(v11, 600000);
      if (!v9) {
        goto LABEL_34;
      }
LABEL_19:
      LOWORD(v29[1]) = -21846;
      LODWORD(v31) = -1431655766;
      int v12 = (unsigned char *)(a1 + 4432);
      *(_WORD *)(a1 + 4440) = 0;
      *(unsigned char *)(a1 + 4442) = 0;
      do
        LOWORD(v29[1]) = -1;
      while (!sub_10006FB58(a1, -1, &v29[1], &v31, 0xFFFFu));
      unsigned int v13 = sub_10009FE80(v7, v9) == 1;
      *(unsigned char *)(a1 + 4437) = 0;
      *(unsigned char *)(a1 + 4439) = 0;
      *(unsigned char *)(a1 + 4433) = 0;
      if ((a1 + 4434)) {
        goto LABEL_69;
      }
      *(unsigned char *)(a1 + 4434) = 0;
      if ((v12 & 7) != 0) {
        goto LABEL_69;
      }
      *int v12 = 0;
      *(_WORD *)(a1 + 4435) = 0;
      if ((a1 + 4438)) {
        goto LABEL_69;
      }
      *(unsigned char *)(a1 + 4438) = 0;
      while (v13 <= 0x12)
      {
        if (((1 << v13) & 0x78202) == 0)
        {
          if (v13 == 8)
          {
            sub_1000B91D8(*(void *)(a1 + 8), 8u, 0, 0);
          }
          else
          {
            if (v13 != 10) {
              break;
            }
            sub_1000B95C0(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 4456), 0, 0);
            *(unsigned char *)(a1 + 4456) = 0;
          }
        }
LABEL_27:
        if (++v13 == 27) {
          goto LABEL_34;
        }
      }
      sub_1000B7E9C(*(void *)(a1 + 8), v13, 0);
      goto LABEL_27;
    }
    if (a2 == 8)
    {
      if (!v8)
      {
LABEL_34:
        uint64_t v14 = *(void *)(a1 + 8);
        if (v14) {
          BOOL v15 = (*(void *)(a1 + 8) & 7) == 0;
        }
        else {
          BOOL v15 = 0;
        }
        if (!v15)
        {
LABEL_69:
          __break(0x5516u);
LABEL_70:
          __break(0x5513u);
LABEL_71:
          sub_1000F2384();
        }
        if (sub_1000635E8(v14))
        {
          uint64_t v16 = sub_10002B778();
          if (!v16 || (v16 & 7) != 0) {
            goto LABEL_69;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)v16 + 104))(v16, v9);
        }
        return 0;
      }
      goto LABEL_19;
    }
    return 0;
  }
  if (a2 == 32)
  {
    if (*(_DWORD *)(a1 + 4444) == a3)
    {
      memset(v29, 170, sizeof(v29));
      sub_10002EDDC((uint64_t)v29);
      sub_1000EE3E8((uint64_t)v29, (__darwin_time_t *)&v29[1]);
      int v17 = sub_10009FE80(v7, v9);
      char v18 = 0;
      uint64_t v19 = v17 == 1;
      unint64_t v20 = (8 * v19) | (16 * v19);
      do
      {
        if (v19 < 6 || v19 == 13)
        {
          if (v20 > ~(a1 + 1192)) {
            goto LABEL_70;
          }
          if (*(_DWORD *)(a1 + v20 + 1208))
          {
            long long v21 = *(_OWORD *)(a1 + v20 + 1192);
            long long v27 = xmmword_1000FFC30;
            long long v28 = v21;
            long long v31 = v29[1];
            long long v26 = *(_OWORD *)sub_10007D194(&v31, &v28);
            if (sub_1000BA5D0((uint64_t)&v26, &v27)) {
              sub_1000B7E9C(*(void *)(a1 + 8), v19, 0);
            }
            else {
              char v18 = 1;
            }
          }
        }
        ++v19;
        v20 += 24;
      }
      while (v19 != 27);
      sub_10006D90C(*(void *)(a1 + 8));
      if (v22)
      {
        sub_10006D90C(*(void *)(a1 + 8));
        BOOL v25 = (v23 & 7) == 0 && v23 != 0;
        if (v18)
        {
          if (!v25) {
            goto LABEL_69;
          }
          sub_10006ADC0(v23, *(_DWORD *)(a1 + 4444));
        }
        else
        {
          if (!v25) {
            goto LABEL_69;
          }
          sub_10006AE88(v23, *(_DWORD *)(a1 + 4444));
        }
      }
      *(void *)&v29[0] = off_100123868;
      sub_1000EE300(v29);
    }
    else
    {
      if (*(_DWORD *)(a1 + 1176) != a3) {
        goto LABEL_71;
      }
      sub_10006FF9C(a1, (uint64_t)&v30);
    }
    return 0;
  }
  if (a2 != 1024 || !a3) {
    return 0;
  }
  return sub_1000B9DF8(a1, v8, a3);
}

uint64_t sub_1000BA5D0(uint64_t result, void *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (*(void *)result <= *a2)
  {
    return *(void *)result >= *a2 && *(void *)(result + 8) >= a2[1];
  }
  else
  {
    return 1;
  }
  return result;
}

uint64_t sub_1000BA618(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v3 = result;
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_1000A1140(result, v3);
  if (!result)
  {
LABEL_38:
    __break(0x5518u);
    goto LABEL_39;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t v4 = sub_100063334(v3, 2u);
  uint64_t result = sub_10006D8BC(v4);
  if (!result) {
    goto LABEL_39;
  }
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_10009EF00(result, v3, 2u);
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  if ((a2 & 0x1F) == 0)
  {
    if ((a2 & 0xFFE0) == 0x87E0)
    {
      uint64_t v6 = a2 & 0xFE0000;
      if (v6 == 393216)
      {
        uint64_t v5 = 0;
      }
      else
      {
        if (v6 == 0x40000)
        {
          uint64_t v7 = v3;
          int v8 = a2;
          char v9 = 0;
        }
        else
        {
          if (v6 != 0x20000)
          {
            uint64_t v5 = 1;
            goto LABEL_37;
          }
          uint64_t v7 = v3;
          int v8 = a2;
          char v9 = 1;
        }
        uint64_t v5 = 4 * (sub_1000B9C10(v7, v8, v9) != 0);
      }
    }
    else
    {
      uint64_t v5 = 5;
    }
LABEL_37:
    sub_100063380(v3, 2u);
    return v5;
  }
  if ((unsigned __int16)a2 == 34798) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 5;
  }
  if ((unsigned __int16)a2 != 34798 || !result) {
    goto LABEL_37;
  }
  if ((result & 7) != 0 || ((result + 4432) & 7) != 0) {
    goto LABEL_39;
  }
  if (*(unsigned __int8 *)(result + 4437) > 1u) {
    goto LABEL_40;
  }
  if (!*(unsigned char *)(result + 4437))
  {
LABEL_25:
    uint64_t v5 = sub_1000BA7D0(a2) == 9;
    goto LABEL_37;
  }
  if ((result + 4438))
  {
LABEL_39:
    __break(0x5516u);
    goto LABEL_40;
  }
  if (*(unsigned __int8 *)(result + 4438) > 1u) {
    goto LABEL_40;
  }
  if (!*(unsigned char *)(result + 4438)) {
    goto LABEL_25;
  }
  if (*(unsigned __int8 *)(result + 4439) <= 1u)
  {
    if (*(unsigned char *)(result + 4439) && HIBYTE(a2) != *(unsigned __int8 *)(result + 4432))
    {
      uint64_t v5 = 2;
      goto LABEL_37;
    }
    goto LABEL_25;
  }
LABEL_40:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000BA7D0(int a1)
{
  if ((a1 & 0x1F) != 0)
  {
    if ((a1 & 0x1F) == 0xELL && (unint64_t v1 = (a1 & 0xFE0000) - 0x20000, v1 < 0xC0000)) {
      return *(unsigned int *)((char *)&unk_1000FFC70 + (v1 >> 15));
    }
    else {
      return 9;
    }
  }
  else
  {
    uint64_t v3 = a1 & 0xFE0000;
    if (v3 == 0x40000) {
      int v4 = 1;
    }
    else {
      int v4 = 9;
    }
    if (v3 == 393216) {
      unsigned int v5 = 2;
    }
    else {
      unsigned int v5 = v4;
    }
    if (v3 == 0x20000) {
      return 0;
    }
    else {
      return v5;
    }
  }
}

uint64_t sub_1000BA83C(BOOL a1)
{
  BOOL v1 = a1;
  uint64_t result = sub_10006D8BC(a1);
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_1000A15B4(result, v1, 0);
    if (!result) {
      return 0;
    }
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = sub_100063334(result, 2u);
      uint64_t result = sub_10006D8BC(v4);
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_10009EF00(result, v3, 2u);
          if (!result)
          {
            BOOL v1 = 0;
            goto LABEL_15;
          }
          if ((result & 7) == 0)
          {
            if (!v1)
            {
LABEL_15:
              sub_100063380(v3, 2u);
              return v1;
            }
            uint64_t result = sub_10006D8BC(result);
            if (result && (result & 7) == 0)
            {
              BOOL v1 = sub_1000602FC(result, v1);
              goto LABEL_15;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BA900(uint64_t a1, uint64_t a2, int a3, uint64_t a4, _DWORD *a5)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      uint64_t v8 = sub_10006D8BC(a1);
      if (v8)
      {
        if ((v8 & 7) == 0)
        {
          uint64_t result = sub_1000A1140(v8, *(void *)(a1 + 8));
          *a5 = 2;
          unsigned __int8 v10 = (unsigned __int8 *)(a1 + 4448);
          switch(a3)
          {
            case 130:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              uint64_t result = sub_1000B9044(*(void *)(a1 + 8));
              goto LABEL_35;
            case 131:
            case 133:
            case 135:
              return result;
            case 132:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              uint64_t result = sub_1000B9A84(*(void *)(a1 + 8));
              goto LABEL_35;
            case 134:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              unsigned int v14 = *v10;
              if (v14 >= 2) {
                goto LABEL_41;
              }
              uint64_t result = sub_1000B9C10(*(void *)(a1 + 8), *(_DWORD *)(a1 + 4452), v14 != 0);
              goto LABEL_35;
            case 136:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              uint64_t result = sub_1000B91D8(*(void *)(a1 + 8), 8u, 0, 1);
              goto LABEL_35;
            case 137:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              uint64_t result = sub_1000B95C0(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 4456), 0, 1);
              goto LABEL_35;
            case 138:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              uint64_t result = sub_1000B97C8(a1, *(unsigned __int8 *)(a1 + 4457), 0, 1);
              goto LABEL_35;
            case 139:
              uint64_t result = sub_1000BA83C(result);
              if (!result) {
                return result;
              }
              if ((((_BYTE)a1 + 0x80) & 7) != 0) {
                break;
              }
              *(_DWORD *)(a1 + 4480) = 0;
              if ((((_BYTE)a1 - 124) & 3) != 0) {
                break;
              }
              *(_DWORD *)(a1 + 4484) = 2;
              if ((((_BYTE)a1 - 120) & 7) != 0) {
                break;
              }
              *(_WORD *)(a1 + 4488) = 0;
              if ((a1 + 4490)) {
                break;
              }
              *(_WORD *)(a1 + 4490) = 0;
              uint64_t result = sub_1000B9930(a1, a1 + 4464, 1);
LABEL_35:
              *a5 = 0;
              return result;
            default:
              if (a3 != 17 || a1 == -4448) {
                return result;
              }
              if (v10) {
                break;
              }
              uint64_t v11 = (unsigned __int8 *)(a1 + 4452);
              int v12 = *(unsigned __int8 *)(a1 + 4452);
              if (v12 == 255) {
                goto LABEL_40;
              }
              unsigned __int8 v13 = v12 + 1;
              *uint64_t v11 = v13;
              if ((v11 & 1) == 0)
              {
                if (v13 >= *(unsigned __int8 *)(a1 + 4453))
                {
                  if (((a1 + 4454) & 1) == 0) {
                    operator delete[]();
                  }
                }
                else if (result)
                {
                  if ((result & 7) == 0)
                  {
                    (*(void (**)(uint64_t, void))(*(void *)result + 16))(result, 0);
                    if (((a1 + 4450) & 1) == 0) {
                      sub_1000C51E0();
                    }
                  }
                }
              }
              return result;
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_40:
  __break(0x5507u);
LABEL_41:
  __break(0x550Au);
  JUMPOUT(0x1000BAC38);
}

uint64_t sub_1000BAC60(uint64_t result, uint64_t a2, int a3)
{
  if (!a2 || a3 != 9)
  {
    __break(0x5518u);
    goto LABEL_25;
  }
  uint64_t v4 = result;
  uint64_t v5 = sub_10004CDB4();
  uint64_t result = sub_1000714C4(9);
  if (result) {
    unint64_t v6 = 55;
  }
  else {
    unint64_t v6 = 39;
  }
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 96))(v5))
  {
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 104))(v5);
    uint64_t v8 = 1024;
    if (v7) {
      uint64_t v8 = 3072;
    }
    v6 |= v8;
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 112))(v5)) {
      v6 |= 0x1000uLL;
    }
  }
  uint64_t result = sub_1000D289C();
  if (!result) {
    goto LABEL_25;
  }
  if ((result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v9 = sub_1000A15B4(result, v4, 0);
  uint64_t result = sub_10002B778();
  if (!result || (result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
  if (v9 && result)
  {
    if ((v9 & 7) == 0)
    {
      uint64_t result = sub_1000635E8(v9);
      if (result) {
        v6 |= 0x200uLL;
      }
      goto LABEL_22;
    }
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }
LABEL_22:
  *(unsigned char *)a2 = 2;
  if (a2 != -1)
  {
    *(void *)(a2 + 1) = bswap64(v6);
    return 0;
  }
LABEL_26:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000BAE08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  switch(a2)
  {
    case 0x120001:
      uint64_t v8 = 0;
      uint64_t v9 = 1;
      if (!a3) {
        return result;
      }
      goto LABEL_13;
    case 0x130002:
      if (a4) {
        operator new();
      }
      break;
    case 0x130001:
      if (a4) {
        operator new();
      }
      break;
    default:
      return result;
  }
  uint64_t v8 = sub_1000BB20C;
  uint64_t v9 = 5;
  if (a3)
  {
LABEL_13:
    uint64_t result = sub_1000D289C();
    if (result)
    {
      uint64_t v10 = result;
      if ((result & 7) == 0)
      {
        uint64_t result = *(void *)(v4 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v11 = sub_10001CE30(result);
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void, void *(*)(void *, int, uint64_t, uint64_t, uint64_t), uint64_t, void))(*(void *)v10 + 128))(v10, v9, a2, 0, a3, a4, 0, v8, v11, *(void *)(v4 + 8));
          }
        }
      }
    }
LABEL_19:
    __break(0x5516u);
    __break(0x5513u);
    __break(0x550Au);
    __break(0x5500u);
  }
  return result;
}

void *sub_1000BB20C(void *result, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result >= 8) {
    goto LABEL_13;
  }
  if (result != 5)
  {
    __break(0x5518u);
LABEL_13:
    __break(0x550Au);
LABEL_14:
    __break(0x5516u);
    return result;
  }
  if (a2 == 1245185)
  {
    v7[1] = v5;
    v7[2] = v6;
    v7[0] = a5;
    return sub_1000B790C(v7);
  }
  else if (a2 == 1245186 && a5)
  {
    if ((a5 & 3) == 0)
    {
      operator delete();
    }
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1000BB2A4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 16) & 7) == 0)
  {
    if (*(_WORD *)(a2 + 16) != 17) {
      return 0;
    }
    if (((a2 + 24) & 7) == 0)
    {
      if (*(void *)(a2 + 24)) {
        *(unsigned char *)(result + 4504) = 1;
      }
      return 0;
    }
  }
  __break(0x5516u);
  return result;
}

_OWORD *sub_1000BB300(_OWORD *result, _OWORD *a2)
{
  if (!result || (result & 3) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = *a2;
  }
  return result;
}

BOOL sub_1000BB684(const __CFString *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *(_OWORD *)token.val = *a2;
  *(_OWORD *)&token.val[4] = v3;
  uint64_t v4 = SecTaskCreateWithAuditToken(0, &token);
  if (v4)
  {
    uint64_t v5 = v4;
    *(void *)token.val = 0;
    CFBooleanRef v6 = (const __CFBoolean *)SecTaskCopyValueForEntitlement(v4, a1, (CFErrorRef *)&token);
    if (v6)
    {
      CFBooleanRef v7 = v6;
      CFTypeID v8 = CFGetTypeID(v6);
      if (v8 == CFBooleanGetTypeID())
      {
        int Value = CFBooleanGetValue(v7);
        BOOL v10 = Value != 0;
        CFRelease(v7);
        uint64_t v11 = *(const void **)token.val;
        if (!*(void *)token.val)
        {
LABEL_13:
          CFRelease(v5);
          return v10;
        }
        if (Value)
        {
          BOOL v10 = 1;
LABEL_11:
          CFRelease(v11);
          goto LABEL_13;
        }
LABEL_10:
        NSLog(@"Unable to get entitlement '%@', error: %@", a1, v11);
        BOOL v10 = 0;
        uint64_t v11 = *(const void **)token.val;
        goto LABEL_11;
      }
      CFRelease(v7);
    }
    uint64_t v11 = *(const void **)token.val;
    if (!*(void *)token.val)
    {
      BOOL v10 = 0;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  NSLog(@"Unable to create security task from audit token.");
  return 0;
}

void sub_1000BB788(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 88) & 7) != 0) {
    goto LABEL_11;
  }
  if (*(void *)(v2 + 88))
  {
    if ((((int)v2 + 8) & 3) != 0) {
      goto LABEL_11;
    }
    NSLog(@"releasing process assertion - %s:%s - %d clientID=%d pid=%d", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPEAClient.m", "-[IAPEAClient initWithCapabilities:auditToken:xpcConnection:eaProtocols:andBundleId:]_block_invoke", 121, *(unsigned int *)(v2 + 8), [(id)v2 _getProcessId]);
    long long v3 = (CFTypeRef *)(*(void *)(a1 + 32) + 88);
    if ((v3 & 7) != 0) {
      goto LABEL_11;
    }
    CFRelease(*v3);
    uint64_t v4 = *(void *)(a1 + 32) + 88;
    if ((v4 & 7) != 0) {
      goto LABEL_11;
    }
    *(void *)uint64_t v4 = 0;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  uint64_t v5 = (dispatch_source_t *)(v2 + 112);
  if (((v2 + 112) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  if (*v5)
  {
    dispatch_source_set_timer(*v5, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
    uint64_t v6 = *(void *)(a1 + 32) + 104;
    if ((v6 & 7) == 0)
    {
      *(void *)uint64_t v6 = 0;
      return;
    }
    goto LABEL_11;
  }
LABEL_12:
  __break(0x5510u);
}

void sub_1000BBA44(uint64_t a1)
{
  BOOL v1 = (CFTypeRef *)(*(void *)(a1 + 32) + 88);
  if ((v1 & 7) != 0) {
    goto LABEL_6;
  }
  if (!*v1) {
    return;
  }
  CFRelease(*v1);
  uint64_t v3 = *(void *)(a1 + 32) + 88;
  if ((v3 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }
  *(void *)uint64_t v3 = 0;
}

void sub_1000BBBA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 88) & 7) != 0) {
    goto LABEL_24;
  }
  if (!*(void *)(v2 + 88)) {
    goto LABEL_6;
  }
  time_t v3 = time(0);
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 104) & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)(v2 + 104);
  BOOL v5 = __OFSUB__(v3, v4);
  uint64_t v6 = v3 - v4;
  if (!v5)
  {
    if (v6 < 3)
    {
      NSLog(@"using ea process hysteresis");
      return;
    }
LABEL_6:
    if ((((_BYTE)v2 + 88) & 7) == 0)
    {
      if (*(void *)(v2 + 88))
      {
        if ((((_BYTE)v2 + 8) & 3) == 0)
        {
          NSLog(@"renewing process assertion - %s:%s - %d clientID=%d pid=%d", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPEAClient.m", "-[IAPEAClient takeProcessAssertion:]_block_invoke", 212, *(unsigned int *)(v2 + 8), [(id)v2 _getProcessId]);
          CFBooleanRef v7 = (dispatch_source_t *)(*(void *)(a1 + 32) + 112);
          if ((v7 & 7) == 0)
          {
            if (!*v7) {
              goto LABEL_25;
            }
            dispatch_source_set_timer(*v7, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
            uint64_t v8 = *(void *)(a1 + 32) + 104;
            if ((v8 & 7) == 0)
            {
              *(void *)uint64_t v8 = 0;
LABEL_17:
              uint64_t v11 = *(NSObject ***)(a1 + 32);
              if (((unint64_t)(v11 + 11) & 7) != 0) {
                goto LABEL_24;
              }
              if (!v11[11])
              {
                NSLog(@"ERROR - %s:%s - %d couldn't create assertion for process ID %d", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPEAClient.m", "-[IAPEAClient takeProcessAssertion:]_block_invoke", 223, [v11 _getProcessId]);
                return;
              }
              int v12 = v11 + 14;
              if (((unint64_t)(v11 + 14) & 7) != 0) {
                goto LABEL_24;
              }
              unsigned __int8 v13 = *v12;
              if (*v12)
              {
                dispatch_time_t v14 = dispatch_time(0, 10000000000);
                dispatch_source_set_timer(v13, v14, 0xFFFFFFFFFFFFFFFFLL, 0);
                time_t v15 = time(0);
                uint64_t v16 = *(void *)(a1 + 32) + 104;
                if ((v16 & 7) == 0)
                {
                  *(void *)uint64_t v16 = v15;
                  return;
                }
                goto LABEL_24;
              }
LABEL_25:
              __break(0x5510u);
              goto LABEL_26;
            }
          }
        }
      }
      else if ((((_BYTE)v2 + 8) & 3) == 0)
      {
        NSLog(@"creating process assertion - %s:%s - %d clientID=%d pid=%d", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPEAClient.m", "-[IAPEAClient takeProcessAssertion:]_block_invoke", 207, *(unsigned int *)(v2 + 8), [(id)v2 _getProcessId]);
        [*(id *)(a1 + 32) _getProcessId];
        uint64_t v9 = SBSProcessAssertionCreateForPID();
        uint64_t v10 = *(void *)(a1 + 32) + 88;
        if ((v10 & 7) == 0)
        {
          *(void *)uint64_t v10 = v9;
          goto LABEL_17;
        }
      }
    }
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }
LABEL_26:
  __break(0x5515u);
}

void sub_1000BC018(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1000BC030(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v4 = (void **)(*(void *)(a1 + 32) + 72);
  if ((v4 & 7) != 0) {
    goto LABEL_6;
  }
  uint64_t v8 = *v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000BC104;
  v9[3] = &unk_100126788;
  v9[4] = a2;
  if ([v8 indexOfObjectPassingTest:v9] == (id)0x7FFFFFFFFFFFFFFFLL) {
    return;
  }
  NSLog(@"protocol %@ found from accessory", a2);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  if (!a4)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }
  *a4 = 1;
}

BOOL sub_1000BC104(uint64_t a1, void *a2)
{
  return [a2 caseInsensitiveCompare:*(void *)(a1 + 32)] == 0;
}

uint64_t sub_1000BC9A0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  sub_10006D698(result, a2, 9);
  *(void *)uint64_t v2 = off_1001267E0;
  *(void *)(v2 + 1192) = 0;
  sub_1000DA5F4((pthread_mutex_t *)(v2 + 1200));
  qword_10013C0F0 = v2;
  uint64_t result = *(void *)(v2 + 8);
  if (!result
    || (result & 7) != 0
    || (sub_100062FD8(result, 9u, 0), (uint64_t result = *(void *)(v2 + 8)) == 0)
    || (result & 7) != 0
    || (uint64_t v3 = sub_100062F84(result, 9u, 0), *(_DWORD *)(v2 + 1268) = 0, (result = sub_10006D8BC(v3)) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(result, 9, 109, *(void *)(v2 + 8));
    return v2;
  }
  return result;
}

void sub_1000BCA6C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_1001267E0, (uint64_t v2 = sub_10006D8BC(a1)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(v2, 9, 0, *(void *)(a1 + 8));
    *(void *)(a1 + 1192) = 0;
    *(unsigned char *)(a1 + 1271) = 0;
    qword_10013C0F0 = 0;
    pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1200));
    sub_10006D970(a1);
  }
}

void sub_1000BCB04(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000BCA6C(a1);
  }
}

uint64_t sub_1000BCB18(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000BCA6C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000BCB60(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10013C5F0, memory_order_acquire) & 1) == 0) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t result = (uint64_t *)qword_10013C0F0;
    if (qword_10013C0F0)
    {
      if (!a1) {
        return result;
      }
    }
    else
    {
      uint64_t result = &qword_10013C0F8;
      qword_10013C0F0 = (uint64_t)&qword_10013C0F8;
      if (!a1) {
        return result;
      }
    }
    BOOL v3 = result && (result & 7) == 0;
    if (v3 && (((_BYTE)result + 8) & 7) == 0)
    {
      if (!result[1])
      {
        (*(void (**)(uint64_t *, uint64_t))(*result + 56))(result, a1);
        uint64_t result = (uint64_t *)qword_10013C0F0;
      }
      if (result && (result & 7) == 0 && ((unint64_t)(result + 1) & 7) == 0) {
        break;
      }
    }
    __break(0x5516u);
LABEL_23:
    if (__cxa_guard_acquire(&qword_10013C5F0))
    {
      sub_1000BC9A0((uint64_t)&qword_10013C0F8, a1);
      __cxa_atexit((void (*)(void *))sub_1000BCB04, &qword_10013C0F8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10013C5F0);
    }
  }
  if (result[1] != a1) {
    return 0;
  }
  return result;
}

void sub_1000BCC84()
{
  sub_1000BCEA4();
  if (v0)
  {
    __int16 v9 = -21846;
    char v10 = -86;
    if (qword_10013C0F0) {
      BOOL v1 = (qword_10013C0F0 & 7) == 0;
    }
    else {
      BOOL v1 = 0;
    }
    if (!v1) {
      goto LABEL_33;
    }
    pthread_mutex_lock((pthread_mutex_t *)(qword_10013C0F0 + 1200));
    if (!qword_10013C0F0 || (qword_10013C0F0 & 7) != 0) {
      goto LABEL_33;
    }
    if (*(unsigned char *)(qword_10013C0F0 + 1271))
    {
      if ((((_BYTE)qword_10013C0F0 - 12) & 3) != 0) {
        goto LABEL_33;
      }
      __int16 v9 = bswap32(*(unsigned __int16 *)(qword_10013C0F0 + 1268)) >> 16;
      if ((qword_10013C0F0 + 1270)) {
        goto LABEL_33;
      }
      if ((unint64_t)&v9 >= 0xFFFFFFFFFFFFFFFELL)
      {
LABEL_34:
        __break(0x5513u);
        return;
      }
      char v10 = *(unsigned char *)(qword_10013C0F0 + 1270);
    }
    if ((((_BYTE)qword_10013C0F0 - 88) & 7) != 0) {
      goto LABEL_33;
    }
    BOOL v3 = (uint64_t *)(qword_10013C0F0 + 8);
    if (((qword_10013C0F0 + 8) & 7) != 0) {
      goto LABEL_33;
    }
    uint64_t v4 = *v3;
    uint64_t v5 = *v3 & 7;
    if (!v4 || v5 != 0) {
      goto LABEL_33;
    }
    if (sub_100062318(v4)) {
LABEL_32:
    }
      sub_1000C51E0();
    if (qword_10013C0F0)
    {
      if ((qword_10013C0F0 & 7) == 0)
      {
        CFBooleanRef v7 = (uint64_t *)(qword_10013C0F0 + 1192);
        if (((qword_10013C0F0 + 1192) & 7) == 0)
        {
          uint64_t v8 = *v7;
          if (*v7)
          {
            if ((v8 & 7) == 0)
            {
              (*(void (**)(uint64_t, void))(*(void *)v8 + 16))(v8, 0);
              goto LABEL_32;
            }
          }
        }
      }
    }
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
}

void sub_1000BCEA4()
{
  uint64_t v0 = qword_10013C0F0;
  if (!qword_10013C0F0)
  {
    sub_1000BCB60(0);
    uint64_t v0 = qword_10013C0F0;
    if (!qword_10013C0F0) {
      return;
    }
  }
  if ((v0 & 7) != 0 || (((_BYTE)v0 + 8) & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t v2 = *(void *)(v0 + 8);
  if (v2)
  {
    if ((v2 & 7) != 0) {
      goto LABEL_30;
    }
    uint64_t v2 = sub_100062318(v2);
    if (v2) {
      return;
    }
    uint64_t v0 = qword_10013C0F0;
  }
  if (v0) {
    BOOL v3 = (v0 & 7) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  uint64_t v4 = (void *)(v0 + 1192);
  if (!v3 || (v4 & 7) != 0) {
    goto LABEL_30;
  }
  if (*v4)
  {
    uint64_t v6 = sub_10006D8BC(v2);
    if (v6 && (v6 & 7) == 0 && qword_10013C0F0 && (qword_10013C0F0 & 7) == 0 && ((qword_10013C0F0 + 1192) & 7) == 0)
    {
      uint64_t v7 = *(void *)(qword_10013C0F0 + 1192);
      sub_1000602FC(v6, v7);
      return;
    }
LABEL_30:
    __break(0x5516u);
  }
}

uint64_t sub_1000BCF90(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  __int16 v5 = *(_WORD *)(result + 126);
  __int16 v14 = v5;
  uint64_t result = qword_10013C0F0;
  if (!qword_10013C0F0 || (qword_10013C0F0 & 7) != 0) {
    goto LABEL_28;
  }
  int v8 = *(_DWORD *)(v3 + 68);
  uint64_t result = (uint64_t)sub_10006F9E0((void *)qword_10013C0F0, v8, v5, 0, a3);
  if (!result)
  {
    if (!qword_10013C0F0 || (qword_10013C0F0 & 7) != 0 || ((qword_10013C0F0 + 8) & 7) != 0) {
      goto LABEL_28;
    }
    uint64_t result = sub_1000C4B20(*(void *)(qword_10013C0F0 + 8), v3, a2, 1u);
    if (result)
    {
      uint64_t v13 = 0;
      uint64_t result = qword_10013C0F0;
      if (qword_10013C0F0 && (qword_10013C0F0 & 7) == 0) {
        return sub_10006FB58(qword_10013C0F0, v8, &v14, &v13, 0xFFFFu);
      }
      goto LABEL_28;
    }
    if (!qword_10013C0F0
      || (qword_10013C0F0 & 7) != 0
      || (__int16 v9 = (uint64_t *)(qword_10013C0F0 + 8), ((qword_10013C0F0 + 8) & 7) != 0)
      || (uint64_t result = *v9) == 0
      || (result & 7) != 0
      || (uint64_t result = sub_100062FD8(result, 9u, 1), !qword_10013C0F0)
      || (qword_10013C0F0 & 7) != 0
      || (char v10 = (uint64_t *)(qword_10013C0F0 + 8), ((qword_10013C0F0 + 8) & 7) != 0)
      || (uint64_t v11 = *v10) == 0
      || (v11 & 7) != 0)
    {
LABEL_28:
      __break(0x5516u);
      return result;
    }
    int v12 = sub_10006FADC();
    sub_100062F84(v11, 9u, v12);
    return 0;
  }
  return result;
}

uint64_t sub_1000BD0E8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_147;
  }
  if (!*(void *)(a1 + 8)) {
    goto LABEL_10;
  }
  uint64_t v5 = sub_10006D8BC(a1);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_147;
  }
  if (!sub_1000A1834(v5, *(void *)(a1 + 8)))
  {
LABEL_10:
    uint64_t v7 = 89;
LABEL_11:
    sub_1000C6E1C(a2);
    return v7;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_147;
  }
  if (sub_1000622BC(v6)) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0 || (uint64_t v9 = *(void *)(a1 + 8)) == 0 || (v9 & 7) != 0) {
LABEL_147:
  }
    __break(0x5516u);
  char v10 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v11 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v12 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 8);
  BOOL v14 = sub_100062318(v9);
  if (v14)
  {
    uint64_t v15 = 474;
  }
  else
  {
    uint64_t v16 = sub_10006D8BC(v14);
    if (!v16 || (v16 & 7) != 0) {
      goto LABEL_147;
    }
    uint64_t v15 = sub_10009FDA4(v16, v13);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (!v17 || (v17 & 7) != 0) {
    goto LABEL_147;
  }
  BOOL v18 = sub_100062318(v17);
  if (v18)
  {
    int v19 = 0;
  }
  else
  {
    uint64_t v20 = sub_10006D8BC(v18);
    if (!v20 || (v20 & 7) != 0) {
      goto LABEL_147;
    }
    int v19 = sub_10006022C(v20, v13);
  }
  if (qword_10013C0F0 && v13 == *(void *)(a1 + 1192))
  {
    if (v15 == 70 || v15 == 474 || v15 == 53248) {
      goto LABEL_37;
    }
    if (v19 < 0) {
      goto LABEL_149;
    }
    if (!v19)
    {
LABEL_37:
      uint64_t v2 = 25;
      char v21 = 1;
    }
    else
    {
      char v21 = 0;
      uint64_t v2 = 5;
    }
    sub_1000BCEA4();
    if (v22 && v13 == *(void *)(a1 + 1192) && v10 && v2 > v11)
    {
      __int16 v44 = 25;
      bzero((char *)v45 + 4, 0x7FCuLL);
      LODWORD(v45[0]) = v11;
      if (v11 == 4)
      {
        if (v12 != 3) {
          goto LABEL_41;
        }
        unsigned int v31 = bswap32(*v10);
        unsigned int v32 = HIWORD(v31);
        WORD2(v45[0]) = HIWORD(v31);
        if ((unint64_t)v10 <= 0xFFFFFFFFFFFFFFFDLL)
        {
          char v33 = *((unsigned char *)v10 + 2);
          BYTE6(v45[0]) = v33;
          if ((v21 & 1) == 0)
          {
            char v33 = 0;
            LOWORD(v32) = HIWORD(v31) & 0x200;
            WORD2(v45[0]) = HIWORD(v31) & 0x200;
            BYTE6(v45[0]) = 0;
          }
          __int16 v44 = 3;
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 1200));
          *(_WORD *)(a1 + 1268) = v32;
          *(unsigned char *)(a1 + 1270) = v33;
          *(unsigned char *)(a1 + 1271) = 1;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1200));
          goto LABEL_106;
        }
      }
      else
      {
        if (v11 != 2)
        {
          if (!v11)
          {
            if (v12 == 2)
            {
              unsigned int v29 = 0;
LABEL_104:
              BYTE5(v45[0]) = *(unsigned char *)v10;
              if (v10 != (unsigned __int16 *)-1)
              {
                BYTE4(v45[0]) = *((unsigned char *)v10 + 1);
                DWORD2(v45[0]) = v29;
                __int16 v44 = BYTE4(v45[0]);
                if (BYTE4(v45[0]) > 0x18u) {
                  goto LABEL_110;
                }
                goto LABEL_106;
              }
              goto LABEL_150;
            }
            if (v12 == 6 && *(unsigned char *)v10 == 6)
            {
              if ((unint64_t)v10 >= 0xFFFFFFFFFFFFFFFELL)
              {
LABEL_151:
                __break(0x5500u);
LABEL_152:
                sub_1000F2384();
              }
              unsigned int v29 = bswap32(*(_DWORD *)(v10 + 1));
              goto LABEL_104;
            }
          }
LABEL_41:
          uint64_t v7 = 2;
          goto LABEL_11;
        }
        if (v12 != 2) {
          goto LABEL_41;
        }
        BYTE4(v45[0]) = *(unsigned char *)v10;
        if (v10 != (unsigned __int16 *)-1)
        {
          BYTE5(v45[0]) = *((unsigned char *)v10 + 1);
          __int16 v44 = 1;
LABEL_106:
          v43.__r_.__value_.__r.__words[0] = 0;
          int v36 = *(_DWORD *)(a2 + 68);
          if (!v36)
          {
            sub_1000EE4F4(0, 4, "%s:%d CIapLingoSports::ProcessCmd packet transID = 0!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSports.cpp", 379);
            int v36 = *(_DWORD *)(a2 + 68);
          }
          if (sub_10006FB58(a1, v36, &v44, &v43, 0xFFFFu)) {
            sub_1000EE4F4(0, 4, "%s:%d CIapLingoSports::ProcessCmd timeoutStatus != 0!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSports.cpp", 386);
          }
LABEL_110:
          uint64_t v37 = *(void *)(a1 + 8);
          if (v37 && (v37 & 7) == 0)
          {
            sub_1000634E4(v37, 9u, 0, (uint64_t)v45, 2048);
            uint64_t v7 = 0;
            goto LABEL_11;
          }
          goto LABEL_147;
        }
      }
LABEL_150:
      __break(0x5513u);
      goto LABEL_151;
    }
    if ((v11 & 0x80) == 0) {
      goto LABEL_41;
    }
    uint64_t v15 = *(void *)(a2 + 8);
    uint64_t v23 = sub_1000DE0E8();
    if (v23)
    {
      uint64_t v2 = v23;
      char v46 = -86;
      *(void *)&long long v24 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v24 + 1) = 0xAAAAAAAAAAAAAAAALL;
      v45[6] = v24;
      v45[7] = v24;
      v45[4] = v24;
      v45[5] = v24;
      v45[2] = v24;
      v45[3] = v24;
      v45[0] = v24;
      v45[1] = v24;
      if ((v23 & 7) != 0) {
        goto LABEL_147;
      }
      unsigned int v25 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 40))(v23);
      if (!v25) {
        sub_1000EE4F4(0, 4, "%s:%d userCount == 0\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSports.cpp", 414);
      }
      sub_1000BCEA4();
      if (v26 && v13 == *(void *)(a1 + 1192))
      {
        switch(v11)
        {
          case 0x83u:
            if (v12) {
              goto LABEL_127;
            }
            if (!v25)
            {
              (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
              unsigned int v25 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 40))(v2);
            }
            if (v25) {
              __int16 v30 = 768;
            }
            else {
              __int16 v30 = 256;
            }
            LOWORD(v45[0]) = v30;
            if ((_OWORD *)((char *)v45 + 3) != 0 && (unint64_t)v45 >= 0xFFFFFFFFFFFFFFFDLL) {
              goto LABEL_150;
            }
            BYTE2(v45[0]) = v25;
            unsigned __int8 v27 = 3;
            __int16 v28 = 132;
            goto LABEL_50;
          case 0x85u:
            char v34 = 4;
            if (v12 || !v25) {
              goto LABEL_128;
            }
            LOBYTE(v45[0]) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 56))(v2);
            unsigned __int8 v27 = 1;
            __int16 v28 = 134;
            goto LABEL_50;
          case 0x87u:
            char v34 = 4;
            if (v12 != 1 || !v25) {
              goto LABEL_128;
            }
            if (!v10) {
              goto LABEL_147;
            }
            if (*(unsigned __int8 *)v10 < v25)
            {
              if ((*(unsigned int (**)(uint64_t))(*(void *)v2 + 48))(v2)) {
                char v34 = 0;
              }
              else {
                char v34 = 4;
              }
            }
            goto LABEL_128;
          case 0x88u:
            if (v12 != 1) {
              goto LABEL_127;
            }
            if (!v10) {
              goto LABEL_147;
            }
            char v34 = 4;
            if (!v25 || *(unsigned __int8 *)v10 > 5u) {
              goto LABEL_128;
            }
            LOBYTE(v45[0]) = *(unsigned char *)v10;
            switch(*(unsigned char *)v10)
            {
              case 0:
                unsigned int v35 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 96))(v2);
                goto LABEL_144;
              case 1:
                memset(&v43, 170, sizeof(v43));
                (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)v2 + 88))(&v43, v2);
                std::string::size_type size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
                if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::string::size_type size = v43.__r_.__value_.__l.__size_;
                }
                BOOL v39 = __CFADD__(size, 1);
                unint64_t v40 = size + 1;
                if (v39) {
                  goto LABEL_151;
                }
                if (v40 >> 16) {
                  goto LABEL_148;
                }
                if (v40 >= 0x80) {
                  size_t v41 = 128;
                }
                else {
                  size_t v41 = v40;
                }
                if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v42 = &v43;
                }
                else {
                  uint64_t v42 = (std::string *)v43.__r_.__value_.__r.__words[0];
                }
                memcpy((char *)v45 + 1, v42, v41);
                unsigned __int8 v27 = v41 + 1;
                sub_10006DE60(a1, (uint64_t)v45 + 1, v41);
                std::string::~string(&v43);
                break;
              case 2:
                unsigned int v35 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 112))(v2);
                goto LABEL_144;
              case 3:
                *(_WORD *)((char *)v45 + 1) = __rev16((*(uint64_t (**)(uint64_t))(*(void *)v2 + 128))(v2));
                unsigned __int8 v27 = 3;
                break;
              case 4:
                LOBYTE(v35) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 144))(v2);
                goto LABEL_145;
              case 5:
                unsigned int v35 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 160))(v2);
LABEL_144:
                if (v35 > 0xFF) {
                  goto LABEL_148;
                }
LABEL_145:
                BYTE1(v45[0]) = v35;
                unsigned __int8 v27 = 2;
                break;
              default:
                goto LABEL_152;
            }
            __int16 v28 = 137;
            goto LABEL_50;
          case 0x8Au:
            if (v12 < 2) {
              goto LABEL_127;
            }
            if (!v10) {
              goto LABEL_147;
            }
            char v34 = 4;
            if (!v25 || *(unsigned __int8 *)v10 > 5u) {
              goto LABEL_128;
            }
            char v34 = 2;
            switch(*(unsigned char *)v10)
            {
              case 0:
                if (v12 != 2) {
                  goto LABEL_127;
                }
                if (v10 == (unsigned __int16 *)-1) {
                  goto LABEL_150;
                }
                if (*((unsigned __int8 *)v10 + 1) > 2u) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 104))(v2);
                break;
              case 2:
                goto LABEL_114;
              case 3:
                if (v12 != 3) {
                  goto LABEL_127;
                }
                if (v10 == (unsigned __int16 *)-1) {
                  goto LABEL_151;
                }
                if (bswap32(*(unsigned __int16 *)((char *)v10 + 1)) >> 16 > 0x1388) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 136))(v2);
                break;
              case 4:
                if (v12 != 2) {
                  goto LABEL_127;
                }
                if (v10 == (unsigned __int16 *)-1) {
                  goto LABEL_150;
                }
                if (*((unsigned __int8 *)v10 + 1) > 0xC8u) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 152))(v2);
                break;
              default:
                goto LABEL_128;
            }
            goto LABEL_126;
          default:
            break;
        }
      }
      LOBYTE(v45[0]) = 4;
      if (v11 <= 0xFF) {
        goto LABEL_49;
      }
LABEL_148:
      __break(0x5507u);
LABEL_149:
      __break(0x550Au);
      goto LABEL_150;
    }
  }
  __break(0x5518u);
  if (v12 != 2) {
    goto LABEL_127;
  }
LABEL_114:
  if (v10 == (unsigned __int16 *)-1) {
    goto LABEL_150;
  }
  if (*((unsigned __int8 *)v10 + 1) <= 2u)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 120))(v2);
LABEL_126:
    char v34 = 0;
  }
  else
  {
LABEL_127:
    char v34 = 4;
  }
LABEL_128:
  LOBYTE(v45[0]) = v34;
LABEL_49:
  BYTE1(v45[0]) = v11;
  unsigned __int8 v27 = 2;
  __int16 v28 = 128;
LABEL_50:
  sub_1000C5B58(a2, v15, 0, 9, v28, *(_DWORD *)(a2 + 68), v45, v27);
  return sub_1000C4B20(*(void *)(a1 + 8), a2, 0, 1u);
}

uint64_t sub_1000BDAB0(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      char v4 = a3;
      if (a3 >= 0x19)
      {
        __break(0x5518u);
      }
      else
      {
        bzero(v5, 0x800uLL);
        v5[4] = v4;
        v5[5] = 15;
        uint64_t result = *(void *)(v3 + 8);
        if (result && (result & 7) == 0) {
          return sub_1000634E4(result, 9u, 0, (uint64_t)v5, 2048);
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000BDB40(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_48;
  }
  int v15 = 0;
  if (a2 <= 7)
  {
    if (a2 == 1)
    {
      sub_1000EE4F4(0, 4, "%s:%d IAP_EVENT_CLASS_MODE_CHANGE with Event Type:%ld\n");
      return;
    }
    if (a2 != 4) {
      goto LABEL_49;
    }
    *(void *)(a1 + 1192) = a4;
    if (a4)
    {
      if (qword_10013C0F0)
      {
        if ((qword_10013C0F0 & 7) == 0)
        {
          pthread_mutex_lock((pthread_mutex_t *)(qword_10013C0F0 + 1200));
          *(unsigned char *)(a1 + 1271) = 0;
          if (qword_10013C0F0)
          {
            if ((qword_10013C0F0 & 7) == 0)
            {
              pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C0F0 + 1200));
              return;
            }
          }
        }
      }
    }
    else
    {
      __break(0x5518u);
    }
    goto LABEL_48;
  }
  if (a2 == 8)
  {
    if (*(void *)(a1 + 1192) != a4)
    {
      sub_1000EE4F4(0, 4, "%s:%d devPort(%hhx) != m_pDevPortObj(%hhx)\n");
      return;
    }
    *(void *)(a1 + 1192) = 0;
    if (qword_10013C0F0)
    {
      if ((qword_10013C0F0 & 7) == 0)
      {
        pthread_mutex_lock((pthread_mutex_t *)(qword_10013C0F0 + 1200));
        *(unsigned char *)(a1 + 1271) = 0;
        if (qword_10013C0F0)
        {
          if ((qword_10013C0F0 & 7) == 0)
          {
            pthread_mutex_unlock((pthread_mutex_t *)(qword_10013C0F0 + 1200));
            do
            {
              __int16 v14 = -1;
              uint64_t v13 = 0;
            }
            while (!sub_10006FB58(a1, -1, &v14, &v13, 0xFFFFu));
            return;
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (a2 == 32)
  {
    if (*(_DWORD *)(a1 + 1176) != a3) {
      goto LABEL_50;
    }
    sub_10006FF9C(a1, (uint64_t)&v15);
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 && (v7 & 7) == 0)
    {
      if (!sub_100063090(v7, 9u)) {
        return;
      }
      unsigned int v8 = sub_10006FADC();
      uint64_t v9 = *(void *)(a1 + 8);
      if (v9)
      {
        if ((v9 & 7) == 0)
        {
          unsigned int v10 = sub_10006303C(v9, 9u);
          if (v8 < v10)
          {
            __break(0x5515u);
            goto LABEL_52;
          }
          if (v8 - v10 < 0x1F4) {
            return;
          }
          uint64_t v11 = *(void *)(a1 + 8);
          if (v11)
          {
            if ((v11 & 7) == 0)
            {
              sub_100062FD8(v11, 9u, 0);
              uint64_t v12 = *(void *)(a1 + 8);
              if (v12)
              {
                if ((v12 & 7) == 0)
                {
                  sub_100062F84(v12, 9u, 0);
                  return;
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (a2 != 64)
  {
LABEL_49:
    syslog(3, "CIapLingoSports::NotifyEvent: ERROR: Unknown event: %d !\n", a2);
LABEL_50:
    sub_1000F2384();
  }
  if (*(unsigned char *)(a1 + 1271)) {
    return;
  }
  uint64_t v5 = sub_10006D8BC(a1);
  if (!v5 || (v5 & 7) != 0)
  {
LABEL_48:
    __break(0x5516u);
    goto LABEL_49;
  }
  int v6 = sub_1000601E8(v5, *(void *)(a1 + 1192));
  if ((v6 + 8) > 0xF)
  {
LABEL_52:
    __break(0x550Au);
    return;
  }
  if ((v6 | 2) == 6)
  {
    sub_1000BCC84();
  }
}

void sub_1000BDDCC(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (a2 && v4) {
    return;
  }
  if (!v4)
  {
    sub_1000704C4(a1, a2);
    *(void *)(a1 + 1192) = 0;
    uint64_t v6 = *(void *)(a1 + 8);
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        sub_100062FD8(v6, 9u, 0);
        uint64_t v7 = *(void *)(a1 + 8);
        if (v7)
        {
          if ((v7 & 7) == 0)
          {
            uint64_t v8 = sub_100062F84(v7, 9u, 0);
            *(_DWORD *)(a1 + 1268) = 0;
            uint64_t v9 = sub_10006D8BC(v8);
            if (v9)
            {
              if ((v9 & 7) == 0)
              {
                sub_10009F1D8(v9, 9, 109, *(void *)(a1 + 8));
                return;
              }
            }
          }
        }
      }
    }
    goto LABEL_18;
  }
  uint64_t v5 = sub_10006D8BC(a1);
  if (!v5 || (v5 & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    return;
  }
  sub_10009F1D8(v5, 9, 0, *(void *)(a1 + 8));
  *(void *)(a1 + 1192) = 0;
  *(unsigned char *)(a1 + 1271) = 0;
  sub_1000704C4(a1, a2);
}

uint64_t sub_1000BDED8(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
    goto LABEL_8;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1000714C4(9);
  *(unsigned char *)uint64_t v2 = 9;
  if (v2 == -1)
  {
LABEL_8:
    __break(0x5500u);
    return result;
  }
  uint64_t v3 = 0x200000000000000;
  if (!result) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 1) = v3;
  return 0;
}

uint64_t sub_1000BDF38(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  sub_10006D698(result, a2, 12);
  uint64_t v4 = 0;
  *(void *)uint64_t v2 = off_100126890;
  do
  {
    uint64_t v5 = (_OWORD *)(v2 + v4 + 1240);
    *uint64_t v5 = 0uLL;
    v5[1] = 0uLL;
    *(_OWORD *)(v2 + v4 + 1272) = 0uLL;
    v4 += 80;
  }
  while (v4 != 1280);
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0 || (uint64_t result = sub_1000A1140(result, a2)) == 0 || (result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 184))(result, 12);
  if (result < 0x10000)
  {
    *(_WORD *)(v2 + 1204) = result;
    uint64_t result = *(void *)(v2 + 8);
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_100062FD8(result, 0xCu, 0);
        uint64_t result = *(void *)(v2 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t result = sub_100062F84(result, 0xCu, 0);
            unint64_t v6 = 0;
            *(void *)(v2 + 1192) = 0;
            do
            {
              if (v6 > ~(v2 + 1208))
              {
                __break(0x5513u);
                goto LABEL_21;
              }
              *(_OWORD *)(v2 + v6 + 1208) = 0uLL;
              *(void *)(v2 + v6 + 1232) = 0;
              v6 += 80;
            }
            while (v6 != 1280);
            *(void *)(v2 + 2936) = 0;
            *(_OWORD *)(v2 + 2904) = 0u;
            *(_OWORD *)(v2 + 2920) = 0u;
            *(_OWORD *)(v2 + 2872) = 0u;
            *(_OWORD *)(v2 + 2888) = 0u;
            *(_OWORD *)(v2 + 2840) = 0u;
            *(_OWORD *)(v2 + 2856) = 0u;
            *(_OWORD *)(v2 + 2808) = 0u;
            *(_OWORD *)(v2 + 2824) = 0u;
            *(_OWORD *)(v2 + 2776) = 0u;
            *(_OWORD *)(v2 + 2792) = 0u;
            *(_OWORD *)(v2 + 2744) = 0u;
            *(_OWORD *)(v2 + 2760) = 0u;
            *(_OWORD *)(v2 + 2712) = 0u;
            *(_OWORD *)(v2 + 2728) = 0u;
            *(_OWORD *)(v2 + 2680) = 0u;
            *(_OWORD *)(v2 + 2696) = 0u;
            *(_OWORD *)(v2 + 2648) = 0u;
            *(_OWORD *)(v2 + 2664) = 0u;
            *(_OWORD *)(v2 + 2616) = 0u;
            *(_OWORD *)(v2 + 2632) = 0u;
            *(_OWORD *)(v2 + 2584) = 0u;
            *(_OWORD *)(v2 + 2600) = 0u;
            *(_OWORD *)(v2 + 2552) = 0u;
            *(_OWORD *)(v2 + 2568) = 0u;
            *(_OWORD *)(v2 + 2520) = 0u;
            *(_OWORD *)(v2 + 2536) = 0u;
            *(_OWORD *)(v2 + 2488) = 0u;
            *(_OWORD *)(v2 + 2504) = 0u;
            uint64_t result = sub_1000D289C();
            if (result && (result & 7) == 0)
            {
              sub_10009F1D8(result, 12, 45, a2);
              return v2;
            }
          }
        }
      }
    }
    goto LABEL_21;
  }
LABEL_22:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000BE0FC(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000BDF38(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000BE110(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_100126890, (uint64_t v2 = sub_1000D289C()) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(v2, 12, 0, *(void *)(a1 + 8));
    uint64_t v3 = 1280;
    do
    {
      uint64_t v4 = a1 + v3;
      if (*(char *)(a1 + v3 + 1207) < 0) {
        operator delete(*(void **)(v4 + 1184));
      }
      if (*(char *)(v4 + 1183) < 0) {
        operator delete(*(void **)(a1 + v3 + 1160));
      }
      v3 -= 80;
    }
    while (v3);
    sub_10006D970(a1);
  }
}

void sub_1000BE1CC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000BE110(a1);
  }
}

uint64_t sub_1000BE1E0(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000BE110(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000BE228(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_82;
  }
  if (!*(void *)(a1 + 8)) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_10006D8BC(a1);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_82;
  }
  if (!sub_1000A1834(v4, *(void *)(a1 + 8)))
  {
LABEL_10:
    uint64_t v6 = 89;
LABEL_11:
    sub_1000C6E1C(a2);
    return v6;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_82;
  }
  if (sub_1000622BC(v5)) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0) {
LABEL_82:
  }
    __break(0x5516u);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(char **)(a2 + 24);
  int v10 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v11 = *(unsigned __int16 *)(a2 + 128);
  unsigned __int8 v26 = -1;
  if (!v9 && v11) {
    sub_1000F2384();
  }
  if (v8 != *(void *)(a1 + 1192) || (v10 & 0x7Fu) > 0x12) {
    goto LABEL_33;
  }
  unint64_t result = sub_1000BE6D8(a1);
  if ((result & 1) == 0)
  {
    uint64_t v13 = sub_10006D8BC(result);
    if (!v13 || (v13 & 7) != 0) {
      goto LABEL_82;
    }
    unint64_t result = sub_1000602FC(v13, *(void *)(a1 + 1192));
    if (!result)
    {
LABEL_33:
      if ((v10 & 0x80) != 0)
      {
        uint64_t v6 = 2;
        goto LABEL_11;
      }
      uint64_t v15 = a2;
      goto LABEL_35;
    }
  }
  if (v10 <= 15)
  {
    switch(v10)
    {
      case 1:
        if (v11) {
          goto LABEL_74;
        }
        memset(&v27[1], 170, 14);
        sub_1000BE810();
        unint64_t result = sub_1000BE768();
        v27[0] = bswap64(result);
        if ((unint64_t)v27 >= 0xFFFFFFFFFFFFFFF8
          || (LODWORD(v27[1]) = 64, (unint64_t)v27 >= 0xFFFFFFFFFFFFFFF4)
          || (WORD2(v27[1]) = bswap32(*(unsigned __int16 *)(a1 + 1204)) >> 16,
              (unint64_t)v27 >= 0xFFFFFFFFFFFFFFF2)
          || (HIWORD(v27[1]) = 0, (unint64_t)v27 >= 0xFFFFFFFFFFFFFFF0))
        {
LABEL_85:
          __break(0x5500u);
          goto LABEL_86;
        }
        LOWORD(v27[2]) = 4135;
        if ((unint64_t)v27 < 0xFFFFFFFFFFFFFFEELL)
        {
          BYTE2(v27[2]) = -56;
          if ((unint64_t)v27 <= 0xFFFFFFFFFFFFFFECLL)
          {
            BYTE3(v27[2]) = 0;
            if ((void *)((char *)&v27[2] + 5) == 0 || (unint64_t)v27 < 0xFFFFFFFFFFFFFFEBLL)
            {
              BYTE4(v27[2]) = 1;
              if ((unint64_t)v27 <= 0xFFFFFFFFFFFFFFEALL)
              {
                BYTE5(v27[2]) = 2;
                int v17 = *(_DWORD *)(a2 + 68);
                uint64_t v18 = a2;
                uint64_t v19 = v8;
                __int16 v20 = 2;
                unsigned int v21 = 22;
                goto LABEL_59;
              }
            }
          }
        }
        break;
      case 7:
        if (v11 < 6) {
          goto LABEL_74;
        }
        if ((unint64_t)v9 <= 0xFFFFFFFFFFFFFFFBLL)
        {
          unsigned int v22 = v9[4];
          unsigned __int8 v26 = v9[4];
          if (!v9) {
            goto LABEL_82;
          }
          if ((unint64_t)(v9 + 3) >= 2)
          {
            if ((v11 - 5) >> 16) {
              goto LABEL_86;
            }
            if ((unint64_t)v9 <= 0xFFFFFFFFFFFFFFFALL)
            {
              sub_1000BE8F4(a1, v12, v22, bswap32(*(_DWORD *)v9), (unsigned __int16)(v11 - 5), v9 + 5);
              goto LABEL_74;
            }
          }
        }
        break;
      case 8:
        if (v11 != 1) {
          goto LABEL_74;
        }
        if (v9)
        {
          unsigned __int8 v26 = *v9;
          sub_1000BEB40(a1, v8, v26);
          goto LABEL_74;
        }
        goto LABEL_82;
      default:
        goto LABEL_73;
    }
LABEL_84:
    __break(0x5513u);
    goto LABEL_85;
  }
  if (v10 > 127)
  {
    if (v10 != 128)
    {
      if (v10 != 130)
      {
LABEL_73:
        if ((v10 & 0x80) == 0) {
          goto LABEL_74;
        }
        goto LABEL_76;
      }
      BOOL v16 = v11 != 22;
LABEL_72:
      uint64_t v6 = (2 * v16);
LABEL_77:
      uint64_t v23 = *(void *)(a1 + 8);
      if (v23)
      {
        if ((v23 & 7) == 0)
        {
          sub_100062FD8(v23, 0xCu, 1);
          uint64_t v24 = *(void *)(a1 + 8);
          if (v24)
          {
            if ((v24 & 7) == 0)
            {
              int v25 = sub_10006FADC();
              sub_100062F84(v24, 0xCu, v25);
              goto LABEL_11;
            }
          }
        }
      }
      goto LABEL_82;
    }
    if (v11 != 3)
    {
LABEL_76:
      uint64_t v6 = 2;
      goto LABEL_77;
    }
    if (v9 != (char *)-1)
    {
      BOOL v16 = v9[1] == 133;
      goto LABEL_72;
    }
    goto LABEL_84;
  }
  if (v10 == 16)
  {
    if (v11) {
      goto LABEL_74;
    }
    sub_1000BE810();
    v27[0] = bswap64(sub_1000BEC00());
    int v17 = *(_DWORD *)(a2 + 68);
    uint64_t v18 = a2;
    uint64_t v19 = v8;
    __int16 v20 = 17;
    unsigned int v21 = 8;
LABEL_59:
    sub_1000C5B58(v18, v19, 0, 12, v20, v17, v27, v21);
    goto LABEL_74;
  }
  if (v10 != 18) {
    goto LABEL_73;
  }
  if (!v11)
  {
LABEL_74:
    if (*(unsigned __int16 *)(a2 + 126) != v10) {
      return sub_1000BF524(*(void *)(a1 + 8), a2, 0);
    }
    uint64_t v15 = a2;
LABEL_35:
    sub_1000C55C4(v15);
    return sub_1000BF524(*(void *)(a1 + 8), a2, 0);
  }
  if (!v9) {
    goto LABEL_82;
  }
  if (*v9 > 2u) {
    goto LABEL_74;
  }
  if (v11 <= 0xFF)
  {
    sub_1000BECA8(a1, v8, (unsigned __int8 *)v9, v11, &v26);
    if (!v14) {
      sub_1000C5B58(a2, v8, 0, 12, 4, *(_DWORD *)(a2 + 68), &v26, 1u);
    }
    goto LABEL_74;
  }
LABEL_86:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000BE6D8(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(result + 8))
  {
    __break(0x5518u);
    goto LABEL_15;
  }
  unint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(result + 201) >= 2u)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 201)) {
    return 0;
  }
  unint64_t result = *(void *)(v1 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  return sub_100062318(result);
}

uint64_t sub_1000BE768()
{
  memset(&v2, 170, sizeof(v2));
  if (byte_10013C60F >= 0) {
    uint64_t v0 = (const char *)&qword_10013C5F8;
  }
  else {
    uint64_t v0 = (const char *)qword_10013C5F8;
  }
  uint64_t result = statfs(v0, &v2);
  if (result) {
    return 0;
  }
  if (is_mul_ok(v2.f_blocks, v2.f_bsize)) {
    return v2.f_blocks * v2.f_bsize;
  }
  __break(0x550Cu);
  return result;
}

void sub_1000BE810()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10013C610, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10013C610))
  {
    qword_10013C5F8 = 0;
    qword_10013C600 = 0;
    unk_10013C608 = 0;
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10013C5F8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10013C610);
  }
  uint64_t v0 = qword_10013C600;
  if (byte_10013C60F >= 0) {
    uint64_t v0 = byte_10013C60F;
  }
  if (!v0)
  {
    std::string::assign((std::string *)&qword_10013C5F8, (const std::string::value_type *)qword_10013C898);
    std::string::append((std::string *)&qword_10013C5F8, "/Accessories");
    sub_1000DA4C0((char *)&qword_10013C5F8);
  }
}

void sub_1000BE8F4(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, char *a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_36;
  }
  sub_1000BE810();
  uint64_t v11 = sub_1000BEC00();
  if (a3 >= 0x10) {
    return;
  }
  if (__CFADD__(a1 + 1208, 80 * a3))
  {
LABEL_35:
    __break(0x5513u);
    goto LABEL_36;
  }
  uint64_t v12 = (FILE **)(a1 + 1208 + 80 * a3);
  if ((((_BYTE)a1 - 72 + 80 * (_BYTE)a3) & 7) != 0)
  {
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }
  if (v11 < 0x12C000 || !*v12 || !a5 || *(unsigned __int16 *)(a1 + 1204) < a5 || a5 + (unint64_t)a4 > 0x40000000) {
    return;
  }
  unsigned int v13 = a3;
  fseek(*v12, a4, 0);
  int v14 = a6;
  size_t v15 = a5;
  while (1)
  {
    size_t v16 = fwrite(v14, 1uLL, v15, *v12);
    BOOL v17 = v15 >= v16;
    v15 -= v16;
    if (!v17) {
      break;
    }
    if (__CFADD__(v14, v16)) {
      goto LABEL_35;
    }
    v14 += v16;
    if (!v15)
    {
      if ((((_BYTE)a1 + 80 * (_BYTE)v13 - 56) & 7) != 0) {
        goto LABEL_36;
      }
      unsigned int v18 = *(_DWORD *)(a1 + 80 * v13 + 1224);
      if (v18 > 3) {
        goto LABEL_38;
      }
      if (__CFADD__(a1 + 2488, 152 * v18)) {
        goto LABEL_35;
      }
      uint64_t v19 = a1 + 152 * v18 + 2488;
      if ((v19 & 7) == 0)
      {
        int v20 = *(_DWORD *)v19;
        if (*(_DWORD *)v19 > 0xFFu) {
          goto LABEL_39;
        }
        if ((v20 & 8) != 0)
        {
          unsigned int v21 = (uint64_t *)(a1 + 80 * v13 + 1216);
          if ((((_BYTE)a1 + 80 * (_BYTE)v13 - 64) & 7) != 0) {
            goto LABEL_36;
          }
          uint64_t v22 = *v21;
          if (!*v21)
          {
            __break(0x5518u);
            goto LABEL_35;
          }
          if ((v22 & 7) != 0) {
            goto LABEL_36;
          }
          int v23 = sub_1000ECA34(v22, a6, a5);
          if (v23) {
            sub_1000EE4F4(0, 4, "%s:%d WriteiPodFileData XmlSig.Update: status: 0x%08X, size: 0x%08X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 616, v23, a5);
          }
        }
        if ((v20 & 0x10) == 0) {
          return;
        }
        uint64_t v24 = a1 + 80 * v13 + 1232;
        if ((v24 & 7) == 0)
        {
          if ((UpdateSigningContext() & 1) == 0) {
            sub_1000EE4F4(0, 4, "%s:%d Update: %d %hhx %d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 626, 0, *(void *)v24, a5);
          }
          return;
        }
      }
      goto LABEL_36;
    }
  }
LABEL_37:
  __break(0x5515u);
LABEL_38:
  __break(0x550Au);
LABEL_39:
  __break(0x5507u);
}

uint64_t sub_1000BEB40(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (a3 > 0xF) {
    return 13;
  }
  if (__CFADD__(result + 1208, 80 * a3))
  {
LABEL_18:
    __break(0x5513u);
    goto LABEL_19;
  }
  uint64_t v3 = (FILE **)(result + 1208 + 80 * a3);
  if ((((_BYTE)result - 72 + 80 * (_BYTE)a3) & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }
  uint64_t v4 = *v3;
  if (!*v3) {
    return 13;
  }
  if ((((_BYTE)result + 80 * (_BYTE)a3 - 56) & 7) != 0) {
    goto LABEL_17;
  }
  unsigned int v5 = *(_DWORD *)(result + 80 * a3 + 1224);
  if (v5 >= 4)
  {
LABEL_19:
    __break(0x550Au);
    return result;
  }
  if (v5) {
    BOOL v6 = v5 == 3;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    sub_1000BF974(result, a2, a3);
    uint64_t v4 = *v3;
    if (!*v3) {
      return 0;
    }
  }
  fclose(v4);
  uint64_t result = 0;
  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_1000BEC00()
{
  memset(&v2, 170, sizeof(v2));
  if (byte_10013C60F >= 0) {
    uint64_t v0 = (const char *)&qword_10013C5F8;
  }
  else {
    uint64_t v0 = (const char *)qword_10013C5F8;
  }
  uint64_t result = statfs(v0, &v2);
  if (result) {
    return 0;
  }
  if (is_mul_ok(v2.f_bavail, v2.f_bsize)) {
    return v2.f_bavail * v2.f_bsize;
  }
  __break(0x550Cu);
  return result;
}

void sub_1000BECA8(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4, unsigned char *a5)
{
  if (!a1) {
    goto LABEL_121;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_121;
  }
  sub_1000BE810();
  uint64_t v10 = sub_1000BEC00();
  if (!a3) {
    goto LABEL_121;
  }
  unsigned int v11 = *a3;
  if (v11 >= 4) {
    goto LABEL_123;
  }
  if (__CFADD__(a1 + 2488, 152 * *a3)) {
    goto LABEL_122;
  }
  if (v10 < 0x258000)
  {
    int v43 = 0;
    int v12 = 3;
    int v13 = 3;
    goto LABEL_36;
  }
  if (a4 < 5)
  {
    int v43 = 0;
    int v13 = *a3;
  }
  else
  {
    if (a3 == (unsigned __int8 *)-1) {
      goto LABEL_124;
    }
    unsigned int v14 = bswap32(*(_DWORD *)(a3 + 1));
    int v43 = v14;
    int v13 = 3;
    int v12 = 4;
    if ((v14 & 0xFFFFFFE4) != 0 || (v14 & 0x18) == 0x18) {
      goto LABEL_36;
    }
    if (a4 > 0x85 || a4 == 5) {
      int v16 = 3;
    }
    else {
      int v16 = *a3;
    }
    if (a4 == 5) {
      int v17 = *a3;
    }
    else {
      int v17 = 3;
    }
    if (v14) {
      int v13 = v16;
    }
    else {
      int v13 = v17;
    }
    if ((v14 & 0xA) == 8)
    {
      int v12 = 4;
      int v13 = 3;
      goto LABEL_36;
    }
  }
  if (v13 == 2)
  {
    uint64_t v18 = sub_10006D8BC(v10);
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_121;
    }
    if ((sub_10009F368(v18, a2) & 0x200) != 0)
    {
      if ((~v43 & 0xB) != 0) {
        int v13 = 3;
      }
      else {
        int v13 = 2;
      }
    }
    else
    {
      int v13 = 3;
    }
  }
  int v12 = 4;
LABEL_36:
  unsigned int v19 = sub_1000C0388(a1);
  *a5 = v19;
  if (v19 == 16)
  {
LABEL_40:
    int v12 = 3;
    sub_1000EE4F4(0, 4, "%s:%d CIapLingoStorage::OpeniPodFeatureFile invalid feature type: %d !", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 936, 3);
    int v13 = 3;
LABEL_41:
    int v22 = 255;
    *a5 = -1;
LABEL_42:
    syslog(4, "OpeniPodFeatureFile(feature = %d, options = 0x%x, handle = %u) == %d\n", v13, v43, v22, v12);
    return;
  }
  int v20 = (int *)(a1 + 2488 + 152 * v11);
  if ((((_BYTE)a1 - 72 - 104 * (_BYTE)v11) & 7) != 0) {
    goto LABEL_121;
  }
  unsigned int v21 = (unsigned char *)(a1 + 152 * v11 + 2504);
  if ((((_BYTE)a1 - 104 * (_BYTE)v11 - 56) & 7) != 0) {
    goto LABEL_121;
  }
  if (*v21) {
    goto LABEL_40;
  }
  if (v19 >= 0x11) {
    goto LABEL_125;
  }
  if (__CFADD__(a1 + 1208, 80 * v19)) {
    goto LABEL_122;
  }
  char v23 = a1 + 80 * v19 - 72;
  size_t v41 = (FILE **)(a1 + 80 * v19 + 1208);
  unsigned int v42 = v19;
  if (v13 == 2)
  {
    v47.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
    *(void *)&long long v29 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v29 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)&v47.tm_mon = v29;
    *(_OWORD *)&v47.tm_isdst = v29;
    *(_OWORD *)&v47.char tm_sec = v29;
    time_t v46 = time(0);
    localtime_r(&v46, &v47);
    uint64_t v30 = sub_1000DE0E8();
    memset(&v49, 0, sizeof(v49));
    *(void *)&long long v31 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v31 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)std::string __str = v31;
    *(_OWORD *)&__str[16] = v31;
    if (!v30)
    {
      __break(0x5518u);
      goto LABEL_121;
    }
    if ((v30 & 7) != 0)
    {
LABEL_121:
      __break(0x5516u);
      goto LABEL_122;
    }
    (*(void (**)(uint64_t, std::string *))(*(void *)v30 + 72))(v30, &v49);
    sub_1000DA4C0((char *)&v49);
    if (v47.tm_year < 0xFFFFF894 && v47.tm_mon != -1)
    {
      snprintf(__str, 0x20uLL, "%04d-%02d-%02d %02d;%02d;%02d.xml",
        v47.tm_year + 1900,
        v47.tm_mon + 1,
        v47.tm_mday,
        v47.tm_hour,
        v47.tm_min,
        v47.tm_sec);
      sub_1000C03D0("/", &v49.__r_.__value_.__l.__data_, (char *)v44);
      sub_1000C03D0(__str, (char **)v44, (char *)&__p);
      if ((v41 & 7) != 0) {
        goto LABEL_121;
      }
      uint64_t v32 = a1 + 80 * v42;
      uint64_t v33 = v32 + 1240;
      if (((v32 + 1240) & 7) != 0) {
        goto LABEL_121;
      }
      std::string::operator=((std::string *)(v32 + 1240), &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v45 < 0) {
        operator delete(v44[0]);
      }
      if (*(char *)(v33 + 23) < 0) {
        uint64_t v33 = *(void *)v33;
      }
      char v34 = fopen((const char *)v33, "w+");
      *size_t v41 = v34;
      if (!v34)
      {
        int v12 = 3;
        if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v49.__r_.__value_.__l.__data_);
        }
        char v23 = (char)v41;
        goto LABEL_105;
      }
      if ((v43 & 2) != 0)
      {
        if ((((_BYTE)a1 - 104 * (_BYTE)v11 - 64) & 7) != 0) {
          goto LABEL_121;
        }
        *(void *)(a1 + 152 * v11 + 2496) = v46;
      }
      if (a4 < 6 || (v43 & 1) == 0)
      {
        *(unsigned char *)(a1 + 152 * v11 + 2505) = 0;
LABEL_85:
        operator new();
      }
      *(unsigned char *)(a1 + 152 * v11 + 2505) = a4 - 5;
      if ((unint64_t)a3 <= 0xFFFFFFFFFFFFFFFALL)
      {
        memcpy((void *)(a1 + 152 * v11 + 2506), a3 + 5, a4 - 5);
        goto LABEL_85;
      }
LABEL_122:
      __break(0x5513u);
LABEL_123:
      __break(0x550Au);
    }
LABEL_124:
    __break(0x5500u);
LABEL_125:
    __break(0x5512u);
    goto LABEL_126;
  }
  if (v13 != 1)
  {
    sub_1000EE4F4(0, 4, "%s:%d CIapLingoStorage::OpeniPodFeatureFile invalid feature type: %d !", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 936, v13);
    goto LABEL_106;
  }
  if (a4 != 1) {
    goto LABEL_106;
  }
  memset(&v47, 170, 24);
  sub_1000BE810();
  sub_1000C03D0("/Tags", (char **)&qword_10013C5F8, (char *)&v47);
  memset(__str, 170, 24);
  sub_1000DA4C0((char *)&v47);
  char v24 = v23;
  uint64_t v25 = sub_10006FADC();
  snprintf(__str, 0x18uLL, "%lu.plist", v25);
  sub_1000C03D0("/", (char **)&v47, (char *)&__p);
  sub_1000C03D0(__str, &__p.__r_.__value_.__l.__data_, (char *)&v49);
  if ((v24 & 7) != 0) {
    goto LABEL_121;
  }
  uint64_t v26 = a1 + 80 * v42;
  uint64_t v27 = v26 + 1240;
  if (((v26 + 1240) & 7) != 0) {
    goto LABEL_121;
  }
  std::string::operator=((std::string *)(v26 + 1240), &v49);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (sub_1000DA5A0((const char *)v27))
  {
    while (1)
    {
      uint64_t v28 = v25 + 1;
      if (v25 == -1) {
        goto LABEL_124;
      }
      snprintf(__str, 0x18uLL, "%lu.plist", v25 + 1);
      sub_1000C03D0("/", (char **)&v47, (char *)&__p);
      sub_1000C03D0(__str, &__p.__r_.__value_.__l.__data_, (char *)&v49);
      std::string::operator=((std::string *)v27, &v49);
      if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v49.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      ++v25;
      if (!sub_1000DA5A0((const char *)v27)) {
        goto LABEL_90;
      }
    }
  }
  uint64_t v28 = v25;
LABEL_90:
  if (*(char *)(v27 + 23) < 0) {
    uint64_t v27 = *(void *)v27;
  }
  char v23 = (char)v41;
  unsigned int v35 = fopen((const char *)v27, "w+");
  *size_t v41 = v35;
  if (v35)
  {
    uint64_t inited = InitSigningContext();
    if ((((_BYTE)a1 + 80 * (_BYTE)v42 - 48) & 7) != 0) {
      goto LABEL_121;
    }
    *(void *)(a1 + 80 * v42 + 1232) = inited;
    if (inited)
    {
      snprintf(__str, 0x18uLL, "%lu.p7", v28);
      sub_1000C03D0("/", (char **)&v47, (char *)&__p);
      sub_1000C03D0(__str, &__p.__r_.__value_.__l.__data_, (char *)&v49);
      if ((((_BYTE)a1 + 80 * (_BYTE)v42 - 16) & 7) != 0) {
        goto LABEL_121;
      }
      std::string::operator=((std::string *)(a1 + 80 * v42 + 1264), &v49);
      if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v49.__r_.__value_.__l.__data_);
      }
      char v23 = (char)v41;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      int v12 = 0;
      int v43 = 16;
    }
    else
    {
      int v12 = 3;
      char v23 = (char)v41;
    }
  }
  else
  {
    int v12 = 3;
  }
  if (SHIBYTE(v47.tm_year) < 0) {
    operator delete(*(void **)&v47.tm_sec);
  }
LABEL_105:
  if (v12)
  {
LABEL_106:
    if ((v23 & 7) == 0)
    {
      uint64_t v37 = (void *)(a1 + 80 * v42 + 1232);
      if ((((_BYTE)a1 + 80 * (_BYTE)v42 - 48) & 7) == 0)
      {
        if (*v37)
        {
          EraseSigningContext();
          *uint64_t v37 = 0;
        }
        if (*v41)
        {
          fclose(*v41);
          *size_t v41 = 0;
        }
        uint64_t v38 = a1 + 80 * v42 + 1216;
        if ((v38 & 7) == 0)
        {
          uint64_t v39 = *(void *)v38;
          if (!*(void *)v38) {
            goto LABEL_41;
          }
          if ((v39 & 7) == 0)
          {
            (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
            *(void *)uint64_t v38 = 0;
            goto LABEL_41;
          }
        }
      }
    }
    goto LABEL_121;
  }
  if ((v23 & 7) != 0 || (((_BYTE)a1 + 80 * (_BYTE)v42 - 56) & 7) != 0) {
    goto LABEL_121;
  }
  *(_DWORD *)(a1 + 80 * v42 + 1224) = v13;
  *int v20 = v43;
  int v40 = *v21;
  if (v40 != 255)
  {
    int v12 = 0;
    *unsigned int v21 = v40 + 1;
    int v22 = *a5;
    goto LABEL_42;
  }
LABEL_126:
  __break(0x5507u);
}

uint64_t sub_1000BF524(uint64_t result, uint64_t a2, int a3)
{
  if (!result)
  {
    uint64_t result = sub_10006D8BC(0);
    if (!result || (result & 7) != 0) {
      goto LABEL_15;
    }
    uint64_t result = sub_10009EF84(result, 12);
    if (!result) {
      return 2;
    }
  }
  if ((result & 7) == 0)
  {
    uint64_t result = sub_100063520(result);
    if (result)
    {
      uint64_t v5 = result;
      if ((result & 7) == 0)
      {
        sub_100063334(result, 0xCu);
        uint64_t result = sub_10006DB30(12, v5);
        if (!result)
        {
          sub_1000EE4F4(0, 4, "%s:%d StorageLingo object(%hhx) or handle(%hhx) is NULL! Cannot TransmitPacketDelaySleep\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1373, 0, v5);
          uint64_t v7 = 2;
          goto LABEL_12;
        }
        if ((result & 7) == 0)
        {
          sub_100062FD8(v5, 0xCu, 1);
          int v6 = sub_10006FADC();
          sub_100062F84(v5, 0xCu, v6);
          uint64_t v7 = sub_1000C4B20(v5, a2, a3, 1u);
LABEL_12:
          sub_100063380(v5, 0xCu);
          return v7;
        }
      }
    }
  }
LABEL_15:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BF64C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000BF660(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_51;
  }
  int v25 = 0;
  if (a2 > 7)
  {
    if (a2 != 8)
    {
      if (a2 != 32) {
        return;
      }
      v24[0] = 0;
      v24[1] = 0;
      v23[0] = 0xAAAAAAAAAAAAAAAALL;
      v23[1] = 0xAAAAAAAAAAAAAAAALL;
      sub_10002EDDC((uint64_t)v23);
      sub_1000EE3E8((uint64_t)v23, v24);
      if (*(_DWORD *)(a1 + 1176) == a3)
      {
        sub_10006FF9C(a1, (uint64_t)&v25);
        int v25 = 0;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9 || (v9 & 7) != 0) {
          goto LABEL_51;
        }
        if (sub_100063090(v9, 0xCu))
        {
          uint64_t v10 = sub_10002DC04(v24);
          uint64_t v11 = *(void *)(a1 + 8);
          if (!v11 || (v11 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v12 = sub_10006303C(v11, 0xCu);
          if (__OFSUB__(v10, v12))
          {
LABEL_52:
            __break(0x5515u);
            return;
          }
          if (v10 - v12 >= 0x1F4)
          {
            uint64_t v13 = *(void *)(a1 + 8);
            if (!v13) {
              goto LABEL_51;
            }
            if ((v13 & 7) != 0) {
              goto LABEL_51;
            }
            sub_100062FD8(v13, 0xCu, 0);
            uint64_t v14 = *(void *)(a1 + 8);
            if (!v14 || (v14 & 7) != 0) {
              goto LABEL_51;
            }
            sub_100062F84(v14, 0xCu, 0);
          }
        }
      }
      v23[0] = off_100123868;
      sub_1000EE300(v23);
      return;
    }
    uint64_t v17 = *(void *)(a1 + 8);
    if (!v17) {
      goto LABEL_51;
    }
    if ((v17 & 7) != 0) {
      goto LABEL_51;
    }
    sub_100062FD8(v17, 0xCu, 0);
    uint64_t v18 = *(void *)(a1 + 8);
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_51;
    }
    sub_100062F84(v18, 0xCu, 0);
    unsigned int v19 = 0;
    unint64_t v20 = a1 + 1128;
    while (1)
    {
      if (*(void *)(v20 + 80)) {
        sub_1000BEB40(a1, a4, v19);
      }
      v20 += 80;
      if (v20 >= 0xFFFFFFFFFFFFFFB0) {
        break;
      }
      if (v19++ >= 0xF)
      {
        uint64_t v22 = *(void *)(a1 + 1192);
        if (v22 == a4)
        {
          *(void *)(a1 + 1192) = 0;
          do
          {
            LOWORD(v23[0]) = -1;
            v24[0] = 0;
          }
          while (!sub_10006FB58(a1, -1, v23, v24, 0xFFFFu));
        }
        else
        {
          sub_1000EE4F4(0, 4, "%s:%d devPort(%hhx) != m_perPortInfo(%hhx)\n", "NotifyEvent", 474, a4, v22);
        }
        return;
      }
    }
LABEL_50:
    __break(0x5513u);
LABEL_51:
    __break(0x5516u);
    goto LABEL_52;
  }
  if (a2 == 1)
  {
    if (a3 > 8 || ((1 << a3) & 0x1A0) == 0) {
      return;
    }
    unsigned int v15 = 0;
    for (uint64_t i = (void *)(a1 + 1208); ; i += 10)
    {
      if (*i) {
        sub_1000EE4F4(0, 4, "%s:%d NotifyEvent: handle: %03d, pCurFile: %hhx\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 530, v15, i);
      }
      if ((unint64_t)i > 0xFFFFFFFFFFFFFFAFLL) {
        break;
      }
      unsigned int v15 = (v15 + 1);
      if (v15 >= 0x10) {
        return;
      }
    }
    goto LABEL_50;
  }
  if (a2 == 4)
  {
    *(void *)(a1 + 1192) = a4;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7)
    {
      if ((v7 & 7) == 0)
      {
        sub_100062FD8(v7, 0xCu, 0);
        uint64_t v8 = *(void *)(a1 + 8);
        if (v8)
        {
          if ((v8 & 7) == 0)
          {
            sub_100062F84(v8, 0xCu, 0);
            return;
          }
        }
      }
    }
    goto LABEL_51;
  }
}

uint64_t sub_1000BF974(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_127;
  }
  if (a3 >= 0x11) {
    goto LABEL_132;
  }
  if (__CFADD__(a1 + 1208, 80 * a3)) {
    goto LABEL_128;
  }
  uint64_t v4 = (FILE **)(a1 + 1208 + 80 * a3);
  if ((((_BYTE)a1 - 72 + 80 * (_BYTE)a3) & 7) != 0) {
    goto LABEL_127;
  }
  int v6 = (unsigned int *)(a1 + 80 * a3 + 1224);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 56) & 7) != 0) {
    goto LABEL_127;
  }
  unsigned int v7 = *v6;
  if (*v6 >= 4) {
    goto LABEL_129;
  }
  if (__CFADD__(a1 + 2488, 152 * v7))
  {
LABEL_128:
    __break(0x5513u);
    goto LABEL_129;
  }
  uint64_t v8 = (int *)(a1 + 2488 + 152 * v7);
  if ((((_BYTE)a1 - 72 - 104 * (_BYTE)v7) & 7) != 0) {
    goto LABEL_127;
  }
  int v9 = *v8;
  syslog(4, "CloseiPodFeatureFile(handle = %u)\n", a3);
  if (!*v4) {
    goto LABEL_126;
  }
  if (*v6 > 3)
  {
LABEL_129:
    __break(0x550Au);
LABEL_130:
    __break(0x5500u);
    goto LABEL_131;
  }
  if (*v6 == 3) {
    goto LABEL_126;
  }
  fseek(*v4, 0, 2);
  if ((v9 & 2) == 0) {
    goto LABEL_61;
  }
  memset(v56, 170, sizeof(v56));
  uint64_t v10 = sub_10005176C();
  if (!v10) {
    goto LABEL_127;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_127;
  }
  (*(void (**)(void **__return_ptr))(*(void *)v10 + 104))(v56);
  memset(__p, 170, sizeof(__p));
  uint64_t v11 = sub_10005176C();
  if (!v11) {
    goto LABEL_127;
  }
  if ((v11 & 7) != 0) {
    goto LABEL_127;
  }
  (*(void (**)(void **__return_ptr))(*(void *)v11 + 96))(__p);
  v54.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v12 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v54.tm_mon = v12;
  *(_OWORD *)&v54.tm_isdst = v12;
  *(_OWORD *)&v54.char tm_sec = v12;
  localtime_r((const time_t *)(a1 + 152 * v7 + 2496), &v54);
  v53.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v53.tm_mon = v13;
  *(_OWORD *)&v53.tm_isdst = v13;
  *(_OWORD *)&v53.char tm_sec = v13;
  time_t v52 = time(0);
  localtime_r(&v52, &v53);
  __int16 v51 = 0;
  __int16 v50 = 0;
  __int16 v49 = 0;
  memset(&v48, 0, sizeof(v48));
  v14.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v14.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)((char *)v63 + 15) = v14;
  timespec v62 = v14;
  v63[0] = v14;
  timespec v60 = v14;
  timespec v61 = v14;
  timespec v58 = v14;
  timespec v59 = v14;
  *(timespec *)&__str.st_blkstd::string::size_type size = v14;
  *(timespec *)__str.st_qspare = v14;
  __str.st_birthtimespec = v14;
  *(timespec *)&__str.st_std::string::size_type size = v14;
  __str.st_mtimespec = v14;
  __str.st_ctimespec = v14;
  *(timespec *)&__str.st_uid = v14;
  __str.st_atimespec = v14;
  *(timespec *)&__str.st_dev = v14;
  uint64_t v15 = sub_10005176C();
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_127;
  }
  (*(void (**)(uint64_t, __int16 *, char *))(*(void *)v15 + 608))(v15, &v51, (char *)&v50 + 1);
  int v16 = SHIBYTE(v50) + v51;
  if (v16 != (__int16)(SHIBYTE(v50) + v51)) {
    goto LABEL_131;
  }
  if ((v16 & 0x8000) != 0)
  {
    if (!((v16 + 0x7FFF) >> 16))
    {
      int v16 = -v16;
      uint64_t v17 = 45;
      goto LABEL_25;
    }
LABEL_131:
    __break(0x5507u);
LABEL_132:
    __break(0x5512u);
  }
  uint64_t v17 = 43;
LABEL_25:
  if (__OFADD__(v54.tm_year, 1900)
    || __OFADD__(v54.tm_mon, 1)
    || __OFADD__(v53.tm_year, 1900)
    || __OFADD__(v53.tm_mon, 1))
  {
    goto LABEL_130;
  }
  snprintf((char *)&__str, 0xFFuLL, "<ipodInfo><openTime>%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d</openTime><closeTime>%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d</closeTime>", v54.tm_year + 1900, v54.tm_mon + 1, v54.tm_mday, v54.tm_hour, v54.tm_min, v54.tm_sec, v17, (unsigned __int16)v16 / 0x3Cu, (unsigned __int16)v16 % 0x3Cu, v53.tm_year + 1900, v53.tm_mon + 1, v53.tm_mday, v53.tm_hour, v53.tm_min, v53.tm_sec,
    v17,
    (unsigned __int16)v16 / 0x3Cu,
    (unsigned __int16)v16 % 0x3Cu);
  std::string::assign(&v48, (const std::string::value_type *)&__str);
  uint64_t v18 = sub_10005176C();
  if (!v18 || (v18 & 7) != 0) {
    goto LABEL_127;
  }
  (*(void (**)(uint64_t, __int16 *, char *, __int16 *))(*(void *)v18 + 160))(v18, &v50, (char *)&v49 + 1, &v49);
  unsigned int v19 = v56;
  if (SHIBYTE(v56[2]) < 0) {
    unsigned int v19 = (void **)v56[0];
  }
  unint64_t v20 = __p;
  if (SHIBYTE(__p[2]) < 0) {
    unint64_t v20 = (void **)__p[0];
  }
  snprintf((char *)&__str, 0xFFuLL, "<model>%s</model><softwareVersion>%d.%d.%d</softwareVersion><serialNumber>%s</serialNumber></ipodInfo>", (const char *)v19, v50, HIBYTE(v49), v49, (const char *)v20);
  std::string::append(&v48, (const std::string::value_type *)&__str);
  if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v48.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v48.__r_.__value_.__l.__size_;
  }
  if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v22 = &v48;
  }
  else {
    uint64_t v22 = (std::string *)v48.__r_.__value_.__r.__words[0];
  }
  if (fwrite(v22, 1uLL, size, *v4) != size) {
    sub_1000EE4F4(0, 4, "%s:%d writeLen != xmlBuffLen\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1111);
  }
  if ((v9 & 8) != 0)
  {
    char v23 = (uint64_t *)(a1 + 80 * a3 + 1216);
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) != 0) {
      goto LABEL_127;
    }
    uint64_t v24 = *v23;
    if (!*v23) {
      goto LABEL_126;
    }
    if ((v24 & 7) != 0) {
      goto LABEL_127;
    }
    if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v25 = &v48;
    }
    else {
      int v25 = (std::string *)v48.__r_.__value_.__r.__words[0];
    }
    if (sub_1000ECA34(v24, v25, size)) {
      sub_1000EE4F4(0, 4, "%s:%d 0 != xmlStatus\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1123);
    }
  }
  if ((v9 & 0x10) != 0)
  {
    if (((a1 + 80 * a3 + 1232) & 7) != 0) {
      goto LABEL_127;
    }
    if ((UpdateSigningContext() & 1) == 0) {
      sub_1000EE4F4(0, 4, "%s:%d !secStatus\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1132);
    }
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  if ((SHIBYTE(v56[2]) & 0x80000000) == 0)
  {
LABEL_61:
    if ((v9 & 1) == 0) {
      goto LABEL_77;
    }
    goto LABEL_62;
  }
  operator delete(v56[0]);
  if ((v9 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_62:
  uint64_t v26 = a1 + 152 * v7;
  unint64_t v27 = *(unsigned __int8 *)(v26 + 2505);
  if (!*(unsigned char *)(v26 + 2505))
  {
    sub_1000EE4F4(0, 4, "%s:%d dataLen == 0\n");
    goto LABEL_77;
  }
  uint64_t v28 = (const void *)(v26 + 2506);
  if (fwrite((const void *)(v26 + 2506), 1uLL, *(unsigned __int8 *)(v26 + 2505), *v4) != v27) {
    sub_1000EE4F4(0, 4, "%s:%d dataLen != writeLen\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1147);
  }
  if ((v9 & 8) == 0) {
    goto LABEL_71;
  }
  long long v29 = (uint64_t *)(a1 + 80 * a3 + 1216);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) != 0) {
    goto LABEL_127;
  }
  uint64_t v30 = *v29;
  if (!*v29)
  {
LABEL_126:
    __break(0x5518u);
    goto LABEL_127;
  }
  if ((v30 & 7) != 0) {
    goto LABEL_127;
  }
  if (sub_1000ECA34(v30, v28, v27)) {
    sub_1000EE4F4(0, 4, "%s:%d 0 != xmlStatus\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1159);
  }
LABEL_71:
  if ((v9 & 0x10) != 0)
  {
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
      goto LABEL_127;
    }
    if ((UpdateSigningContext() & 1) == 0) {
      sub_1000EE4F4(0, 4, "%s:%d !secStatus\n");
    }
  }
LABEL_77:
  fclose(*v4);
  *uint64_t v4 = 0;
  v31.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v31.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)&__str.st_blkstd::string::size_type size = v31;
  *(timespec *)__str.st_qspare = v31;
  __str.st_birthtimespec = v31;
  *(timespec *)&__str.st_std::string::size_type size = v31;
  __str.st_mtimespec = v31;
  __str.st_ctimespec = v31;
  *(timespec *)&__str.st_uid = v31;
  __str.st_atimespec = v31;
  *(timespec *)&__str.st_dev = v31;
  uint64_t v32 = (const char *)(a1 + 80 * a3 + 1240);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 40) & 7) != 0) {
    goto LABEL_127;
  }
  uint64_t v33 = (const char *)(a1 + 80 * a3 + 1240);
  if (*(char *)(a1 + 80 * a3 + 1263) < 0) {
    uint64_t v33 = *(const char **)v32;
  }
  if (stat(v33, &__str))
  {
    sub_1000EE4F4(0, 4, "%s:%d IPodFileError_NoError != status\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1195);
    st_std::string::size_type size = 0;
  }
  else
  {
    st_std::string::size_type size = __str.st_size;
  }
  if ((v9 & 0x18) != 0)
  {
    if ((v9 & 8) == 0) {
      goto LABEL_96;
    }
    memset(&v54, 170, 24);
    std::string::basic_string((std::string *)&v54, (const std::string *)(a1 + 80 * a3 + 1240));
    if (st_size)
    {
      unsigned int v35 = (uint64_t *)(a1 + 80 * a3 + 1216);
      if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) == 0)
      {
        uint64_t v36 = *v35;
        if (*v35)
        {
          if ((v36 & 7) == 0) {
            sub_1000ECA70(v36);
          }
          goto LABEL_127;
        }
        goto LABEL_126;
      }
LABEL_127:
      __break(0x5516u);
      goto LABEL_128;
    }
    uint64_t v37 = (uint64_t *)(a1 + 80 * a3 + 1216);
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) != 0) {
      goto LABEL_127;
    }
    uint64_t v38 = *v37;
    if (*v37)
    {
      if ((v38 & 7) != 0) {
        goto LABEL_127;
      }
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
      *uint64_t v37 = 0;
    }
    else
    {
      sub_1000EE4F4(0, 4, "%s:%d NULL == pOpenFile->pXmlSig\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1226);
    }
    if (SHIBYTE(v54.tm_year) < 0)
    {
      operator delete(*(void **)&v54.tm_sec);
      if ((v9 & 0x10) == 0) {
        goto LABEL_110;
      }
    }
    else
    {
LABEL_96:
      if ((v9 & 0x10) == 0) {
        goto LABEL_110;
      }
    }
    if (st_size)
    {
      *(void *)&v54.char tm_sec = 0;
      *(void *)&v53.char tm_sec = 0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
        goto LABEL_127;
      }
      if (FinalizeSigningContext())
      {
        uint64_t v39 = (const char *)(a1 + 80 * a3 + 1264);
        if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 16) & 7) != 0) {
          goto LABEL_127;
        }
        if (*(char *)(a1 + 80 * a3 + 1287) < 0) {
          uint64_t v39 = *(const char **)v39;
        }
        int v40 = fopen(v39, "w+");
        fwrite(*(const void **)&v54.tm_sec, 1uLL, *(size_t *)&v53.tm_sec, v40);
        fclose(v40);
        free(*(void **)&v54.tm_sec);
      }
      else
      {
        sub_1000EE4F4(0, 4, "%s:%d !secStatus\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1247);
      }
    }
    size_t v41 = (void *)(a1 + 80 * a3 + 1232);
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
      goto LABEL_127;
    }
    if (!*v41)
    {
      sub_1000EE4F4(0, 4, "%s:%d NULL == pOpenFile->fData\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp", 1260);
      if (st_size) {
        goto LABEL_116;
      }
      goto LABEL_111;
    }
    EraseSigningContext();
    *size_t v41 = 0;
  }
LABEL_110:
  if (st_size) {
    goto LABEL_116;
  }
LABEL_111:
  unsigned int v42 = (const char *)(a1 + 80 * a3 + 1240);
  if (*(char *)(a1 + 80 * a3 + 1263) < 0) {
    unsigned int v42 = *(const char **)v32;
  }
  syslog(4, "Deleting zero-length feature file %s\n", v42);
  if (*(char *)(a1 + 80 * a3 + 1263) < 0) {
    uint64_t v32 = *(const char **)v32;
  }
  unlink(v32);
LABEL_116:
  *uint64_t v8 = 0;
  uint64_t v43 = a1 + 152 * v7;
  unsigned int v44 = *(unsigned __int8 *)(v43 + 2504) - 1;
  if (v44 > 0xFF) {
    goto LABEL_131;
  }
  *(unsigned char *)(v43 + 2504) = v44;
  *(unsigned char *)(a1 + 152 * v7 + 2505) = 0;
  if (v7 == 2)
  {
    uint64_t v45 = sub_1000DE0E8();
    if (!v45) {
      goto LABEL_127;
    }
    if ((v45 & 7) != 0) {
      goto LABEL_127;
    }
    (*(void (**)(uint64_t))(*(void *)v45 + 184))(v45);
    uint64_t v46 = sub_10005176C();
    if (!v46 || (v46 & 7) != 0) {
      goto LABEL_127;
    }
    (*(void (**)(uint64_t))(*(void *)v46 + 720))(v46);
  }
  return 0;
}

uint64_t sub_1000C0388(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result & 7;
    if ((result & 7) == 0)
    {
      unint64_t v2 = 0;
      while (v2 <= ~(result + 1208))
      {
        if (*(void *)(result + 1208 + v2))
        {
          ++v1;
          v2 += 80;
          if (v1 != 16) {
            continue;
          }
        }
        return v1;
      }
      __break(0x5513u);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C03D0@<X0>(char *__s@<X1>, char **a2@<X0>, char *a3@<X8>)
{
  if (*((char *)a2 + 23) >= 0) {
    int64_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    int64_t v6 = (int64_t)a2[1];
  }
  uint64_t result = strlen(__s);
  memset(a3, 170, 24);
  if (__CFADD__(v6, result)) {
    goto LABEL_31;
  }
  int64_t v8 = result;
  uint64_t result = (uint64_t)sub_1000C0650((uint64_t)a3, v6 + result);
  if (a3[23] < 0) {
    a3 = *(char **)a3;
  }
  if (*((char *)a2 + 23) >= 0) {
    int v9 = (char *)a2;
  }
  else {
    int v9 = *a2;
  }
  BOOL v10 = __CFADD__(v6, v9);
  BOOL v11 = &v9[v6] >= v9;
  if (v6 < 0) {
    BOOL v11 = v10;
  }
  if (!v11) {
    goto LABEL_30;
  }
  if (v6) {
    uint64_t result = (uint64_t)memmove(a3, v9, v6);
  }
  if (__CFADD__(a3, v6)) {
    goto LABEL_30;
  }
  BOOL v12 = __CFADD__(v8, __s);
  BOOL v13 = &__s[v8] >= __s;
  if (v8 < 0) {
    BOOL v13 = v12;
  }
  if (!v13) {
    goto LABEL_30;
  }
  timespec v14 = &a3[v6];
  if (v8) {
    uint64_t result = (uint64_t)memmove(v14, __s, v8);
  }
  if (__CFADD__(v14, v8))
  {
LABEL_30:
    __break(0x5513u);
LABEL_31:
    __break(0x5500u);
    goto LABEL_32;
  }
  if (a3)
  {
    v14[v8] = 0;
    if (&v14[v8] != (char *)-1) {
      return result;
    }
    goto LABEL_30;
  }
LABEL_32:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0500(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_100126940;
    sub_1000ECA04(result);
    return v1;
  }
  return result;
}

BOOL sub_1000C0558(BOOL result)
{
  if (result)
  {
    unint64_t v1 = result & 7;
    if ((result & 7) == 0)
    {
      unint64_t v2 = 0;
      BOOL v3 = 1;
      while (v1 <= ~(result + 2488))
      {
        if (!*(unsigned char *)(result + 2504 + v1))
        {
          BOOL v3 = v2 < 2;
          v1 += 152;
          if (++v2 != 3) {
            continue;
          }
        }
        return v3;
      }
      __break(0x5513u);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C05B4(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
    goto LABEL_8;
  }
  uint64_t v2 = result;
  uint64_t result = sub_1000714C4(9);
  *(unsigned char *)uint64_t v2 = 12;
  if (v2 == -1)
  {
LABEL_8:
    __break(0x5500u);
    return result;
  }
  uint64_t v3 = 0x100000000000000;
  if (result) {
    uint64_t v3 = 0x300000000000000;
  }
  *(void *)(v2 + 1) = v3;
  return 0;
}

uint64_t sub_1000C0618(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C062C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C0650(uint64_t a1, unint64_t a2)
{
  if (!a1 || (uint64_t v2 = (void *)a1, (a1 & 7) != 0))
  {
    __break(0x5516u);
LABEL_12:
    sub_100029ED4((uint64_t)v2);
  }
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    goto LABEL_12;
  }
  if (a2 > 0x16)
  {
    if ((a2 | 7) == 0x17) {
      size_t v4 = 25;
    }
    else {
      size_t v4 = (a2 | 7) + 1;
    }
    uint64_t v5 = operator new(v4);
    v2[1] = a2;
    v2[2] = v4 | 0x8000000000000000;
    *uint64_t v2 = v5;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return v2;
}

uint64_t sub_1000C06E4(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = (void *)result, (result & 7) != 0)
    || (sub_10006D698(result, a2, 11), *v2 = off_100126970, v2[149] = 0, (uint64_t result = sub_10006D8BC(v4)) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(result, 11, 8236, a2);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1000C0768(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000C06E4(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C077C(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100126970, *(void *)(a1 + 1192) = 0, (uint64_t v2 = sub_10006D8BC(a1)) == 0)
    || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10009F1D8(v2, 11, 0, *(void *)(a1 + 8));
    sub_10006D970(a1);
  }
}

void sub_1000C0800(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C077C(a1);
  }
}

uint64_t sub_1000C0814(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C077C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C085C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_309;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_309;
  }
  uint64_t v4 = sub_10005176C();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_309;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 760))(v4);
  if (!v5 || !*(void *)(a1 + 8)) {
    return 89;
  }
  uint64_t v6 = sub_10006D8BC(v5);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_309;
  }
  if (!sub_1000A1834(v6, *(void *)(a1 + 8))) {
    return 89;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_309;
  }
  uint64_t v8 = sub_1000622BC(v7);
  if (v8) {
    return 89;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_309;
  }
  unsigned int v11 = *(unsigned __int16 *)(a2 + 126);
  if (v11 > 0x3D) {
    goto LABEL_266;
  }
  BOOL v12 = *(unsigned __int8 **)(a2 + 24);
  int v13 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 8);
  uint64_t v15 = sub_10006D8BC(v8);
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_309;
  }
  int v16 = sub_1000601E8(v15, v14);
  switch(v11)
  {
    case 1u:
      if ((v16 + 8) >= 0x10) {
        goto LABEL_313;
      }
      if (v16 != 6) {
        goto LABEL_266;
      }
      if (!v14 || (v14 & 7) != 0) {
        goto LABEL_309;
      }
      int v39 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 216))(v14);
      if (v13 != 1 || v39 == 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12 == 1)
      {
        uint64_t v109 = sub_100031160();
        if (v109 && (v109 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v109 + 112);
          goto LABEL_200;
        }
        goto LABEL_309;
      }
      if (!*v12)
      {
        uint64_t v40 = sub_100031160();
        if (v40 && (v40 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v40 + 112);
LABEL_200:
          v27();
          goto LABEL_266;
        }
        goto LABEL_309;
      }
LABEL_266:
      if (*(unsigned __int16 *)(a2 + 126) == v11)
      {
        int v115 = 0;
        *(_WORD *)&v114[1] = 0;
        unsigned __int8 v113 = 0;
        sub_1000C55C4(a2);
      }
      return sub_1000C4B20(*(void *)(a1 + 8), a2, 0, 1u);
    case 2u:
      if ((v16 + 8) > 0xF) {
        goto LABEL_313;
      }
      if (v13 != 1 || v16 != 6) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12 != 1)
      {
        if (!*v12)
        {
          uint64_t v41 = sub_100031160();
          if (v41 && (v41 & 7) == 0)
          {
            unint64_t v27 = *(void (**)(void))(*(void *)v41 + 120);
            goto LABEL_200;
          }
          goto LABEL_309;
        }
        goto LABEL_266;
      }
      uint64_t v107 = sub_100031160();
      if (v107 && (v107 & 7) == 0)
      {
        unint64_t v27 = *(void (**)(void))(*(void *)v107 + 120);
        goto LABEL_200;
      }
      goto LABEL_309;
    case 5u:
      if ((v16 + 8) > 0xF) {
        goto LABEL_313;
      }
      if (v13 != 1 || v16 != 6) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12 == 1)
      {
        uint64_t v108 = sub_100031160();
        if (v108 && (v108 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v108 + 128);
          goto LABEL_200;
        }
      }
      else
      {
        if (*v12) {
          goto LABEL_266;
        }
        uint64_t v42 = sub_100031160();
        if (v42 && (v42 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v42 + 128);
          goto LABEL_200;
        }
      }
      goto LABEL_309;
    case 6u:
      if (v13 != 2) {
        goto LABEL_266;
      }
      if (v12 == (unsigned __int8 *)-1) {
        goto LABEL_311;
      }
      if (v12[1] == 1)
      {
        uint64_t v104 = sub_100031160();
        if (v104 && (v104 & 7) == 0 && v12)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v104 + 136);
          goto LABEL_200;
        }
      }
      else
      {
        if (v12[1]) {
          goto LABEL_266;
        }
        uint64_t v43 = sub_100031160();
        if (v43 && (v43 & 7) == 0 && v12)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v43 + 136);
          goto LABEL_200;
        }
      }
      goto LABEL_309;
    case 7u:
      if ((v16 + 8) > 0xF) {
        goto LABEL_313;
      }
      if (v13 || v16 != 6) {
        goto LABEL_266;
      }
      uint64_t v44 = sub_100031160();
      if (!v44 || (v44 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t))(*(void *)v44 + 144))(v44);
      goto LABEL_266;
    case 8u:
      if (v13) {
        goto LABEL_266;
      }
      memset(&v116, 170, sizeof(v116));
      uint64_t v45 = sub_10005176C();
      if (!v45 || (v45 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(std::string *__return_ptr))(*(void *)v45 + 128))(&v116);
      std::string::size_type size = HIBYTE(v116.__r_.__value_.__r.__words[2]);
      if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        tm v47 = &v116;
      }
      else {
        tm v47 = (std::string *)v116.__r_.__value_.__r.__words[0];
      }
      if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v116.__r_.__value_.__l.__size_;
      }
      BOOL v48 = __CFADD__(size, 1);
      std::string::size_type v49 = size + 1;
      if (v48) {
        goto LABEL_312;
      }
      if (v49 >> 16) {
        goto LABEL_310;
      }
      sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 11, 9, *(_DWORD *)(a2 + 68), v47, (unsigned __int16)v49);
      goto LABEL_280;
    case 0xAu:
      if (v13 != 8) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v50 = *(_DWORD *)v12;
      if ((unint64_t)v12 >= 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_312;
      }
      unsigned int v51 = *((_DWORD *)v12 + 1);
      uint64_t v52 = sub_100031160();
      if (!v52 || (v52 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void))(*(void *)v52 + 152))(v52, bswap32(v50), bswap32(v51));
      goto LABEL_266;
    case 0xBu:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v53 = sub_100031160();
      if (!v53 || (v53 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t))(*(void *)v53 + 160))(v53);
      goto LABEL_266;
    case 0xCu:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12 == 1)
      {
        uint64_t v105 = sub_100031160();
        if (v105 && (v105 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v105 + 168);
          goto LABEL_200;
        }
      }
      else
      {
        if (*v12) {
          goto LABEL_266;
        }
        uint64_t v54 = sub_100031160();
        if (v54 && (v54 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v54 + 168);
          goto LABEL_200;
        }
      }
      goto LABEL_309;
    case 0xDu:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v55 = sub_100031160();
      if (!v55 || (v55 & 7) != 0) {
        goto LABEL_309;
      }
      LODWORD(v116.__r_.__value_.__l.__data_) = bswap32((*(uint64_t (**)(uint64_t))(*(void *)v55 + 184))(v55));
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 14;
      goto LABEL_144;
    case 0xFu:
      if (v13 != 2) {
        goto LABEL_266;
      }
      if (v12 == (unsigned __int8 *)-1) {
        goto LABEL_312;
      }
      if (!*(_WORD *)(v12 + 1)) {
        goto LABEL_266;
      }
      __break(0x550Du);
LABEL_149:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12) {
        goto LABEL_266;
      }
      uint64_t v57 = sub_100031160();
      if (!v57 || (v57 & 7) != 0) {
        goto LABEL_309;
      }
      unsigned int v58 = (*(uint64_t (**)(uint64_t))(*(void *)v57 + 200))(v57);
      *(_DWORD *)((char *)&v116.__r_.__value_.__l.__data_ + 1) = -1431655766;
      v116.__r_.__value_.__s.__data_[0] = *v12;
      if (&vars0 == (uint64_t *)103) {
        goto LABEL_312;
      }
      *(_DWORD *)((char *)&v116.__r_.__value_.__l.__data_ + 1) = bswap32(v58);
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 21;
      unsigned int v56 = 5;
LABEL_178:
      sub_1000C5B58(v20, v18, 0, 11, v21, v19, &v116, v56);
      goto LABEL_266;
    case 0x12u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v17 = sub_100031160();
      if (!v17 || (v17 & 7) != 0) {
        goto LABEL_309;
      }
      LODWORD(v116.__r_.__value_.__l.__data_) = bswap32((*(uint64_t (**)(uint64_t))(*(void *)v17 + 192))(v17));
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 19;
      goto LABEL_144;
    case 0x14u:
      goto LABEL_149;
    case 0x17u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if (*v12 == 1)
      {
        uint64_t v106 = sub_100031160();
        if (v106 && (v106 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v106 + 232);
          goto LABEL_200;
        }
      }
      else
      {
        if (*v12) {
          goto LABEL_266;
        }
        uint64_t v59 = sub_100031160();
        if (v59 && (v59 & 7) == 0)
        {
          unint64_t v27 = *(void (**)(void))(*(void *)v59 + 232);
          goto LABEL_200;
        }
      }
      goto LABEL_309;
    case 0x18u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v60 = sub_100031160();
      if (!v60 || (v60 & 7) != 0) {
        goto LABEL_309;
      }
      v116.__r_.__value_.__s.__data_[0] = (*(uint64_t (**)(uint64_t))(*(void *)v60 + 248))(v60);
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 25;
      goto LABEL_177;
    case 0x1Au:
      if (v13 != 1) {
        goto LABEL_266;
      }
      uint64_t v61 = sub_100031160();
      if (!v61 || (v61 & 7) != 0 || !v12) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void))(*(void *)v61 + 240))(v61, *v12);
      goto LABEL_266;
    case 0x1Bu:
      if (v13 != 1) {
        goto LABEL_266;
      }
      uint64_t v22 = sub_100031160();
      if (!v22 || (v22 & 7) != 0 || !v12) {
        goto LABEL_309;
      }
      LODWORD(v116.__r_.__value_.__l.__data_) = bswap32((*(uint64_t (**)(uint64_t, void))(*(void *)v22 + 256))(v22, *v12));
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 28;
LABEL_144:
      unsigned int v56 = 4;
      goto LABEL_178;
    case 0x1Du:
      if (v13 != 1) {
        goto LABEL_266;
      }
      uint64_t v62 = sub_100031160();
      if (!v62 || (v62 & 7) != 0 || !v12) {
        goto LABEL_309;
      }
      v116.__r_.__value_.__s.__data_[0] = (*(uint64_t (**)(uint64_t, void))(*(void *)v62 + 264))(v62, *v12);
      uint64_t v18 = *(void *)(a2 + 8);
      int v19 = *(_DWORD *)(a2 + 68);
      uint64_t v20 = a2;
      __int16 v21 = 30;
LABEL_177:
      unsigned int v56 = 1;
      goto LABEL_178;
    case 0x1Fu:
      if (v13 != 5) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFFBLL) {
        operator new[]();
      }
      goto LABEL_311;
    case 0x21u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      uint64_t v23 = sub_100031160();
      if (!v23 || (v23 & 7) != 0 || !v12) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, BOOL))(*(void *)v23 + 208))(v23, *v12 != 0);
      goto LABEL_266;
    case 0x22u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      uint64_t v63 = sub_100031160();
      if (!v63 || (v63 & 7) != 0 || !v12) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, BOOL))(*(void *)v63 + 216))(v63, *v12 != 0);
      goto LABEL_266;
    case 0x23u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v24 = sub_100031160();
      if (!v24 || (v24 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t))(*(void *)v24 + 224))(v24);
      goto LABEL_266;
    case 0x24u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v64 = sub_100031160();
      if (!v64) {
        goto LABEL_309;
      }
      if ((v64 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v64 + 136))(v64, 89, 1);
      uint64_t v65 = sub_100031160();
      if (!v65 || (v65 & 7) != 0) {
        goto LABEL_309;
      }
      unint64_t v27 = *(void (**)(void))(*(void *)v65 + 136);
      goto LABEL_200;
    case 0x25u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v25 = sub_100031160();
      if (!v25) {
        goto LABEL_309;
      }
      if ((v25 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v25 + 136))(v25, 90, 1);
      uint64_t v26 = sub_100031160();
      if (!v26 || (v26 & 7) != 0) {
        goto LABEL_309;
      }
      unint64_t v27 = *(void (**)(void))(*(void *)v26 + 136);
      goto LABEL_200;
    case 0x26u:
      if (v13) {
        goto LABEL_266;
      }
      uint64_t v66 = sub_100031160();
      if (!v66) {
        goto LABEL_309;
      }
      if ((v66 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v66 + 136))(v66, 110, 1);
      uint64_t v67 = sub_100031160();
      if (!v67 || (v67 & 7) != 0) {
        goto LABEL_309;
      }
      unint64_t v27 = *(void (**)(void))(*(void *)v67 + 136);
      goto LABEL_200;
    case 0x27u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v68 = *v12;
      if (!*v12) {
        goto LABEL_266;
      }
      unsigned int v69 = 0;
      while (1)
      {
        uint64_t v70 = sub_100031160();
        if (!v70) {
          goto LABEL_309;
        }
        if ((v70 & 7) != 0) {
          goto LABEL_309;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v70 + 136))(v70, 75, 1);
        uint64_t v71 = sub_100031160();
        if (!v71 || (v71 & 7) != 0) {
          goto LABEL_309;
        }
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)v71 + 136))(v71, 75, 0);
        if (v69 == 255) {
          goto LABEL_310;
        }
        unsigned int v69 = (v69 + 1);
        if (v69 >= v68) {
          goto LABEL_266;
        }
      }
    case 0x28u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v72 = *v12;
      if (!*v12) {
        goto LABEL_266;
      }
      unsigned int v73 = 0;
      while (1)
      {
        uint64_t v74 = sub_100031160();
        if (!v74) {
          goto LABEL_309;
        }
        if ((v74 & 7) != 0) {
          goto LABEL_309;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v74 + 136))(v74, 76, 1);
        uint64_t v75 = sub_100031160();
        if (!v75 || (v75 & 7) != 0) {
          goto LABEL_309;
        }
        (*(void (**)(uint64_t, uint64_t, void))(*(void *)v75 + 136))(v75, 76, 0);
        if (v73 == 255) {
          goto LABEL_310;
        }
        unsigned int v73 = (v73 + 1);
        if (v73 >= v72) {
          goto LABEL_266;
        }
      }
    case 0x29u:
      if (v13 != 4) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v76 = *(unsigned __int16 *)v12;
      if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v77 = *((unsigned __int16 *)v12 + 1);
      uint64_t v78 = sub_100031160();
      if (!v78 || (v78 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void))(*(void *)v78 + 368))(v78, bswap32(v76) >> 16, __rev16(v77));
      goto LABEL_266;
    case 0x2Au:
      if (v13 != 4) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v79 = *(unsigned __int16 *)v12;
      if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v80 = *((unsigned __int16 *)v12 + 1);
      uint64_t v81 = sub_100031160();
      if (!v81 || (v81 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void))(*(void *)v81 + 376))(v81, bswap32(v79) >> 16, __rev16(v80));
      goto LABEL_266;
    case 0x2Bu:
      if (v13 != 4) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v82 = *(unsigned __int16 *)v12;
      if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v83 = *((unsigned __int16 *)v12 + 1);
      uint64_t v84 = sub_100031160();
      if (!v84 || (v84 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void))(*(void *)v84 + 384))(v84, bswap32(v82) >> 16, __rev16(v83));
      goto LABEL_266;
    case 0x2Cu:
      if (v13 != 6) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v85 = *(unsigned __int16 *)v12;
      if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v86 = *((unsigned __int16 *)v12 + 1);
      if ((unint64_t)(v12 + 2) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v87 = *((unsigned __int16 *)v12 + 2);
      uint64_t v88 = sub_100031160();
      if (!v88 || (v88 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void, void))(*(void *)v88 + 392))(v88, bswap32(v85) >> 16, bswap32(v86) >> 16, __rev16(v87));
      goto LABEL_266;
    case 0x2Du:
      if (v13 != 14) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v28 = *(unsigned __int16 *)v12;
      if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v29 = *((unsigned __int16 *)v12 + 1);
      if ((unint64_t)(v12 + 2) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v30 = *((unsigned __int16 *)v12 + 2);
      if ((unint64_t)(v12 + 4) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v31 = *((unsigned __int16 *)v12 + 3);
      if ((unint64_t)(v12 + 6) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v32 = bswap32(*((unsigned __int16 *)v12 + 4));
      if (HIWORD(v32) > 0xFFu) {
        goto LABEL_310;
      }
      if ((unint64_t)(v12 + 8) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v33 = bswap32(*((unsigned __int16 *)v12 + 5));
      if (HIWORD(v33) > 0xFFu) {
        goto LABEL_310;
      }
      if ((unint64_t)(v12 + 10) > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_311;
      }
      unsigned int v34 = bswap32(*((unsigned __int16 *)v12 + 6));
      if (HIWORD(v34) > 0xFFu) {
        goto LABEL_310;
      }
      uint64_t v35 = sub_100031160();
      if (!v35 || (v35 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(uint64_t, void, void, void, void, void, void, void))(*(void *)v35 + 400))(v35, bswap32(v28) >> 16, bswap32(v29) >> 16, bswap32(v30) >> 16, bswap32(v31) >> 16, BYTE2(v32), BYTE2(v33), BYTE2(v34));
      goto LABEL_266;
    case 0x2Eu:
      uint64_t v89 = sub_100031160();
      if (!v89 || (v89 & 7) != 0) {
        goto LABEL_309;
      }
      uint64_t v90 = (*(uint64_t (**)(uint64_t))(*(void *)v89 + 408))(v89);
      if (v90) {
        uint64_t v91 = (const char *)v90;
      }
      else {
        uint64_t v91 = "";
      }
      int v92 = *(_DWORD *)(a2 + 68);
      size_t v93 = strlen(v91);
      if (v93 == -1) {
        goto LABEL_312;
      }
      if ((v93 + 1) >> 16) {
        goto LABEL_310;
      }
      unsigned int v94 = (unsigned __int16)(v93 + 1);
      uint64_t v95 = a2;
      uint64_t v96 = *(void *)(a2 + 8);
      __int16 v97 = 47;
      goto LABEL_265;
    case 0x30u:
      uint64_t v98 = sub_100031160();
      if (!v98 || (v98 & 7) != 0) {
        goto LABEL_309;
      }
      uint64_t v99 = (*(uint64_t (**)(uint64_t))(*(void *)v98 + 416))(v98);
      if (v99) {
        uint64_t v91 = (const char *)v99;
      }
      else {
        uint64_t v91 = "";
      }
      int v92 = *(_DWORD *)(a2 + 68);
      size_t v100 = strlen(v91);
      if (v100 == -1) {
        goto LABEL_312;
      }
      if ((v100 + 1) >> 16) {
        goto LABEL_310;
      }
      unsigned int v94 = (unsigned __int16)(v100 + 1);
      uint64_t v95 = a2;
      uint64_t v96 = *(void *)(a2 + 8);
      __int16 v97 = 49;
LABEL_265:
      sub_1000C5B58(v95, v96, 0, 11, v97, v92, v91, v94);
      goto LABEL_266;
    case 0x38u:
      if (v13 != 1) {
        goto LABEL_266;
      }
      if (!v12) {
        goto LABEL_309;
      }
      unsigned int v36 = *v12;
      if (v36 > 2) {
        goto LABEL_266;
      }
      LOWORD(v116.__r_.__value_.__l.__data_) = -21846;
      if (v36 == 2)
      {
        uint64_t v110 = sub_100031160();
        if (!v110 || (v110 & 7) != 0) {
          goto LABEL_309;
        }
        uint64_t v38 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)v110 + 488))(v110, &v116);
        if (!v38) {
          goto LABEL_266;
        }
      }
      else
      {
        if (v36 != 1)
        {
          uint64_t v37 = sub_100031160();
          if (v37 && (v37 & 7) == 0)
          {
            uint64_t v38 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)v37 + 472))(v37, &v116);
            if ((v38 & 1) == 0) {
              goto LABEL_266;
            }
            goto LABEL_303;
          }
LABEL_309:
          __break(0x5516u);
LABEL_310:
          __break(0x5507u);
LABEL_311:
          __break(0x5513u);
LABEL_312:
          __break(0x5500u);
LABEL_313:
          __break(0x550Au);
          JUMPOUT(0x1000C1D38);
        }
        uint64_t v112 = sub_100031160();
        if (!v112 || (v112 & 7) != 0) {
          goto LABEL_309;
        }
        uint64_t v38 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)v112 + 480))(v112, &v116);
        if ((v38 & 1) == 0) {
          goto LABEL_266;
        }
      }
LABEL_303:
      __chkstk_darwin(v38);
      *(_WORD *)v114 = -21846;
      unsigned __int8 v113 = *v12;
      if (&v113 == (unsigned __int8 *)-1) {
        goto LABEL_312;
      }
      *(_WORD *)v114 = bswap32(LOWORD(v116.__r_.__value_.__l.__data_)) >> 16;
      sub_1000C5B58(a2, v111, 0, 11, 57, *(_DWORD *)(a2 + 68), &v113, 3u);
      goto LABEL_266;
    case 0x3Cu:
      memset(&v116, 170, sizeof(v116));
      uint64_t v101 = sub_10005176C();
      if (!v101 || (v101 & 7) != 0) {
        goto LABEL_309;
      }
      (*(void (**)(std::string *__return_ptr))(*(void *)v101 + 120))(&v116);
      std::string::size_type v102 = HIBYTE(v116.__r_.__value_.__r.__words[2]);
      if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v102 = v116.__r_.__value_.__l.__size_;
      }
      if (!v102) {
        goto LABEL_280;
      }
      if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v103 = &v116;
      }
      else {
        unsigned int v103 = (std::string *)v116.__r_.__value_.__r.__words[0];
      }
      if (v102 == -1) {
        goto LABEL_312;
      }
      if ((v102 + 1) >> 16) {
        goto LABEL_310;
      }
      sub_1000C5B58(a2, *(void *)(a2 + 8), 0, 11, 61, *(_DWORD *)(a2 + 68), v103, (unsigned __int16)(v102 + 1));
LABEL_280:
      std::string::~string(&v116);
      goto LABEL_266;
    default:
      goto LABEL_266;
  }
}

uint64_t sub_1000C1E28(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_10006D8BC(result);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_1000A1140(result, *(void *)(v1 + 8));
          sub_1000C54CC();
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C1EE8(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t v3 = *(void *)(result + 1192);
  if (!v3) {
    return 37;
  }
  if ((v3 & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void, void))(*(void *)v3 + 16))(*(void *)(result + 1192), 0);
    if (!HIWORD(a3)) {
      sub_1000C51E0();
    }
  }
  __break(0x5507u);
  return result;
}

uint64_t sub_1000C1FB4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if (a2 <= 31)
  {
    if (a2 == 4)
    {
      *(void *)(result + 1192) = a4;
      if (!a4) {
        sub_1000F2364();
      }
    }
    else if (a2 == 8)
    {
      *(void *)(result + 1192) = 0;
    }
    return 0;
  }
  if (a2 == 32)
  {
    int v4 = -1431655766;
    sub_10006FF9C(result, (uint64_t)&v4);
    return 0;
  }
  if (a2 != 0x2000) {
    return 0;
  }
  if ((a3 & 7) != 0 || !a3 || ((a3 + 4) & 3) != 0) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(a3 + 4)) {
    return 0;
  }
  if (((a3 + 8) & 7) == 0 && ((a3 + 16) & 7) == 0)
  {
    sub_1000C1EE8(result, *(void *)(a3 + 8), *(_DWORD *)(a3 + 16));
    return 0;
  }
LABEL_20:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2078()
{
  return 0;
}

uint64_t sub_1000C2080(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  sub_10006D698(result, a2, 6);
  *(void *)uint64_t v2 = off_100126A20;
  *(_DWORD *)(v2 + 1264) = 0;
  *(unsigned char *)(v2 + 1268) = 0;
  pthread_mutex_init((pthread_mutex_t *)(v2 + 1192), 0);
  uint64_t v4 = sub_1000D289C();
  uint64_t result = sub_10005176C();
  *(void *)(v2 + 1256) = result;
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, v2);
  uint64_t result = sub_100031160();
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_23;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 344))(result);
    *(unsigned char *)(v2 + 1265) = result;
  }
  if (v4 && (v4 & 7) == 0)
  {
    uint64_t v5 = sub_1000A1140(v4, a2);
    if (v5)
    {
      uint64_t v5 = sub_10009FDA4(v4, v5);
      if ((v5 - 1) < 0x1FF || (v5 & 0xF000) == 0xD000)
      {
        *(unsigned char *)(v2 + 1266) = 1;
      }
      else if ((v5 & 0xFFFFFF00) == 0x200)
      {
        *(unsigned char *)(v2 + 1267) = 1;
      }
    }
    uint64_t result = sub_10006D8BC(v5);
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_10009F1D8(result, 6, 109, a2);
        uint64_t result = *(void *)(v2 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_100062FD8(result, 6u, 0);
            uint64_t result = *(void *)(v2 + 8);
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_100062F84(result, 6u, 0);
                return v2;
              }
            }
          }
        }
      }
    }
  }
LABEL_23:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2238(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000C2080(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C224C(uint64_t a1)
{
  if (!a1) {
    goto LABEL_15;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_15;
  }
  *(void *)a1 = off_100126A20;
  uint64_t v2 = sub_1000D289C();
  if (!v2) {
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  if ((v2 & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v4 = sub_1000A1140(v2, *(void *)(a1 + 8));
  sub_10009F1D8(v3, 6, 0, *(void *)(a1 + 8));
  do
    __int16 v7 = -1;
  while (!sub_10006FB58(a1, -1, &v7, 0, 0xFFFFu));
  uint64_t v5 = sub_10005176C();
  if (!v5) {
    goto LABEL_14;
  }
  uint64_t v6 = v5;
  if ((v5 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 24))(v5, a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v6 + 280))(v6, v4, 1, 0);
    *(unsigned char *)(a1 + 1268) = 0;
    if (*(unsigned __int8 *)(a1 + 1265) < 2u)
    {
      if (!*(unsigned char *)(a1 + 1265))
      {
LABEL_14:
        sub_10009F924(v3, v4, 6, 0);
        pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1192));
        sub_10006D970(a1);
        return;
      }
      if (*(unsigned __int8 *)(a1 + 1266) <= 1u)
      {
        if (*(unsigned char *)(a1 + 1266)) {
          sub_1000C23D8(*(void *)(a1 + 8));
        }
        goto LABEL_14;
      }
    }
  }
  __break(0x550Au);
}

uint64_t sub_1000C23D8(uint64_t result)
{
  if (!result) {
    return 2;
  }
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_100063520(result);
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  sub_100063334(result, 6u);
  uint64_t result = sub_1000C2660(v1);
  if (!result) {
    goto LABEL_17;
  }
  if ((result & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(result + 1265) >= 2u) {
    goto LABEL_20;
  }
  if (!*(unsigned char *)(result + 1265))
  {
LABEL_17:
    sub_100063380(v1, 6u);
    return 2;
  }
  if ((result + 1266)) {
    goto LABEL_19;
  }
  if (*(unsigned __int8 *)(result + 1266) <= 1u)
  {
    if (*(unsigned char *)(result + 1266))
    {
      uint64_t result = sub_10006D8BC(result);
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_1000A1140(result, v1);
          if (result)
          {
            if ((result & 7) == 0)
            {
              (*(void (**)(uint64_t, void))(*(void *)result + 16))(result, 0);
              sub_1000C51E0();
            }
          }
        }
      }
      goto LABEL_19;
    }
    goto LABEL_17;
  }
LABEL_20:
  __break(0x550Au);
  return result;
}

void sub_1000C2604(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C224C(a1);
  }
}

uint64_t sub_1000C2618(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C224C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2660(uint64_t a1)
{
  uint64_t result = sub_1000D289C();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  if (!sub_1000A216C(result, a1)) {
    return 0;
  }
  uint64_t result = sub_10009EF00(v3, a1, 6u);
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  uint64_t result = sub_1000A1140(v3, a1);
  if (result)
  {
    if (sub_1000602FC(v3, result)) {
      return v4;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000C26FC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_64;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_64;
  }
  if (!*(void *)(result + 8)) {
    goto LABEL_21;
  }
  uint64_t result = sub_10006D8BC(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_64;
  }
  if (!sub_1000A1834(result, *(void *)(v2 + 8))) {
    goto LABEL_21;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_64;
  }
  uint64_t result = sub_1000622BC(result);
  if (result) {
    goto LABEL_21;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_64;
  }
  uint64_t v4 = *(unsigned __int8 **)(a2 + 24);
  if (!sub_1000C2660(*(void *)(v2 + 8)))
  {
LABEL_21:
    uint64_t v8 = 89;
    goto LABEL_22;
  }
  int v5 = *(unsigned __int16 *)(a2 + 126);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  __int16 v13 = 5;
  uint64_t result = sub_1000D289C();
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v12 = v5;
  if (v5 > 128)
  {
    if (v5 == 129)
    {
      if (!v6)
      {
        char v11 = sub_1000C2ABC(v2);
        sub_1000C5B58(a2, v7, 0, 6, 130, *(_DWORD *)(a2 + 68), &v11, 1u);
        uint64_t v8 = 0;
        goto LABEL_49;
      }
    }
    else
    {
      if (v5 != 131) {
        goto LABEL_32;
      }
      if (v6 == 1)
      {
        if (!v4) {
          goto LABEL_64;
        }
        uint64_t v9 = *v4;
        if ((v9 - 1) <= 2)
        {
          uint64_t result = *(void *)(v2 + 1256);
          if (!result || (result & 7) != 0) {
            goto LABEL_64;
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, BOOL))(*(void *)result + 280))(result, v7, v9, v9 == 2))
          {
            uint64_t v8 = 0;
            *(unsigned char *)(v2 + 1268) = *v4 == 2;
          }
          else
          {
            uint64_t v8 = 14;
          }
LABEL_49:
          if (v5 == *(unsigned __int16 *)(a2 + 126)) {
            sub_1000C55C4(a2);
          }
          sub_1000C4B20(*(void *)(v2 + 8), a2, 0, 1u);
          a2 = 0;
          goto LABEL_22;
        }
      }
    }
    uint64_t v8 = 2;
    goto LABEL_49;
  }
  if (v5)
  {
    if (v5 == 2)
    {
      if (*(unsigned __int8 *)(v2 + 1265) > 1u) {
        goto LABEL_65;
      }
      uint64_t v8 = 2;
      if (v6 != 1 || !*(unsigned char *)(v2 + 1265)) {
        goto LABEL_22;
      }
      __int16 v13 = 1;
      if (v4)
      {
        BYTE4(v12) = *v4;
LABEL_53:
        uint64_t result = sub_10006FB58(v2, *(_DWORD *)(a2 + 68), &v13, 0, 0xFFFFu);
        if (result)
        {
          uint64_t v8 = result;
          goto LABEL_22;
        }
        if (*(unsigned __int8 *)(v2 + 1265) > 1u) {
          goto LABEL_65;
        }
        if (!*(unsigned char *)(v2 + 1265)) {
          goto LABEL_62;
        }
        if (*(unsigned __int8 *)(v2 + 1266) <= 1u)
        {
          if (*(unsigned char *)(v2 + 1266))
          {
            pthread_mutex_lock((pthread_mutex_t *)(v2 + 1192));
            uint64_t result = *(void *)(v2 + 8);
            if (result && (result & 7) == 0)
            {
              sub_1000634E4(result, 6u, 0, (uint64_t)&v12, 8);
              pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1192));
              goto LABEL_62;
            }
            goto LABEL_64;
          }
LABEL_62:
          uint64_t v8 = 0;
          goto LABEL_22;
        }
LABEL_65:
        __break(0x550Au);
        goto LABEL_66;
      }
      goto LABEL_64;
    }
LABEL_32:
    sub_1000EE4F4(0, 4, "%s:%d CIapLingoUsbHostControl::ProcessCmd bad cmd: 0x%02X\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoUsbHostControl.cpp", 450, v5);
    uint64_t v8 = 2;
    if ((v5 & 0x80) != 0) {
      goto LABEL_49;
    }
LABEL_22:
    sub_1000C6E1C(a2);
    return v8;
  }
  if (v6 != 2)
  {
    uint64_t v8 = 2;
    goto LABEL_22;
  }
  if (v4 != (unsigned __int8 *)-1)
  {
    unsigned int v10 = v4[1];
    __int16 v13 = v4[1];
    if (v4)
    {
      BYTE5(v12) = *v4;
      BYTE4(v12) = v10;
      if (*(unsigned __int8 *)(v2 + 1265) >= 2u) {
        goto LABEL_65;
      }
      if (!*(unsigned char *)(v2 + 1265) || v10 != 3)
      {
        if (v10 > 4) {
          goto LABEL_62;
        }
        goto LABEL_53;
      }
      if (*(unsigned __int8 *)(v2 + 1264) > 1u) {
        goto LABEL_65;
      }
      if (!*(unsigned char *)(v2 + 1264)) {
        goto LABEL_53;
      }
      if (result && (result & 7) == 0)
      {
        sub_10009F924(result, v7, 6, 0);
        *(unsigned char *)(v2 + 1264) = 0;
        goto LABEL_53;
      }
    }
LABEL_64:
    __break(0x5516u);
    goto LABEL_65;
  }
LABEL_66:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000C2ABC(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((uint64_t result = *(void *)(result + 1256)) != 0 ? (v1 = (result & 7) == 0) : (v1 = 0), !v1))
  {
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 272))(result);
  if (result >= 8)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (result == 2) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_1000C2B38(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, _DWORD *a5)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(result + 1265) >= 2u) {
    goto LABEL_19;
  }
  if (!*(unsigned char *)(result + 1265)) {
    goto LABEL_18;
  }
  if (*(unsigned __int8 *)(result + 1266) > 1u) {
    goto LABEL_19;
  }
  if (!*(unsigned char *)(result + 1266))
  {
LABEL_18:
    *a5 = 0;
    return result;
  }
  if (a3 == 3)
  {
    if (*(unsigned __int8 *)(result + 1264) <= 1u)
    {
      if (!*(unsigned char *)(result + 1264))
      {
LABEL_13:
        uint64_t v9 = 0;
        LOBYTE(a3) = 3;
LABEL_15:
        BYTE4(v9) = a3;
        BYTE5(v9) = 15;
        pthread_mutex_lock((pthread_mutex_t *)(v5 + 1192));
        uint64_t result = *(void *)(v5 + 8);
        if (result && (result & 7) == 0)
        {
          sub_1000634E4(result, 6u, 0, (uint64_t)&v9, 8);
          uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v5 + 1192));
          goto LABEL_18;
        }
        goto LABEL_20;
      }
      uint64_t result = sub_1000D289C();
      if (result)
      {
        uint64_t v7 = result;
        if ((result & 7) == 0)
        {
          uint64_t v8 = sub_1000A1140(result, *(void *)(v5 + 8));
          sub_10009F924(v7, v8, 6, 0);
          *(unsigned char *)(v5 + 1264) = 0;
          goto LABEL_13;
        }
      }
LABEL_20:
      __break(0x5516u);
      goto LABEL_21;
    }
LABEL_19:
    __break(0x550Au);
    goto LABEL_20;
  }
  uint64_t v9 = 0;
  if (a3 < 0x100) {
    goto LABEL_15;
  }
LABEL_21:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000C2C58(uint64_t result, int a2, uint64_t a3, uint64_t *a4, unsigned int a5)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  if (*(unsigned __int8 *)(result + 1267) >= 2u)
  {
LABEL_23:
    __break(0x550Au);
    return result;
  }
  uint64_t v7 = 0;
  if (a5 >= 8 && a4 && *(unsigned char *)(result + 1267))
  {
    if ((a4 & 7) == 0)
    {
      uint64_t v7 = *a4;
      goto LABEL_9;
    }
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
LABEL_9:
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = sub_10001CE30(result);
  if (!result) {
    sub_1000F2364();
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  if (!v7) {
    return result;
  }
  if (v7 == *(void *)(result + 40))
  {
    if (a2 != 327705) {
      return result;
    }
LABEL_19:
    sub_1000C2ABC(v5);
    (*(void (**)(uint64_t, void))(*(void *)v8 + 16))(v8, 0);
    sub_1000C51E0();
  }
  if (a2 == 327705 && v7 == result) {
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1000C2DEC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_62;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_62;
  }
  unsigned int v9 = 0;
  uint64_t result = sub_1000D289C();
  if (a2 <= 7)
  {
    if (a2 == 1)
    {
      if (*(unsigned __int8 *)(v4 + 1265) < 2u)
      {
        if (a3 != 5 || !*(unsigned char *)(v4 + 1265)) {
          return v9;
        }
        if (result && (result & 7) == 0)
        {
          if (sub_10009FA3C(result, a4)) {
            sub_1000C23D8(*(void *)(v4 + 8));
          }
          return v9;
        }
        goto LABEL_62;
      }
      goto LABEL_63;
    }
    if (a2 == 4)
    {
      uint64_t result = *(void *)(v4 + 1256);
      if (!result || (result & 7) != 0) {
        goto LABEL_62;
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)result + 272))(result, a4) != 2) {
        return v9;
      }
      goto LABEL_26;
    }
LABEL_48:
    sub_1000EE4F4(0, 4, "%s:%d CIapLingoUsbHostControl::NotifyEvent bad event: 0x%02X\n");
    return v9;
  }
  if (a2 == 8) {
    return v9;
  }
  if (a2 != 32)
  {
    if (a2 == 64)
    {
      if (!result || (result & 7) != 0) {
        goto LABEL_62;
      }
      uint64_t result = sub_1000602FC(result, a4);
      if (result)
      {
        if (a3 != 4) {
          return v9;
        }
        if (*(unsigned __int8 *)(v4 + 1266) <= 1u)
        {
          if (*(unsigned char *)(v4 + 1266))
          {
            if (*(unsigned __int8 *)(v4 + 1265) > 1u) {
              goto LABEL_63;
            }
            if (*(unsigned char *)(v4 + 1265))
            {
              uint64_t result = sub_10005176C();
              if (result)
              {
                if ((result & 7) == 0)
                {
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 280))(result, a4, 2, 1))
                  {
                    *(unsigned char *)(v4 + 1268) = 1;
                  }
                  unsigned int v9 = sub_1000C23D8(*(void *)(v4 + 8));
                  if (v9) {
                    sub_1000EE4F4(0, 4, "%s:%d 0 != status\n");
                  }
                  return v9;
                }
                goto LABEL_62;
              }
              return v9;
            }
          }
          if (*(unsigned __int8 *)(v4 + 1267) <= 1u)
          {
            if (!*(unsigned char *)(v4 + 1267)) {
              return v9;
            }
            uint64_t result = sub_1000C2ABC(v4);
            if (a4 && (a4 & 7) == 0)
            {
              (*(void (**)(uint64_t, void))(*(void *)a4 + 16))(a4, 0);
              sub_1000C51E0();
            }
            goto LABEL_62;
          }
        }
LABEL_63:
        __break(0x550Au);
        goto LABEL_64;
      }
      if ((~a3 & 0xFFFFFFFE) != 0) {
        return v9;
      }
      uint64_t result = *(void *)(v4 + 1256);
      if (!result || (result & 7) != 0)
      {
LABEL_62:
        __break(0x5516u);
        goto LABEL_63;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 272))(result, a4);
      if (result != 2) {
        return v9;
      }
      if (*(unsigned __int8 *)(v4 + 1268) > 1u) {
        goto LABEL_63;
      }
      if (!*(unsigned char *)(v4 + 1268)) {
        return v9;
      }
      syslog(3, "%s setting USB Device Mode on auth failure/lockout", "NotifyEvent");
LABEL_26:
      uint64_t result = *(void *)(v4 + 1256);
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)result + 280))(result, a4, 1, 0);
        *(unsigned char *)(v4 + 1268) = 0;
        return v9;
      }
      goto LABEL_62;
    }
    goto LABEL_48;
  }
  sub_10006FF9C(v4, (uint64_t)&v9);
  uint64_t result = *(void *)(v4 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_62;
  }
  if (!sub_100063090(result, 6u)) {
    return v9;
  }
  unsigned int v8 = sub_10006FADC();
  uint64_t result = *(void *)(v4 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_62;
  }
  uint64_t result = sub_10006303C(result, 6u);
  if (v8 >= result)
  {
    if (v8 - result < 0x1F4) {
      return v9;
    }
    uint64_t result = *(void *)(v4 + 8);
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_100062FD8(result, 6u, 0);
        uint64_t result = *(void *)(v4 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_100062F84(result, 6u, 0);
            return v9;
          }
        }
      }
    }
    goto LABEL_62;
  }
LABEL_64:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000C3240(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(unsigned char *)uint64_t result = 6;
    if (result != -1)
    {
      *(void *)(result + 1) = 0x300000000000000;
      return 0;
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5500u);
  return result;
}

void *sub_1000C3274(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_100126AD0;
  }
  return result;
}

void *sub_1000C32A4(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_100126AD0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C32E4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 8);
  if (result >= 8) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000C3308(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(void *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_1000C3320(uint64_t result, int a2, const void *a3, size_t size)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_100126AF0;
    *(_DWORD *)(result + 8) = a2;
    *(void *)(result + 16) = size;
    if (size)
    {
      int v6 = malloc_type_malloc(size, 0xD5B4267FuLL);
      *(void *)(v4 + 24) = v6;
      if (v6) {
        memcpy(v6, a3, *(void *)(v4 + 16));
      }
      else {
        sub_1000EE4F4(0, 4, "%s:%d NULL mData\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapMessage.cpp", 134);
      }
    }
    else
    {
      *(void *)(result + 24) = 0;
    }
    return v4;
  }
  return result;
}

void *sub_1000C33D8(void *result)
{
  if (!result || (BOOL v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = off_100126AF0;
    uint64_t v2 = (void *)result[3];
    if (v2)
    {
      free(v2);
      v1[3] = 0;
    }
    return v1;
  }
  return result;
}

void *sub_1000C3438(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C33D8(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C344C(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C33D8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C3494(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C34AC(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = off_100126B10;
    operator new();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C3554(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C34AC(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C3568(void *result)
{
  if (result)
  {
    BOOL v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = off_100126B10;
      uint64_t result = (void *)result[3];
      if (!result)
      {
LABEL_6:
        *BOOL v1 = off_100126AD0;
        return v1;
      }
      if ((result & 7) == 0)
      {
        (*(void (**)(void *))(*result + 8))(result);
        goto LABEL_6;
      }
    }
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C3608(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C3568(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C361C(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C3568(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C3664(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 8) = 1;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = a2;
    *(void *)uint64_t result = off_100126B30;
  }
  return result;
}

void *sub_1000C36A0(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_100126AD0;
  }
  return result;
}

void *sub_1000C36D0(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_100126AD0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C3710(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((uint64_t result = *(void *)(result + 24)) != 0 ? (v1 = (result & 7) == 0) : (v1 = 0), !v1))
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C3738(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 8) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = a2;
    *(void *)uint64_t result = off_100126B50;
  }
  return result;
}

void *sub_1000C3774(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_100126AD0;
  }
  return result;
}

void *sub_1000C37A4(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_100126AD0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C37E4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 8) = 3;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = off_100126B70;
  }
  return result;
}

void *sub_1000C3820(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_100126AD0;
  }
  return result;
}

void *sub_1000C3850(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_100126AD0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C3890(uint64_t result, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 8) = 4;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = off_100126B90;
    *(_DWORD *)(result + 24) = a2;
    *(void *)(result + 32) = a3;
    *(void *)(result + 40) = a4;
    *(_DWORD *)(result + 48) = a5;
  }
  return result;
}

void *sub_1000C38D8(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_100126AD0;
  }
  return result;
}

void *sub_1000C3908(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_100126AD0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void sub_1000C3948()
{
}

void sub_1000C39C4()
{
  dispatch_semaphore_create(0);
  memset(__p, 170, sizeof(__p));
  sub_10002B034((uint64_t)__p, "CIapOutgoingProcessThread");
  sub_1000C3AA8();
}

void sub_1000C3AA8()
{
}

pthread_mutex_t *sub_1000C3B64(pthread_mutex_t *result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock(result + 1);
    qword_10013C998 = a3;
    *(void *)&v3->__opaque[48] = a2;
    pthread_mutex_unlock(v3 + 1);
    return (pthread_mutex_t *)1;
  }
  return result;
}

uint64_t sub_1000C3BC8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      sub_100065044(result);
      *(void *)uint64_t v2 = off_100126C48;
      *(void *)(v2 + 48) = a2;
      *(void *)(v2 + 56) = 0;
      *(unsigned char *)(v2 + 344) = 0;
      uint64_t result = pthread_mutex_init((pthread_mutex_t *)(v2 + 64), 0);
      unint64_t v4 = 0;
      unint64_t v5 = 0;
      uint64_t v6 = 348;
      while (v4 <= ~(v2 + 128))
      {
        pthread_mutex_init((pthread_mutex_t *)(v2 + v4 + 128), 0);
        uint64_t result = (uint64_t)dispatch_semaphore_create(0);
        if (v5 > ~(v2 + 320)) {
          break;
        }
        *(void *)(v2 + v5 + 320) = result;
        if (v6 - 348 > (unint64_t)~(v2 + 348)) {
          break;
        }
        if ((v2 & 3) != 0) {
          goto LABEL_11;
        }
        *(_DWORD *)(v2 + v6) = *(_DWORD *)"(";
        v6 += 4;
        v5 += 8;
        v4 += 64;
        if (v5 == 24)
        {
          sub_1000650A4(v2, 3u);
          return v2;
        }
      }
      __break(0x5513u);
    }
  }
LABEL_11:
  __break(0x5516u);
  return result;
}

void sub_1000C3CF8(pthread_mutex_t *a1)
{
  if (a1 && (a1 & 7) == 0)
  {
    unint64_t v2 = 0;
    a1->__sig = (uint64_t)off_100126C48;
    a1[5].__opaque[16] = 1;
    unint64_t v3 = ~(unint64_t)&a1[2];
    unint64_t v4 = a1 + 5;
    unint64_t v5 = ~(unint64_t)&a1[5];
    uint64_t v6 = 0x3FFFFFFFFFFFFFDLL;
    while (v6 * 64 + 192 <= v3)
    {
      pthread_mutex_destroy(&v4[v6]);
      if (v2 > v5) {
        break;
      }
      uint64_t v7 = *(NSObject **)((char *)&v4->__sig + v2);
      if (!v7) {
        goto LABEL_10;
      }
      dispatch_release(v7);
      v2 += 8;
      if (!(++v6 * 64))
      {
        pthread_mutex_destroy(a1 + 1);
        sub_1000651C0((uint64_t)a1);
        return;
      }
    }
    __break(0x5513u);
LABEL_10:
    __break(0x5510u);
  }
  __break(0x5516u);
}

void sub_1000C3DC0(pthread_mutex_t *a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C3CF8(a1);
  }
}

pthread_mutex_t *sub_1000C3DD4(pthread_mutex_t *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C3CF8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void sub_1000C3E1C(pthread_mutex_t *a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_32;
  }
  unsigned int v6 = sub_1000C32E4(a2);
  pthread_mutex_lock(a1 + 1);
  if (v6 >= 8) {
    goto LABEL_34;
  }
  if (v6)
  {
    sub_1000EE4F4(0, 4, "%s:%d CIapOutgoingProcess::HandleMessage: unknown type 0x%08x\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapOutgoingProcess.cpp", 341, v6);
    goto LABEL_9;
  }
  uint64_t v7 = sub_1000629EC(a2);
  if (!v7)
  {
LABEL_31:
    __break(0x5518u);
    goto LABEL_32;
  }
  uint64_t v8 = v7;
  if ((v7 & 7) != 0)
  {
LABEL_32:
    __break(0x5516u);
LABEL_33:
    __break(0x5513u);
    goto LABEL_34;
  }
  if (sub_1000C3494(v7)) {
    goto LABEL_9;
  }
  __int16 v13 = (uint64_t *)sub_1000629EC(v8);
  if (!v13 || (v13 & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v14 = *v13;
  if (!*v13)
  {
LABEL_9:
    if (a3 <= 3) {
      goto LABEL_10;
    }
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }
  if (a1[5].__opaque[16] > 1u) {
    goto LABEL_34;
  }
  if (a1[5].__opaque[16])
  {
    sub_1000C6E1C(*v13);
    goto LABEL_9;
  }
  if (a3 > 3) {
    goto LABEL_34;
  }
  if (!a3)
  {
    if ((v14 & 7) != 0) {
      goto LABEL_32;
    }
    *(unsigned char *)(v14 + 132) |= 1u;
  }
  sub_1000C4004((uint64_t)a1, v14);
LABEL_10:
  if (__CFADD__(&a1[2], (unint64_t)a3 << 6)) {
    goto LABEL_33;
  }
  unsigned int v9 = &a1[(unint64_t)a3 + 2];
  pthread_mutex_lock(v9);
  if (__CFADD__(&a1[5].__opaque[20], 4 * a3)) {
    goto LABEL_33;
  }
  uint64_t v10 = (uint64_t)&a1[5].__opaque[4 * a3 + 20];
  unsigned int v11 = *(_DWORD *)v10 + 1;
  if (*(_DWORD *)v10 == -1)
  {
LABEL_35:
    __break(0x5500u);
    goto LABEL_36;
  }
  *(_DWORD *)uint64_t v10 = v11;
  if ((v10 & 3) != 0) {
    goto LABEL_32;
  }
  if (v11 > *(_DWORD *)"(") {
    goto LABEL_31;
  }
  pthread_mutex_unlock(v9);
  if (a3 > 2)
  {
LABEL_36:
    __break(0x5512u);
    goto LABEL_37;
  }
  if (__CFADD__(&a1[5], 8 * a3)) {
    goto LABEL_33;
  }
  uint64_t v12 = (dispatch_semaphore_t *)(&a1[5].__sig + a3);
  if ((v12 & 7) != 0) {
    goto LABEL_32;
  }
  if (*v12)
  {
    dispatch_semaphore_signal(*v12);
    pthread_mutex_unlock(a1 + 1);
    return;
  }
LABEL_37:
  __break(0x5510u);
}

uint64_t sub_1000C4004(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_91;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_91;
  }
  if (!a2) {
    sub_1000F2364();
  }
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if (dword_10013B900[0])
  {
    if ((a2 & 7) != 0) {
      goto LABEL_91;
    }
    uint64_t v4 = *(void *)(a2 + 8);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_91;
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v4 + 216))(*(void *)(a2 + 8));
    if (result >= 5) {
      goto LABEL_92;
    }
    if (~(unint64_t)qword_10013C618 < 8 * (unint64_t)result) {
      goto LABEL_93;
    }
    if (!qword_10013C618[result])
    {
      pthread_mutex_lock(&stru_10013B730);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
      if (result > 4) {
        goto LABEL_92;
      }
      if (~(unint64_t)qword_10013C618 < 8 * (unint64_t)result) {
        goto LABEL_93;
      }
      if (!qword_10013C618[result])
      {
        sub_1000D8F10(v4, 0, 0);
        uint64_t v6 = v5;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
        if (result > 4) {
          goto LABEL_92;
        }
        if (~(unint64_t)qword_10013C618 < 8 * (unint64_t)result) {
          goto LABEL_93;
        }
        qword_10013C618[result] = v6;
      }
      pthread_mutex_unlock(&stru_10013B730);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
    if (result > 4) {
      goto LABEL_92;
    }
    if (~(unint64_t)qword_10013C640 < 8 * (unint64_t)result) {
      goto LABEL_93;
    }
    if (!qword_10013C640[result])
    {
      pthread_mutex_lock(&stru_10013B770);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
      if (result > 4) {
        goto LABEL_92;
      }
      if (~(unint64_t)qword_10013C640 < 8 * (unint64_t)result) {
        goto LABEL_93;
      }
      if (!qword_10013C640[result])
      {
        sub_1000D8F10(v4, 0, 0);
        uint64_t v8 = v7;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
        if (result > 4) {
          goto LABEL_92;
        }
        if (~(unint64_t)qword_10013C640 < 8 * (unint64_t)result) {
          goto LABEL_93;
        }
        qword_10013C640[result] = v8;
      }
      pthread_mutex_unlock(&stru_10013B770);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
    if (result > 4) {
      goto LABEL_92;
    }
    if (~(unint64_t)qword_10013C668 < 8 * (unint64_t)result) {
      goto LABEL_93;
    }
    if (!qword_10013C668[result])
    {
      pthread_mutex_lock(&stru_10013B7B0);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
      if (result > 4) {
        goto LABEL_92;
      }
      if (~(unint64_t)qword_10013C668 < 8 * (unint64_t)result) {
        goto LABEL_93;
      }
      if (!qword_10013C668[result])
      {
        sub_1000D8F10(v4, 0, 0);
        uint64_t v10 = v9;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
        if (result > 4) {
          goto LABEL_92;
        }
        if (~(unint64_t)qword_10013C668 < 8 * (unint64_t)result) {
          goto LABEL_93;
        }
        qword_10013C668[result] = v10;
      }
      pthread_mutex_unlock(&stru_10013B7B0);
    }
    uint64_t result = (uint64_t)sub_1000D92E0();
    unsigned int v11 = (unsigned int *)(a2 + 148);
    if (((a2 + 148) & 3) != 0) {
      goto LABEL_91;
    }
    unsigned int v12 = result;
    if (*v11)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
      if (result >= 5) {
        goto LABEL_92;
      }
      if (~(unint64_t)qword_10013C618 < 8 * (unint64_t)result) {
        goto LABEL_93;
      }
      uint64_t result = qword_10013C618[result];
      if (!result || (result & 7) != 0) {
        goto LABEL_91;
      }
      if (v12 < *v11) {
        goto LABEL_95;
      }
      uint64_t v13 = *(unsigned int *)(result + 76);
      if (v13 >= 8) {
        goto LABEL_94;
      }
      if (v13 >= 4) {
        goto LABEL_92;
      }
      if (~(unint64_t)dword_10013B900 < 4 * v13) {
        goto LABEL_93;
      }
      if (dword_10013B900[v13]) {
        uint64_t result = (*(uint64_t (**)(uint64_t, void, void, void))(*(void *)result + 104))(result, v12 - *v11, 0, 0);
      }
    }
    uint64_t v14 = (_DWORD *)(a2 + 144);
    if (((a2 + 144) & 7) != 0) {
      goto LABEL_91;
    }
    if (!*v14)
    {
LABEL_62:
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
      if (result <= 4)
      {
        if (~(unint64_t)qword_10013C668 < 8 * (unint64_t)result) {
          goto LABEL_93;
        }
        uint64_t result = qword_10013C668[result];
        if (!result || (result & 7) != 0) {
          goto LABEL_91;
        }
        uint64_t v16 = *(unsigned int *)(result + 76);
        if (v16 >= 8) {
          goto LABEL_94;
        }
        if (v16 < 4)
        {
          if (~(unint64_t)dword_10013B900 >= 4 * v16)
          {
            if (dword_10013B900[v16]) {
              (*(void (**)(uint64_t, void, void, void))(*(void *)result + 104))(result, *(unsigned __int16 *)(a2 + 128), 0, 0);
            }
            goto LABEL_71;
          }
LABEL_93:
          __break(0x5513u);
          goto LABEL_94;
        }
      }
LABEL_92:
      __break(0x5512u);
      goto LABEL_93;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
    if (result > 4) {
      goto LABEL_92;
    }
    if (~(unint64_t)qword_10013C640 < 8 * (unint64_t)result) {
      goto LABEL_93;
    }
    uint64_t result = qword_10013C640[result];
    if (!result || (result & 7) != 0) {
      goto LABEL_91;
    }
    if (v12 >= *v14)
    {
      uint64_t v15 = *(unsigned int *)(result + 76);
      if (v15 >= 8) {
        goto LABEL_94;
      }
      if (v15 >= 4) {
        goto LABEL_92;
      }
      if (~(unint64_t)dword_10013B900 < 4 * v15) {
        goto LABEL_93;
      }
      if (dword_10013B900[v15]) {
        (*(void (**)(uint64_t, void, void, void))(*(void *)result + 104))(result, v12 - *v14, 0, 0);
      }
      goto LABEL_62;
    }
LABEL_95:
    __break(0x5515u);
    return result;
  }
LABEL_71:
  uint64_t result = *(void *)(v2 + 56);
  if (!result || (result & 7) != 0 || (a2 & 7) != 0) {
    goto LABEL_91;
  }
  if (!sub_100063ECC(result, *(_DWORD *)(a2 + 68)))
  {
    uint64_t v17 = *(void *)(a2 + 8);
    if (v17 && sub_1000E6CE4(*(void *)(a2 + 8)))
    {
      uint64_t result = sub_100031160();
      if (result && (result & 7) == 0)
      {
        if ((*(_DWORD *)(a2 + 64) + 32) < 0x40)
        {
          (*(void (**)(uint64_t))(*(void *)result + 280))(result);
          uint64_t result = sub_1000C5E68(a2);
          if (!result) {
            return result;
          }
          if ((v17 & 7) == 0)
          {
            uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
            int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v17 + 24);
            return v19(v17, a2, v18);
          }
          goto LABEL_91;
        }
LABEL_94:
        __break(0x550Au);
        goto LABEL_95;
      }
LABEL_91:
      __break(0x5516u);
      goto LABEL_92;
    }
    sub_1000EE4F4(0, 4, "%s:%d CIapOutgoingProcess::ProcessOutgoingPacket: devPort not assigned for packet !\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapOutgoingProcess.cpp", 424);
  }
  return sub_1000C6E1C(a2);
}

uint64_t sub_1000C47B0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator new();
  }
  __break(0x5516u);
  __break(0x550Au);
  __break(0x5513u);
  __break(0x5500u);
  return result;
}

uint64_t sub_1000C4944(uint64_t result, uint64_t a2, unsigned int a3, int a4)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (!a2) {
    sub_1000F2364();
  }
  uint64_t result = *(void *)(result + 56);
  if (!result || ((result | a2) & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
LABEL_36:
    __break(0x550Au);
LABEL_37:
    __break(0x5512u);
LABEL_38:
    __break(0x5513u);
LABEL_39:
    __break(0x5510u);
  }
  else
  {
    if (sub_100063ECC(result, *(_DWORD *)(a2 + 68))) {
      return 22;
    }
    sub_10006B514(a2, 1u, a4);
    uint64_t v9 = (NSObject **)(v4 + 320 + 8 * a3);
    do
    {
      pthread_once(&stru_10013B910, sub_1000D8E78);
      if (dword_10013B900[0])
      {
        unsigned int v10 = sub_1000D92E0();
        uint64_t result = a2;
        if (a2) {
          BOOL v11 = (a2 & 7) == 0;
        }
        else {
          BOOL v11 = 0;
        }
        if (!v11 || (((_BYTE)a2 - 108) & 3) != 0) {
          goto LABEL_35;
        }
        *(_DWORD *)(a2 + 148) = v10;
      }
      else
      {
        uint64_t result = a2;
      }
      if (result) {
        BOOL v13 = (result & 7) == 0;
      }
      else {
        BOOL v13 = 0;
      }
      if (!v13) {
        goto LABEL_35;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
      if (a3 > 3) {
        goto LABEL_36;
      }
      uint64_t result = sub_1000C47B0(v4);
      uint64_t v8 = result;
      if (!result) {
        break;
      }
      if (a3 >= 3) {
        goto LABEL_37;
      }
      if (8 * (unint64_t)a3 > ~(v4 + 320)) {
        goto LABEL_38;
      }
      if ((v9 & 7) != 0) {
        goto LABEL_35;
      }
      uint64_t v14 = *v9;
      if (!*v9) {
        goto LABEL_39;
      }
      dispatch_time_t v15 = dispatch_time(0, 10000000);
      uint64_t result = dispatch_semaphore_wait(v14, v15);
      if (*(unsigned __int8 *)(v4 + 344) > 1u) {
        goto LABEL_36;
      }
    }
    while (!*(unsigned char *)(v4 + 344));
    return v8;
  }
  return result;
}

uint64_t sub_1000C4B20(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  if (!a1)
  {
    sub_1000EE4F4(0, 4, "%s:%d No handle, cannot TransmitPacket!\n");
    goto LABEL_16;
  }
  uint64_t result = qword_10013C998;
  if (!qword_10013C998)
  {
    uint64_t result = sub_1000D289C();
    qword_10013C998 = result;
    if (!result)
    {
      __break(0x5518u);
      goto LABEL_23;
    }
  }
  if ((result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }
  uint64_t result = sub_1000A2020(result, a1);
  if (!result)
  {
    sub_1000EE4F4(0, 4, "%s:%d No outgoing process, cannot TransmitPacket!\n");
    goto LABEL_16;
  }
  if ((result & 7) != 0 || ((result + 344) & 7) != 0) {
    goto LABEL_23;
  }
  if (*(unsigned __int8 *)(result + 344) <= 1u)
  {
    if (*(unsigned char *)(result + 344))
    {
      sub_1000EE4F4(0, 4, "%s:%d OutgoingProcess shutting down, do not TransmitPacket!\n");
LABEL_16:
      uint64_t v10 = 2;
LABEL_17:
      sub_1000C6E1C(a2);
      return v10;
    }
    if (a4 < 4)
    {
      uint64_t v10 = sub_1000C4944(result, a2, a4, a3);
      if (!v10) {
        return v10;
      }
      goto LABEL_17;
    }
  }
LABEL_24:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000C4C58(uint64_t result)
{
  if (!result || (unsigned int v1 = result & 7, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
  }
  else
  {
    unint64_t v2 = 0;
    while (v2 <= ~(result + 348))
    {
      if ((result & 3) != 0) {
        goto LABEL_15;
      }
      int v3 = *(_DWORD *)(result + 348 + v2);
      BOOL v4 = __CFADD__(v1, v3);
      v1 += v3;
      if (v4) {
        goto LABEL_17;
      }
      v2 += 4;
      if (v2 == 12)
      {
        uint64_t v5 = 3 * *(unsigned int *)"(";
        if ((v5 & 0xFFFFFFFF00000000) != 0) {
          goto LABEL_18;
        }
        if (v1 == v5) {
          return 0;
        }
        BOOL v4 = v5 >= v1;
        unsigned int v6 = v5 - v1;
        if (!v4) {
          goto LABEL_19;
        }
        uint64_t result = 10 * v6;
        if ((result & 0xFFFFFFFF00000000) != 0) {
          goto LABEL_18;
        }
        return result;
      }
    }
  }
  __break(0x5513u);
LABEL_17:
  __break(0x5500u);
LABEL_18:
  __break(0x550Cu);
LABEL_19:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000C4CF0(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(result + 344) >= 2u)
  {
LABEL_7:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 344)) {
    *(unsigned char *)(result + 344) = 1;
  }
  return result;
}

uint64_t sub_1000C4D24(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (*(unsigned __int8 *)(result + 344) < 2u)
  {
    if (!*(unsigned char *)(result + 344)) {
      *(unsigned char *)(result + 344) = 1;
    }
    operator new();
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000C4DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_16:
    __break(0x550Au);
  }
  if (*(unsigned __int8 *)(a1 + 8) >= 2u) {
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 0;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 24));
  *(void *)(a1 + 16) = a4;
  *(void *)a1 = a2;
  *(void *)&long long v11 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v18.__opaque[24] = v11;
  *(_OWORD *)&v18.__opaque[40] = v11;
  *(_OWORD *)&v18.__sig = v11;
  *(_OWORD *)&v18.__opaque[8] = v11;
  pthread_attr_init(&v18);
  int v12 = pthread_attr_setinheritsched(&v18, 2);
  if (v12) {
    sub_1000EE4F4(0, 4, "%s:%d status == %d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h", 213, v12);
  }
  sched_param v17 = (sched_param)0xAAAAAAAAAAAAAAAALL;
  pthread_attr_getschedparam(&v18, &v17);
  v17.sched_priority = a6;
  int v13 = pthread_attr_setschedparam(&v18, &v17);
  if (v13) {
    sub_1000EE4F4(0, 4, "%s:%d status == %d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h", 222, v13);
  }
  pthread_t v16 = (pthread_t)0xAAAAAAAAAAAAAAAALL;
  int v14 = pthread_create(&v16, &v18, (void *(__cdecl *)(void *))sub_1000C4FC0, (void *)a1);
  BOOL v7 = v14 == 0;
  if (v14)
  {
    sub_1000EE4F4(0, 4, "%s:%d status == %d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h", 236, v14);
    *(unsigned char *)(a1 + 8) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 8) = 1;
    pthread_cond_wait((pthread_cond_t *)(a1 + 88), (pthread_mutex_t *)(a1 + 24));
    pthread_detach(v16);
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 24));
  return v7;
}

uint64_t sub_1000C4FC0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      sub_1000C5020(result);
      pthread_mutex_destroy((pthread_mutex_t *)(v1 + 24));
      operator delete();
    }
  }
  else
  {
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C5020(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)(result + 24));
      if (!*(void *)v1) {
        sub_1000C3948();
      }
      *(void *)(v1 + 16) = 0;
      pthread_cond_broadcast((pthread_cond_t *)(v1 + 88));
      pthread_mutex_unlock((pthread_mutex_t *)(v1 + 24));
      uint64_t result = *(void *)v1;
      if (*(void *)v1)
      {
        if ((result & 7) == 0)
        {
          sub_10006547C(result);
          uint64_t result = *(void *)v1;
          if (!*(void *)v1)
          {
LABEL_10:
            *(unsigned char *)(v1 + 8) = 0;
            return result;
          }
          if ((result & 7) == 0)
          {
            uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
            goto LABEL_10;
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C50D4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned char *)(result + 132) & 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C50F0(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_100126C88;
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0;
    *(void *)(result + 64) = -1;
    *(void *)(result + 80) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(void *)(result + 96) = 0;
    *(void *)(result + 104) = 0;
    *(void *)(result + 120) = 0xFFFF000000000000;
    *(_DWORD *)(result + 128) = 0;
    *(_DWORD *)(result + 131) = 0;
    *(void *)(result + 136) = 0;
    *(void *)(result + 144) = 0;
    v3[0] = 0xAAAAAAAAAAAAAAAALL;
    v3[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_10002EDDC((uint64_t)v3);
    v2[0] = 0xAAAAAAAAAAAAAAAALL;
    v2[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000EE3E8((uint64_t)v3, v2);
    *(void *)(v1 + 72) = sub_10002DC04(v2);
    v3[0] = off_100123868;
    sub_1000EE300(v3);
    return v1;
  }
  return result;
}

void sub_1000C51E0()
{
}

uint64_t sub_1000C52D0(uint64_t result, uint64_t a2, int a3, uint64_t a4, __int16 a5, int a6, const void *a7, unsigned int a8)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  *(unsigned char *)(result + 130) = 0;
  uint64_t result = sub_1000C5DEC(result);
  *(void *)(v8 + 8) = a2;
  *(_DWORD *)(v8 + 16) = a3;
  *(_DWORD *)(v8 + 68) = a6;
  if ((a4 + 32) >= 0x40)
  {
LABEL_29:
    __break(0x550Au);
    goto LABEL_30;
  }
  *(_DWORD *)(v8 + 64) = a4;
  *(_WORD *)(v8 + 126) = a5;
  pthread_once(&stru_10013B910, sub_1000D8E78);
  if (dword_10013B900[0])
  {
    uint64_t result = sub_1000C58E0(*(void *)(v8 + 8));
    if (!*(_DWORD *)(v8 + 144))
    {
LABEL_21:
      *(_DWORD *)(v8 + 144) = sub_1000D92E0();
      goto LABEL_23;
    }
    if (a2 && (a2 & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216))(a2);
      if (result < 5)
      {
        if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)result) {
          goto LABEL_31;
        }
        pthread_t v16 = (unsigned int *)qword_10013C690[result];
        if (v16) {
          BOOL v17 = (qword_10013C690[result] & 7) == 0;
        }
        else {
          BOOL v17 = 0;
        }
        if (!v17) {
          goto LABEL_28;
        }
        uint64_t result = (uint64_t)sub_1000D92E0();
        unsigned int v18 = *(_DWORD *)(v8 + 144);
        uint64_t v19 = result - v18;
        if (result < v18)
        {
LABEL_32:
          __break(0x5515u);
          return result;
        }
        uint64_t v20 = v16[19];
        if (v20 >= 8) {
          goto LABEL_29;
        }
        if (v20 < 4)
        {
          if (~(unint64_t)dword_10013B900 >= 4 * v20)
          {
            if (dword_10013B900[v20]) {
              (*(void (**)(unsigned int *, uint64_t, void, void))(*(void *)v16 + 104))(v16, v19, 0, 0);
            }
            goto LABEL_21;
          }
LABEL_31:
          __break(0x5513u);
          goto LABEL_32;
        }
      }
LABEL_30:
      __break(0x5512u);
      goto LABEL_31;
    }
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  *(_DWORD *)(v8 + 144) = 0;
LABEL_23:
  *(_DWORD *)(v8 + 148) = 0;
  if (a8)
  {
    sub_1000C5A04(v8, a8, a4, 0, 0);
    uint64_t result = *(void *)(v8 + 24);
    if (!result) {
      return result;
    }
    *(_WORD *)(v8 + 128) = a8;
    memcpy((void *)result, a7, a8);
  }
  return 1;
}

void sub_1000C54CC()
{
}

uint64_t sub_1000C55C4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if ((*(unsigned char *)(result + 132) & 4) == 0) {
      operator new[]();
    }
    sub_1000F2364();
  }
  __break(0x5516u);
  __break(0x550Au);
  __break(0x5507u);
  return result;
}

void sub_1000C5804()
{
}

uint64_t sub_1000C58E0(uint64_t result)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
  if (result >= 5) {
    goto LABEL_11;
  }
  if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)result)
  {
LABEL_12:
    __break(0x5513u);
LABEL_13:
    __break(0x5516u);
    return result;
  }
  if (qword_10013C690[result]) {
    return result;
  }
  pthread_mutex_lock(&stru_10013B7F0);
  sub_1000D8F10(v1, 0, 0);
  uint64_t v3 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216))(v1);
  if (result > 4)
  {
LABEL_11:
    __break(0x5512u);
    goto LABEL_12;
  }
  if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)result) {
    goto LABEL_12;
  }
  qword_10013C690[result] = v3;
  return pthread_mutex_unlock(&stru_10013B7F0);
}

uint64_t sub_1000C5A04(uint64_t result, int a2, uint64_t a3, int a4, char a5)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v5 = (_DWORD *)result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  int v7 = a2;
  *(_DWORD *)(result + 60) = a4;
  if (a5)
  {
    *(_DWORD *)(result + 52) = a4;
    int v8 = a2 + a4;
    if (!__CFADD__(a2, a4)) {
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (!a2)
  {
    uint64_t result = *(void *)(result + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_19;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144))(result);
    int v7 = result;
  }
  if ((a3 + 32) > 0x3F)
  {
LABEL_20:
    __break(0x550Au);
    goto LABEL_21;
  }
  if (__CFADD__(v7, a4))
  {
LABEL_18:
    __break(0x5500u);
LABEL_19:
    __break(0x5516u);
    __break(0x5513u);
    goto LABEL_20;
  }
  if ((v7 + a4) < 0x10000)
  {
    uint64_t result = (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)v5 + 48))(v5, a3, (unsigned __int16)(v7 + a4));
    int v10 = a4 + result;
    if (!__CFADD__(a4, result))
    {
      v5[13] = v10;
      BOOL v11 = __CFADD__(v10, v7);
      int v12 = v10 + v7;
      if (!v11)
      {
        BOOL v11 = __CFADD__(v12, 1);
        int v8 = v12 + 1;
        if (!v11)
        {
LABEL_17:
          v5[12] = v8;
          operator new[]();
        }
      }
    }
    goto LABEL_18;
  }
LABEL_21:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000C5B58(uint64_t result, uint64_t a2, int a3, uint64_t a4, __int16 a5, int a6, const void *a7, unsigned int a8)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  if ((*(unsigned char *)(result + 132) & 4) != 0) {
    sub_1000F2364();
  }
  if ((a4 + 32) > 0x3F) {
    goto LABEL_15;
  }
  uint64_t result = sub_1000C52D0(result, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = *(void *)(v8 + 136);
  if (!v9) {
    return result;
  }
  if ((v9 & 7) != 0 || (uint64_t result = *(void *)(v9 + 48)) == 0 || (result & 7) != 0)
  {
LABEL_14:
    __break(0x5516u);
LABEL_15:
    __break(0x550Au);
    return result;
  }
  return sub_100067CA4(result, v8);
}

uint64_t sub_1000C5BEC(uint64_t result)
{
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  *(void *)uint64_t result = off_100126C88;
  pthread_once(&stru_10013B910, sub_1000D8E78);
  if (!dword_10013B900[0] || !*(_DWORD *)(v1 + 144)) {
    goto LABEL_20;
  }
  uint64_t result = *(void *)(v1 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
  if (result >= 5) {
    goto LABEL_30;
  }
  if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)result) {
    goto LABEL_31;
  }
  uint64_t v2 = (unsigned int *)qword_10013C690[result];
  if (v2) {
    BOOL v3 = (qword_10013C690[result] & 7) == 0;
  }
  else {
    BOOL v3 = 0;
  }
  if (!v3) {
    goto LABEL_29;
  }
  uint64_t result = (uint64_t)sub_1000D92E0();
  unsigned int v4 = *(_DWORD *)(v1 + 144);
  uint64_t v5 = result - v4;
  if (result < v4)
  {
LABEL_32:
    __break(0x5515u);
    goto LABEL_33;
  }
  uint64_t v6 = v2[19];
  if (v6 < 8)
  {
    if (v6 < 4)
    {
      if (~(unint64_t)dword_10013B900 >= 4 * v6)
      {
        if (dword_10013B900[v6]) {
          (*(void (**)(unsigned int *, uint64_t, void, void))(*(void *)v2 + 104))(v2, v5, 0, 0);
        }
LABEL_20:
        *(unsigned char *)(v1 + 130) = 0;
        uint64_t result = sub_1000C5DEC(v1);
        uint64_t v7 = *(void *)(v1 + 136);
        if (v7)
        {
          if ((v7 & 7) != 0) {
            goto LABEL_29;
          }
          uint64_t result = *(void *)(v7 + 48);
          if (!result || (*(void *)(v7 + 48) & 7) != 0) {
            goto LABEL_29;
          }
          sub_100067CA4(result, v1);
        }
        return v1;
      }
LABEL_31:
      __break(0x5513u);
      goto LABEL_32;
    }
LABEL_30:
    __break(0x5512u);
    goto LABEL_31;
  }
LABEL_33:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000C5D90(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C5BEC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C5DA4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C5BEC(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C5DEC(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    if ((*(unsigned char *)(result + 132) & 8) != 0) {
      bzero(*(void **)(result + 40), *(unsigned int *)(result + 48));
    }
    uint64_t result = *(void *)(v1 + 40);
    if (result) {
      operator delete[]();
    }
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_OWORD *)(v1 + 24) = 0u;
    *(_WORD *)(v1 + 128) = 0;
    *(_OWORD *)(v1 + 96) = 0u;
    *(_WORD *)(v1 + 124) = 0;
  }
  return result;
}

uint64_t sub_1000C5E68(uint64_t result)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  int v2 = *(_DWORD *)(result + 64);
  if ((v2 + 32) >= 0x40) {
    goto LABEL_22;
  }
  if (v2 >= 15)
  {
LABEL_19:
    __break(0x5518u);
LABEL_20:
    sub_1000F2364();
  }
  if (v2)
  {
    uint64_t result = *(void *)(result + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_21;
    }
    unsigned int v3 = *(unsigned __int16 *)(v1 + 128);
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 136))(result) < v3) {
      goto LABEL_20;
    }
  }
  if ((*(unsigned char *)(v1 + 132) & 2) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  BOOL v4 = sub_1000A10E4(result, *(void *)(v1 + 8));
  sub_10006B514(v1, 2u, v4);
LABEL_13:
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 56))(v1);
  if (!result) {
    goto LABEL_19;
  }
  unsigned int v5 = result;
  if (*(void *)(v1 + 32)) {
    goto LABEL_17;
  }
  uint64_t v6 = *(unsigned int *)(v1 + 64);
  if ((v6 + 32) >= 0x40)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }
  uint64_t result = sub_1000C5A04(v1, result, v6, 0, 1);
  if (!*(void *)(v1 + 32)) {
    goto LABEL_19;
  }
LABEL_17:
  if (!HIWORD(v5))
  {
    *(_WORD *)(v1 + 124) = v5;
    return (*(unsigned int (**)(uint64_t))(*(void *)v1 + 64))(v1) == *(unsigned __int16 *)(v1 + 124);
  }
LABEL_23:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000C5FDC(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = sub_100070CD4(*(void *)(result + 8));
  if ((a2 + 32) >= 0x40)
  {
LABEL_23:
    __break(0x550Au);
    return result;
  }
  int v6 = result;
  if ((*(unsigned char *)(v3 + 132) & 2) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  if (!sub_1000A10E4(result, *(void *)(v3 + 8)))
  {
    int v7 = 0;
    goto LABEL_10;
  }
LABEL_8:
  int v7 = 2;
LABEL_10:
  if (v6) {
    int v8 = 2;
  }
  else {
    int v8 = 1;
  }
  if (a2 == 4) {
    unsigned int v9 = 252;
  }
  else {
    unsigned int v9 = 253;
  }
  unsigned int v10 = v7 + a3;
  if (a2 == 4) {
    int v11 = 3;
  }
  else {
    int v11 = 2;
  }
  int v12 = v11 + v7 + v8;
  if (v10 <= v9) {
    return (v12 + 1);
  }
  else {
    return (v12 + 3);
  }
}

uint64_t sub_1000C60A0(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  if ((*(_DWORD *)(result + 64) + 32) >= 0x40)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 48))(result);
  int v2 = *(unsigned __int16 *)(v1 + 128);
  BOOL v3 = __CFADD__(result, v2);
  int v4 = result + v2;
  if (v3 || (uint64_t result = (v4 + 1), v4 == -1))
  {
    __break(0x5500u);
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1000C6128(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_62;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_62;
  }
  if (!a2) {
    goto LABEL_60;
  }
  if (*(void *)(result + 32) != *(void *)(result + 24)) {
    return *(unsigned __int16 *)(result + 124);
  }
  int v3 = *(_DWORD *)(result + 64);
  if ((v3 + 32) > 0x3F) {
    goto LABEL_63;
  }
  int v4 = *(unsigned char *)(result + 132) & 2;
  if (v3 == 4) {
    int v5 = 3;
  }
  else {
    int v5 = 2;
  }
  int v6 = v5 + v4;
  unsigned int v7 = v5 + v4 + *(unsigned __int16 *)(result + 128);
  if (HIWORD(v7)) {
    goto LABEL_64;
  }
  uint64_t result = sub_100070CD4(*(void *)(result + 8));
  int v8 = result;
  if (result) {
    int v9 = 2;
  }
  else {
    int v9 = 1;
  }
  int v10 = v6 + 3;
  if ((v7 & 0xFF00) == 0) {
    int v10 = v6 + 1;
  }
  unsigned int v11 = v10 + v9;
  unsigned int v12 = *(_DWORD *)(v2 + 56);
  if (!v12 || v11 == v12)
  {
    unsigned int v13 = *(_DWORD *)(v2 + 56);
    if (*(_DWORD *)(v2 + 48) >= *(unsigned __int16 *)(v2 + 124))
    {
LABEL_22:
      unint64_t v14 = *(void *)(v2 + 32);
      if (v12 && v14 - v12 >= v14) {
        goto LABEL_61;
      }
      unsigned int v15 = v12;
      pthread_t v16 = (unsigned char *)(v14 - v12);
      *(void *)(v2 + 32) = v16;
      BOOL v17 = v13 >= v15;
      unsigned int v18 = v13 - v15;
      if (!v17) {
        goto LABEL_65;
      }
      *(_DWORD *)(v2 + 56) = v18;
      unint64_t v19 = *(void *)(v2 + 40);
      if (v16 == (unsigned char *)v19) {
        goto LABEL_29;
      }
      if (v19 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_61;
      }
      if (v16 == (unsigned char *)(v19 + 2))
      {
LABEL_29:
        if (v8)
        {
          if (v16 == (unsigned char *)-1) {
            goto LABEL_61;
          }
          if (!v14) {
            goto LABEL_62;
          }
          *v16++ = -1;
        }
        if (v16 == (unsigned char *)-1) {
          goto LABEL_61;
        }
        if (v16)
        {
          uint64_t v20 = v16 + 1;
          *pthread_t v16 = 85;
          if ((v7 & 0xFF00) != 0)
          {
            if (v16 == (unsigned char *)-2) {
              goto LABEL_61;
            }
            v16[1] = 0;
            if (v16 == (unsigned char *)-3) {
              goto LABEL_61;
            }
            __int16 v21 = v16 + 3;
            v16[2] = BYTE1(v7);
            if (v16 == (unsigned char *)-4) {
              goto LABEL_61;
            }
            uint64_t v22 = 4;
          }
          else
          {
            if (v16 == (unsigned char *)-2) {
              goto LABEL_61;
            }
            uint64_t v22 = 2;
            __int16 v21 = v16 + 1;
          }
          *__int16 v21 = v7;
          unsigned int v23 = *(_DWORD *)(v2 + 64);
          if (v23 + 32 > 0x3F)
          {
LABEL_63:
            __break(0x550Au);
            goto LABEL_64;
          }
          if (v23 > 0xFF)
          {
LABEL_64:
            __break(0x5507u);
LABEL_65:
            __break(0x5515u);
            return result;
          }
          uint64_t v24 = &v16[v22];
          if (v24 == (unsigned char *)-1) {
            goto LABEL_61;
          }
          uint64_t v25 = v24 + 1;
          unsigned char *v24 = v23;
          if (v3 == 4)
          {
            if (v24 == (unsigned char *)-2) {
              goto LABEL_61;
            }
            uint64_t v25 = v24 + 2;
            v24[1] = *(unsigned char *)(v2 + 127);
          }
          if (v25 != (unsigned char *)-1)
          {
            uint64_t v26 = v25 + 1;
            *uint64_t v25 = *(unsigned char *)(v2 + 126);
            if (!v4) {
              goto LABEL_53;
            }
            if (v25 != (unsigned char *)-2)
            {
              *uint64_t v26 = BYTE1(*(_DWORD *)(v2 + 68));
              if (v25 != (unsigned char *)-3)
              {
                uint64_t v26 = v25 + 3;
                _OWORD v25[2] = *(_DWORD *)(v2 + 68);
LABEL_53:
                uint64_t v27 = *(unsigned __int16 *)(v2 + 128);
                if (!__CFADD__(v26, v27))
                {
                  char v28 = 0;
                  unsigned int v29 = &v26[v27];
                  while (v20 != (char *)-1)
                  {
                    char v30 = *v20++;
                    v28 += v30;
                    if (v20 >= v29)
                    {
                      if (v29 == (char *)-1) {
                        break;
                      }
                      *unsigned int v29 = -v28;
                      unsigned int v31 = v29 + 1;
                      uint64_t result = (uint64_t)&v31[-*(void *)(v2 + 32)];
                      if (result >= 0x10000)
                      {
                        syslog(3, "%s:%s-%d packetlen too large)", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPacket.cpp", "GenerateRawPktData", 851);
                        return (uint64_t)&v31[-*(void *)(v2 + 32)];
                      }
                      return result;
                    }
                  }
                }
              }
            }
          }
LABEL_61:
          __break(0x5513u);
        }
LABEL_62:
        __break(0x5516u);
        goto LABEL_63;
      }
LABEL_60:
      __break(0x5518u);
      goto LABEL_61;
    }
  }
  uint64_t result = sub_1000C6418(v2, v11);
  if (result)
  {
    unsigned int v13 = *(_DWORD *)(v2 + 56);
    unsigned int v12 = v11;
    if (v11 > v13) {
      goto LABEL_60;
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1000C6418(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  if (*(_DWORD *)(result + 56) == a2) {
    return *(void *)(v2 + 24);
  }
  int v4 = *(const void **)(result + 32);
  if (v4 != *(const void **)(result + 24))
  {
    __break(0x5518u);
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  if ((*(_DWORD *)(v2 + 64) + 32) > 0x3F)
  {
LABEL_19:
    __break(0x550Au);
LABEL_20:
    __break(0x5500u);
    goto LABEL_21;
  }
  unsigned int v5 = *(unsigned __int16 *)(v2 + 128);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
  if (result < v5)
  {
    syslog(4, "CIapPacket::%s:%d Not enough space available... failed to realign.\n", "RealignPacketBuffer", 1424);
    return 0;
  }
  int v6 = *(unsigned __int16 *)(v2 + 128);
  BOOL v7 = __CFADD__(a2, v6);
  int v8 = a2 + v6;
  if (v7) {
    goto LABEL_20;
  }
  uint64_t result = (v8 + 1);
  if (v8 == -1) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(v2 + 48) < result)
  {
    *(_DWORD *)(v2 + 48) = result;
    operator new[]();
  }
  *(_DWORD *)(v2 + 56) = a2;
  uint64_t v9 = *(void *)(v2 + 40);
  if (!__CFADD__(v9, a2))
  {
    int v10 = (void *)(v9 + a2);
    *(void *)(v2 + 24) = v10;
    *(void *)(v2 + 32) = v10;
    *(void *)(v2 + 96) = v10;
    *(void *)(v2 + 104) = v10;
    memmove(v10, v4, *(unsigned __int16 *)(v2 + 128));
    return *(void *)(v2 + 24);
  }
LABEL_21:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000C6590(uint64_t a1, unint64_t a2, unsigned char *a3, unint64_t a4, void *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_139;
  }
  if ((*(unsigned char *)(a1 + 132) & 4) != 0) {
    sub_1000F2364();
  }
  if (*(unsigned __int8 *)(a1 + 130) - 1 >= 0xB)
  {
    uint64_t v10 = 102;
    unsigned int v11 = a3;
    unsigned int v12 = a5;
    goto LABEL_135;
  }
  uint64_t v8 = sub_1000D289C();
  if (*(unsigned char *)(a1 + 130) != 1)
  {
    unint64_t v9 = *(unsigned int *)(a1 + 88);
    if (!v9) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(a1 + 80);
    BOOL v14 = a2 >= v13;
    unint64_t v15 = a2 - v13;
    if (v14)
    {
      LODWORD(v9) = v15 > v9;
      goto LABEL_12;
    }
LABEL_138:
    __break(0x5515u);
LABEL_139:
    __break(0x5516u);
LABEL_140:
    __break(0x5507u);
LABEL_141:
    __break(0x550Au);
LABEL_142:
    sub_1000F2384();
  }
  LODWORD(v9) = 0;
LABEL_12:
  *(void *)(a1 + 80) = a2;
  BOOL v17 = (v8 & 7) != 0 || v8 == 0;
  BOOL v63 = v17;
  BOOL v18 = 1;
  if (a4 || v9)
  {
    unint64_t v19 = 0;
    uint64_t v10 = 0;
    uint64_t v62 = v8;
    size_t v20 = a4;
    unsigned int v11 = a3;
    do
    {
      if (v9)
      {
        unsigned int v11 = a3;
        size_t v20 = a4;
        if (v19)
        {
          size_t v20 = a4 - (v19 - a3);
          if (a4 < v19 - a3) {
            goto LABEL_138;
          }
          unsigned int v11 = v19;
        }
        sub_1000C5DEC(a1);
        unint64_t v19 = 0;
        LOBYTE(v9) = 0;
        *(_WORD *)(a1 + 122) = 0;
        *(_DWORD *)(a1 + 64) = 15;
        *(_WORD *)(a1 + 126) = 0;
        *(unsigned char *)(a1 + 130) = 1;
      }
      else
      {
        if (!v11) {
          goto LABEL_139;
        }
        if (v11 == (unsigned char *)-1) {
          goto LABEL_137;
        }
        BOOL v14 = v20-- != 0;
        if (!v14) {
          goto LABEL_138;
        }
        __int16 v21 = v11 + 1;
        unsigned int v22 = *v11;
        switch(*(unsigned char *)(a1 + 130))
        {
          case 1:
            if (v22 == 85)
            {
              LOBYTE(v9) = 0;
              *(_WORD *)(a1 + 130) = 2;
              ++v11;
              unint64_t v19 = v21;
              break;
            }
            LOBYTE(v9) = 0;
            goto LABEL_120;
          case 2:
            if (v22 >= 2)
            {
              *(void *)(a1 + 24) = 0;
              sub_1000C5A04(a1, v22, 0xFFFFFFFFLL, 0, 1);
              uint64_t v23 = *(void *)(a1 + 96);
              if (v23)
              {
                LOBYTE(v9) = 0;
                *(unsigned char *)(a1 + 130) = 5;
                *(_WORD *)(a1 + 122) = v22;
                *(unsigned char *)(a1 + 131) += v22;
LABEL_44:
                *(void *)(a1 + 104) = v23;
              }
              else
              {
LABEL_119:
                LOBYTE(v9) = 0;
                *(unsigned char *)(a1 + 130) = 1;
                uint64_t v10 = 12;
              }
              goto LABEL_120;
            }
            if (*v11) {
              goto LABEL_113;
            }
            LOBYTE(v9) = 0;
            char v24 = 3;
            goto LABEL_38;
          case 3:
            LOBYTE(v9) = 0;
            *(unsigned char *)(a1 + 131) += v22;
            *(_WORD *)(a1 + 122) = (_WORD)v22 << 8;
            char v24 = 4;
            goto LABEL_38;
          case 4:
            *(void *)(a1 + 24) = 0;
            *(unsigned char *)(a1 + 131) += v22;
            unsigned int v25 = *(unsigned __int16 *)(a1 + 122) + v22;
            if (v25 >= 0x10000) {
              goto LABEL_140;
            }
            unsigned int v26 = (unsigned __int16)(*(_WORD *)(a1 + 122) + v22);
            *(_WORD *)(a1 + 122) = v25;
            if ((unsigned __int16)v25 < 2u || v26 > *(unsigned __int16 *)(a1 + 120)) {
              goto LABEL_113;
            }
            sub_1000C5A04(a1, v26, 0xFFFFFFFFLL, 0, 1);
            uint64_t v23 = *(void *)(a1 + 96);
            if (!v23) {
              goto LABEL_119;
            }
            LOBYTE(v9) = 0;
            *(unsigned char *)(a1 + 130) = 5;
            goto LABEL_44;
          case 5:
            if (v22 > 0xE) {
              goto LABEL_113;
            }
            *(unsigned char *)(a1 + 131) += v22;
            uint64_t v27 = *(unsigned char **)(a1 + 104);
            if (!v27) {
              goto LABEL_139;
            }
            *uint64_t v27 = v22;
            uint64_t v28 = *(void *)(a1 + 104);
            if (v28 == -1) {
              goto LABEL_137;
            }
            *(void *)(a1 + 104) = v28 + 1;
            *(_DWORD *)(a1 + 64) = v22;
            *(_WORD *)(a1 + 126) = 0;
            int v29 = *(unsigned __int16 *)(a1 + 122);
            if ((v29 - 2) >> 16) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 128) = v29 - 2;
            *(_WORD *)(a1 + 122) = v29 - 1;
            if (v22 != 4)
            {
              LOBYTE(v9) = 0;
              char v24 = 7;
              goto LABEL_38;
            }
            if ((((_WORD)v29 - 1) & 0xFFFE) == 0) {
              goto LABEL_113;
            }
            *(unsigned char *)(a1 + 130) = 6;
            __int16 v30 = v29 - 3;
            LODWORD(v9) = (v29 - 3) >> 16;
            if (v9) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 128) = v30;
            goto LABEL_120;
          case 6:
            *(_WORD *)(a1 + 126) = (_WORD)v22 << 8;
            *(unsigned char *)(a1 + 131) += v22;
            unsigned int v31 = *(unsigned char **)(a1 + 104);
            if (!v31) {
              goto LABEL_139;
            }
            *unsigned int v31 = v22;
            uint64_t v32 = *(void *)(a1 + 104);
            if (v32 == -1) {
              goto LABEL_137;
            }
            *(void *)(a1 + 104) = v32 + 1;
            *(unsigned char *)(a1 + 130) = 7;
            goto LABEL_68;
          case 7:
            *(_WORD *)(a1 + 126) |= v22;
            *(unsigned char *)(a1 + 131) += v22;
            unsigned int v33 = *(unsigned char **)(a1 + 104);
            if (!v33) {
              goto LABEL_139;
            }
            *unsigned int v33 = v22;
            uint64_t v34 = *(void *)(a1 + 104);
            if (v34 == -1) {
              goto LABEL_137;
            }
            *(void *)(a1 + 104) = v34 + 1;
            unsigned int v35 = *(unsigned __int16 *)(a1 + 122) - 1;
            if (HIWORD(v35)) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 122) = v35;
            if (v63) {
              goto LABEL_139;
            }
            int v36 = *(_DWORD *)(a1 + 64);
            if ((v36 + 32) > 0x3F) {
              goto LABEL_141;
            }
            sub_1000A104C(v62, *(void *)(a1 + 8), v36, *(unsigned __int16 *)(a1 + 126));
            if (sub_1000A10E4(v62, *(void *)(a1 + 8)))
            {
              if (*(unsigned __int16 *)(a1 + 122) < 2u)
              {
LABEL_113:
                LOBYTE(v9) = 1;
              }
              else
              {
                *(_DWORD *)(a1 + 68) = 0;
                unsigned int v37 = *(unsigned __int16 *)(a1 + 128) - 2;
                LODWORD(v9) = HIWORD(v37);
                if (HIWORD(v37)) {
                  goto LABEL_140;
                }
                *(_WORD *)(a1 + 128) = v37;
                char v24 = 8;
LABEL_38:
                *(unsigned char *)(a1 + 130) = v24;
              }
            }
            else
            {
              *(_DWORD *)(a1 + 68) = -1;
              LOWORD(v9) = *(_WORD *)(a1 + 128);
              if ((_WORD)v9)
              {
                LOBYTE(v9) = 0;
                *(unsigned char *)(a1 + 130) = 10;
                unint64_t v42 = *(void *)(a1 + 104);
LABEL_116:
                *(void *)(a1 + 24) = v42;
              }
              else
              {
LABEL_117:
                *(unsigned char *)(a1 + 130) = 11;
                *(void *)(a1 + 24) = 0;
              }
            }
LABEL_120:
            ++v11;
            break;
          case 8:
            *(unsigned char *)(a1 + 131) += v22;
            uint64_t v38 = *(unsigned char **)(a1 + 104);
            if (!v38) {
              goto LABEL_139;
            }
            *uint64_t v38 = v22;
            uint64_t v39 = *(void *)(a1 + 104);
            if (v39 == -1) {
              goto LABEL_137;
            }
            *(void *)(a1 + 104) = v39 + 1;
            *(unsigned char *)(a1 + 130) = 9;
            *(_DWORD *)(a1 + 68) = v22 << 8;
LABEL_68:
            unsigned int v40 = *(unsigned __int16 *)(a1 + 122) - 1;
            LODWORD(v9) = HIWORD(v40);
            if (HIWORD(v40)) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 122) = v40;
            goto LABEL_120;
          case 9:
            *(unsigned char *)(a1 + 131) += v22;
            uint64_t v41 = *(unsigned char **)(a1 + 104);
            if (!v41) {
              goto LABEL_139;
            }
            *uint64_t v41 = v22;
            unint64_t v9 = *(void *)(a1 + 104);
            if (v9 == -1) {
              goto LABEL_137;
            }
            unint64_t v42 = v9 + 1;
            *(void *)(a1 + 104) = v9 + 1;
            *(_DWORD *)(a1 + 68) |= v22;
            LODWORD(v9) = *(unsigned __int16 *)(a1 + 122) - 1;
            if (WORD1(v9)) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 122) = v9;
            LOWORD(v9) = *(_WORD *)(a1 + 128);
            if (!(_WORD)v9) {
              goto LABEL_117;
            }
            LOBYTE(v9) = 0;
            *(unsigned char *)(a1 + 130) = 10;
            goto LABEL_116;
          case 0xA:
            size_t v43 = v20 + 1;
            if (v20 == -1)
            {
              __break(0x5500u);
LABEL_144:
              __break(0x5512u);
              JUMPOUT(0x1000C6D5CLL);
            }
            size_t v44 = *(unsigned __int16 *)(a1 + 122);
            if (v43 >= v44) {
              size_t v45 = *(unsigned __int16 *)(a1 + 122);
            }
            else {
              size_t v45 = v20 + 1;
            }
            size_t v20 = v43 - v45;
            if (v43 < v45) {
              goto LABEL_138;
            }
            BOOL v14 = v44 >= v45;
            size_t v46 = v44 - v45;
            if (!v14) {
              goto LABEL_138;
            }
            if (v46 >> 16) {
              goto LABEL_140;
            }
            *(_WORD *)(a1 + 122) = v46;
            if (__CFADD__(v11, v45)) {
              goto LABEL_137;
            }
            memcpy(*(void **)(a1 + 104), v11, v45);
            if (v45)
            {
              tm v47 = &v11[v45];
              int v48 = *(unsigned __int8 *)(a1 + 131);
              size_t v49 = v45;
              do
              {
                v48 += *v11;
                *(unsigned char *)(a1 + 131) = v48;
                if (v11 == (unsigned char *)-1) {
                  goto LABEL_137;
                }
                ++v11;
                --v49;
              }
              while (v49);
              unsigned int v11 = v47;
            }
            unint64_t v9 = *(void *)(a1 + 104);
            if (__CFADD__(v9, v45)) {
              goto LABEL_137;
            }
            *(void *)(a1 + 104) = v9 + v45;
            LOWORD(v9) = *(_WORD *)(a1 + 122);
            if ((_WORD)v9) {
              LOBYTE(v9) = 0;
            }
            else {
              *(unsigned char *)(a1 + 130) = 11;
            }
            break;
          case 0xB:
            char v50 = *(unsigned char *)(a1 + 131) + v22;
            *(unsigned char *)(a1 + 131) = v50;
            if (v50) {
              goto LABEL_113;
            }
            pthread_once(&stru_10013B910, sub_1000D8E78);
            if (dword_10013B900[0])
            {
              sub_1000C58E0(*(void *)(a1 + 8));
              if (*(_DWORD *)(a1 + 144))
              {
                uint64_t v51 = *(void *)(a1 + 8);
                if (!v51 || (v51 & 7) != 0) {
                  goto LABEL_139;
                }
                unsigned int v52 = (*(uint64_t (**)(uint64_t))(*(void *)v51 + 216))(v51);
                if (v52 >= 5) {
                  goto LABEL_144;
                }
                if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)v52)
                {
LABEL_137:
                  __break(0x5513u);
                  goto LABEL_138;
                }
                uint64_t v53 = (unsigned int *)qword_10013C690[v52];
                if (v53) {
                  BOOL v54 = (qword_10013C690[v52] & 7) == 0;
                }
                else {
                  BOOL v54 = 0;
                }
                if (!v54) {
                  goto LABEL_139;
                }
                unsigned int v55 = sub_1000D92E0();
                unsigned int v56 = *(_DWORD *)(a1 + 144);
                uint64_t v57 = v55 - v56;
                if (v55 < v56) {
                  goto LABEL_138;
                }
                uint64_t v58 = v53[19];
                if (v58 >= 8) {
                  goto LABEL_141;
                }
                if (v58 >= 4) {
                  goto LABEL_144;
                }
                if (~(unint64_t)dword_10013B900 < 4 * v58) {
                  goto LABEL_137;
                }
                if (dword_10013B900[v58]) {
                  (*(void (**)(unsigned int *, uint64_t, void, void))(*(void *)v53 + 104))(v53, v57, 0, 0);
                }
              }
              unsigned int v59 = sub_1000D92E0();
            }
            else
            {
              unsigned int v59 = 0;
            }
            unint64_t v19 = 0;
            size_t v20 = 0;
            LOBYTE(v9) = 0;
            *(_DWORD *)(a1 + 144) = v59;
            *(_DWORD *)(a1 + 148) = 0;
            *(unsigned char *)(a1 + 130) = 12;
            *(void *)(a1 + 72) = a2;
            unsigned int v11 = v21;
            *(void *)(a1 + 104) = 0;
            break;
          default:
            goto LABEL_142;
        }
      }
      BOOL v60 = v20 != 0;
      if (v10) {
        BOOL v60 = 0;
      }
    }
    while (v60 || (v9 & 1) != 0);
    a4 = v20;
    BOOL v18 = v10 == 0;
  }
  else
  {
    uint64_t v10 = 0;
    unsigned int v11 = a3;
  }
  unsigned int v12 = a5;
  if (v18 && !a4)
  {
    if (*(unsigned __int8 *)(a1 + 130) >= 0xCu) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = 36;
    }
  }
LABEL_135:
  *unsigned int v12 = v11 - a3;
  return v10;
}

uint64_t sub_1000C6D88(uint64_t result, const void *a2, size_t __n)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  if (__n)
  {
    unsigned int v3 = *(_DWORD *)(result + 56);
    if (v3 <= __n)
    {
      __break(0x5518u);
    }
    else
    {
      unint64_t v4 = *(void *)(result + 32);
      if (__n <= v4)
      {
        unsigned int v5 = (void *)(v4 - __n);
        *(void *)(result + 32) = v5;
        unint64_t v6 = *(void *)(result + 24);
        if (__n <= v6)
        {
          *(void *)(result + 24) = v6 - __n;
          unsigned int v7 = *(unsigned __int16 *)(result + 128) + __n;
          if (v7 < 0x10000)
          {
            *(_WORD *)(result + 128) = v7;
            BOOL v8 = v3 >= __n;
            int v9 = v3 - __n;
            if (v8)
            {
              *(_DWORD *)(result + 56) = v9;
              return (uint64_t)memcpy(v5, a2, __n);
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(0x5507u);
LABEL_16:
          __break(0x5515u);
          return result;
        }
      }
    }
    __break(0x5513u);
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1000C6E1C(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v1 = (unsigned char *)result;
  if ((result & 7) != 0) {
    goto LABEL_37;
  }
  if (*(unsigned char *)(result + 134))
  {
    --*(unsigned char *)(result + 134);
    return result;
  }
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if (dword_10013B900[0])
  {
    uint64_t v2 = v1 + 144;
    if (((unint64_t)(v1 + 144) & 7) != 0) {
      goto LABEL_37;
    }
    if (*v2)
    {
      unsigned int v3 = (uint64_t *)(v1 + 8);
      if (((unint64_t)(v1 + 8) & 7) != 0) {
        goto LABEL_37;
      }
      uint64_t result = *v3;
      if (!*v3 || (result & 7) != 0) {
        goto LABEL_37;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
      if (result >= 5)
      {
LABEL_38:
        __break(0x5512u);
        goto LABEL_39;
      }
      if (~(unint64_t)qword_10013C690 < 8 * (unint64_t)result) {
        goto LABEL_39;
      }
      unint64_t v4 = (unsigned int *)qword_10013C690[result];
      if (v4) {
        BOOL v5 = (qword_10013C690[result] & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_37;
      }
      uint64_t result = (uint64_t)sub_1000D92E0();
      if (result < *v2)
      {
LABEL_40:
        __break(0x5515u);
        goto LABEL_41;
      }
      uint64_t v6 = v4[19];
      if (v6 >= 8)
      {
LABEL_41:
        __break(0x550Au);
        return result;
      }
      if (v6 >= 4) {
        goto LABEL_38;
      }
      if (~(unint64_t)dword_10013B900 < 4 * v6)
      {
LABEL_39:
        __break(0x5513u);
        goto LABEL_40;
      }
      if (dword_10013B900[v6]) {
        (*(void (**)(unsigned int *, void, void, void))(*(void *)v4 + 104))(v4, (result - *v2), 0, 0);
      }
      *uint64_t v2 = 0;
    }
  }
  if ((v1[132] & 4) == 0)
  {
    unsigned int v7 = *(uint64_t (**)(unsigned char *))(*(void *)v1 + 8);
    return v7(v1);
  }
  uint64_t result = sub_100051084();
  if (!result || (result & 7) != 0 || !v8 || (v8 & 7) != 0)
  {
LABEL_37:
    __break(0x5516u);
    goto LABEL_38;
  }
  int v9 = *(uint64_t (**)(void))(*(void *)result + 104);
  return v9();
}

uint64_t sub_1000C7080(uint64_t result, int a2, __int16 a3)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  sub_1000C50F0(result);
  *(void *)uint64_t v3 = off_100126CF8;
  *(_DWORD *)(v3 + 152) = a2;
  *(_WORD *)(v3 + 156) = a3;
  *(unsigned char *)(v3 + 132) |= 4u;
  uint64_t result = sub_1000DC6C0(a2);
  if (!result) {
    sub_1000F2364();
  }
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v6 = sub_10001CE30(result);
  if (!v6) {
    sub_1000F2364();
  }
  sub_1000C52D0(v3, v6, 0, 0xFFFFFFFFLL, 0, -1, 0, 0);
  uint64_t result = *(void *)(v3 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144))(result);
    if (!WORD1(result))
    {
      sub_1000C5A04(v3, result - 2, 0, 2, 0);
      return v3;
    }
  }
  __break(0x5507u);
  return result;
}

uint64_t sub_1000C71A0(uint64_t result, int a2, __int16 a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000C7080(result, a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C71B4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C5BEC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C71C8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C5BEC(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7210(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 128);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7228(uint64_t result)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if ((*(_DWORD *)(v1 + 64) + 32) >= 0x40)
  {
LABEL_22:
    __break(0x550Au);
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result);
  unsigned int v3 = *(_DWORD *)(v1 + 60);
  BOOL v4 = result >= v3;
  unsigned int v5 = result - v3;
  if (!v4) {
    goto LABEL_19;
  }
  uint64_t v6 = *(unsigned __int16 *)(v1 + 128);
  BOOL v4 = v5 >= v6;
  uint64_t v7 = v5 - v6;
  if (!v4) {
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(unsigned int *)(v1 + 48);
  if (__CFADD__(v8, v9)) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(v1 + 24);
  if (__CFADD__(v10, v6)) {
    goto LABEL_21;
  }
  uint64_t v11 = v8 + v9 - v10 - v6;
  BOOL v12 = __OFSUB__(v11, 1);
  unint64_t v13 = v11 - 1;
  if (v12)
  {
LABEL_19:
    __break(0x5515u);
LABEL_20:
    __break(0x5516u);
LABEL_21:
    __break(0x5513u);
    goto LABEL_22;
  }
  if (v13 >= v7) {
    return v7;
  }
  else {
    return v13;
  }
}

uint64_t sub_1000C72FC(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t v1 = *(void *)(result + 40);
  if (!v1)
  {
    __break(0x5518u);
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }
  uint64_t v2 = *(unsigned int *)(result + 52);
  *(_DWORD *)(result + 56) = v2;
  if (!__CFADD__(v1, v2))
  {
    uint64_t v3 = v1 + v2;
    *(_WORD *)(result + 124) = 0;
    *(void *)(result + 24) = v3;
    *(void *)(result + 32) = v3;
    *(_WORD *)(result + 128) = 0;
    *(void *)(result + 96) = v3;
    *(void *)(result + 104) = v3;
    return result;
  }
LABEL_8:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000C7344(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 32);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C735C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 124);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7374(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 133);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C738C(uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, char a6, unsigned int a7, uint64_t a8)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (a4 >= 8
    || (uint64_t result = sub_10002C4A4(result, a2, a3, a4, a5, 0, 0),
        *(void *)uint64_t v8 = off_100126D68,
        *(void *)(v8 + 160) = 0,
        *(void *)(v8 + 168) = 0,
        *(void *)(v8 + 152) = a8,
        *(unsigned char *)(v8 + 178) = a6,
        a7 > 3))
  {
    __break(0x550Au);
LABEL_13:
    __break(0x5516u);
    return result;
  }
  *(_DWORD *)(v8 + 180) = a7;
  *(unsigned char *)(v8 + 190) = 0;
  *(void *)(v8 + 192) = 0;
  *(void *)(v8 + 200) = 0x7FFF00000000;
  uint64_t result = pthread_mutex_init((pthread_mutex_t *)(v8 + 216), 0);
  *(_WORD *)(v8 + 8) = 1024;
  *(_DWORD *)(v8 + 12) = 0;
  if (!a8 || (a8 & 7) != 0) {
    goto LABEL_13;
  }
  *(void *)(v8 + 40) = sub_1000622A4(a8);
  uint64_t v12 = sub_1000D289C();
  *(void *)(v8 + 144) = v12;
  if (!v12) {
    sub_1000EE4F4(0, 4, "%s:%d NULL == m_pProtocolMgr\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPortVport.cpp", 74);
  }
  if (!*(void *)(v8 + 152)) {
    sub_1000EE4F4(0, 4, "%s:%d NULL == m_sourceConnection\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPortVport.cpp", 79);
  }
  return v8;
}

uint64_t sub_1000C74C0(uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, char a6, unsigned int a7, uint64_t a8)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a4 <= 7 && a7 < 4)
  {
    return sub_1000C738C(result, a2, a3, a4, a5, a6, a7, a8);
  }
  __break(0x550Au);
  return result;
}

NSObject *sub_1000C74EC(NSObject *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result->isa = (Class)off_100126D68;
    sub_1000C6E1C((uint64_t)result[21].isa);
    v1[21].isa = 0;
    pthread_mutex_destroy((pthread_mutex_t *)&v1[27]);
    return sub_10002C7FC(v1);
  }
  return result;
}

NSObject *sub_1000C7560(NSObject *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C74EC(result);
  }
  __break(0x5516u);
  return result;
}

NSObject *sub_1000C7574(NSObject *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C74EC(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void sub_1000C75BC(uint64_t a1, const void *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_33;
  }
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 152);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        uint64_t v5 = sub_10001CE30(v4);
        if (!v5) {
          sub_1000F2364();
        }
        if ((a2 & 7) == 0)
        {
          uint64_t v6 = v5;
          unsigned int v7 = (*(uint64_t (**)(const void *))(*(void *)a2 + 24))(a2);
          if ((v6 & 7) == 0)
          {
            unsigned int v8 = v7;
            unsigned int v9 = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 136))(v6, 0);
            uint64_t v10 = (*(uint64_t (**)(const void *))(*(void *)a2 + 16))(a2);
            if (v8)
            {
              uint64_t v11 = v10;
              while (1)
              {
                uint64_t v12 = v8 >= v9 ? v9 : v8;
                char v13 = sub_1000980F8(*(void *)(a1 + 152), *(unsigned __int8 *)(a1 + 178), v11, v12);
                BOOL v14 = v8 >= v12;
                v8 -= v12;
                if (!v14) {
                  break;
                }
                if (__CFADD__(v11, v12)) {
                  goto LABEL_32;
                }
                v11 += v12;
                if (v8) {
                  char v15 = v13;
                }
                else {
                  char v15 = 0;
                }
                if ((v15 & 1) == 0) {
                  goto LABEL_29;
                }
              }
              __break(0x5515u);
LABEL_32:
              __break(0x5513u);
              goto LABEL_33;
            }
            goto LABEL_29;
          }
        }
      }
      goto LABEL_33;
    }
  }
  if (*(unsigned __int8 *)(a1 + 190) < 2u)
  {
    if (*(unsigned char *)(a1 + 190))
    {
      if (a2) {
        goto LABEL_25;
      }
    }
    else
    {
      syslog(4, "CIapPortVPort::PortTransmitPacket: Interface not valid or iAP packet not initialized\n");
      if (a2)
      {
LABEL_25:
        if ((a2 & 7) == 0)
        {
LABEL_29:
          goto LABEL_30;
        }
LABEL_33:
        __break(0x5516u);
        goto LABEL_34;
      }
    }
    pthread_t v16 = 0;
LABEL_30:
    sub_1000C6E1C((uint64_t)v16);
    return;
  }
LABEL_34:
  __break(0x550Au);
}

uint64_t sub_1000C77C4(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_30:
    __break(0x5516u);
    goto LABEL_31;
  }
  if (a2)
  {
    uint64_t result = *(void *)(result + 152);
    if (result)
    {
      if ((result & 7) == 0)
      {
        uint64_t result = sub_10001CE30(result);
        if (!result) {
          sub_1000F2364();
        }
        if ((result & 7) == 0)
        {
          unsigned int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 136))(result, 0);
          if (!a3) {
LABEL_27:
          }
            operator delete();
          unsigned int v7 = v6;
          uint64_t v8 = a2;
          while (1)
          {
            uint64_t v9 = a3 >= v7 ? v7 : a3;
            uint64_t result = sub_1000980F8(*(void *)(v3 + 152), *(unsigned __int8 *)(v3 + 178), v8, v9);
            BOOL v10 = a3 >= v9;
            a3 -= v9;
            if (!v10) {
              break;
            }
            if (__CFADD__(v8, v9)) {
              goto LABEL_29;
            }
            v8 += v9;
            if (a3) {
              char v11 = result;
            }
            else {
              char v11 = 0;
            }
            if ((v11 & 1) == 0) {
              goto LABEL_27;
            }
          }
          __break(0x5515u);
LABEL_29:
          __break(0x5513u);
        }
      }
      goto LABEL_30;
    }
  }
  if (*(unsigned __int8 *)(v3 + 190) >= 2u)
  {
LABEL_31:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(v3 + 190)) {
    syslog(4, "CIapPortVPort::PortTransmitData: Interface not valid or iAP packet not initialized\n");
  }
  if (a2) {
    operator delete();
  }
  return 6;
}

uint64_t sub_1000C7934(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  uint64_t v1 = *(void *)(result + 152);
  if (v1)
  {
    if ((v1 & 7) == 0)
    {
      uint64_t result = sub_10001CE30(*(void *)(result + 152));
      if (!result) {
        return result;
      }
      if ((result & 7) == 0)
      {
        uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 40);
        return v2();
      }
    }
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(result + 190) >= 2u)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 190)) {
    syslog(4, "CIapPortVPort::PortWaitSendDone: Interface not valid\n");
  }
  return 6;
}

void sub_1000C79F0(uint64_t a1, unsigned char *a2, unsigned int a3)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a2)
    {
      syslog(4, "CIapPortVPort::HandleReceiveBuffer: null buffer!\n");
      return;
    }
    unint64_t v5 = a3;
    v13[0] = 0xAAAAAAAAAAAAAAAALL;
    v13[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_10002EDDC((uint64_t)v13);
    v12[0] = 0xAAAAAAAAAAAAAAAALL;
    v12[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000EE3E8((uint64_t)v13, v12);
    unsigned int v6 = sub_10002DC04(v12);
    unsigned int v7 = a2;
    while (1)
    {
      unint64_t v14 = 0;
      uint64_t v8 = *(void *)(a1 + 168);
      if (!v8) {
        sub_1000C5804();
      }
      if ((v8 & 7) != 0) {
        break;
      }
      int v9 = sub_1000C6590(v8, (unint64_t)v6, v7, v5, &v14);
      if (v9 == 102)
      {
        sub_1000C6E1C(*(void *)(a1 + 168));
        *(void *)(a1 + 168) = 0;
        unint64_t v14 = 0;
      }
      else if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 144);
        if (!v10 || (v10 & 7) != 0) {
          break;
        }
        sub_1000D3294(v10, *(void *)(a1 + 168));
        *(void *)(a1 + 168) = 0;
      }
      if (__CFADD__(v7, v14)) {
        goto LABEL_21;
      }
      unint64_t v11 = v5 - v14;
      if (v5 < v14) {
        goto LABEL_22;
      }
      if (HIDWORD(v11)) {
        goto LABEL_23;
      }
      v7 += v14;
      unint64_t v5 = (v5 - v14);
      if (!v11)
      {
        v13[0] = off_100123868;
        sub_1000EE300(v13);
        return;
      }
    }
  }
  __break(0x5516u);
LABEL_21:
  __break(0x5513u);
LABEL_22:
  __break(0x5515u);
LABEL_23:
  __break(0x5507u);
}

uint64_t sub_1000C7B68(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C7B7C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C7B90(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 144);
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48))(result, a2, a3, v3, 0);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7BE4(uint64_t result, __int16 a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_11;
  }
  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }
  if (v3 == 1)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    __int16 v5 = *(_WORD *)(v2 + 194) & 0xFFFE | a2;
    *(_WORD *)(v2 + 194) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v7 = *(unsigned __int8 *)(v2 + 178);
    unsigned int v8 = *(unsigned __int16 *)(v2 + 192);
    return sub_1000982C4(v6, v2, v7, v8, v5);
  }
  return result;
}

uint64_t sub_1000C7C98(uint64_t result, __int16 a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_11;
  }
  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }
  if (v3 == 1)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    unsigned __int16 v5 = *(_WORD *)(v2 + 192) & 0xFFFE | a2;
    *(_WORD *)(v2 + 192) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v7 = *(unsigned __int8 *)(v2 + 178);
    __int16 v8 = *(_WORD *)(v2 + 194);
    return sub_1000982C4(v6, v2, v7, v5, v8);
  }
  return result;
}

uint64_t sub_1000C7D4C(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_14;
  }
  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (v3 == 1)
  {
    __int16 v5 = *(_WORD *)(result + 192);
    __int16 v6 = *(_WORD *)(result + 194);
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    if (a2) {
      __int16 v7 = 2;
    }
    else {
      __int16 v7 = 0;
    }
    *(_WORD *)(v2 + 192) = v5 & 0xFFFD | v7;
    *(_WORD *)(v2 + 194) = v6;
    uint64_t v8 = *(void *)(v2 + 152);
    uint64_t v9 = *(unsigned __int8 *)(v2 + 178);
    return sub_1000982C4(v8, v2, v9, v5 & 0xFFFDu | (unsigned __int16)v7, v6);
  }
  return result;
}

uint64_t sub_1000C7E20(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_14;
  }
  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (v3 == 1)
  {
    __int16 v5 = *(_WORD *)(result + 192);
    __int16 v6 = *(_WORD *)(result + 194);
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    if (a2) {
      __int16 v7 = 3;
    }
    else {
      __int16 v7 = 0;
    }
    *(_WORD *)(v2 + 192) = v5 & 0xFFFC | v7;
    *(_WORD *)(v2 + 194) = v6;
    uint64_t v8 = *(void *)(v2 + 152);
    uint64_t v9 = *(unsigned __int8 *)(v2 + 178);
    return sub_1000982C4(v8, v2, v9, v5 & 0xFFFCu | (unsigned __int16)v7, v6);
  }
  return result;
}

BOOL sub_1000C7EF4(BOOL result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (a2 >= 8 || (unsigned int v2 = *(_DWORD *)(result + 180), v2 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }
  return v2 == 1 && ((1 << a2) & *(unsigned __int16 *)(result + 186)) != 0;
}

BOOL sub_1000C7F40(BOOL result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (a2 >= 2 || (unsigned int v2 = *(_DWORD *)(result + 180), v2 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }
  return v2 == 1 && ((1 << a2) & *(unsigned __int16 *)(result + 184)) != 0;
}

const char *sub_1000C7F8C(const char *result)
{
  if (result && (result & 7) == 0) {
    return "VPort";
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7FA8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 3;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7FC0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7FD8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7FF0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8008(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 100;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8020(uint64_t result)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  unsigned int v2 = (*(uint64_t (**)(uint64_t))(*(void *)result + 288))(result);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 384))(v1);
  if (v2 >= 4)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }
  if (v2 == 1 || result == 0) {
    return 512;
  }
  if ((result & 7) != 0)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 160);
  return v4();
}

uint64_t sub_1000C8114(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if ((*(_WORD *)(result + 186) & 0x40) == 0) {
    return 0;
  }
  uint64_t result = *(void *)(result + 152);
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10001CE30(result)) == 0 || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 248);
    return v1();
  }
  return result;
}

uint64_t sub_1000C819C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if ((*(_WORD *)(result + 186) & 0x40) == 0) {
    return 0;
  }
  uint64_t result = *(void *)(result + 152);
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10001CE30(result)) == 0 || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 256);
    return v1();
  }
  return result;
}

uint64_t sub_1000C822C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2 || !*(void *)(result + 152))
    {
      *(void *)(result + 152) = a2;
      return result;
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8254(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 152);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C826C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }
  uint64_t result = *(void *)(result + 152);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_10001CE30(result);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1000C8294(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 180);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000C82B8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2 || (uint64_t v2 = *(void *)(result + 160)) == 0 || v2 == a2)
    {
      *(void *)(result + 160) = a2;
      return result;
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C82E8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 160);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000C8300(BOOL result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0;
    }
    if ((a2 & 7) == 0 && ((a2 + 84) & 3) == 0) {
      return *(_DWORD *)(result + 84) == *(_DWORD *)(a2 + 84);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8344(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10000C538(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8358(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000D1DE0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C836C(uint64_t result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 32) & 7) != 0 || (((_BYTE)result + 16) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8398(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || (((_BYTE)result + 0x80) & 7) != 0
    || (((_BYTE)result + 112) & 7) != 0
    || (((_BYTE)result + 96) & 7) != 0
    || (((_BYTE)result + 80) & 7) != 0
    || (((_BYTE)result + 64) & 7) != 0
    || (((_BYTE)result + 48) & 7) != 0
    || (((_BYTE)result + 32) & 7) != 0
    || (((_BYTE)result + 16) & 7) != 0)
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C840C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8420(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  *(void *)uint64_t result = off_100126F28;
  *(void *)(result + 8) = a2;
  result += 16;
  if (((unint64_t)(v2 + 2) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CC3D0(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 14);
  if (((unint64_t)(v2 + 14) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CB3E0(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 26);
  if (((unint64_t)(v2 + 26) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CBF70(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 42);
  if (((unint64_t)(v2 + 42) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CE10C(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 54);
  if (((unint64_t)(v2 + 54) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CE754(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 66);
  if (((unint64_t)(v2 + 66) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CEB10(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 78);
  if (((unint64_t)(v2 + 78) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CEE80(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 90);
  if (((unint64_t)(v2 + 90) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CF524(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 102);
  if (((unint64_t)(v2 + 102) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CFAC8(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 114);
  if (((unint64_t)(v2 + 114) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA6FC(result, a2, (uint64_t)v2);
  uint64_t result = (uint64_t)(v2 + 126);
  if (((unint64_t)(v2 + 126) & 7) != 0
    || (sub_1000CFF1C(result, a2, (uint64_t)v2), uint64_t result = (uint64_t)(v2 + 138), ((unint64_t)(v2 + 138) & 7) != 0)
    || (sub_1000D0538(result, a2, (uint64_t)v2), uint64_t result = (uint64_t)(v2 + 150), ((unint64_t)(v2 + 150) & 7) != 0)
    || (sub_1000D0AB4(result, a2, (uint64_t)v2), uint64_t result = (uint64_t)(v2 + 162), ((unint64_t)(v2 + 162) & 7) != 0)
    || (uint64_t result = sub_1000CB02C(result, a2, (uint64_t)v2), ((unint64_t)(v2 + 174) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
  }
  else
  {
    v2[174] = off_100126F48;
    v2[175] = v2;
    v2[176] = a2;
    v2[177] = 0;
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1000C85F8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000C8420(result, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C860C(uint64_t result)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  *(void *)uint64_t result = off_100126F28;
  uint64_t result = sub_1000C8754(result, 0);
  if ((((_BYTE)v1 + 112) & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = v1 + 1296;
  if (((v1 + 1296) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 1200;
  if (((v1 + 1200) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 1104;
  if (((v1 + 1104) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 1008;
  if (((v1 + 1008) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 912;
  if (((v1 + 912) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 816;
  if (((v1 + 816) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 720;
  if (((v1 + 720) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 624;
  if (((v1 + 624) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 528;
  if (((v1 + 528) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 432;
  if (((v1 + 432) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000CA8A4(result);
  uint64_t result = v1 + 336;
  if (((v1 + 336) & 7) != 0
    || (sub_1000CA8A4(result), uint64_t result = v1 + 208, ((v1 + 208) & 7) != 0)
    || (sub_1000CA8A4(result), uint64_t result = v1 + 112, ((v1 + 112) & 7) != 0)
    || (sub_1000CA8A4(result), uint64_t result = v1 + 16, ((v1 + 16) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
  }
  else
  {
    sub_1000CA8A4(result);
    return v1;
  }
  return result;
}

uint64_t sub_1000C8754(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176))(result))
  {
    uint64_t result = v2 + 16;
    if (((v2 + 16) & 7) != 0) {
      goto LABEL_28;
    }
    sub_1000C8E90(result, a2);
  }
  uint64_t result = v2 + 112;
  if (((v2 + 112) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C912C(result, a2);
  uint64_t result = v2 + 208;
  if (((v2 + 208) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9398(result, a2);
  uint64_t result = v2 + 336;
  if (((v2 + 336) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 432;
  if (((v2 + 432) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 528;
  if (((v2 + 528) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 624;
  if (((v2 + 624) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 720;
  if (((v2 + 720) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176))(result))
  {
    uint64_t result = v2 + 816;
    if (((v2 + 816) & 7) == 0)
    {
      sub_1000C9500(result, a2);
      goto LABEL_20;
    }
LABEL_28:
    __break(0x5516u);
    return result;
  }
LABEL_20:
  uint64_t result = v2 + 912;
  if (((v2 + 912) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 1008;
  if (((v2 + 1008) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 1104;
  if (((v2 + 1104) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 1200;
  if (((v2 + 1200) & 7) != 0) {
    goto LABEL_28;
  }
  sub_1000C9500(result, a2);
  uint64_t result = v2 + 1296;
  if (((v2 + 1296) & 7) != 0) {
    goto LABEL_28;
  }
  return sub_1000C9500(result, a2);
}

uint64_t sub_1000C891C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8930(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8944(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8958(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C896C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8980(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8994(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C89A8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C89BC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C89D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C89E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C89F8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8A0C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8A20(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8A34(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA8A4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8A48(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C860C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8A5C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000C860C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8AA4(uint64_t result)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = sub_10001CE30(result);
  if (result)
  {
    if ((result & 7) != 0)
    {
LABEL_32:
      __break(0x5516u);
      return result;
    }
    uint64_t result = *(void *)(result + 40);
  }
  else
  {
    uint64_t result = *(void *)(v1 + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_32;
    }
    uint64_t result = sub_1000622A4(result);
  }
  if ((((_BYTE)v1 + 112) & 7) != 0) {
    goto LABEL_32;
  }
  *(void *)(v1 + 1416) = result;
  uint64_t result = v1 + 16;
  if (((v1 + 16) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8C10(result);
  uint64_t result = v1 + 112;
  if (((v1 + 112) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 208;
  if (((v1 + 208) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8C44(result);
  uint64_t result = v1 + 336;
  if (((v1 + 336) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8C64(result);
  uint64_t result = v1 + 432;
  if (((v1 + 432) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8C84(result);
  uint64_t result = v1 + 528;
  if (((v1 + 528) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8CC0(result);
  uint64_t result = v1 + 624;
  if (((v1 + 624) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 720;
  if (((v1 + 720) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 816;
  if (((v1 + 816) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8D24(result);
  uint64_t result = v1 + 912;
  if (((v1 + 912) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000C8D44(result);
  uint64_t result = v1 + 1008;
  if (((v1 + 1008) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 1104;
  if (((v1 + 1104) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 1200;
  if (((v1 + 1200) & 7) != 0) {
    goto LABEL_32;
  }
  sub_1000CA9C0(result);
  uint64_t result = v1 + 1296;
  if (((v1 + 1296) & 7) != 0) {
    goto LABEL_32;
  }
  return sub_1000C8E00(result);
}

uint64_t sub_1000C8C10(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000CA9C0(result);
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8C30(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8C44(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000CA9C0(result);
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8C64(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000CA9C0(result);
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8C84(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((uint64_t v1 = *(void *)(result + 56)) != 0 ? (v2 = (*(void *)(result + 56) & 7) == 0) : (v2 = 0),
        v2 ? (BOOL v3 = (((_BYTE)v1 + 16) & 7) == 0) : (BOOL v3 = 0),
        v3))
  {
    *(_DWORD *)(v1 + 16) = 0;
    *(unsigned char *)(v1 + 9) = 0;
    return sub_1000CA9C0(result);
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8CC0(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((uint64_t v1 = *(void *)(result + 56)) != 0 ? (v2 = (*(void *)(result + 56) & 7) == 0) : (v2 = 0),
        v2 ? (BOOL v3 = (((_BYTE)v1 + 16) & 7) == 0) : (BOOL v3 = 0),
        v3))
  {
    *(_DWORD *)(v1 + 16) = 0;
    *(unsigned char *)(v1 + 9) = 0;
    return sub_1000CA9C0(result);
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8CFC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8D10(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8D24(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000CA9C0(result);
    }
    __break(0x5518u);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8D44(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 64))
  {
    __break(0x5518u);
LABEL_11:
    __break(0x5516u);
    return result;
  }
  uint64_t result = _AXSVoiceOverTouchEnabled();
  uint64_t v2 = *(void *)(v1 + 56);
  if (!v2 || (v2 & 7) != 0 || (((_BYTE)v2 + 16) & 7) != 0) {
    goto LABEL_11;
  }
  *(_DWORD *)(v2 + 16) = result != 0;
  *(unsigned char *)(v2 + 9) = 0;
  return sub_1000CA9C0(v1);
}

uint64_t sub_1000C8DC4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8DD8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8DEC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CA9C0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8E00(uint64_t result)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  if (!*(void *)(result + 64))
  {
    __break(0x5518u);
LABEL_14:
    __break(0x5516u);
    return result;
  }
  uint64_t result = _AXSAssistiveTouchHardwareEnabled();
  if (result)
  {
    BOOL v2 = 1;
  }
  else
  {
    uint64_t result = _AXSAssistiveTouchEnabled();
    BOOL v2 = result != 0;
  }
  uint64_t v3 = *(void *)(v1 + 56);
  if (!v3 || (v3 & 7) != 0 || (((_BYTE)v3 + 16) & 7) != 0) {
    goto LABEL_14;
  }
  *(_DWORD *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 9) = 0;
  return sub_1000CA9C0(v1);
}

uint64_t sub_1000C8E90(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_36;
  }
  BOOL v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  if (a2)
  {
    sub_1000CDDD8(result);
    return sub_1000C9500((uint64_t)v2, a2);
  }
  sub_1000CD94C(result, 0, 1);
  if (!(*(unsigned int (**)(void *))(*v2 + 152))(v2)) {
    return sub_1000C9500((uint64_t)v2, a2);
  }
  uint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 176))(result)) {
    return sub_1000C9500((uint64_t)v2, a2);
  }
  uint64_t result = v2[2];
  if (!result) {
    goto LABEL_36;
  }
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v4 = sub_10001CE30(result);
  uint64_t result = v2[2];
  if (!result) {
    goto LABEL_36;
  }
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v5 = sub_1000622A4(result);
  uint64_t result = sub_10005176C();
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  if (v4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 592))(result, v6);
  uint64_t v11 = 0;
  uint64_t result = sub_10006DBC0((_DWORD *)&v11 + 1, (int *)&v11);
  if (result > 0x1F) {
    goto LABEL_37;
  }
  if (result) {
    return sub_1000C9500((uint64_t)v2, a2);
  }
  if (HIDWORD(v11) > 3) {
    goto LABEL_37;
  }
  if (HIDWORD(v11) != 1) {
    return sub_1000C9500((uint64_t)v2, a2);
  }
  if (v11 > 7) {
    goto LABEL_37;
  }
  if (!v11) {
    return sub_1000C9500((uint64_t)v2, a2);
  }
  uint64_t result = sub_10003E5D0();
  if (!result)
  {
    __break(0x5518u);
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384))(result);
  uint64_t v10 = result;
  if (!result)
  {
LABEL_33:
    sub_100072254(&v10);
    return sub_1000C9500((uint64_t)v2, a2);
  }
  uint64_t v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 288))(result)) {
    goto LABEL_33;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 352))(v9);
  if (result) {
    goto LABEL_33;
  }
  if (v7 <= 3)
  {
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v8 + 312))(v8);
    }
    goto LABEL_33;
  }
LABEL_37:
  __break(0x550Au);
  return result;
}

void sub_1000C912C(uint64_t a1, char a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_45;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 152))(a1)) {
    return;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    goto LABEL_45;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t v5 = sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t v7 = sub_1000622A4(v6);
  if (!v5) {
    uint64_t v5 = v7;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_45;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_45;
  }
  int v9 = sub_100063618(v8);
  uint64_t v10 = *(uint64_t **)(a1 + 56);
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_45;
  }
  int v11 = v9;
  uint64_t v12 = *v10;
  if (!v12) {
    goto LABEL_22;
  }
  if ((v12 & 7) != 0 || ((v12 + 8) & 7) != 0) {
    goto LABEL_45;
  }
  if (*(unsigned __int8 *)(v12 + 8) >= 2u)
  {
LABEL_46:
    __break(0x550Au);
    return;
  }
  if (*(unsigned char *)(v12 + 8))
  {
    char v13 = (_DWORD *)(v12 + 12);
    if ((v13 & 3) == 0)
    {
      if (*v13) {
        sub_1000EE4F4(0, 4, "%s:%d unexpected line out on saved !\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1706);
      }
      goto LABEL_22;
    }
LABEL_45:
    __break(0x5516u);
    goto LABEL_46;
  }
LABEL_22:
  if (!v5 || !sub_100070E9C(v5)) {
    return;
  }
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    goto LABEL_45;
  }
  if ((v14 & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t v15 = sub_10006346C(v14);
  if (!v15) {
    goto LABEL_45;
  }
  if ((v15 & 7) != 0) {
    goto LABEL_45;
  }
  pthread_t v16 = (const void *)(v15 + 432);
  if ((v16 & 7) != 0) {
    goto LABEL_45;
  }
  if (v11 != (char)v11) {
    goto LABEL_46;
  }
  if (v11 == 14) {
    goto LABEL_34;
  }
  if ((v17 & 7) != 0 || !v17) {
    goto LABEL_45;
  }
  if (!(*(unsigned int (**)(void *, void))(*(void *)v17 + 80))(v17, 0))
  {
    if (a2) {
      return;
    }
    uint64_t v18 = a1;
    int v19 = 0;
    goto LABEL_42;
  }
LABEL_34:
  uint64_t v18 = a1;
  if (a2)
  {
    int v19 = 1;
LABEL_42:
    sub_1000CBAB0(v18, v19, 0, 1);
    return;
  }
  sub_1000CBC34(a1, v5, 0);
}

void sub_1000C9398(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_23;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 152))(a1)) {
    return;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4
    || (v4 & 7) != 0
    || (v5 = sub_10001CE30(v4), (uint64_t v6 = *(uint64_t **)(a1 + 56)) == 0)
    || (v6 & 7) != 0
    || (uint64_t v7 = *v6) == 0
    || (v7 & 7) != 0
    || ((v7 + 8) & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }
  if (*(unsigned __int8 *)(v7 + 8) >= 2u)
  {
LABEL_24:
    __break(0x550Au);
    return;
  }
  uint64_t v8 = v5;
  if (*(unsigned char *)(v7 + 8))
  {
    int v9 = (_DWORD *)(v7 + 12);
    if ((v9 & 3) == 0)
    {
      if (*v9) {
        sub_1000EE4F4(0, 4, "%s:%d unexpected line in on saved !\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 2122);
      }
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_16:
  if (v8 && sub_100070F9C(v8) && (*(unsigned int (**)(uint64_t))(*(void *)a1 + 152))(a1))
  {
    sub_1000C9500(a1, a2);
  }
}

uint64_t sub_1000C9500(uint64_t result, uint64_t a2)
{
  if (!result || (BOOL v2 = (_DWORD *)result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = *(void *)result;
    if (*(_DWORD *)(result + 88))
    {
      uint64_t v5 = 0;
      do
      {
        (*(void (**)(_DWORD *, uint64_t, uint64_t, void))(v3 + 24))(v2, v5, a2, 0);
        uint64_t v5 = (v5 + 1);
        uint64_t v3 = *(void *)v2;
      }
      while (v5 < v2[22]);
    }
    uint64_t result = (*(uint64_t (**)(_DWORD *))(v3 + 152))(v2);
    if (result)
    {
      if ((*(unsigned int (**)(_DWORD *))(*(void *)v2 + 160))(v2)) {
        (*(void (**)(_DWORD *, void))(*(void *)v2 + 40))(v2, 0);
      }
      uint64_t v6 = *(uint64_t (**)(_DWORD *))(*(void *)v2 + 184);
      return v6(v2);
    }
  }
  return result;
}

uint64_t sub_1000C967C(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    JUMPOUT(0x1000C9744);
  }
  if (a2 >= 0x10)
  {
    __break(0x550Au);
    goto LABEL_23;
  }
  switch(a2)
  {
    case 0u:
      uint64_t result = a1 + 112;
      goto LABEL_19;
    case 1u:
      uint64_t result = a1 + 208;
      goto LABEL_19;
    case 2u:
      uint64_t result = a1 + 16;
      goto LABEL_19;
    case 3u:
      uint64_t result = a1 + 336;
      goto LABEL_19;
    case 4u:
      uint64_t result = a1 + 624;
      goto LABEL_19;
    case 5u:
      uint64_t result = a1 + 432;
      goto LABEL_19;
    case 6u:
      uint64_t result = a1 + 720;
      goto LABEL_19;
    case 7u:
      uint64_t result = a1 + 816;
      goto LABEL_19;
    case 8u:
      uint64_t result = a1 + 528;
      goto LABEL_19;
    case 9u:
      uint64_t result = a1 + 912;
      goto LABEL_19;
    case 0xAu:
      uint64_t result = a1 + 1008;
      goto LABEL_19;
    case 0xBu:
      uint64_t result = a1 + 1104;
      goto LABEL_19;
    case 0xCu:
      uint64_t result = a1 + 1200;
      goto LABEL_19;
    case 0xDu:
      uint64_t result = a1 + 1296;
LABEL_19:
      if ((result & 7) == 0) {
        return result;
      }
      goto LABEL_23;
    default:
      return 0;
  }
}

uint64_t sub_1000C977C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (a2 >= 0x10)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (a2 > 0xD) {
    return 0;
  }
  else {
    return dword_1000FFFA0[a2];
  }
}

uint64_t sub_1000C97B8(unsigned __int8 *a1, int a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    JUMPOUT(0x1000C989CLL);
  }
  if (a2 == 0x4000 || a2 == 2048)
  {
    switch(a3)
    {
      case 0:
        uint64_t v3 = a1 + 112;
        goto LABEL_20;
      case 1:
        uint64_t v3 = a1 + 208;
        goto LABEL_20;
      case 2:
        uint64_t v3 = a1 + 16;
        goto LABEL_20;
      case 3:
        uint64_t v3 = a1 + 336;
        goto LABEL_20;
      case 4:
        uint64_t v3 = a1 + 624;
        goto LABEL_20;
      case 5:
        uint64_t v3 = a1 + 432;
        goto LABEL_20;
      case 6:
        uint64_t v3 = a1 + 720;
        goto LABEL_20;
      case 7:
        uint64_t v3 = a1 + 816;
        goto LABEL_20;
      case 8:
        uint64_t v3 = a1 + 528;
        goto LABEL_20;
      case 9:
        uint64_t v3 = a1 + 912;
        goto LABEL_20;
      case 10:
        uint64_t v3 = a1 + 1008;
        goto LABEL_20;
      case 11:
        uint64_t v3 = a1 + 1104;
        goto LABEL_20;
      case 12:
        uint64_t v3 = a1 + 1200;
        goto LABEL_20;
      case 13:
        uint64_t v3 = a1 + 1296;
LABEL_20:
        if ((v3 & 7) != 0) {
          goto LABEL_23;
        }
        sub_1000C98D4(v3, 1);
        break;
      default:
        return 0;
    }
  }
  return 0;
}

void sub_1000C98D4(unsigned __int8 *a1, int a2)
{
  if (!a1 || (uint64_t v3 = a1, (a1 & 7) != 0))
  {
LABEL_81:
    __break(0x5516u);
LABEL_82:
    __break(0x5513u);
LABEL_83:
    if (*((_DWORD *)v3 + 6) <= 0xFu)
    {
      syslog(3, "Unknown settings type(%d) for preference(%d) id(%d)\n", v2, *((_DWORD *)v3 + 6), v4);
      abort();
    }
    goto LABEL_85;
  }
  if (a1[36] >= 2u)
  {
LABEL_85:
    __break(0x550Au);
    return;
  }
  if (a1[36] || (a2)
    && (*(unsigned int (**)(unsigned __int8 *))(*(void *)a1 + 176))(a1)
    && (!(*(unsigned int (**)(void *))(*v3 + 48))(v3)
     || (*(unsigned int (**)(void *))(*v3 + 160))(v3)))
  {
    if (*((_DWORD *)v3 + 22))
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v6 = v3[7];
        if (__CFADD__(v6, 24 * v4)) {
          goto LABEL_82;
        }
        uint64_t v2 = v6 + 24 * v4;
        if (v6) {
          BOOL v7 = (v2 & 7) == 0;
        }
        else {
          BOOL v7 = 0;
        }
        if (!v7) {
          goto LABEL_81;
        }
        unsigned int v8 = *(unsigned __int8 *)(v2 + 8);
        if (v8 > 1) {
          goto LABEL_85;
        }
        if (*(unsigned char *)(v2 + 8)) {
          BOOL v9 = 0;
        }
        else {
          BOOL v9 = a2 == 0;
        }
        if (!v9)
        {
          if (*(unsigned char *)(v2 + 8)) {
            *(unsigned char *)(v2 + 9) = 1;
          }
          *(unsigned char *)(v2 + 8) = 0;
          uint64_t v2 = v3[10];
          if (__CFADD__(v2, 4 * v4)) {
            goto LABEL_82;
          }
          if (!v2) {
            goto LABEL_81;
          }
          v2 += 4 * v4;
          if ((v2 & 3) != 0) {
            goto LABEL_81;
          }
          LODWORD(v2) = *(_DWORD *)v2;
          if ((v2 + 4) > 7) {
            goto LABEL_85;
          }
          uint64_t v10 = 24 * v4;
          if (v2)
          {
            if (v2 != 1) {
              goto LABEL_83;
            }
            int v11 = (*(uint64_t (**)(void *, uint64_t))(*v3 + 120))(v3, v4);
            uint64_t v2 = v3[7];
            if (__CFADD__(v2, v10)) {
              goto LABEL_82;
            }
            if (!v2) {
              goto LABEL_81;
            }
            uint64_t v12 = v2 + 24 * v4;
            if ((v12 & 7) != 0) {
              goto LABEL_81;
            }
            char v13 = (unsigned char *)(v12 + 10);
            if ((v12 + 10)) {
              goto LABEL_81;
            }
            if (*v13 > 1u) {
              goto LABEL_85;
            }
            if (!*v13)
            {
              uint64_t v14 = v2 + 24 * v4 + 16;
              if ((v14 & 7) != 0) {
                goto LABEL_81;
              }
              *(_DWORD *)uint64_t v14 = v11;
              *char v13 = 1;
            }
            v2 += 24 * v4 + 16;
            if ((v2 & 7) != 0) {
              goto LABEL_81;
            }
            if (*(_DWORD *)v2 != v11) {
              goto LABEL_43;
            }
            if (a2)
            {
              unsigned int v15 = *(unsigned __int8 *)(v12 + 9);
              if (v15 > 1) {
                goto LABEL_85;
              }
              if (v15) {
LABEL_43:
              }
                (*(void (**)(void *, uint64_t))(*v3 + 144))(v3, v4);
            }
          }
          else
          {
            int v16 = (*(uint64_t (**)(void *, uint64_t))(*v3 + 112))(v3, v4);
            uint64_t v17 = v3[7];
            if (__CFADD__(v17, v10)) {
              goto LABEL_82;
            }
            if (!v17) {
              goto LABEL_81;
            }
            uint64_t v2 = v17 + 24 * v4;
            if ((v2 & 7) != 0) {
              goto LABEL_81;
            }
            v2 += 10;
            if (v2) {
              goto LABEL_81;
            }
            if (*(unsigned __int8 *)v2 > 1u) {
              goto LABEL_85;
            }
            int v18 = v16;
            if (!*(unsigned char *)v2)
            {
              uint64_t v19 = v17 + 24 * v4 + 16;
              if ((v19 & 7) != 0) {
                goto LABEL_81;
              }
              *(_DWORD *)uint64_t v19 = v16;
              *(unsigned char *)uint64_t v2 = 1;
            }
            unsigned __int8 v30 = 0;
            uint64_t v20 = (*(uint64_t (**)(void *, uint64_t, unsigned __int8 *, uint64_t))(*v3 + 104))(v3, v4, &v30, 1);
            if (v18 != v20) {
              goto LABEL_59;
            }
            if (a2)
            {
              uint64_t v21 = v3[7];
              if (__CFADD__(v21, v10)) {
                goto LABEL_82;
              }
              if (!v21) {
                goto LABEL_81;
              }
              uint64_t v22 = v21 + 24 * v4;
              LODWORD(v2) = v22 & 7;
              if ((v22 & 7) != 0) {
                goto LABEL_81;
              }
              unsigned int v23 = *(unsigned __int8 *)(v22 + 9);
              if (v23 > 1) {
                goto LABEL_85;
              }
              if (v23) {
LABEL_59:
              }
                (*(void (**)(void *, uint64_t, uint64_t))(*v3 + 136))(v3, v4, v20);
            }
            unsigned int v24 = *((_DWORD *)v3 + 7);
            if (v24 > 3) {
              goto LABEL_85;
            }
            if (v8 && v24 == 1)
            {
              if (v30 > 1u) {
                goto LABEL_85;
              }
              char v25 = v30 ? 0 : v18;
              if ((v25 & 1) == 0)
              {
                unsigned int v26 = *((_DWORD *)v3 + 6);
                if (v26 > 0xF) {
                  goto LABEL_85;
                }
                unsigned int v27 = *((_DWORD *)v3 + 8);
                if (v27 > 3) {
                  goto LABEL_85;
                }
                if (v27 == 1)
                {
                  uint64_t v28 = v3[2];
                  if (!v28 || (v28 & 7) != 0) {
                    goto LABEL_81;
                  }
                  uint64_t v29 = sub_10001CE30(v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                block[0] = _NSConcreteStackBlock;
                block[1] = 0x40000000;
                block[2] = sub_1000D20F4;
                block[3] = &unk_100127D68;
                unsigned int v32 = v26;
                block[4] = v29;
                dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
              }
            }
          }
        }
      }
      while (++v4 < (unint64_t)*((unsigned int *)v3 + 22));
    }
    *((unsigned char *)v3 + 36) = 0;
  }
  if ((*(unsigned int (**)(void *))(*v3 + 48))(v3)) {
    (*(void (**)(void *))(*v3 + 184))(v3);
  }
}

unint64_t sub_1000C9DDC(uint64_t a1, int a2, unsigned int a3)
{
  if (!a1
    || (a1 & 7) != 0
    || ((uint64_t v4 = *(void *)(a1 + 8)) != 0 ? (v5 = (v4 & 7) == 0) : (v5 = 0),
        !v5 || (uint64_t v8 = sub_10001CE30(v4), (v9 = *(void *)(a1 + 8)) == 0) || (v9 & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_23;
  }
  uint64_t v10 = sub_1000622A4(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  memset(v13, 170, 9);
  if (v8) {
    uint64_t v11 = v8;
  }
  if ((a2 + 32) >= 0x40) {
LABEL_23:
  }
    __break(0x550Au);
  if (a2 == 2)
  {
    unint64_t result = sub_1000BAC60(v11, (uint64_t)v13, 9);
    if (result) {
      return 0;
    }
  }
  else
  {
    if (a2) {
      sub_1000F2748(a2);
    }
    unint64_t result = sub_10008B604(v11, (uint64_t)v13, 9);
    if (result) {
      return 0;
    }
  }
  if (v13 == (unsigned char *)-1)
  {
    __break(0x5500u);
    goto LABEL_26;
  }
  if (a3 >= 0x40)
  {
LABEL_26:
    __break(0x5514u);
    return result;
  }
  return (bswap64(*(unint64_t *)&v13[1]) >> a3) & 1;
}

uint64_t sub_1000C9F28(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9F4C(uint64_t result)
{
  unint64_t v1 = 0xAAAAAAAAAAAAAAAALL;
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unint64_t v1 = *(void *)(result + 40);
    pthread_mutex_lock(&stru_10013B830);
    if ((uint64_t *)sub_100020D64((uint64_t)&qword_10013C9A0, &v1) == &qword_10013C9A8) {
      operator new();
    }
    return pthread_mutex_unlock(&stru_10013B830);
  }
  return result;
}

void sub_1000CA010(uint64_t a1, unint64_t *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100020B50(a1, &v8, a2);
  BOOL v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000D2168((void *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    BOOL v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t *sub_1000CA0F4(uint64_t *result)
{
  if (!result) {
    goto LABEL_13;
  }
  unint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  unint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 280))(result);
  if (result) {
    return result;
  }
  uint64_t v4 = v1[5];
  pthread_mutex_lock(&stru_10013B830);
  uint64_t v3 = (uint64_t *)sub_100020D64((uint64_t)&qword_10013C9A0, &v4);
  if (v3 != &qword_10013C9A8)
  {
    unint64_t result = sub_100004C28((uint64_t *)&v3);
    if (!result || (result & 7) != 0 || ((unint64_t)(result + 1) & 7) != 0) {
      goto LABEL_13;
    }
    uint64_t v2 = result[1];
    unint64_t result = sub_10000BC30(&qword_10013C9A0, (uint64_t)v3);
    if (v2)
    {
      if ((v2 & 7) == 0)
      {
        (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
        return (uint64_t *)pthread_mutex_unlock(&stru_10013B830);
      }
LABEL_13:
      __break(0x5516u);
      return result;
    }
  }
  return (uint64_t *)pthread_mutex_unlock(&stru_10013B830);
}

uint64_t *sub_1000CA20C(uint64_t *result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  unint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = result[3];
  if (!v2 || (result[3] & 7) != 0) {
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_19:
    __break(0x550Au);
    goto LABEL_20;
  }
  if (a2 >= 0xE)
  {
    __break(0x5518u);
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  pthread_mutex_lock(&stru_10013B830);
  uint64_t v7 = sub_100020D64((uint64_t)&qword_10013C9A0, &v8);
  unint64_t result = sub_100004C28(&v7);
  if (!result) {
    goto LABEL_18;
  }
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  if (((unint64_t)(result + 1) & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v5 = result[1];
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_18;
  }
  if (!__CFADD__(v5 + 8, 96 * a2))
  {
    uint64_t v6 = v5 + 96 * a2 + 8;
    pthread_mutex_unlock(&stru_10013B830);
    return (uint64_t *)v6;
  }
LABEL_20:
  __break(0x5513u);
  return result;
}

uint64_t *sub_1000CA308(uint64_t *result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = result[3];
  if (!v2 || (result[3] & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }
  if (a2 >= 0xE)
  {
    __break(0x5518u);
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  pthread_mutex_lock(&stru_10013B830);
  uint64_t v9 = sub_100020D64((uint64_t)&qword_10013C9A0, &v10);
  unint64_t result = sub_100004C28(&v9);
  if (!result) {
    goto LABEL_21;
  }
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  if (((unint64_t)(result + 1) & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = result[1];
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = v5 + 1352;
  if (__CFADD__(v6, 8 * a2))
  {
LABEL_23:
    __break(0x5513u);
    return result;
  }
  uint64_t v7 = (uint64_t *)(v6 + 8 * a2);
  if ((v7 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v8 = *v7;
  if (!*v7) {
    operator new();
  }
  pthread_mutex_unlock(&stru_10013B830);
  return (uint64_t *)v8;
}

pthread_mutex_t *sub_1000CA42C(pthread_mutex_t *result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = *(void *)&result->__opaque[16];
  if (!v2 || (*(void *)&result->__opaque[16] & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }
  if (a2 >= 0xE)
  {
    __break(0x5518u);
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  pthread_mutex_lock(&stru_10013B830);
  uint64_t v9 = sub_100020D64((uint64_t)&qword_10013C9A0, &v10);
  unint64_t result = (pthread_mutex_t *)sub_100004C28(&v9);
  if (!result) {
    goto LABEL_21;
  }
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  if (((unint64_t)result->__opaque & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)result->__opaque;
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = v5 + 1464;
  if (__CFADD__(v6, 8 * a2))
  {
LABEL_23:
    __break(0x5513u);
    return result;
  }
  uint64_t v7 = (pthread_mutex_t **)(v6 + 8 * a2);
  if ((v7 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v8 = *v7;
  if (!*v7)
  {
    uint64_t v8 = (pthread_mutex_t *)malloc_type_malloc(0x40uLL, 0x1000040FA0F61DDuLL);
    pthread_mutex_init(v8, 0);
    uint64_t *v7 = v8;
  }
  pthread_mutex_unlock(&stru_10013B830);
  return v8;
}

uint64_t sub_1000CA54C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = *(void *)(result + 24);
  if (!v4 || (*(void *)(result + 24) & 7) != 0) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 40);
  if (a2 < 0x10)
  {
    if (a2 >= 0xE)
    {
      __break(0x5518u);
    }
    else
    {
      pthread_mutex_lock(&stru_10013B830);
      uint64_t v13 = sub_100020D64((uint64_t)&qword_10013C9A0, &v14);
      unint64_t result = (uint64_t)sub_100004C28(&v13);
      if (result)
      {
        if ((result & 7) == 0 && ((result + 8) & 7) == 0)
        {
          uint64_t v8 = *(void *)(result + 8);
          if (v8)
          {
            if ((v8 & 7) == 0)
            {
              uint64_t v9 = v8 + 1576;
              if (__CFADD__(v9, 8 * a2))
              {
LABEL_25:
                __break(0x5513u);
                goto LABEL_26;
              }
              unint64_t v10 = (uint64_t *)(v9 + 8 * a2);
              if ((v10 & 7) == 0)
              {
                uint64_t v11 = *v10;
                if (*v10)
                {
                  if (!__CFADD__(v11, 16 * a3))
                  {
                    uint64_t v12 = v11 + 16 * a3;
                    pthread_mutex_unlock(&stru_10013B830);
                    return v12;
                  }
                  goto LABEL_25;
                }
                unint64_t result = *(void *)(v3 + 8);
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    sub_1000C977C(result, a2);
                    operator new[]();
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }
LABEL_26:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000CA6FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000CA7B8(result, a3, a2, 9u, 0, 2u, 0, 0, (uint64_t)&stru_10013CD18, (uint64_t)&unk_10013D090, 1);
  *(void *)unint64_t result = off_100126F68;
  *(unsigned char *)(result + 92) = 0;
  uint64_t v3 = *(void **)(result + 56);
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10013D028, uint64_t v4 = v3 + 1, byte_10013D030 = 0, dword_10013D034 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CA7B8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  if (result && (result & 7) == 0)
  {
    *(void *)unint64_t result = off_100127AC8;
    *(void *)(result + 8) = a2;
    *(void *)(result + 16) = a3;
    if (a4 < 0x10)
    {
      *(_DWORD *)(result + 24) = a4;
      if (a5 <= 3)
      {
        *(_DWORD *)(result + 28) = a5;
        if (a6 <= 3)
        {
          *(_DWORD *)(result + 32) = a6;
          *(void *)(result + 40) = a7;
          *(void *)(result + 48) = a8;
          *(void *)(result + 64) = a9;
          *(unsigned char *)(result + 72) = 0;
          *(void *)(result + 80) = a10;
          *(_DWORD *)(result + 88) = a11;
          if (a3 && a4 <= 0xD && a5 <= 2 && a6 != 3 && a10 && a11) {
            operator new[]();
          }
          __break(0x5518u);
        }
      }
    }
    __break(0x550Au);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA8A4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  *(void *)unint64_t result = off_100127AC8;
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 >= 4)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }
  if (v2 == 1 && *(void *)(result + 40))
  {
    unint64_t result = *(void *)(result + 48);
    if (result)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      unint64_t result = *(void *)(v1 + 40);
      if (result && (result & 7) == 0)
      {
        uint64_t v3 = v1;
        sub_1000672F0((void *)result, &v3);
        pthread_mutex_unlock(*(pthread_mutex_t **)(v1 + 48));
        goto LABEL_10;
      }
    }
    else
    {
      __break(0x5518u);
    }
    goto LABEL_14;
  }
LABEL_10:
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  if (*(void *)(v1 + 56)) {
    operator delete[]();
  }
  *(void *)(v1 + 56) = 0;
  return v1;
}

uint64_t sub_1000CA978(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA9C0(uint64_t result)
{
  if (!result) {
    goto LABEL_98;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_98;
  }
  if (!*(void *)(result + 64))
  {
    unsigned int v2 = *(_DWORD *)(result + 32);
    if (v2 >= 4) {
      goto LABEL_100;
    }
    if (v2 == 1)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (!v3) {
        goto LABEL_95;
      }
      if ((v3 & 7) != 0) {
        goto LABEL_98;
      }
      unint64_t result = v3 + 1392;
      if (((v3 + 1392) & 7) != 0) {
        goto LABEL_98;
      }
      unsigned int v4 = *(_DWORD *)(v1 + 24);
      if (v4 >= 0x10) {
        goto LABEL_100;
      }
      unint64_t result = (uint64_t)sub_1000CA20C((uint64_t *)result, v4);
      uint64_t v5 = *(void *)(v1 + 8);
      if (!v5) {
        goto LABEL_98;
      }
      if ((v5 & 7) != 0) {
        goto LABEL_98;
      }
      unint64_t result = v5 + 1392;
      if (((v5 + 1392) & 7) != 0) {
        goto LABEL_98;
      }
      unsigned int v6 = *(_DWORD *)(v1 + 24);
      if (v6 > 0xF) {
        goto LABEL_100;
      }
      unint64_t result = (uint64_t)sub_1000CA20C((uint64_t *)result, v6);
      *(void *)(v1 + 64) = result;
    }
  }
  if (!*(void *)(v1 + 40))
  {
    unsigned int v7 = *(_DWORD *)(v1 + 28);
    if (v7 > 3) {
      goto LABEL_100;
    }
    if (v7 == 1)
    {
      unsigned int v8 = *(_DWORD *)(v1 + 32);
      if (v8 > 3) {
        goto LABEL_100;
      }
      if (v8 == 1)
      {
        uint64_t v9 = *(void *)(v1 + 8);
        if (!v9) {
          goto LABEL_96;
        }
        if ((v9 & 7) != 0) {
          goto LABEL_98;
        }
        unint64_t result = v9 + 1392;
        if (((v9 + 1392) & 7) != 0) {
          goto LABEL_98;
        }
        unsigned int v10 = *(_DWORD *)(v1 + 24);
        if (v10 > 0xF) {
          goto LABEL_100;
        }
        unint64_t result = (uint64_t)sub_1000CA308((uint64_t *)result, v10);
        if (!result) {
LABEL_96:
        }
          sub_1000F2364();
        uint64_t v11 = *(void *)(v1 + 8);
        if (!v11) {
          goto LABEL_98;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_98;
        }
        unint64_t result = v11 + 1392;
        if (((v11 + 1392) & 7) != 0) {
          goto LABEL_98;
        }
        unsigned int v12 = *(_DWORD *)(v1 + 24);
        if (v12 > 0xF) {
          goto LABEL_100;
        }
        *(void *)(v1 + 40) = sub_1000CA308((uint64_t *)result, v12);
      }
    }
  }
  unint64_t result = *(void *)(v1 + 48);
  if (result)
  {
LABEL_46:
    if (*(void *)(v1 + 64)) {
      goto LABEL_104;
    }
    unsigned int v19 = *(_DWORD *)(v1 + 32);
    if (v19 > 3) {
      goto LABEL_100;
    }
    if (!v19)
    {
LABEL_104:
      if (*(unsigned __int8 *)(v1 + 72) > 1u) {
        goto LABEL_100;
      }
      if (*(unsigned char *)(v1 + 72)) {
        return result;
      }
      *(unsigned char *)(v1 + 72) = 1;
      unsigned int v20 = *(_DWORD *)(v1 + 28);
      if (v20 > 3) {
        goto LABEL_100;
      }
      if (v20 != 1) {
        goto LABEL_57;
      }
      if (result)
      {
        pthread_mutex_lock((pthread_mutex_t *)result);
        unint64_t result = *(void *)(v1 + 40);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v30 = v1;
            sub_1000262E8(result, &v30);
            unint64_t result = pthread_mutex_unlock(*(pthread_mutex_t **)(v1 + 48));
LABEL_57:
            if (!*(_DWORD *)(v1 + 88)) {
              return result;
            }
            uint64_t v21 = 0;
            for (uint64_t i = 16; ; i += 24)
            {
              uint64_t v23 = *(void *)(v1 + 56);
              unint64_t v24 = i - 16;
              unint64_t v25 = ~v23;
              if (i - 16 > (unint64_t)~v23) {
                break;
              }
              if (v23) {
                BOOL v26 = (((_BYTE)i + (_BYTE)v23 - 16) & 7) == 0;
              }
              else {
                BOOL v26 = 0;
              }
              if (!v26) {
                goto LABEL_98;
              }
              if (!*(void *)(v23 + i - 16))
              {
                uint64_t v27 = *(void *)(v1 + 8);
                if (!v27) {
                  goto LABEL_98;
                }
                if ((v27 & 7) != 0) {
                  goto LABEL_98;
                }
                unint64_t result = v27 + 1392;
                if (((v27 + 1392) & 7) != 0) {
                  goto LABEL_98;
                }
                unsigned int v28 = *(_DWORD *)(v1 + 24);
                if (v28 > 0xF) {
                  goto LABEL_100;
                }
                unint64_t result = sub_1000CA54C(result, v28, v21);
                uint64_t v23 = *(void *)(v1 + 56);
                unint64_t v25 = ~v23;
                if (v24 > ~v23) {
                  goto LABEL_99;
                }
                if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                  goto LABEL_98;
                }
                *(void *)(v23 + i - 16) = result;
              }
              if (v24 > v25) {
                goto LABEL_99;
              }
              if ((((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                goto LABEL_98;
              }
              *(unsigned char *)(v23 + i - 7) = 0;
              if ((i + v23 - 6)) {
                goto LABEL_98;
              }
              *(_WORD *)(v23 + i - 6) = 0;
              unsigned int v29 = *(_DWORD *)(v1 + 24);
              if (v29 > 0xF) {
                goto LABEL_100;
              }
              if (v29 == 2)
              {
                unint64_t result = sub_10004CDB4();
                if (!result || (result & 7) != 0) {
                  goto LABEL_98;
                }
                unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176))(result);
                uint64_t v23 = *(void *)(v1 + 56);
                if (result && (v21 - 1) < 7)
                {
                  unint64_t v25 = ~v23;
                  if (v24 > ~v23) {
                    goto LABEL_99;
                  }
                  if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                    goto LABEL_98;
                  }
                  *(unsigned char *)(v23 + i - 5) = 1;
                }
                else
                {
                  unint64_t v25 = ~v23;
                }
              }
              if (v24 > v25) {
                goto LABEL_99;
              }
              if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                goto LABEL_98;
              }
              *(_DWORD *)(v23 + i) = 0;
              if (i == 0x17FFFFFFF8) {
                goto LABEL_101;
              }
              if (++v21 >= (unint64_t)*(unsigned int *)(v1 + 88)) {
                return result;
              }
            }
            goto LABEL_99;
          }
          goto LABEL_98;
        }
      }
    }
    __break(0x5518u);
LABEL_95:
    sub_1000F2364();
  }
  unsigned int v13 = *(_DWORD *)(v1 + 28);
  if (v13 > 3) {
    goto LABEL_100;
  }
  if (v13 != 1) {
    goto LABEL_45;
  }
  unsigned int v14 = *(_DWORD *)(v1 + 32);
  if (v14 > 3) {
    goto LABEL_100;
  }
  if (v14 != 1)
  {
LABEL_45:
    unint64_t result = 0;
    goto LABEL_46;
  }
  uint64_t v15 = *(void *)(v1 + 8);
  if (!v15) {
    goto LABEL_97;
  }
  if ((v15 & 7) != 0) {
    goto LABEL_98;
  }
  unint64_t result = v15 + 1392;
  if (((v15 + 1392) & 7) != 0) {
    goto LABEL_98;
  }
  unsigned int v16 = *(_DWORD *)(v1 + 24);
  if (v16 > 0xF) {
    goto LABEL_100;
  }
  unint64_t result = (uint64_t)sub_1000CA42C((pthread_mutex_t *)result, v16);
  if (!result) {
LABEL_97:
  }
    sub_1000F2364();
  uint64_t v17 = *(void *)(v1 + 8);
  if (v17)
  {
    if ((v17 & 7) == 0)
    {
      unint64_t result = v17 + 1392;
      if (((v17 + 1392) & 7) == 0)
      {
        unsigned int v18 = *(_DWORD *)(v1 + 24);
        if (v18 > 0xF) {
          goto LABEL_100;
        }
        unint64_t result = (uint64_t)sub_1000CA42C((pthread_mutex_t *)result, v18);
        *(void *)(v1 + 48) = result;
        goto LABEL_46;
      }
    }
  }
LABEL_98:
  __break(0x5516u);
LABEL_99:
  __break(0x5513u);
LABEL_100:
  __break(0x550Au);
LABEL_101:
  __break(0x5500u);
  return result;
}

unint64_t sub_1000CADE4(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000C9DDC(result, 2, 0xAu);
  }
  return result;
}

uint64_t sub_1000CAE60(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t, void))(*(void *)result + 112))(result, 0) ^ 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CAEB0(uint64_t result, int a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  if (a2)
  {
    uint64_t v5 = 4;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }
  if (*(unsigned __int8 *)(result + 92) < 2u)
  {
    if (*(unsigned char *)(result + 92))
    {
      unint64_t result = _AXSVoiceOverTouchEnabled();
      if (result != a3)
      {
        unint64_t result = _AXSVoiceOverTouchSetEnabledThroughAccessory();
        if (a3) {
          unint64_t result = _AXSVoiceOverTouchSetEnabled();
        }
      }
    }
    uint64_t v6 = *(void *)(v3 + 56);
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        unsigned int v7 = (int *)(v6 + 16);
        if ((v7 & 7) == 0)
        {
          uint64_t v5 = 0;
          int *v7 = a3;
          return v5;
        }
      }
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(0x550Au);
  return result;
}

BOOL sub_1000CAF6C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    sub_1000F2774(a2);
  }
  if (a2) {
    goto LABEL_6;
  }
  return _AXSVoiceOverTouchEnabled() != 0;
}

uint64_t sub_1000CAFA8(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CAFE4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB02C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000CA7B8(result, a3, a2, 0xDu, 0, 2u, 0, 0, (uint64_t)&stru_10013CE98, (uint64_t)&unk_10013D0A0, 1);
  *(void *)unint64_t result = off_100127038;
  *(unsigned char *)(result + 92) = 0;
  uint64_t v3 = *(void **)(result + 56);
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10013D068, unsigned int v4 = v3 + 1, byte_10013D070 = 0, dword_10013D074 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    *unsigned int v4 = 0;
  }
  return result;
}

uint64_t sub_1000CB0E8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CB130(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000C9DDC(result, 2, 0xCu);
  }
  return result;
}

uint64_t sub_1000CB1AC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t, void))(*(void *)result + 112))(result, 0) ^ 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB1FC(uint64_t result, int a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }
  if (a2)
  {
    uint64_t v5 = 4;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }
  if (*(unsigned __int8 *)(result + 92) < 2u)
  {
    if (*(unsigned char *)(result + 92))
    {
      unint64_t result = _AXSAssistiveTouchHardwareEnabled();
      if (result)
      {
        int v6 = 1;
      }
      else
      {
        unint64_t result = _AXSAssistiveTouchEnabled();
        int v6 = result != 0;
      }
      if (v6 != a3) {
        unint64_t result = _AXSAssistiveTouchSetHardwareEnabled();
      }
    }
    uint64_t v7 = *(void *)(v3 + 56);
    if (v7)
    {
      if ((v7 & 7) == 0)
      {
        unsigned int v8 = (int *)(v7 + 16);
        if ((v8 & 7) == 0)
        {
          uint64_t v5 = 0;
          *unsigned int v8 = a3;
          return v5;
        }
      }
    }
    goto LABEL_17;
  }
LABEL_18:
  __break(0x550Au);
  return result;
}

BOOL sub_1000CB2C4(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    sub_1000F2774(a2);
  }
  if (a2) {
    goto LABEL_9;
  }
  return _AXSAssistiveTouchHardwareEnabled() || _AXSAssistiveTouchEnabled() != 0;
}

uint64_t sub_1000CB310(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB34C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB394(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(result + 92) = a4;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72))(result, 0, a2, a3, 0);
  }
  return result;
}

uint64_t sub_1000CB3E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 0, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D078, 1),
        *(void *)unint64_t result = off_100127108,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = 0, unsigned int v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *unsigned int v4 = 0;
  }
  return result;
}

uint64_t sub_1000CB480(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB4C8(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_26;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = v2[2];
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v6 = sub_1000622A4(result);
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1439, a2);
    return 0;
  }
  if (v5) {
    uint64_t v6 = v5;
  }
  if (sub_100070E9C(v6))
  {
    unint64_t result = v2[1];
    if (!result || (result & 7) != 0) {
      goto LABEL_26;
    }
    if (sub_1000C9DDC(result, 0, 0)) {
      return 1;
    }
  }
  unint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0)
  {
LABEL_26:
    __break(0x5516u);
    return result;
  }
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160))(result);
  if (result)
  {
    uint64_t v7 = *(uint64_t (**)(void *))(*v2 + 152);
    return v7(v2);
  }
  return result;
}

BOOL sub_1000CB624(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB650(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000CB670(result, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB670(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 16)) != 0 ? (BOOL v3 = (result & 7) == 0) : (BOOL v3 = 0),
        v3 && (v5 = sub_10001CE30(result), (unint64_t result = *(void *)(v2 + 16)) != 0) && (result & 7) == 0))
  {
    uint64_t v6 = sub_1000622A4(result);
    if (v5) {
      uint64_t v6 = v5;
    }
    if (v6 && sub_100070E9C(v6))
    {
      byte_10013D0A4 = 0;
      sub_1000CBAB0(v2, a2, 0, 1);
      return 0;
    }
    else
    {
      return 2;
    }
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CB718(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000CB670(result, a3 == 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB73C(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            unint64_t result = sub_10004BD48();
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1532, a2, v11);
              return v10;
            }
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 176))(result, v9, a3);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB838(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  int v2 = a2;
  sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_16;
  }
  sub_1000622A4(v6);
  uint64_t v7 = sub_10004BD48();
  if (v2) {
    goto LABEL_17;
  }
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 184);
  return v8();
}

uint64_t sub_1000CB8FC(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            unint64_t result = sub_10004BD48();
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1599, a2, v11);
              return v10;
            }
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 176))(result, v9, a3 == 1);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB9F8(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000622A4(v7);
  uint64_t v9 = sub_10004BD48();
  if (v2) {
    goto LABEL_18;
  }
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 184))(v9, v10);
}

uint64_t sub_1000CBAB0(uint64_t result, int a2, uint64_t a3, char a4)
{
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v8 = sub_10001CE30(result);
  unint64_t result = *(void *)(v4 + 16);
  if (!result) {
    goto LABEL_29;
  }
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  unint64_t result = sub_100062690(result);
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v9 = result;
  unint64_t result = *(void *)(v4 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v10 = sub_1000622A4(result);
  if (v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  if (!v8) {
    uint64_t v8 = v11;
  }
  if ((a4 & 1) != 0 || (unint64_t result = sub_100070E9C(v8), result))
  {
    unint64_t result = sub_1000CBD3C(v4, 0, a2, 0, 0);
    if (v8)
    {
      if ((v8 & 7) == 0)
      {
        unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 216))(v8);
        if (result != 3) {
          return result;
        }
        if (result)
        {
          if ((result & 7) == 0)
          {
            return sub_1000C7BE4(result, a2);
          }
        }
      }
LABEL_29:
      __break(0x5516u);
    }
  }
  return result;
}

uint64_t sub_1000CBC34(uint64_t result, uint64_t a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_12;
  }
  if (byte_10013D0A4 >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  if (!byte_10013D0A4)
  {
    if ((a3 & 1) != 0 || (unint64_t result = sub_100070E9C(a2), result))
    {
      if (((*(uint64_t (**)(uint64_t, void))(*(void *)v3 + 112))(v3, 0) & 1) == 0) {
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)v3 + 136))(v3, 0, 1);
      }
      (*(void (**)(uint64_t, void, void))(*(void *)v3 + 136))(v3, 0, 0);
      unint64_t result = sub_1000CBD3C(v3, 0, 0, 0, 0);
      byte_10013D0A4 = 1;
    }
  }
  return result;
}

uint64_t sub_1000CBD3C(uint64_t result, uint64_t a2, int a3, int a4, char a5)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v6 = *(_DWORD *)(result + 24);
  if (v6 >= 0x10) {
    goto LABEL_39;
  }
  if (v6 != 2)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128))(result, a2);
    if (!result) {
      return 4;
    }
  }
  uint64_t v11 = *(void *)(v5 + 80);
  if (__CFADD__(v11, 4 * a2)) {
    goto LABEL_40;
  }
  if (!v11) {
    goto LABEL_38;
  }
  unsigned int v12 = (int *)(v11 + 4 * a2);
  if ((v12 & 3) != 0) {
    goto LABEL_38;
  }
  int v13 = *v12;
  if ((v13 + 4) > 7) {
    goto LABEL_39;
  }
  if (v13)
  {
    __break(0x5518u);
    goto LABEL_38;
  }
  uint64_t v14 = *(void *)(v5 + 56);
  if (__CFADD__(v14, 24 * a2)) {
    goto LABEL_40;
  }
  if (!v14
    || (uint64_t v15 = v14 + 24 * a2, (v15 & 7) != 0)
    || (uint64_t v16 = v14 + 24 * a2 + 16, (v16 & 7) != 0)
    || (*(_DWORD *)uint64_t v16 = a3, (((_BYTE)v15 + 8) & 7) != 0)
    || (*(unsigned char *)(v15 + 8) = 1, *(unsigned char *)(v5 + 36) = 1, uint64_t v17 = (unsigned char *)(v15 + 10), ((v15 + 10) & 1) != 0))
  {
LABEL_38:
    __break(0x5516u);
    goto LABEL_39;
  }
  if (*v17 > 1u)
  {
LABEL_39:
    __break(0x550Au);
    goto LABEL_40;
  }
  if (*v17)
  {
    if (!a4) {
      goto LABEL_35;
    }
  }
  else
  {
    *uint64_t v17 = 1;
    if (!a4)
    {
LABEL_35:
      (*(void (**)(uint64_t, void))(*(void *)v5 + 40))(v5, 0);
      return 0;
    }
  }
  if (a5) {
    goto LABEL_35;
  }
  uint64_t v18 = *(void *)v15;
  if (!v18) {
    goto LABEL_35;
  }
  if ((v18 & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v19 = (unsigned char *)(v18 + 8);
  if ((v19 & 7) != 0) {
    goto LABEL_38;
  }
  if (*v19 > 1u) {
    goto LABEL_39;
  }
  if (*v19) {
    goto LABEL_35;
  }
  unsigned char *v19 = 1;
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 120))(v5, a2);
  uint64_t v20 = *(void *)(v5 + 56);
  if (!__CFADD__(v20, 24 * a2))
  {
    if (v20)
    {
      uint64_t v21 = (uint64_t *)(v20 + 24 * a2);
      if ((v21 & 7) == 0)
      {
        uint64_t v22 = *v21;
        if (v22)
        {
          if ((v22 & 7) == 0)
          {
            uint64_t v23 = (_DWORD *)(v22 + 12);
            if ((v23 & 3) == 0)
            {
              *uint64_t v23 = result;
              goto LABEL_35;
            }
          }
        }
      }
    }
    goto LABEL_38;
  }
LABEL_40:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000CBF70(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000CA7B8(result, a3, a2, 1u, 2u, 2u, 0, 0, (uint64_t)&stru_10013CA78, (uint64_t)&unk_10013B870, 1), *(void *)result = off_1001271D8, (v3 = *(void **)(result + 56)) == 0)|| (v3 & 7) != 0|| (*v3 = &qword_10013CFB8, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
    *(_DWORD *)(result + 120) = 0;
  }
  return result;
}

uint64_t sub_1000CC024(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CC06C(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 16)) != 0 ? (BOOL v3 = (result & 7) == 0) : (BOOL v3 = 0),
        v3 && (v5 = sub_10001CE30(result), (unint64_t result = *(void *)(v2 + 16)) != 0) && (result & 7) == 0))
  {
    uint64_t v6 = sub_1000622A4(result);
    if (a2)
    {
      sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1901, a2);
      return 0;
    }
    else
    {
      if (v5) {
        uint64_t v6 = v5;
      }
      return sub_100070F9C(v6);
    }
  }
  else
  {
    __break(0x5516u);
  }
  return result;
}

BOOL sub_1000CC13C(BOOL result)
{
  if (result && !(result & 7)) {
    return sub_100099C30(result) == 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CC16C(uint64_t result, int a2, int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 1944, a2, a3);
    return 4;
  }
  return result;
}

void sub_1000CC1C8(uint64_t a1, int a2)
{
  if (a1 && (a1 & 7) == 0)
  {
    syslog(3, "Unknown or invalid id(%d)\n", a2);
    abort();
  }
  __break(0x5516u);
}

uint64_t sub_1000CC204(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            unint64_t result = sub_10005176C();
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 2004, a2, v11);
              return v10;
            }
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 288))(result, v9, a3);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CC304(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  int v2 = a2;
  sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_16;
  }
  sub_1000622A4(v6);
  uint64_t v7 = sub_10005176C();
  if (v2) {
    goto LABEL_17;
  }
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 296);
  return v8();
}

uint64_t sub_1000CC3D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_33;
  }
  unint64_t result = sub_1000CA7B8(result, a3, a2, 2u, 2u, 2u, 0, 0, (uint64_t)&stru_10013CA18, (uint64_t)&unk_10013B874, 10);
  *(void *)unint64_t result = off_1001272A8;
  unint64_t v3 = *(void *)(result + 56);
  if (v3 >= 0xFFFFFFFFFFFFFFE8) {
    goto LABEL_34;
  }
  if (((v3 + 24) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 24) = &qword_10013CF58;
  if ((((_BYTE)v3 + 32) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 32) = 0;
  if (v3 > 0xFFFFFFFFFFFFFFCFLL) {
    goto LABEL_34;
  }
  if (((v3 + 48) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 48) = &qword_10013CF68;
  if ((((_BYTE)v3 + 56) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 56) = 0;
  if (v3 > 0xFFFFFFFFFFFFFFB7) {
    goto LABEL_34;
  }
  if (((v3 + 72) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 72) = &qword_10013CF78;
  if ((((_BYTE)v3 + 80) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 80) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF9FLL) {
    goto LABEL_34;
  }
  if (((v3 + 96) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 96) = 0;
  if ((((_BYTE)v3 + 104) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 104) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF87) {
    goto LABEL_34;
  }
  if (((v3 + 120) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 120) = &qword_10013CF88;
  if ((((_BYTE)v3 + 0x80) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 128) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF6FLL) {
    goto LABEL_34;
  }
  if (((v3 + 144) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 144) = &qword_10013CF98;
  if ((((_BYTE)v3 - 104) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 152) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF57) {
    goto LABEL_34;
  }
  if (((v3 + 168) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 168) = &qword_10013CFA8;
  if ((((_BYTE)v3 - 80) & 7) != 0) {
    goto LABEL_33;
  }
  *(unsigned char *)(v3 + 176) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF3FLL) {
    goto LABEL_34;
  }
  if (((v3 + 192) & 7) != 0 || (*(void *)(v3 + 192) = &qword_10013CF28, (((_BYTE)v3 - 56) & 7) != 0))
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
  *(unsigned char *)(v3 + 200) = 0;
  if (v3 <= 0xFFFFFFFFFFFFFF27)
  {
    if (((v3 + 216) & 7) == 0)
    {
      *(void *)(v3 + 216) = &qword_10013CF38;
      if ((((_BYTE)v3 - 32) & 7) == 0)
      {
        *(unsigned char *)(v3 + 224) = 0;
        if ((v3 & 7) == 0)
        {
          *(void *)unint64_t v3 = &qword_10013CF48;
          uint64_t v4 = (unsigned char *)(v3 + 8);
          if ((v4 & 7) == 0)
          {
            *uint64_t v4 = 0;
            return result;
          }
        }
      }
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000CC64C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CC694(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v6 = sub_10001CE30(v3);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v8 = (const void *)sub_1000622A4(v7);
  if (v6) {
    uint64_t v8 = (const void *)v6;
  }
  if (!sub_100071090(v8)) {
    goto LABEL_19;
  }
  uint64_t v9 = sub_10004CDB4();
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_56:
    __break(0x5516u);
    JUMPOUT(0x1000CC90CLL);
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v9 + 176))(v9))
  {
LABEL_19:
    unint64_t v11 = 0;
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_56;
  }
  unint64_t v11 = sub_1000C9DDC(v10, 0, 1u);
LABEL_20:
  switch(a2)
  {
    case 0:
    case 3:
    case 8:
    case 9:
      return v11;
    case 1:
      uint64_t v12 = *(void *)(a1 + 8);
      if (!v12 || (v12 & 7) != 0) {
        goto LABEL_56;
      }
      if (sub_1000C9DDC(v12, 0, 9u)) {
        goto LABEL_40;
      }
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 8;
      goto LABEL_50;
    case 2:
      uint64_t v15 = *(void *)(a1 + 8);
      if (!v15 || (v15 & 7) != 0) {
        goto LABEL_56;
      }
      if (sub_1000C9DDC(v15, 0, 2u)) {
        goto LABEL_40;
      }
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 3;
      goto LABEL_50;
    case 4:
      uint64_t v16 = *(void *)(a1 + 8);
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_56;
      }
      if (sub_1000C9DDC(v16, 0, 4u)) {
        goto LABEL_40;
      }
      uint64_t v17 = *(void *)(a1 + 8);
      if (!v17 || (v17 & 7) != 0) {
        goto LABEL_56;
      }
      if (sub_1000C9DDC(v17, 0, 5u))
      {
LABEL_40:
        int v18 = 1;
        return v11 & v18;
      }
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 6;
LABEL_50:
      int v18 = sub_1000C9DDC(v13, 0, v14);
      return v11 & v18;
    case 5:
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 7;
      goto LABEL_50;
    case 6:
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 10;
      goto LABEL_50;
    case 7:
      uint64_t v13 = *(void *)(a1 + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_56;
      }
      unsigned int v14 = 11;
      goto LABEL_50;
    default:
      sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 2306, a2);
      return 0;
  }
}

BOOL sub_1000CC934(BOOL result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0)) {
    __break(0x5516u);
  }
  else {
    return !(*(unsigned int (**)(uint64_t, void))(*(void *)result + 80))(result, 0)
  }
        || (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v1 + 96))(v1, 8) == 0;
  return result;
}

uint64_t sub_1000CC9D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 80))(result, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CCA08(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CCA40(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = (const void *)v7;
            }
            else {
              uint64_t v9 = (const void *)v8;
            }
            uint64_t v10 = sub_10005176C();
            if (!sub_100071090(v9)) {
              return 0;
            }
            unint64_t result = sub_10004CDB4();
            if (result)
            {
              if ((result & 7) == 0)
              {
                unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176))(result);
                if (!result) {
                  return 0;
                }
                if (a2)
                {
                  int v12 = a3;
                  uint64_t v11 = 4;
                  sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 2358, a2, v12);
                  return v11;
                }
                if (v10 && (v10 & 7) == 0)
                {
                  (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v10 + 256))(v10, v9, a3);
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CCB90(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  int v2 = a2;
  sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_16;
  }
  sub_1000622A4(v6);
  uint64_t v7 = sub_10005176C();
  if (v2) {
    goto LABEL_17;
  }
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 264);
  return v8();
}

uint64_t sub_1000CCC5C(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_79;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_79;
  }
  uint64_t v8 = (const void *)sub_10001CE30(v4);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_79;
  }
  uint64_t v10 = sub_1000622A4(v9);
  if (!v8) {
    uint64_t v8 = (const void *)v10;
  }
  uint64_t v11 = sub_10005176C();
  if (!sub_100071090(v8)) {
    return 0;
  }
  uint64_t v12 = sub_10004CDB4();
  if (!v12 || (v12 & 7) != 0)
  {
LABEL_79:
    __break(0x5516u);
LABEL_80:
    __break(0x5513u);
    goto LABEL_81;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 176))(v12))
  {
    uint64_t v13 = 0;
    switch(a2)
    {
      case 0:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, BOOL))(*(void *)v11 + 256))(v11, v8, a3 != 0);
        return 0;
      case 1:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 504))(v11, v8, a3);
        return 0;
      case 2:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 488))(v11, v8, a3);
        return 0;
      case 3:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 472))(v11, v8, a3);
        return 0;
      case 4:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 520))(v11, v8, a3);
        return 0;
      case 5:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 536))(v11, v8, a3);
        int v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, 6);
        uint64_t v13 = 0;
        if (!a3 || !v14) {
          return v13;
        }
        unint64_t v15 = *(void *)(a1 + 56);
        if (v15 >= 0xFFFFFFFFFFFFFF88) {
          goto LABEL_80;
        }
        if (((v15 + 120) & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v16 = *(void *)(v15 + 120);
        if (!v16) {
          goto LABEL_79;
        }
        if ((v16 & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v17 = (unsigned __int8 *)(v16 + 8);
        if ((v17 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v18 = *v17;
        if (v18 >= 2) {
          break;
        }
        if (v18)
        {
          BOOL v19 = 1;
LABEL_68:
          sub_1000CD2AC(a1, 0, v19);
          return 0;
        }
        if (v15 > 0xFFFFFFFFFFFFFF6FLL) {
          goto LABEL_80;
        }
        BOOL v26 = (uint64_t *)(v15 + 144);
        if ((v26 & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v27 = *v26;
        if (!v27) {
          goto LABEL_79;
        }
        if ((v27 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v28 = (unsigned __int8 *)(v27 + 8);
        if ((v28 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v29 = *v28;
        if (v29 <= 1)
        {
          BOOL v19 = v29 != 0;
          goto LABEL_68;
        }
        break;
      case 6:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 568))(v11, v8, a3);
        int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, 5);
        uint64_t v13 = 0;
        if (!a3 || !v20) {
          return v13;
        }
        unint64_t v21 = *(void *)(a1 + 56);
        if (v21 > 0xFFFFFFFFFFFFFF87) {
          goto LABEL_80;
        }
        if (((v21 + 120) & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v22 = *(void *)(v21 + 120);
        if (!v22) {
          goto LABEL_79;
        }
        if ((v22 & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v23 = (unsigned __int8 *)(v22 + 8);
        if ((v23 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v24 = *v23;
        if (v24 > 1) {
          break;
        }
        if (v24)
        {
          BOOL v25 = 1;
LABEL_76:
          sub_1000CD31C(a1, 0, v25);
          return 0;
        }
        if (v21 > 0xFFFFFFFFFFFFFF6FLL) {
          goto LABEL_80;
        }
        uint64_t v30 = (uint64_t *)(v21 + 144);
        if ((v30 & 7) != 0) {
          goto LABEL_79;
        }
        uint64_t v31 = *v30;
        if (!v31) {
          goto LABEL_79;
        }
        if ((v31 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v32 = (unsigned __int8 *)(v31 + 8);
        if ((v32 & 7) != 0) {
          goto LABEL_79;
        }
        unsigned int v33 = *v32;
        if (v33 <= 1)
        {
          BOOL v25 = v33 != 0;
          goto LABEL_76;
        }
        break;
      case 7:
        if (!v11 || (v11 & 7) != 0) {
          goto LABEL_79;
        }
        (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v11 + 552))(v11, v8, a3);
        return 0;
      case 8:
        sub_1000CD1C4(a1, v8, a3);
        return 0;
      case 9:
        return v13;
      default:
        uint64_t v13 = 4;
        sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 2471, a2, a3);
        return v13;
    }
LABEL_81:
    __break(0x550Au);
    JUMPOUT(0x1000CD19CLL);
  }
  return 0;
}

uint64_t sub_1000CD1C4(uint64_t result, const void *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  unint64_t result = sub_100071090(a2);
  if (!result) {
    return result;
  }
  unint64_t result = sub_10004CDB4();
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176))(result);
  if (!result) {
    return result;
  }
  unint64_t result = sub_10005176C();
  if (!a2 || !result)
  {
    __break(0x5518u);
    goto LABEL_16;
  }
  if ((result & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  if (a3 > 3)
  {
LABEL_17:
    __break(0x550Au);
    return result;
  }
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)result + 584);
  return v5();
}

uint64_t sub_1000CD2AC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 6, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CD31C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 5, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CD38C(uint64_t a1, int a2)
{
  if (!a1
    || (a1 & 7) != 0
    || ((uint64_t v4 = *(void *)(a1 + 16)) != 0 ? (v5 = (v4 & 7) == 0) : (v5 = 0),
        !v5 || (v2 = a2, uint64_t v6 = sub_10001CE30(v4), (v7 = *(void *)(a1 + 16)) == 0) || (v7 & 7) != 0))
  {
LABEL_57:
    __break(0x5516u);
LABEL_58:
    sub_1000F2774(v2);
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v6) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = sub_10005176C();
  switch(v2)
  {
    case 0:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 264))(v10, v9);
    case 1:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 512);
      return v11();
    case 2:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 496);
      return v11();
    case 3:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 480);
      return v11();
    case 4:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 528);
      return v11();
    case 5:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 544);
      return v11();
    case 6:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 576);
      return v11();
    case 7:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 560);
      return v11();
    case 8:
    case 9:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_57;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 592);
      return v11();
    default:
      goto LABEL_58;
  }
}

uint64_t sub_1000CD75C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD794(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD7CC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD804(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 4);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD83C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 5);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD874(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 6);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD8AC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96))(result, 7);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CD8E4(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  unint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t))(*(void *)result + 72))(result, 0, a2, 0, 1);
  if (result > 0x1F) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000CD94C(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  LODWORD(v4) = a2;
  if (a2 >= 4)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }
  if (a2 == 3) {
    return 4;
  }
  unint64_t result = sub_10002B190();
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_21;
  }
  if ((result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)result + 96))(result);
  if (((v4 == 1) & v7) != 0) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = v4;
  }
  unint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, void))(*v3 + 88))(v3, 8, v4, a3, 0);
  uint64_t v5 = result;
  if (!v7)
  {
LABEL_18:
    if (v5 <= 0x1F) {
      return v5;
    }
    goto LABEL_22;
  }
  unint64_t v8 = v3[7];
  if (v8 < 0xFFFFFFFFFFFFFF28)
  {
    uint64_t v9 = (uint64_t *)(v8 + 216);
    if ((v9 & 7) == 0)
    {
      uint64_t v10 = *v9;
      if (v10)
      {
        if ((v10 & 7) == 0)
        {
          uint64_t v11 = (unsigned char *)(v10 + 8);
          if ((v11 & 7) == 0)
          {
            *uint64_t v11 = 0;
            unint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, void))(*v3 + 88))(v3, 9, v4, 1, 0);
            goto LABEL_18;
          }
        }
      }
    }
    goto LABEL_21;
  }
LABEL_23:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000CDAB8(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (unint64_t result = sub_10005176C()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)result + 600))(result, 0, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v1 + 88))(v1, 9, 2, 1, 0);
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)v1 + 88))(v1, 8, 2, 0, 1);
  if (result >= 0x20) {
LABEL_8:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000CDBA8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 1, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CDC18(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 4
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 2, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CDC88(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 3, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CDCF8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 8
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 88))(result, 4, a2, a3, 1), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CDD68(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88))(result, 7, a2, a3, 0), result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000CDDD8(uint64_t result)
{
  if (!result) {
    goto LABEL_41;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v2 = *(void *)(result + 56);
  if (v2 >= 0xFFFFFFFFFFFFFF40) {
    goto LABEL_42;
  }
  uint64_t v3 = (uint64_t *)(v2 + 192);
  if ((v3 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v4 = *v3;
  BOOL v5 = v4 && (v4 & 7) == 0;
  uint64_t v6 = (unsigned __int8 *)(v4 + 8);
  if (!v5 || (v6 & 7) != 0) {
    goto LABEL_41;
  }
  unsigned int v8 = *v6;
  if (v8 < 2)
  {
    if (!v8) {
      return 0;
    }
    unint64_t result = sub_10002B190();
    if (!result)
    {
      __break(0x5518u);
      goto LABEL_41;
    }
    if ((result & 7) != 0)
    {
LABEL_41:
      __break(0x5516u);
      goto LABEL_42;
    }
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96))(result);
    if (result)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v1 + 24))(v1, 9, 1, 0);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)v1 + 24))(v1, 8, 0, 0);
      unint64_t v9 = *(void *)(v1 + 56);
      if (v9 <= 0xFFFFFFFFFFFFFF3FLL)
      {
        if (((v9 + 192) & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v10 = *(void *)(v9 + 192);
        if (!v10 || (v10 & 7) != 0 || ((v10 + 12) & 3) != 0) {
          goto LABEL_41;
        }
        if (v9 <= 0xFFFFFFFFFFFFFF27)
        {
          uint64_t v11 = (uint64_t *)(v9 + 216);
          if ((v11 & 7) == 0)
          {
            uint64_t v12 = *v11;
            if (v12)
            {
              if ((v12 & 7) == 0)
              {
                uint64_t v13 = (_DWORD *)(v12 + 12);
                if ((v13 & 3) == 0)
                {
                  *uint64_t v13 = *(_DWORD *)(v10 + 12);
                  int v14 = (unsigned char *)(v10 + 8);
                  if ((v14 & 7) == 0)
                  {
                    *int v14 = 0;
                    return 0;
                  }
                }
              }
            }
          }
          goto LABEL_41;
        }
      }
    }
    else
    {
      unint64_t v15 = *(void *)(v1 + 56);
      if (v15 <= 0xFFFFFFFFFFFFFF3FLL)
      {
        if (((v15 + 192) & 7) == 0)
        {
          uint64_t v16 = *(void *)(v15 + 192);
          if (v16)
          {
            if ((v16 & 7) == 0 && (((_BYTE)v16 + 12) & 3) == 0 && ((v15 + 208) & 7) == 0)
            {
              *(_DWORD *)(v15 + 208) = *(_DWORD *)(v16 + 12);
              uint64_t v17 = (unsigned char *)(v16 + 8);
              if ((v17 & 7) == 0)
              {
                *uint64_t v17 = 0;
                unsigned int v18 = (unsigned char *)(v15 + 200);
                if ((v18 & 7) == 0)
                {
                  *unsigned int v18 = 1;
                  *(unsigned char *)(v1 + 36) = 1;
                  (*(void (**)(uint64_t, void))(*(void *)v1 + 40))(v1, 0);
                  return 0;
                }
              }
            }
          }
        }
        goto LABEL_41;
      }
    }
LABEL_42:
    __break(0x5513u);
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000CE01C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v1 = *(void *)(result + 56);
  if (v1 >= 0xFFFFFFFFFFFFFF28)
  {
LABEL_22:
    __break(0x5513u);
    goto LABEL_23;
  }
  unint64_t v2 = (uint64_t *)(v1 + 216);
  if (((v1 + 216) & 7) != 0
    || ((v3 = *v2, uint64_t v4 = *v2 & 7, v3) ? (v5 = v4 == 0) : (v5 = 0),
        (uint64_t v6 = (unsigned char *)(v3 + 8), v5) ? (v7 = ((v3 + 8) & 7) == 0) : (v7 = 0),
        !v7))
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }
  if (*v6 < 2u)
  {
    if (*v6)
    {
      unsigned int v8 = (_DWORD *)(v3 + 12);
      if ((v8 & 3) != 0) {
        goto LABEL_21;
      }
      if ((((_BYTE)v1 - 64) & 7) != 0) {
        goto LABEL_21;
      }
      if ((((_BYTE)v1 - 48) & 7) != 0) {
        goto LABEL_21;
      }
      *(_DWORD *)(v1 + 208) = *v8;
      *uint64_t v6 = 0;
      unint64_t v9 = (unsigned char *)(v1 + 200);
      if ((v9 & 7) != 0) {
        goto LABEL_21;
      }
      unsigned char *v9 = 1;
      *(unsigned char *)(result + 36) = 1;
      (*(void (**)(uint64_t, void))(*(void *)result + 40))(result, 0);
    }
    return 0;
  }
LABEL_23:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000CE10C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_13;
  }
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  unint64_t result = sub_1000CA7B8(result, a3, a2, 3u, 0, 2u, 0, 0, (uint64_t)&stru_10013C9B8, (uint64_t)&unk_10013B89C, 3);
  *(void *)unint64_t result = off_100127378;
  unint64_t v3 = *(void *)(result + 56);
  if (!v3) {
    goto LABEL_13;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_13;
  }
  *(void *)unint64_t v3 = &qword_10013CEF8;
  if ((((_BYTE)v3 + 8) & 7) != 0) {
    goto LABEL_13;
  }
  *(unsigned char *)(v3 + 8) = 0;
  if (v3 >= 0xFFFFFFFFFFFFFFE8) {
    goto LABEL_14;
  }
  if (((v3 + 24) & 7) != 0 || (*(void *)(v3 + 24) = &qword_10013CF08, (((_BYTE)v3 + 32) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  *(unsigned char *)(v3 + 32) = 0;
  if (v3 <= 0xFFFFFFFFFFFFFFCFLL)
  {
    if (((v3 + 48) & 7) == 0)
    {
      *(void *)(v3 + 48) = &qword_10013CEF8;
      uint64_t v4 = (unsigned char *)(v3 + 56);
      if ((v4 & 7) == 0)
      {
        *uint64_t v4 = 0;
        return result;
      }
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000CE220(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE268(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CE280(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (a2 == 2)
  {
    unint64_t result = *(void *)(result + 8);
    if (result && (result & 7) == 0)
    {
      unsigned int v2 = 17;
      goto LABEL_15;
    }
LABEL_19:
    __break(0x5516u);
    return result;
  }
  if (a2 == 1)
  {
    unint64_t result = *(void *)(result + 8);
    if (result && (result & 7) == 0)
    {
      unsigned int v2 = 16;
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3144, a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  unsigned int v2 = 15;
LABEL_15:
  return sub_1000C9DDC(result, 0, v2);
}

uint64_t sub_1000CE358(uint64_t result, int a2, uint64_t a3)
{
  if (result && (result & 7) == 0)
  {
    unint64_t result = sub_10005176C();
    if (a2 == 2)
    {
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 240))(result, a3);
        return 0;
      }
    }
    else
    {
      if (a2 != 1)
      {
        int v6 = a3;
        uint64_t v5 = 4;
        sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3178, a2, v6);
        return v5;
      }
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 224))(result, a3);
        return 0;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE450(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_15;
  }
  int v2 = a2;
  uint64_t v3 = sub_10005176C();
  if (v2 != 2)
  {
    if (v2 != 1) {
      goto LABEL_16;
    }
    if (v3 && (v3 & 7) == 0)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 232);
      return v4();
    }
LABEL_15:
    __break(0x5516u);
LABEL_16:
    sub_1000F2774(v2);
  }
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 248);
  return v4();
}

uint64_t sub_1000CE520(uint64_t result, int a2, uint64_t a3)
{
  if (result && (result & 7) == 0)
  {
    unint64_t result = sub_10005176C();
    if (a2 == 2)
    {
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, BOOL))(*(void *)result + 240))(result, a3 != 0);
        return 0;
      }
    }
    else if (a2 == 1)
    {
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, BOOL))(*(void *)result + 224))(result, a3 != 0);
        return 0;
      }
    }
    else
    {
      if (a2)
      {
        int v6 = a3;
        uint64_t v5 = 4;
        sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3248, a2, v6);
        return v5;
      }
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 208))(result, a3);
        return 0;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE658(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v3 = sub_10005176C();
  if (v2 == 2)
  {
    if (v3 && (v3 & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 248))(v3);
    }
    goto LABEL_17;
  }
  if (v2 == 1)
  {
    if (v3 && (v3 & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 232))(v3);
    }
    goto LABEL_17;
  }
  if (v2) {
    goto LABEL_18;
  }
  if (!v3 || (v3 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 216);
  return v4();
}

uint64_t sub_1000CE754(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 5u, 0, 0, 0, 0, (uint64_t)&stru_10013CB38, (uint64_t)&unk_10013D07C, 1),
        *(void *)unint64_t result = off_100127448,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = &qword_10013CFD8, uint64_t v4 = v3 + 1, byte_10013CFE0 = 0, dword_10013CFE4 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CE80C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CE854(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3444, a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000C9DDC(result, 0, 0x13u);
  }
  return result;
}

uint64_t sub_1000CE8E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE8FC(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4;
      sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3490, a2, a3);
      return v3;
    }
    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        uint64_t v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0;
          *uint64_t v5 = a3;
          return v3;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000CE98C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if (a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000F2774(a2);
  }
  return *v3 != 0;
}

uint64_t sub_1000CE9E4(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4;
      sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3549, a2, a3);
      return v3;
    }
    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        uint64_t v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0;
          *uint64_t v5 = a3;
          return v3;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000CEA74(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if (a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000F2774(a2);
  }
  return *v3 != 0;
}

uint64_t sub_1000CEACC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72))(result, 0, a2, a3, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CEB10(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 8u, 0, 0, 0, 0, (uint64_t)&stru_10013CB98, (uint64_t)&unk_10013D080, 1),
        *(void *)unint64_t result = off_100127518,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = &qword_10013CFE8, uint64_t v4 = v3 + 1, byte_10013CFF0 = 0, dword_10013CFF4 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CEBC8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CEC10(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3700, a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000C9DDC(result, 0, 0x19u);
  }
  return result;
}

uint64_t sub_1000CECA0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CECB8(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4;
      sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3746, a2, a3);
      return v3;
    }
    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        uint64_t v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0;
          *uint64_t v5 = a3;
          return v3;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000CED48(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if (a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000F2774(a2);
  }
  return *v3 != 0;
}

uint64_t sub_1000CEDA0(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4;
      sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3805, a2, a3);
      return v3;
    }
    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        uint64_t v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0;
          *uint64_t v5 = a3;
          return v3;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CEE30(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if (a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (unsigned int *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000F2774(a2);
  }
  return *v3;
}

uint64_t sub_1000CEE80(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 4u, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D084, 1),
        *(void *)unint64_t result = off_1001275E8,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = 0, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CEF20(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CEF68(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_23;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  unint64_t result = sub_1000622A4(result);
  if (v5) {
    unint64_t result = v5;
  }
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 3955, a2);
    return 0;
  }
  if (result)
  {
    if ((result & 7) != 0)
    {
LABEL_23:
      __break(0x5516u);
      return result;
    }
    if (!(*(unsigned int (**)(unint64_t))(*(void *)result + 240))(result)) {
      return 0;
    }
  }
  unint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  return sub_1000C9DDC(result, 0, 0x12u);
}

BOOL sub_1000CF084(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CF0B0(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = sub_10001CE30(result);
  unint64_t result = *(void *)(v3 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v8 = sub_1000622A4(result);
  if (v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  if (a2)
  {
    int v12 = a3;
    uint64_t v10 = 4;
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4023, a2, v12);
    return v10;
  }
  unint64_t result = sub_10004E9C8();
  if (result && (uint64_t v11 = result, (result & 7) == 0))
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152))(result, v9);
    if (a3)
    {
      if (result <= 3)
      {
        if (result == 2) {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144))(v11, v9, 3);
        }
        return 0;
      }
    }
    else if (result <= 3)
    {
      if (result == 3) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144))(v11, v9, 2);
      }
      return 0;
    }
  }
  else
  {
LABEL_26:
    __break(0x5516u);
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000CF22C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004E9C8();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v10 + 152))(v10, v11) == 3;
}

uint64_t sub_1000CF2EC(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = sub_10001CE30(result);
  unint64_t result = *(void *)(v3 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v8 = sub_1000622A4(result);
  if (v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  if (a2)
  {
    int v12 = a3;
    uint64_t v10 = 4;
    sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4109, a2, v12);
    return v10;
  }
  unint64_t result = sub_10004E9C8();
  if (result && (uint64_t v11 = result, (result & 7) == 0))
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152))(result, v9);
    if (a3)
    {
      if (result < 4)
      {
        if (result == 2) {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144))(v11, v9, 3);
        }
        return 0;
      }
    }
    else if (result <= 3)
    {
      if (result == 3) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144))(v11, v9, 2);
      }
      return 0;
    }
  }
  else
  {
LABEL_26:
    __break(0x5516u);
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000CF464(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004E9C8();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v10 + 152))(v10, v11) == 3;
}

uint64_t sub_1000CF524(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 6u, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D088, 1),
        *(void *)unint64_t result = off_1001276B8,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = 0, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CF5C4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CF60C(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_23;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  unint64_t result = sub_1000622A4(result);
  if (v5) {
    unint64_t result = v5;
  }
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4263, a2);
    return 0;
  }
  if (result)
  {
    if ((result & 7) != 0)
    {
LABEL_23:
      __break(0x5516u);
      return result;
    }
    if (!(*(unsigned int (**)(unint64_t))(*(void *)result + 240))(result)) {
      return 0;
    }
  }
  unint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  return sub_1000C9DDC(result, 0, 0x16u);
}

BOOL sub_1000CF728(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CF754(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4312, a2, v11);
              return v10;
            }
            unint64_t result = sub_10004E9C8();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 192))(result, v9, a3);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CF850(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  int v2 = a2;
  sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_16;
  }
  sub_1000622A4(v6);
  if (v2) {
    goto LABEL_17;
  }
  uint64_t v7 = sub_10004E9C8();
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 200);
  return v8();
}

uint64_t sub_1000CF914(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4377, a2, v11);
              return v10;
            }
            unint64_t result = sub_10004E9C8();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 192))(result, v9, a3 != 0);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CFA10(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004E9C8();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 200))(v10, v11);
}

uint64_t sub_1000CFAC8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000CA7B8(result, a3, a2, 7u, 2u, 2u, 0, 0, (uint64_t)&stru_10013CCB8, (uint64_t)&unk_10013D08C, 1), *(void *)result = off_100127788, (v3 = *(void **)(result + 56)) == 0)|| (v3 & 7) != 0|| (*v3 = &qword_10013D018, uint64_t v4 = v3 + 1, byte_10013D020 = 0, dword_10013D024 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CFB80(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000CFBC8(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = sub_1000622A4(result);
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4534, a2);
    return 0;
  }
  if (v5) {
    uint64_t v6 = v5;
  }
  if (!sub_1000711D8(v6)) {
    return 0;
  }
  unint64_t result = *(void *)(v2 + 8);
  if (result && (result & 7) == 0)
  {
    return sub_1000C9DDC(result, 0, 0x14u);
  }
  else
  {
LABEL_21:
    __break(0x5516u);
  }
  return result;
}

BOOL sub_1000CFCBC(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CFCE8(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (a2)
      {
        uint64_t v5 = 4;
        sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4583, a2, a3);
        return v5;
      }
      unint64_t result = *(void *)(result + 8);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_10008789C(result, 4, a3);
          unint64_t result = *(void *)(v3 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              sub_1000877EC(result, 2u, a3);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000CFD9C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  if (a2) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3 || (v3 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_1000F2774(a2);
  }
  if (sub_1000862B0(v3) == 4)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4 && (v4 & 7) == 0) {
      return sub_100086230(v4) == 2;
    }
    goto LABEL_11;
  }
  return 0;
}

uint64_t sub_1000CFE18(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (a2)
      {
        uint64_t v5 = 4;
        sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4648, a2, a3);
        return v5;
      }
      unint64_t result = *(void *)(result + 8);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_10008789C(result, 4, a3 != 0);
          unint64_t result = *(void *)(v3 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              sub_1000877EC(result, 2u, a3 != 0);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000CFED0(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_7;
  }
  if (a2) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2 || (v2 & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
LABEL_8:
    sub_1000F2774(a2);
  }
  return sub_1000862B0(v2) == 4;
}

uint64_t sub_1000CFF1C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 0xAu, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D094, 1),
        *(void *)unint64_t result = off_100127858,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = 0, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000CFFBC(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000D0004(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = sub_1000622A4(result);
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4800, a2);
    return 0;
  }
  if (v5) {
    uint64_t v6 = v5;
  }
  if (!sub_100070E9C(v6)) {
    return 0;
  }
  unint64_t result = *(void *)(v2 + 8);
  if (result && (result & 7) == 0)
  {
    return sub_1000C9DDC(result, 0, 0);
  }
  else
  {
LABEL_21:
    __break(0x5516u);
  }
  return result;
}

BOOL sub_1000D00F8(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0124(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (!v7) {
              uint64_t v7 = v8;
            }
            if (a2)
            {
              int v12 = a3;
              uint64_t v9 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4850, a2, v12);
              return v9;
            }
            unint64_t result = sub_10004BD48();
            if (result)
            {
              uint64_t v10 = result;
              if ((result & 7) == 0)
              {
                uint64_t v11 = sub_1000DD4C4(*(void *)(v3 + 16));
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v10 + 144))(v10, v7, a3, v11);
                return 0;
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0234(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_18;
  }
  LODWORD(v2) = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_19;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004BD48();
  if (!v10 || (uint64_t v2 = v10, (v10 & 7) != 0))
  {
LABEL_18:
    __break(0x5516u);
LABEL_19:
    sub_1000F2774(v2);
  }
  if (!v6) {
    uint64_t v6 = v9;
  }
  uint64_t v11 = sub_1000DD4C4(*(void *)(a1 + 16));
  int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 152);
  return v12(v2, v6, v11);
}

uint64_t sub_1000D0310(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (!v7) {
              uint64_t v7 = v8;
            }
            if (a2)
            {
              int v12 = a3;
              uint64_t v9 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 4917, a2, v12);
              return v9;
            }
            unint64_t result = sub_10004BD48();
            if (result)
            {
              uint64_t v10 = result;
              if ((result & 7) == 0)
              {
                uint64_t v11 = sub_1000DD4C4(*(void *)(v3 + 16));
                (*(void (**)(uint64_t, uint64_t, BOOL, uint64_t))(*(void *)v10 + 144))(v10, v7, a3 != 0, v11);
                return 0;
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0424(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  LODWORD(v2) = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_17;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004BD48();
  if (!v10 || (uint64_t v2 = v10, (v10 & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  if (!v6) {
    uint64_t v6 = v9;
  }
  uint64_t v11 = sub_1000DD4C4(*(void *)(a1 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 152))(v2, v6, v11);
}

uint64_t sub_1000D04F4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void))(*(void *)result + 72))(result, 0, a2, 0, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0538(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000CA7B8(result, a3, a2, 0xBu, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D098, 1),
        *(void *)unint64_t result = off_100127928,
        (uint64_t v3 = *(void **)(result + 56)) == 0)
    || (v3 & 7) != 0
    || (*v3 = 0, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000D05D8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000D0620(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = sub_10001CE30(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = sub_1000622A4(result);
  if (a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 5073, a2);
    return 0;
  }
  if (v5) {
    uint64_t v6 = v5;
  }
  if (!sub_100070E9C(v6)) {
    return 0;
  }
  unint64_t result = *(void *)(v2 + 8);
  if (result && (result & 7) == 0)
  {
    return sub_1000C9DDC(result, 0, 0);
  }
  else
  {
LABEL_21:
    __break(0x5516u);
  }
  return result;
}

BOOL sub_1000D0714(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0740(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 5122, a2, v11);
              return v10;
            }
            unint64_t result = sub_10004BD48();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 160))(result, a3, v9);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D083C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  int v2 = a2;
  sub_10001CE30(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_16;
  }
  sub_1000622A4(v6);
  if (v2) {
    goto LABEL_17;
  }
  uint64_t v7 = sub_10004BD48();
  if (!v7 || (v7 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000F2774(v2);
  }
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 168);
  return v8();
}

uint64_t sub_1000D0900(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001CE30(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000622A4(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4;
              sub_1000EE4F4(0, 4, "%s:%d Unknown or invalid id(%d) value=%d\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp", 5187, a2, v11);
              return v10;
            }
            unint64_t result = sub_10004BD48();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, BOOL, uint64_t))(*(void *)result + 160))(result, a3 != 0, v9);
              return 0;
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D09FC(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  int v2 = a2;
  uint64_t v6 = sub_10001CE30(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000622A4(v7);
  if (v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_10004BD48();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000F2774(v2);
  }
  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 168))(v10, v11);
}

uint64_t sub_1000D0AB4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000CA7B8(result, a3, a2, 0xCu, 1u, 1u, 0, 0, 0, (uint64_t)&unk_10013D09C, 1);
  *(void *)unint64_t result = off_1001279F8;
  *(_WORD *)(result + 92) = 0;
  uint64_t v3 = *(void **)(result + 56);
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10013D058, uint64_t v4 = v3 + 1, byte_10013D060 = 0, dword_10013D064 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    *uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_1000D0B68(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000CA8A4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000D0BB0(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0;
  }
  unint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000C9DDC(result, 0, 0x1Fu);
  }
  return result;
}

BOOL sub_1000D0C2C(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100099BF0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0C58(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if (a2)
  {
    uint64_t v5 = 4;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }
  if (*(unsigned __int8 *)(result + 93) < 2u)
  {
    if (!*(unsigned char *)(result + 93))
    {
LABEL_18:
      uint64_t v6 = *(void *)(v3 + 56);
      if (v6)
      {
        if ((v6 & 7) == 0)
        {
          uint64_t v7 = (int *)(v6 + 16);
          if ((v7 & 7) == 0)
          {
            uint64_t v5 = 0;
            int *v7 = a3;
            return v5;
          }
        }
      }
      goto LABEL_23;
    }
    if (!a3) {
      goto LABEL_14;
    }
    unint64_t result = sub_10004E9C8();
    if (!result || (result & 7) != 0) {
      goto LABEL_23;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 208))(result))
    {
      unint64_t result = sub_10005176C();
      if (result && (result & 7) == 0)
      {
        unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 456))(result);
LABEL_17:
        *(unsigned char *)(v3 + 92) = a3;
        goto LABEL_18;
      }
    }
    else
    {
LABEL_14:
      unint64_t result = sub_10005176C();
      if (result && (result & 7) == 0)
      {
        unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 464))(result);
        goto LABEL_17;
      }
    }
LABEL_23:
    __break(0x5516u);
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000D0DB0(BOOL result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    __break(0x550Au);
    return result;
  }
  if (a2)
  {
    syslog(4, "Unknown or invalid id(%d)\n", a2);
    return 0;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 92);
  if (v2 >= 2) {
    goto LABEL_9;
  }
  return v2 != 0;
}

uint64_t sub_1000D0E14(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0E50(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D0E98(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(result + 93) = a4;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72))(result, 0, a2, a3, 0);
  }
  return result;
}

void sub_1000D0EE4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000D0EF8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000D0F0C(uint64_t result, unsigned int a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)(result + 56);
  if (__CFADD__(v5, 24 * a2))
  {
LABEL_27:
    __break(0x5513u);
    goto LABEL_28;
  }
  if (!v5) {
    goto LABEL_26;
  }
  uint64_t v6 = v5 + 24 * a2;
  if ((v6 & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)v6;
  if (!*(void *)v6) {
    return result;
  }
  if ((v7 & 7) != 0 || ((v7 + 8) & 7) != 0) {
    goto LABEL_26;
  }
  if (*(unsigned __int8 *)(v7 + 8) >= 2u) {
    goto LABEL_28;
  }
  if (!*(unsigned char *)(v7 + 8)) {
    return result;
  }
  if ((v6 + 10)) {
    goto LABEL_26;
  }
  if (*(unsigned __int8 *)(v6 + 10) > 1u)
  {
LABEL_28:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(v6 + 10)) {
    return result;
  }
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v9 = (_DWORD *)(v7 + 12);
  if ((v9 & 3) != 0
    || (uint64_t v10 = v5 + 24 * a2 + 16, (v10 & 7) != 0)
    || (*(_DWORD *)uint64_t v10 = *v9, ((v6 + 8) & 7) != 0))
  {
LABEL_26:
    __break(0x5516u);
    goto LABEL_27;
  }
  *(unsigned char *)(v6 + 8) = 1;
  *(unsigned char *)(result + 36) = 1;
  if (a4)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
    if (result)
    {
      uint64_t v11 = *(uint64_t (**)(uint64_t, void))(*(void *)v4 + 40);
      return v11(v4, 0);
    }
  }
  return result;
}

uint64_t sub_1000D106C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_DWORD *)(result + 88) <= a2) {
    goto LABEL_34;
  }
  uint64_t v4 = *(void *)(result + 80);
  if (__CFADD__(v4, 4 * a2)) {
    goto LABEL_36;
  }
  if (!v4) {
    goto LABEL_35;
  }
  uint64_t v5 = (int *)(v4 + 4 * a2);
  if ((v5 & 3) != 0) {
    goto LABEL_35;
  }
  int v6 = *v5;
  if ((v6 + 4) > 7) {
    goto LABEL_37;
  }
  if (v6)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }
  unsigned int v7 = a2;
  uint64_t v8 = *(void *)(result + 56);
  if (__CFADD__(v8, 24 * a2)) {
    goto LABEL_36;
  }
  if (!v8) {
    goto LABEL_35;
  }
  uint64_t v9 = v8 + 24 * a2;
  if ((v9 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v10 = (unsigned __int8 *)(v9 + 10);
  if (v10) {
    goto LABEL_35;
  }
  unsigned int v11 = *v10;
  if (v11 > 1) {
    goto LABEL_37;
  }
  unint64_t v12 = 24 * a2;
  if (v11)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
    uint64_t v13 = v2[7];
    unint64_t v14 = ~v13;
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
    if (v12 > v14) {
      goto LABEL_36;
    }
    if (v13)
    {
      uint64_t v15 = v13 + 24 * v7;
      if ((v15 & 7) == 0)
      {
        unsigned int v16 = *(unsigned __int8 *)(v15 + 11);
        if (v16 > 1) {
          goto LABEL_37;
        }
        if (!v16) {
          goto LABEL_29;
        }
        goto LABEL_21;
      }
    }
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
LABEL_21:
  unint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v2 + 120))(v2, a2);
  uint64_t v13 = v2[7];
  unint64_t v14 = ~v13;
  if (v12 > ~v13) {
    goto LABEL_36;
  }
  if (!v13) {
    goto LABEL_35;
  }
  uint64_t v17 = v13 + 24 * v7;
  if ((v17 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v18 = v13 + 24 * v7 + 16;
  if ((v18 & 7) != 0) {
    goto LABEL_35;
  }
  *(_DWORD *)uint64_t v18 = result;
  BOOL v19 = (unsigned char *)(v17 + 10);
  if (v19) {
    goto LABEL_35;
  }
  if (*v19 <= 1u)
  {
    if (!*v19) {
      unsigned char *v19 = 1;
    }
LABEL_29:
    if (v12 <= v14)
    {
      if (v13)
      {
        if ((v13 & 7) == 0)
        {
          uint64_t v20 = v13 + 24 * v7 + 16;
          if ((v20 & 7) == 0) {
            return *(_DWORD *)v20 != 0;
          }
        }
      }
      goto LABEL_35;
    }
LABEL_36:
    __break(0x5513u);
  }
LABEL_37:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D124C(uint64_t result, uint64_t a2, int a3, int a4, char a5)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v6 = *(_DWORD *)(result + 24);
  if (v6 >= 0x10) {
    goto LABEL_39;
  }
  if (v6 != 2)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128))(result, a2);
    if (!result) {
      return 4;
    }
  }
  uint64_t v11 = *(void *)(v5 + 80);
  if (__CFADD__(v11, 4 * a2)) {
    goto LABEL_40;
  }
  if (!v11) {
    goto LABEL_38;
  }
  unint64_t v12 = (int *)(v11 + 4 * a2);
  if ((v12 & 3) != 0) {
    goto LABEL_38;
  }
  int v13 = *v12;
  if ((v13 + 4) > 7) {
    goto LABEL_39;
  }
  if (v13 != 1)
  {
    __break(0x5518u);
    goto LABEL_38;
  }
  uint64_t v14 = *(void *)(v5 + 56);
  if (__CFADD__(v14, 24 * a2)) {
    goto LABEL_40;
  }
  if (!v14
    || (uint64_t v15 = v14 + 24 * a2, (v15 & 7) != 0)
    || (uint64_t v16 = v14 + 24 * a2 + 16, (v16 & 7) != 0)
    || (*(_DWORD *)uint64_t v16 = a3, (((_BYTE)v15 + 8) & 7) != 0)
    || (*(unsigned char *)(v15 + 8) = 1, *(unsigned char *)(v5 + 36) = 1, uint64_t v17 = (unsigned char *)(v15 + 10), ((v15 + 10) & 1) != 0))
  {
LABEL_38:
    __break(0x5516u);
    goto LABEL_39;
  }
  if (*v17 > 1u)
  {
LABEL_39:
    __break(0x550Au);
    goto LABEL_40;
  }
  if (*v17)
  {
    if (!a4) {
      goto LABEL_35;
    }
  }
  else
  {
    *uint64_t v17 = 1;
    if (!a4)
    {
LABEL_35:
      (*(void (**)(uint64_t, void))(*(void *)v5 + 40))(v5, 0);
      return 0;
    }
  }
  if (a5) {
    goto LABEL_35;
  }
  uint64_t v18 = *(void *)v15;
  if (!v18) {
    goto LABEL_35;
  }
  if ((v18 & 7) != 0) {
    goto LABEL_38;
  }
  BOOL v19 = (unsigned char *)(v18 + 8);
  if ((v19 & 7) != 0) {
    goto LABEL_38;
  }
  if (*v19 > 1u) {
    goto LABEL_39;
  }
  if (*v19) {
    goto LABEL_35;
  }
  unsigned char *v19 = 1;
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 120))(v5, a2);
  uint64_t v20 = *(void *)(v5 + 56);
  if (!__CFADD__(v20, 24 * a2))
  {
    if (v20)
    {
      unint64_t v21 = (uint64_t *)(v20 + 24 * a2);
      if ((v21 & 7) == 0)
      {
        uint64_t v22 = *v21;
        if (v22)
        {
          if ((v22 & 7) == 0)
          {
            uint64_t v23 = (_DWORD *)(v22 + 12);
            if ((v23 & 3) == 0)
            {
              *uint64_t v23 = result;
              goto LABEL_35;
            }
          }
        }
      }
    }
    goto LABEL_38;
  }
LABEL_40:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000D1484(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_DWORD *)(result + 88) <= a2) {
    goto LABEL_34;
  }
  uint64_t v4 = *(void *)(result + 80);
  if (__CFADD__(v4, 4 * a2)) {
    goto LABEL_36;
  }
  if (!v4) {
    goto LABEL_35;
  }
  uint64_t v5 = (int *)(v4 + 4 * a2);
  if ((v5 & 3) != 0) {
    goto LABEL_35;
  }
  int v6 = *v5;
  if ((v6 + 4) > 7) {
    goto LABEL_37;
  }
  if (v6 != 1)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }
  unsigned int v7 = a2;
  uint64_t v8 = *(void *)(result + 56);
  if (__CFADD__(v8, 24 * a2)) {
    goto LABEL_36;
  }
  if (!v8) {
    goto LABEL_35;
  }
  uint64_t v9 = v8 + 24 * a2;
  if ((v9 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v10 = (unsigned __int8 *)(v9 + 10);
  if (v10) {
    goto LABEL_35;
  }
  unsigned int v11 = *v10;
  if (v11 > 1) {
    goto LABEL_37;
  }
  unint64_t v12 = 24 * a2;
  if (v11)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
    uint64_t v13 = v2[7];
    unint64_t v14 = ~v13;
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
    if (v12 > v14) {
      goto LABEL_36;
    }
    if (v13)
    {
      uint64_t v15 = v13 + 24 * v7;
      if ((v15 & 7) == 0)
      {
        unsigned int v16 = *(unsigned __int8 *)(v15 + 11);
        if (v16 > 1) {
          goto LABEL_37;
        }
        if (!v16) {
          goto LABEL_29;
        }
        goto LABEL_21;
      }
    }
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }
LABEL_21:
  unint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v2 + 120))(v2, a2);
  uint64_t v13 = v2[7];
  unint64_t v14 = ~v13;
  if (v12 > ~v13) {
    goto LABEL_36;
  }
  if (!v13) {
    goto LABEL_35;
  }
  uint64_t v17 = v13 + 24 * v7;
  if ((v17 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v18 = v13 + 24 * v7 + 16;
  if ((v18 & 7) != 0) {
    goto LABEL_35;
  }
  *(_DWORD *)uint64_t v18 = result;
  BOOL v19 = (unsigned char *)(v17 + 10);
  if (v19) {
    goto LABEL_35;
  }
  if (*v19 <= 1u)
  {
    if (!*v19) {
      unsigned char *v19 = 1;
    }
LABEL_29:
    if (v12 <= v14)
    {
      if (v13)
      {
        if ((v13 & 7) == 0)
        {
          uint64_t v20 = v13 + 24 * v7 + 16;
          if ((v20 & 7) == 0) {
            return *(unsigned int *)v20;
          }
        }
      }
      goto LABEL_35;
    }
LABEL_36:
    __break(0x5513u);
  }
LABEL_37:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1660(uint64_t result, uint64_t a2, unsigned char *a3, int a4)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v7 = *(_DWORD *)(result + 28);
  if (v7 > 3)
  {
LABEL_33:
    __break(0x550Au);
    return result;
  }
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  if (v7 != 1) {
    goto LABEL_26;
  }
  if (!*(void *)(result + 40)) {
    sub_1000F2364();
  }
  unint64_t result = *(void *)(result + 48);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_33;
  }
  pthread_mutex_lock((pthread_mutex_t *)result);
  uint64_t v18 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v9 = *(void *)(v6 + 40);
  if (!v9 || (v9 & 7) != 0 || ((v9 + 8) & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
LABEL_26:
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 80))(v6, v5);
    char v17 = 0;
    if (!v4) {
      return result;
    }
    goto LABEL_27;
  }
  int v10 = 0;
  char v11 = a4 ^ 1;
  uint64_t v18 = *(void *)(v9 + 8);
  while (v18 != v9)
  {
    unint64_t v12 = sub_10000FDD0(&v18);
    uint64_t v13 = *v12;
    if (*v12) {
      BOOL v14 = (*v12 & 7) == 0;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14)
    {
      int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 80))(*v12, v5);
      int v16 = v13 == v6 ? v10 : 1;
      if (v15 != a4) {
        int v10 = v16;
      }
      else {
        char v11 = v15;
      }
      sub_10000FE04(&v18);
      uint64_t v9 = *(void *)(v6 + 40);
      if (v9)
      {
        if ((v9 & 7) == 0) {
          continue;
        }
      }
    }
    goto LABEL_25;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 48));
  char v17 = v10 & 1;
  unint64_t result = v11 & 1;
  if (v4) {
LABEL_27:
  }
    *uint64_t v4 = v17;
  return result;
}

uint64_t sub_1000D17F8(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000D1894(v1) ? sub_1000D1928(v1) : 0;
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1894(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  unsigned int v1 = *(_DWORD *)(result + 28);
  if (v1 >= 4) {
    goto LABEL_15;
  }
  if (v1 != 2) {
    return 1;
  }
  uint64_t v2 = *(void *)(result + 64);
  if (!v2) {
    return 1;
  }
  if (((v2 | (v2 + 72)) & 7) != 0
    || (((_BYTE)v2 + 88) & 7) != 0
    || (uint64_t v3 = (void *)(v2 + 64), ((v2 + 64) & 7) != 0))
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
  unint64_t v4 = *(void *)(v2 + 88);
  if (*v3 != *(void *)(result + 16))
  {
    unint64_t v5 = 0;
    return v4 <= v5;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 37);
  if (v5 <= 1) {
    return v4 <= v5;
  }
LABEL_15:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1928(uint64_t result)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1;
    }
    uint64_t v3 = *(void *)(result + 64);
    if (!v3) {
      return 1;
    }
    unint64_t v5 = (void *)(result + 16);
    uint64_t v4 = *(void *)(result + 16);
    if (!v4) {
      goto LABEL_19;
    }
    if ((v3 & 7) != 0 || (((_BYTE)v3 + 64) & 7) != 0) {
      goto LABEL_23;
    }
    if (*(void *)(v3 + 64) == v4) {
      goto LABEL_19;
    }
    if (*(unsigned __int8 *)(result + 37) <= 1u)
    {
      if (!*(unsigned char *)(result + 37))
      {
        unint64_t result = v3 + 72;
        if ((((v3 + 72) | v5) & 7) != 0) {
          goto LABEL_23;
        }
        unint64_t result = sub_1000262E8(result, (void *)(v1 + 16));
        *(unsigned char *)(v1 + 37) = 1;
      }
      *(unsigned char *)(v1 + 36) = 1;
      uint64_t v3 = *(void *)(v1 + 64);
      if (v3 && (v3 & 7) == 0 && (((_BYTE)v3 + 64) & 7) == 0)
      {
        if (!*(void *)(v3 + 64)) {
          *(void *)(v3 + 64) = *v5;
        }
LABEL_19:
        if ((v3 & 7) == 0)
        {
          uint64_t v6 = (void *)(v3 + 64);
          if ((v6 & 7) == 0) {
            return *v6 == *v5;
          }
        }
      }
LABEL_23:
      __break(0x5516u);
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1A34(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  unsigned int v1 = *(_DWORD *)(result + 28);
  if (v1 < 4)
  {
    if (v1 != 2) {
      return 1;
    }
    uint64_t v2 = *(void *)(result + 64);
    if (!v2) {
      return 1;
    }
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (uint64_t *)(v2 + 64);
      if ((v3 & 7) == 0)
      {
        uint64_t v4 = *v3;
        if (v4) {
          return v4 == *(void *)(result + 16);
        }
        return 1;
      }
    }
    goto LABEL_11;
  }
LABEL_12:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1A98(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000D1894(v1);
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1B20(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000D1928(v1);
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D1BA8(uint64_t result)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 >= 4) {
    goto LABEL_33;
  }
  if (v2 != 2) {
    return result;
  }
  unint64_t result = *(void *)(result + 64);
  if (!result) {
    return result;
  }
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  unint64_t result = pthread_mutex_lock((pthread_mutex_t *)result);
  if (*(unsigned __int8 *)(v1 + 37) > 1u)
  {
LABEL_33:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(v1 + 37)) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)(v1 + 64);
  if (!v3 || (v3 & 7) != 0 || (unint64_t result = v3 + 72, ((v3 + 72) & 7) != 0) || ((v1 + 16) & 7) != 0)
  {
LABEL_32:
    __break(0x5516u);
    goto LABEL_33;
  }
  sub_1000672F0((void *)result, (void *)(v1 + 16));
  *(unsigned char *)(v1 + 37) = 0;
LABEL_14:
  *(unsigned char *)(v1 + 36) = 0;
  unint64_t result = *(void *)(v1 + 64);
  if (!result || (result & 7) != 0 || ((result + 64) & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)(result + 64);
  if (!v4 || v4 != *(void *)(v1 + 16))
  {
    return pthread_mutex_unlock((pthread_mutex_t *)result);
  }
  *(void *)(result + 64) = 0;
  if ((((_BYTE)result + 72) & 7) != 0 || (((_BYTE)result + 88) & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v5 = *(void *)(result + 88);
  unint64_t result = pthread_mutex_unlock((pthread_mutex_t *)result);
  if (!v5) {
    return result;
  }
  unint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0) {
    goto LABEL_32;
  }
  if (*(_DWORD *)(v1 + 24) > 0xFu) {
    goto LABEL_33;
  }
  uint64_t v6 = *(uint64_t (**)(void))(*(void *)result + 48);
  return v6();
}

uint64_t sub_1000D1D20(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 88);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D1D38(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(result + 88) <= a2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v2 = *(void *)(result + 80);
  if (__CFADD__(v2, 4 * a2)) {
    goto LABEL_11;
  }
  if (!v2 || (uint64_t v3 = (unsigned int *)(v2 + 4 * a2), (v3 & 3) != 0))
  {
LABEL_10:
    __break(0x5516u);
LABEL_11:
    __break(0x5513u);
    goto LABEL_12;
  }
  unint64_t result = *v3;
  if ((result + 4) >= 8) {
LABEL_12:
  }
    __break(0x550Au);
  return result;
}

pthread_mutex_t *sub_1000D1D94(pthread_mutex_t *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[1].__sig = 0;
    sub_1000142B4(result[1].__opaque);
    pthread_mutex_init(v1, 0);
    return v1;
  }
  return result;
}

uint64_t sub_1000D1DE0(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (pthread_mutex_destroy((pthread_mutex_t *)result), unint64_t result = v1 + 72, ((v1 + 72) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C7D0(result);
    return v1;
  }
  return result;
}

uint64_t sub_1000D1E2C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator delete();
  }
  __break(0x5516u);
  return result;
}

pthread_mutex_t *sub_1000D1E50(pthread_mutex_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      result->__sig = (uint64_t)off_100127D48;
      for (uint64_t i = 8; i != 1352; i += 96)
        unint64_t result = sub_1000D1D94((pthread_mutex_t *)((char *)v1 + i));
      unint64_t v3 = 0;
      while (v3 <= ~(unint64_t)&v1[24].__opaque[32])
      {
        *(void *)&v1[24].__opaque[v3 + 32] = 0;
        if (v3 > ~(unint64_t)v1[21].__opaque) {
          break;
        }
        *(void *)&v1[21].__opaque[v3] = 0;
        if (v3 > ~(unint64_t)&v1[22].__opaque[48]) {
          break;
        }
        *(void *)&v1[22].__opaque[v3 + 48] = 0;
        v3 += 8;
        if (v3 == 112) {
          return v1;
        }
      }
      __break(0x5513u);
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000D1F18(void *a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000D1F74(a1);
  }
}

void *sub_1000D1F2C(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000D1F74(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void sub_1000D1F74(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = 0;
    *a1 = off_100127D48;
    unint64_t v3 = ~(unint64_t)(a1 + 197);
    unint64_t v4 = ~(unint64_t)(a1 + 169);
    unint64_t v5 = ~(unint64_t)(a1 + 183);
    while (1)
    {
      unint64_t v6 = 8 * v2;
      if (8 * v2 > v3) {
        break;
      }
      uint64_t v7 = a1[v2 + 197];
      if (v7)
      {
        uint64_t v8 = *(void *)(v7 - 8);
        if (!v8) {
LABEL_10:
        }
          operator delete[]();
        uint64_t v9 = -16 * v8;
        while ((v7 & 7) == 0)
        {
          v9 += 16;
          if (!v9) {
            goto LABEL_10;
          }
        }
        goto LABEL_25;
      }
      if (v6 > v4) {
        break;
      }
      int v10 = &a1[v2 + 169];
      uint64_t v11 = *v10;
      if (*v10)
      {
        if ((v11 & 7) != 0) {
          goto LABEL_25;
        }
        sub_10001C7D0(v11);
        if (*v10)
        {
          if ((*v10 & 7) == 0)
          {
            sub_10001C7D0(*v10);
            operator delete();
          }
          goto LABEL_25;
        }
        *int v10 = 0;
      }
      if (v6 > v5) {
        break;
      }
      unint64_t v12 = (pthread_mutex_t **)&a1[v2 + 183];
      if (*v12)
      {
        pthread_mutex_destroy(*v12);
        free(*v12);
        *unint64_t v12 = 0;
      }
      if (++v2 == 14)
      {
        for (uint64_t i = 157; i != -11; i -= 12)
          sub_1000D1DE0((uint64_t)&a1[i]);
        return;
      }
    }
  }
  __break(0x5513u);
}

uint64_t sub_1000D20F4()
{
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 48);
    return v1();
  }
  return result;
}

void *sub_1000D2168@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (result[4] = *a2, *(unsigned char *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[5] = 0;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

uint64_t sub_1000D21FC()
{
  qword_10013C9B0 = 0;
  qword_10013C9A8 = 0;
  qword_10013C9A0 = (uint64_t)&qword_10013C9A8;
  __cxa_atexit((void (*)(void *))sub_1000C8344, &qword_10013C9A0, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013C9B8);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013C9B8, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CA18);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CA18, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CA78);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CA78, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CAD8);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CAD8, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CB38);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CB38, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CB98);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CB98, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CBF8);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CBF8, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CC58);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CC58, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CCB8);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CCB8, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CD18);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CD18, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CD78);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CD78, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CDD8);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CDD8, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CE38);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CE38, (void *)&_mh_execute_header);
  sub_1000D1D94(&stru_10013CE98);
  __cxa_atexit((void (*)(void *))sub_1000C8358, &stru_10013CE98, (void *)&_mh_execute_header);
  qword_10013CEF8 = (uint64_t)off_100127D18;
  byte_10013CF00 = 0;
  qword_10013CF08 = (uint64_t)off_100127D18;
  byte_10013CF10 = 0;
  qword_10013CF18 = (uint64_t)off_100127D18;
  byte_10013CF20 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C836C, &qword_10013CEF8, (void *)&_mh_execute_header);
  qword_10013CF28 = (uint64_t)off_100127D18;
  byte_10013CF30 = 0;
  qword_10013CF38 = (uint64_t)off_100127D18;
  byte_10013CF40 = 0;
  qword_10013CF48 = (uint64_t)off_100127D18;
  byte_10013CF50 = 0;
  qword_10013CF58 = (uint64_t)off_100127D18;
  byte_10013CF60 = 0;
  qword_10013CF68 = (uint64_t)off_100127D18;
  byte_10013CF70 = 0;
  qword_10013CF78 = (uint64_t)off_100127D18;
  byte_10013CF80 = 0;
  qword_10013CF88 = (uint64_t)off_100127D18;
  byte_10013CF90 = 0;
  qword_10013CF98 = (uint64_t)off_100127D18;
  byte_10013CFA0 = 0;
  qword_10013CFA8 = (uint64_t)off_100127D18;
  byte_10013CFB0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C8398, &qword_10013CF28, (void *)&_mh_execute_header);
  qword_10013CFB8 = (uint64_t)off_100127D18;
  byte_10013CFC0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013CFB8, (void *)&_mh_execute_header);
  qword_10013CFC8 = (uint64_t)off_100127D18;
  byte_10013CFD0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013CFC8, (void *)&_mh_execute_header);
  qword_10013CFD8 = (uint64_t)off_100127D18;
  byte_10013CFE0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013CFD8, (void *)&_mh_execute_header);
  qword_10013CFE8 = (uint64_t)off_100127D18;
  byte_10013CFF0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013CFE8, (void *)&_mh_execute_header);
  qword_10013CFF8 = (uint64_t)off_100127D18;
  byte_10013D000 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013CFF8, (void *)&_mh_execute_header);
  qword_10013D008 = (uint64_t)off_100127D18;
  byte_10013D010 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D008, (void *)&_mh_execute_header);
  qword_10013D018 = (uint64_t)off_100127D18;
  byte_10013D020 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D018, (void *)&_mh_execute_header);
  qword_10013D028 = (uint64_t)off_100127D18;
  byte_10013D030 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D028, (void *)&_mh_execute_header);
  qword_10013D038 = (uint64_t)off_100127D18;
  byte_10013D040 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D038, (void *)&_mh_execute_header);
  qword_10013D048 = (uint64_t)off_100127D18;
  byte_10013D050 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D048, (void *)&_mh_execute_header);
  qword_10013D058 = (uint64_t)off_100127D18;
  byte_10013D060 = 0;
  __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D058, (void *)&_mh_execute_header);
  qword_10013D068 = (uint64_t)off_100127D18;
  byte_10013D070 = 0;
  return __cxa_atexit((void (*)(void *))sub_1000C840C, &qword_10013D068, (void *)&_mh_execute_header);
}

uint64_t sub_1000D289C()
{
  if (qword_10013C6C0 != -1) {
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
  }
  return qword_10013C6B8;
}

void sub_1000D28E0(id a1)
{
}

uint64_t sub_1000D292C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t v2 = sub_10009ECB0((void *)result);
      uint64_t result = sub_10005FB9C((uint64_t)v2);
      if (((v1 + 176) & 7) == 0)
      {
        *(void *)(v1 + 176) = off_1001280C0;
        if (((v1 + 184) & 7) == 0)
        {
          *(void *)(v1 + 184) = &off_100128120;
          if (((v1 + 192) & 7) == 0)
          {
            *(void *)uint64_t v1 = off_100127DD8;
            *(void *)(v1 + 176) = off_100127EF0;
            *(void *)(v1 + 184) = off_100127F50;
            *(void *)(v1 + 192) = off_100127FA8;
            *(unsigned char *)(v1 + 200) = 0;
            sub_1000142B4((void *)(v1 + 272));
            *(unsigned char *)(v1 + 432) = 0;
            *(_DWORD *)(v1 + 448) = 0;
            uint64_t result = (uint64_t)dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, (dispatch_queue_t)&_dispatch_main_q);
            *(void *)(v1 + 296) = result;
            if (!result) {
              goto LABEL_25;
            }
            handler[0] = _NSConcreteStackBlock;
            handler[1] = 0x40000000;
            handler[2] = sub_1000D2D3C;
            handler[3] = &unk_100127FC0;
            handler[4] = v1;
            dispatch_source_set_event_handler((dispatch_source_t)result, handler);
            uint64_t result = *(void *)(v1 + 296);
            if (!result) {
              goto LABEL_25;
            }
            dispatch_source_set_timer((dispatch_source_t)result, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
            uint64_t result = *(void *)(v1 + 296);
            if (!result) {
              goto LABEL_25;
            }
            dispatch_resume((dispatch_object_t)result);
            *(void *)(v1 + 440) = dispatch_semaphore_create(0);
            sub_1000DA5F4((pthread_mutex_t *)(v1 + 208));
            pthread_mutex_init((pthread_mutex_t *)(v1 + 304), 0);
            pthread_mutex_init((pthread_mutex_t *)(v1 + 456), 0);
            pthread_mutex_init((pthread_mutex_t *)(v1 + 368), 0);
            dword_10013B8A8 = 1;
            dword_10013B8AC = 1;
            uint64_t result = sub_10004E9C8();
            if (result)
            {
              if ((result & 7) == 0)
              {
                *(_DWORD *)(v1 + 204) = (*(uint64_t (**)(uint64_t))(*(void *)result + 208))(result);
                v6[0] = 0xAAAAAAAAAAAAAAAALL;
                v6[1] = 0xAAAAAAAAAAAAAAAALL;
                sub_10002EDDC((uint64_t)v6);
                v5[0] = 0xAAAAAAAAAAAAAAAALL;
                v5[1] = 0xAAAAAAAAAAAAAAAALL;
                sub_1000EE3E8((uint64_t)v6, v5);
                unint64_t v3 = sub_10002DC04(v5);
                *(void *)(v1 + 520) = v3;
                *(void *)(v1 + 528) = v3;
                uint64_t result = sub_10004CDB4();
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    int v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 40))(result);
                    if (!v4) {
                      sub_1000EE4F4(0, 4, "%s:%d CIapProtocolMgr::CIapProtocolMgr: ERROR: Lingo mask = 0 !\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp", 265);
                    }
                    dword_10013D0A8 = v4;
                    uint64_t result = sub_10005176C();
                    if (result)
                    {
                      if ((result & 7) == 0)
                      {
                        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, v1 + 176);
                        uint64_t result = sub_10004E9C8();
                        if (result)
                        {
                          if ((result & 7) == 0)
                          {
                            (*(void (**)(uint64_t, uint64_t))(*(void *)result + 88))(result, v1 + 184);
                            uint64_t result = sub_10004CDB4();
                            if (result)
                            {
                              if ((result & 7) == 0)
                              {
                                (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, v1 + 192);
                                *(unsigned char *)(v1 + 201) = 0;
                                uint64_t result = sub_100031160();
                                if (result)
                                {
                                  if ((result & 7) == 0)
                                  {
                                    byte_10013C988 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)result + 360))(result, "_IapAllowAsyncProcessLargeDataForAll");
                                    v6[0] = off_100123868;
                                    sub_1000EE300(v6);
                                    return v1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_25:
  __break(0x5510u);
  return result;
}

uint64_t sub_1000D2D3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(v1 + 208));
  if (((v1 + 272) & 7) != 0 || ((v1 + 288) & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)(v1 + 288);
  unint64_t v6 = 0;
  if (!v3) {
    return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 208));
  }
  if (v3)
  {
    unint64_t v6 = *(uint64_t **)(v1 + 280);
    uint64_t v4 = *sub_10000FDD0((uint64_t *)&v6);
    uint64_t result = sub_100025DC8(v1 + 272, v6);
    if (v4) {
      BOOL v5 = (v4 & 7) == 0;
    }
    else {
      BOOL v5 = 0;
    }
    if (!v5) {
      goto LABEL_19;
    }
    if (*(void *)(v4 + 16))
    {
      pthread_mutex_lock(&stru_10013B980);
      uint64_t result = sub_1000E6CE4(*(void *)(v4 + 16));
      if (!result)
      {
LABEL_14:
        pthread_mutex_unlock(&stru_10013B980);
        goto LABEL_17;
      }
      if ((((_BYTE)v4 + 8) & 7) == 0)
      {
        (*(void (**)(uint64_t, void, void, void, void))(*(void *)v1 + 48))(v1, *(unsigned int *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), 0);
        goto LABEL_14;
      }
    }
    else if ((((_BYTE)v4 + 8) & 7) == 0)
    {
      (*(void (**)(uint64_t, void, void, void, void))(*(void *)v1 + 48))(v1, *(unsigned int *)v4, *(void *)(v4 + 8), 0, 0);
LABEL_17:
      operator delete();
    }
LABEL_19:
    __break(0x5516u);
  }
  __break(0x5515u);
  return result;
}

void sub_1000D2EC8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  *(void *)a1 = off_100127DD8;
  char v2 = a1 - 80;
  *(void *)(a1 + 176) = off_100127EF0;
  char v3 = a1 - 72;
  *(void *)(a1 + 184) = off_100127F50;
  char v4 = a1 - 64;
  *(void *)(a1 + 192) = off_100127FA8;
  BOOL v5 = *(NSObject **)(a1 + 296);
  if (!v5) {
    goto LABEL_26;
  }
  dispatch_release(v5);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 208));
  if (((a1 + 272) & 7) != 0) {
    goto LABEL_25;
  }
  unint64_t v6 = (void *)(a1 + 288);
  if (((a1 + 288) & 7) != 0) {
    goto LABEL_25;
  }
  if (*v6)
  {
    if (((a1 + 280) & 7) == 0)
    {
      while (1)
      {
        BOOL v14 = *(uint64_t **)(a1 + 280);
        uint64_t v7 = *sub_10000FDD0((uint64_t *)&v14);
        sub_100025DC8(a1 + 272, v14);
        if (v7) {
          break;
        }
        if (!*v6) {
          goto LABEL_12;
        }
      }
      if ((v7 & 7) == 0) {
        operator delete();
      }
    }
    goto LABEL_25;
  }
LABEL_12:
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 208));
  uint64_t v8 = sub_10004E9C8();
  if (!v8
    || (v8 & 7) != 0
    || ((*(void (**)(uint64_t, uint64_t))(*(void *)v8 + 96))(v8, a1 + 184), (uint64_t v9 = sub_10004CDB4()) == 0)
    || (v9 & 7) != 0
    || ((*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, a1 + 192), (uint64_t v10 = sub_10005176C()) == 0)
    || (v10 & 7) != 0
    || ((*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, a1 + 176), (uint64_t v11 = sub_10003E5D0()) == 0)
    || (v11 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 24))(v11, a1 + 176);
  sub_1000A0CAC(a1);
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 456));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 304));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 368));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 208));
  unint64_t v12 = *(NSObject **)(a1 + 440);
  if (v12)
  {
    dispatch_release(v12);
    sub_10001C7D0(a1 + 272);
    if ((v4 & 7) == 0 && (v3 & 7) == 0 && (v2 & 7) == 0)
    {
      uint64_t v13 = sub_10005FB9C(a1);
      sub_10009ED3C(v13);
      return;
    }
    goto LABEL_25;
  }
LABEL_26:
  __break(0x5510u);
}

void sub_1000D3178(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000D2EC8(a1);
  }
}

void sub_1000D318C(uint64_t a1)
{
  uint64_t v1 = a1 - 176;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000D2EC8(v1);
  }
}

void sub_1000D31A0(uint64_t a1)
{
  uint64_t v1 = a1 - 184;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000D2EC8(v1);
  }
}

void sub_1000D31B4(uint64_t a1)
{
  uint64_t v1 = a1 - 192;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000D2EC8(v1);
  }
}

uint64_t sub_1000D31C8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000D2EC8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D3210(uint64_t a1)
{
  return sub_1000D31C8(a1 - 176);
}

uint64_t sub_1000D3218(uint64_t a1)
{
  return sub_1000D31C8(a1 - 184);
}

uint64_t sub_1000D3220(uint64_t a1)
{
  return sub_1000D31C8(a1 - 192);
}

uint64_t sub_1000D3228(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (!a2) {
    sub_1000F2364();
  }
  if ((a2 & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    char v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40);
    return v3(a2, a3);
  }
  return result;
}

void sub_1000D3294(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_121;
  }
  if (a2)
  {
    pthread_once(&stru_10013B910, sub_1000D8E78);
    if (!dword_10013B900[0]) {
      goto LABEL_20;
    }
    if ((a2 & 7) != 0) {
      goto LABEL_121;
    }
    uint64_t v4 = *(void *)(a2 + 8);
    sub_1000D3A40(v4);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_121;
    }
    unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216))(v4);
    if (v5 < 5)
    {
      if (~(unint64_t)qword_10013C6C8 < 8 * (unint64_t)v5) {
        goto LABEL_124;
      }
      unint64_t v6 = (unsigned int *)qword_10013C6C8[v5];
      if (v6) {
        BOOL v7 = (v6 & 7) == 0;
      }
      else {
        BOOL v7 = 0;
      }
      if (!v7) {
        goto LABEL_121;
      }
      uint64_t v8 = v6[19];
      if (v8 >= 8) {
        goto LABEL_122;
      }
      if (v8 < 4)
      {
        if (~(unint64_t)dword_10013B900 >= 4 * v8)
        {
          if (dword_10013B900[v8]) {
            (*(void (**)(unsigned int *, void, void, void))(*(void *)v6 + 104))(v6, *(unsigned __int16 *)(a2 + 128), 0, 0);
          }
LABEL_20:
          uint64_t v9 = sub_100031160();
          if (!v9 || (v9 & 7) != 0 || (a2 & 7) != 0) {
            goto LABEL_121;
          }
          if ((*(_DWORD *)(a2 + 64) + 32) >= 0x40) {
            goto LABEL_122;
          }
          (*(void (**)(uint64_t))(*(void *)v9 + 280))(v9);
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 368));
          unsigned __int8 v39 = 0;
          uint64_t v10 = *(void *)(a2 + 8);
          if ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 40))(a2))
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 40))(a2) == 1) {
              int v11 = 36;
            }
            else {
              int v11 = 2;
            }
            if (v10) {
              goto LABEL_29;
            }
          }
          else
          {
            int v11 = 0;
            if (v10)
            {
LABEL_29:
              if ((v10 & 7) != 0) {
                goto LABEL_121;
              }
              BOOL v12 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 216))(v10) == 0;
LABEL_34:
              if (*(unsigned __int8 *)(a1 + 432) >= 2u) {
                goto LABEL_122;
              }
              if (v12) {
                int v13 = 16;
              }
              else {
                int v13 = v11;
              }
              if (*(unsigned char *)(a1 + 432)) {
                int v14 = v13;
              }
              else {
                int v14 = v11;
              }
              uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(void *)a1 + 248))(a1, a2, &v39);
              if (v15 && sub_1000A1834(a1, v15))
              {
                if ((v15 & 7) != 0) {
                  goto LABEL_121;
                }
                if (sub_1000622BC(v15))
                {
LABEL_46:
                  sub_1000C6E1C(a2);
LABEL_95:
                  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 368));
                  return;
                }
              }
              if (v14) {
                goto LABEL_46;
              }
              int v16 = *(_DWORD *)(a2 + 64);
              if ((v16 + 32) >= 0x40) {
                goto LABEL_122;
              }
              if (v10)
              {
                if ((v10 & 7) != 0) {
                  goto LABEL_121;
                }
                unsigned int v17 = *(unsigned __int16 *)(a2 + 126);
                uint64_t v18 = *(void *)(v10 + 32);
                if (v18)
                {
                  if (v18 & 7) != 0 || ((v18 + 58)) {
                    goto LABEL_121;
                  }
                  unsigned int v19 = *(unsigned __int8 *)(v18 + 58);
                  if (v19 > 1) {
                    goto LABEL_122;
                  }
                  unsigned int v20 = *(unsigned __int8 *)(v18 + 57);
                  if (v20 > 1) {
                    goto LABEL_122;
                  }
                  BOOL v21 = v19 != 0;
                }
                else
                {
                  BOOL v21 = 0;
                  unsigned int v20 = 0;
                }
                if ((v17 > 0x38 || ((1 << v17) & 0x100000000080002) == 0 || v16)
                  && (*(unsigned int (**)(uint64_t))(*(void *)v10 + 216))(v10)
                  && ((v21 | sub_1000E6DB4(v10)) & 1) == 0)
                {
                  sub_100082718(v10);
                  sub_1000C6E1C(a2);
                  if (!v15) {
                    goto LABEL_95;
                  }
                  if ((v15 & 7) == 0)
                  {
                    if (!sub_10001CE30(v15) && *(void *)(v10 + 32)) {
                      sub_1000A0228(a1, (void *)v10, v15);
                    }
                    goto LABEL_95;
                  }
                  goto LABEL_121;
                }
                sub_1000E6D9C(v10, 1);
                if (!v20) {
                  sub_10007D384(v10);
                }
                int v22 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 264))(v10);
                if (v15 && v22 && *(void *)(v10 + 32))
                {
                  if ((v15 & 7) != 0) {
                    goto LABEL_121;
                  }
                  int v23 = sub_100063618(v15);
                  v38[0] = 0xAAAAAAAAAAAAAAAALL;
                  v38[1] = 0xAAAAAAAAAAAAAAAALL;
                  sub_10002EDDC((uint64_t)v38);
                  v37[0] = 0;
                  v37[1] = 0;
                  sub_1000EE3E8((uint64_t)v38, v37);
                  unsigned int v24 = sub_10002DC04(v37);
                  uint64_t v25 = *(void *)(v10 + 32);
                  if (!v25) {
                    goto LABEL_121;
                  }
                  if ((v25 & 7) != 0) {
                    goto LABEL_121;
                  }
                  BOOL v26 = (unsigned int *)(v25 + 80);
                  if ((v26 & 7) != 0) {
                    goto LABEL_121;
                  }
                  if (v23 != (char)v23) {
                    goto LABEL_122;
                  }
                  unsigned int v27 = v24;
                  unsigned int v28 = *v26;
                  if ((v23 == 100 || v23 == -1)
                    && !(*(unsigned int (**)(uint64_t))(*(void *)v10 + 216))(v10))
                  {
                    if (v27 < v28)
                    {
LABEL_125:
                      __break(0x5515u);
                      return;
                    }
                    if (v27 - v28 >= 0x7D0)
                    {
                      uint64_t v29 = *(void *)(v10 + 32);
                      if (!v29) {
                        goto LABEL_121;
                      }
                      if ((v29 & 7) != 0) {
                        goto LABEL_121;
                      }
                      uint64_t v30 = (unsigned int *)(v29 + 80);
                      if ((v30 & 7) != 0) {
                        goto LABEL_121;
                      }
                      unsigned int *v30 = v27;
                      (*(void (**)(uint64_t))(*(void *)v10 + 112))(v10);
                    }
                  }
                  v38[0] = off_100123868;
                  sub_1000EE300(v38);
                }
                if (v16 > 14) {
                  goto LABEL_93;
                }
                if (*(unsigned __int8 *)(a1 + 200) > 1u) {
                  goto LABEL_122;
                }
                if (!*(unsigned char *)(a1 + 200) && !(*(unsigned int (**)(uint64_t))(*(void *)v10 + 232))(v10))
                {
LABEL_93:
                  if (*(unsigned __int8 *)(a1 + 200) <= 1u)
                  {
                    sub_1000EE4F4(0, 4, "Not init(%d) or invalid lingo (%d). Cannot process packet!\n", *(unsigned __int8 *)(a1 + 200), v16);
                    sub_1000C6E1C(a2);
                    goto LABEL_95;
                  }
                  goto LABEL_122;
                }
                if (!v15) {
                  goto LABEL_95;
                }
                if ((v15 & 7) != 0)
                {
LABEL_121:
                  __break(0x5516u);
                  goto LABEL_122;
                }
                if (!sub_10001CE30(v15) && *(void *)(v10 + 32))
                {
                  sub_1000A0228(a1, (void *)v10, v15);
                  sub_1000A1DE4(a1, v15);
                  if (!v33) {
                    sub_1000F2364();
                  }
                  uint64_t v32 = v33;
                  if (!(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 240))(a1, v15, 0))
                  {
                    sub_1000C6E1C(a2);
                    goto LABEL_95;
                  }
                  uint64_t v34 = *(void *)(v10 + 32);
                  if (!v34) {
                    goto LABEL_121;
                  }
                  if ((v34 & 7) != 0) {
                    goto LABEL_121;
                  }
                  unsigned int v35 = (int *)(v34 + 52);
                  if ((v35 & 3) != 0) {
                    goto LABEL_121;
                  }
                  int v36 = *v35;
                  if (v36 != (char)v36 || v39 > 1u) {
                    goto LABEL_122;
                  }
                  if (v39 && v36 != -1 && v36 != 100)
                  {
                    if ((v32 & 7) != 0) {
                      goto LABEL_121;
                    }
                    sub_10006B1A0(v32, 128);
                  }
                  if ((v32 & 7) != 0) {
                    goto LABEL_121;
                  }
                  if (*(_DWORD *)(a1 + 204) <= 3u)
                  {
                    sub_10006B1A0(v32, 0);
LABEL_91:
                    if ((v32 & 7) == 0)
                    {
                      sub_10006A90C(v32, a2);
                      goto LABEL_95;
                    }
                    goto LABEL_121;
                  }
LABEL_122:
                  __break(0x550Au);
                  goto LABEL_123;
                }
                sub_1000A1DE4(a1, v15);
                if (v31)
                {
                  uint64_t v32 = v31;
                  goto LABEL_91;
                }
              }
              else
              {
                __break(0x5518u);
              }
              sub_1000F2364();
            }
          }
          BOOL v12 = 0;
          goto LABEL_34;
        }
LABEL_124:
        __break(0x5513u);
        goto LABEL_125;
      }
    }
LABEL_123:
    __break(0x5512u);
    goto LABEL_124;
  }
}

uint64_t sub_1000D3A40(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) != 0)
    {
LABEL_18:
      __break(0x5516u);
      return result;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
    if (result >= 5) {
      goto LABEL_16;
    }
    if (~(unint64_t)qword_10013C6C8 < 8 * (unint64_t)result) {
      goto LABEL_17;
    }
    if (!qword_10013C6C8[result])
    {
      pthread_mutex_lock(&stru_10013B8B0);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216))(v1);
      if (result <= 4)
      {
        if (~(unint64_t)qword_10013C6C8 >= 8 * (unint64_t)result)
        {
          if (qword_10013C6C8[result])
          {
LABEL_12:
            pthread_mutex_unlock(&stru_10013B8B0);
            goto LABEL_13;
          }
          sub_1000D8F10(v1, 0, 0);
          uint64_t v3 = v2;
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216))(v1);
          if (result <= 4)
          {
            if (~(unint64_t)qword_10013C6C8 >= 8 * (unint64_t)result)
            {
              qword_10013C6C8[result] = v3;
              goto LABEL_12;
            }
            goto LABEL_17;
          }
          goto LABEL_16;
        }
LABEL_17:
        __break(0x5513u);
        goto LABEL_18;
      }
LABEL_16:
      __break(0x5512u);
      goto LABEL_17;
    }
  }
LABEL_13:
  return pthread_once(&stru_10013B8F0, sub_1000D8DC8);
}

uint64_t sub_1000D3BB8(uint64_t result, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t *a5)
{
  if (!result) {
    goto LABEL_76;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_76;
  }
  unint64_t v6 = a5;
  if (!a5) {
    unint64_t v6 = sub_10006FADC();
  }
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFFCLL) {
    goto LABEL_78;
  }
  if (dword_10013B904)
  {
    sub_1000D3A40(a4);
    uint64_t result = qword_10013C6F0;
    if (!qword_10013C6F0 || (qword_10013C6F0 & 7) != 0) {
      goto LABEL_76;
    }
    uint64_t v10 = *(unsigned int *)(qword_10013C6F0 + 76);
    if (v10 >= 8) {
      goto LABEL_77;
    }
    if (v10 >= 4)
    {
LABEL_79:
      __break(0x5512u);
      return result;
    }
    if (~(unint64_t)dword_10013B900 < 4 * v10)
    {
LABEL_78:
      __break(0x5513u);
      goto LABEL_79;
    }
    if (dword_10013B900[v10]) {
      uint64_t result = (*(uint64_t (**)(void))(*(void *)qword_10013C6F0 + 104))();
    }
  }
  if ((a2 & 0x20CC) == 0)
  {
    unsigned int v11 = (a4 != 0) & (a2 >> 10);
    if (a4) {
      goto LABEL_17;
    }
LABEL_25:
    BOOL v15 = 0;
    unsigned int v16 = 0;
    int v17 = 1;
    goto LABEL_39;
  }
  if ((~a2 & 0x2400) == 0)
  {
    __break(0x5518u);
    goto LABEL_76;
  }
  unsigned int v11 = 1;
  if (!a4) {
    goto LABEL_25;
  }
LABEL_17:
  if ((a4 & 7) != 0) {
    goto LABEL_76;
  }
  uint64_t v12 = *(void *)(a4 + 32);
  char v13 = v11 ^ 1;
  if (!v12) {
    char v13 = 1;
  }
  if (v13)
  {
    BOOL v15 = 0;
    if (!v12)
    {
      int v17 = 1;
      unsigned int v16 = 0;
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 280))(a4);
    if (result)
    {
      unsigned int v14 = *(unsigned __int8 *)(a4 + 190);
      if (v14 >= 2) {
        goto LABEL_77;
      }
      BOOL v15 = v14 != 0;
    }
    else
    {
      BOOL v15 = 0;
    }
  }
  uint64_t v18 = *(void *)(a4 + 32);
  if (!v18 || (v18 & 7) != 0 || (unsigned int v19 = (unsigned __int8 *)(v18 + 56), (v19 & 7) != 0))
  {
LABEL_76:
    __break(0x5516u);
    goto LABEL_77;
  }
  unsigned int v20 = *v19;
  if (v20 > 1) {
    goto LABEL_77;
  }
  int v17 = 0;
  if ((a2 & 8) != 0 || v20 == 0) {
    unsigned int v16 = 0;
  }
  else {
    unsigned int v16 = v11;
  }
LABEL_39:
  BOOL v22 = 0;
  if ((a2 & 8) != 0 && !a3)
  {
    if (*(unsigned __int8 *)(v5 + 432) < 2u)
    {
      if (*(unsigned char *)(v5 + 432)) {
        char v23 = v17;
      }
      else {
        char v23 = 1;
      }
      if (v23)
      {
        BOOL v22 = 0;
        goto LABEL_53;
      }
      if (a4)
      {
        if ((a4 & 7) == 0)
        {
          uint64_t v24 = *(void *)(a4 + 32);
          if (v24)
          {
            if ((v24 & 7) == 0)
            {
              uint64_t v25 = (void *)(v24 + 64);
              if ((v25 & 7) == 0)
              {
                BOOL v22 = *v25 == 0;
                goto LABEL_53;
              }
            }
          }
        }
      }
      goto LABEL_76;
    }
LABEL_77:
    __break(0x550Au);
    goto LABEL_78;
  }
LABEL_53:
  uint64_t result = sub_1000D3F7C(a2);
  if (((v16 | v15 | v11 & v17) & 1) != 0 || v22) {
    goto LABEL_63;
  }
  if (*(unsigned __int8 *)(v5 + 200) > 1u) {
    goto LABEL_77;
  }
  if (*(unsigned char *)(v5 + 200))
  {
    if ((a2 & 0x100) != 0) {
      *(_DWORD *)(v5 + 204) = a3;
    }
    uint64_t v26 = *(void *)v5;
    if (v11)
    {
      unsigned int v27 = *(uint64_t (**)(uint64_t, uint64_t, unsigned int *, uint64_t, void, uint64_t *))(v26 + 176);
      return v27(v5, a2, a3, a4, 0, v6);
    }
    else
    {
      unsigned int v28 = *(uint64_t (**)(uint64_t, uint64_t, unsigned int *, uint64_t *))(v26 + 192);
      return v28(v5, a2, a3, v6);
    }
  }
LABEL_63:
  if ((a2 & 0x400) != 0 && a3) {
    uint64_t result = (uint64_t)sub_1000D4168(a3);
  }
  if ((a2 & 0x2000) != 0 && a3)
  {
    return (uint64_t)sub_1000D423C(a3);
  }
  return result;
}

uint64_t sub_1000D3F7C(uint64_t result)
{
  if ((result & 0x18D) == 0)
  {
    uint64_t result = sub_100031160();
    if (result && (result & 7) == 0)
    {
      uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 296);
      return v1();
    }
    goto LABEL_20;
  }
  if ((int)result <= 7)
  {
    if (result == 1 || result == 4)
    {
LABEL_14:
      uint64_t result = sub_100031160();
      if (result && (result & 7) == 0)
      {
        uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 288);
        return v1();
      }
LABEL_20:
      __break(0x5516u);
    }
  }
  else if (result == 256 || result == 128 || result == 8)
  {
    goto LABEL_14;
  }
  return result;
}

unsigned int *sub_1000D4168(unsigned int *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0 && ((unint64_t)(result + 10) & 7) == 0)
    {
      uint64_t v2 = (void (*)(void))*((void *)result + 5);
      if (!v2) {
        goto LABEL_12;
      }
      uint64_t result = (unsigned int *)*result;
      if (result >= 8) {
        goto LABEL_17;
      }
      if ((((_BYTE)v1 + 4) & 3) == 0
        && (((_BYTE)v1 + 8) & 7) == 0
        && (((_BYTE)v1 + 16) & 7) == 0
        && ((unint64_t)(v1 + 6) & 7) == 0
        && ((unint64_t)(v1 + 8) & 7) == 0)
      {
        v2();
LABEL_12:
        operator delete();
      }
    }
    __break(0x5516u);
LABEL_17:
    __break(0x550Au);
  }
  return result;
}

unsigned int *sub_1000D423C(unsigned int *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0 && ((unint64_t)(result + 6) & 7) == 0)
    {
      uint64_t v2 = (void (*)(void))*((void *)result + 3);
      if (!v2) {
        goto LABEL_10;
      }
      uint64_t result = (unsigned int *)*result;
      if ((result + 32) >= 0x40) {
        goto LABEL_15;
      }
      if ((((_BYTE)v1 + 4) & 3) == 0 && ((unint64_t)(v1 + 2) & 7) == 0 && ((unint64_t)(v1 + 4) & 7) == 0)
      {
        v2();
LABEL_10:
        operator delete();
      }
    }
    __break(0x5516u);
LABEL_15:
    __break(0x550Au);
  }
  return result;
}

void sub_1000D42F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v11 = a2;
  BOOL v12 = a3 != 100;
  if (a5) {
    sub_1000D3F7C(a2);
  }
  *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v15[1] = -1431655766;
  long long v19 = v13;
  v15[0] = v11;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  LOBYTE(v19) = 0;
  DWORD1(v19) = 0;
  DWORD2(v19) = a6;
  if ((v11 & 0x4080) == 0) {
    goto LABEL_15;
  }
  if (qword_10013C6C0 != -1) {
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
  }
  if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
    goto LABEL_25;
  }
  sub_1000D44E0((uint64_t *)qword_10013C6B8, v11, a4);
  if (a5) {
    goto LABEL_15;
  }
  if (!a4 || (a4 & 7) != 0) {
    goto LABEL_25;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a4 + 280))(a4) & 1) != 0
    || (sub_1000D4630(a1, (void (*)(uint64_t, uint64_t))sub_1000D4784, (uint64_t)v15, a4, (v11 & 0x4000) == 0),
        !DWORD1(v19)))
  {
LABEL_15:
    LOBYTE(v19) = 1;
    sub_1000D4784((void *)a4, (uint64_t)v15);
    int v14 = v12 & (v11 >> 7) ^ 1;
    if ((v11 & 4) != 0) {
      LOBYTE(v14) = 0;
    }
    if ((v14 & 1) == 0 && !DWORD1(v19))
    {
      if (qword_10013C6C0 != -1) {
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
      {
        sub_1000D5154(qword_10013C6B8);
        return;
      }
LABEL_25:
      __break(0x5516u);
    }
  }
}

uint64_t *sub_1000D44E0(uint64_t *result, int a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 26));
  long long v13 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
  if (((unint64_t)(v3 + 34) & 7) != 0 || ((unint64_t)(v3 + 35) & 7) != 0) {
    goto LABEL_31;
  }
  unint64_t v6 = (uint64_t *)v3[35];
  long long v13 = v6;
  while (v6 != v3 + 34)
  {
    uint64_t result = sub_10000FDD0((uint64_t *)&v13);
    uint64_t v7 = *result;
    uint64_t v8 = *result & 7;
    if (!a3) {
      goto LABEL_18;
    }
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 0;
    }
    if (!v9 || ((v7 + 16) & 7) != 0) {
      goto LABEL_31;
    }
    if (*(void *)(v7 + 16) == a3)
    {
      uint64_t v8 = 0;
LABEL_18:
      if (v7) {
        BOOL v11 = v8 == 0;
      }
      else {
        BOOL v11 = 0;
      }
      if (!v11) {
        goto LABEL_31;
      }
      if (*(_DWORD *)v7 == a2)
      {
        long long v13 = (uint64_t *)sub_100025DC8((uint64_t)(v3 + 34), v13);
        operator delete();
      }
    }
    uint64_t result = sub_10000FE04(&v13);
    unint64_t v6 = v13;
  }
  if (((unint64_t)(v3 + 36) & 7) != 0)
  {
LABEL_31:
    __break(0x5516u);
    return result;
  }
  if (!v3[36])
  {
    BOOL v12 = v3[37];
    if (v12) {
      dispatch_source_set_timer(v12, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
    }
  }
  return (uint64_t *)pthread_mutex_unlock((pthread_mutex_t *)(v3 + 26));
}

uint64_t sub_1000D4630(uint64_t result, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_25;
  }
  if (!a2)
  {
    __break(0x5518u);
LABEL_25:
    __break(0x5516u);
    return result;
  }
  uint64_t v9 = sub_10000FC8C();
  pthread_mutex_lock(&stru_10013B980);
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v14 = v10;
    while (v10 != v9)
    {
      if (!a5) {
        goto LABEL_28;
      }
      uint64_t result = *sub_10000FDD0(&v14);
      if (result) {
        BOOL v11 = (result & 7) == 0;
      }
      else {
        BOOL v11 = 0;
      }
      if (!v11) {
        goto LABEL_25;
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)result + 280))(result) & 1) == 0)
      {
LABEL_28:
        if (!a4) {
          goto LABEL_21;
        }
        uint64_t result = *sub_10000FDD0(&v14);
        if (result) {
          BOOL v12 = (result & 7) == 0;
        }
        else {
          BOOL v12 = 0;
        }
        if (!v12) {
          goto LABEL_25;
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)result + 104))(result, a4))
        {
LABEL_21:
          long long v13 = sub_10000FDD0(&v14);
          a2(*v13, a3);
        }
      }
      sub_10000FE04(&v14);
      uint64_t v10 = v14;
    }
  }
  return pthread_mutex_unlock(&stru_10013B980);
}

void sub_1000D4784(void *a1, uint64_t a2)
{
  lpsrc = a1;
  if (!a2) {
LABEL_198:
  }
    sub_1000F2364();
  if ((a2 & 7) != 0 || (((_BYTE)a2 + 8) & 7) != 0 || ((a2 + 16) & 7) != 0) {
    goto LABEL_200;
  }
  uint64_t v3 = (uint64_t)a1;
  unsigned int v4 = *(_DWORD *)a2;
  uint64_t v5 = *(unsigned int **)(a2 + 8);
  if (v5 == (unsigned int *)100) {
    int v6 = (*(_DWORD *)a2 >> 7) & 1;
  }
  else {
    LOBYTE(v6) = 0;
  }
  if (v5 == (unsigned int *)100) {
    int v7 = 0;
  }
  else {
    int v7 = (*(_DWORD *)a2 >> 7) & 1;
  }
  int v8 = (v4 >> 10) & 1;
  if (!a1) {
    LOBYTE(v8) = 0;
  }
  if ((v4 & 0x20CC) != 0) {
    char v9 = 1;
  }
  else {
    char v9 = v8;
  }
  if (*(void **)(a2 + 16) == a1) {
    int v10 = 1;
  }
  else {
    int v10 = (*(_DWORD *)a2 >> 7) & 1;
  }
  if (v10 != 1 || (*(_DWORD *)a2 & 0x2400) == 0x2400)
  {
    __break(0x5518u);
    goto LABEL_198;
  }
  char v46 = v6;
  if (a1)
  {
    if ((a1 & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v11 = a1[4];
    char v12 = v9 ^ 1;
    if (v11) {
      char v13 = v12;
    }
    else {
      char v13 = 1;
    }
    if ((v13 & 1) == 0
      && (*(unsigned int (**)(void *))(*a1 + 280))(a1)
      && *(unsigned __int8 *)(v3 + 190) >= 2u)
    {
      goto LABEL_201;
    }
    if (v11 && (v4 & 0x80) != 0)
    {
      if (qword_10013C6C0 != -1) {
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      if (!qword_10013C6B8) {
        goto LABEL_200;
      }
      if ((qword_10013C6B8 & 7) != 0) {
        goto LABEL_200;
      }
      sub_1000D44E0((uint64_t *)qword_10013C6B8, v4, v3);
      uint64_t v14 = *(void *)(v3 + 32);
      if (!v14) {
        goto LABEL_200;
      }
      if ((v14 & 7) != 0) {
        goto LABEL_200;
      }
      BOOL v15 = (_DWORD *)(v14 + 52);
      if ((v15 & 3) != 0) {
        goto LABEL_200;
      }
      *BOOL v15 = v5;
    }
    uint64_t v16 = *(void *)(v3 + 32);
    if (!v16) {
      goto LABEL_200;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v17 = (uint64_t *)(v16 + 40);
    if ((v17 & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v18 = *v17;
    if (*v17) {
      goto LABEL_53;
    }
  }
  else
  {
    char v13 = 1;
  }
  if (((a2 + 32) & 7) != 0) {
    goto LABEL_200;
  }
  if (*(unsigned __int8 *)(a2 + 32) > 1u) {
    goto LABEL_201;
  }
  if (!*(unsigned char *)(a2 + 32))
  {
    uint64_t v18 = 0;
    BOOL v19 = 0;
    BOOL v22 = 0;
    int v20 = v7 | ((v4 & 4) >> 2);
    if (v13) {
      goto LABEL_72;
    }
    goto LABEL_66;
  }
  if (qword_10013C6C0 != -1) {
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
  }
  if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
    goto LABEL_200;
  }
  uint64_t v18 = (*(uint64_t (**)(void))(*(void *)qword_10013C6B8 + 256))();
LABEL_53:
  BOOL v19 = v18 != 0;
  int v20 = v7 | ((v4 & 4) >> 2);
  if (v18 && v20)
  {
    if (qword_10013C6C0 != -1) {
      dispatch_once(&qword_10013C6C0, &stru_100127DA8);
    }
    if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
      goto LABEL_200;
    }
    sub_1000A1DE4(qword_10013C6B8, v18);
    if (v21)
    {
      if ((v21 & 7) != 0) {
        goto LABEL_200;
      }
      if (sub_10006B144(v21)) {
        return;
      }
    }
    int v20 = 1;
    BOOL v19 = 1;
  }
  if (v13) {
    goto LABEL_71;
  }
LABEL_66:
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_200;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v3 + 280))(v3))
  {
LABEL_71:
    BOOL v22 = 0;
    goto LABEL_72;
  }
  unsigned int v23 = *(unsigned __int8 *)(v3 + 190);
  if (v23 >= 2) {
    goto LABEL_201;
  }
  BOOL v22 = v23 != 0;
LABEL_72:
  if ((v4 & 8) != 0 && !v5 && !v22)
  {
    if (!v3) {
      goto LABEL_200;
    }
    if ((v3 & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v24 = *(void *)(v3 + 32);
    if (!v24 || (v24 & 7) != 0 || ((v24 + 64) & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v25 = *(void (**)(void **))(v24 + 64);
    if (v25)
    {
      *(unsigned char *)(v24 + 59) = 1;
      uint64_t v26 = (void *)(v24 + 40);
      if ((v26 & 7) != 0) {
        goto LABEL_200;
      }
      if (!*v26)
      {
        v25(&lpsrc);
        uint64_t v3 = (uint64_t)lpsrc;
      }
    }
  }
  if (v3) {
    BOOL v27 = v19;
  }
  else {
    BOOL v27 = 0;
  }
  if (v27)
  {
    int v28 = *(_DWORD *)(a2 + 36);
    BOOL v29 = __CFADD__(v28, 1);
    int v30 = v28 + 1;
    if (v29)
    {
LABEL_202:
      __break(0x5500u);
      goto LABEL_203;
    }
    *(_DWORD *)(a2 + 36) = v30;
    if ((v4 & 0x80) == 0)
    {
LABEL_94:
      if (!v20) {
        goto LABEL_109;
      }
      if (!lpsrc || (lpsrc & 7) != 0) {
        goto LABEL_200;
      }
      if (!*((void *)lpsrc + 4)) {
        goto LABEL_109;
      }
      if (qword_10013C6C0 != -1) {
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      if (!qword_10013C6B8) {
        goto LABEL_200;
      }
      if ((qword_10013C6B8 & 7) != 0) {
        goto LABEL_200;
      }
      sub_1000A0228(qword_10013C6B8, lpsrc, v18);
      if (!lpsrc) {
        goto LABEL_200;
      }
      if ((lpsrc & 7) != 0) {
        goto LABEL_200;
      }
      uint64_t v31 = *((void *)lpsrc + 4);
      if (!v31 || (v31 & 7) != 0) {
        goto LABEL_200;
      }
      unsigned int v32 = *(unsigned __int8 *)(v31 + 57);
      if (v32 <= 1)
      {
        if (!v32) {
          sub_10007D384((uint64_t)lpsrc);
        }
LABEL_109:
        if (qword_10013C6C0 != -1) {
          dispatch_once(&qword_10013C6C0, &stru_100127DA8);
        }
        if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
          goto LABEL_200;
        }
        sub_1000A1DE4(qword_10013C6B8, v18);
        uint64_t v34 = v33;
        if (v7)
        {
          if ((v18 & 7) != 0) {
            goto LABEL_200;
          }
          BOOL v35 = sub_1000637AC(v18);
          if (v34)
          {
            if (v35)
            {
              if (!sub_1000637F0(v18)) {
                goto LABEL_126;
              }
              if (!lpsrc || (lpsrc & 7) != 0) {
                goto LABEL_200;
              }
              if (!(*(unsigned int (**)(void))(*(void *)lpsrc + 280))())
              {
LABEL_126:
                if ((v34 & 7) == 0)
                {
                  sub_10006B1A0(v34, 8);
                  if (qword_10013C6C0 != -1) {
                    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
                  }
                  if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
                  {
                    sub_1000D5154(qword_10013C6B8);
                    sub_10009FF64((uint64_t)lpsrc, 0, 0);
                    if (qword_10013C6C0 != -1) {
                      dispatch_once(&qword_10013C6C0, &stru_100127DA8);
                    }
                    if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
                    {
                      sub_1000D5244(qword_10013C6B8, lpsrc, 0xC8u);
                      return;
                    }
                  }
                }
                goto LABEL_200;
              }
              int v36 = lpsrc;
              if (lpsrc)
              {
                if ((lpsrc & 7) == 0)
                {
                  if (v37)
                  {
                    if ((v37 & 7) == 0)
                    {
                      uint64_t v38 = (*(uint64_t (**)(void *))(*(void *)v37 + 384))(v37);
                      sub_10008055C(0, v18, v36, v38);
                      goto LABEL_126;
                    }
                  }
                }
              }
LABEL_200:
              __break(0x5516u);
              goto LABEL_201;
            }
          }
        }
        if (v34)
        {
          if ((v4 & 8) != 0)
          {
            if ((v34 & 7) != 0) {
              goto LABEL_200;
            }
            sub_10006B080(v34);
          }
          pthread_once(&stru_10013B910, sub_1000D8E78);
          if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFFCLL)
          {
LABEL_203:
            __break(0x5513u);
            goto LABEL_204;
          }
          if (dword_10013B904)
          {
            sub_1000D3A40((uint64_t)lpsrc);
            uint64_t v41 = (unsigned int *)(a2 + 40);
            if (((a2 + 40) & 7) != 0) {
              goto LABEL_200;
            }
            if (*v41)
            {
              unsigned int v42 = sub_10006FADC();
              if (!qword_10013C6F8 || (qword_10013C6F8 & 7) != 0) {
                goto LABEL_200;
              }
              if (v42 < *v41)
              {
LABEL_204:
                __break(0x5515u);
                goto LABEL_205;
              }
              uint64_t v43 = *(unsigned int *)(qword_10013C6F8 + 76);
              if (v43 >= 8) {
                goto LABEL_201;
              }
              if (v43 >= 4)
              {
LABEL_205:
                __break(0x5512u);
                return;
              }
              if (~(unint64_t)dword_10013B900 < 4 * v43) {
                goto LABEL_203;
              }
              if (dword_10013B900[v43]) {
                (*(void (**)(void))(*(void *)qword_10013C6F8 + 104))();
              }
            }
          }
          if ((v34 & 7) != 0 || ((a2 + 40) & 7) != 0) {
            goto LABEL_200;
          }
          if (sub_10006B1A0(v34, v4))
          {
            if (v20)
            {
              if (qword_10013C6C0 != -1) {
                dispatch_once(&qword_10013C6C0, &stru_100127DA8);
              }
              if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0 && ((qword_10013C6B8 + 204) & 3) == 0)
              {
                if (*(_DWORD *)(qword_10013C6B8 + 204) <= 3u)
                {
                  sub_10006B1A0(v34, 0);
                  return;
                }
                goto LABEL_201;
              }
              goto LABEL_200;
            }
            return;
          }
          if ((v4 & 0x400) != 0 && v5) {
            sub_1000D4168(v5);
          }
          if ((v4 & 0x2000) != 0 && v5) {
            sub_1000D423C(v5);
          }
          if ((v22 | v20 ^ 1)) {
            return;
          }
          if (qword_10013C6C0 == -1)
          {
LABEL_191:
            if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
            {
              sub_1000D5154(qword_10013C6B8);
              return;
            }
            goto LABEL_200;
          }
        }
        else
        {
          if ((v22 | v20 ^ 1)) {
            return;
          }
          if (qword_10013C6C0 == -1) {
            goto LABEL_191;
          }
        }
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
        goto LABEL_191;
      }
LABEL_201:
      __break(0x550Au);
      goto LABEL_202;
    }
    if ((v18 & 7) != 0) {
      goto LABEL_200;
    }
    if (sub_10006363C(v18) == -1 || sub_100063618(v18) != v5)
    {
      sub_100062264(v18, (int)v5);
      goto LABEL_94;
    }
  }
  else if ((v4 & 8) != 0 && v3)
  {
    if ((v3 & 7) != 0) {
      goto LABEL_200;
    }
    uint64_t v39 = *(void *)(v3 + 32);
    if (v39)
    {
      if ((v39 & 7) == 0)
      {
        unsigned int v40 = (unsigned char *)(v39 + 58);
        if ((v40 & 1) == 0)
        {
          *unsigned int v40 = 0;
          return;
        }
      }
      goto LABEL_200;
    }
  }
  else
  {
    char v44 = v46;
    if (v18) {
      char v44 = 1;
    }
    if ((v44 & 1) != 0 || (v4 & 8) != 0) {
      return;
    }
    if (((a2 + 32) & 7) != 0) {
      goto LABEL_200;
    }
    if (*(unsigned __int8 *)(a2 + 32) > 1u) {
      goto LABEL_201;
    }
    if (*(unsigned char *)(a2 + 32))
    {
      if (v3)
      {
        if ((v3 & 7) != 0) {
          goto LABEL_200;
        }
        size_t v45 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 208))(v3);
      }
      else
      {
        size_t v45 = "Unknown";
      }
      sub_1000EE4F4(0, 4, "No Handle for event! class=%xh(%s) type=%lxh port=%hhx(%s)\n", v4, "", v5, v3, v45);
    }
  }
}

uint64_t sub_1000D5154(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 208));
    unint64_t v1 = 0xAAAAAAAAAAAAAAAALL;
    operator new();
  }
  __break(0x5516u);
  __break(0x5510u);
  return result;
}

void sub_1000D5244(uint64_t a1, void *a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_14;
  }
  if (!(*(unsigned int (**)(void *))(*a2 + 216))(a2)
    || (*(unsigned int (**)(void *))(*a2 + 280))(a2))
  {
    uint64_t v6 = a2[4];
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        int v7 = (NSObject **)(v6 + 72);
        if (((v6 + 72) & 7) == 0)
        {
          int v8 = *v7;
          if (*v7)
          {
            v11[0] = _NSConcreteStackBlock;
            v11[1] = 0x40000000;
            _DWORD v11[2] = sub_1000D887C;
            v11[3] = &unk_100127FE0;
            v11[4] = a1;
            v11[5] = a2;
            dispatch_source_set_event_handler(v8, v11);
            char v9 = *v7;
            if (*v7)
            {
              dispatch_time_t v10 = dispatch_time(0, 1000000 * a3);
              dispatch_source_set_timer(v9, v10, 0xFFFFFFFFFFFFFFFFLL, 0);
              return;
            }
          }
LABEL_15:
          __break(0x5510u);
          return;
        }
      }
LABEL_14:
      __break(0x5516u);
      goto LABEL_15;
    }
  }
}

void sub_1000D53A0(uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_78;
  }
  pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFFCLL) {
    goto LABEL_79;
  }
  if (!dword_10013B904) {
    goto LABEL_14;
  }
  sub_1000D3A40(a4);
  if (!a6) {
    goto LABEL_14;
  }
  unsigned int v12 = sub_10006FADC();
  if (!qword_10013C700 || (qword_10013C700 & 7) != 0) {
    goto LABEL_78;
  }
  if (v12 < a6)
  {
LABEL_80:
    __break(0x5515u);
    goto LABEL_81;
  }
  uint64_t v13 = *(unsigned int *)(qword_10013C700 + 76);
  if (v13 >= 8)
  {
LABEL_81:
    __break(0x550Au);
    goto LABEL_82;
  }
  if (v13 >= 4)
  {
LABEL_82:
    __break(0x5512u);
    return;
  }
  if (~(unint64_t)dword_10013B900 < 4 * v13)
  {
LABEL_79:
    __break(0x5513u);
    goto LABEL_80;
  }
  if (dword_10013B900[v13]) {
    (*(void (**)(void))(*(void *)qword_10013C700 + 104))();
  }
LABEL_14:
  if (!a5 || (a2 & 0x2400) == 0x2400)
  {
    __break(0x5518u);
    goto LABEL_78;
  }
  if ((a5 & 7) != 0)
  {
LABEL_78:
    __break(0x5516u);
    goto LABEL_79;
  }
  uint64_t v14 = sub_10001CE30(a5);
  if (!a4 || v14) {
    goto LABEL_26;
  }
  if ((a2 & 4) == 0)
  {
    if (((a3 != (unsigned int *)100) & (a2 >> 7)) != 0)
    {
      if ((a4 & 7) != 0) {
        goto LABEL_78;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 280))(a4))
      {
        sub_100062574(a5, v15);
        if (!v15 || (v15 & 7) != 0) {
          goto LABEL_78;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 392))(v15, a5);
      }
      goto LABEL_33;
    }
LABEL_26:
    BOOL v16 = !((a3 != (unsigned int *)100) & (a2 >> 7));
    if ((a2 & 0x104) != 0) {
      BOOL v16 = 0;
    }
    if (v16) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if ((a4 & 7) != 0) {
    goto LABEL_78;
  }
  if (*(void *)(a4 + 32)) {
    sub_1000A0228(a1, (void *)a4, a5);
  }
LABEL_33:
  if (!(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 240))(a1, a5, 0)) {
    return;
  }
LABEL_34:
  int v17 = a2 & 0xC;
  uint64_t v18 = a2 & 0x35CC;
  if ((a2 & 8) != 0)
  {
    sub_100063860(a5, 1);
    if (a4)
    {
      if ((a4 & 7) != 0) {
        goto LABEL_78;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 216))(a4) == 1)
      {
        BOOL v19 = sub_1000E6DB4(a4);
        uint64_t v18 = v19 ? a2 & 0x35CC : (unsigned __int16)a2 & 0x35C4u;
        if (!v19) {
          int v17 = a2 & 4;
        }
      }
    }
  }
  if (v17) {
    sub_10006086C(a1, v18, (uint64_t)a3, (void *)a4);
  }
  if ((a2 & 0x180) != 0 || a4)
  {
    int v20 = sub_10009F368(a1, a4) | ((v18 & 0x18C) != 0);
    if (v20)
    {
      if ((v18 & 4) != 0)
      {
        int v21 = sub_10009F368(a1, a4);
      }
      else if ((v18 & 8) != 0)
      {
        int v20 = sub_10009F43C(a1, a4) | 1;
        int v21 = v20;
      }
      else
      {
        int v21 = 0;
      }
      for (int i = 0; i != 15; ++i)
        sub_1000D681C(a5, i, v18, (uint64_t)a3, a4, v20, v21);
    }
    if ((a2 & 8) != 0 && a4)
    {
      if (!a3) {
        sub_10007D400(a4);
      }
      if ((a4 & 7) == 0)
      {
        sub_1000E6D9C(a4, 0);
        sub_10009F484(a1, a4);
        uint64_t v23 = *(void *)(a4 + 32);
        if (!v23) {
          goto LABEL_64;
        }
        if ((v23 & 7) == 0)
        {
          uint64_t v24 = (unsigned char *)(v23 + 58);
          if ((v24 & 1) == 0)
          {
            unsigned char *v24 = 0;
LABEL_64:
            sub_1000A0D54(a1, a5);
            if (sub_1000A139C(a1)) {
              goto LABEL_68;
            }
            uint64_t v25 = sub_10003E5D0();
            if (v25 && (v25 & 7) == 0)
            {
              (*(void (**)(uint64_t))(*(void *)v25 + 640))(v25);
              goto LABEL_68;
            }
            goto LABEL_78;
          }
        }
      }
      goto LABEL_78;
    }
  }
LABEL_68:
  if ((a2 & 0x1000) == 0)
  {
    if ((a2 & 0x400) == 0) {
      goto LABEL_70;
    }
LABEL_73:
    sub_1000D4168(a3);
    if ((a2 & 0x2000) == 0) {
      return;
    }
    goto LABEL_74;
  }
  sub_1000A0D54(a1, a5);
  if ((a2 & 0x400) != 0) {
    goto LABEL_73;
  }
LABEL_70:
  if ((a2 & 0x2000) == 0) {
    return;
  }
LABEL_74:
  sub_1000D423C(a3);
}

intptr_t sub_1000D5870(intptr_t result, int a2, unsigned int *a3, int a4)
{
  if (!result) {
    goto LABEL_100;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_100;
  }
  if (a2)
  {
    BOOL v7 = a3 == (unsigned int *)5 || (unint64_t)a3 - 7 < 2;
    uint64_t v53 = a3;
    int v55 = -1431655766;
    int v52 = -1431655766;
    int v51 = a2;
    int v54 = a4;
    int v11 = dword_10013B8A8;
    if ((dword_10013B8A8 + 8) > 0xF) {
      goto LABEL_101;
    }
    BOOL v8 = (unint64_t)a3 - 1 < 4;
    int v12 = 3;
    switch((unint64_t)a3)
    {
      case 5uLL:
        goto LABEL_17;
      case 6uLL:
        *(unsigned char *)(result + 432) = 0;
        v50[0] = 0xAAAAAAAAAAAAAAAALL;
        v50[1] = 0xAAAAAAAAAAAAAAAALL;
        sub_10002EDDC((uint64_t)v50);
        v49[0] = 0xAAAAAAAAAAAAAAAALL;
        v49[1] = 0xAAAAAAAAAAAAAAAALL;
        sub_1000EE3E8((uint64_t)v50, v49);
        *(void *)(v4 + 528) = sub_10002DC04(v49);
        v50[0] = (uint64_t)off_100123868;
        uint64_t result = (intptr_t)sub_1000EE300(v50);
        int v11 = dword_10013B8A8;
        if ((dword_10013B8A8 + 8) >= 0x10) {
          goto LABEL_101;
        }
        int v12 = 4;
LABEL_17:
        if (v12 == v11)
        {
LABEL_18:
          int v9 = 0;
        }
        else
        {
          dword_10013B8AC = v11;
          dword_10013B8A8 = v12;
          int v9 = 1;
        }
        break;
      case 7uLL:
        int v12 = 1;
        goto LABEL_17;
      case 8uLL:
        *(unsigned char *)(result + 432) = 1;
        int v12 = 2;
        goto LABEL_17;
      default:
        goto LABEL_18;
    }
  }
  else
  {
    BOOL v7 = 0;
    BOOL v8 = 0;
    int v9 = 0;
    uint64_t v53 = a3;
    int v55 = -1431655766;
    int v52 = -1431655766;
    int v51 = a2;
    int v54 = a4;
  }
  if (byte_10013D0AC > 1u)
  {
LABEL_101:
    __break(0x550Au);
    goto LABEL_102;
  }
  if ((a2 & 1) == 0 || !byte_10013D0AC || !v8)
  {
    pthread_mutex_lock((pthread_mutex_t *)(v4 + 456));
    uint64_t v13 = v7 ? (_DWORD *)(v4 + 448) : 0;
    char v14 = !v7;
    sub_1000A14B0(v4, (void (*)(uint64_t, uint64_t))sub_1000D5F08, (uint64_t)&v51, v13);
    int v15 = *(_DWORD *)(v4 + 448);
    uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v4 + 456));
    char v16 = v15 ? v14 : 1;
    if ((v16 & 1) == 0)
    {
      int v17 = *(NSObject **)(v4 + 440);
      if (!v17)
      {
LABEL_102:
        __break(0x5510u);
        JUMPOUT(0x1000D5EF8);
      }
      uint64_t result = dispatch_semaphore_wait(v17, 0xFFFFFFFFFFFFFFFFLL);
    }
  }
  if (v9)
  {
    int v18 = dword_10013B8AC;
    if ((dword_10013B8AC + 8) > 0xF) {
      goto LABEL_101;
    }
    sub_10006086C(v4, a2, (uint64_t)a3, 0);
    if ((dword_10013B8A8 + 8) > 0xF) {
      goto LABEL_101;
    }
    dword_10013B8AC = dword_10013B8A8;
    if ((dword_10013B8A8 - 1) <= 1) {
      usleep(0x186A0u);
    }
    uint64_t v19 = sub_10000FC8C();
    pthread_mutex_lock(&stru_10013B980);
    uint64_t v20 = *(void *)(v19 + 8);
    v50[0] = v20;
    while (v20 != v19)
    {
      int v21 = sub_10000FDD0(v50);
      if (*v21) {
        BOOL v22 = (*v21 & 7) == 0;
      }
      else {
        BOOL v22 = 0;
      }
      if (!v22) {
        goto LABEL_100;
      }
      if (*(void *)(*v21 + 32))
      {
        uint64_t v23 = *sub_10000FDD0(v50);
        if (v23) {
          BOOL v24 = (v23 & 7) == 0;
        }
        else {
          BOOL v24 = 0;
        }
        if (!v24) {
          goto LABEL_100;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v23 + 240))(v23))
        {
          uint64_t v25 = sub_10000FDD0(v50);
          sub_10009F570(v4, *v25);
        }
      }
      sub_10000FE04(v50);
      uint64_t v20 = v50[0];
    }
    if ((dword_10013B8A8 + 8) >= 0x10) {
      goto LABEL_101;
    }
    if ((v18 - 1) > 1 || dword_10013B8A8 != 4)
    {
LABEL_96:
      uint64_t result = pthread_mutex_unlock(&stru_10013B980);
      goto LABEL_97;
    }
    uint64_t v26 = sub_10004E9C8();
    uint64_t v27 = sub_10004CDB4();
    if (v27)
    {
      uint64_t v28 = v27;
      if ((v27 & 7) == 0)
      {
        int v29 = (*(uint64_t (**)(uint64_t))(*(void *)v27 + 160))(v27);
        int v30 = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 168))(v28);
        v50[0] = *(void *)(v19 + 8);
        if (v50[0] != v19)
        {
          int v31 = v29 | v30;
          BOOL v33 = (v26 & 7) == 0 && v26 != 0;
          while (1)
          {
            uint64_t v34 = sub_10000FDD0(v50);
            if (!*v34 || (*v34 & 7) != 0) {
              goto LABEL_100;
            }
            if (*(void *)(*v34 + 32))
            {
              uint64_t v36 = *sub_10000FDD0(v50);
              if (v36) {
                BOOL v37 = (v36 & 7) == 0;
              }
              else {
                BOOL v37 = 0;
              }
              if (!v37) {
                goto LABEL_100;
              }
              if ((*(unsigned int (**)(uint64_t))(*(void *)v36 + 240))(v36))
              {
                if (!v33) {
                  goto LABEL_100;
                }
                uint64_t v38 = sub_10000FDD0(v50);
                if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v26 + 152))(v26, *v38) != 1)
                {
                  uint64_t v39 = sub_10000FDD0(v50);
                  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v26 + 200))(v26, *v39))
                  {
                    if (!v31) {
                      goto LABEL_85;
                    }
                    uint64_t v40 = *sub_10000FDD0(v50);
                    if (!v40 || (v40 & 7) != 0) {
                      goto LABEL_100;
                    }
                    if ((*(unsigned int (**)(uint64_t))(*(void *)v40 + 272))(v40))
                    {
LABEL_85:
                      uint64_t v41 = sub_10000FDD0(v50);
                      (*(void (**)(uint64_t, uint64_t, void))(*(void *)v26 + 192))(v26, *v41, 0);
                      unsigned int v42 = sub_10000FDD0(v50);
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v26 + 144))(v26, *v42, 1);
                      uint64_t v43 = sub_10000FDD0(v50);
                      sub_1000D5244(v4, (void *)*v43, 0xC8u);
                    }
                  }
                }
              }
            }
            uint64_t v44 = *sub_10000FDD0(v50);
            if (v44) {
              BOOL v45 = (v44 & 7) == 0;
            }
            else {
              BOOL v45 = 0;
            }
            if (!v45) {
              goto LABEL_100;
            }
            if (!(*(unsigned int (**)(uint64_t))(*(void *)v44 + 216))(v44))
            {
              uint64_t v46 = *sub_10000FDD0(v50);
              if (!v46 || (v46 & 7) != 0) {
                goto LABEL_100;
              }
              unsigned int v47 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 296))(v46);
              int v48 = sub_10000FDD0(v50);
              (*(void (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)v4 + 48))(v4, 128, v47, *v48, 0);
            }
            sub_10000FE04(v50);
            if (v50[0] == v19) {
              goto LABEL_96;
            }
          }
        }
        goto LABEL_96;
      }
    }
LABEL_100:
    __break(0x5516u);
    goto LABEL_101;
  }
LABEL_97:
  if ((a2 & 0x400) != 0) {
    return (intptr_t)sub_1000D4168(a3);
  }
  return result;
}

void sub_1000D5F08(uint64_t a1, _DWORD *a2)
{
  if (!a1) {
    goto LABEL_65;
  }
  uint64_t v5 = a2;
  if (!a2) {
    goto LABEL_65;
  }
  if ((a2 & 7) == 0)
  {
    BOOL v8 = (unsigned int **)(a2 + 2);
    int v2 = *a2;
    if (((unint64_t)(a2 + 2) & 7) == 0)
    {
      uint64_t v4 = a1;
      uint64_t v3 = *v8;
      unint64_t v9 = (unint64_t)*v8 - 7;
      BOOL v10 = v3 != (unsigned int *)5 && v9 >= 2;
      int v11 = !v10;
      if (v2) {
        int v7 = v11;
      }
      else {
        int v7 = 0;
      }
      if (!sub_1000D62B0(a1) && v7 & 1 | v2 & (v3 == (unsigned int *)6))
      {
        if (sub_1000D62B0(v4) & 1) != 0 || ((v7 ^ 1)) {
          return;
        }
        if (qword_10013C6C0 != -1) {
          dispatch_once(&qword_10013C6C0, &stru_100127DA8);
        }
        if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
        {
          int v12 = *(_DWORD *)(qword_10013C6B8 + 448);
          BOOL v10 = v12 != 0;
          int v13 = v12 - 1;
          if (v10)
          {
            *(_DWORD *)(qword_10013C6B8 + 448) = v13;
            return;
          }
          goto LABEL_69;
        }
        goto LABEL_67;
      }
      uint64_t v6 = &unk_10013C000;
      if (qword_10013C6C0 != -1) {
        goto LABEL_66;
      }
      while (1)
      {
        if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
          goto LABEL_67;
        }
        sub_1000A1DE4(qword_10013C6B8, v4);
        if (v14) {
          break;
        }
LABEL_65:
        __break(0x5518u);
LABEL_66:
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      uint64_t v15 = v14;
      if ((v2 & 0x400) != 0) {
        operator new();
      }
      pthread_once(&stru_10013B910, sub_1000D8E78);
      if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_68;
      }
      if (dword_10013B904)
      {
        if ((v4 & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v16 = sub_10001CE30(v4);
        sub_1000D3A40(v16);
        int v17 = v5 + 4;
        if (((unint64_t)(v5 + 4) & 7) != 0) {
          goto LABEL_67;
        }
        if (*v17)
        {
          unsigned int v18 = sub_10006FADC();
          if (!qword_10013C6F8 || (qword_10013C6F8 & 7) != 0) {
            goto LABEL_67;
          }
          if (v18 < *v17) {
            goto LABEL_69;
          }
          uint64_t v19 = *(unsigned int *)(qword_10013C6F8 + 76);
          if (v19 >= 8) {
            goto LABEL_70;
          }
          if (v19 >= 4) {
            goto LABEL_71;
          }
          if (~(unint64_t)dword_10013B900 < 4 * v19) {
            goto LABEL_68;
          }
          if (dword_10013B900[v19]) {
            (*(void (**)(void))(*(void *)qword_10013C6F8 + 104))();
          }
        }
      }
      if ((v15 & 7) != 0 || ((unint64_t)(v5 + 4) & 7) != 0) {
        goto LABEL_67;
      }
      if (sub_10006B1A0(v15, v2)) {
        return;
      }
      if (!v7)
      {
LABEL_60:
        if ((v2 & 0x400) != 0)
        {
          sub_1000D4168(v3);
        }
        return;
      }
      if (v6[216] != -1) {
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0 && ((qword_10013C6B8 + 448) & 7) == 0)
      {
        sub_1000EE4F4(0, 4, "%s:%d Couldn't queue event to connection=%hhxh, decrement count(%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp", 1709, v4, *(_DWORD *)(qword_10013C6B8 + 448));
        if (v6[216] != -1) {
          dispatch_once(&qword_10013C6C0, &stru_100127DA8);
        }
        if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
        {
          int v20 = *(_DWORD *)(qword_10013C6B8 + 448);
          BOOL v10 = v20 != 0;
          int v21 = v20 - 1;
          if (!v10) {
            goto LABEL_69;
          }
          *(_DWORD *)(qword_10013C6B8 + 448) = v21;
          goto LABEL_60;
        }
      }
    }
  }
LABEL_67:
  __break(0x5516u);
LABEL_68:
  __break(0x5513u);
LABEL_69:
  __break(0x5515u);
LABEL_70:
  __break(0x550Au);
LABEL_71:
  __break(0x5512u);
}

uint64_t sub_1000D62B0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      if (sub_1000634B8(result)) {
        return 0;
      }
      if (!sub_10001CE30(v1)) {
        return 1;
      }
      uint64_t result = sub_10001CE30(v1);
      if (result && (result & 7) == 0) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 232))(result) ^ 1;
      }
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000D6344(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0 || !a4 || (a4 & 7) != 0) {
    goto LABEL_85;
  }
  uint64_t v10 = sub_10001CE30(a4);
  uint64_t v11 = sub_1000622A4(a4);
  if (v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  pthread_once(&stru_10013B910, sub_1000D8E78);
  if ((unint64_t)dword_10013B900 >= 0xFFFFFFFFFFFFFFFCLL) {
    goto LABEL_86;
  }
  if (dword_10013B904)
  {
    sub_1000D3A40(v12);
    if (a5)
    {
      unsigned int v13 = sub_10006FADC();
      if (!qword_10013C700 || (qword_10013C700 & 7) != 0) {
        goto LABEL_85;
      }
      if (v13 < a5)
      {
LABEL_87:
        __break(0x5515u);
        goto LABEL_88;
      }
      uint64_t v14 = *(unsigned int *)(qword_10013C700 + 76);
      if (v14 >= 8)
      {
LABEL_88:
        __break(0x550Au);
        goto LABEL_89;
      }
      if (v14 >= 4)
      {
LABEL_89:
        __break(0x5512u);
        goto LABEL_90;
      }
      if (~(unint64_t)dword_10013B900 < 4 * v14) {
        goto LABEL_86;
      }
      if (dword_10013B900[v14]) {
        (*(void (**)(void))(*(void *)qword_10013C700 + 104))();
      }
    }
  }
  int v15 = a2 & (a3 == (unsigned int *)8);
  uint64_t v16 = &unk_10013C000;
  if (a2)
  {
    BOOL v18 = a3 == (unsigned int *)5 || (unint64_t)a3 - 7 < 2;
    if ((a2 & (a3 == (unsigned int *)8)) != 0) {
      sub_100063860(a4, 1);
    }
    if (qword_10013C6C0 != -1) {
      dispatch_once(&qword_10013C6C0, &stru_100127DA8);
    }
    if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
      goto LABEL_85;
    }
    if (!(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)qword_10013C6B8 + 240))(qword_10013C6B8, a4, 0))return; {
    if (a3 == (unsigned int *)8 && v10)
    }
    {
      if (qword_10013C6C0 != -1) {
        dispatch_once(&qword_10013C6C0, &stru_100127DA8);
      }
      if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0 || (v10 & 7) != 0) {
        goto LABEL_85;
      }
      if (sub_1000E6DB4(v10))
      {
        uint64_t v19 = *(void *)(v10 + 32);
        if (v19)
        {
          if ((v19 & 7) != 0) {
            goto LABEL_85;
          }
          int v20 = (unsigned char *)(v19 + 58);
          if (v20) {
            goto LABEL_85;
          }
          *int v20 = 0;
        }
      }
    }
    int v15 = a2 & (a3 == (unsigned int *)8);
    if (!v12) {
      goto LABEL_46;
    }
  }
  else
  {
    BOOL v18 = 0;
    if (!v12)
    {
LABEL_46:
      BOOL v21 = v18;
      sub_1000EE4F4(0, 4, "%s:%d Unexpected pPort==NULL! class=%xh type=%lxh\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp", 1833, a2, a3);
      goto LABEL_57;
    }
  }
  int v22 = v15;
  if (qword_10013C6C0 != -1) {
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
  }
  if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
    goto LABEL_85;
  }
  BOOL v21 = v18;
  int v23 = sub_10009F368(qword_10013C6B8, v12);
  int v24 = v23;
  if ((v22 | ((unsigned __int16)(a2 & 0x100) >> 8)))
  {
    int v24 = v23 | 1;
    uint64_t v16 = (void *)&unk_10013C000;
  }
  else
  {
    uint64_t v16 = &unk_10013C000;
    if (!v23) {
      goto LABEL_57;
    }
  }
  for (int i = 0; i != 15; ++i)
    sub_1000D681C(a4, i, a2, (uint64_t)a3, v12, v24, v24);
LABEL_57:
  if ((unint64_t)a3 - 7 > 1) {
    goto LABEL_61;
  }
  sub_1000A1DE4(a1, a4);
  if (!v26 || (v26 & 7) != 0)
  {
LABEL_85:
    __break(0x5516u);
LABEL_86:
    __break(0x5513u);
    goto LABEL_87;
  }
  sub_10006B1A0(v26, 0);
LABEL_61:
  if (!v21) {
    goto LABEL_72;
  }
  uint64_t v27 = (pthread_mutex_t *)(a1 + 456);
  pthread_mutex_lock(v27);
  if (v16[216] != -1) {
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
  }
  if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0 || ((qword_10013C6B8 + 448) & 7) != 0) {
    goto LABEL_85;
  }
  if (!*(_DWORD *)(qword_10013C6B8 + 448)) {
    sub_1000F2364();
  }
  if (!qword_10013C6B8 || (qword_10013C6B8 & 7) != 0) {
    goto LABEL_85;
  }
  int v28 = *(_DWORD *)(qword_10013C6B8 + 448);
  int v29 = v28 - 1;
  if (!v28) {
    goto LABEL_87;
  }
  *(_DWORD *)(qword_10013C6B8 + 448) = v29;
  pthread_mutex_unlock(v27);
  if (!v29)
  {
    if (v16[216] != -1) {
      dispatch_once(&qword_10013C6C0, &stru_100127DA8);
    }
    if (qword_10013C6B8)
    {
      if ((qword_10013C6B8 & 7) == 0)
      {
        int v30 = (dispatch_semaphore_t *)(qword_10013C6B8 + 440);
        if (((qword_10013C6B8 + 440) & 7) == 0)
        {
          if (*v30)
          {
            dispatch_semaphore_signal(*v30);
            if ((a2 & 0x400) == 0) {
              return;
            }
            goto LABEL_81;
          }
LABEL_90:
          __break(0x5510u);
          return;
        }
      }
    }
    goto LABEL_85;
  }
LABEL_72:
  if ((a2 & 0x400) == 0) {
    return;
  }
LABEL_81:
  sub_1000D4168(a3);
}

BOOL sub_1000D67F0(BOOL result, BOOL a2)
{
  if (result && !(result & 7))
  {
    if (!a2) {
      return 0;
    }
    if (!(a2 & 7)) {
      return sub_1000E6DB4(a2);
    }
  }
  __break(0x5516u);
  return result;
}

void sub_1000D681C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  if ((a2 + 32) >= 0x40) {
    goto LABEL_35;
  }
  if (a2 >= 0) {
    int v13 = 1 << a2;
  }
  else {
    int v13 = 0;
  }
  if ((v13 & a6) != 0)
  {
    if (a1)
    {
      int v10 = a7;
      uint64_t v7 = a5;
      uint64_t v8 = a4;
      uint64_t v9 = a3;
      uint64_t v11 = &unk_10013C000;
      if (qword_10013C6C0 == -1)
      {
LABEL_8:
        if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
        {
          if ((sub_10009F28C(qword_10013C6B8, a2, a1) & v9) == 0
            || (v9 & 8) != 0 && (v13 & v10) == 0)
          {
            return;
          }
          if ((a1 & 7) == 0)
          {
            sub_100063334(a1, a2);
            if (v11[216] != -1) {
              dispatch_once(&qword_10013C6C0, &stru_100127DA8);
            }
            if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
            {
              uint64_t v15 = sub_10009EF00(qword_10013C6B8, a1, a2);
              if (!v15)
              {
                sub_1000EE4F4(0, 4, "%s:%d No Lingo Object! Cannot process event!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp", 1991);
                goto LABEL_28;
              }
              uint64_t v16 = v15;
              if (v11[216] != -1) {
                dispatch_once(&qword_10013C6C0, &stru_100127DA8);
              }
              if (qword_10013C6B8 && (qword_10013C6B8 & 7) == 0)
              {
                sub_1000A1DE4(qword_10013C6B8, a1);
                if (!v17) {
                  sub_1000F2364();
                }
                if ((v16 & 7) == 0)
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v16 + 80))(v16, v9, v8, v7);
LABEL_28:
                  sub_100063380(a1, a2);
                  return;
                }
              }
            }
          }
        }
        __break(0x5516u);
LABEL_35:
        __break(0x550Au);
        return;
      }
    }
    else
    {
      __break(0x5518u);
    }
    dispatch_once(&qword_10013C6C0, &stru_100127DA8);
    goto LABEL_8;
  }
}

uint64_t sub_1000D6A40(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2 || !a3)
  {
    __break(0x5518u);
    goto LABEL_11;
  }
  if ((dword_10013B8A8 + 8) > 0xF) {
    goto LABEL_12;
  }
  if ((a2 & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  *a2 = dword_10013B8A8;
  if ((dword_10013B8AC + 8) <= 0xF)
  {
    if ((a3 & 3) == 0)
    {
      *a3 = dword_10013B8AC;
      return result;
    }
    goto LABEL_11;
  }
LABEL_12:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D6AA4(uint64_t result)
{
  if (!result || (v1 = (unsigned char *)result, (result & 7) != 0) || (uint64_t result = sub_10003E5D0()) == 0 || (result & 7) != 0)
  {
LABEL_27:
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t, unsigned char *))(*(void *)result + 16))(result, v1 + 176);
    dword_10013B8A8 = 4;
    dword_10013B8AC = 4;
    uint64_t v2 = sub_10000FC8C();
    pthread_mutex_lock(&stru_10013B980);
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t v9 = v3;
    while (v3 != v2)
    {
      uint64_t result = (uint64_t)sub_10000FDD0(&v9);
      if (*(void *)result) {
        BOOL v4 = (*(void *)result & 7) == 0;
      }
      else {
        BOOL v4 = 0;
      }
      if (!v4) {
        goto LABEL_27;
      }
      if (*(void *)(*(void *)result + 32))
      {
        uint64_t result = *sub_10000FDD0(&v9);
        if (result) {
          BOOL v5 = (result & 7) == 0;
        }
        else {
          BOOL v5 = 0;
        }
        if (!v5) {
          goto LABEL_27;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)result + 240))(result))
        {
          uint64_t v6 = sub_10000FDD0(&v9);
          sub_10009F570((uint64_t)v1, *v6);
          uint64_t result = *sub_10000FDD0(&v9);
          if (!result || (result & 7) != 0) {
            goto LABEL_27;
          }
          if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 216))(result))
          {
            uint64_t result = *sub_10000FDD0(&v9);
            if (!result || (result & 7) != 0) {
              goto LABEL_27;
            }
            unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)result + 296))(result);
            uint64_t v8 = sub_10000FDD0(&v9);
            (*(void (**)(unsigned char *, uint64_t, void, uint64_t, void))(*(void *)v1 + 48))(v1, 128, v7, *v8, 0);
          }
        }
      }
      sub_10000FE04(&v9);
      uint64_t v3 = v9;
    }
    uint64_t result = pthread_mutex_unlock(&stru_10013B980);
    v1[200] = 1;
  }
  return result;
}

uint64_t sub_1000D6CBC(uint64_t result, int *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      int v6 = 0;
      if ((sub_10005FEE0((uint64_t *)result) & 1) == 0) {
        int v6 = 10;
      }
      BOOL v5 = &v6;
      uint64_t result = sub_1000A14B0(v2, (void (*)(uint64_t, uint64_t))sub_1000D6D5C, (uint64_t)&v5, 0);
      if (!a2)
      {
        int v4 = v6;
        return v4 == 0;
      }
      if ((a2 & 3) == 0)
      {
        int v4 = v6;
        *a2 = v6;
        return v4 == 0;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D6D5C(uint64_t result, unsigned int **a2)
{
  if (result && a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_27;
    }
    uint64_t v2 = result;
    int v4 = *a2;
    if (*a2)
    {
      if ((v4 & 3) != 0) {
        goto LABEL_27;
      }
      unsigned int v3 = *v4;
    }
    else
    {
      unsigned int v3 = 0;
    }
    if (qword_10013C6C0 == -1) {
      goto LABEL_9;
    }
  }
  else
  {
    __break(0x5518u);
  }
  dispatch_once(&qword_10013C6C0, &stru_100127DA8);
LABEL_9:
  uint64_t result = qword_10013C6B8;
  if (!qword_10013C6B8) {
    goto LABEL_27;
  }
  if ((qword_10013C6B8 & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = sub_1000A2020(qword_10013C6B8, v2);
  if (!result) {
    goto LABEL_27;
  }
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = sub_1000C4C58(result);
  if ((v2 & 7) != 0) {
    goto LABEL_27;
  }
  if (result <= v3) {
    unsigned int v5 = v3;
  }
  else {
    unsigned int v5 = result;
  }
  unsigned int v6 = -1;
  do
  {
    uint64_t result = sub_100063104(v2, ++v6);
    if (result > v5) {
      unsigned int v5 = result;
    }
  }
  while (v6 < 0xE);
  if (v4)
  {
    if ((v4 & 3) == 0)
    {
      *int v4 = v5;
      return result;
    }
LABEL_27:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000D6E50(uint64_t a1, int *a2)
{
  return sub_1000D6CBC(a1 - 184, a2);
}

uint64_t sub_1000D6E58(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_10;
  }
  if ((dword_10013B8A8 + 8) >= 0x10)
  {
LABEL_10:
    __break(0x550Au);
    return result;
  }
  if (dword_10013B8A8 == 4) {
    (*(void (**)(uint64_t))(*(void *)result + 72))(result);
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 80);
  return v2(v1);
}

uint64_t sub_1000D6F04(uint64_t a1)
{
  return sub_1000D6E58(a1 - 184);
}

uint64_t sub_1000D6F0C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48))(result, 1, 5, 0, 0);
    return 1;
  }
  return result;
}

uint64_t sub_1000D6F68(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D6F88(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    byte_10013D0AC = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48))(result, 1, 8, 0, 0);
    byte_10013D0AC = 0;
    return 1;
  }
  return result;
}

uint64_t sub_1000D6FFC(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D701C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48))(result, 1, 6, 0, 0);
    return 1;
  }
  return result;
}

uint64_t sub_1000D7078(uint64_t a1)
{
  return 1;
}

uint64_t sub_1000D7098(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock(&stru_10013B980);
    sub_1000D7120(a2);
    sub_1000A00E0(v2, a2);
    sub_10005FBA8(v2, a2);
    sub_1000C9F4C(a2);
    return pthread_mutex_unlock(&stru_10013B980);
  }
  return result;
}

void sub_1000D7120(uint64_t a1)
{
  uint64_t v5 = a1;
  sub_10000FC8C();
  pthread_mutex_lock(&stru_10013B980);
  if (qword_10013D0E8) {
    BOOL v1 = (qword_10013D0E8 & 7) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1
    && ((sub_100062820(qword_10013D0E8, &v5),
         uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter(),
         CFNotificationCenterPostNotification(v2, @"IAPDTransportListChangedNotification", 0, 0, 1u),
         qword_10013D0E8)
      ? (BOOL v3 = (qword_10013D0E8 & 7) == 0)
      : (BOOL v3 = 0),
        v3 && ((qword_10013D0E8 + 16) & 7) == 0))
  {
    if (*(void *)(qword_10013D0E8 + 16) == 1)
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(DarwinNotifyCenter, @"IAPDTransportListItemAddedNotification", 0, 0, 1u);
    }
    pthread_mutex_unlock(&stru_10013B980);
  }
  else
  {
    __break(0x5516u);
  }
}

uint64_t sub_1000D71F0(uint64_t a1, uint64_t a2)
{
  return sub_1000D7098(a1 - 192, a2);
}

uint64_t *sub_1000D71F8(uint64_t *result, uint64_t *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock(&stru_10013B980);
    sub_1000D728C(v2, (uint64_t)a2);
    sub_10005FC64((uint64_t)v2, (uint64_t)a2);
    sub_1000A0150((uint64_t)v2, (uint64_t)a2);
    sub_1000CA0F4(a2);
    sub_1000D73B8((uint64_t)a2);
    return (uint64_t *)pthread_mutex_unlock(&stru_10013B980);
  }
  return result;
}

uint64_t *sub_1000D728C(uint64_t *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 26));
  uint64_t v9 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
  if (((unint64_t)(v2 + 34) & 7) != 0 || ((unint64_t)(v2 + 35) & 7) != 0) {
    goto LABEL_23;
  }
  int v4 = (uint64_t *)v2[35];
  uint64_t v9 = v4;
  while (v4 != v2 + 34)
  {
    uint64_t result = sub_10000FDD0((uint64_t *)&v9);
    uint64_t v5 = *result;
    if (*result) {
      BOOL v6 = (*result & 7) == 0;
    }
    else {
      BOOL v6 = 0;
    }
    if (!v6 || ((v5 + 16) & 7) != 0) {
      goto LABEL_23;
    }
    if (*(void *)(v5 + 16) == a2)
    {
      uint64_t v9 = (uint64_t *)sub_100025DC8((uint64_t)(v2 + 34), v9);
      operator delete();
    }
    uint64_t result = sub_10000FE04(&v9);
    int v4 = v9;
  }
  if (((unint64_t)(v2 + 36) & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
  }
  else
  {
    if (!v2[36])
    {
      uint64_t v8 = v2[37];
      if (v8) {
        dispatch_source_set_timer(v8, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
      }
    }
    return (uint64_t *)pthread_mutex_unlock((pthread_mutex_t *)(v2 + 26));
  }
  return result;
}

void sub_1000D73B8(uint64_t a1)
{
  uint64_t v5 = a1;
  sub_10000FC8C();
  pthread_mutex_lock(&stru_10013B980);
  if (qword_10013D0E8) {
    BOOL v1 = (qword_10013D0E8 & 7) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1
    && ((sub_10002EB0C((void *)qword_10013D0E8, &v5),
         uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter(),
         CFNotificationCenterPostNotification(v2, @"IAPDTransportListChangedNotification", 0, 0, 1u),
         qword_10013D0E8)
      ? (BOOL v3 = (qword_10013D0E8 & 7) == 0)
      : (BOOL v3 = 0),
        v3 && ((qword_10013D0E8 + 16) & 7) == 0))
  {
    if (!*(void *)(qword_10013D0E8 + 16))
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(DarwinNotifyCenter, @"IAPDEmptyTransportListNotification", 0, 0, 1u);
    }
    pthread_mutex_unlock(&stru_10013B980);
  }
  else
  {
    __break(0x5516u);
  }
}

uint64_t sub_1000D7484(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48))(result, 256, 1, a2, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D74C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = a1 - 184;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48))(result, 256, 1, a2, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D750C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48))(result, 256, 0, a2, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D7550(uint64_t a1, uint64_t a2)
{
  uint64_t result = a1 - 184;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48))(result, 256, 0, a2, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D7594(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 224))(result, a2, a3, 0, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D75D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = a1 - 176;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 224))(result, a2, a3, 0, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D760C(uint64_t result, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  switch(a2)
  {
    case 327707:
      if (a5 == 1)
      {
        if (!a4)
        {
LABEL_20:
          __break(0x5516u);
          return result;
        }
        uint64_t v5 = *(uint64_t (**)(void))(*(void *)result + 48);
        return v5();
      }
LABEL_19:
      __break(0x5518u);
      goto LABEL_20;
    case 524301:
      if (!a4 || !a5) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128))(result, 4);
      }
      goto LABEL_19;
    case 524310:
      if (!a4 || !a5) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128))(result, 4);
      }
      goto LABEL_19;
  }
  return result;
}

uint64_t sub_1000D7764(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1000D760C(a1 - 176, a2, a3, a4, a5);
}

uint64_t sub_1000D776C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }
  if (a2)
  {
    if ((a2 & 7) == 0) {
      return sub_1000E6D9C(a2, 1);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1000D7798(uint64_t a1, uint64_t a2, signed int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  if (!a2)
  {
    if ((a3 + 32) < 0x40)
    {
      int v6 = -1;
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  if (!sub_1000A1834(a1, a2))
  {
LABEL_7:
    if ((a3 + 32) <= 0x3F)
    {
      if ((a2 & 7) == 0)
      {
LABEL_9:
        int v6 = sub_1000622BC(a2);
LABEL_12:
        sub_1000EE4F4(0, 4, "GetNewLingoObject could not get lingo object for lingoType=%xh, handle=%hhx, connection shuttingDown: %d\n", a3, a2, v6);
        return 0;
      }
      goto LABEL_34;
    }
LABEL_35:
    __break(0x550Au);
    JUMPOUT(0x1000D7B18);
  }
  if ((a2 & 7) != 0)
  {
LABEL_34:
    __break(0x5516u);
    goto LABEL_35;
  }
  if (sub_1000622BC(a2)) {
    goto LABEL_7;
  }
  if ((a3 + 32) >= 0x40) {
    goto LABEL_35;
  }
  switch(a3)
  {
    case 0:
      operator new();
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      uint64_t v9 = sub_1000A44AC(a2);
      if (!v9) {
        goto LABEL_9;
      }
      goto LABEL_26;
    case 5:
      operator new();
    case 6:
      operator new();
    case 8:
      operator new();
    case 9:
      uint64_t v9 = (uint64_t)sub_1000BCB60(a2);
      if (!v9) {
        goto LABEL_9;
      }
LABEL_26:
      uint64_t v7 = v9;
      if ((v9 & 7) != 0) {
        goto LABEL_34;
      }
      sub_1000A05B8(a1, a3, v9, a2);
      break;
    case 10:
      operator new();
    case 11:
      operator new();
    case 12:
      operator new();
    case 13:
      operator new();
    case 14:
      operator new();
    default:
      goto LABEL_9;
  }
  return v7;
}

uint64_t sub_1000D7B54(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_11;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  if ((a3 + 32) > 0x3F)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  sub_100063334(a2, a3);
  uint64_t v6 = sub_10009EF00(v3, a2, a3);
  if (!v6)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 232))(v3, a2, a3);
    if (!v6) {
      sub_1000EE4F4(0, 4, "Couldn't get lingo(%d) object! handle=%hhx\n", a3, a2);
    }
  }
  sub_100063380(a2, a3);
  return v6;
}

uint64_t sub_1000D7C3C(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_30;
  }
  if ((a2 & 7) != 0)
  {
LABEL_30:
    __break(0x5516u);
    return result;
  }
  uint64_t v5 = sub_10001CE30(a2);
  int v6 = a3;
  if (!v5)
  {
    int v6 = a3;
    if (!sub_100062318(a2))
    {
      if (a3) {
        sub_1000EE4F4(0, 4, "Null Port! Setting activeMask to NONE. handle=%hhx reqLingoes=%xh\n", a2, a3);
      }
      int v6 = 0;
    }
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 1;
  int v10 = "Couldn't get lingo(%d) object! handle=%hhx port=%s\n";
  do
  {
    int v11 = 1 << v7;
    if (((1 << v7) & v6) != 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 240))(v3, a2, v7);
      if (result)
      {
        uint64_t v8 = v11 | v8;
      }
      else
      {
        if (v5)
        {
          if ((v5 & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v15 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 208))(v5);
        }
        else
        {
          uint64_t v15 = "";
        }
        sub_1000EE4F4(0, 4, v10, v7, a2, v15);
        uint64_t v9 = 0;
      }
    }
    else if (v7 && !sub_100062318(a2))
    {
      uint64_t v12 = v9;
      int v13 = v10;
      int v14 = sub_10009F43C(v3, v5);
      sub_100063334(a2, v7);
      if ((v14 & v11) == 0 && sub_10009EF00(v3, a2, v7)) {
        sub_1000A06A4(v3, v7, a2);
      }
      sub_100063380(a2, v7);
      int v10 = v13;
      uint64_t v9 = v12;
    }
    uint64_t v7 = (v7 + 1);
  }
  while (v7 != 15);
  sub_10009F31C(v3, v5, v8);
  unsigned int v16 = sub_10009F368(v3, v5);
  int v17 = sub_10009F43C(v3, v5);
  sub_1000636A8(a2, v17 | v16);
  if ((v9 & 1) == 0) {
    sub_1000EE4F4(0, 4, "Failed creating all lingo objects requested=%xh mask=%xh successMask=%xh!\n", a3, v6, v8);
  }
  return v8;
}

uint64_t sub_1000D7EA0(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = sub_10001CE30(a2);
    return sub_10009F368(v2, v3);
  }
  return result;
}

uint64_t sub_1000D7EFC(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_30;
  }
  if ((a2 & 7) != 0)
  {
LABEL_30:
    __break(0x5516u);
    return result;
  }
  uint64_t v5 = sub_10001CE30(a2);
  int v6 = a3;
  if (!v5)
  {
    int v6 = a3;
    if (!sub_100062318(a2))
    {
      if (a3) {
        sub_1000EE4F4(0, 4, "Null Port! Setting allowedMask to NONE. handle=%hhx reqLingoes=%xh\n", a2, a3);
      }
      int v6 = 0;
    }
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 1;
  int v10 = "Couldn't get lingo(%d) object! handle=%hhx port=%s\n";
  do
  {
    int v11 = 1 << v7;
    if (((1 << v7) & v6) != 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 240))(v3, a2, v7);
      if (result)
      {
        uint64_t v8 = v11 | v8;
      }
      else
      {
        if (v5)
        {
          if ((v5 & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v15 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 208))(v5);
        }
        else
        {
          uint64_t v15 = "";
        }
        sub_1000EE4F4(0, 4, v10, v7, a2, v15);
        uint64_t v9 = 0;
      }
    }
    else if (v7 && !sub_100062318(a2))
    {
      uint64_t v12 = v9;
      int v13 = v10;
      int v14 = sub_10009F368(v3, v5);
      sub_100063334(a2, v7);
      if ((v14 & v11) == 0 && sub_10009EF00(v3, a2, v7)) {
        sub_1000A06A4(v3, v7, a2);
      }
      sub_100063380(a2, v7);
      int v10 = v13;
      uint64_t v9 = v12;
    }
    uint64_t v7 = (v7 + 1);
  }
  while (v7 != 15);
  sub_10009F3F0(v3, v5, v8);
  unsigned int v16 = sub_10009F368(v3, v5);
  int v17 = sub_10009F43C(v3, v5);
  sub_1000636A8(a2, v17 | v16);
  if ((v9 & 1) == 0) {
    sub_1000EE4F4(0, 4, "Failed creating all lingo objects requested=%xh mask=%xh success%xh!\n", a3, v6, v8);
  }
  return v8;
}

uint64_t sub_1000D8160(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v3 = sub_10001CE30(a2);
    return sub_10009F43C(v2, v3);
  }
  return result;
}

uint64_t sub_1000D81BC(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
    return (*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)v3 + 144))(v3, a2, v6 | a3) & a3;
  }
  return result;
}

uint64_t sub_1000D8258(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 168))(result);
    return (*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)v3 + 160))(v3, a2, v6 | a3) & a3;
  }
  return result;
}

void sub_1000D82F4(uint64_t a1, uint64_t a2, char *a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 304));
  uint64_t v6 = sub_1000A15B4(a1, v5, 0);
  if (v6)
  {
    uint64_t v7 = v6;
  }
  else
  {
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_27;
    }
    if (!sub_100013BA0(v5) || (uint64_t v9 = (uint64_t)sub_1000A1C94((uint64_t *)a1, v5)) == 0)
    {
      uint64_t v7 = sub_1000A12F4(a1);
      char v8 = 1;
LABEL_18:
      if (!v7) {
        goto LABEL_24;
      }
      if ((v7 & 7) == 0)
      {
        if (sub_100062174(v7)) {
          goto LABEL_24;
        }
        if ((v5 & 7) == 0)
        {
          if (sub_100013BA0(v5)) {
            sub_1000A20FC(a1, v7, 1, *(void *)(v5 + 40));
          }
          goto LABEL_24;
        }
      }
LABEL_27:
      __break(0x5516u);
      return;
    }
    uint64_t v7 = v9;
    if ((v9 & 7) != 0) {
      goto LABEL_27;
    }
    if (sub_10001CE30(v9) != v5 && *(void *)(v5 + 32))
    {
      uint64_t v10 = sub_10001CE30(v7);
      sub_1000A0328(a1, v10, v7);
      sub_1000A0228(a1, (void *)v5, v7);
    }
  }
  char v8 = 0;
  if (v5) {
    goto LABEL_18;
  }
LABEL_24:
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 304));
  if (a3) {
    *a3 = v8;
  }
}

uint64_t sub_1000D8458(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_41;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_41;
  }
  int v6 = a3;
  BOOL v8 = a3 != 100;
  BOOL v9 = a3 == 1;
  pthread_mutex_lock((pthread_mutex_t *)(result + 304));
  if ((a2 & 0x18C) == 0)
  {
    if ((a2 & 0x241) == 0)
    {
LABEL_23:
      uint64_t v10 = 0;
      goto LABEL_39;
    }
    __break(0x5518u);
    goto LABEL_10;
  }
  if (!a4)
  {
LABEL_10:
    if ((a2 & 0x100) == 0) {
      goto LABEL_18;
    }
    uint64_t result = sub_1000A163C(v4, 0);
    if (result || (uint64_t result = sub_1000A163C(v4, 1u)) != 0)
    {
      uint64_t v10 = result;
      a4 = 0;
      goto LABEL_34;
    }
    int v11 = (uint64_t *)v4;
    uint64_t v12 = 0;
    goto LABEL_17;
  }
  uint64_t result = sub_1000A15B4(v4, a4, 0);
  if (result)
  {
    uint64_t v10 = result;
    if ((a2 & 0x180) == 0)
    {
LABEL_25:
      if ((a4 & 7) != 0) {
        goto LABEL_41;
      }
      uint64_t result = sub_100013BA0(a4);
      if (result) {
        goto LABEL_27;
      }
LABEL_39:
      pthread_mutex_unlock((pthread_mutex_t *)(v4 + 304));
      return v10;
    }
    goto LABEL_27;
  }
  if ((a4 & 7) != 0) {
    goto LABEL_41;
  }
  if (!sub_100013BA0(a4)) {
    goto LABEL_18;
  }
  int v11 = (uint64_t *)v4;
  uint64_t v12 = a4;
LABEL_17:
  uint64_t result = (uint64_t)sub_1000A1B54(v11, v12);
  uint64_t v10 = result;
  if (result) {
    goto LABEL_20;
  }
LABEL_18:
  if ((v9 & (a2 >> 8) | v8 & (a2 >> 7) | ((a2 & 4) >> 2)) != 1) {
    goto LABEL_23;
  }
  uint64_t result = sub_1000A12F4(v4);
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_39;
  }
LABEL_20:
  if ((a2 & 0x180) == 0)
  {
    if (!a4) {
      goto LABEL_39;
    }
    goto LABEL_25;
  }
  if (a4)
  {
LABEL_27:
    if ((a4 & 7) != 0) {
      goto LABEL_41;
    }
    if ((a2 & 0x80) != 0)
    {
      uint64_t v13 = *(void *)(a4 + 32);
      if (v13)
      {
        if ((v13 & 7) != 0) {
          goto LABEL_41;
        }
        int v14 = (_DWORD *)(v13 + 52);
        if ((v14 & 3) != 0) {
          goto LABEL_41;
        }
        *int v14 = v6;
      }
    }
    a4 = *(void *)(a4 + 40);
  }
LABEL_34:
  if ((v10 & 7) == 0)
  {
    if (!sub_100062174(v10) || a4 && sub_1000622A4(v10) != a4) {
      sub_1000A20FC(v4, v10, 1, a4);
    }
    goto LABEL_39;
  }
LABEL_41:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8644(uint64_t result, unsigned char *a2, char *a3)
{
  if (!a2 || (*a2 = -1, !a3))
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }
  *a3 = -1;
  if ((result + 32) >= 0x40)
  {
LABEL_20:
    __break(0x550Au);
    JUMPOUT(0x1000D87B0);
  }
  switch((int)result)
  {
    case 0:
      *a2 = 1;
      char v4 = 9;
      goto LABEL_18;
    case 1:
    case 10:
    case 12:
      *a2 = 1;
      char v4 = 2;
      goto LABEL_18;
    case 2:
    case 11:
      *a2 = 1;
      char v4 = 3;
      goto LABEL_18;
    case 3:
      *a2 = 1;
      char v4 = 5;
      goto LABEL_18;
    case 4:
      *a2 = 1;
      uint64_t result = dword_10013B6CC;
      if (dword_10013B6CC != -1) {
        goto LABEL_15;
      }
      uint64_t v5 = sub_100031160();
      if (!v5 || (v5 & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *))(*(void *)v5 + 360))(v5, off_10013B6D0);
      dword_10013B6CC = result;
LABEL_15:
      if (result) {
        char v4 = 12;
      }
      else {
        char v4 = 14;
      }
LABEL_18:
      *a3 = v4;
      return result;
    case 5:
    case 9:
      char v4 = 1;
      *a2 = 1;
      goto LABEL_18;
    case 6:
    case 8:
    case 13:
    case 14:
      char v4 = 0;
      *a2 = 1;
      goto LABEL_18;
    default:
      return result;
  }
}

uint64_t sub_1000D87EC(uint64_t result, int a2, unsigned int a3, unsigned int a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a2 == 327685)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, uint64_t, uint64_t))(*(void *)result + 128))(result, 2, 327685, 0, a3, a4, 0, 0, 0, 0, v4, v5);
  }
  return result;
}

uint64_t sub_1000D8874(uint64_t a1, int a2, unsigned int a3, unsigned int a4)
{
  return sub_1000D87EC(a1 - 176, a2, a3, a4);
}

uint64_t sub_1000D887C(uint64_t result)
{
  if ((*(void *)(result + 32) & 7) == 0) {
    return sub_10009F570(*(void *)(result + 32), *(void *)(result + 40));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8898(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator new();
  }
  __break(0x5516u);
  __break(0x550Au);
  return result;
}

uint64_t sub_1000D89DC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator new();
  }
  __break(0x5516u);
  __break(0x550Au);
  return result;
}

uint64_t *sub_1000D8B4C(uint64_t *result)
{
  if (result)
  {
    BOOL v1 = result;
    if ((result & 7) == 0)
    {
      v8[0] = 0xAAAAAAAAAAAAAAAALL;
      v8[1] = 0xAAAAAAAAAAAAAAAALL;
      sub_10002EDDC((uint64_t)v8);
      v7[0] = 0xAAAAAAAAAAAAAAAALL;
      v7[1] = 0xAAAAAAAAAAAAAAAALL;
      sub_1000EE3E8((uint64_t)v8, v7);
      uint64_t result = sub_10002DC04(v7);
      uint64_t v2 = v1[65];
      unint64_t v3 = v1[66];
      if (v2 == v3)
      {
        BOOL v4 = __CFADD__(v2, 60000);
        unint64_t v5 = v2 + 60000;
        if (!v4)
        {
LABEL_5:
          BOOL v6 = (unint64_t)result >= v5;
          v8[0] = off_100123868;
          sub_1000EE300(v8);
          return (uint64_t *)v6;
        }
      }
      else
      {
        unint64_t v5 = v3 + 20000;
        if (v3 < 0xFFFFFFFFFFFFB1E0) {
          goto LABEL_5;
        }
      }
      __break(0x5500u);
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8C0C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return pthread_mutex_lock((pthread_mutex_t *)(result + 368));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8C24(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return pthread_mutex_unlock((pthread_mutex_t *)(result + 368));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8C3C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8C70(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 56))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8CA4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8CD8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 72))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D8D0C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48))(result, a2, a3, a4);
  }
  __break(0x5516u);
  return result;
}

void sub_1000D8D44(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000D8D58(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000D8D6C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  __break(0x5516u);
  return result;
}

void sub_1000D8DA0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000D8DB4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000D8DC8()
{
  sub_1000D8F10(0, 1, 0);
  qword_10013C700 = v0;
  sub_1000D8F10(0, 1, 0);
  qword_10013C6F8 = v1;
  sub_1000D8F10(0, 1, 1u);
  qword_10013C6F0 = v2;
}

uint64_t sub_1000D8E3C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C7D0(result);
    return v1;
  }
  return result;
}

void sub_1000D8E78()
{
  uint64_t v0 = 0;
  while (dword_10013B900[v0] != -1)
  {
LABEL_6:
    if (++v0 == 4) {
      return;
    }
  }
  uint64_t v1 = sub_100031160();
  if (v1 && (v1 & 7) == 0)
  {
    dword_10013B900[v0] = (*(uint64_t (**)(uint64_t, char *))(*(void *)v1 + 360))(v1, (&off_10013B920)[v0]);
    goto LABEL_6;
  }
  __break(0x5516u);
}

void sub_1000D8F10(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a3 >= 4)
  {
    __break(0x550Au);
    __break(0x5516u);
  }
  else
  {
    if (a3 == 1) {
      operator new();
    }
    if (!a3) {
      operator new();
    }
  }
}

uint64_t sub_1000D8FE8(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, const char *a5)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  *(void *)uint64_t result = off_100128178;
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216))(a2);
  }
  else
  {
    uint64_t result = 5;
  }
  *(_DWORD *)(v5 + 8) = result;
  if (a3 >= 8) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 76) = a3;
  if (a4 > 3) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 80) = a4;
  uint64_t result = pthread_once(&stru_10013B910, sub_1000D8E78);
  if (!a2)
  {
    uint64_t v10 = "system";
    goto LABEL_13;
  }
  if ((a2 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    __break(0x550Au);
    return result;
  }
  uint64_t v10 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 208))(a2);
LABEL_13:
  snprintf((char *)(v5 + 12), 0x40uLL, "com.apple.iapd.stat.%s.%s", v10, a5);
  if (a4 <= 1)
  {
    uint64_t v11 = v5;
    sub_100062820((uint64_t)&qword_10013D0B0, &v11);
  }
  return v5;
}

void *sub_1000D9150(void *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = off_100128178;
    uint64_t v2 = result;
    sub_1000672F0(&qword_10013D0B0, &v2);
    return v1;
  }
  return result;
}

void sub_1000D91BC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000D91D0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000D91E4(uint64_t result, int a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
    goto LABEL_16;
  }
  unsigned int v2 = result;
  if (result > 3) {
    return result;
  }
  if (!a2)
  {
    if (~(unint64_t)dword_10013B900 >= 4 * (unint64_t)result)
    {
      dword_10013B900[result] = 0;
      return result;
    }
    goto LABEL_16;
  }
  if (a2 >= 1)
  {
    if (~(unint64_t)dword_10013B900 >= 4 * (unint64_t)result)
    {
      dword_10013B900[result] = 1;
      return result;
    }
    goto LABEL_16;
  }
  uint64_t result = sub_100031160();
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (~(unint64_t)&off_10013B920 < 8 * (unint64_t)v2
    || (uint64_t result = (*(uint64_t (**)(uint64_t, char *))(*(void *)result + 360))(result, (&off_10013B920)[v2]),
        ~(unint64_t)dword_10013B900 < 4 * (unint64_t)v2))
  {
LABEL_16:
    __break(0x5513u);
LABEL_17:
    __break(0x5516u);
    return result;
  }
  dword_10013B900[v2] = result;
  return result;
}

uint64_t *sub_1000D92E0()
{
  v3[0] = 0xAAAAAAAAAAAAAAAALL;
  v3[1] = 0xAAAAAAAAAAAAAAAALL;
  sub_10002EDDC((uint64_t)v3);
  v2[0] = 0;
  v2[1] = 0;
  sub_1000EE3E8((uint64_t)v3, v2);
  uint64_t v0 = sub_1000D935C(v2);
  v3[0] = off_100123868;
  sub_1000EE300(v3);
  return v0;
}

uint64_t *sub_1000D935C(uint64_t *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }
  uint64_t v1 = 1000000 * *result;
  if ((unsigned __int128)(*result * (__int128)1000000) >> 64 != v1 >> 63)
  {
LABEL_7:
    __break(0x550Cu);
    goto LABEL_8;
  }
  uint64_t v2 = result[1] / 1000;
  uint64_t result = (uint64_t *)(v1 + v2);
  if (__OFADD__(v1, v2)) {
LABEL_8:
  }
    __break(0x5500u);
  return result;
}

uint64_t sub_1000D93BC(uint64_t result, uint64_t a2, unsigned int a3, const char *a4)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (a3 < 8)
  {
    sub_1000D8FE8(result, a2, a3, 0, a4);
    *(void *)uint64_t v4 = off_100128208;
    *(void *)(v4 + 92) = 0;
    *(void *)(v4 + 84) = 0;
    *(_DWORD *)(v4 + 100) = 0;
    *(_DWORD *)(v4 + 108) = -1;
    pthread_mutex_init((pthread_mutex_t *)(v4 + 120), 0);
    return v4;
  }
  __break(0x550Au);
  return result;
}

void *sub_1000D9448(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000D9150(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000D945C(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000D9150(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D94A4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 84);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D94BC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 96);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D94D4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 88);
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000D94EC(unint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unint64_t v1 = *(unsigned int *)(result + 96);
    if (v1) {
      return *(void *)(result + 88) / v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D9518(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 108);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9530(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 112);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9548(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 100);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9560(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 104);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9578(uint64_t result, void *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7)
{
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v8 = *(unsigned int *)(result + 76);
  if (v8 >= 8)
  {
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }
  if (v8 >= 4) {
    goto LABEL_35;
  }
  if (~(unint64_t)dword_10013B900 < 4 * v8) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)(result + 88);
  if (!dword_10013B900[v8]) {
    return v9;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 120));
  uint64_t v16 = *(unsigned int *)(v7 + 76);
  if (v16 >= 8) {
    goto LABEL_34;
  }
  if (v16 > 3)
  {
LABEL_35:
    __break(0x5512u);
    goto LABEL_36;
  }
  if (~(unint64_t)dword_10013B900 >= 4 * v16)
  {
    if (!dword_10013B900[v16]) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)(v7 + 88);
    if (a2)
    {
      if ((a2 & 7) != 0) {
        goto LABEL_33;
      }
      *a2 = v9;
    }
    if (a3)
    {
      unint64_t v17 = *(unsigned int *)(v7 + 96);
      if (v17) {
        unint64_t v17 = *(void *)(v7 + 88) / v17;
      }
      if ((a3 & 3) != 0) {
        goto LABEL_33;
      }
      *a3 = v17;
    }
    if (a4)
    {
      if ((a4 & 3) != 0) {
        goto LABEL_33;
      }
      *a4 = *(_DWORD *)(v7 + 108);
    }
    if (a5)
    {
      if ((a5 & 3) != 0) {
        goto LABEL_33;
      }
      *a5 = *(_DWORD *)(v7 + 112);
    }
    if (!a6) {
      goto LABEL_28;
    }
    if ((a6 & 3) == 0)
    {
      *a6 = *(_DWORD *)(v7 + 100);
LABEL_28:
      if (a7)
      {
        if ((a7 & 3) == 0)
        {
          *a7 = *(_DWORD *)(v7 + 104);
          goto LABEL_31;
        }
        goto LABEL_33;
      }
LABEL_31:
      pthread_mutex_unlock((pthread_mutex_t *)(v7 + 120));
      return v9;
    }
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
LABEL_36:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000D96E4(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (result && (result & 7) == 0)
  {
    if (!a3) {
      return (*(uint64_t (**)(void))(*(void *)result + 16))();
    }
    if ((a3 & 3) == 0)
    {
      *a3 = 0;
      return (*(uint64_t (**)(void))(*(void *)result + 16))();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9728(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 120));
    *(_DWORD *)(v1 + 84) = 0;
    *(void *)(v1 + 88) = 0;
    *(_OWORD *)(v1 + 96) = xmmword_1000FEF90;
    *(_DWORD *)(v1 + 112) = 0;
    return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 120));
  }
  return result;
}

uint64_t sub_1000D9790(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 120));
  *(_DWORD *)(v2 + 84) = a2;
  uint64_t v4 = *(void *)(v2 + 88);
  BOOL v5 = __CFADD__(v4, a2);
  uint64_t v6 = v4 + a2;
  if (v5 || (*(void *)(v2 + 88) = v6, v7 = *(_DWORD *)(v2 + 96), v5 = __CFADD__(v7, 1), int v8 = v7 + 1, v5))
  {
    __break(0x5500u);
LABEL_13:
    __break(0x5516u);
    return result;
  }
  *(_DWORD *)(v2 + 96) = v8;
  if (*(_DWORD *)(v2 + 100) < a2)
  {
    *(_DWORD *)(v2 + 100) = a2;
    *(_DWORD *)(v2 + 104) = sub_10006FADC();
  }
  if (*(_DWORD *)(v2 + 108) > a2)
  {
    *(_DWORD *)(v2 + 108) = a2;
    *(_DWORD *)(v2 + 112) = sub_10006FADC();
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 120));
}

uint64_t sub_1000D9844(uint64_t result, uint64_t a2, unsigned int a3, const char *a4)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (a3 < 8)
  {
    sub_1000D8FE8(result, a2, a3, 1u, a4);
    *(void *)uint64_t v4 = off_1001282A0;
    *(void *)(v4 + 280) = 0;
    *(void *)(v4 + 288) = 0;
    pthread_mutex_init((pthread_mutex_t *)(v4 + 296), 0);
    return v4;
  }
  __break(0x550Au);
  return result;
}

void *sub_1000D98C0(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000D9150(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000D98D4(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000D9150(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D991C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
LABEL_10:
    __break(0x5512u);
    goto LABEL_11;
  }
  if (!*(_DWORD *)(result + 292)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v1 = *(unsigned int *)(result + 280);
  if (v1 >= 8) {
    goto LABEL_10;
  }
  if (!__CFADD__(result + 88, 4 * v1))
  {
    uint64_t v2 = result + 88 + 4 * v1;
    if ((v2 & 3) == 0) {
      return *(unsigned int *)v2;
    }
    goto LABEL_9;
  }
LABEL_11:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000D9970(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 292);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9988(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t))(*(void *)result + 16))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D99D4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9A08(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9A3C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9A54(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9A88(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000D9AA0(uint64_t result, void *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7)
{
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v8 = *(unsigned int *)(result + 76);
  if (v8 >= 8)
  {
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }
  if (v8 >= 4) {
    goto LABEL_35;
  }
  if (~(unint64_t)dword_10013B900 < 4 * v8) {
    goto LABEL_36;
  }
  if (!dword_10013B900[v8]) {
    return 0;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 296));
  uint64_t v15 = *(unsigned int *)(v7 + 76);
  if (v15 >= 8) {
    goto LABEL_34;
  }
  if (v15 > 3)
  {
LABEL_35:
    __break(0x5512u);
    goto LABEL_36;
  }
  if (~(unint64_t)dword_10013B900 >= 4 * v15)
  {
    if (!dword_10013B900[v15])
    {
      LODWORD(result) = 0;
      goto LABEL_31;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
    if (a2)
    {
      if ((a2 & 7) != 0) {
        goto LABEL_33;
      }
      *a2 = 0;
    }
    if (a3)
    {
      if ((a3 & 3) != 0) {
        goto LABEL_33;
      }
      *a3 = 0;
    }
    if (a4)
    {
      if ((a4 & 3) != 0) {
        goto LABEL_33;
      }
      *a4 = 0;
    }
    if (a5)
    {
      if ((a5 & 3) != 0) {
        goto LABEL_33;
      }
      *a5 = 0;
    }
    if (!a6)
    {
LABEL_26:
      if (!a7)
      {
LABEL_31:
        uint64_t v16 = result;
        pthread_mutex_unlock((pthread_mutex_t *)(v7 + 296));
        return v16;
      }
      if ((a7 & 3) == 0)
      {
        *a7 = 0;
        goto LABEL_31;
      }
      goto LABEL_33;
    }
    if ((a6 & 3) == 0)
    {
      *a6 = 0;
      goto LABEL_26;
    }
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }
LABEL_36:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000D9C20(uint64_t result, unsigned int a2, _DWORD *a3, _DWORD *a4, void *a5, void *a6)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v7 = *(unsigned int *)(result + 76);
  if (v7 >= 8)
  {
LABEL_36:
    __break(0x550Au);
    goto LABEL_37;
  }
  if (v7 >= 4) {
    goto LABEL_37;
  }
  if (~(unint64_t)dword_10013B900 < 4 * v7) {
    goto LABEL_34;
  }
  if (!dword_10013B900[v7]) {
    return 0;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 296));
  uint64_t v13 = *(unsigned int *)(v6 + 76);
  if (v13 >= 8) {
    goto LABEL_36;
  }
  if (v13 > 3)
  {
LABEL_37:
    __break(0x5512u);
    goto LABEL_38;
  }
  if (~(unint64_t)dword_10013B900 < 4 * v13) {
    goto LABEL_34;
  }
  if (!dword_10013B900[v13] || *(_DWORD *)(v6 + 292) <= a2)
  {
    uint64_t v19 = 0;
    goto LABEL_31;
  }
  int v14 = *(_DWORD *)(v6 + 280);
  BOOL v15 = __CFADD__(v14, a2);
  char v16 = v14 + a2;
  if (!v15)
  {
    uint64_t v17 = v16 & 7;
    if (!__CFADD__(v6 + 88, 4 * v17))
    {
      uint64_t v18 = v6 + 88 + 4 * v17;
      if ((v18 & 3) != 0) {
        goto LABEL_35;
      }
      uint64_t v19 = *(unsigned int *)v18;
      if (a3)
      {
        if (__CFADD__(v6 + 248, 4 * v17)) {
          goto LABEL_34;
        }
        if ((((v6 - 8 + 4 * v17) | a3) & 3) != 0) {
          goto LABEL_35;
        }
        *a3 = *(_DWORD *)(v6 + 248 + 4 * v17);
      }
      if (a4)
      {
        if ((a4 & 3) != 0) {
          goto LABEL_35;
        }
        *a4 = *(_DWORD *)v18;
      }
      if (!a5) {
        goto LABEL_26;
      }
      if (!__CFADD__(v6 + 120, 8 * v17))
      {
        int v20 = (void *)(v6 + 120 + 8 * v17);
        if (((v20 | a5) & 7) == 0)
        {
          *a5 = *v20;
LABEL_26:
          if (!a6)
          {
LABEL_31:
            pthread_mutex_unlock((pthread_mutex_t *)(v6 + 296));
            return v19;
          }
          if (!__CFADD__(v6 + 184, 8 * v17))
          {
            BOOL v21 = (void *)(v6 + 184 + 8 * v17);
            if (((v21 | a6) & 7) == 0)
            {
              *a6 = *v21;
              goto LABEL_31;
            }
            goto LABEL_35;
          }
          goto LABEL_34;
        }
LABEL_35:
        __break(0x5516u);
        goto LABEL_36;
      }
    }
LABEL_34:
    __break(0x5513u);
    goto LABEL_35;
  }
LABEL_38:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000D9DD4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 296));
    *(void *)(v1 + 280) = 0;
    *(void *)(v1 + 288) = 0;
    return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 296));
  }
  return result;
}

uint64_t *sub_1000D9E28(uint64_t *result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 37));
  uint64_t v8 = *((unsigned int *)v4 + 72);
  *((_DWORD *)v4 + 71) = v8;
  char v9 = v8 + 1;
  if (v8 == -1)
  {
LABEL_25:
    __break(0x5500u);
    return result;
  }
  *((_DWORD *)v4 + 72) = v9 & 7;
  if ((v9 & 7) == *((_DWORD *)v4 + 70)) {
    *((_DWORD *)v4 + 70) = ((_BYTE)v8 + 2) & 7;
  }
  if (v8 >= 8) {
    goto LABEL_24;
  }
  if (__CFADD__(v4 + 11, 4 * v8))
  {
LABEL_23:
    __break(0x5513u);
    goto LABEL_24;
  }
  uint64_t v10 = (uint64_t)v4 + 4 * v8 + 88;
  if ((v10 & 3) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }
  *(_DWORD *)uint64_t v10 = a2;
  uint64_t v11 = *((unsigned int *)v4 + 71);
  if (v11 > 7)
  {
LABEL_24:
    __break(0x5512u);
    goto LABEL_25;
  }
  if (__CFADD__(v4 + 15, 8 * v11)) {
    goto LABEL_23;
  }
  uint64_t v12 = (uint64_t)&v4[v11 + 15];
  if ((v12 & 7) != 0) {
    goto LABEL_22;
  }
  *(void *)uint64_t v12 = a3;
  if (__CFADD__(v4 + 23, 8 * v11)) {
    goto LABEL_23;
  }
  uint64_t v13 = (uint64_t)&v4[v11 + 23];
  if ((v13 & 7) != 0) {
    goto LABEL_22;
  }
  *(void *)uint64_t v13 = a4;
  uint64_t result = sub_10006FADC();
  uint64_t v14 = *((unsigned int *)v4 + 71);
  if (v14 > 7) {
    goto LABEL_24;
  }
  if (__CFADD__(v4 + 31, 4 * v14)) {
    goto LABEL_23;
  }
  uint64_t v15 = (uint64_t)v4 + 4 * v14 + 248;
  if ((v15 & 3) != 0) {
    goto LABEL_22;
  }
  *(_DWORD *)uint64_t v15 = result;
  unsigned int v16 = *((_DWORD *)v4 + 73);
  if (v16 < 8) {
    ++v16;
  }
  *((_DWORD *)v4 + 73) = v16;
  return (uint64_t *)pthread_mutex_unlock((pthread_mutex_t *)(v4 + 37));
}

uint64_t sub_1000D9F78()
{
  qword_10013D0B0 = (uint64_t)&qword_10013D0B0;
  qword_10013D0B8 = (uint64_t)&qword_10013D0B0;
  qword_10013D0C0 = 0;
  return __cxa_atexit((void (*)(void *))sub_1000D8E3C, &qword_10013D0B0, (void *)&_mh_execute_header);
}

uint64_t sub_1000D9FA4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C7D0(result);
    return v1;
  }
  return result;
}

uint64_t sub_1000D9FE0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    *(void *)uint64_t result = a2;
    *(_DWORD *)(result + 16) = 0;
    operator new();
  }
  __break(0x5516u);
  __break(0x5510u);
  return result;
}

uint64_t sub_1000DA0FC(uint64_t a1)
{
  return sub_1000DA110(*(void *)(*(void *)(a1 + 32) + 24), 1, 0);
}

uint64_t sub_1000DA110(uint64_t a1, int a2, int a3)
{
  uint64_t result = pthread_mutex_lock(&stru_10013B940);
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  if (*(unsigned __int8 *)(a1 + 8) < 2u)
  {
    if (*(unsigned char *)(a1 + 8) || a3)
    {
      if (*(void *)a1) {
        operator new();
      }
      __break(0x5518u);
    }
    else
    {
      if (!a2) {
        return pthread_mutex_unlock(&stru_10013B940);
      }
      uint64_t v7 = (uint64_t *)qword_10013D0D0;
      for (i = (uint64_t *)qword_10013D0D0; ; uint64_t v7 = i)
      {
        if (v7 == &qword_10013D0C8)
        {
          sub_10001C7D0((uint64_t)&qword_10013D0C8);
          return pthread_mutex_unlock(&stru_10013B940);
        }
        uint64_t result = *sub_10000FDD0((uint64_t *)&i);
        if (result) {
          break;
        }
        sub_10000FE04(&i);
      }
      if ((result & 7) == 0) {
        operator delete();
      }
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DA27C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000D9FE0(result, a2);
  }
  __break(0x5516u);
  return result;
}

NSObject *sub_1000DA290(NSObject *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (uint64_t result = pthread_mutex_lock(&stru_10013B940), v2 = v1 + 3, (isa = v1[3].isa) == 0)
    || (isa & 7) != 0
    || (*((unsigned char *)isa + 8) = 0, (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_100062820((uint64_t)&qword_10013D0C8, v2);
    pthread_mutex_unlock(&stru_10013B940);
    uint64_t result = v1[1].isa;
    if (result)
    {
      dispatch_release(result);
      return v1;
    }
  }
  __break(0x5510u);
  return result;
}

NSObject *sub_1000DA318(NSObject *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DA290(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DA32C(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_DWORD *)(result + 16) = a2;
  }
  return result;
}

void sub_1000DA344(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (pthread_mutex_lock(&stru_10013B940), (uint64_t v2 = *(void *)(a1 + 24)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
LABEL_13:
    __break(0x5510u);
    return;
  }
  *(unsigned char *)(v2 + 8) = 1;
  pthread_mutex_unlock(&stru_10013B940);
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  if (v3) {
    dispatch_time_t v4 = dispatch_time(0, 1000000 * v3);
  }
  else {
    dispatch_time_t v4 = -1;
  }
  BOOL v5 = *(NSObject **)(a1 + 8);
  if (!v5) {
    goto LABEL_13;
  }
  dispatch_source_set_timer(v5, v4, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void sub_1000DA3F0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (pthread_mutex_lock(&stru_10013B940), (uint64_t v2 = *(void *)(a1 + 24)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_10;
  }
  *(unsigned char *)(v2 + 8) = 0;
  pthread_mutex_unlock(&stru_10013B940);
  unsigned int v3 = *(NSObject **)(a1 + 8);
  if (!v3)
  {
LABEL_10:
    __break(0x5510u);
    return;
  }
  dispatch_source_set_timer(v3, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
}

uint64_t sub_1000DA474(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DA110(*(void *)(result + 24), 0, 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DA494()
{
  qword_10013D0C8 = (uint64_t)&qword_10013D0C8;
  qword_10013D0D0 = (uint64_t)&qword_10013D0C8;
  qword_10013D0D8 = 0;
  return __cxa_atexit((void (*)(void *))sub_1000D9FA4, &qword_10013D0C8, (void *)&_mh_execute_header);
}

const char *sub_1000DA4C0(char *a1)
{
  if (a1[23] < 0) {
    a1 = *(char **)a1;
  }
  return sub_1000DA4D4(a1);
}

const char *sub_1000DA4D4(char *a1)
{
  if (!a1 || !strcmp(a1, "/") || !strcmp(a1, ".")) {
    return 0;
  }
  uint64_t v2 = dirname(a1);
  unsigned int v3 = v2;
  if (v2)
  {
    v4.tv_sec = 0xAAAAAAAAAAAAAAAALL;
    v4.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
    *(timespec *)&v7.st_blkstd::string::size_type size = v4;
    *(timespec *)v7.st_qspare = v4;
    v7.st_birthtimespec = v4;
    *(timespec *)&v7.st_std::string::size_type size = v4;
    v7.st_mtimespec = v4;
    v7.st_ctimespec = v4;
    *(timespec *)&v7.st_uid = v4;
    v7.st_atimespec = v4;
    *(timespec *)&v7.st_dev = v4;
    if (!stat(v2, &v7)) {
      return (const char *)mkdir(a1, 0x1FFu);
    }
    BOOL v5 = strdup(v3);
    unsigned int v3 = (const char *)sub_1000DA4D4();
    free(v5);
    if (!v3) {
      return (const char *)mkdir(a1, 0x1FFu);
    }
  }
  return v3;
}

BOOL sub_1000DA5A0(const char *a1)
{
  v1.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v1.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)&v3.st_blkstd::string::size_type size = v1;
  *(timespec *)v3.st_qspare = v1;
  v3.st_birthtimespec = v1;
  *(timespec *)&v3.st_std::string::size_type size = v1;
  v3.st_mtimespec = v1;
  v3.st_ctimespec = v1;
  *(timespec *)&v3.st_uid = v1;
  v3.st_atimespec = v1;
  *(timespec *)&v3.st_dev = v1;
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  return stat(a1, &v3) == 0;
}

uint64_t sub_1000DA5F4(pthread_mutex_t *a1)
{
  v4.__sig = 0xAAAAAAAAAAAAAAAALL;
  *(void *)v4.__opaque = 0xAAAAAAAAAAAAAAAALL;
  pthread_mutexattr_init(&v4);
  pthread_mutexattr_settype(&v4, 2);
  uint64_t v2 = pthread_mutex_init(a1, &v4);
  pthread_mutexattr_destroy(&v4);
  return v2;
}

uint64_t sub_1000DA680()
{
  if (qword_10013C710 != -1) {
    dispatch_once(&qword_10013C710, &stru_100128368);
  }
  return qword_10013C708;
}

void sub_1000DA6C4(id a1)
{
}

uint64_t sub_1000DA710(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v1 = off_1001284C8;
  if (((v1 + 96) & 7) != 0
    || (*(void *)uint64_t v1 = off_100128398,
        *(void *)(v1 + 96) = off_100128438,
        *(void *)(v1 + 104) = 0,
        *(unsigned char *)(v1 + 112) = 0,
        *(_DWORD *)(v1 + 116) = -1,
        *(void *)(v1 + 120) = 0,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v1 + 96, 8u, 0);
    return v1;
  }
  return result;
}

uint64_t sub_1000DA7DC(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100128398,
        char v2 = result + 96,
        *(void *)(result + 96) = off_100128438,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (uint64_t result = (uint64_t)sub_1000684B4((uint64_t *)result, v1 + 96, 8u), (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000DA880(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100122248,
        char v2 = result + 8,
        uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(result + 32)),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_10000C538(v1 + 8);
    return v1;
  }
  return result;
}

uint64_t sub_1000DA8EC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DA7DC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DA900(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000DA7DC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DA914(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DA7DC(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DA95C(uint64_t a1)
{
  return sub_1000DA914(a1 - 96);
}

BOOL sub_1000DA964(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 112);
    if (v1 < 2) {
      return v1 != 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DA990(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (v2 = 0, uint64_t result = sub_1000D289C(), (result & 7) != 0) || !result)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000A15B4(result, *(void *)(v1 + 120), 0);
    if (result)
    {
      sub_10006D0E8((uint64_t)&v2, result);
      return v2;
    }
  }
  return result;
}

uint64_t sub_1000DA9FC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_10;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v25[13] = v6;
  *(_OWORD *)uint64_t v25 = v6;
  long long v24 = v6;
  long long v23 = v6;
  long long v22 = v6;
  long long v21 = v6;
  long long v20 = v6;
  long long v19 = v6;
  long long v18 = v6;
  long long v17 = v6;
  long long v16 = v6;
  long long v15 = v6;
  long long v14 = v6;
  long long v13 = v6;
  long long v12 = v6;
  long long v11 = v6;
  unsigned __int8 v9 = -2;
  char __s = 0;
  uint64_t v7 = sub_1000D289C();
  if ((v7 & 7) != 0 || !v7) {
    goto LABEL_10;
  }
  uint64_t result = sub_1000A15B4(v7, *(void *)(a1 + 120), 0);
  if (!result)
  {
LABEL_8:
    if (a3) {
      return sub_10002B034(a3, &__s);
    }
LABEL_10:
    __break(0x5516u);
  }
  if (a2 <= 0xFF)
  {
    sub_10006D1CC(a2, &__s, &v9, result);
    goto LABEL_8;
  }
  __break(0x5507u);
  return result;
}

uint64_t sub_1000DAB14(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (a2 < 0) {
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96))(result);
  if ((int)result <= a2) {
    return result;
  }
  *(_DWORD *)(v2 + 116) = a2;
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t result = sub_1000A15B4(result, *(void *)(v2 + 120), 0);
  if (!result) {
    return result;
  }
  if (a2 >= 0x100)
  {
LABEL_14:
    __break(0x5507u);
    return result;
  }
  return sub_10006D044(a2, result);
}

uint64_t sub_1000DABD0(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (v2 = 0, uint64_t result = sub_1000D289C(), (result & 7) != 0) || !result)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000A15B4(result, *(void *)(v1 + 120), 0);
    if (result)
    {
      sub_10006CF50((uint64_t)&v2, result);
      return v2;
    }
  }
  return result;
}

uint64_t sub_1000DAC3C(uint64_t result, _DWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*a2 >= 0x20u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*a2 == 9)
  {
    *(unsigned char *)(result + 112) = 0;
    *(_DWORD *)(result + 116) = -1;
  }
  return result;
}

uint64_t sub_1000DAC74(uint64_t a1, _DWORD *a2)
{
  return sub_1000DAC3C(a1 - 96, a2);
}

void sub_1000DAC7C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_15;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_16:
    __break(0x550Au);
    return;
  }
  if (a2 != 8 || a5 != 16) {
    sub_1000EE4F4(0, 4, "%s:%d wrong lingo (%d) or payload size (%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryEQ.cpp", 137, a2, a5);
  }
  if (!a4 || (a4 & 7) != 0) {
    goto LABEL_15;
  }
  if (*(_DWORD *)a4 != 16)
  {
    sub_1000EE4F4(0, 4, "%s:%d Incorrect cmdID\n.", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryEQ.cpp", 153);
    return;
  }
  *(unsigned char *)(a1 + 112) = 1;
  *(_DWORD *)(a1 + 116) = -1;
  if (((a4 + 8) & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  *(void *)(a1 + 120) = *(void *)(a4 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)a1 + 32);
  v7(a1, 262145);
}

void sub_1000DADB0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000DAC7C(a1 - 96, a2, 0, a4, a5);
  }
}

void sub_1000DADCC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000DADE0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000DADF4(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000DAE08(uint64_t result, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  if (!result || (uint64_t v7 = result, (result & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }
  *(void *)uint64_t result = &off_100128558;
  *(_DWORD *)(result + 8) = a2;
  if (a3 == (char)a3)
  {
    *(_DWORD *)(result + 12) = a3;
    *(_DWORD *)(result + 16) = a4;
    *(_DWORD *)(result + 20) = a5;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = a6;
    *(void *)(result + 40) = a7;
    *(unsigned char *)(result + 48) = 0;
    *(void *)(result + 52) = 0x1900000000;
    *(unsigned char *)(result + 60) = 0;
    *(void *)(result + 64) = 0xB00000009;
    result += 72;
    if (((v7 + 72) & 7) == 0)
    {
      sub_10000C500((void *)result);
      uint64_t result = v7 + 96;
      if (((v7 + 96) & 7) == 0)
      {
        sub_10000C500((void *)result);
        return v7;
      }
    }
    goto LABEL_7;
  }
LABEL_8:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DAEC8(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  *(void *)uint64_t result = &off_100128558;
  uint64_t v4 = 0xAAAAAAAAAAAAAAAALL;
  if (((result + 96) & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(result + 96);
  uint64_t v2 = result + 104;
  if (((result + 104) & 7) != 0) {
    goto LABEL_15;
  }
  while (v4 != v2)
  {
    uint64_t result = (uint64_t)sub_100004C28(&v4);
    if (!result) {
      goto LABEL_15;
    }
    if ((result & 7) != 0) {
      goto LABEL_15;
    }
    stat v3 = (uint64_t *)(result + 8);
    if (((result + 8) & 7) != 0) {
      goto LABEL_15;
    }
    uint64_t result = *v3;
    if (*v3)
    {
      if ((result & 7) != 0) {
        goto LABEL_15;
      }
      (*(void (**)(uint64_t))(*(void *)result + 8))(result);
    }
    sub_10000B05C(&v4);
  }
  sub_10000C538(v1 + 96);
  uint64_t result = v1 + 72;
  if (((v1 + 72) & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
  }
  else
  {
    sub_10000C538(result);
    return v1;
  }
  return result;
}

uint64_t sub_1000DAFD4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DAEC8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DAFE8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DAEC8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB030(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(_OWORD *)(result + 8) = xmmword_1001000D0;
    *(void *)(result + 32) = 0;
    *(void *)(result + 40) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 64) = 0xB00000009;
  }
  return result;
}

uint64_t sub_1000DB064(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 20);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB07C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 12);
  if (result != (char)result) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000DB0A0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 16);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB0B8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB0D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 24);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000DB0E8(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(_DWORD *)(result + 64);
    if (v1 < 0x20) {
      return v1 < 7;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DB114(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 64);
  if (result >= 0x20) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

BOOL sub_1000DB138(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(_DWORD *)(result + 68);
    if (v1 < 0x20) {
      return v1 == 12;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DB164(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 68);
  if (result >= 0x20) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

BOOL sub_1000DB188(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 60);
    if (v1 < 2) {
      return v1 != 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DB1B4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100086980(*(void *)(result + 40));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB1CC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_100094DEC(*(void *)(result + 40));
    if (!result) {
      return (uint64_t)&unk_10013D0E0;
    }
  }
  return result;
}

uint64_t sub_1000DB208(uint64_t result)
{
  if (!result || (result & 7) != 0 || (result += 72, (result & 7) != 0)) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000DB228(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 32);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB240(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000D289C();
      if (result)
      {
        if ((result & 7) == 0) {
          return sub_10009FE80(result, a2) == 56;
        }
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DB290(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (uint64_t v2 = *(void *)(result + 40),
        uint64_t result = sub_10008778C(v2),
        *(void *)(v1 + 24) = result,
        uint64_t v3 = v1 + 72,
        (v3 & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }
  else
  {
    sub_10000B13C(v3);
    uint64_t result = (uint64_t)sub_100094B04(v2);
    uint64_t v5 = result + 8;
    uint64_t v4 = *(void *)result;
    uint64_t v10 = *(void *)result;
    while (v4 != v5)
    {
      uint64_t result = (uint64_t)sub_100004C28(&v10);
      if (!result) {
        goto LABEL_13;
      }
      if ((result & 7) != 0) {
        goto LABEL_13;
      }
      if (((result + 8) & 7) != 0) {
        goto LABEL_13;
      }
      uint64_t v6 = *(void *)(result + 8);
      uint64_t result = (uint64_t)sub_100004C28(&v10);
      if (!result || (result & 7) != 0) {
        goto LABEL_13;
      }
      sub_1000DB374(v3, (unsigned __int8 *)result);
      uint64_t v7 = *(void *)(v6 + 29);
      long long v8 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v6;
      *(_OWORD *)(v9 + 16) = v8;
      *(void *)(v9 + 29) = v7;
      uint64_t result = (uint64_t)sub_10000B05C(&v10);
      uint64_t v4 = v10;
    }
  }
  return result;
}

void sub_1000DB374(uint64_t a1, unsigned __int8 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100099E48(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000DD76C((char *)a1, (char *)a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_1000DB458(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v6 = a2;
  if (!a1 || (a1 & 7) != 0 || (uint64_t v3 = a1 + 96, (v3 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000DB4AC(v3, &v6);
    *uint64_t v5 = a3;
  }
}

void sub_1000DB4AC(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000DD808(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    unsigned int v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000DD91C((_DWORD *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t sub_1000DB590(uint64_t result, unsigned int a2)
{
  unsigned int v4 = a2;
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v3 = 0xAAAAAAAAAAAAAAAALL, result += 96, ((v2 + 96) & 7) != 0)
    || (result = sub_1000DD9C4(result, &v4), uint64_t v3 = result, ((v2 + 104) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  if (v2 + 104 != result)
  {
    uint64_t result = (uint64_t)sub_100004C28(&v3);
    if (result && (result & 7) == 0 && ((result + 8) & 7) == 0) {
      return *(void *)(result + 8);
    }
    goto LABEL_12;
  }
  return 0;
}

uint64_t sub_1000DB62C()
{
  if (qword_10013C720 != -1) {
    dispatch_once(&qword_10013C720, &stru_100128630);
  }
  uint64_t result = qword_10013C718;
  if ((qword_10013C718 & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000DB67C(id a1)
{
}

uint64_t sub_1000DB6C8(uint64_t result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v1 = off_100128750;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_9;
  }
  *(void *)uint64_t v1 = off_100128660;
  *(void *)(v1 + 96) = off_100128720;
  *(void *)(v1 + 104) = 0;
  uint64_t result = v1 + 112;
  if (((v1 + 112) & 7) != 0
    || (sub_1000DAE08(result, 0, -1, -1, 0, 0, 0),
        *(_DWORD *)(v1 + 240) = 0,
        uint64_t result = v1 + 248,
        ((v1 + 248) & 7) != 0)
    || (sub_10000C500((void *)result),
        sub_1000142B4((void *)(v1 + 272)),
        pthread_mutex_init((pthread_mutex_t *)(v1 + 296), 0),
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v1 + 96, 0, 0);
    return v1;
  }
  return result;
}

uint64_t *sub_1000DB7E0(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    if ((result & 7) == 0)
    {
      *uint64_t result = (uint64_t)off_100128660;
      char v2 = (_BYTE)result + 96;
      result[12] = (uint64_t)off_100128720;
      uint64_t result = (uint64_t *)sub_100067E50();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_1000684B4(result, v1 + 96, 0);
          uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
          if (((v1 + 248) & 7) == 0)
          {
            uint64_t v5 = *(void *)(v1 + 248);
            if (((v1 + 256) & 7) == 0)
            {
              uint64_t v3 = v1 + 112;
              while (v5 != v1 + 256)
              {
                uint64_t result = sub_100004C28(&v5);
                if (!result || (result & 7) != 0 || ((unint64_t)(result + 1) & 7) != 0) {
                  goto LABEL_24;
                }
                if (result[1] != v3)
                {
                  uint64_t result = sub_100004C28(&v5);
                  if (!result) {
                    goto LABEL_24;
                  }
                  if ((result & 7) != 0) {
                    goto LABEL_24;
                  }
                  unsigned int v4 = (uint64_t **)(result + 1);
                  if (((unint64_t)(result + 1) & 7) != 0) {
                    goto LABEL_24;
                  }
                  uint64_t result = *v4;
                  if (*v4)
                  {
                    if ((result & 7) != 0) {
                      goto LABEL_24;
                    }
                    (*(void (**)(uint64_t *))(*result + 8))(result);
                  }
                }
                sub_10000B05C(&v5);
              }
              pthread_mutex_destroy((pthread_mutex_t *)(v1 + 296));
              uint64_t result = (uint64_t *)(v1 + 272);
              if (((v1 + 272) & 7) == 0)
              {
                sub_10001C7D0((uint64_t)result);
                uint64_t result = (uint64_t *)sub_10000C538(v1 + 248);
                if ((v3 & 7) == 0)
                {
                  uint64_t result = (uint64_t *)sub_1000DAEC8(v1 + 112);
                  if ((v2 & 7) == 0) {
                    return (uint64_t *)sub_1000DA880(v1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_24:
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000DB984(uint64_t *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DB7E0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000DB998(uint64_t a1)
{
  uint64_t result = (uint64_t *)(a1 - 96);
  if ((result & 7) == 0) {
    return sub_1000DB7E0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000DB9AC(uint64_t *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DB7E0(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000DB9F4(uint64_t a1)
{
  return sub_1000DB9AC((uint64_t *)(a1 - 96));
}

void sub_1000DB9FC(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_28;
  }
  long long v14 = (pthread_mutex_t *)(a1 + 296);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 296));
  uint64_t v15 = sub_1000DBCBC(a1, a2);
  if (!v15 || (uint64_t v16 = v15, v15 == a1 + 112))
  {
    sub_1000DBD58(a1);
    operator new();
  }
  if ((v15 & 7) != 0 || ((v15 + 8) & 7) != 0) {
    goto LABEL_28;
  }
  if (*(_DWORD *)(v15 + 8) != a2)
  {
    sub_1000EE4F4(0, 4, "%s:%d (%hhx) connection ID mismatch (0x%08x != 0x%08x)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryMgr.cpp", 311, a6, *(_DWORD *)(v15 + 8), a2);
LABEL_27:
    pthread_mutex_unlock(v14);
    return;
  }
  if (a3 != (char)a3) {
    goto LABEL_29;
  }
  long long v17 = (int *)(v15 + 12);
  if (((v15 + 12) & 3) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  int v18 = *v17;
  if (v18 == (char)v18)
  {
    if (v18 != a3)
    {
      sub_1000EE4F4(0, 4, "(0x%08x) accessory ID changed (%d != %d)\n", a2, *v17, a3);
      *long long v17 = a3;
    }
    long long v19 = (int *)(v16 + 16);
    if (((v16 + 16) & 7) == 0)
    {
      if (*v19 != a4)
      {
        sub_1000EE4F4(0, 4, "(0x%08x) device ID changed (%d != %d)\n", a2, *v19, a4);
        int *v19 = a4;
      }
      long long v20 = (int *)(v16 + 20);
      if (((v16 + 20) & 3) == 0)
      {
        if (*v20 != a5)
        {
          sub_1000EE4F4(0, 4, "(0x%08x) device lingos changed (0x%08x != 0x%08x)\n", a2, *v20, a5);
          *long long v20 = a5;
        }
        long long v21 = (uint64_t *)(v16 + 32);
        if (((v16 + 32) & 7) == 0)
        {
          if (*v21 != a6)
          {
            sub_1000EE4F4(0, 4, "(0x%08x) port changed (%hhx != %hhx)\n", a2, *v21, a6);
            *long long v21 = a6;
          }
          long long v22 = (uint64_t *)(v16 + 40);
          if (((v16 + 40) & 7) == 0)
          {
            if (*v22 != a7)
            {
              sub_1000EE4F4(0, 4, "(0x%08x) connectionHandle changed (%hhx != %hhx)\n", a2, *v22, a7);
              *long long v22 = a7;
            }
            goto LABEL_27;
          }
        }
      }
    }
    goto LABEL_28;
  }
LABEL_29:
  __break(0x550Au);
  __break(0x5500u);
}

uint64_t sub_1000DBCBC(uint64_t result, int a2)
{
  int v4 = a2;
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v3 = 0xAAAAAAAAAAAAAAAALL, result += 248, ((v2 + 248) & 7) != 0)
    || (result = sub_10000B278(result, &v4), uint64_t v3 = result, ((v2 + 256) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }
  if (v2 + 256 != result)
  {
    uint64_t result = (uint64_t)sub_100004C28(&v3);
    if (result && (result & 7) == 0 && ((result + 8) & 7) == 0) {
      return *(void *)(result + 8);
    }
    goto LABEL_12;
  }
  return 0;
}

void sub_1000DBD58(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (uint64_t v1 = a1 + 272, ((a1 + 272) & 7) != 0)
    || (uint64_t v2 = (void *)(a1 + 288), ((a1 + 288) & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
  }
  else if (*v2 >= 0x10uLL)
  {
    do
    {
      uint64_t v3 = *(void *)sub_1000996D8(v1);
      sub_1000DC0B4(v1);
      if (v3)
      {
        if ((v3 & 7) != 0) {
          goto LABEL_11;
        }
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    while (*v2 > 0xFuLL);
  }
}

void sub_1000DBE04(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  int v4 = (uint64_t *)sub_10000B494(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    unsigned int v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000DDB24((void *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_10000BB70(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t sub_1000DBEE8(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 296));
    uint64_t v4 = sub_1000DBCBC(v2, a2);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 296));
    return v4;
  }
  return result;
}

uint64_t sub_1000DBF4C(uint64_t result, int a2)
{
  int v10 = a2;
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)(result + 296));
      uint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = v2 + 248;
      if (((v2 + 248) & 7) == 0)
      {
        uint64_t result = sub_10000B278(result, &v10);
        uint64_t v9 = result;
        uint64_t v3 = v2 + 256;
        if (((v2 + 256) & 7) == 0)
        {
          uint64_t v4 = result;
          if (v3 == result) {
            goto LABEL_21;
          }
          uint64_t result = (uint64_t)sub_100004C28(&v9);
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t v5 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) == 0)
              {
                uint64_t result = *v5;
                if (*v5)
                {
                  if ((result & 7) == 0)
                  {
                    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176))(result);
                    if (((v2 + 272) & 7) == 0)
                    {
                      uint64_t result = (uint64_t)sub_100004C28(&v9);
                      if (result)
                      {
                        if ((result & 7) == 0 && ((result + 8) & 7) == 0)
                        {
                          sub_1000262E8(v2 + 272, (void *)(result + 8));
                          uint64_t result = (uint64_t)sub_100004C28(&v9);
                          if (result)
                          {
                            if ((result & 7) == 0 && ((result + 8) & 7) == 0)
                            {
                              *(void *)(result + 8) = v2 + 112;
                              int v6 = *(_DWORD *)(v2 + 240);
                              BOOL v7 = v6 != 0;
                              int v8 = v6 - 1;
                              if (!v7) {
                                goto LABEL_23;
                              }
                              *(_DWORD *)(v2 + 240) = v8;
LABEL_21:
                              pthread_mutex_unlock((pthread_mutex_t *)(v2 + 296));
                              return v3 != v4;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_23:
  __break(0x5515u);
  return result;
}

void sub_1000DC0B4(uint64_t a1)
{
  if (!a1) {
    goto LABEL_29;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v1 = (void **)(a1 + 8);
  if (((a1 + 8) & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v2 = *v1;
  uint64_t v3 = (unint64_t)*v1 & 7;
  BOOL v4 = v2 && v3 == 0;
  BOOL v5 = v4 && ((unint64_t)(v2 + 1) & 7) == 0;
  if (v5
    && ((uint64_t v6 = *v2) != 0 ? (v7 = (*v2 & 7) == 0) : (v7 = 0),
        v7 ? (BOOL v8 = ((v6 + 8) & 7) == 0) : (BOOL v8 = 0),
        v8
     && ((*(void *)(v6 + 8) = v2[1], (v9 = (void *)v2[1]) != 0) ? (BOOL v10 = (v2[1] & 7) == 0) : (BOOL v10 = 0),
         v10 && (void *v9 = v6, ((a1 + 16) & 7) == 0))))
  {
    uint64_t v11 = *(void *)(a1 + 16);
    BOOL v12 = v11 != 0;
    uint64_t v13 = v11 - 1;
    if (v12)
    {
      *(void *)(a1 + 16) = v13;
      sub_10001C8C0(a1, v2);
      return;
    }
  }
  else
  {
LABEL_29:
    __break(0x5516u);
  }
  __break(0x5515u);
}

uint64_t sub_1000DC154(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 240);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DC16C(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_6;
  }
  uint64_t result = sub_1000DBEE8(result, a2);
  if (!result) {
    uint64_t result = v2 + 112;
  }
  if ((result & 7) != 0) {
LABEL_6:
  }
    __break(0x5516u);
  return result;
}

uint64_t *sub_1000DC1B4(uint64_t *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 37));
      uint64_t v6 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)v2 - 8) & 7) == 0)
      {
        uint64_t v6 = (uint64_t *)v2[31];
        if (((unint64_t)(v2 + 32) & 7) == 0)
        {
          while (1)
          {
            if (v6 == v2 + 32)
            {
              pthread_mutex_unlock((pthread_mutex_t *)(v2 + 37));
              uint64_t result = v2 + 14;
              goto LABEL_23;
            }
            uint64_t result = sub_100004C28((uint64_t *)&v6);
            if (!result || (result & 7) != 0 || ((unint64_t)(result + 1) & 7) != 0) {
              goto LABEL_24;
            }
            if (result[1])
            {
              uint64_t result = sub_100004C28((uint64_t *)&v6);
              if (!result) {
                goto LABEL_24;
              }
              if ((result & 7) != 0) {
                goto LABEL_24;
              }
              if (((unint64_t)(result + 1) & 7) != 0) {
                goto LABEL_24;
              }
              uint64_t v4 = result[1];
              if (!v4) {
                goto LABEL_24;
              }
              if ((v4 & 7) != 0) {
                goto LABEL_24;
              }
              BOOL v5 = (void *)(v4 + 32);
              if ((v5 & 7) != 0) {
                goto LABEL_24;
              }
              if (*v5 == a2) {
                break;
              }
            }
            sub_10000B05C((uint64_t *)&v6);
          }
          pthread_mutex_unlock((pthread_mutex_t *)(v2 + 37));
          uint64_t result = sub_100004C28((uint64_t *)&v6);
          if (!result || (result & 7) != 0 || ((unint64_t)(result + 1) & 7) != 0) {
            goto LABEL_24;
          }
          uint64_t result = (uint64_t *)result[1];
LABEL_23:
          if ((result & 7) == 0) {
            return result;
          }
        }
      }
    }
  }
LABEL_24:
  __break(0x5516u);
  return result;
}

uint64_t *sub_1000DC2F8@<X0>(uint64_t *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (result)
  {
    uint64_t v4 = result;
    if ((result & 7) == 0)
    {
      memset(a4, 170, 24);
      sub_1000142B4(a4);
      BOOL v8 = (pthread_mutex_t *)(v4 + 37);
      uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v4 + 37));
      long long v17 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)v4 - 8) & 7) == 0)
      {
        long long v17 = (uint64_t *)v4[31];
        uint64_t v9 = v4 + 32;
        if (((unint64_t)(v4 + 32) & 7) == 0)
        {
          if (a2 >= 0) {
            int v10 = 1 << a2;
          }
          else {
            int v10 = 0;
          }
          if (v17 == v9) {
            return (uint64_t *)pthread_mutex_unlock(v8);
          }
          uint64_t v11 = v4 + 14;
          unsigned int v12 = a2 + 32;
          while (1)
          {
            uint64_t result = sub_100004C28((uint64_t *)&v17);
            if (!result || (result & 7) != 0 || ((unint64_t)(result + 1) & 7) != 0) {
              break;
            }
            uint64_t v13 = result[1];
            if (v13) {
              BOOL v14 = v13 == (void)v11;
            }
            else {
              BOOL v14 = 1;
            }
            if (!v14)
            {
              if ((v13 & 7) != 0 || ((v13 + 16) & 7) != 0) {
                break;
              }
              if (*(_DWORD *)(v13 + 16) != -1)
              {
                if (((v13 + 20) & 3) != 0) {
                  break;
                }
                if (v12 > 0x3F) {
                  goto LABEL_33;
                }
                if ((*(_DWORD *)(v13 + 20) & v10) != 0)
                {
                  if (!a3) {
                    goto LABEL_29;
                  }
                  if (((v13 + 32) & 7) != 0) {
                    break;
                  }
                  if (*(void *)(v13 + 32) == a3)
                  {
LABEL_29:
                    uint64_t v16 = result[1];
                    sub_1000262E8((uint64_t)a4, &v16);
                  }
                }
              }
            }
            sub_10000B05C((uint64_t *)&v17);
            if (v17 == v9) {
              return (uint64_t *)pthread_mutex_unlock(v8);
            }
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_33:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DC47C(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000DBEE8(result, a2);
      uint64_t v4 = result;
      if (!result) {
        return v4 != 0;
      }
      if ((result & 7) == 0 && ((result + 60) & 3) == 0)
      {
        *(unsigned char *)(result + 60) = 1;
        (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32))(v2, 65546, a2, 0);
        return v4 != 0;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DC524(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000DBEE8(result, a2);
      uint64_t v4 = result;
      if (!result) {
        return v4 != 0;
      }
      if ((result & 7) == 0 && ((result + 60) & 3) == 0)
      {
        *(unsigned char *)(result + 60) = 0;
        (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32))(v2, 65547, a2, 0);
        return v4 != 0;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DC5C8(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000DBEE8(result, a2);
  if (!result) {
    return result;
  }
  if ((result & 7) != 0 || (uint64_t v4 = (unsigned char *)(result + 60), ((result + 60) & 3) != 0))
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  if (*v4 >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  if (!*v4) {
    return 0;
  }
  *uint64_t v4 = 0;
  (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32))(v2, 65548, a2, 0);
  return 1;
}

BOOL sub_1000DC678(BOOL result, int a2, char a3)
{
  if (!result || result & 7)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v4 = sub_1000DC6C0(a2);
    return sub_100085650(v4, a3) == 0;
  }
  return result;
}

uint64_t sub_1000DC6C0(int a1)
{
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000A1750(result, a1);
  }
  return result;
}

uint64_t sub_1000DC708(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = sub_1000DC6C0(a2);
    return sub_100093FCC(v2);
  }
  return result;
}

uint64_t sub_1000DC744(uint64_t result, int a2, unsigned int a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000DBEE8(result, a2);
  uint64_t v6 = result;
  if (!result) {
    return v6 != 0;
  }
  if ((result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }
  else if (a3 < 0x20)
  {
    sub_1000DB458(result, a3, a4);
    return v6 != 0;
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DC7B8(uint64_t result, int a2, unsigned int a3, unsigned char *a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t result = sub_1000DBEE8(result, a2);
  if (!result)
  {
    *a4 = 0;
    return result;
  }
  *a4 = 1;
  if ((result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  if (a3 >= 0x20)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }
  return sub_1000DB590(result, a3);
}

void sub_1000DC834(uint64_t a1, int a2, int a3, unsigned int *a4, int a5)
{
  if (!a1) {
    goto LABEL_166;
  }
  uint64_t v5 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_166;
  }
  if ((a2 + 32) >= 0x40) {
    goto LABEL_167;
  }
  if (a2) {
    return;
  }
  uint64_t v6 = (uint64_t)a4;
  if (a3 == 5)
  {
    if (a5 != 44) {
      return;
    }
    *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)&v59[28] = v13;
    *(_OWORD *)unsigned int v59 = v13;
    *(_OWORD *)&v59[16] = v13;
    if (a4 && (a4 & 3) == 0 && ((unint64_t)(a4 + 1) & 3) == 0)
    {
      unsigned int v14 = a4[1];
      if (v14 <= 7)
      {
        *(_DWORD *)&v59[4] = a4[1];
        switch(v14)
        {
          case 0u:
            if (((unint64_t)(a4 + 2) & 3) != 0) {
              goto LABEL_166;
            }
            *(void *)&v59[8] = *((void *)a4 + 1);
            goto LABEL_46;
          case 1u:
            if (((unint64_t)(a4 + 2) & 3) != 0) {
              goto LABEL_166;
            }
            long long v21 = *(_OWORD *)(a4 + 6);
            *(_OWORD *)&v59[8] = *(_OWORD *)(a4 + 2);
            *(_OWORD *)&v59[24] = v21;
            *(_DWORD *)&v59[40] = a4[10];
            goto LABEL_46;
          case 2u:
            if (((unint64_t)(a4 + 2) & 3) != 0) {
              goto LABEL_166;
            }
            *(void *)&v59[8] = *((void *)a4 + 1);
LABEL_43:
            if (((unint64_t)(a4 + 2) & 3) != 0) {
              goto LABEL_166;
            }
            if (a4[2] > 1) {
              goto LABEL_167;
            }
            *(_DWORD *)&v59[8] = a4[2];
LABEL_46:
            uint64_t v12 = *a4;
            int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 32);
            uint64_t v11 = 65552;
            break;
          case 3u:
            goto LABEL_43;
          default:
            goto LABEL_46;
        }
        goto LABEL_47;
      }
LABEL_167:
      __break(0x550Au);
    }
    goto LABEL_166;
  }
  if (a3 || a5 != 48) {
    return;
  }
  if (!a4 || (a4 & 7) != 0 || ((unint64_t)(a4 + 1) & 3) != 0) {
    goto LABEL_166;
  }
  unsigned int v7 = a4[1];
  if (v7 >= 0x16 && v7 != 100) {
    return;
  }
  unsigned int v8 = *a4;
  if (*a4 > 0x1F) {
    goto LABEL_167;
  }
  if (v8 == 20)
  {
    if (((unint64_t)(a4 + 2) & 7) == 0 && ((unint64_t)(a4 + 8) & 7) == 0)
    {
      uint64_t v9 = *((void *)a4 + 1);
      *(void *)unsigned int v59 = *((void *)a4 + 4);
      *(void *)&v59[8] = v9;
      int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 32);
      uint64_t v11 = 65551;
LABEL_19:
      a1 = v5;
      uint64_t v12 = 0;
LABEL_47:
      v10(a1, v11, v12, v59);
      return;
    }
    goto LABEL_166;
  }
  uint64_t v15 = (uint64_t)(a4 + 2);
  if (((unint64_t)(a4 + 2) & 7) != 0 || (uint64_t v16 = (uint64_t *)(a4 + 6), ((unint64_t)(a4 + 6) & 7) != 0))
  {
LABEL_166:
    __break(0x5516u);
    goto LABEL_167;
  }
  uint64_t v17 = *v16;
  if (!*v16)
  {
    uint64_t v18 = sub_1000D289C();
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_166;
    }
    uint64_t v19 = sub_1000A15B4(v18, *(void *)(v6 + 8), 0);
    unsigned int v8 = *(_DWORD *)v6;
    if (*(_DWORD *)v6 > 0x1Fu) {
      goto LABEL_167;
    }
    uint64_t v17 = v19;
  }
  if (v8 - 21 < 4)
  {
    memset(v59, 170, 16);
    if (((v6 + 40) & 7) == 0)
    {
      uint64_t v20 = *(void *)v15;
      *(void *)unsigned int v59 = *(void *)(v6 + 40);
      *(void *)&v59[8] = v20;
      switch(v8)
      {
        case 0x15u:
          int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v5 + 32);
          uint64_t v11 = 65553;
          goto LABEL_19;
        case 0x16u:
          int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v5 + 32);
          uint64_t v11 = 65554;
          goto LABEL_19;
        case 0x17u:
          int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v5 + 32);
          uint64_t v11 = 65557;
          goto LABEL_19;
        case 0x18u:
          int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v5 + 32);
          uint64_t v11 = 65558;
          goto LABEL_19;
        default:
          return;
      }
      return;
    }
    goto LABEL_166;
  }
  if (v8 == 19)
  {
    if (((v6 + 32) & 7) == 0)
    {
      uint64_t v22 = *(void *)v15;
      *(void *)unsigned int v59 = *(void *)(v6 + 32);
      *(void *)&v59[8] = v22;
      (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v5 + 32))(v5, 65549, v17, v59);
      return;
    }
    goto LABEL_166;
  }
  if (!v17) {
    goto LABEL_154;
  }
  if ((v17 & 7) != 0) {
    goto LABEL_166;
  }
  int v23 = sub_1000632D4(v17);
  if (((v6 + 16) & 7) != 0) {
    goto LABEL_166;
  }
  long long v24 = (int *)(v6 + 20);
  if (((v6 + 20) & 3) != 0) {
    goto LABEL_166;
  }
  sub_1000DB9FC(v5, v23, *(_DWORD *)(v6 + 4), *(_DWORD *)(v6 + 16), *v24, *(void *)v15, *v16);
  if (v25)
  {
    unsigned int v26 = *(_DWORD *)v6;
    if (*(_DWORD *)v6 > 0x1Fu) {
      goto LABEL_167;
    }
    uint64_t v15 = v25;
    switch(v26)
    {
      case 0u:
        return;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        if ((v25 & 7) != 0) {
          goto LABEL_166;
        }
        sub_1000DB290(v25);
        if (((v15 + 48) & 7) != 0) {
          goto LABEL_166;
        }
        if (*(unsigned __int8 *)(v15 + 48) > 1u) {
          goto LABEL_167;
        }
        unsigned int v27 = *(_DWORD *)v6;
        if (*(unsigned char *)(v15 + 48))
        {
          if (v27 > 0x1F) {
            goto LABEL_167;
          }
          if (((v15 + 56) & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v28 = *(_DWORD *)(v15 + 56);
          if (v28 > 0x1F) {
            goto LABEL_167;
          }
          if (v27 == v28)
          {
            if (((v15 + 52) & 3) != 0) {
              goto LABEL_166;
            }
            if (*v24 == *(_DWORD *)(v15 + 52)) {
              return;
            }
          }
        }
        else if (v27 > 0x1F)
        {
          goto LABEL_167;
        }
        if ((((_BYTE)v15 + 64) & 7) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v15 + 64) = v27;
        if ((((_BYTE)v15 + 52) & 3) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v15 + 52) = *v24;
        if ((((_BYTE)v15 + 56) & 7) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v15 + 56) = v27;
        uint64_t v29 = v5;
        uint64_t v30 = v15;
        uint64_t v31 = 65537;
LABEL_107:
        sub_1000DD4DC(v29, v30, v31);
        return;
      case 8u:
        if ((v25 & 7) != 0) {
          goto LABEL_166;
        }
        if ((((_BYTE)v25 + 20) & 3) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v25 + 20) = 0;
        if ((((_BYTE)v25 + 48) & 7) != 0) {
          goto LABEL_166;
        }
        *(unsigned char *)(v25 + 48) = 1;
        if ((((_BYTE)v25 + 68) & 3) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v25 + 68) = 8;
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v25 + 96))(v25)) {
          return;
        }
        if (((v15 + 8) & 7) != 0) {
          goto LABEL_166;
        }
        uint64_t v32 = *(unsigned int *)(v15 + 8);
        BOOL v33 = *(void (**)(uint64_t, uint64_t))(*(void *)v5 + 136);
        v33(v5, v32);
        return;
      case 9u:
        if ((v25 & 7) != 0) {
          goto LABEL_166;
        }
        if ((((_BYTE)v25 + 48) & 7) != 0) {
          goto LABEL_166;
        }
        *(unsigned char *)(v25 + 48) = 0;
        if ((((_BYTE)v25 + 52) & 3) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v25 + 52) = 0;
        if ((((_BYTE)v25 + 56) & 7) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v25 + 56) = 25;
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v25 + 96))(v25)) {
          goto LABEL_98;
        }
        if (((v15 + 8) & 7) != 0) {
          goto LABEL_166;
        }
        (*(void (**)(uint64_t, void))(*(void *)v5 + 136))(v5, *(unsigned int *)(v15 + 8));
LABEL_98:
        if (*(_DWORD *)v6 > 0x1Fu) {
          goto LABEL_167;
        }
        if ((((_BYTE)v15 + 68) & 3) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v15 + 68) = *(_DWORD *)v6;
        sub_1000DD4DC(v5, v15, 65538);
        uint64_t v34 = *v16;
        if (*v16)
        {
          if ((v34 & 7) != 0) {
            goto LABEL_166;
          }
          int v35 = sub_1000632D4(v34);
        }
        else
        {
          int v35 = 0;
        }
        sub_1000DBF4C(v5, v35);
        return;
      case 0xEu:
        uint64_t v36 = sub_10008778C(v17);
        if ((v15 & 7) != 0 || (((_BYTE)v15 + 24) & 7) != 0) {
          goto LABEL_166;
        }
        *(void *)(v15 + 24) = v36;
        uint64_t v31 = 65550;
LABEL_106:
        uint64_t v29 = v5;
        uint64_t v30 = v15;
        goto LABEL_107;
      case 0x12u:
        sub_1000EE4F4(0, 4, "%s:%d Wrong message type!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryMgr.cpp", 712);
        return;
      default:
        if ((v25 & 7) != 0 || ((v25 + 68) & 3) != 0) {
          goto LABEL_166;
        }
        break;
    }
    *(_DWORD *)(v25 + 68) = v26;
    switch(v26)
    {
      case 7u:
        if ((((_BYTE)v25 + 64) & 7) != 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(v25 + 64) = 1;
        uint64_t v31 = 65542;
        goto LABEL_106;
      case 0xBu:
        uint64_t v37 = sub_1000D289C();
        if (!v37) {
          goto LABEL_166;
        }
        if ((v37 & 7) != 0) {
          goto LABEL_166;
        }
        uint64_t v6 = sub_1000A1140(v37, v17);
        uint64_t v38 = sub_1000D289C();
        if (!v38 || (v38 & 7) != 0) {
          goto LABEL_166;
        }
        int v39 = sub_10006022C(v38, v6);
        if (v39 < 0) {
          goto LABEL_167;
        }
        if (!v6 || v39) {
          goto LABEL_159;
        }
        CFIndex length = 0;
        *(void *)unsigned int v59 = 0;
        uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 104))(v5, v6);
        if (!v40)
        {
          uint64_t v44 = 0;
          uint64_t v17 = 0;
          goto LABEL_156;
        }
        if ((v40 & 7) != 0) {
          goto LABEL_166;
        }
        uint64_t v41 = (const UInt8 *)(*(uint64_t (**)(uint64_t, CFIndex *))(*(void *)v40 + 144))(v40, &length);
        if (!v41 || !length)
        {
          uint64_t v44 = 0;
          uint64_t v17 = 0;
          CFIndex length = 0;
          goto LABEL_156;
        }
        uint64_t v17 = (uint64_t)v41;
        CFDataRef v42 = CFDataCreate(0, v41, length);
        if (v42)
        {
          CFDataRef v43 = v42;
          uint64_t v44 = (void *)AllocCapsFromAuthCert();
          CFRelease(v43);
LABEL_156:
          if ((v6 & 7) != 0) {
            goto LABEL_166;
          }
          (*(void (**)(uint64_t, void *, uint64_t, CFIndex))(*(void *)v6 + 72))(v6, v44, v17, length);
          if (v44) {
            free(v44);
          }
LABEL_159:
          uint64_t v57 = 65539;
LABEL_165:
          sub_1000DD4DC(v5, v15, v57);
          return;
        }
        break;
      case 0xCu:
        uint64_t v45 = sub_1000D289C();
        if (!v45) {
          goto LABEL_166;
        }
        if ((v45 & 7) != 0) {
          goto LABEL_166;
        }
        uint64_t v46 = sub_1000A1140(v45, v17);
        uint64_t v47 = sub_1000D289C();
        if (!v47 || (v47 & 7) != 0) {
          goto LABEL_166;
        }
        int v48 = sub_10006022C(v47, v46);
        if (v48 < 0) {
          goto LABEL_167;
        }
        if (!v46 || !v48) {
          goto LABEL_164;
        }
        CFIndex length = 0;
        *(void *)unsigned int v59 = 0;
        uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 104))(v5, v46);
        if (v49)
        {
          if ((v49 & 7) != 0) {
            goto LABEL_166;
          }
          char v50 = (const UInt8 *)(*(uint64_t (**)(uint64_t, CFIndex *))(*(void *)v49 + 144))(v49, &length);
          if (v50 && length)
          {
            int v51 = v50;
            CFDataRef v52 = CFDataCreate(0, v50, length);
            if (v52)
            {
              CFDataRef v53 = v52;
              int v54 = (void *)AllocCapsFromAuthCert();
              CFRelease(v53);
            }
            else
            {
              int v54 = 0;
            }
          }
          else
          {
            int v54 = 0;
            int v51 = 0;
            CFIndex length = 0;
          }
        }
        else
        {
          int v54 = 0;
          int v51 = 0;
        }
        if ((v46 & 7) != 0) {
          goto LABEL_166;
        }
        (*(void (**)(uint64_t, void *, const UInt8 *, CFIndex))(*(void *)v46 + 72))(v46, v54, v51, length);
        if (v54) {
          free(v54);
        }
LABEL_164:
        uint64_t v57 = 65540;
        goto LABEL_165;
      case 0xDu:
        uint64_t v55 = sub_1000D289C();
        if (!v55 || (v55 & 7) != 0) {
          goto LABEL_166;
        }
        uint64_t v56 = sub_1000A1140(v55, v17);
        if (!v56) {
          goto LABEL_146;
        }
        if ((v56 & 7) != 0) {
          goto LABEL_166;
        }
        (*(void (**)(uint64_t))(*(void *)v56 + 80))(v56);
LABEL_146:
        uint64_t v31 = 65541;
        goto LABEL_106;
      case 0x11u:
        (*(void (**)(uint64_t))(*(void *)v25 + 136))(v25);
        sub_1000DD544(v5, v15, 65543);
        return;
      default:
        return;
    }
  }
  else
  {
LABEL_154:
    __break(0x5518u);
  }
  uint64_t v44 = 0;
  goto LABEL_156;
}

uint64_t sub_1000DD4C4(uint64_t result)
{
  if (result)
  {
    if ((result & 7) != 0) {
      __break(0x5516u);
    }
    else {
      return sub_1000632D4(result);
    }
  }
  return result;
}

uint64_t sub_1000DD4DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 8) & 7) == 0 && ((a2 + 20) & 3) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32))(result, a3, *(unsigned int *)(a2 + 8), *(unsigned int *)(a2 + 20));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DD544(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 8) & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)result + 32))(result, a3, *(unsigned int *)(a2 + 8));
  }
  __break(0x5516u);
  return result;
}

void sub_1000DD59C(uint64_t a1, int a2, int a3, unsigned int *a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000DC834(a1 - 96, a2, a3, a4, a5);
  }
}

uint64_t sub_1000DD5B4(int a1, unsigned int a2, uint64_t *a3)
{
  uint64_t result = sub_1000DC6C0(a1);
  if (a2 >= 0x10)
  {
    __break(0x550Au);
  }
  else
  {
    return sub_100094C40(result, a2, a3);
  }
  return result;
}

uint64_t sub_1000DD600(uint64_t result, unsigned int a2, char a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    v4[0] = 0xAAAAAAAAAAAAAAAALL;
    v4[1] = a4;
    LOBYTE(v4[0]) = a3;
    (*(void (**)(uint64_t, uint64_t, void, void *))(*(void *)result + 32))(result, 65555, a2, v4);
    return 1;
  }
  return result;
}

uint64_t sub_1000DD670(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_100092E24(*(void *)(result + 32));
    if (result < 8) {
      return result == 5;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DD6B4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_100092E24(*(void *)(result + 32));
    if (result < 8) {
      return (result & 0xFFFFFFFE) == 4;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DD6FC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100092F60();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DD714(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100092E24(*(void *)(result + 32));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DD72C(uint64_t result, void *a2)
{
  if (result && (result & 7) == 0) {
    return sub_100092F68(*(void *)(result + 40), a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000DD744(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000DD758(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

char *sub_1000DD76C@<X0>(char *result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (uint64_t v4 = result + 8, ((unint64_t)(result + 8) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = (char *)operator new(0x50uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (result[32] = *a2, *(unsigned char *)(a3 + 16) = 1, ((unint64_t)(result + 40) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *((void *)result + 9) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

uint64_t sub_1000DD808(uint64_t result, uint64_t *a2, unsigned int *a3)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = a2;
      uint64_t result = sub_10000B24C(result);
      uint64_t v7 = v5 + 8;
      if (((v5 + 8) & 7) == 0)
      {
        if (!result)
        {
          uint64_t result = v5 + 8;
          goto LABEL_24;
        }
        if ((((_BYTE)v5 + 16) & 7) == 0 && (result & 7) == 0)
        {
          unsigned int v8 = *a3;
          while (((result + 32) & 7) == 0)
          {
            if (v8 >= 0x20 || (unsigned int v9 = *(_DWORD *)(result + 32), v9 > 0x1F))
            {
              __break(0x550Au);
              return result;
            }
            if (v8 >= v9)
            {
              if (v9 >= v8)
              {
                *uint64_t v4 = result;
                if ((v7 & 7) == 0) {
                  return v7;
                }
                break;
              }
              uint64_t v3 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v10 = *v3;
              if (!*v3) {
                goto LABEL_23;
              }
              result += 8;
            }
            else
            {
              uint64_t v10 = *(void *)result;
              if (!*(void *)result)
              {
                uint64_t v7 = result;
                goto LABEL_24;
              }
            }
            if ((v10 & 7) != 0) {
              break;
            }
            uint64_t v7 = result;
            uint64_t result = v10;
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_23:
  uint64_t v7 = result;
  uint64_t result = (uint64_t)v3;
LABEL_24:
  *uint64_t v4 = v7;
  return result;
}

_DWORD *sub_1000DD91C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (uint64_t v4 = (char *)(result + 2), ((unint64_t)(result + 2) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 8) & 7) != 0
    || (((_BYTE)result + 32) & 3) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  if (*a2 < 0x20u)
  {
    result[8] = *a2;
    *(unsigned char *)(a3 + 16) = 1;
    if (((unint64_t)(result + 10) & 7) == 0)
    {
      *((void *)result + 5) = 0;
      *(unsigned char *)(a3 + 17) = 1;
      return result;
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DD9C4(uint64_t result, unsigned int *a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_10000B24C(result);
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000DDA84(v2, a2, result, v2 + 8);
  uint64_t v5 = result;
  if (v4 == result) {
    return v4;
  }
  if ((((_BYTE)v2 + 16) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (uint64_t)sub_10000B10C(&v5);
    if (*a2 < 0x20 && *(_DWORD *)result <= 0x1Fu)
    {
      if (*a2 >= *(_DWORD *)result) {
        return v5;
      }
      return v4;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DDA84(uint64_t result, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    return a3;
  }
  if (a3)
  {
    if ((((_BYTE)result + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      unsigned int v4 = *a2;
      while (((a3 + 32) & 7) == 0)
      {
        unsigned int v5 = *(_DWORD *)(a3 + 32);
        if (v5 > 0x1F || v4 >= 0x20)
        {
          __break(0x550Au);
          return result;
        }
        if (v5 >= v4)
        {
          uint64_t v6 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }
        else
        {
          if (((a3 + 8) & 7) != 0) {
            goto LABEL_17;
          }
          uint64_t v6 = *(void *)(a3 + 8);
          if (!v6) {
            return a4;
          }
          a3 = a4;
        }
        if ((v6 & 7) != 0) {
          goto LABEL_17;
        }
        a4 = a3;
        a3 = v6;
      }
    }
    goto LABEL_17;
  }
  return a4;
}

void *sub_1000DDB24@<X0>(void *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (((_BYTE)result + 32) & 3) != 0
    || (*((_DWORD *)result + 8) = *a2, *(unsigned char *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[5] = 0;
    *(unsigned char *)(a3 + 17) = 1;
  }
  return result;
}

uint64_t sub_1000DDBC0()
{
  if (qword_10013C730 != -1) {
    dispatch_once(&qword_10013C730, &stru_100128890);
  }
  return qword_10013C728;
}

void sub_1000DDC04(id a1)
{
}

uint64_t sub_1000DDC50(uint64_t result)
{
  if (!result
    || (uint64_t v1 = (void *)result, (result & 7) != 0)
    || (uint64_t result = sub_1000207D0(result), *v1 = off_100128A08, ((unint64_t)(v1 + 12) & 7) != 0)
    || (*v1 = off_1001288C0, v1[12] = off_100128988, v1[13] = 0, (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, (uint64_t)(v1 + 12), 0xAu, 0);
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_1000DDD0C(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_1001288C0,
        char v2 = result + 96,
        *(void *)(result + 96) = off_100128988,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (uint64_t result = (uint64_t)sub_1000684B4((uint64_t *)result, v1 + 96, 0xAu), (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000DDDB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DDD0C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDDC4(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000DDD0C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDDD8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DDD0C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDE20(uint64_t a1)
{
  return sub_1000DDDD8(a1 - 96);
}

uint64_t sub_1000DDE28(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100072DD8(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDE40(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100072F5C(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDE58(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100073040(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDE70(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100072A7C(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDE88(uint64_t result)
{
  if (result && (result & 7) == 0) {
    sub_100073204();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDEA0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_100073124(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDEB8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10007280C(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDED0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000733A4(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DDEE8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return nullsub_9(a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000DDF00(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000738C0(a2, a3);
  }
}

uint64_t sub_1000DDF1C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000737C8(a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000DDF34(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_20;
  }
  if ((a2 + 32) >= 0x40) {
    goto LABEL_21;
  }
  if (a2 != 10 || a5 != 24) {
    sub_1000EE4F4(0, 4, "%s:%d wrong lingo (%d) or payload size (%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TDigitalAudio.cpp", 125, a2, a5);
  }
  if (!a4 || (a4 & 7) != 0) {
    goto LABEL_20;
  }
  int v7 = *(_DWORD *)a4;
  if (*(_DWORD *)a4 > 3u)
  {
LABEL_21:
    __break(0x550Au);
    return;
  }
  if (v7 == 2)
  {
    if (((a4 + 16) & 7) == 0)
    {
      uint64_t v8 = *(void *)(a4 + 16);
      unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 32);
      uint64_t v11 = 786434;
      uint64_t v10 = a1;
      goto LABEL_16;
    }
    goto LABEL_20;
  }
  if (v7 != 1)
  {
    sub_1000EE4F4(0, 4, "%s:%d unknown digital audio lingo message %d", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TDigitalAudio.cpp", 142, *(_DWORD *)a4);
    return;
  }
  if (((a4 + 16) & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 32);
  uint64_t v10 = a1;
  uint64_t v11 = 786433;
LABEL_16:
  v9(v10, v11, v8, 0);
}

void sub_1000DE0A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000DDF34(a1 - 96, a2, 0, a4, a5);
  }
}

void sub_1000DE0C0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000DE0D4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000DE0E8()
{
  if (qword_10013C740 != -1) {
    dispatch_once(&qword_10013C740, &stru_100128AD8);
  }
  return qword_10013C738;
}

void sub_1000DE12C(id a1)
{
}

std::string *sub_1000DE178(std::string *result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0
    || (result->__r_.__value_.__r.__words[0] = (std::string::size_type)off_100128B08,
        uint64_t result = (std::string *)((char *)result + 16),
        ((unint64_t)&v1->__r_.__value_.__r.__words[2] & 7) != 0)
    || (result->__r_.__value_.__r.__words[0] = 0,
        v1[1].__r_.__value_.__r.__words[0] = 0,
        v1[1].__r_.__value_.__l.__size_ = 0,
        ((unint64_t)&v1[2].__r_.__value_.__l.__size_ & 7) != 0)
    || (v1[2].__r_.__value_.__l.__size_ = 0, v1[2].__r_.__value_.__r.__words[2] = 0, (((_BYTE)v1 + 72) & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    v1[3].__r_.__value_.__r.__words[0] = 0;
    LOWORD(v1->__r_.__value_.__r.__words[1]) = 0;
    std::string::assign(result, "");
    v1[1].__r_.__value_.__r.__words[2] = 0;
    LODWORD(v1[2].__r_.__value_.__l.__data_) = 0;
    WORD2(v1[2].__r_.__value_.__r.__words[0]) = 0;
    v1[2].__r_.__value_.__s.__data_[6] = 0;
    sub_10003B238((uint64_t)&v1[2].__r_.__value_.__l.__size_);
    if ((*(unsigned int (**)(std::string *))(v1->__r_.__value_.__r.__words[0] + 200))(v1)) {
      (*(void (**)(std::string *, void))(v1->__r_.__value_.__r.__words[0] + 48))(v1, v1->__r_.__value_.__s.__data_[9]);
    }
    return v1;
  }
  return result;
}

void sub_1000DE27C(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100128B08, ((a1 + 56) & 7) != 0)
    || (char v2 = (uint64_t *)(a1 + 56), sub_10002AEFC(&v2), ((a1 + 16) & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (*(char *)(a1 + 39) < 0)
  {
    operator delete(*(void **)(a1 + 16));
  }
}

void sub_1000DE308(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000DE27C(a1);
  }
}

uint64_t sub_1000DE31C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DE27C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DE364(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (!*(unsigned char *)(result + 8))
  {
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    (*(void (**)(uint64_t, void))(*(void *)v1 + 48))(v1, 0);
    (*(void (**)(uint64_t))(*(void *)v1 + 168))(v1);
    char v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 192);
    return v2(v1);
  }
  return result;
}

uint64_t sub_1000DE458(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      memset(&v9, 0, sizeof(v9));
      (*(void (**)(uint64_t, std::string *))(*(void *)result + 16))(result, &v9);
      std::string::append(&v9, "/preferences.xml");
      char v2 = xmlNewDoc((const xmlChar *)"1.0");
      uint64_t v3 = v2;
      if (!v2) {
        goto LABEL_14;
      }
      unsigned int v4 = xmlNewTextWriterTree(v2, 0, 0);
      xmlTextWriterStartElement(v4, (const xmlChar *)"GymSettings");
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"UserCount", "%u", *(unsigned __int8 *)(v1 + 8));
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"CurrentUserIndex", "%u", *(unsigned __int8 *)(v1 + 9));
      uint64_t result = xmlTextWriterStartElement(v4, (const xmlChar *)"GymUsers");
      if ((((_BYTE)v1 + 56) & 7) == 0)
      {
        unint64_t v5 = *(void *)(v1 + 56);
        if (v5 != *(void *)(v1 + 64))
        {
          uint64_t v6 = *(void *)(v1 + 56) & 7;
          while (v5 && !v6)
          {
            int v7 = (const xmlChar *)v5;
            if (*(char *)(v5 + 23) < 0) {
              int v7 = *(const xmlChar **)v5;
            }
            uint64_t result = xmlTextWriterWriteElement(v4, (const xmlChar *)"ScreenName", v7);
            if (v5 >= 0xFFFFFFFFFFFFFFE8) {
              goto LABEL_18;
            }
            v5 += 24;
            if (v5 == *(void *)(v1 + 64)) {
              goto LABEL_13;
            }
          }
          goto LABEL_17;
        }
LABEL_13:
        xmlTextWriterEndElement(v4);
        xmlTextWriterEndElement(v4);
        xmlTextWriterEndDocument(v4);
        xmlFreeTextWriter(v4);
        RootElement = (xmlOutputBuffer *)xmlDocGetRootElement(v3);
        sub_1000DE61C(RootElement, (uint64_t)&v9);
        xmlFreeDoc(v3);
LABEL_14:
        if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v9.__r_.__value_.__l.__data_);
        }
        return v3 != 0;
      }
    }
  }
LABEL_17:
  __break(0x5516u);
LABEL_18:
  __break(0x5513u);
  return result;
}

xmlOutputBuffer *sub_1000DE61C(xmlOutputBuffer *result, uint64_t a2)
{
  if (result)
  {
    char v2 = (xmlNode *)result;
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v3 = (const char *)a2;
    }
    else {
      uint64_t v3 = *(const char **)a2;
    }
    unsigned int v4 = fopen(v3, "w");
    uint64_t result = xmlOutputBufferCreateIO((xmlOutputWriteCallback)sub_1000DF9C0, (xmlOutputCloseCallback)sub_1000DFA08, v4, 0);
    if (result)
    {
      if ((v2 & 7) != 0 || (((_BYTE)v2 + 64) & 7) != 0)
      {
        __break(0x5516u);
        return result;
      }
      unint64_t v5 = result;
      xmlNodeDumpOutput(result, v2->doc, v2, 0, 0, 0);
      int v6 = xmlOutputBufferClose(v5);
      int v7 = fileno(v4);
      ftruncate(v7, v6);
    }
    return (xmlOutputBuffer *)fclose(v4);
  }
  return result;
}

unint64_t sub_1000DE70C(unint64_t result, char *__s, unint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (*(char *)(result + 23) < 0)
      {
        uint64_t v3 = *(void *)result;
        unint64_t v6 = *(void *)(result + 8);
      }
      else
      {
        unint64_t v6 = *(unsigned __int8 *)(result + 23);
      }
      uint64_t result = strlen(__s);
      if (v6 < a3) {
        return -1;
      }
      int64_t v7 = result;
      if (!result) {
        return a3;
      }
      if (~v3 < a3 || (!__CFADD__(__s, result) ? (char v8 = 0) : (char v8 = 1), v6 > ~v3 || (v8 & 1) != 0))
      {
LABEL_31:
        __break(0x5513u);
LABEL_32:
        __break(0x5515u);
LABEL_33:
        __break(0x5500u);
        goto LABEL_34;
      }
      uint64_t result = v3 + a3;
      std::string v9 = (unsigned char *)(v3 + v6);
      int64_t v10 = v6 - a3;
      if ((uint64_t)(v6 - a3) < v7)
      {
LABEL_16:
        uint64_t v11 = v9;
LABEL_17:
        if (v11 == v9) {
          return -1;
        }
        else {
          return (unint64_t)&v11[-v3];
        }
      }
      if (__s)
      {
        int v12 = *__s;
        while (1)
        {
          BOOL v13 = __OFSUB__(v10, v7);
          int64_t v14 = v10 - v7;
          if (v13) {
            goto LABEL_32;
          }
          if (__OFADD__(v14, 1)) {
            goto LABEL_33;
          }
          if (v14 == -1) {
            goto LABEL_16;
          }
          uint64_t v15 = memchr((void *)result, v12, v14 + 1);
          if (!v15) {
            goto LABEL_16;
          }
          uint64_t v11 = v15;
          uint64_t result = memcmp(v15, __s, v7);
          if (!result) {
            goto LABEL_17;
          }
          if (v11 == (unsigned char *)-1) {
            goto LABEL_31;
          }
          uint64_t result = (unint64_t)(v11 + 1);
          int64_t v10 = v9 - (v11 + 1);
          if (v10 < v7) {
            goto LABEL_16;
          }
        }
      }
    }
  }
LABEL_34:
  __break(0x5516u);
  return result;
}

std::string *sub_1000DE834(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_40;
  }
  memset(&v22, 0, sizeof(v22));
  int v20 = -1431655766;
  int v21 = -1431655766;
  (*(void (**)(uint64_t, std::string *))(*(void *)a1 + 16))(a1, &v22);
  std::string::append(&v22, "/preferences.xml");
  if (!sub_1000DA5A0((const char *)&v22)) {
    goto LABEL_44;
  }
  uint64_t v3 = (v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
     ? &v22
     : (std::string *)v22.__r_.__value_.__r.__words[0];
  xmlDocPtr v4 = xmlParseFile((const char *)v3);
  if (!v4) {
    goto LABEL_44;
  }
  uint64_t v1 = v4;
  p_children = (uint64_t *)&v4->children;
  if ((v4 & 7) != 0 || ((unint64_t)&v4->children & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t v7 = *p_children;
  if (*p_children)
  {
    if ((v7 & 7) != 0 || ((v7 + 16) & 7) != 0) {
      goto LABEL_40;
    }
    if (!strcmp(*(const char **)(v7 + 16), "GymSettings"))
    {
      if ((sub_1000DEB24(v7, (xmlChar *)"UserCount", (uint64_t)&v21) & 1) == 0)
      {
LABEL_41:
        syslog(4, "TGym::DeserializeGymInformation failed to read userCount\n");
        goto LABEL_43;
      }
      if ((sub_1000DEB24(v7, (xmlChar *)"CurrentUserIndex", (uint64_t)&v20) & 1) == 0)
      {
        syslog(4, "TGym::DeserializeGymInformation failed to read userIndex\n");
        goto LABEL_43;
      }
      if (((a1 + 56) & 7) == 0)
      {
        sub_10003B238(a1 + 56);
        uint64_t v9 = sub_1000E72A4(v7, (xmlChar *)"GymUsers");
        if (v9)
        {
          uint64_t v10 = v9;
          memset(&__str, 170, sizeof(__str));
          sub_10002B034((uint64_t)&__str, "");
          uint64_t v11 = sub_1000E72A4(v10, (xmlChar *)"ScreenName");
          if (v11)
          {
            uint64_t v12 = v11;
            if ((v11 & 7) == 0)
            {
LABEL_26:
              if (((v12 + 16) & 7) == 0)
              {
                uint64_t result = (std::string *)strcmp(*(const char **)(v12 + 16), "ScreenName");
                if (!result)
                {
                  int64_t v14 = (const std::string::value_type *)sub_1000E7354(v12);
                  std::string::assign(&__str, v14);
                  if (sub_1000DE70C((unint64_t)&__str, "..", 0) != -1)
                  {
                    syslog(4, "TGym::DeserializeGymInformation userName invalid\n");
                    xmlFreeDoc(v1);
                    std::string::~string(&__str);
                    goto LABEL_44;
                  }
                  uint64_t result = sub_1000DEBD0((std::string *)(a1 + 56), *(const std::string **)(a1 + 64), &__str);
                }
                uint64_t v15 = v12;
                while ((v15 & 7) == 0 && ((v15 + 8) & 7) == 0)
                {
                  unsigned int v16 = *(_DWORD *)(v15 + 8);
                  if (v16 >= 0x20)
                  {
                    __break(0x550Au);
                    return result;
                  }
                  if (v15 != v12 && v16 == 1)
                  {
                    uint64_t v12 = v15;
                    if ((v15 & 7) == 0) {
                      goto LABEL_26;
                    }
                    goto LABEL_40;
                  }
                  uint64_t v17 = (uint64_t *)(v15 + 48);
                  if ((v17 & 7) != 0) {
                    goto LABEL_40;
                  }
                  uint64_t v15 = *v17;
                  if (!v15) {
                    goto LABEL_48;
                  }
                }
              }
            }
            goto LABEL_40;
          }
LABEL_48:
          std::string::~string(&__str);
        }
        *(unsigned char *)(a1 + 8) = v21;
        *(unsigned char *)(a1 + 9) = v20;
        xmlFreeDoc(v1);
        uint64_t v18 = 1;
        goto LABEL_45;
      }
LABEL_40:
      __break(0x5516u);
      goto LABEL_41;
    }
  }
LABEL_43:
  xmlFreeDoc(v1);
LABEL_44:
  uint64_t v18 = 0;
LABEL_45:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return (std::string *)v18;
}

uint64_t sub_1000DEB24(uint64_t a1, xmlChar *a2, uint64_t a3)
{
  uint64_t result = sub_1000E72A4(a1, a2);
  if (result)
  {
    if ((result & 7) != 0 || ((result + 24) & 7) != 0)
    {
LABEL_16:
      __break(0x5516u);
      goto LABEL_17;
    }
    uint64_t v5 = *(void *)(result + 24);
    if (v5)
    {
      if ((v5 & 7) != 0 || ((v5 + 8) & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v7 = *(_DWORD *)(v5 + 8);
      if (v7 >= 0x20)
      {
LABEL_17:
        __break(0x550Au);
        return result;
      }
      if (v7 == 3)
      {
        char v8 = (const char **)(v5 + 80);
        if ((v8 & 7) == 0)
        {
          sscanf(*v8, "%u", a3);
          return 1;
        }
        goto LABEL_16;
      }
    }
    return 0;
  }
  return result;
}

std::string *sub_1000DEBD0(std::string *a1, const std::string *a2, std::string *__str)
{
  if (!a1) {
    goto LABEL_28;
  }
  uint64_t v3 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_28;
  }
  xmlDocPtr v4 = (std::string *)a2;
  std::string::size_type v5 = a1->__r_.__value_.__r.__words[0];
  uint64_t v6 = (uint64_t)a2 - a1->__r_.__value_.__r.__words[0];
  BOOL v7 = (unint64_t)a2 >= a1->__r_.__value_.__r.__words[0];
  if (v6 < 0) {
    BOOL v7 = (unint64_t)a2 < a1->__r_.__value_.__r.__words[0];
  }
  if (!v7) {
    goto LABEL_29;
  }
  char v8 = &a1->__r_.__value_.__r.__words[2];
  if (((unint64_t)&a1->__r_.__value_.__r.__words[2] & 7) != 0) {
    goto LABEL_28;
  }
  unint64_t size = a1->__r_.__value_.__l.__size_;
  unint64_t v11 = *v8;
  if (size < *v8)
  {
    if (a2 == (const std::string *)size)
    {
      sub_1000B68D8((uint64_t)a1, __str);
      return v4;
    }
    if ((unint64_t)a2 > 0xFFFFFFFFFFFFFFE7) {
      goto LABEL_29;
    }
    sub_1000B6A6C(a1, a2, size, (uint64_t)&a2[1]);
    if (v4 <= __str && v3->__r_.__value_.__l.__size_ > (unint64_t)__str)
    {
      if ((unint64_t)__str > 0xFFFFFFFFFFFFFFE7)
      {
LABEL_29:
        __break(0x5513u);
        goto LABEL_30;
      }
      ++__str;
    }
    if ((__str & 7) == 0 && v5 && (v4 & 7) == 0)
    {
      std::string::operator=(v4, __str);
      return v4;
    }
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }
  unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(size - v5) >> 3);
  unint64_t v22 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v21[0] = v13;
  v21[1] = v13;
  BOOL v14 = __CFADD__(v12, 1);
  unint64_t v15 = v12 + 1;
  if (v14)
  {
LABEL_30:
    __break(0x5500u);
LABEL_31:
    sub_10002A278((uint64_t)v3);
  }
  if (v15 > 0xAAAAAAAAAAAAAAALL) {
    goto LABEL_31;
  }
  uint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
  unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v5) >> 3);
  unint64_t v18 = 0x5555555555555556 * ((uint64_t)(v11 - v5) >> 3);
  if (v18 <= v15) {
    unint64_t v18 = v15;
  }
  if (v17 >= 0x555555555555555) {
    int64_t v19 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    int64_t v19 = v18;
  }
  sub_10002A298((uint64_t)v21, v19, v16, (uint64_t)v8);
  sub_1000B6B90((unint64_t)v21, __str);
  xmlDocPtr v4 = sub_1000B6D84(v3, (uint64_t)v21, v4);
  sub_10002A4DC((uint64_t)v21);
  return v4;
}

std::string *sub_1000DED88(std::string *result, std::string *this)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    std::string::assign(this, (const std::string::value_type *)qword_10013C898);
    return std::string::append(this, "/Trainer/Workouts/Empeds");
  }
  return result;
}

void sub_1000DEDE8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  memset(&v8, 0, sizeof(v8));
  memset(v7, 170, sizeof(v7));
  sub_10002B034((uint64_t)v7, "NewUser");
  (*(void (**)(uint64_t, std::string *))(*(void *)a1 + 16))(a1, &v8);
  std::string::append(&v8, "/NewUser");
  if (!sub_1000DA5A0((const char *)&v8))
  {
    sub_1000C03D0("/latest", &v8.__r_.__value_.__l.__data_, (char *)__p);
    unsigned int v2 = sub_1000DA4C0((char *)__p);
    unsigned int v3 = v2;
    if (v6 < 0)
    {
      operator delete(__p[0]);
      if (v3) {
        goto LABEL_12;
      }
    }
    else if (v2)
    {
      goto LABEL_12;
    }
  }
  int v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 == 255)
  {
LABEL_18:
    __break(0x5507u);
    return;
  }
  *(unsigned char *)(a1 + 8) = v4 + 1;
  if (((a1 + 16) & 7) != 0 || (std::string::assign((std::string *)(a1 + 16), "NewUser"), ((a1 + 56) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }
  sub_1000DEBD0((std::string *)(a1 + 56), *(const std::string **)(a1 + 56), (std::string *)(a1 + 16));
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 54) = 0;
  *(unsigned char *)(a1 + 9) = 0;
  (*(void (**)(uint64_t))(*(void *)a1 + 168))(a1);
LABEL_12:
  if (SHIBYTE(v7[2]) < 0) {
    operator delete(v7[0]);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

uint64_t sub_1000DEF78(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DEF90(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (*(unsigned __int8 *)(result + 8) <= a2) {
    return 0;
  }
  *(unsigned char *)(result + 55) = *(unsigned char *)(result + 9);
  *(unsigned char *)(result + 9) = a2;
  if (((result + 56) & 7) != 0) {
    goto LABEL_13;
  }
  std::string::size_type v3 = *(void *)(result + 56);
  if (__CFADD__(v3, 24 * a2))
  {
LABEL_14:
    __break(0x5513u);
    return result;
  }
  if (!v3
    || (int v4 = (const std::string *)(v3 + 24 * a2), (v4 & 7) != 0)
    || (result += 16, ((v2 + 16) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  std::string::operator=((std::string *)result, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 176))(v2);
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 192))(v2);
    return 1;
  }
  return result;
}

uint64_t sub_1000DF07C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 9);
  }
  __break(0x5516u);
  return result;
}

void sub_1000DF094(uint64_t a1, std::string *a2)
{
  if (!a1
    || (a1 & 7) != 0
    || (char v3 = a1 + 16, (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1), (v3 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    std::operator+<char>();
    sub_10002903C(a2, (const std::string::value_type *)&__p);
    if (v5 < 0) {
      operator delete(__p);
    }
  }
}

void sub_1000DF12C(uint64_t a1, std::string *a2)
{
  if (!a1
    || (a1 & 7) != 0
    || (char v3 = a1 + 16, (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1), (v3 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    std::operator+<char>();
    sub_1000C03D0("/latest", (char **)&v4, (char *)__p);
    sub_10002903C(a2, (const std::string::value_type *)__p);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
    if (v5 < 0) {
      operator delete(v4);
    }
  }
}

dirent *sub_1000DF1E8(dirent *result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v5 = 0;
    (*(void (**)(dirent *, void **))(result->d_ino + 72))(result, __p);
    if (sub_1000DA5A0((const char *)__p))
    {
      if (v5 >= 0) {
        uint64_t v1 = __p;
      }
      else {
        uint64_t v1 = (void **)__p[0];
      }
      uint64_t v2 = opendir((const char *)v1);
      do
      {
        uint64_t result = readdir(v2);
        BOOL v3 = result != 0;
        if (!result) {
          break;
        }
        if ((result & 7) != 0 || ((unint64_t)&result->d_type & 3) != 0) {
          goto LABEL_17;
        }
      }
      while (result->d_type == 4);
      closedir(v2);
    }
    else
    {
      BOOL v3 = 0;
    }
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
    return (dirent *)v3;
  }
  return result;
}

std::string *sub_1000DF2CC@<X0>(std::string *result@<X0>, std::string *a2@<X8>)
{
  if (result
    && (result & 7) == 0
    && ((unint64_t)&result->__r_.__value_.__r.__words[2] & 7) == 0
    && a2)
  {
    return std::string::basic_string(a2, (const std::string *)&result->__r_.__value_.__r.__words[2]);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DF2F4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 44);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000DF318(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a2 < 4)
  {
    *(_DWORD *)(result + 44) = a2;
    return (*(uint64_t (**)(void))(*(void *)result + 168))();
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DF35C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 40);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000DF380(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a2 < 4)
  {
    *(_DWORD *)(result + 40) = a2;
    return (*(uint64_t (**)(void))(*(void *)result + 168))();
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000DF3C4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 52);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DF3DC(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (*(unsigned __int16 *)(result + 52) != a2)
  {
    *(_WORD *)(result + 52) = a2;
    return (*(uint64_t (**)(void))(*(void *)result + 168))();
  }
  return result;
}

uint64_t sub_1000DF424(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 54);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DF43C(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(result + 54) = a2;
    return (*(uint64_t (**)(void))(*(void *)result + 168))();
  }
  return result;
}

uint64_t sub_1000DF474(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 48);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

xmlDoc *sub_1000DF498(xmlDoc *result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  memset(&v8, 0, sizeof(v8));
  (*((void (**)(xmlDoc *, std::string *))result->_private + 8))(result, &v8);
  if (!sub_1000DA5A0((const char *)&v8))
  {
    BOOL v3 = 0;
    goto LABEL_13;
  }
  std::string::append(&v8, "/preferences.xml");
  uint64_t v2 = xmlNewDoc((const xmlChar *)"1.0");
  BOOL v3 = v2;
  if (v2)
  {
    int v4 = xmlNewTextWriterTree(v2, 0, 0);
    uint64_t result = (xmlDoc *)xmlTextWriterStartElement(v4, (const xmlChar *)"GymUserSettings");
    p_name = (const xmlChar *)&v1->name;
    if (((unint64_t)&v1->name & 7) == 0)
    {
      if (SHIBYTE(v1->last) < 0) {
        p_name = *(const xmlChar **)p_name;
      }
      xmlTextWriterWriteElement(v4, (const xmlChar *)"UserID", p_name);
      LOWORD(v6) = WORD2(v1->next);
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Weight", "%.2f", (float)((float)v6 * 0.1));
      uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Age", "%u", BYTE6(v1->next));
      if (LODWORD(v1->parent) < 4)
      {
        uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Gender", "%u", LODWORD(v1->parent));
        if (HIDWORD(v1->parent) <= 3)
        {
          uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Units", "%u", HIDWORD(v1->parent));
          if (LODWORD(v1->next) <= 3)
          {
            xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"RecordingPref", "%u", LODWORD(v1->next));
            xmlTextWriterEndElement(v4);
            xmlTextWriterEndElement(v4);
            xmlTextWriterEndDocument(v4);
            xmlFreeTextWriter(v4);
            RootElement = (xmlOutputBuffer *)xmlDocGetRootElement(v3);
            sub_1000DE61C(RootElement, (uint64_t)&v8);
            xmlFreeDoc(v3);
            BOOL v3 = (xmlDoc *)1;
            goto LABEL_13;
          }
        }
      }
LABEL_17:
      __break(0x550Au);
      return result;
    }
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
LABEL_13:
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  return v3;
}

uint64_t sub_1000DF6AC(uint64_t result)
{
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_53;
  }
  memset(&v17, 0, sizeof(v17));
  int v15 = -1431655766;
  float v16 = NAN;
  (*(void (**)(uint64_t, std::string *))(*(void *)result + 64))(result, &v17);
  std::string::append(&v17, "/preferences.xml");
  if (sub_1000DA5A0((const char *)&v17))
  {
    uint64_t v2 = (v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? &v17
       : (std::string *)v17.__r_.__value_.__r.__words[0];
    uint64_t result = (uint64_t)xmlParseFile((const char *)v2);
    if (result)
    {
      BOOL v3 = (xmlDoc *)result;
      int v4 = (uint64_t *)(result + 24);
      if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
        goto LABEL_53;
      }
      uint64_t v6 = *v4;
      if (*v4)
      {
        if ((v6 & 7) != 0 || ((v6 + 16) & 7) != 0) {
          goto LABEL_53;
        }
        if (!strcmp(*(const char **)(v6 + 16), "GymUserSettings"))
        {
          uint64_t v9 = sub_1000E72A4(v6, (xmlChar *)"UserID");
          if (v9)
          {
            uint64_t result = sub_1000E7354(v9);
            if (((v1 + 16) & 7) != 0) {
              goto LABEL_53;
            }
            std::string::assign((std::string *)(v1 + 16), (const std::string::value_type *)result);
            if (sub_1000DE70C(v1 + 16, "..", 0) != -1)
            {
              syslog(4, "TGym::DeserializeCurrentGymUserInformation userID invalid\n");
              uint64_t v8 = 0;
LABEL_52:
              xmlFreeDoc(v3);
              goto LABEL_21;
            }
          }
          uint64_t result = sub_1000E72A4(v6, (xmlChar *)"Weight");
          if (!result) {
            goto LABEL_43;
          }
          if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
            goto LABEL_53;
          }
          uint64_t v10 = *(void *)(result + 24);
          if (!v10) {
            goto LABEL_43;
          }
          if ((v10 & 7) != 0 || ((v10 + 8) & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v12 = *(_DWORD *)(v10 + 8);
          if (v12 >= 0x20)
          {
LABEL_54:
            __break(0x550Au);
LABEL_55:
            __break(0x5505u);
            return result;
          }
          if (v12 != 3)
          {
LABEL_43:
            if (sub_1000DEB24(v6, (xmlChar *)"Age", (uint64_t)&v15)) {
              *(unsigned char *)(v1 + 54) = v15;
            }
            if (sub_1000DEB24(v6, (xmlChar *)"Gender", (uint64_t)&v15)) {
              *(_DWORD *)(v1 + 40) = v15;
            }
            if (sub_1000DEB24(v6, (xmlChar *)"Units", (uint64_t)&v15)) {
              *(_DWORD *)(v1 + 44) = v15;
            }
            if (sub_1000DEB24(v6, (xmlChar *)"RecordingPref", (uint64_t)&v15)) {
              *(_DWORD *)(v1 + 48) = v15;
            }
            uint64_t v8 = 1;
            goto LABEL_52;
          }
          long long v13 = (const char **)(v10 + 80);
          if ((v13 & 7) == 0)
          {
            uint64_t result = sscanf(*v13, "%f", &v16);
            double v14 = v16 * 10.0;
            if (v14 <= -1.0 || v14 >= 65536.0) {
              goto LABEL_55;
            }
            *(_WORD *)(v1 + 52) = (int)v14;
            goto LABEL_43;
          }
LABEL_53:
          __break(0x5516u);
          goto LABEL_54;
        }
      }
    }
  }
  uint64_t v8 = 0;
LABEL_21:
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_1000DF97C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v1 = sub_1000194D0()) == 0 || (v1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_10001C2F8(v1);
  }
}

uint64_t sub_1000DF9C0(FILE *__stream, void *__ptr, uint64_t a3)
{
  if (!__stream) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v3 = a3;
  if (fwrite(__ptr, 1uLL, (int)a3, __stream) != a3) {
    return 0xFFFFFFFFLL;
  }
  return v3;
}

uint64_t sub_1000DFA08(FILE *a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  fflush(a1);
  return 0;
}

uint64_t sub_1000DFA34()
{
  if (qword_10013C750 != -1) {
    dispatch_once(&qword_10013C750, &stru_100128C20);
  }
  return qword_10013C748;
}

void sub_1000DFA78(id a1)
{
}

uint64_t sub_1000DFAC4(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v1 = off_100128EA0;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_7;
  }
  *(void *)uint64_t v1 = off_100128C50;
  *(void *)(v1 + 96) = off_100128E20;
  *(void *)(v1 + 104) = 0;
  *(_WORD *)(v1 + 122) = 0;
  *(unsigned char *)(v1 + 124) = 0;
  *(_DWORD *)(v1 + 356) = 0;
  pthread_mutex_init((pthread_mutex_t *)(v1 + 360), 0);
  uint64_t result = sub_100067E50();
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v1 + 96, 0, 0);
    return v1;
  }
  return result;
}

uint64_t sub_1000DFB98(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100128C50,
        char v2 = result + 96,
        *(void *)(result + 96) = off_100128E20,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (sub_1000684B4((uint64_t *)result, v1 + 96, 0),
        uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(v1 + 360)),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000DFC44(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000DFB98(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DFC58(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000DFB98(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DFC6C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000DFB98(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DFCB4(uint64_t a1)
{
  return sub_1000DFC6C(a1 - 96);
}

BOOL sub_1000DFCBC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v4 = v1;
  long long v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v1;
  long long v8 = v1;
  long long v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0x200000000;
  LODWORD(v5) = 1;
  return sub_100090324((uint64_t)&v3) == 0;
}

uint64_t sub_1000DFD5C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    char v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(void *)(v1 + 112);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

uint64_t sub_1000DFDA8(uint64_t result, unsigned char *a2, unsigned char *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(unsigned char *)(v3 + 120);
    *a3 = *(unsigned char *)(v3 + 121);
    return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
  }
  return result;
}

BOOL sub_1000DFE18(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x550Au);
  }
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v5 = v2;
  long long v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  long long v8 = v2;
  long long v9 = v2;
  long long v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0x500000000;
  if (a2 >= 8) {
    goto LABEL_6;
  }
  LODWORD(v6) = a2;
  return sub_100090324((uint64_t)&v4) == 0;
}

uint64_t sub_1000DFEC0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 312))(result, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DFF00(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    long long v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned __int16 *)(v1 + 122);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

uint64_t sub_1000DFF4C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000DFF8C(uint64_t result, unsigned char *a2, unsigned char *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(unsigned char *)(v3 + 125);
    *a3 = *(unsigned char *)(v3 + 126);
    return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
  }
  return result;
}

uint64_t sub_1000DFFFC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E003C(uint64_t result, unsigned int *a2, unsigned char *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 360));
  unsigned int v6 = *(_DWORD *)(v3 + 128);
  if (v6 >= 8)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  *a2 = v6;
  *a3 = *(unsigned char *)(v3 + 132);
  return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
}

uint64_t sub_1000E00B8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E00F8(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    long long v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned __int8 *)(v1 + 133);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

uint64_t sub_1000E0144(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 4);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E0184(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = *(_OWORD *)(v2 + 212);
    *a2 = *(_OWORD *)(v2 + 196);
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }
  return result;
}

uint64_t sub_1000E0200(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 5);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E0240(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = *(_OWORD *)(v2 + 244);
    long long v5 = *(_OWORD *)(v2 + 276);
    long long v6 = *(_OWORD *)(v2 + 228);
    a2[2] = *(_OWORD *)(v2 + 260);
    a2[3] = v5;
    *a2 = v6;
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }
  return result;
}

uint64_t sub_1000E02C8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312))(result, 6);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E0308(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = *(_OWORD *)(v2 + 340);
    long long v6 = *(_OWORD *)(v2 + 292);
    long long v5 = *(_OWORD *)(v2 + 308);
    a2[2] = *(_OWORD *)(v2 + 324);
    a2[3] = v4;
    *a2 = v6;
    a2[1] = v5;
    return pthread_mutex_lock((pthread_mutex_t *)(v2 + 360));
  }
  return result;
}

uint64_t sub_1000E038C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned int *)(v1 + 356);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

BOOL sub_1000E03D8(uint64_t a1, char a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v5 = v2;
  long long v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  long long v8 = v2;
  long long v9 = v2;
  long long v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0x700000000;
  LODWORD(v6) = 7;
  BYTE11(v6) = a2;
  return sub_100090324((uint64_t)&v4) == 0;
}

uint64_t sub_1000E047C(uint64_t result, unsigned char *a2, _DWORD *a3, _WORD *a4, unsigned char *a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(unsigned char *)(v5 + 134);
    *a4 = *(_WORD *)(v5 + 140);
    *a5 = *(unsigned char *)(v5 + 142);
    *a3 = *(_DWORD *)(v5 + 136);
    return pthread_mutex_unlock((pthread_mutex_t *)(v5 + 360));
  }
  return result;
}

BOOL sub_1000E050C(uint64_t a1, char a2, int a3, __int16 a4, char a5, _OWORD *a6)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v9 = v6;
  *(_OWORD *)unint64_t v10 = v6;
  *(_OWORD *)&v10[16] = v6;
  long long v11 = v6;
  unint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
  long long v12 = v6;
  uint64_t v8 = *(void *)(a1 + 112);
  WORD1(v9) = 0;
  *((void *)&v9 + 1) = 0x900000000;
  v10[11] = a2;
  *(_WORD *)&v10[8] = a4;
  v10[10] = a5;
  *(_DWORD *)unint64_t v10 = 7;
  *(_DWORD *)&v10[4] = a3;
  *(_OWORD *)&v10[12] = *a6;
  return sub_100090324((uint64_t)&v8) == 0;
}

BOOL sub_1000E05C0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v4 = v1;
  long long v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v1;
  long long v8 = v1;
  long long v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xA00000000;
  LODWORD(v5) = 7;
  return sub_100090324((uint64_t)&v3) == 0;
}

uint64_t sub_1000E0660(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    long long v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned int *)(v1 + 160);
    pthread_mutex_unlock(v2);
    return v3;
  }
  return result;
}

BOOL sub_1000E06AC(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v5 = v2;
  long long v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  long long v8 = v2;
  long long v9 = v2;
  long long v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0xC00000000;
  LODWORD(v6) = 7;
  DWORD1(v6) = a2;
  return sub_100090324((uint64_t)&v4) == 0;
}

BOOL sub_1000E074C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v4 = v1;
  long long v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v1;
  long long v8 = v1;
  long long v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xD00000000;
  LODWORD(v5) = 7;
  return sub_100090324((uint64_t)&v3) == 0;
}

uint64_t sub_1000E07EC(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (unint64_t v3 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_100020A34(result, &v3);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
    return 1;
  }
  return result;
}

uint64_t sub_1000E0854(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v7 = a2,
        unint64_t v3 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        long long v4 = (uint64_t *)(v2 + 8),
        ((v2 + 8) & 7) != 0)
    || (uint64_t result = sub_100020D64(v2 + 8, &v7), v5 = v2 + 16, (v5 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v6 = result;
    if (v5 != result) {
      sub_10000BC30(v4, result);
    }
    pthread_mutex_unlock(v3);
    return v5 != v6;
  }
  return result;
}

uint64_t sub_1000E08F4(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E0908(uint64_t result)
{
  if ((((_BYTE)result - 96) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E091C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a3 == 15)
  {
    if (a2 <= 0x1F) {
      return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)result + 32))(result, 655365, a2, 15);
    }
  }
  else if (a3)
  {
    if (a2 <= 0x1F) {
      return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32))(result, 655362, a2, a3);
    }
  }
  else if (a2 < 0x20)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32))(result, 655361, a2, 0);
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E09FC(uint64_t result, unsigned int a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 360));
  if (a2 >= 8)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  *(_DWORD *)(v3 + 128) = a2;
  *(unsigned char *)(v3 + 132) = a3;
  pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48);
  return v6(v3, 655370, 0);
}

uint64_t sub_1000E0AA4(uint64_t result, char a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(unsigned char *)(v2 + 133) = a2;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v4(v2, 655371, 0);
  }
  return result;
}

uint64_t sub_1000E0B38(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = a2[1];
    *(_OWORD *)(v2 + 196) = *a2;
    *(_OWORD *)(v2 + 212) = v4;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v5(v2, 655375, 0);
  }
  return result;
}

uint64_t sub_1000E0BD4(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = a2[2];
    long long v5 = a2[3];
    long long v6 = a2[1];
    *(_OWORD *)(v2 + 228) = *a2;
    *(_OWORD *)(v2 + 260) = v4;
    *(_OWORD *)(v2 + 276) = v5;
    *(_OWORD *)(v2 + 244) = v6;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v7(v2, 655376, 0);
  }
  return result;
}

uint64_t sub_1000E0C7C(uint64_t result, long long *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = a2[3];
    long long v6 = *a2;
    long long v5 = a2[1];
    *(_OWORD *)(v2 + 324) = a2[2];
    *(_OWORD *)(v2 + 340) = v4;
    *(_OWORD *)(v2 + 292) = v6;
    *(_OWORD *)(v2 + 308) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v7(v2, 655377, 0);
  }
  return result;
}

uint64_t sub_1000E0D20(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v4;
  long long v8 = v4;
  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  long long v10 = v4;
  long long v11 = v4;
  long long v9 = v4;
  uint64_t v6 = *(void *)(a1 + 112);
  WORD1(v7) = 0;
  *((void *)&v7 + 1) = &_mh_execute_header;
  DWORD1(v8) = 17;
  BYTE8(v8) = 0;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 360));
  *(_DWORD *)(a1 + 356) = a2;
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 360));
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48))(a1, 655378, 0);
  return sub_100090324((uint64_t)&v6);
}

void sub_1000E0E20(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  if (a2) {
    return;
  }
  uint64_t v3 = malloc_type_malloc(0x60uLL, 0x1020040B9ED3D04uLL);
  if (!v3) {
    return;
  }
  long long v4 = v3;
  if ((v3 & 7) != 0
    || (*(void *)uint64_t v3 = *(void *)(a1 + 112), ((v3 + 10) & 1) != 0)
    || (*((_WORD *)v3 + 5) = 0, (((_BYTE)v3 + 16) & 7) != 0)
    || (*((_DWORD *)v3 + 4) = 0, (((_BYTE)v3 + 20) & 3) != 0)
    || (*((_DWORD *)v3 + 5) = 20, ((unint64_t)(v3 + 28) & 3) != 0)
    || (*((_DWORD *)v3 + 7) = 0, (uint64_t v5 = sub_10004E9C8()) == 0)
    || (v5 & 7) != 0
    || (char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 208))(v5), (((_BYTE)v4 + 32) & 3) != 0))
  {
LABEL_17:
    __break(0x5516u);
    return;
  }
  v4[32] = v6;
  sub_100090324((uint64_t)v4);
  free(v4);
}

uint64_t sub_1000E0F30(uint64_t result, char a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(unsigned char *)(v3 + 120) = a2;
    *(unsigned char *)(v3 + 121) = a3;
    pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
    char v6 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48);
    return v6(v3, 655367, 0);
  }
  return result;
}

uint64_t sub_1000E0FCC(uint64_t result, char a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(unsigned char *)(v3 + 125) = a2;
    *(unsigned char *)(v3 + 126) = a3;
    pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
    char v6 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48);
    return v6(v3, 655369, 0);
  }
  return result;
}

uint64_t sub_1000E1068(uint64_t a1, __int16 a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v4;
  long long v8 = v4;
  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  long long v10 = v4;
  long long v11 = v4;
  long long v9 = v4;
  uint64_t v6 = *(void *)(a1 + 112);
  WORD1(v7) = 0;
  *((void *)&v7 + 1) = &_mh_execute_header;
  DWORD1(v8) = 4;
  BYTE8(v8) = 0;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 360));
  *(_WORD *)(a1 + 122) = a2;
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 360));
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48))(a1, 655368, 0);
  return sub_100090324((uint64_t)&v6);
}

uint64_t sub_1000E1168(uint64_t result, char a2, int a3, __int16 a4, char a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(unsigned char *)(v5 + 134) = a2;
    *(_DWORD *)(v5 + 136) = a3;
    *(_WORD *)(v5 + 140) = a4;
    *(unsigned char *)(v5 + 142) = a5;
    pthread_mutex_unlock((pthread_mutex_t *)(v5 + 360));
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v5 + 48);
    return v10(v5, 655372, 0);
  }
  return result;
}

uint64_t sub_1000E121C(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_DWORD *)(v2 + 160) = a2;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v4(v2, 655373, 0);
  }
  return result;
}

uint64_t sub_1000E12B0(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = a2[1];
    *(_OWORD *)(v2 + 164) = *a2;
    *(_OWORD *)(v2 + 180) = v4;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48);
    return v5(v2, 655374, 0);
  }
  return result;
}

uint64_t sub_1000E134C(uint64_t result, int a2, unsigned int a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_76;
  }
  if ((a2 + 32) >= 0x40) {
    goto LABEL_77;
  }
  if (a2) {
    return result;
  }
  if (a3)
  {
    if (a3 > 2 || (a5 & 0xFFFFFFBF) != 0x20) {
      return result;
    }
    if (!a4) {
      goto LABEL_76;
    }
    if ((a4 & 7) != 0) {
      goto LABEL_76;
    }
    *(void *)(result + 112) = *(void *)a4;
    if (((a4 + 8) & 7) != 0) {
      goto LABEL_76;
    }
    int v5 = *(unsigned __int16 *)(a4 + 8);
    if (v5 != 44)
    {
      if (v5 != 49) {
        return result;
      }
      if (((a4 + 16) & 7) == 0)
      {
        unsigned int v6 = *(_DWORD *)(a4 + 16);
        if (v6 > 1) {
          goto LABEL_77;
        }
        if (v6) {
          return result;
        }
        long long v7 = (_DWORD *)(a4 + 20);
        if (((a4 + 20) & 3) == 0 && ((a4 + 24) & 3) == 0)
        {
          if (*(unsigned char *)(a4 + 24)) {
            return result;
          }
          if (*v7 <= 7u)
          {
            switch(*v7)
            {
              case 0:
                goto LABEL_30;
              case 1:
                *(unsigned char *)(result + 124) = 1;
                long long v8 = *(uint64_t (**)(void))(*(void *)result + 32);
                return v8();
              case 2:
                long long v8 = *(uint64_t (**)(void))(*(void *)result + 32);
                return v8();
              case 3:
                long long v8 = *(uint64_t (**)(void))(*(void *)result + 32);
                return v8();
              default:
                return result;
            }
            return result;
          }
LABEL_77:
          __break(0x550Au);
          JUMPOUT(0x1000E1878);
        }
      }
LABEL_76:
      __break(0x5516u);
      goto LABEL_77;
    }
    long long v9 = (_DWORD *)(a4 + 20);
    if (((a4 + 20) & 3) != 0) {
      goto LABEL_76;
    }
    if (*v9 > 0x1Fu) {
      goto LABEL_77;
    }
    switch(*v9)
    {
      case 0:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        if (*(_DWORD *)(a4 + 28) > 0x1Fu) {
          goto LABEL_77;
        }
        if (((a4 + 32) & 3) != 0) {
          goto LABEL_76;
        }
        uint64_t result = (*(uint64_t (**)(void))(*(void *)result + 320))();
        break;
      case 3:
        if ((((int)a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(uint64_t, void, void))(*(void *)result + 328))(result, *(unsigned __int8 *)(a4 + 28), *(unsigned __int8 *)(a4 + 29));
      case 4:
LABEL_44:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 344))(result, *(unsigned __int16 *)(a4 + 28));
      case 6:
        long long v10 = (_DWORD *)(a4 + 24);
        if (((a4 + 24) & 7) != 0) {
          goto LABEL_76;
        }
        if (*v10 > 7u) {
          goto LABEL_77;
        }
        switch(*v10)
        {
          case 0:
            goto LABEL_44;
          case 1:
            if ((((int)a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            return (*(uint64_t (**)(uint64_t, void, void))(*(void *)result + 336))(result, *(unsigned __int8 *)(a4 + 28), *(unsigned __int8 *)(a4 + 29));
          case 2:
            if (((a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            unsigned int v11 = *(_DWORD *)(a4 + 28);
            if (v11 > 7) {
              goto LABEL_77;
            }
            if (((a4 + 32) & 3) != 0) {
              goto LABEL_76;
            }
            uint64_t result = sub_1000E09FC(result, v11, *(unsigned char *)(a4 + 32));
            break;
          case 3:
            if (((a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            return sub_1000E0AA4(result, *(unsigned char *)(a4 + 28));
          case 4:
            if (((a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            return sub_1000E0B38(result, (_OWORD *)(a4 + 28));
          case 5:
            if (((a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            return sub_1000E0BD4(result, (_OWORD *)(a4 + 28));
          case 6:
            if (((a4 + 28) & 3) != 0) {
              goto LABEL_76;
            }
            return sub_1000E0C7C(result, (long long *)(a4 + 28));
          default:
            return result;
        }
        return result;
      case 8:
        if (((_BYTE)a4 + 28) & 3) != 0 || ((a4 + 32) & 3) != 0 || ((a4 + 34)) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(uint64_t, void, void, void, void))(*(void *)result + 368))(result, *(unsigned __int8 *)(a4 + 35), *(unsigned int *)(a4 + 28), *(unsigned __int16 *)(a4 + 32), *(unsigned __int8 *)(a4 + 34));
      case 0xB:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 376))(result, *(unsigned int *)(a4 + 28));
      case 0xF:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(void))(*(void *)result + 384))();
      case 0x11:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 416))(result, *(unsigned int *)(a4 + 28));
      case 0x13:
        if (((a4 + 28) & 3) != 0) {
          goto LABEL_76;
        }
        if (*(_DWORD *)(a4 + 28) > 1u) {
          goto LABEL_77;
        }
        return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 424))(result, *(_DWORD *)(a4 + 28));
      default:
        return result;
    }
  }
  else
  {
    if (a5 != 48) {
      return result;
    }
    if (!a4 || (a4 & 7) != 0) {
      goto LABEL_76;
    }
    if (*(_DWORD *)a4 > 0x1Fu) {
      goto LABEL_77;
    }
    if (*(_DWORD *)a4 != 9) {
      return result;
    }
    if (*(unsigned __int8 *)(result + 124) > 1u) {
      goto LABEL_77;
    }
    if (*(unsigned char *)(result + 124))
    {
LABEL_30:
      *(unsigned char *)(result + 124) = 0;
      long long v8 = *(uint64_t (**)(void))(*(void *)result + 32);
      return v8();
    }
  }
  return result;
}

uint64_t sub_1000E18F4(uint64_t result, int a2, unsigned int a3, uint64_t a4, int a5)
{
  if ((a2 + 32) < 0x40) {
    return sub_1000E134C(result - 96, a2, a3, a4, a5);
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000E190C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v4 = v1;
  long long v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  long long v7 = v1;
  long long v8 = v1;
  long long v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xE00000000;
  LODWORD(v5) = 7;
  return sub_100090324((uint64_t)&v3) == 0;
}

uint64_t sub_1000E19AC(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    long long v4 = *(_OWORD *)(v2 + 180);
    *a2 = *(_OWORD *)(v2 + 164);
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }
  return result;
}

BOOL sub_1000E1A14(uint64_t a1, _OWORD *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v6 = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)long long v8 = v2;
  *(_OWORD *)&v8[16] = v2;
  *(_OWORD *)&v8[32] = v2;
  long long v9 = v2;
  uint64_t v7 = 0x1000000000;
  long long v3 = a2[1];
  *(_OWORD *)&v8[4] = *a2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v5 = *(void *)(a1 + 112);
  WORD1(v6) = 0;
  *(_DWORD *)long long v8 = 7;
  *(_OWORD *)&v8[20] = v3;
  return sub_100090324((uint64_t)&v5) == 0;
}

void sub_1000E1AC0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E1AD4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E1AEC(int a1, int a2)
{
  unsigned __int8 v6 = -86;
  uint64_t result = sub_1000DB62C();
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  uint64_t result = sub_1000DC7B8(result, a1, 0xFu, &v6);
  if (result)
  {
    if ((result & 7) == 0) {
    goto LABEL_11;
    }
  }
  if (v6 < 2u)
  {
    uint64_t v5 = 0;
    if (v6)
    {
      if (a2) {
        operator new();
      }
    }
    return v5;
  }
LABEL_12:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E1C48(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v2 = off_100129230;
  if (((v2 + 96) & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)uint64_t v2 = off_100128FE8;
  *(void *)(v2 + 96) = off_1001291C8;
  *(void *)(v2 + 104) = 0;
  *(_DWORD *)(v2 + 112) = a2;
  *(_DWORD *)(v2 + 116) = 0;
  *(unsigned char *)(v2 + 120) = 0;
  *(unsigned char *)(v2 + 144) = 0;
  *(unsigned char *)(v2 + 160) = 0;
  *(unsigned char *)(v2 + 176) = 0;
  *(unsigned char *)(v2 + 192) = 0;
  *(unsigned char *)(v2 + 208) = 0;
  *(unsigned char *)(v2 + 224) = 0;
  *(void *)(v2 + 232) = 0;
  *(_DWORD *)(v2 + 240) = 0;
  *(unsigned char *)(v2 + 244) = 0;
  *(void *)(v2 + 248) = 0;
  *(_DWORD *)(v2 + 256) = 0;
  *(unsigned char *)(v2 + 260) = 0;
  *(unsigned char *)(v2 + 296) = 0;
  *(_DWORD *)(v2 + 320) = 0;
  *(unsigned char *)(v2 + 324) = 0;
  *(void *)(v2 + 328) = 0;
  *(_DWORD *)(v2 + 336) = 0;
  *(unsigned char *)(v2 + 340) = 0;
  *(unsigned char *)(v2 + 346) = 0;
  *(_DWORD *)(v2 + 352) = 0;
  if (((v2 + 312) & 7) != 0
    || (*(void *)(v2 + 312) = 0, uint64_t v4 = sub_1000DC6C0(a2), (result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (sub_1000682F0((uint64_t *)result, v2 + 96, 0xEu, v4), (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v2 + 96, 0, v4);
    sub_1000E1DBC(v2);
    return v2;
  }
  return result;
}

void sub_1000E1DBC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v2 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  *(_DWORD *)(a1 + 116) = 1;
  if (*(unsigned __int8 *)(a1 + 120) >= 2u) {
    goto LABEL_20;
  }
  uint64_t v3 = v2;
  if (!*(unsigned char *)(a1 + 120))
  {
    sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevCaps(System)\n", *(_DWORD *)(a1 + 112));
    uint64_t v4 = v3;
    unsigned int v5 = 0;
    goto LABEL_17;
  }
  if (sub_1000E2238(a1))
  {
    if (*(unsigned __int8 *)(a1 + 144) <= 1u)
    {
      if (!*(unsigned char *)(a1 + 144))
      {
        sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevCaps(NmeaGps)\n", *(_DWORD *)(a1 + 112));
        uint64_t v4 = v3;
        unsigned int v5 = 1;
        goto LABEL_17;
      }
      goto LABEL_8;
    }
LABEL_20:
    __break(0x550Au);
LABEL_21:
    __break(0x5516u);
    return;
  }
LABEL_8:
  if (!sub_1000E2270(a1))
  {
LABEL_11:
    sub_1000E22A8(a1);
    return;
  }
  if (*(unsigned __int8 *)(a1 + 160) > 1u) {
    goto LABEL_20;
  }
  if (*(unsigned char *)(a1 + 160)) {
    goto LABEL_11;
  }
  sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevCaps(LocAssist)\n", *(_DWORD *)(a1 + 112));
  uint64_t v4 = v3;
  unsigned int v5 = 2;
LABEL_17:
  sub_10009B098(v4, v5);
}

void sub_1000E1EFC(uint64_t a1)
{
  if (!a1) {
    goto LABEL_12;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_12;
  }
  *(void *)a1 = off_100128FE8;
  char v2 = a1 + 96;
  *(void *)(a1 + 96) = off_1001291C8;
  uint64_t v3 = sub_100067E50();
  if (!v3
    || (v3 & 7) != 0
    || (sub_1000684B4((uint64_t *)v3, a1 + 96, 0), (uint64_t v4 = sub_100067E50()) == 0)
    || (v4 & 7) != 0
    || (sub_1000684B4((uint64_t *)v4, a1 + 96, 0xEu),
        free(*(void **)(a1 + 232)),
        free(*(void **)(a1 + 248)),
        (((_BYTE)a1 + 56) & 7) != 0)
    || (free(*(void **)(a1 + 312)), free(*(void **)(a1 + 328)), (v2 & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
  }
  else
  {
    sub_100033D54(a1);
  }
}

void sub_1000E1FE8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000E1EFC(a1);
  }
}

void sub_1000E1FFC(uint64_t a1)
{
  uint64_t v1 = a1 - 96;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000E1EFC(v1);
  }
}

uint64_t sub_1000E2010(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E1EFC(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2058(uint64_t a1)
{
  return sub_1000E2010(a1 - 96);
}

void sub_1000E2060(uint64_t a1, int a2)
{
  if (!a1) {
    goto LABEL_9;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 116) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  free(*(void **)(a1 + 232));
  *(void *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 244) = 0;
  free(*(void **)(a1 + 248));
  *(void *)(a1 + 248) = 0;
  *(_DWORD *)(a1 + 256) = 0;
  *(unsigned char *)(a1 + 260) = 0;
  if ((((_BYTE)a1 + 56) & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    free(*(void **)(a1 + 312));
    *(void *)(a1 + 312) = 0;
    *(unsigned char *)(a1 + 296) = 0;
    *(_DWORD *)(a1 + 320) = 0;
    *(unsigned char *)(a1 + 324) = 0;
    free(*(void **)(a1 + 328));
    *(void *)(a1 + 328) = 0;
    *(_DWORD *)(a1 + 336) = 0;
    *(unsigned char *)(a1 + 340) = 0;
    *(unsigned char *)(a1 + 346) = 0;
    *(_DWORD *)(a1 + 352) = 0;
    if (a2)
    {
      sub_1000E1DBC(a1);
    }
  }
}

_DWORD *sub_1000E2140(_DWORD *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[60] = 132;
    char v2 = malloc_type_malloc(0x84uLL, 0xAB6C833uLL);
    *((void *)v1 + 29) = v2;
    if (!v2) {
      v1[60] = 0;
    }
    v1[64] = 132;
    uint64_t result = malloc_type_malloc(0x84uLL, 0x9BCA16DEuLL);
    *((void *)v1 + 31) = result;
    if (!result) {
      v1[64] = 0;
    }
  }
  return result;
}

_DWORD *sub_1000E21B4(_DWORD *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (result[80] = 132, uint64_t result = malloc_type_malloc(0x84uLL, 0x61E6EA13uLL), ((unint64_t)(v1 + 78) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *((void *)v1 + 39) = result;
    if (!result) {
      v1[80] = 0;
    }
    v1[84] = 132;
    uint64_t result = malloc_type_malloc(0x84uLL, 0xB68EEAABuLL);
    *((void *)v1 + 41) = result;
    if (!result) {
      v1[84] = 0;
    }
  }
  return result;
}

uint64_t sub_1000E2238(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 136) >> 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2270(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 136) >> 2) & 1;
  }
  else {
    return 0;
  }
}

void sub_1000E22A8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v2 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  if (*(unsigned __int8 *)(a1 + 120) >= 2u) {
    goto LABEL_24;
  }
  uint64_t v3 = v2;
  if (!*(unsigned char *)(a1 + 120)) {
    sub_1000EE4F4(0, 4, "%s:%d !fSystemCapsValid\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TLocationDevice_IAP.cpp", 235);
  }
  *(_DWORD *)(a1 + 116) = 2;
  if (*(unsigned __int8 *)(a1 + 176) > 1u) {
    goto LABEL_24;
  }
  if (!*(unsigned char *)(a1 + 176))
  {
    sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevControl(System)\n", *(_DWORD *)(a1 + 112));
    uint64_t v4 = v3;
    unsigned int v5 = 0;
    goto LABEL_21;
  }
  if (sub_1000E2238(a1))
  {
    if (*(unsigned __int8 *)(a1 + 192) <= 1u)
    {
      if (!*(unsigned char *)(a1 + 192))
      {
        sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevControl(NmeaGps)\n", *(_DWORD *)(a1 + 112));
        uint64_t v4 = v3;
        unsigned int v5 = 1;
        goto LABEL_21;
      }
      goto LABEL_11;
    }
LABEL_24:
    __break(0x550Au);
LABEL_25:
    __break(0x5516u);
    return;
  }
LABEL_11:
  if (!sub_1000E2270(a1) || !sub_1000E2428(a1))
  {
LABEL_15:
    sub_1000E2460(a1);
    return;
  }
  if (*(unsigned __int8 *)(a1 + 208) > 1u) {
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 208)) {
    goto LABEL_15;
  }
  sub_1000EE4F4(0, 4, "(0x%08x) location accessory calling GetDevControl(LocAssist)\n", *(_DWORD *)(a1 + 112));
  uint64_t v4 = v3;
  unsigned int v5 = 2;
LABEL_21:
  sub_10009B37C(v4, v5);
}

uint64_t sub_1000E2428(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 160)) {
    return *(unsigned char *)(result + 168) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2460(uint64_t result)
{
  if (!result || (uint64_t v1 = (unsigned int *)result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(_DWORD *)(result + 116) = 3;
    sub_1000EE4F4(0, 4, "(0x%08x) location accessory ready\n", *(_DWORD *)(result + 112));
    uint64_t v2 = v1[28];
    uint64_t v3 = *(uint64_t (**)(unsigned int *, uint64_t, uint64_t, void))(*(void *)v1 + 32);
    return v3(v1, 983041, v2, 0);
  }
  return result;
}

uint64_t sub_1000E2500(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (v5 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), uint64_t result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  sub_100020A34(result, &v5);
  uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
  unsigned int v4 = *(_DWORD *)(v2 + 116);
  if (v4 < 8)
  {
    if (v4 != 3) {
      return 1;
    }
    if (a2 && (a2 & 7) == 0)
    {
      (*(void (**)(unint64_t, uint64_t, void, void))(*(void *)a2 + 16))(a2, 983041, *(unsigned int *)(v2 + 112), 0);
      return 1;
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E25D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E25E4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E25E4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return *(unsigned char *)(result + 128) & 1;
  }
  else {
    return 0;
  }
}

BOOL sub_1000E261C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B37C(v1, 0) == 0;
  }
  return result;
}

BOOL sub_1000E2658(BOOL result, int *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 176);
  if (v2 >= 2)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 176))
  {
    uint64_t v3 = *(void *)(result + 184) & 3;
    if (v3 == 3) {
      int v4 = 3;
    }
    else {
      int v4 = 0;
    }
    if (v3 == 2) {
      int v5 = 2;
    }
    else {
      int v5 = v4;
    }
    *a2 = v5;
  }
  return v2 != 0;
}

uint64_t sub_1000E26AC(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(result + 176) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
LABEL_10:
    __break(0x5516u);
    return result;
  }
  if (*(unsigned char *)(result + 176))
  {
    if (a2 <= 3)
    {
      sub_1000E273C(result, a2);
      uint64_t v3 = *(void *)(v2 + 184);
      v5[0] = 2863311530;
      v5[1] = v3;
      uint64_t v4 = sub_1000DC6C0(*(_DWORD *)(v2 + 112));
      return sub_10009B5B8(v4, 0, (uint64_t)v5) == 0;
    }
    goto LABEL_9;
  }
  return 0;
}

uint64_t sub_1000E273C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(result + 184);
  *(void *)(result + 184) = v2 & 0xFFFFFFFFFFFFFFFCLL;
  if (a2 >= 4)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }
  if (a2 == 2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFCLL | 2;
  }
  else
  {
    if (a2 != 3) {
      return result;
    }
    unint64_t v3 = v2 | 3;
  }
  *(void *)(result + 184) = v3;
  return result;
}

uint64_t sub_1000E2788(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E279C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E279C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E27D4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E27E8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E27E8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 2) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2820(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2834(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2834(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 3) & 1;
  }
  else {
    return 0;
  }
}

BOOL sub_1000E286C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B37C(v1, 0) == 0;
  }
  return result;
}

BOOL sub_1000E28A8(BOOL result, BOOL *a2, BOOL *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  unsigned int v3 = *(unsigned __int8 *)(result + 176);
  if (v3 >= 2) {
    goto LABEL_9;
  }
  if (!*(unsigned char *)(result + 176)) {
    return v3 != 0;
  }
  if ((((_BYTE)result - 72) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }
  char v4 = *(unsigned char *)(result + 184);
  *a2 = (v4 & 4) != 0;
  *a3 = (v4 & 8) != 0;
  unsigned int v3 = *(unsigned __int8 *)(result + 176);
  if (v3 <= 1) {
    return v3 != 0;
  }
LABEL_9:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E2904(uint64_t result, int a2, int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  if (*(unsigned __int8 *)(result + 176) >= 2u)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 176)) {
    return 0;
  }
  if ((((_BYTE)result - 72) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t v3 = 4;
  if (!a2) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 8;
  if (!a3) {
    uint64_t v4 = 0;
  }
  unint64_t v5 = v4 | v3 | *(void *)(result + 184) & 0xFFFFFFFFFFFFFFF3;
  *(void *)(result + 184) = v5;
  v7[0] = 2863311530;
  v7[1] = v5;
  uint64_t v6 = sub_1000DC6C0(*(_DWORD *)(result + 112));
  return sub_10009B5B8(v6, 0, (uint64_t)v7) == 0;
}

uint64_t sub_1000E29AC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2238(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E29C0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E29D4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E29D4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 144) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 144)) {
    return *(unsigned char *)(result + 152) & 1;
  }
  else {
    return 0;
  }
}

BOOL sub_1000E2A0C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B37C(v1, 1u) == 0;
  }
  return result;
}

BOOL sub_1000E2A48(BOOL result, unsigned char *a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 192);
  if (v2 >= 2) {
    goto LABEL_9;
  }
  if (!*(unsigned char *)(result + 192)) {
    return v2 != 0;
  }
  if ((((_BYTE)result - 56) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }
  *a2 = *(unsigned char *)(result + 200) & 1;
  unsigned int v2 = *(unsigned __int8 *)(result + 192);
  if (v2 <= 1) {
    return v2 != 0;
  }
LABEL_9:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E2A9C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(result + 192) >= 2u)
  {
LABEL_10:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 192))
  {
    if ((((_BYTE)result - 56) & 7) == 0)
    {
      unint64_t v2 = *(void *)(result + 200) & 0xFFFFFFFFFFFFFFFELL | a2;
      *(void *)(result + 200) = v2;
      v4[0] = 0x1AAAAAAAALL;
      v4[1] = v2;
      uint64_t v3 = sub_1000DC6C0(*(_DWORD *)(result + 112));
      return sub_10009B5B8(v3, 1u, (uint64_t)v4) == 0;
    }
    goto LABEL_9;
  }
  return 0;
}

BOOL sub_1000E2B30(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 1u, 0, 0) == 0;
  }
  return result;
}

uint64_t sub_1000E2B74(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }
  if (*(unsigned __int8 *)(result + 224) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 224)) {
    return 0;
  }
  unint64_t v5 = *(const char **)(result + 232);
  if (strlen(v5) >= a3) {
    return 0;
  }
  strlcpy(a2, v5, a3);
  return 1;
}

BOOL sub_1000E2BF4(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x5500u);
  }
  *(unsigned char *)(a1 + 224) = 0;
  *(void *)&long long v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int16 v7 = -21846;
  *(_OWORD *)&v9[6] = v3;
  *(void *)&v15[13] = 0xAAAAAAAAAAAAAAAALL;
  long long v14 = v3;
  *(_OWORD *)int v15 = v3;
  long long v12 = v3;
  long long v13 = v3;
  long long v10 = v3;
  long long v11 = v3;
  uint64_t v8 = 1;
  *(void *)long long v9 = __s;
  int v4 = strlen(__s);
  if (v4 == -1) {
    goto LABEL_6;
  }
  *(_DWORD *)&v9[8] = v4 + 1;
  uint64_t v5 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v5, 1u, 0, (uint64_t)&v7) == 0;
}

BOOL sub_1000E2CC0(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 1u, 0x80u, 0) == 0;
  }
  return result;
}

uint64_t sub_1000E2D04(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }
  if (*(unsigned __int8 *)(result + 244) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 244)) {
    return 0;
  }
  uint64_t v5 = *(const char **)(result + 248);
  if (strlen(v5) >= a3) {
    return 0;
  }
  strlcpy(a2, v5, a3);
  return 1;
}

BOOL sub_1000E2D84(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    __break(0x5500u);
  }
  *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v11[13] = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v10[16] = v4;
  *(_OWORD *)long long v11 = v4;
  v9[4] = v4;
  *(_OWORD *)long long v10 = v4;
  v9[2] = v4;
  v9[3] = v4;
  v9[0] = v4;
  v9[1] = v4;
  *(void *)((char *)v9 + 2) = 0x8000000001;
  int v5 = strlen(__s);
  size_t v6 = (v5 + 1);
  if (v5 == -1) {
    goto LABEL_9;
  }
  *(_DWORD *)&v10[13] = v5 + 1;
  if (v6 > 0x53) {
    return 0;
  }
  memcpy((void *)((unint64_t)v9 | 0xA), __s, v6);
  uint64_t v8 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v8, 1u, 0x80u, (uint64_t)v9) == 0;
}

uint64_t sub_1000E2E70(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2270(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2E84(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2428(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2E98(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2EAC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2EAC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2EE4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2EF8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2EF8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 2) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2F30(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2F44(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2F44(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 3) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000E2F7C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E2F90(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E2F90(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 4) & 1;
  }
  else {
    return 0;
  }
}

BOOL sub_1000E2FC8(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B37C(v1, 2u) == 0;
  }
  return result;
}

BOOL sub_1000E3004(BOOL result, _DWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 208);
  if (v2 < 2)
  {
    if (!*(unsigned char *)(result + 208)) {
      return v2 != 0;
    }
    *a2 = 0;
    if (((result + 216) & 7) == 0)
    {
      if (*(unsigned char *)(result + 216)) {
        *a2 = 1;
      }
      return v2 != 0;
    }
    goto LABEL_9;
  }
LABEL_10:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E3054(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(result + 208) >= 2u)
  {
LABEL_10:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 208))
  {
    if ((((_BYTE)result - 40) & 7) == 0)
    {
      unint64_t v2 = *(void *)(result + 216) & 0xFFFFFFFFFFFFFFFELL | a2 & 1;
      *(void *)(result + 216) = v2;
      v4[0] = 0x2AAAAAAAALL;
      v4[1] = v2;
      uint64_t v3 = sub_1000DC6C0(*(_DWORD *)(result + 112));
      return sub_10009B5B8(v3, 2u, (uint64_t)v4) == 0;
    }
    goto LABEL_9;
  }
  return 0;
}

BOOL sub_1000E30E8(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 2u, 0, 0) == 0;
  }
  return result;
}

BOOL sub_1000E312C(BOOL result, _OWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 260);
    if (v2 < 2)
    {
      if (!*(unsigned char *)(result + 260)) {
        return v2 != 0;
      }
      long long v3 = *(_OWORD *)(result + 280);
      *a2 = *(_OWORD *)(result + 264);
      a2[1] = v3;
      unsigned int v2 = *(unsigned __int8 *)(result + 260);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }
    __break(0x550Au);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000E3174(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
LABEL_15:
  }
    __break(0x5516u);
  *(unsigned char *)(a1 + 260) = 0;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v16[13] = 0xAAAAAAAAAAAAAAAALL;
  long long v15 = v2;
  *(_OWORD *)float v16 = v2;
  long long v13 = v2;
  long long v14 = v2;
  long long v11 = v2;
  long long v12 = v2;
  long long v9 = v2;
  long long v10 = v2;
  *(void *)((char *)&v9 + 2) = 2;
  WORD5(v9) = *(_WORD *)a2;
  HIDWORD(v9) = *(_DWORD *)(a2 + 4);
  double v3 = *(double *)(a2 + 8) * 1000000.0;
  BOOL v4 = v3 > -2147483650.0 && v3 < 2147483650.0;
  if (!v4
    || ((LODWORD(v10) = (int)v3, double v5 = *(double *)(a2 + 16) * 1000000.0, v5 > -2147483650.0)
      ? (BOOL v6 = v5 < 2147483650.0)
      : (BOOL v6 = 0),
        !v6))
  {
    __break(0x5505u);
    goto LABEL_15;
  }
  DWORD1(v10) = (int)v5;
  WORD4(v10) = *(_WORD *)(a2 + 24);
  uint64_t v7 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v7, 2u, 0, (uint64_t)&v9) == 0;
}

BOOL sub_1000E328C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 2u, 1u, 0) == 0;
  }
  return result;
}

uint64_t sub_1000E32D0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (*(unsigned __int8 *)(result + 296) >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 296)) {
    return 0;
  }
  long long v2 = (_DWORD *)(result + 304);
  if (((result + 304) & 7) != 0) {
    goto LABEL_11;
  }
  if (*v2 > *(_DWORD *)a2) {
    return 0;
  }
  *(_DWORD *)a2 = *v2;
  if (((result + 312) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }
  memcpy(*(void **)(a2 + 8), *(const void **)(result + 312), *v2);
  return 1;
}

BOOL sub_1000E3350(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(unsigned char *)(a1 + 296) = 0;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)double v5 = v2;
  *(_OWORD *)&v5[16] = v2;
  *(void *)&v11[13] = 0xAAAAAAAAAAAAAAAALL;
  long long v10 = v2;
  *(_OWORD *)long long v11 = v2;
  long long v8 = v2;
  long long v9 = v2;
  long long v6 = v2;
  long long v7 = v2;
  *(void *)&void v5[2] = 0x100000002;
  *(_DWORD *)&v5[18] = *(_DWORD *)a2;
  *(void *)&v5[10] = *(void *)(a2 + 8);
  uint64_t v3 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v3, 2u, 1u, (uint64_t)v5) == 0;
}

BOOL sub_1000E3404(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 2u, 2u, 0) == 0;
  }
  return result;
}

uint64_t sub_1000E3448(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }
  if (*(unsigned __int8 *)(result + 324) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }
  if (!*(unsigned char *)(result + 324)) {
    return 0;
  }
  double v5 = *(const char **)(result + 328);
  if (strlen(v5) >= a3) {
    return 0;
  }
  strlcpy(a2, v5, a3);
  return 1;
}

BOOL sub_1000E34C8(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x5500u);
  }
  *(unsigned char *)(a1 + 324) = 0;
  *(void *)&long long v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int16 v7 = -21846;
  *(_OWORD *)&v9[6] = v3;
  *(void *)&v15[13] = 0xAAAAAAAAAAAAAAAALL;
  long long v14 = v3;
  *(_OWORD *)long long v15 = v3;
  long long v12 = v3;
  long long v13 = v3;
  long long v10 = v3;
  long long v11 = v3;
  uint64_t v8 = 0x200000002;
  *(void *)long long v9 = __s;
  int v4 = strlen(__s);
  if (v4 == -1) {
    goto LABEL_6;
  }
  *(_DWORD *)&v9[8] = v4 + 1;
  uint64_t v5 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v5, 2u, 2u, (uint64_t)&v7) == 0;
}

BOOL sub_1000E3590(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 2u, 3u, 0) == 0;
  }
  return result;
}

BOOL sub_1000E35D4(BOOL result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 340);
    if (v2 < 2)
    {
      if (!*(unsigned char *)(result + 340)) {
        return v2 != 0;
      }
      *a2 = *(_DWORD *)(result + 342);
      unsigned int v2 = *(unsigned __int8 *)(result + 340);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }
    __break(0x550Au);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000E361C(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  *(unsigned char *)(a1 + 340) = 0;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v12[13] = 0xAAAAAAAAAAAAAAAALL;
  void v11[6] = v2;
  *(_OWORD *)long long v12 = v2;
  v11[4] = v2;
  v11[5] = v2;
  _DWORD v11[2] = v2;
  v11[3] = v2;
  v11[0] = v2;
  v11[1] = v2;
  *(void *)((char *)v11 + 2) = 0x300000002;
  uint64_t v3 = 3600000 * *a2;
  if (v3 != (int)v3) {
    goto LABEL_9;
  }
  int v4 = 60000 * *((unsigned __int8 *)a2 + 2);
  BOOL v5 = __OFADD__(v3, v4);
  int v6 = v3 + v4;
  if (v5 || (v7 = 1000 * *((unsigned __int8 *)a2 + 3), v5 = __OFADD__(v6, v7), int v8 = v6 + v7, v5))
  {
    __break(0x5500u);
LABEL_8:
    __break(0x5516u);
LABEL_9:
    __break(0x550Cu);
  }
  *(_DWORD *)((char *)v11 + 10) = v8;
  uint64_t v9 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v9, 2u, 3u, (uint64_t)v11) == 0;
}

BOOL sub_1000E370C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = sub_1000DC6C0(*(_DWORD *)(result + 112));
    return sub_10009B8AC(v1, 2u, 4u, 0) == 0;
  }
  return result;
}

BOOL sub_1000E3750(BOOL result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 346);
    if (v2 < 2)
    {
      if (!*(unsigned char *)(result + 346)) {
        return v2 != 0;
      }
      *a2 = *(_DWORD *)(result + 348);
      unsigned int v2 = *(unsigned __int8 *)(result + 346);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }
    __break(0x550Au);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000E3794(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  *(unsigned char *)(a1 + 346) = 0;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v12[13] = 0xAAAAAAAAAAAAAAAALL;
  void v11[6] = v2;
  *(_OWORD *)long long v12 = v2;
  v11[4] = v2;
  v11[5] = v2;
  _DWORD v11[2] = v2;
  v11[3] = v2;
  v11[0] = v2;
  v11[1] = v2;
  *(void *)((char *)v11 + 2) = 0x400000002;
  uint64_t v3 = 3600000 * *a2;
  if (v3 != (int)v3) {
    goto LABEL_9;
  }
  int v4 = 60000 * *((unsigned __int8 *)a2 + 2);
  BOOL v5 = __OFADD__(v3, v4);
  int v6 = v3 + v4;
  if (v5 || (v7 = 1000 * *((unsigned __int8 *)a2 + 3), v5 = __OFADD__(v6, v7), int v8 = v6 + v7, v5))
  {
    __break(0x5500u);
LABEL_8:
    __break(0x5516u);
LABEL_9:
    __break(0x550Cu);
  }
  *(_DWORD *)((char *)v11 + 10) = v8;
  uint64_t v9 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v9, 2u, 4u, (uint64_t)v11) == 0;
}

BOOL sub_1000E3884(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&v6[13] = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v5[6] = v2;
  *(_OWORD *)int v6 = v2;
  v5[4] = v2;
  v5[5] = v2;
  void v5[2] = v2;
  void v5[3] = v2;
  v5[0] = v2;
  v5[1] = v2;
  *(void *)((char *)v5 + 2) = 0x500000002;
  WORD5(v5[0]) = *(_WORD *)a2;
  HIDWORD(v5[0]) = *(_DWORD *)(a2 + 4);
  uint64_t v3 = sub_1000DC6C0(*(_DWORD *)(a1 + 112));
  return sub_10009BC18(v3, 2u, 5u, (uint64_t)v5) == 0;
}

void sub_1000E3934(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_150;
  }
  if ((a2 + 32) >= 0x40) {
    goto LABEL_151;
  }
  if (!a2)
  {
    if (!a4 || a3 || a5 != 48) {
      return;
    }
    if ((a4 & 7) == 0)
    {
      if (*(_DWORD *)a4 > 0x1Fu) {
        goto LABEL_151;
      }
      unsigned int v14 = *(_DWORD *)a4 - 1;
      if (v14 <= 0xC && ((0x153Fu >> v14) & 1) != 0)
      {
        sub_1000E2060(a1, (0xEC0u >> v14) & 1);
      }
      return;
    }
LABEL_150:
    __break(0x5516u);
    goto LABEL_151;
  }
  if (a2 != 14 || a3 || a5 != 152) {
    return;
  }
  if (!a4 || (a4 & 7) != 0 || ((a4 + 12) & 3) != 0) {
    goto LABEL_150;
  }
  unsigned int v6 = *(_DWORD *)(a4 + 12);
  if (v6 > 0xFF) {
    goto LABEL_151;
  }
  switch(v6)
  {
    case 0u:
      if (((a4 + 16) & 7) != 0) {
        goto LABEL_150;
      }
      if (*(unsigned char *)(a4 + 16))
      {
        unsigned int v15 = *(_DWORD *)(a1 + 116);
        if (v15 <= 7)
        {
          if (v15 != 2)
          {
            if (v15 != 1 || *(unsigned char *)(a4 + 17) != 1) {
              goto LABEL_117;
            }
            int v16 = *(_DWORD *)(a1 + 352);
            BOOL v17 = __CFADD__(v16, 1);
            unsigned int v18 = v16 + 1;
            if (!v17)
            {
              *(_DWORD *)(a1 + 352) = v18;
              if (v18 > 4) {
                goto LABEL_117;
              }
              goto LABEL_89;
            }
            goto LABEL_152;
          }
          if (*(unsigned char *)(a4 + 17) != 3) {
            goto LABEL_117;
          }
          int v31 = *(_DWORD *)(a1 + 352);
          BOOL v17 = __CFADD__(v31, 1);
          unsigned int v32 = v31 + 1;
          if (!v17)
          {
            *(_DWORD *)(a1 + 352) = v32;
            if (v32 <= 4)
            {
              sub_1000E22A8(a1);
              return;
            }
LABEL_117:
            long long v13 = *(void (**)(void))(*(void *)a1 + 32);
            goto LABEL_147;
          }
LABEL_152:
          __break(0x5500u);
          goto LABEL_153;
        }
LABEL_151:
        __break(0x550Au);
        goto LABEL_152;
      }
      long long v13 = *(void (**)(void))(*(void *)a1 + 32);
      goto LABEL_147;
    case 2u:
      if ((((_BYTE)a4 + 16) & 7) != 0 || ((a4 + 20) & 3) != 0) {
        goto LABEL_150;
      }
      unsigned int v19 = *(_DWORD *)(a4 + 20);
      if (v19 > 3) {
        goto LABEL_151;
      }
      if (v19 == 2)
      {
        if (((a4 + 24) & 7) == 0)
        {
          *(void *)(a1 + 168) = *(void *)(a4 + 24);
          *(unsigned char *)(a1 + 160) = 1;
          sub_1000E21B4((_DWORD *)a1);
          goto LABEL_89;
        }
      }
      else if (v19 == 1)
      {
        if (((a4 + 24) & 7) == 0)
        {
          *(void *)(a1 + 152) = *(void *)(a4 + 24);
          *(unsigned char *)(a1 + 144) = 1;
          sub_1000E2140((_DWORD *)a1);
          goto LABEL_89;
        }
      }
      else
      {
        if (v19) {
          return;
        }
        if ((((_BYTE)a4 + 24) & 7) == 0 && (((_BYTE)a4 + 32) & 7) == 0)
        {
          *(void *)(a1 + 128) = *(void *)(a4 + 32);
          if (((a4 + 40) & 7) == 0)
          {
            *(void *)(a1 + 136) = *(void *)(a4 + 40);
            *(unsigned char *)(a1 + 120) = 1;
LABEL_89:
            sub_1000E1DBC(a1);
            return;
          }
        }
      }
      goto LABEL_150;
    case 4u:
      if ((((_BYTE)a4 + 16) & 7) != 0 || ((a4 + 20) & 3) != 0) {
        goto LABEL_150;
      }
      unsigned int v20 = *(_DWORD *)(a4 + 20);
      if (v20 > 3) {
        goto LABEL_151;
      }
      if (v20 == 2)
      {
        if (((a4 + 24) & 7) == 0)
        {
          *(void *)(a1 + 216) = *(void *)(a4 + 24);
          *(unsigned char *)(a1 + 208) = 1;
          unsigned int v23 = *(_DWORD *)(a1 + 116);
          if (v23 <= 7)
          {
            if (v23 == 2) {
              sub_1000E22A8(a1);
            }
            long long v13 = *(void (**)(void))(*(void *)a1 + 32);
            goto LABEL_147;
          }
          goto LABEL_151;
        }
      }
      else if (v20 == 1)
      {
        if (((a4 + 24) & 7) == 0)
        {
          *(void *)(a1 + 200) = *(void *)(a4 + 24);
          *(unsigned char *)(a1 + 192) = 1;
          unsigned int v24 = *(_DWORD *)(a1 + 116);
          if (v24 <= 7)
          {
            if (v24 == 2) {
              sub_1000E22A8(a1);
            }
            long long v13 = *(void (**)(void))(*(void *)a1 + 32);
            goto LABEL_147;
          }
          goto LABEL_151;
        }
      }
      else
      {
        if (v20) {
          return;
        }
        if (((a4 + 24) & 7) == 0)
        {
          *(void *)(a1 + 184) = *(void *)(a4 + 24);
          *(unsigned char *)(a1 + 176) = 1;
          unsigned int v21 = *(_DWORD *)(a1 + 116);
          if (v21 <= 7)
          {
            if (v21 == 2) {
              sub_1000E22A8(a1);
            }
            (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)a1 + 32))(a1, 983044, *(unsigned int *)(a1 + 112), 0);
            long long v13 = *(void (**)(void))(*(void *)a1 + 32);
            goto LABEL_147;
          }
          goto LABEL_151;
        }
      }
      goto LABEL_150;
    case 7u:
    case 9u:
      if (((_BYTE)a4 + 16) & 7) != 0 || ((a4 + 18)) {
        goto LABEL_150;
      }
      unsigned int v7 = *(_DWORD *)(a4 + 18);
      if (v7 > 3) {
        goto LABEL_151;
      }
      if (v7 == 2)
      {
        if (((a4 + 22) & 1) == 0)
        {
          unsigned int v22 = *(_DWORD *)(a4 + 22);
          if (v22 <= 0xFF)
          {
            switch(v22)
            {
              case 0u:
                if ((a4 + 26)) {
                  goto LABEL_150;
                }
                if (((a1 + 264) & 7) != 0) {
                  goto LABEL_150;
                }
                *(_WORD *)(a1 + 264) = *(_WORD *)(a4 + 26);
                if ((a4 + 28)) {
                  goto LABEL_150;
                }
                if (((a1 + 268) & 3) != 0) {
                  goto LABEL_150;
                }
                *(_DWORD *)(a1 + 268) = *(_DWORD *)(a4 + 28);
                if ((a4 + 32)) {
                  goto LABEL_150;
                }
                if (((a1 + 272) & 7) != 0) {
                  goto LABEL_150;
                }
                *(double *)(a1 + 272) = (double)*(int *)(a4 + 32) / 1000000.0;
                if ((a4 + 36)) {
                  goto LABEL_150;
                }
                if (((a1 + 280) & 7) != 0) {
                  goto LABEL_150;
                }
                *(double *)(a1 + 280) = (double)*(int *)(a4 + 36) / 1000000.0;
                if (((a4 + 40) & 1) != 0 || (((_BYTE)a1 + 32) & 7) != 0) {
                  goto LABEL_150;
                }
                *(_WORD *)(a1 + 288) = *(_WORD *)(a4 + 40);
                *(unsigned char *)(a1 + 260) = 1;
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                goto LABEL_147;
              case 1u:
                BOOL v33 = (const void **)(a4 + 26);
                if ((a4 + 26) & 1) != 0 || ((a4 + 34)) {
                  goto LABEL_150;
                }
                size_t v34 = *(unsigned int *)(a4 + 34);
                if (v34 <= *(_DWORD *)(a1 + 320)) {
                  goto LABEL_124;
                }
                int v35 = malloc_type_malloc(*(unsigned int *)(a4 + 34), 0xDCC14D81uLL);
                if (!v35) {
                  goto LABEL_124;
                }
                if ((((_BYTE)a1 + 56) & 7) != 0) {
                  goto LABEL_150;
                }
                uint64_t v36 = *(void **)(a1 + 312);
                *(void *)(a1 + 312) = v35;
                *(_DWORD *)(a1 + 320) = v34;
                free(v36);
LABEL_124:
                if (v34 > *(_DWORD *)(a1 + 320) || !*v33) {
                  return;
                }
                if ((((_BYTE)a1 + 48) & 7) != 0) {
                  goto LABEL_150;
                }
                *(_DWORD *)(a1 + 304) = v34;
                if ((((_BYTE)a1 + 56) & 7) != 0) {
                  goto LABEL_150;
                }
                memcpy(*(void **)(a1 + 312), *v33, v34);
                *(unsigned char *)(a1 + 296) = 1;
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                break;
              case 2u:
                uint64_t v37 = (const void **)(a4 + 26);
                if ((a4 + 26) & 1) != 0 || ((a4 + 34)) {
                  goto LABEL_150;
                }
                size_t v38 = *(unsigned int *)(a4 + 34);
                if (v38 > *(_DWORD *)(a1 + 336))
                {
                  int v39 = malloc_type_malloc(*(unsigned int *)(a4 + 34), 0x3CAF8119uLL);
                  if (v39)
                  {
                    uint64_t v40 = *(void **)(a1 + 328);
                    *(void *)(a1 + 328) = v39;
                    *(_DWORD *)(a1 + 336) = v38;
                    free(v40);
                  }
                }
                if (v38 > *(_DWORD *)(a1 + 336) || !*v37) {
                  return;
                }
                memcpy(*(void **)(a1 + 328), *v37, v38);
                *(unsigned char *)(a1 + 324) = 1;
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                goto LABEL_147;
              case 3u:
                uint64_t v41 = (_DWORD *)(a4 + 26);
                if ((a4 + 26)) {
                  goto LABEL_150;
                }
                if ((a1 + 342)) {
                  goto LABEL_150;
                }
                *(_WORD *)(a1 + 342) = *v41 / 0x36EE80u - 24 * ((2731 * (*v41 / 0x36EE80u)) >> 16);
                if ((a1 + 344)) {
                  goto LABEL_150;
                }
                *(unsigned char *)(a1 + 344) = *v41 / 0xEA60u - 60 * ((71582789 * (unint64_t)(*v41 / 0xEA60u)) >> 32);
                *(unsigned char *)(a1 + 345) = *v41 / 0x3E8u - 60 * ((71582789 * (unint64_t)(*v41 / 0x3E8u)) >> 32);
                *(unsigned char *)(a1 + 340) = 1;
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                goto LABEL_147;
              case 4u:
                CFDataRef v42 = (_DWORD *)(a4 + 26);
                if ((a4 + 26)) {
                  goto LABEL_150;
                }
                if ((((_BYTE)a1 + 92) & 3) != 0) {
                  goto LABEL_150;
                }
                *(_WORD *)(a1 + 348) = *v42 / 0x36EE80u - 24 * ((2731 * (*v42 / 0x36EE80u)) >> 16);
                if ((a1 + 350)) {
                  goto LABEL_150;
                }
                *(unsigned char *)(a1 + 350) = *v42 / 0xEA60u - 60 * ((71582789 * (unint64_t)(*v42 / 0xEA60u)) >> 32);
                *(unsigned char *)(a1 + 351) = *v42 / 0x3E8u - 60 * ((71582789 * (unint64_t)(*v42 / 0x3E8u)) >> 32);
                *(unsigned char *)(a1 + 346) = 1;
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                goto LABEL_147;
              case 5u:
                long long v13 = *(void (**)(void))(*(void *)a1 + 32);
                goto LABEL_147;
              default:
                return;
            }
            goto LABEL_147;
          }
          goto LABEL_151;
        }
        goto LABEL_150;
      }
      if (v7 != 1) {
        return;
      }
      if ((a4 + 22)) {
        goto LABEL_150;
      }
      unsigned int v8 = *(_DWORD *)(a4 + 22);
      if (v8 > 0xFF) {
        goto LABEL_151;
      }
      if (v8 == 128)
      {
        uint64_t v25 = (const void *)(a4 + 26);
        if (((a4 + 26) & 1) == 0)
        {
          size_t v26 = *(unsigned int *)(a4 + 109);
          unsigned int v27 = v26 + 1;
          if (v26 == -1) {
            goto LABEL_152;
          }
          if (v27 > *(_DWORD *)(a1 + 256))
          {
            unsigned int v28 = malloc_type_malloc((v26 + 1), 0x8B450625uLL);
            if (v28)
            {
              uint64_t v29 = *(void **)(a1 + 248);
              *(void *)(a1 + 248) = v28;
              *(_DWORD *)(a1 + 256) = v27;
              free(v29);
            }
          }
          if (v27 > *(_DWORD *)(a1 + 240)) {
            return;
          }
          memcpy(*(void **)(a1 + 248), v25, v26);
          uint64_t v30 = *(void *)(a1 + 248);
          if (__CFADD__(v30, v26))
          {
LABEL_153:
            __break(0x5513u);
            JUMPOUT(0x1000E43D8);
          }
          if (v30)
          {
            *(unsigned char *)(v30 + v26) = 0;
            *(unsigned char *)(a1 + 244) = 1;
            long long v13 = *(void (**)(void))(*(void *)a1 + 32);
            goto LABEL_147;
          }
        }
        goto LABEL_150;
      }
      if (v8) {
        return;
      }
      uint64_t v9 = (const void **)(a4 + 26);
      if ((a4 + 26) & 1) != 0 || ((a4 + 34)) {
        goto LABEL_150;
      }
      size_t v10 = *(unsigned int *)(a4 + 34);
      if (v10 > *(_DWORD *)(a1 + 240))
      {
        long long v11 = malloc_type_malloc(*(unsigned int *)(a4 + 34), 0xA8D8CFD1uLL);
        if (v11)
        {
          long long v12 = *(void **)(a1 + 232);
          *(void *)(a1 + 232) = v11;
          *(_DWORD *)(a1 + 240) = v10;
          free(v12);
        }
      }
      if (v10 <= *(_DWORD *)(a1 + 240) && *v9)
      {
        memcpy(*(void **)(a1 + 232), *v9, v10);
        *(unsigned char *)(a1 + 224) = 1;
        long long v13 = *(void (**)(void))(*(void *)a1 + 32);
LABEL_147:
        v13();
      }
      return;
    default:
      return;
  }
}

void sub_1000E4418(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000E3934(a1 - 96, a2, a3, a4, a5);
  }
}

void sub_1000E4430(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E4444(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E4458()
{
  if (qword_10013C760 != -1) {
    dispatch_once(&qword_10013C760, &stru_100129418);
  }
  return qword_10013C758;
}

void sub_1000E449C(id a1)
{
}

uint64_t sub_1000E44E8(uint64_t result)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v1 = off_1001295C0;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_8;
  }
  *(void *)uint64_t v1 = off_100129448;
  *(void *)(v1 + 96) = off_100129540;
  *(void *)(v1 + 104) = 0;
  uint64_t result = v1 + 128;
  if (((v1 + 128) & 7) != 0
    || (sub_10000C500((void *)result),
        *(unsigned char *)(v1 + 152) = 0,
        pthread_mutex_init((pthread_mutex_t *)(v1 + 160), 0),
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v1 + 96, 1u, 0);
    return v1;
  }
  return result;
}

uint64_t sub_1000E45D0(uint64_t result)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)uint64_t result = off_100129448;
  char v2 = result + 96;
  *(void *)(result + 96) = off_100129540;
  uint64_t result = sub_100067E50();
  if (!result
    || (result & 7) != 0
    || (sub_1000684B4((uint64_t *)result, v1 + 96, 1u),
        pthread_mutex_destroy((pthread_mutex_t *)(v1 + 160)),
        uint64_t result = v1 + 128,
        ((v1 + 128) & 7) != 0)
    || (uint64_t result = sub_100057E9C(result), (v2 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000E468C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E45D0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E46A0(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000E45D0(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E46B4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E45D0(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E46FC(uint64_t a1)
{
  return sub_1000E46B4(a1 - 96);
}

uint64_t sub_1000E4704(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (unint64_t v3 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_100020A34(result, &v3);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
    return 1;
  }
  return result;
}

uint64_t sub_1000E476C(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v7 = a2,
        unint64_t v3 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        int v4 = (uint64_t *)(v2 + 8),
        ((v2 + 8) & 7) != 0)
    || (uint64_t result = sub_100020D64(v2 + 8, &v7), v5 = v2 + 16, (v5 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v6 = result;
    if (v5 != result) {
      sub_10000BC30(v4, result);
    }
    pthread_mutex_unlock(v3);
    return v5 != v6;
  }
  return result;
}

uint64_t sub_1000E480C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = (unsigned char *)result, (result & 7) != 0) || ((result + 128) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v12 = 2;
    sub_1000E4954(result + 128, &v12);
    *(unsigned char *)(v4 + 16) = -1;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(unsigned char *)(v5 + 17) = -1;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v6 + 20) = 1;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(unsigned char *)(v7 + 36) = 0;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v8 + 12) = 0;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v9 + 8) = 3;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *size_t v10 = 2;
    unsigned int v12 = 2;
    sub_1000E4954((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v11 + 4) = 0;
    v2[152] = 1;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)v2 + 32))(v2, 720897, 2, a2);
    return 1;
  }
  return result;
}

void sub_1000E4954(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000E5BF0(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
    if ((v5 & 7) != 0 || !v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000E5D04((_DWORD *)a1, a2, (uint64_t)v7);
    if (((uint64_t)v7[0] & 7) != 0) {
      goto LABEL_11;
    }
    sub_10000B634(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0;
    sub_100058424(v7, 0);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if ((v5 & 7) != 0 || (((_BYTE)v5 + 28) & 3) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_1000E4A38(unsigned char *a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  unsigned int v15 = a3;
  if (a1 && (a1 & 7) == 0 && ((unint64_t)(a1 + 128) & 7) == 0)
  {
    sub_1000E4954((uint64_t)(a1 + 128), &v15);
    *(unsigned char *)(v6 + 16) = -1;
    sub_1000E4954((uint64_t)(a1 + 128), &v15);
    *(unsigned char *)(v7 + 17) = -1;
    sub_1000E4954((uint64_t)(a1 + 128), &v15);
    *(_DWORD *)(v8 + 20) = 0;
    sub_1000E4954((uint64_t)(a1 + 128), &v15);
    *(unsigned char *)(v9 + 36) = 0;
    sub_1000E4954((uint64_t)(a1 + 128), &v15);
    *(_DWORD *)(v10 + 12) = 0;
    if (a4 < 0x10)
    {
      sub_1000E4954((uint64_t)(a1 + 128), &v15);
      *(_DWORD *)(v11 + 8) = 2 * (a4 - 3 < 2);
      unsigned int v12 = v15;
      if (v15 <= 0xFF)
      {
        sub_1000E4954((uint64_t)(a1 + 128), &v15);
        *long long v13 = v12;
        sub_1000E4954((uint64_t)(a1 + 128), &v15);
        *(_DWORD *)(v14 + 4) = a4;
        a1[152] = 1;
        if (v15 <= 0xFF)
        {
          (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 32))(a1, 720897);
          return;
        }
      }
    }
    __break(0x550Au);
  }
  __break(0x5516u);
}

uint64_t sub_1000E4B90(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (result += 128, ((v2 + 128) & 7) != 0)
    || (unsigned int v4 = 2, result = sub_1000E5DAC(result, &v4), (((_BYTE)v2 - 112) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(v2 + 152) = *(void *)(v2 + 144) != 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v2 + 32))(v2, 720901, 2, a2);
    return 1;
  }
  return result;
}

uint64_t sub_1000E4C40(uint64_t result, uint64_t a2, unsigned int a3)
{
  unsigned int v4 = a3;
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (result += 128, ((v3 + 128) & 7) != 0)
    || (uint64_t result = sub_1000E5DAC(result, &v4), (((_BYTE)v3 - 112) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(v3 + 152) = *(void *)(v3 + 144) != 0;
    if (v4 < 0x100)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 32))(v3, 720901);
      return 1;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E4CF8(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)result + 152))(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v2 + 32))(v2, 720898, a2, 0);
    return 1;
  }
  return result;
}

uint64_t sub_1000E4D90(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  result += 128;
  if (((v2 + 128) & 7) != 0) {
    goto LABEL_11;
  }
  unsigned int v5 = 2;
  sub_1000E4954(result, &v5);
  if (!*(_DWORD *)(v4 + 12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 152))(v2, a2);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v2 + 32))(v2, 720899, a2, 0);
  uint64_t result = sub_10003E5D0();
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 424))(result)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 200))(v2, a2);
    }
    return 1;
  }
  return result;
}

uint64_t sub_1000E4ED0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)result + 32))(result, 720900, a2, 0);
    return 1;
  }
  return result;
}

uint64_t sub_1000E4F2C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = (unsigned int *)result, (result & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }
  if (a3 < 0x100)
  {
    *(_DWORD *)(result + 112) = a3;
    char v6 = result + 112;
    *(void *)(result + 120) = a2;
    if (a3 == 255)
    {
LABEL_7:
      (*(void (**)(unsigned int *, uint64_t, void, uint64_t))(*(void *)v3 + 32))(v3, 720902, a3, a2);
      return 1;
    }
    char v7 = result + 0x80;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160))(result);
    if (!(v7 & 7 | (unint64_t)(v6 & 3)))
    {
      int v8 = result;
      sub_1000E4954((uint64_t)(v3 + 32), v3 + 28);
      *(_DWORD *)(v9 + 20) = v8;
      goto LABEL_7;
    }
    goto LABEL_8;
  }
LABEL_9:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E5034(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }
  if (v2 != 2)
  {
    if (v2 != 1) {
      return 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 48))(result, 720911, a2);
    return 1;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t v4 = sub_1000A15B4(result, a2, 0);
  if (!v4) {
    sub_1000EE4F4(0, 4, "%s:%d NULL connectionHandle\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TMicrophoneShared.cpp", 238);
  }
  return sub_10009EA38(200, v4) == 0;
}

uint64_t sub_1000E5124(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }
  if (*(void *)(result + 144))
  {
    if (((result + 112) & 3) == 0)
    {
      sub_1000E4954(result + 128, (unsigned int *)(result + 112));
      return *(unsigned char *)(v1 + 12) & 1;
    }
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1000E518C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return 0;
  }
  if (((result + 112) & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    sub_1000E4954(result + 128, (unsigned int *)(result + 112));
    return (*(unsigned __int8 *)(v2 + 12) >> 4) & 1;
  }
  return result;
}

uint64_t sub_1000E5200(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return 0;
  }
  if (((result + 112) & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    sub_1000E4954(result + 128, (unsigned int *)(result + 112));
    return (*(unsigned __int8 *)(v2 + 12) >> 5) & 1;
  }
  return result;
}

uint64_t sub_1000E5274(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return result;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (v2 != 2) {
    return result;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 48);
  return v3();
}

uint64_t sub_1000E5344(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return result;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (v2 != 2) {
    return result;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 48);
  return v3();
}

uint64_t sub_1000E5414(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return result;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (v2 != 2) {
    return result;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 48);
  return v3();
}

uint64_t sub_1000E54E4(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return result;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_16:
    __break(0x550Au);
    return result;
  }
  if (v2 != 2) {
    return result;
  }
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 48);
  return v3();
}

uint64_t sub_1000E55B4(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E55C8(uint64_t result)
{
  if ((((_BYTE)result - 96) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000E55DC(uint64_t a1, int a2, int a3, void *a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_45;
  }
  if ((a2 + 32) >= 0x40) {
    goto LABEL_46;
  }
  if (a2 == 1 && !a3 && a5 == 16)
  {
    if (!a4 || (a4 & 7) != 0 || ((unint64_t)(a4 + 1) & 7) != 0) {
      goto LABEL_45;
    }
    int v7 = *((unsigned __int16 *)a4 + 4);
    switch(v7)
    {
      case 10:
        if ((((unint64_t)a4 + 12) & 3) == 0)
        {
          switch(*((unsigned char *)a4 + 12))
          {
            case 1:
              pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
              if (((a1 + 128) & 7) != 0) {
                goto LABEL_45;
              }
              int v8 = *((unsigned __int8 *)a4 + 13);
              unsigned int v40 = 2;
              sub_1000E4954(a1 + 128, &v40);
              *(_DWORD *)(v9 + 20) = v8;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
              (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48))(a1, 720912, *a4);
              return;
            case 2:
              pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
              if (((a1 + 128) & 7) != 0) {
                goto LABEL_45;
              }
              char v23 = *((unsigned char *)a4 + 13);
              unsigned int v40 = 2;
              sub_1000E4954(a1 + 128, &v40);
              *(unsigned char *)(v24 + 16) = v23;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
              uint64_t v12 = *a4;
              long long v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
              uint64_t v14 = 720913;
              goto LABEL_23;
            case 3:
              pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
              if (((a1 + 128) & 7) != 0) {
                goto LABEL_45;
              }
              char v25 = *((unsigned char *)a4 + 13);
              unsigned int v40 = 2;
              sub_1000E4954(a1 + 128, &v40);
              *(unsigned char *)(v26 + 17) = v25;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
              uint64_t v12 = *a4;
              long long v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
              uint64_t v14 = 720914;
              goto LABEL_23;
            case 5:
              pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
              if (((a1 + 128) & 7) != 0) {
                goto LABEL_45;
              }
              char v27 = *((unsigned char *)a4 + 13);
              unsigned int v40 = 2;
              sub_1000E4954(a1 + 128, &v40);
              *(unsigned char *)(v28 + 18) = v27;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
              uint64_t v12 = *a4;
              long long v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
              uint64_t v14 = 720915;
              goto LABEL_23;
            default:
              return;
          }
        }
        goto LABEL_45;
      case 8:
        pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
        if ((((_BYTE)a4 + 12) & 3) != 0 || ((a1 + 128) & 7) != 0) {
          goto LABEL_45;
        }
        int v10 = *((_DWORD *)a4 + 3);
        unsigned int v40 = 2;
        sub_1000E4954(a1 + 128, &v40);
        *(_DWORD *)(v11 + 12) = v10;
        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
        sub_1000EE4F4(0, 4, "%s:%d Sending device caps\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TMicrophoneShared.cpp", 456);
        uint64_t v12 = *a4;
        long long v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
        uint64_t v14 = 720911;
LABEL_23:
        v13(a1, v14, v12);
        break;
      case 4:
        if ((((_BYTE)a4 + 12) & 3) != 0) {
          goto LABEL_45;
        }
        if (*((unsigned char *)a4 + 13))
        {
          LOBYTE(v40) = *((unsigned char *)a4 + 13);
          BYTE1(v40) = *((unsigned char *)a4 + 12);
          (*(void (**)(uint64_t, uint64_t, unsigned int *, void))(*(void *)a1 + 32))(a1, 720904, &v40, *a4);
          return;
        }
        LOBYTE(v40) = 0;
        BYTE1(v40) = *((unsigned char *)a4 + 12);
        (*(void (**)(uint64_t, uint64_t, unsigned int *, void))(*(void *)a1 + 32))(a1, 720903, &v40, *a4);
        if (*((unsigned char *)a4 + 12) == 11)
        {
          if (((a1 + 128) & 7) == 0)
          {
            unsigned int v40 = 2;
            sub_1000E4954(a1 + 128, &v40);
            int v16 = *(_DWORD *)(v15 + 32);
            if ((v16 & 2) == 0)
            {
              if ((v16 & 4) != 0)
              {
                pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
                unsigned int v40 = 2;
                sub_1000E4954(a1 + 128, &v40);
                char v33 = *(unsigned char *)(v32 + 24);
                unsigned int v39 = 2;
                sub_1000E4954(a1 + 128, &v39);
                *(unsigned char *)(v34 + 16) = v33;
                pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
                uint64_t v20 = *a4;
                unsigned int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
                uint64_t v22 = 720913;
              }
              else if ((v16 & 8) != 0)
              {
                pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
                unsigned int v40 = 2;
                sub_1000E4954(a1 + 128, &v40);
                char v36 = *(unsigned char *)(v35 + 25);
                unsigned int v39 = 2;
                sub_1000E4954(a1 + 128, &v39);
                *(unsigned char *)(v37 + 17) = v36;
                pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
                uint64_t v20 = *a4;
                unsigned int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
                uint64_t v22 = 720914;
              }
              else
              {
                if ((v16 & 0x20) == 0)
                {
LABEL_44:
                  unsigned int v40 = 2;
                  sub_1000E4954(a1 + 128, &v40);
                  *(_DWORD *)(v38 + 32) = v16;
                  return;
                }
                pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
                unsigned int v40 = 2;
                sub_1000E4954(a1 + 128, &v40);
                char v18 = *(unsigned char *)(v17 + 26);
                unsigned int v39 = 2;
                sub_1000E4954(a1 + 128, &v39);
                *(unsigned char *)(v19 + 18) = v18;
                pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
                uint64_t v20 = *a4;
                unsigned int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
                uint64_t v22 = 720915;
              }
              v21(a1, v22, v20);
LABEL_43:
              int v16 = 0;
              goto LABEL_44;
            }
            pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
            unsigned int v40 = 2;
            sub_1000E4954(a1 + 128, &v40);
            unsigned int v30 = *(_DWORD *)(v29 + 28);
            if (v30 <= 0xFF)
            {
              unsigned int v39 = 2;
              sub_1000E4954(a1 + 128, &v39);
              *(_DWORD *)(v31 + 20) = v30;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
              (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48))(a1, 720912, *a4);
              goto LABEL_43;
            }
LABEL_46:
            __break(0x550Au);
            JUMPOUT(0x1000E5B9CLL);
          }
LABEL_45:
          __break(0x5516u);
          goto LABEL_46;
        }
        break;
    }
  }
}

void sub_1000E5BB0(uint64_t a1, int a2, int a3, void *a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000E55DC(a1 - 96, a2, a3, a4, a5);
  }
}

void sub_1000E5BC8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E5BDC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E5BF0(uint64_t result, uint64_t *a2, unsigned int *a3)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = a2;
      uint64_t result = sub_10000B24C(result);
      uint64_t v7 = v5 + 8;
      if (((v5 + 8) & 7) == 0)
      {
        if (!result)
        {
          uint64_t result = v5 + 8;
          goto LABEL_24;
        }
        if ((((_BYTE)v5 + 16) & 7) == 0 && (result & 7) == 0)
        {
          unsigned int v8 = *a3;
          while (((result + 28) & 3) == 0)
          {
            if (v8 >= 0x100 || (unsigned int v9 = *(_DWORD *)(result + 28), v9 > 0xFF))
            {
              __break(0x550Au);
              return result;
            }
            if (v8 >= v9)
            {
              if (v9 >= v8)
              {
                *uint64_t v4 = result;
                if ((v7 & 7) == 0) {
                  return v7;
                }
                break;
              }
              uint64_t v3 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v10 = *v3;
              if (!*v3) {
                goto LABEL_23;
              }
              result += 8;
            }
            else
            {
              uint64_t v10 = *(void *)result;
              if (!*(void *)result)
              {
                uint64_t v7 = result;
                goto LABEL_24;
              }
            }
            if ((v10 & 7) != 0) {
              break;
            }
            uint64_t v7 = result;
            uint64_t result = v10;
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_23:
  uint64_t v7 = result;
  uint64_t result = (uint64_t)v3;
LABEL_24:
  *uint64_t v4 = v7;
  return result;
}

_DWORD *sub_1000E5D04@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (uint64_t v4 = (char *)(result + 2), ((unint64_t)(result + 2) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x48uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 28) & 3) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  if (*a2 < 0x100u)
  {
    result[7] = *a2;
    *(unsigned char *)(a3 + 16) = 1;
    if (((unint64_t)(result + 8) & 3) == 0)
    {
      *((void *)result + 8) = 0;
      *((_OWORD *)result + 2) = 0u;
      *((_OWORD *)result + 3) = 0u;
      *(unsigned char *)(a3 + 17) = 1;
      return result;
    }
    goto LABEL_9;
  }
LABEL_10:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E5DAC(uint64_t result, unsigned int *a2)
{
  if (!result
    || (unsigned int v2 = (uint64_t *)result, (result & 7) != 0)
    || (uint64_t result = sub_1000E5E10(result, a2), ((unint64_t)(v2 + 1) & 7) != 0))
  {
    __break(0x5516u);
  }
  else if (v2 + 1 == (uint64_t *)result)
  {
    return 0;
  }
  else
  {
    sub_10005817C(v2, result);
    return 1;
  }
  return result;
}

uint64_t sub_1000E5E10(uint64_t result, unsigned int *a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_10000B24C(result);
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000E5ED0(v2, a2, result, v2 + 8);
  uint64_t v5 = result;
  if (v4 == result) {
    return v4;
  }
  if ((((_BYTE)v2 + 16) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (uint64_t)sub_10005814C(&v5);
    if (*a2 < 0x100 && *(_DWORD *)result <= 0xFFu)
    {
      if (*a2 >= *(_DWORD *)result) {
        return v5;
      }
      return v4;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E5ED0(uint64_t result, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    return a3;
  }
  if (a3)
  {
    if ((((_BYTE)result + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      unsigned int v4 = *a2;
      while (((a3 + 28) & 3) == 0)
      {
        unsigned int v5 = *(_DWORD *)(a3 + 28);
        if (v5 > 0xFF || v4 >= 0x100)
        {
          __break(0x550Au);
          return result;
        }
        if (v5 >= v4)
        {
          uint64_t v6 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }
        else
        {
          if (((a3 + 8) & 7) != 0) {
            goto LABEL_17;
          }
          uint64_t v6 = *(void *)(a3 + 8);
          if (!v6) {
            return a4;
          }
          a3 = a4;
        }
        if ((v6 & 7) != 0) {
          goto LABEL_17;
        }
        a4 = a3;
        a3 = v6;
      }
    }
    goto LABEL_17;
  }
  return a4;
}

uint64_t sub_1000E5F70()
{
  if (qword_10013C770 != -1) {
    dispatch_once(&qword_10013C770, &stru_1001296B8);
  }
  return qword_10013C768;
}

void sub_1000E5FB4(id a1)
{
}

uint64_t sub_1000E6000(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_1000207D0(result);
  *(void *)uint64_t v1 = off_100129838;
  if (((v1 + 96) & 7) != 0
    || (*(void *)uint64_t v1 = off_1001296E8,
        *(void *)(v1 + 96) = off_1001297B8,
        *(void *)(v1 + 104) = 0,
        *(_WORD *)(v1 + 116) = 0,
        *(_DWORD *)(v1 + 112) = 0,
        *(_DWORD *)(v1 + 120) = 0,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, v1 + 96, 0xDu, 0);
    return v1;
  }
  return result;
}

uint64_t sub_1000E60C8(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_1001296E8,
        char v2 = result + 96,
        *(void *)(result + 96) = off_1001297B8,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (uint64_t result = (uint64_t)sub_1000684B4((uint64_t *)result, v1 + 96, 0xDu), (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000E616C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E60C8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6180(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000E60C8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6194(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E60C8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E61DC(uint64_t a1)
{
  return sub_1000E6194(a1 - 96);
}

uint64_t sub_1000E61E4(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (a2 < 2)
  {
    return 1;
  }
  __break(0x550Au);
  return result;
}

BOOL sub_1000E6208(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(_DWORD *)(result + 112);
    if (v1 < 4) {
      return v1 != 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E6234(uint64_t result, unsigned int a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(*(void *)result + 56))(result, 196613, a2, 0, 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E627C(uint64_t result)
{
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10004CDB4()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216))(result))
  {
    return 1983;
  }
  else
  {
    return 1977;
  }
  return result;
}

uint64_t sub_1000E62E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 136))(result) & 0xFFFFF877;
  }
  __break(0x5516u);
  return result;
}

void sub_1000E6334(_DWORD *a1, int a2, int a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_26:
    __break(0x5516u);
    JUMPOUT(0x1000E65A4);
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_25:
    __break(0x550Au);
    goto LABEL_26;
  }
  if (a2 == 13 && a5 == 16)
  {
    if (a3) {
      return;
    }
  }
  else
  {
    sub_1000EE4F4(0, 4, "%s:%d wrong lingo (%d) or payload size (%d)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TPushUI.cpp", 123, a2, a5);
    if (a3) {
      return;
    }
  }
  if (!a4)
  {
    __break(0x5518u);
    goto LABEL_25;
  }
  unsigned int v8 = sub_1000DD4C4(*(void *)(a4 + 4));
  if (!(!v10 & v9))
  {
    unsigned int v11 = v8;
    switch(*(_DWORD *)a4)
    {
      case 0:
        unsigned int v12 = *(_DWORD *)(a4 + 12);
        if (v12 > 3) {
          goto LABEL_25;
        }
        a1[28] = v12;
        uint64_t v13 = *(unsigned int *)(a4 + 12);
        if (v13 > 3) {
          goto LABEL_25;
        }
        uint64_t v14 = v8;
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
        int v16 = a1;
        uint64_t v17 = 196609;
        goto LABEL_21;
      case 1:
        a1[28] = 0;
        uint64_t v14 = v8;
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
        uint64_t v17 = 196610;
        int v16 = a1;
        uint64_t v13 = 0;
        goto LABEL_21;
      case 2:
        (*(void (**)(_DWORD *, void))(*(void *)a1 + 168))(a1, *(unsigned __int16 *)(a4 + 12));
        uint64_t v14 = v11;
        uint64_t v13 = *(unsigned __int16 *)(a4 + 12);
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
        uint64_t v17 = 196611;
        goto LABEL_20;
      case 3:
        (*(void (**)(_DWORD *, void))(*(void *)a1 + 176))(a1, *(unsigned int *)(a4 + 12));
        uint64_t v14 = v11;
        uint64_t v13 = *(unsigned int *)(a4 + 12);
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
        uint64_t v17 = 196612;
LABEL_20:
        int v16 = a1;
LABEL_21:
        v15(v16, v17, v14, v13);
        return;
      default:
        goto LABEL_25;
    }
  }
  sub_1000EE4F4(0, 4, "%s:%d Push UI Msg %d not handled\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TPushUI.cpp", 170, 0);
}

void sub_1000E65B4(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000E6334((_DWORD *)(a1 - 96), a2, a3, a4, a5);
  }
}

uint64_t sub_1000E65CC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E65E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E65FC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 112);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000E6620(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 116);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6638(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 120);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6650(uint64_t result, __int16 a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_WORD *)(result + 116) = a2;
  }
  return result;
}

uint64_t sub_1000E6668(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_DWORD *)(result + 120) = a2;
  }
  return result;
}

void sub_1000E6680(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E6694(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E66A8()
{
  if (qword_10013C780 != -1) {
    dispatch_once(&qword_10013C780, &stru_100129900);
  }
  return qword_10013C778;
}

void sub_1000E66EC(id a1)
{
}

uint64_t sub_1000E6738(uint64_t result)
{
  if (!result
    || (unsigned int v1 = (void *)result, (result & 7) != 0)
    || (uint64_t result = sub_1000207D0(result), *v1 = off_100129A28, ((unint64_t)(v1 + 12) & 7) != 0)
    || (*v1 = off_100129930, v1[12] = off_1001299A8, v1[13] = 0, (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000682F0((uint64_t *)result, (uint64_t)(v1 + 12), 2u, 0);
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_1000E67F4(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100129930,
        char v2 = result + 96,
        *(void *)(result + 96) = off_1001299A8,
        (uint64_t result = sub_100067E50()) == 0)
    || (result & 7) != 0
    || (uint64_t result = (uint64_t)sub_1000684B4((uint64_t *)result, v1 + 96, 2u), (v2 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    return sub_1000DA880(v1);
  }
  return result;
}

uint64_t sub_1000E6898(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E67F4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E68AC(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000E67F4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E68C0(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E67F4(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6908(uint64_t a1)
{
  return sub_1000E68C0(a1 - 96);
}

void sub_1000E6910(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_49:
    __break(0x5516u);
    goto LABEL_50;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_50:
    __break(0x550Au);
    JUMPOUT(0x1000E6C7CLL);
  }
  if (a2 != 2) {
    sub_1000EE4F4(0, 4, "%s:%d lingo != kIapLingoSimpleRemote\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 65);
  }
  switch(a3)
  {
    case 0:
      if (a5 != 24) {
        sub_1000EE4F4(0, 4, "%s:%d payloadSize != sizeof(IapSimpleRemoteData_t)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 75);
      }
      if (!a4 || (a4 & 7) != 0) {
        goto LABEL_49;
      }
      if ((*(_DWORD *)a4 + 16) > 0x1F) {
        goto LABEL_50;
      }
      int v14 = *(_DWORD *)a4;
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_49;
      }
      int v15 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_49;
      }
      uint64_t v16 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_49;
      }
      if (*(unsigned __int8 *)(a4 + 8) > 1u) {
        goto LABEL_50;
      }
      if (*(unsigned char *)(a4 + 8)) {
        uint64_t v9 = 131074;
      }
      else {
        uint64_t v9 = 131073;
      }
      break;
    case 1:
      if (a5 != 24) {
        sub_1000EE4F4(0, 4, "%s:%d payloadSize != sizeof(IapSimpleRemoteMikeyData_t)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 96);
      }
      int v14 = 10;
      if (!a4) {
        goto LABEL_49;
      }
      if ((a4 & 7) != 0) {
        goto LABEL_49;
      }
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_49;
      }
      int v15 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_49;
      }
      uint64_t v16 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_49;
      }
      unsigned int v10 = *(unsigned __int8 *)(a4 + 8);
      if (v10 > 1) {
        goto LABEL_50;
      }
      unsigned int v11 = 131075;
      unsigned int v12 = 131076;
      goto LABEL_39;
    case 2:
      if (a5 != 24) {
        sub_1000EE4F4(0, 4, "%s:%d payloadSize != sizeof(IapSimpleRemoteCarData_t)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 117);
      }
      if (!a4 || (a4 & 7) != 0) {
        goto LABEL_49;
      }
      if (*(_DWORD *)a4 > 3u) {
        goto LABEL_50;
      }
      int v14 = *(_DWORD *)a4;
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_49;
      }
      int v15 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_49;
      }
      uint64_t v16 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_49;
      }
      unsigned int v10 = *(unsigned __int8 *)(a4 + 8);
      if (v10 > 1) {
        goto LABEL_50;
      }
      unsigned int v11 = 131077;
      unsigned int v12 = 131078;
LABEL_39:
      if (v10) {
        uint64_t v9 = v12;
      }
      else {
        uint64_t v9 = v11;
      }
      break;
    case 3:
      if (a5 != 40) {
        sub_1000EE4F4(0, 4, "%s:%d payloadSize != sizeof(IapSimpleRemoteRotationButtonStatus_t)\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 139);
      }
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
      v13(a1, 131079, a4, 40);
      return;
    default:
      sub_1000EE4F4(0, 4, "%s:%d Simple Remote Msg %d not handled\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp", 151, a3);
      return;
  }
  (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(*(void *)a1 + 40))(a1, v9, &v14, 16);
}

void sub_1000E6C8C(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40) {
    __break(0x550Au);
  }
  else {
    sub_1000E6910(a1 - 96, a2, a3, a4, a5);
  }
}

uint64_t sub_1000E6CA4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

void sub_1000E6CBC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E6CD0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

BOOL sub_1000E6CE4(uint64_t a1)
{
  memset(v7, 170, sizeof(v7));
  uint64_t v2 = sub_10000FC8C();
  sub_1000E721C(v7, v2);
  pthread_mutex_lock(&stru_10013B980);
  uint64_t v6 = (void *)v7[1];
  if ((void *)v7[1] == v7)
  {
    BOOL v4 = 0;
  }
  else
  {
    do
    {
      uint64_t v3 = sub_10000FDD0((uint64_t *)&v6);
      BOOL v4 = *v3 == a1;
      if (*v3 == a1) {
        break;
      }
      sub_10000FE04(&v6);
    }
    while (v6 != v7);
  }
  pthread_mutex_unlock(&stru_10013B980);
  sub_10001C7D0((uint64_t)v7);
  return v4;
}

uint64_t sub_1000E6D9C(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(unsigned char *)(result + 16) = a2;
  }
  return result;
}

BOOL sub_1000E6DB4(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 16);
    if (v1 < 2) {
      return v1 != 0;
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E6DE0(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E6DF4(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_14:
    __break(0x550Au);
    goto LABEL_15;
  }
  int v3 = a2 == 4 ? -3 : -2;
  int v4 = *(unsigned __int16 *)(result + 8);
  uint64_t result = sub_1000D289C();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }
  uint64_t v5 = (v3 + v4);
  uint64_t result = sub_1000A10E4(result, v2);
  if (!result) {
    return v5;
  }
  BOOL v6 = v5 >= 2;
  uint64_t v5 = (v5 - 2);
  if (v6) {
    return v5;
  }
LABEL_15:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000E6E7C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6E94(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    if (a2 > 0x80)
    {
      if (a2 == 0xFFFF)
      {
        *(_WORD *)(result + 8) = -1;
        __int16 v2 = -7;
      }
      else
      {
        *(_WORD *)(result + 8) = a2;
        __int16 v2 = a2 - 6;
      }
    }
    else
    {
      *(_WORD *)(result + 8) = 128;
      __int16 v2 = 122;
    }
    *(_WORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_1000E6EE4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    unsigned int v2 = *(unsigned __int16 *)(result + 8);
    if (v2 >= 0x100) {
      int v3 = 6;
    }
    else {
      int v3 = 4;
    }
    unsigned int v4 = v3 + v2;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
    if (result)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216))(v1);
      v4 -= result != 3;
    }
    if (v4 < 0x10000) {
      return (unsigned __int16)v4;
    }
  }
  __break(0x5507u);
  return result;
}

uint64_t sub_1000E6F9C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0xFFFFLL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E6FB4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160))(result);
    if ((result - 6) < 0x10000) {
      return (unsigned __int16)(result - 6);
    }
  }
  __break(0x5507u);
  return result;
}

uint64_t sub_1000E7014(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216))(result))
  {
    return 65529;
  }
  else
  {
    return 506;
  }
  return result;
}

uint64_t sub_1000E706C(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160))(result);
  if ((a2 + 32) < 0x40)
  {
    if (a2 == 4)
    {
      uint64_t v4 = (result - 9);
      if (result < 9) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v4 = (result - 8);
      if (result < 8)
      {
LABEL_15:
        __break(0x5515u);
        goto LABEL_16;
      }
    }
    uint64_t result = sub_1000D289C();
    if (result && (result & 7) == 0)
    {
      uint64_t result = sub_1000A10E4(result, v2);
      if (!result) {
        return v4;
      }
      BOOL v5 = v4 >= 2;
      uint64_t v4 = (v4 - 2);
      if (v5) {
        return v4;
      }
      goto LABEL_15;
    }
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }
LABEL_16:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000E7120(uint64_t result, int a2)
{
  if (!result || (v2 = result, (result & 7) != 0) || (uint64_t result = sub_1000D289C()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_14:
    __break(0x5500u);
    return result;
  }
  uint64_t result = sub_1000A10E4(result, v2);
  if ((result & 1) == 0 && !a2) {
    return 0xFFFFFFFFLL;
  }
  int v4 = *(_DWORD *)(v2 + 12);
  BOOL v5 = __CFADD__(v4, 1);
  unsigned int v6 = v4 + 1;
  if (v5) {
    goto LABEL_14;
  }
  if (HIWORD(v6)) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = v6;
  }
  *(_DWORD *)(v2 + 12) = result;
  return result;
}

void sub_1000E719C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E71B0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E71C4(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E71D8(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000E71EC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7204(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

void *sub_1000E721C(void *result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = (uint64_t)result, (result & 7) != 0)
    || (*uint64_t result = result, result[1] = result, ((unint64_t)(result + 2) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    result[2] = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v6 = v4;
    while (v4 != a2)
    {
      BOOL v5 = sub_10000FDD0(&v6);
      sub_100062820(v2, v5);
      sub_10000FE04(&v6);
      uint64_t v4 = v6;
    }
    return (void *)v2;
  }
  return result;
}

uint64_t sub_1000E72A4(uint64_t result, xmlChar *str2)
{
  if (!result) {
    return 0;
  }
  if ((result & 7) != 0 || (uint64_t v2 = (uint64_t *)(result + 24), ((result + 24) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    return 0;
  }
  while (1)
  {
    uint64_t v4 = *v2;
    if (!*v2) {
      return v4;
    }
    if ((v4 & 7) != 0 || ((v4 + 8) & 7) != 0) {
      goto LABEL_17;
    }
    unsigned int v6 = *(_DWORD *)(v4 + 8);
    if (v6 >= 0x20)
    {
      __break(0x550Au);
      return result;
    }
    if (v6 == 1)
    {
      if (!str2 || !*str2) {
        return v4;
      }
      if (((v4 + 16) & 7) != 0) {
        goto LABEL_17;
      }
      uint64_t result = xmlStrcmp(*(const xmlChar **)(v4 + 16), str2);
      if (!result) {
        return v4;
      }
    }
    uint64_t v2 = (uint64_t *)(v4 + 48);
    if (((v4 + 48) & 7) != 0) {
      goto LABEL_17;
    }
  }
}

uint64_t sub_1000E7354(uint64_t result)
{
  if (result)
  {
    if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v1 = *(void *)(result + 24);
    if (!v1) {
      return 0;
    }
    if ((v1 & 7) != 0 || ((v1 + 8) & 7) != 0) {
      goto LABEL_16;
    }
    unsigned int v3 = *(_DWORD *)(v1 + 8);
    if (v3 >= 0x20)
    {
LABEL_17:
      __break(0x550Au);
      return result;
    }
    if (v3 != 3) {
      return 0;
    }
    uint64_t v4 = v1 + 80;
    if ((v4 & 7) != 0)
    {
LABEL_16:
      __break(0x5516u);
      goto LABEL_17;
    }
    return *(void *)v4;
  }
  return result;
}

uint64_t sub_1000E73C4(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = &off_100129C10;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = a2;
    *(unsigned char *)(result + 24) &= 0xFCu;
  }
  return result;
}

uint64_t sub_1000E7404(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = *(void *)(result + 16);
    if (result && (result & 7) == 0) {
      return (*(uint64_t (**)(void))(*(void *)result + 16))();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E744C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(result + 24) |= 1u;
    return 1;
  }
  return result;
}

uint64_t sub_1000E7470(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(unsigned char *)(result + 24) |= 2u;
    return 1;
  }
  return result;
}

void sub_1000E7494(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E74A8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E74BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = (void *)result;
    if ((result & 7) == 0)
    {
      sub_1000E73C4(result, a2);
      *uint64_t v4 = &off_100129C60;
      v4[5] = a4;
      operator new();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7568(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result && (result & 7) == 0) {
    return sub_1000E74BC(result, a2, a3, a4);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000E757C(void *result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    return result;
  }
  *uint64_t result = &off_100129C60;
  uint64_t v1 = result[4];
  if (v1)
  {
    if ((v1 & 7) == 0)
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
      operator delete();
    }
    goto LABEL_9;
  }
  return result;
}

void *sub_1000E7604(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E757C(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000E7618(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E757C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7660(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E7404(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7674(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000E76D4(result, 1);
    if (result)
    {
      return sub_1000E744C(v1);
    }
  }
  return result;
}

uint64_t sub_1000E76D4(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (a2)
  {
    uint64_t result = sub_1000E7404(result);
    if ((result & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t result = sub_1000E7404(result);
    if (!result) {
      return 0;
    }
  }
  uint64_t v4 = *(void *)(v2 + 32);
  if (!v4 || (v4 & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
  }
  else
  {
    int v5 = sub_1000E7404(v2);
    if (v5) {
      BOOL v6 = a2 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6 && *(void *)(v2 + 40)) {
      sub_1000F2634();
    }
    if (!v5) {
      return 0;
    }
    return sub_1000E7404(v2);
  }
  return result;
}

uint64_t sub_1000E77BC(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000E76D4(result, 0);
    if (result)
    {
      return sub_1000E7470(v1);
    }
  }
  return result;
}

uint64_t sub_1000E781C(uint64_t result, std::string *this, int a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (!a3 ? (BOOL v6 = "</") : (BOOL v6 = "<"),
        (uint64_t result = (uint64_t)std::string::assign(this, v6), (v7 = *(const std::string::value_type **)(v3 + 32)) == 0)
     || (v7 & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000286F0(this, v7);
    if (a3)
    {
      if (*(void *)(v3 + 40)) {
        sub_1000F2634();
      }
    }
    std::string::append(this, ">");
    return 1;
  }
  return result;
}

void *sub_1000E78B8(void *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = off_100129CB8;
    result[2] = 0;
  }
  return result;
}

BOOL sub_1000E78EC(BOOL result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, result & 7))
  {
    __break(0x5516u);
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v3 = (const char *)a2;
    }
    else {
      uint64_t v3 = *(const char **)a2;
    }
    uint64_t v4 = fopen(v3, "r");
    *(void *)(v2 + 16) = v4;
    return v4 != 0;
  }
  return result;
}

void *sub_1000E7944(void *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = off_100129CB8;
    uint64_t v2 = (FILE *)result[2];
    if (v2)
    {
      fclose(v2);
      v1[2] = 0;
    }
    return v1;
  }
  return result;
}

void *sub_1000E79A4(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E7944(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000E79B8(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E7944(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7A00(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)result + 24))(result);
    return *(unsigned __int8 *)(v1 + 8);
  }
  return result;
}

void sub_1000E7A5C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_10:
    __break(0x5507u);
    return;
  }
  if (!feof(*(FILE **)(a1 + 16)))
  {
    unsigned int v2 = fgetc(*(FILE **)(a1 + 16));
    if (v2 != -1)
    {
      if (v2 < 0x100)
      {
        *(unsigned char *)(a1 + 8) = v2;
        return;
      }
      goto LABEL_10;
    }
    sub_1000EE4F4(0, 4, "%s:%d 1 != bytesRead\n", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLParse/iMAXMLFileSrcStream.cpp", 84);
  }
}

size_t sub_1000E7AE8(size_t result, void *a2, int *a3, _DWORD *a4)
{
  if (result)
  {
    size_t v4 = result;
    if ((result & 7) == 0)
    {
      if (feof(*(FILE **)(result + 16)))
      {
        *a4 = 0;
        return 1;
      }
      if (!a2 || *a3 < 1 || (size_t v8 = *a4, (int)v8 < 1) || *a3 < (int)v8)
      {
        uint64_t result = 0;
        *a4 = 0;
        return result;
      }
      uint64_t result = fread(a2, 1uLL, v8, *(FILE **)(v4 + 16));
      *a4 = result;
      if (result)
      {
        if (!__CFADD__(a2, result - 1))
        {
          *(unsigned char *)(v4 + 8) = *((unsigned char *)a2 + result - 1);
          return 1;
        }
        goto LABEL_16;
      }
      __break(0x5518u);
    }
  }
  __break(0x5516u);
LABEL_16:
  __break(0x5513u);
  return result;
}

void *sub_1000E7BA8(void *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = off_100129D20;
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
  }
  return result;
}

uint64_t sub_1000E7BDC(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = fwrite(*(const void **)(result + 16), 1uLL, *(unsigned int *)(result + 24), *(FILE **)(result + 8)) == *(unsigned int *)(result + 24);
    *(_DWORD *)(v1 + 24) = 0;
  }
  return result;
}

uint64_t sub_1000E7C2C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_100129D20;
    if (*(_DWORD *)(result + 24)) {
      sub_1000E7BDC(result);
    }
    unsigned int v2 = *(void **)(v1 + 16);
    if (v2) {
      free(v2);
    }
    fclose(*(FILE **)(v1 + 8));
    return v1;
  }
  return result;
}

uint64_t sub_1000E7CA0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E7C2C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7CB4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E7C2C(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

FILE *sub_1000E7CFC(FILE *result, uint64_t a2)
{
  if (!result || (unsigned int v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v3 = (const char *)a2;
    }
    else {
      uint64_t v3 = *(const char **)a2;
    }
    uint64_t result = fopen(v3, "w");
    if (result)
    {
      *(void *)&v2->_r = result;
      HIDWORD(v2->_bf._base) = 1024;
      size_t v4 = malloc_type_malloc(0x400uLL, 0x4659A1BEuLL);
      *(void *)&v2->_flags = v4;
      return (FILE *)(v4 != 0);
    }
  }
  return result;
}

uint64_t sub_1000E7D74(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_28:
    __break(0x5516u);
    return result;
  }
  if (a3 >= 1)
  {
    unsigned int v6 = 0;
    unint64_t v7 = ~a2;
    while (1)
    {
      uint64_t v8 = *(unsigned int *)(v3 + 24);
      unsigned int v9 = *(_DWORD *)(v3 + 28);
      BOOL v10 = v9 >= v8;
      unsigned int v11 = v9 - v8;
      if (!v10) {
        break;
      }
      unsigned int v12 = a3 - v6;
      if (a3 < v6) {
        break;
      }
      if (v11 >= v12) {
        size_t v13 = v12;
      }
      else {
        size_t v13 = v11;
      }
      uint64_t v14 = *(void *)(v3 + 16);
      if (__CFADD__(v14, v8) || v7 < v6) {
        goto LABEL_26;
      }
      uint64_t result = (uint64_t)memcpy((void *)(v14 + v8), (const void *)(a2 + v6), v13);
      BOOL v10 = __CFADD__(v6, v13);
      v6 += v13;
      if (v10) {
        goto LABEL_27;
      }
      if ((v6 & 0x80000000) != 0) {
        sub_1000F2694();
      }
      int v15 = *(_DWORD *)(v3 + 24);
      BOOL v10 = __CFADD__(v15, v13);
      unsigned int v16 = v15 + v13;
      if (v10) {
        goto LABEL_27;
      }
      *(_DWORD *)(v3 + 24) = v16;
      if (v16 >= *(_DWORD *)(v3 + 28)) {
        uint64_t result = sub_1000E7BDC(v3);
      }
      else {
        uint64_t result = 1;
      }
      if ((int)v6 >= a3 || (result & 1) == 0) {
        return result;
      }
    }
    __break(0x5515u);
LABEL_26:
    __break(0x5513u);
LABEL_27:
    __break(0x5500u);
    goto LABEL_28;
  }
  return 1;
}

uint64_t sub_1000E7E70(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  *(void *)uint64_t result = off_100129D70;
  uint64_t result = *(void *)(result + 8);
  if (!result) {
    goto LABEL_9;
  }
  if ((result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)result + 8))(result);
LABEL_9:
    while (*(void *)(v1 + 16))
    {
      uint64_t result = sub_1000E7F38(v1);
      if (result)
      {
        if ((result & 7) != 0) {
          goto LABEL_11;
        }
        (*(void (**)(uint64_t))(*(void *)result + 16))(result);
      }
    }
    return v1;
  }
  return result;
}

uint64_t sub_1000E7F38(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 16);
    if (!v1) {
      return v1;
    }
    if ((v1 & 7) == 0)
    {
      uint64_t v2 = *(void *)(v1 + 8);
      *(void *)(result + 16) = v2;
      if (!v2) {
        *(void *)(result + 24) = 0;
      }
      return v1;
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7F70(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E7E70(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7F84(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000E7E70(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E7FCC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)(a2 + 8) = 0;
    uint64_t v2 = (void *)(result + 16);
    uint64_t v3 = *(void *)(result + 16);
    if (v3)
    {
      *(void *)(a2 + 8) = v3;
    }
    else
    {
      *(void *)(result + 16) = a2;
      uint64_t v2 = (void *)(result + 24);
    }
    *uint64_t v2 = a2;
  }
  return result;
}

uint64_t sub_1000E8010(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = *(void *)(result + 16);
  if (!result)
  {
    sub_1000EE4F4(0, 4, "iMAXMLOutStreamCntlr::BeginInnermostElemSerializer null mInnermostElem");
    return 0;
  }
  if ((result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 32);
    return v1();
  }
  return result;
}

uint64_t sub_1000E8090(uint64_t result, uint64_t *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (!result)
      {
        uint64_t v4 = 0;
        goto LABEL_7;
      }
      if ((result & 7) == 0)
      {
        uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 40))(result);
        uint64_t result = sub_1000E7F38(v2);
LABEL_7:
        *a2 = result;
        return v4;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E811C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator new();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E8194(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = *(void *)(result + 16);
    if (!result) {
      return 1;
    }
    if ((result & 7) == 0) {
      return (*(uint64_t (**)(void))(*(void *)result + 24))();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E81E0(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || (*(void *)uint64_t result = 0, *(_DWORD *)(result + 8) = 0, ((result + 16) & 7) != 0)
    || (*(void *)(result + 16) = 0, *(void *)(result + 24) = 0, (((_BYTE)result + 32) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)(result + 32) = 0;
  }
  return result;
}

uint64_t sub_1000E821C(uint64_t result, unint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    if ((result & 7) == 0)
    {
      if (!a2)
      {
        sub_1000EE4F4(0, 4, "iMAXMLParseCntxLookup::CheckSetTableLength: null table ptr!");
        return a2 != 0;
      }
      if ((a2 & 7) == 0)
      {
        unint64_t v4 = 0;
        for (unint64_t i = a2; *(__int16 *)(i + 8) != -1; i += 32)
        {
          if (__OFADD__(v4, 1))
          {
            __break(0x5500u);
LABEL_15:
            __break(0x5513u);
            goto LABEL_16;
          }
          if (i >= 0xFFFFFFFFFFFFFFE0) {
            goto LABEL_15;
          }
          ++v4;
        }
        *(_DWORD *)(result + 8) = v4;
        result += 16;
        if (((unint64_t)(v2 + 2) & 7) != 0) {
          goto LABEL_16;
        }
        sub_1000E82CC(result, v4);
        *uint64_t v2 = a2;
        return a2 != 0;
      }
    }
  }
LABEL_16:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E82CC(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_11:
    __break(0x5513u);
    return result;
  }
  uint64_t v2 = *(void *)result;
  unint64_t v3 = (uint64_t)(*(void *)(result + 8) - *(void *)result) >> 3;
  if (a2 > v3) {
    return sub_1000E8744(result, a2 - v3);
  }
  if (a2 < v3)
  {
    if (!((a2 + 0x1000000000000000) >> 61) && 8 * a2 <= ~v2) {
      return (uint64_t)sub_1000E8C28((void *)result, (void *)(v2 + 8 * a2));
    }
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1000E8330(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000E821C(result, a2);
      if (!result) {
        return 22;
      }
      if (!*(_DWORD *)(v3 + 8)) {
        return 0;
      }
      uint64_t v6 = 0;
      unint64_t v7 = (void *)(v3 + 16);
      BOOL v9 = (a2 & 7) != 0 || a2 == 0;
      while (32 * v6 <= ~a2)
      {
        if (v9) {
          goto LABEL_27;
        }
        unint64_t v10 = a2 + 32 * v6;
        if ((*(unsigned char *)(v10 + 10) & 1) == 0)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))v10)(v6, a3);
          if (!result)
          {
            sub_1000EE4F4(0, 4, "iMAXMLParseCntxLookup::Init failed to create parse context");
            return 22;
          }
          if (((v3 + 16) & 7) != 0) {
            goto LABEL_27;
          }
          uint64_t v11 = *v7;
          if (__CFADD__(*v7, 8 * v6)) {
            break;
          }
          if (!v11) {
            goto LABEL_27;
          }
          unsigned int v12 = (uint64_t *)(v11 + 8 * v6);
          if ((v12 & 7) != 0) {
            goto LABEL_27;
          }
          *unsigned int v12 = result;
        }
        if (v10 > 0xFFFFFFFFFFFFFFDFLL) {
          break;
        }
        if (v6 == 0xFFFFFFFFLL) {
          goto LABEL_28;
        }
        if (++v6 >= (unint64_t)*(unsigned int *)(v3 + 8)) {
          return 0;
        }
      }
      __break(0x5513u);
    }
  }
LABEL_27:
  __break(0x5516u);
LABEL_28:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000E8458(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0;
  }
  if (!__CFADD__(v2, 32 * a2))
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = v2 + 32 * a2 + 10;
      if ((v3 & 1) == 0) {
        return *(unsigned __int8 *)v3;
      }
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E84B0(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0;
  }
  if (!__CFADD__(v2, 32 * a2))
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = v2 + 32 * a2 + 8;
      if ((v3 & 7) == 0) {
        return *(unsigned __int16 *)v3;
      }
    }
    goto LABEL_10;
  }
LABEL_11:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E850C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0;
  }
  if (!__CFADD__(v2, 32 * a2))
  {
    if ((v2 & 7) == 0) {
      return v2 + 32 * a2 + 11;
    }
    goto LABEL_9;
  }
LABEL_10:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E855C(uint64_t result, std::string *this, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x5513u);
    return result;
  }
  if (*(_DWORD *)(result + 8))
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v8 = this & 7;
    while (1)
    {
      uint64_t v9 = *(void *)v3;
      if (__CFADD__(*(void *)v3, v6)) {
        goto LABEL_23;
      }
      if (v9) {
        BOOL v10 = (((_BYTE)v6 + (_BYTE)v9) & 7) == 0;
      }
      else {
        BOOL v10 = 0;
      }
      if (!v10 || ((v6 + v9 + 10) & 1) != 0) {
        goto LABEL_22;
      }
      int v11 = *(unsigned __int8 *)(v9 + v6 + 10);
      if ((v11 & 8) != 0) {
        return v7;
      }
      if (this)
      {
        if (v8) {
          goto LABEL_22;
        }
        uint64_t result = std::string::compare(this, (const std::string::value_type *)(v9 + v6 + 11));
        if (!result) {
          return v7;
        }
      }
      else if (a3 && (v11 & a3) == a3)
      {
        return v7;
      }
      ++v7;
      v6 += 32;
      if (v7 >= *(unsigned int *)(v3 + 8)) {
        return 0xFFFFFFFFLL;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_1000E8640(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0;
  }
  if (__CFADD__(v3, 32 * a2)) {
    goto LABEL_17;
  }
  unint64_t v4 = (uint64_t (**)(uint64_t, uint64_t))(v3 + 32 * a2);
  if ((v4 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v5 = v3 + 32 * a2 + 10;
  if (v5) {
    goto LABEL_16;
  }
  if (*(unsigned char *)v5) {
    return (*v4)(a2, a3);
  }
  if (((result + 16) & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(result + 16);
  if (!__CFADD__(v6, 8 * a2))
  {
    if (v6)
    {
      uint64_t v7 = v6 + 8 * a2;
      if ((v7 & 7) == 0) {
        return *(void *)v7;
      }
    }
LABEL_16:
    __break(0x5516u);
  }
LABEL_17:
  __break(0x5513u);
  return result;
}

void *sub_1000E86DC(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (void *)*result;
      if (!*v1) {
        return v1;
      }
      if ((result & 7) == 0)
      {
        (*(void (**)(void *))(*result + 8))(result);
        return v1;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E8744(uint64_t a1, unint64_t a2)
{
  if (!a1 || (uint64_t v2 = (uint64_t *)a1, (a1 & 7) != 0) || ((a1 + 16) & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (a2 > (v4 - v5) >> 3)
  {
    unint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
    *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v12[0] = v6;
    v12[1] = v6;
    uint64_t v7 = v5 - *(void *)a1;
    unint64_t v8 = a2 + (v7 >> 3);
    if (!__CFADD__(a2, v7 >> 3))
    {
      if (!(v8 >> 61))
      {
        unint64_t v9 = v4 - *(void *)a1;
        if (v9 >> 2 > v8) {
          unint64_t v8 = v9 >> 2;
        }
        if (v9 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v10 = v8;
        }
        sub_1000688E8((uint64_t)v12, v10, v7 >> 3, a1 + 16);
        sub_1000E88E8((uint64_t)v12, a2);
        sub_1000E898C(v2, v12);
        return sub_1000E8B18((uint64_t)v12);
      }
LABEL_18:
      sub_1000308CC((uint64_t)v2);
    }
LABEL_17:
    __break(0x5500u);
    goto LABEL_18;
  }
  return sub_1000E8848(a1, a2);
}

uint64_t sub_1000E8848(uint64_t result, uint64_t a2)
{
  if (result)
  {
    char v2 = result;
    if ((result & 7) == 0)
    {
      memset(v6, 170, sizeof(v6));
      uint64_t result = (uint64_t)sub_1000E8A38(v6, result, a2);
      uint64_t v4 = (void *)v6[1];
      uint64_t v3 = (void *)v6[2];
      if (v6[1] == v6[2]) {
        return (uint64_t)sub_10002A1A0(v6);
      }
      if (((v2 + 16) & 7) == 0)
      {
        uint64_t v5 = v6[1] & 7;
        while (v4 && !v5)
        {
          *uint64_t v4 = 0;
          if ((unint64_t)v4 >= 0xFFFFFFFFFFFFFFF8) {
            goto LABEL_12;
          }
          v6[1] = ++v4;
          if (v4 == v3) {
            return (uint64_t)sub_10002A1A0(v6);
          }
        }
      }
    }
  }
  __break(0x5516u);
LABEL_12:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E88E8(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
LABEL_14:
    __break(0x5513u);
  }
  else
  {
    memset(v6, 170, sizeof(v6));
    sub_100066624(v6, (void *)(result + 16), a2);
    for (unint64_t i = v6[0]; i != v6[1]; v6[0] = i)
    {
      uint64_t result = sub_10002A378(v2);
      unint64_t v4 = v6[0];
      if (v6[0]) {
        BOOL v5 = (v6[0] & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_13;
      }
      *(void *)v6[0] = 0;
      if (v4 >= 0xFFFFFFFFFFFFFFF8) {
        goto LABEL_14;
      }
      unint64_t i = v4 + 8;
    }
    return (uint64_t)sub_10006667C(v6);
  }
  return result;
}

uint64_t *sub_1000E898C(uint64_t *result, void *a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0
    || (uint64_t v3 = result + 2, ((unint64_t)(result + 2) & 7) != 0)
    || (BOOL v5 = result + 1,
        uint64_t result = sub_1000E8A84((uint64_t)(result + 2), result[1], result[1], *result, *result, a2[1], a2[1]),
        a2[1] = v6,
        uint64_t v7 = *v2,
        *uint64_t v2 = v6,
        a2[1] = v7,
        (v5 & 7) != 0))
  {
LABEL_6:
    __break(0x5516u);
  }
  else
  {
    uint64_t v8 = *v5;
    *BOOL v5 = a2[2];
    a2[2] = v8;
    uint64_t v9 = *v3;
    *uint64_t v3 = a2[3];
    a2[3] = v9;
    *a2 = a2[1];
  }
  return result;
}

void *sub_1000E8A38(void *result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *uint64_t result = a2;
    uint64_t v3 = *(void *)(a2 + 8);
    result[1] = v3;
    if (!((unint64_t)(a3 + 0x1000000000000000) >> 61) && 8 * a3 <= (unint64_t)~v3)
    {
      result[2] = v3 + 8 * a3;
      return result;
    }
  }
  __break(0x5513u);
  return result;
}

void *sub_1000E8A84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v13 = a2;
  unint64_t v14 = a3;
  uint64_t v11 = a6;
  unint64_t v12 = a7;
  if (a3 == a5) {
    return (void *)a6;
  }
  while (1)
  {
    uint64_t v8 = (void *)sub_10002AD3C((unint64_t)&v11);
    uint64_t result = (void *)sub_10002AD3C((unint64_t)&v13);
    *uint64_t v8 = *result;
    if (v14 <= 7) {
      break;
    }
    unint64_t v10 = v14 - 8;
    v14 -= 8;
    if (v12 <= 7) {
      break;
    }
    v12 -= 8;
    if (v10 == a5) {
      return (void *)v11;
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E8B18(uint64_t result)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v1 = (uint64_t *)result;
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  sub_1000E8B88(result);
  if (!*v1) {
    return (uint64_t)v1;
  }
  sub_10002A378((uint64_t)v1);
  uint64_t result = *v1;
  if (((unint64_t)(v1 + 3) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }
  else if (v1[3] - result >= 0)
  {
    operator delete((void *)result);
    return (uint64_t)v1;
  }
  __break(0x550Cu);
  return result;
}

uint64_t sub_1000E8B88(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000E8BA0(result, *(void *)(result + 8));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E8BA0(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    while (*(void *)(v2 + 16) != a2)
    {
      uint64_t result = sub_10002A378(v2);
      unint64_t v4 = *(void *)(v2 + 16);
      if (v4 <= 7)
      {
        __break(0x5513u);
        goto LABEL_9;
      }
      uint64_t result = v4 - 8;
      *(void *)(v2 + 16) = v4 - 8;
      if (((v4 - 8) & 7) != 0) {
        goto LABEL_9;
      }
      uint64_t result = (uint64_t)sub_1000E86DC((void *)result);
    }
  }
  return result;
}

void *sub_1000E8C10(uint64_t a1, void *a2)
{
  if (a2 && (a2 & 7) == 0) {
    return sub_1000E86DC(a2);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000E8C28(void *result, void *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unint64_t v4 = (void *)result[1];
      if (v4 == a2)
      {
LABEL_7:
        v2[1] = a2;
        return result;
      }
      if (((unint64_t)(result + 2) & 7) == 0)
      {
        while ((unint64_t)v4 > 7)
        {
          uint64_t result = sub_1000E8C10((uint64_t)(v2 + 2), --v4);
          if (v4 == a2) {
            goto LABEL_7;
          }
        }
        __break(0x5513u);
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E8CA4(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000E9358(result, a2, a3);
    *(void *)uint64_t result = off_100129DB8;
  }
  return result;
}

uint64_t sub_1000E8CE8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(const void **)(a1 + 24);
  if (!v2) {
    goto LABEL_12;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_11;
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (uint64_t)v3 + 56, (v4 & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_1000F2364();
  }
  unsigned int v5 = *(_DWORD *)(a1 + 16);
  return sub_1000E8458(v4, v5);
}

uint64_t sub_1000E8DC8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(const void **)(a1 + 24);
  if (!v2) {
    goto LABEL_12;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_11;
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (uint64_t)v3 + 56, (v4 & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_1000F2364();
  }
  unsigned int v5 = *(_DWORD *)(a1 + 16);
  return sub_1000E84B0(v4, v5);
}

uint64_t sub_1000E8EA8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v4 = sub_1000E95C4(a1);
  if (!v4)
  {
    unsigned int v5 = *(const void **)(a1 + 24);
    if (!v5) {
      goto LABEL_19;
    }
    if ((v5 & 7) == 0)
    {
      {
        operator new();
      }
LABEL_19:
      sub_1000F2364();
    }
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a2 + 32))(a2, v4, 0);
  if (v4 != sub_1000E95C4(a1))
  {
    if ((v4 & 7) == 0)
    {
      if (*(char *)(v4 + 23) < 0) {
        operator delete(*(void **)v4);
      }
      operator delete();
    }
    goto LABEL_18;
  }
  if (v6)
  {
    sub_1000E7FCC(a2, v6);
    return 0;
  }
  else
  {
    sub_1000EE4F4(0, 4, "iMAXMLParseContext::CreateTagOutputSerializer iMAXMLOutStreamCntlr->CreateElementSerializer failed");
    return 16;
  }
}

uint64_t sub_1000E90A0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v1 = *(const void **)(a1 + 24);
  if (!v1) {
    goto LABEL_12;
  }
  if ((v1 & 7) != 0) {
    goto LABEL_11;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (uint64_t)v2 + 8, (v3 & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_1000F2364();
  }
  return sub_1000E9BC8(v3);
}

void sub_1000E9170(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E9184(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E9198(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E9358(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_100129EA0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = a2;
    *(void *)(result + 24) = a3;
    *(unsigned char *)(result + 32) = 0;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
  }
  return result;
}

uint64_t sub_1000E9398(uint64_t result)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  *(void *)uint64_t result = off_100129EA0;
  uint64_t result = *(void *)(result + 48);
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_12;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  uint64_t v2 = *(void *)(v1 + 40);
  if (!v2) {
    return v1;
  }
  if ((v2 & 7) == 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
LABEL_12:
  __break(0x5516u);
  return result;
}

void sub_1000E9454(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000E9468(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000E947C(unsigned int a1)
{
  return (a1 < 0x21) & (0x100002600uLL >> a1);
}

uint64_t sub_1000E9498(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 48);
      if (!result)
      {
LABEL_6:
        *(void *)(v2 + 48) = a2;
        return result;
      }
      if ((result & 7) == 0)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
        goto LABEL_6;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E9504(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 16);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E951C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 40);
    if (!v1) {
      operator new();
    }
    if ((v1 & 7) == 0)
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
      operator delete();
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E95C4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_9;
  }
  if (!*(void *)(a1 + 40))
  {
    uint64_t v1 = *(const void **)(a1 + 24);
    if (!v1) {
      goto LABEL_10;
    }
    if ((v1 & 7) == 0)
    {
      {
        operator new();
      }
LABEL_10:
      sub_1000F2364();
    }
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }
  return *(void *)(a1 + 40);
}

uint64_t sub_1000E96B8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E96D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 45;
  }
  __break(0x5516u);
  return result;
}

void sub_1000E96E8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000E9734(a1);
    sub_1000668AC(a1);
  }
}

uint64_t sub_1000E9734(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || (v2 = (void *)(result + 40), ((result + 40) & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
  }
  else
  {
    while (*v2)
    {
      uint64_t result = sub_1000E97F0(v1);
      if (!result) {
        goto LABEL_10;
      }
      uint64_t v3 = result;
      if ((result & 7) != 0) {
        goto LABEL_10;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 48))(result);
      if (result) {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
  }
  return result;
}

uint64_t sub_1000E97F0(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_17;
  }
  if (!*(void *)(result + 40)) {
    return 0;
  }
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = (*(void *)(result + 32) >> 6) & 0x3FFFFFFFFFFFFF8;
  if (!__CFADD__(v1, v2))
  {
    if (v1)
    {
      uint64_t v3 = (uint64_t *)(v1 + v2);
      if ((v3 & 7) == 0)
      {
        uint64_t v4 = *v3;
        uint64_t v5 = 8 * (*(void *)(result + 32) & 0x1FFLL);
        if (!__CFADD__(v4, v5))
        {
          uint64_t v6 = (uint64_t *)(v4 + v5);
          if (v4) {
            BOOL v7 = (v6 & 7) == 0;
          }
          else {
            BOOL v7 = 0;
          }
          if (!v7) {
            goto LABEL_17;
          }
          uint64_t v8 = *v6;
          sub_100066D64(result);
          return v8;
        }
        goto LABEL_18;
      }
    }
LABEL_17:
    __break(0x5516u);
  }
LABEL_18:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E9894(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_13;
  }
  unint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_1000E99A0((void *)result);
  if (!a2)
  {
    sub_1000EE4F4(0, 4, "iMAXMLParseContextManager::AddContext nil Context param");
    return 22;
  }
  if (result && a4)
  {
    if ((result & 7) != 0) {
      goto LABEL_13;
    }
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, a2);
    if (v8) {
      return v8;
    }
  }
  uint64_t v9 = a2;
  uint64_t result = sub_1000E9C14(v4, &v9);
  if ((a2 & 7) == 0)
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a3);
    if (v8) {
      sub_1000E97F0(v4);
    }
    return v8;
  }
LABEL_13:
  __break(0x5516u);
  return result;
}

void *sub_1000E99A0(void *result)
{
  if (!result || (result & 7) != 0 || ((unint64_t)(result + 5) & 7) != 0) {
    goto LABEL_16;
  }
  if (!result[5]) {
    return 0;
  }
  uint64_t v1 = result[1];
  uint64_t v2 = (result[4] >> 6) & 0x3FFFFFFFFFFFFF8;
  if (__CFADD__(v1, v2)) {
    goto LABEL_17;
  }
  if (!v1 || (uint64_t v3 = (uint64_t *)(v1 + v2), (v3 & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = 8 * (result[4] & 0x1FFLL);
  if (!__CFADD__(v4, v5))
  {
    uint64_t v6 = v4 + v5;
    if (v4) {
      BOOL v7 = (v6 & 7) == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7) {
      return *(void **)v6;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E9A24(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 40)) {
    return 2;
  }
  uint64_t result = (uint64_t)sub_1000E99A0((void *)result);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 24);
    return v1();
  }
  return result;
}

uint64_t sub_1000E9AE0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && ((result + 40) & 7) == 0)
  {
    if (!*(void *)(result + 40)) {
      return 0;
    }
    uint64_t result = sub_1000E97F0(result);
    if (result)
    {
      uint64_t v3 = result;
      if ((result & 7) == 0)
      {
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 32))(result, a2);
        if ((*(uint64_t (**)(uint64_t))(*(void *)v3 + 48))(v3)) {
          (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
        }
        return v4;
      }
    }
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000E9BC8(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)sub_1000E99A0((void *)result);
  if (!result) {
    return 0xFFFFFFFFLL;
  }
  if ((result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }
  else
  {
    return sub_1000E9504(result);
  }
  return result;
}

unint64_t sub_1000E9C14(unint64_t result, void *a2)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v2 = (void *)result;
  if ((result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_12;
  }
  if (!*(void *)(result + 32)) {
    sub_1000E9CC8(result);
  }
  v11[0] = sub_100066A48(v2);
  v11[1] = v4;
  uint64_t result = sub_1000E9F50((uint64_t)v11);
  uint64_t v5 = *(void **)(result + 8);
  if (!v5 || (v5 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
LABEL_13:
    __break(0x5515u);
    goto LABEL_14;
  }
  *uint64_t v5 = *a2;
  uint64_t v6 = v2[4];
  BOOL v7 = v6 != 0;
  uint64_t v8 = v6 - 1;
  if (!v7) {
    goto LABEL_13;
  }
  v2[4] = v8;
  uint64_t v9 = v2[5];
  BOOL v7 = __CFADD__(v9, 1);
  uint64_t v10 = v9 + 1;
  if (!v7)
  {
    v2[5] = v10;
    return result;
  }
LABEL_14:
  __break(0x5500u);
  return result;
}

unint64_t sub_1000E9CC8(unint64_t result)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v1 = (uint64_t *)result;
  if ((result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = sub_1000659B0(result);
  if (result >= 0x200)
  {
    uint64_t v2 = v1[4];
    BOOL v3 = __CFADD__(v2, 512);
    uint64_t v4 = v2 + 512;
    if (!v3)
    {
      v1[4] = v4;
      *(void *)&long long v23 = *(void *)sub_1000E9FC8((unint64_t)v1);
      sub_1000E9FF8((uint64_t)v1);
      return sub_100065F60((uint64_t)v1, &v23);
    }
    goto LABEL_34;
  }
  uint64_t v5 = v1 + 2;
  uint64_t v6 = v1 + 1;
  uint64_t v7 = v1[2] - v1[1];
  if (sub_100065F04((uint64_t)v1) > (unint64_t)(v7 >> 3))
  {
    if (v1[1] == *v1)
    {
      *(void *)&long long v23 = operator new(0x1000uLL);
      sub_100065D58((unint64_t)v1, &v23);
      *(void *)&long long v23 = 0xAAAAAAAAAAAAAAAALL;
      *(void *)&long long v23 = *(void *)sub_1000E9FC8((unint64_t)v1);
      sub_1000E9FF8((uint64_t)v1);
    }
    else
    {
      *(void *)&long long v23 = operator new(0x1000uLL);
    }
    uint64_t result = sub_100065F60((uint64_t)v1, &v23);
    if (*v5 - *v6 == 8)
    {
      uint64_t v19 = 256;
LABEL_31:
      v1[4] = v19;
      return result;
    }
    uint64_t v20 = v1[4];
    BOOL v3 = __CFADD__(v20, 512);
    uint64_t v19 = v20 + 512;
    if (!v3) {
      goto LABEL_31;
    }
LABEL_34:
    __break(0x5500u);
    goto LABEL_35;
  }
  unint64_t v25 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v8 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v23 = v8;
  long long v24 = v8;
  uint64_t result = sub_100065F04((uint64_t)v1);
  if ((result & 0x8000000000000000) == 0)
  {
    if (((unint64_t)(v1 + 3) & 7) == 0)
    {
      if (result) {
        unint64_t v9 = 2 * result;
      }
      else {
        unint64_t v9 = 1;
      }
      sub_10002AC34((uint64_t)&v23, v9, 0, (uint64_t)(v1 + 3));
      v22[1] = v1 + 5;
      v22[2] = (void *)512;
      unsigned int v21 = operator new(0x1000uLL);
      uint64_t result = sub_100066128((unint64_t)&v23, &v21);
      v22[0] = 0;
      uint64_t v10 = (void *)*v6;
      if (*v6 == *v5)
      {
LABEL_21:
        uint64_t v12 = *v1;
        *uint64_t v1 = v23;
        *(void *)&long long v23 = v12;
        if ((v6 & 7) == 0)
        {
          uint64_t v13 = (void *)*v6;
          uint64_t v14 = *((void *)&v23 + 1);
          *uint64_t v6 = *((void *)&v23 + 1);
          *((void *)&v23 + 1) = v13;
          if ((v5 & 7) == 0)
          {
            uint64_t v15 = v1[3];
            uint64_t v16 = v24;
            *(_OWORD *)uint64_t v5 = v24;
            *(void *)&long long v24 = v10;
            *((void *)&v24 + 1) = v15;
            if (v16 - v14 == 8)
            {
              uint64_t v17 = 256;
            }
            else
            {
              uint64_t v18 = v1[4];
              BOOL v3 = __CFADD__(v18, 512);
              uint64_t v17 = v18 + 512;
              if (v3) {
                goto LABEL_34;
              }
            }
            v1[4] = v17;
            sub_100066790(v22, 0);
            return sub_10002AE10((uint64_t)&v23);
          }
        }
      }
      else
      {
        uint64_t v11 = *v6 & 7;
        while (v10 && !v11)
        {
          uint64_t result = sub_100066128((unint64_t)&v23, v10);
          if ((unint64_t)v10 >= 0xFFFFFFFFFFFFFFF8) {
            goto LABEL_33;
          }
          if (++v10 == (void *)*v5) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_32:
    __break(0x5516u);
LABEL_33:
    __break(0x5513u);
    goto LABEL_34;
  }
LABEL_35:
  __break(0x550Cu);
  return result;
}

uint64_t sub_1000E9F50(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v1 = *(void **)result;
  if (!*(void *)result || (*(void *)result & 7) != 0) {
    goto LABEL_15;
  }
  unint64_t v3 = *(void *)(result + 8);
  if (v3 != *v1) {
    goto LABEL_13;
  }
  if ((unint64_t)v1 > 7)
  {
    uint64_t v4 = v1 - 1;
    *(void *)uint64_t result = v4;
    if ((v4 & 7) != 0)
    {
LABEL_15:
      __break(0x5516u);
      goto LABEL_16;
    }
    unint64_t v5 = *v4;
    if (v5 <= 0xFFFFFFFFFFFFEFFFLL)
    {
      unint64_t v3 = v5 + 4096;
      *(void *)(result + 8) = v5 + 4096;
LABEL_13:
      if (v3 >= 8)
      {
        *(void *)(result + 8) = v3 - 8;
        return result;
      }
    }
  }
LABEL_16:
  __break(0x5513u);
  return result;
}

unint64_t sub_1000E9FC8(unint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_5:
    __break(0x5516u);
    goto LABEL_6;
  }
  unint64_t v1 = *(void *)(result + 16);
  if (v1 > 7)
  {
    uint64_t result = v1 - 8;
    if (((v1 - 8) & 7) == 0) {
      return result;
    }
    goto LABEL_5;
  }
LABEL_6:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000E9FF8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unint64_t v1 = *(void *)(result + 16);
    if (v1 > 7) {
      return sub_100066B9C(result, v1 - 8);
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t sub_1000EA020(uint64_t result, unint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000E8330(result + 56, a2, result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000EA03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
  }
  else
  {
    ioctx[0] = a4;
    ioctx[1] = a2;
    xmlTextReaderPtr v8 = xmlReaderForIO((xmlInputReadCallback)sub_1000EA248, 0, ioctx, 0, 0, 0);
    if (v8)
    {
      unint64_t v9 = v8;
      int v16 = 0;
      while (1)
      {
        if (*(unsigned __int8 *)(a1 + 96) >= 2u)
        {
          __break(0x550Au);
          goto LABEL_29;
        }
        if (*(unsigned char *)(a1 + 96) || xmlTextReaderRead(v9) != 1)
        {
LABEL_27:
          xmlFreeTextReader(v9);
          sub_1000E9734(a1 + 8);
          return;
        }
        v16 &= ~0x10u;
        int v10 = xmlTextReaderNodeType(v9);
        int v11 = 0;
        if (v10 > 3)
        {
          if (v10 == 4)
          {
            int v15 = 0;
            uint64_t v13 = xmlTextReaderConstValue(v9);
            if (a5)
            {
              memset(&__p, 0, sizeof(__p));
              if (sub_1000EA6FC(a1, (uint64_t)v13, &__p)) {
                int v11 = sub_1000E9A24(a1 + 8);
              }
              else {
                int v11 = 0;
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              goto LABEL_21;
            }
            goto LABEL_19;
          }
          if (v10 == 15)
          {
            int v12 = sub_1000E9AE0(a1 + 8, a3);
LABEL_20:
            int v11 = v12;
          }
        }
        else
        {
          if (v10 == 1)
          {
            int v12 = sub_1000EA344(a1, v9, a3, &v16);
            goto LABEL_20;
          }
          if (v10 == 3)
          {
            LODWORD(__p.__r_.__value_.__l.__data_) = 0;
            xmlTextReaderConstValue(v9);
LABEL_19:
            int v12 = sub_1000E9A24(a1 + 8);
            goto LABEL_20;
          }
        }
LABEL_21:
        if (v11) {
          goto LABEL_27;
        }
      }
    }
    sub_1000EE4F4(0, 4, "iMAXMLParseCtlr::ParseLoopEx: Failed to create xmltextreader object\n");
  }
}

uint64_t sub_1000EA248(uint64_t result, uint64_t a2, int a3)
{
  int v8 = a3;
  if (!result) {
    return 0xFFFFFFFFLL;
  }
  unint64_t v3 = (uint64_t *)result;
  if ((result & 7) != 0 || ((result + 8) & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = *(void *)(result + 8);
  uint64_t v5 = 0xFFFFFFFFLL;
  unsigned int v7 = -1;
  if (result)
  {
    if (a3 >= 128) {
      int v6 = 128;
    }
    else {
      int v6 = a3;
    }
    unsigned int v7 = v6;
    if ((result & 7) != 0) {
      goto LABEL_17;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *, unsigned int *))(*(void *)result + 32))(result, a2, &v8, &v7))
    {
      uint64_t v5 = v7;
      goto LABEL_11;
    }
    return 0xFFFFFFFFLL;
  }
LABEL_11:
  uint64_t result = *v3;
  if (!*v3 || !v5) {
    return v5;
  }
  if ((result & 7) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 24))(result, a2, v5);
    return v7;
  }
LABEL_17:
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EA344(uint64_t result, xmlTextReaderPtr reader, uint64_t a3, _DWORD *a4)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  if (!reader || xmlTextReaderNodeType(reader) != 1) {
    return 2;
  }
  memset(&v16, 170, sizeof(v16));
  unsigned int v7 = (char *)xmlTextReaderConstName(reader);
  sub_10002B034((uint64_t)&v16, v7);
  if (xmlTextReaderIsEmptyElement(reader)) {
    int v8 = 16;
  }
  else {
    int v8 = 4;
  }
  *a4 |= v8;
  uint64_t v9 = sub_1000E855C(v4 + 56, &v16, 0);
  if (v9 == -1)
  {
    uint64_t v14 = 0;
    goto LABEL_24;
  }
  unsigned int v10 = v9;
  uint64_t v11 = sub_1000E8640(v4 + 56, v9, v4);
  if (!v11)
  {
    uint64_t v14 = 2;
    goto LABEL_24;
  }
  uint64_t v12 = v11;
  if (xmlTextReaderHasAttributes(reader)) {
    operator new();
  }
  uint64_t result = sub_1000E8458(v4 + 56, v10);
  if ((result & 8) != 0)
  {
    if ((v12 & 7) != 0) {
      goto LABEL_27;
    }
    sub_1000E951C(v12);
  }
  uint64_t v13 = v4 + 8;
  uint64_t result = sub_1000E9894(v4 + 8, v12, a3, 1);
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_18;
  }
  if ((v12 & 7) == 0)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)v12 + 48))(v12) & 1) == 0)
    {
LABEL_18:
      if ((*(unsigned char *)a4 & 0x10) != 0)
      {
        uint64_t v14 = sub_1000E9AE0(v13, a3);
        *a4 &= ~0x10u;
      }
      goto LABEL_24;
    }
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
LABEL_24:
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    return v14;
  }
LABEL_27:
  __break(0x5516u);
  return result;
}

BOOL sub_1000EA6FC(BOOL result, uint64_t a2, std::string *this)
{
  if (!result || result & 7) {
    goto LABEL_25;
  }
  if (!a2) {
    return 0;
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    if (this->__r_.__value_.__r.__words[0])
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
      goto LABEL_9;
    }
LABEL_25:
    __break(0x5516u);
    return result;
  }
  this->__r_.__value_.__s.__data_[0] = 0;
  *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
LABEL_9:
  uint64_t v4 = a2 - 1;
  do
  {
    unsigned int v5 = *(unsigned __int8 *)(v4 + 1);
    if (v5 <= 0x3B)
    {
      if (v5 == 38)
      {
        int v6 = this;
        unsigned int v7 = "&amp;";
        goto LABEL_17;
      }
      if (!*(unsigned char *)(v4 + 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v5 == 60)
      {
        int v6 = this;
        unsigned int v7 = "&lt;";
        goto LABEL_17;
      }
      if (v5 == 62)
      {
        int v6 = this;
        unsigned int v7 = "&gt;";
LABEL_17:
        std::string::append(v6, v7);
        goto LABEL_20;
      }
    }
    std::string::push_back(this, v5);
LABEL_20:
    ++v4;
  }
  while (v4 != -1);
  __break(0x5513u);
LABEL_22:
  std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  return size != 0;
}

void *sub_1000EA810(void *result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    return result;
  }
  *uint64_t result = off_100129F08;
  uint64_t v1 = result[1];
  if (v1)
  {
    if ((v1 & 7) == 0)
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
      operator delete();
    }
    goto LABEL_9;
  }
  return result;
}

void sub_1000EA898(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000EA8AC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void *sub_1000EA8C0(void *result)
{
  if (result && (result & 7) == 0)
  {
    result[1] = 0;
    result[2] = 0;
    *uint64_t result = off_100129F30;
    operator new();
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EA97C(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EA8C0(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EA990(void *result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return result;
  }
  *uint64_t result = off_100129F30;
  uint64_t v1 = result[2];
  if (v1)
  {
    if ((v1 & 7) == 0)
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
      operator delete();
    }
    goto LABEL_11;
  }
  return sub_1000EA810(result);
}

void *sub_1000EAA28(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EA990(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EAA3C(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EA990(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EAA84(void *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*uint64_t result = off_100129F58, v2 = result + 3, ((unint64_t)(result + 1) & 7) != 0)
    || (v2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }
  else
  {
    while (*v2)
    {
      uint64_t result = *(void **)sub_1000996D8((uint64_t)(v1 + 1));
      if (result)
      {
        if ((result & 7) != 0) {
          goto LABEL_11;
        }
        (*(void (**)(void *))(*result + 8))(result);
      }
      sub_1000DC0B4((uint64_t)(v1 + 1));
    }
    sub_10001C7D0((uint64_t)(v1 + 1));
    return v1;
  }
  return result;
}

void *sub_1000EAB4C(void *result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EAA84(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EAB60(void *result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EAA84(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EABA8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1;
  }
  __break(0x5516u);
  return result;
}

void *sub_1000EABC0()
{
  return &unk_1001005F0;
}

void *sub_1000EABCC()
{
  return &unk_1001009EC;
}

uint64_t sub_1000EABD8(uint64_t result, int a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (a3 & 7) != 0
    || (uint64_t result = sub_1000E8CA4(result, a2, a3),
        *(void *)uint64_t result = off_10012A000,
        *(unsigned char *)(result + 56) &= 0xF0u,
        ((result + 64) & 7) != 0)
    || (*(void *)(result + 64) = 0, *(void *)(result + 72) = 0, (((_BYTE)result + 80) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)(result + 80) = 0;
  }
  return result;
}

void sub_1000EAC50()
{
}

uint64_t sub_1000EACB8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EACD0(uint64_t result, const char *a2, int a3, void *lpsrc)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!*(void *)(result + 24)) {
    sub_1000F2364();
  }
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v6 = result;
  if (*(unsigned __int8 *)(result + 272) >= 2u)
  {
LABEL_20:
    __break(0x550Au);
    return result;
  }
  if (*(unsigned char *)(result + 272))
  {
    if (!a2)
    {
LABEL_19:
      __break(0x5516u);
      goto LABEL_20;
    }
    if (sub_1000E947C(*(unsigned __int8 *)a2)) {
      return 0;
    }
    else {
      return 536883205;
    }
  }
  else
  {
    CC_LONG v7 = strlen(a2);
    return sub_1000EB1CC(v6, a2, v7);
  }
}

uint64_t sub_1000EADC4(uint64_t result, void *lpsrc)
{
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v2 = (unsigned char *)result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v4 = result;
  if (*(unsigned __int8 *)(result + 272) < 2u)
  {
    uint64_t v5 = 536883205;
    if (!*(unsigned char *)(result + 272))
    {
      if (v2[56])
      {
        return 536883206;
      }
      else
      {
        v2[56] |= 1u;
        uint64_t v6 = sub_1000EDDA0(result);
        uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)v2 + 64))(v2, v6);
        uint64_t v5 = result;
        if (!result)
        {
          if (!v6
            || (v6 & 7) != 0
            || (result = sub_100062690(v6), __p = 0, uint64_t v10 = 0, v11 = 0, !result)
            || (result & 7) != 0)
          {
LABEL_29:
            __break(0x5516u);
            goto LABEL_30;
          }
          if ((**(unsigned int (***)(uint64_t, void **, uint64_t))result)(result, &__p, 1))
          {
            if (v11 >= 0) {
              p_p = &__p;
            }
            else {
              p_p = __p;
            }
            if (v11 >= 0) {
              CC_LONG v8 = HIBYTE(v11);
            }
            else {
              CC_LONG v8 = v10;
            }
            uint64_t v5 = sub_1000EDDB8(v4, p_p, v8);
            (*(void (**)(uint64_t))(*(void *)v6 + 16))(v6);
          }
          else
          {
            uint64_t v5 = 0;
          }
          if (SHIBYTE(v11) < 0) {
            operator delete(__p);
          }
        }
      }
    }
    return v5;
  }
LABEL_30:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000EAF9C(uint64_t result, void *lpsrc)
{
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  if (!result) {
    sub_1000F2364();
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_1000EDDA0(result);
  if (!result) {
    sub_1000F2364();
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100062690(result);
  if (!result) {
    sub_1000F2364();
  }
  std::string __p = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  if (!(**(unsigned int (***)(uint64_t, void **, void))result)(result, &__p, 0))
  {
    sub_1000EE4F4(0, 4, "%s:%d: workoutDataXMLrootTagParseCntx::CompleteParseProc currElem->GetCompleteTagString() failed", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/workoutDataXMLGenericTagParseCntx.cpp", 224);
    uint64_t v8 = 16;
    goto LABEL_25;
  }
  if (v12 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if (v12 >= 0) {
    CC_LONG v6 = HIBYTE(v12);
  }
  else {
    CC_LONG v6 = v11;
  }
  uint64_t v7 = sub_1000EDDB8(v3, p_p, v6);
  if (!v7)
  {
    if (sub_1000E90A0(v2) == -1)
    {
      sub_1000EE000(v3);
      goto LABEL_24;
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
    (*(void (**)(uint64_t, unint64_t *))(*(void *)v4 + 24))(v4, &v9);
    uint64_t result = v9;
    if (!v9)
    {
LABEL_24:
      uint64_t v8 = 0;
      goto LABEL_25;
    }
    if ((v9 & 7) == 0)
    {
      (*(void (**)(void))(*(void *)v9 + 16))();
      goto LABEL_24;
    }
LABEL_31:
    __break(0x5516u);
    return result;
  }
  uint64_t v8 = v7;
  sub_1000EE4F4(0, 4, "%s:%d: workoutDataXMLrootTagParseCntx::CompleteParseProc sigData->AccumulateC14N() failed", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/workoutDataXMLGenericTagParseCntx.cpp", 219);
LABEL_25:
  *(unsigned char *)(v2 + 56) &= ~1u;
  if (SHIBYTE(v12) < 0) {
    operator delete(__p);
  }
  return v8;
}

uint64_t sub_1000EB1CC(uint64_t result, const void *a2, CC_LONG a3)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  int v4 = sub_1000EDDB8(result, a2, a3);
  uint64_t result = sub_1000EDDA0(v3);
  if (v4 || !result)
  {
    sub_1000EE4F4(0, 4, "%s:%d: workoutDataXMLGenericTagParseCntx::SendDataToConsumers SigData->GetOutStreamCntlr() failed", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/workoutDataXMLGenericTagParseCntx.cpp", 289);
    return 2;
  }
  if ((result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }
  else if (sub_1000E8194(result))
  {
    return 0;
  }
  else
  {
    return 5;
  }
  return result;
}

uint64_t sub_1000EB27C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EB2D8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EB290(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EB2D8(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EB2D8(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (*(void *)uint64_t result = off_10012A000, ((result + 64) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = (unint64_t *)(result + 64);
    sub_100099B28(&v2);
    return sub_1000E9398(v1);
  }
  return result;
}

void sub_1000EBD64()
{
}

uint64_t sub_1000EBDF8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = sub_1000EBE58(result);
    *(void *)uint64_t result = off_10012A080;
  }
  return result;
}

void sub_1000EBE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000EA03C(a1, a2, a3, a3 + 8, 1);
  }
}

uint64_t sub_1000EBE58(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (result += 8, ((v1 + 8) & 7) != 0)
    || (sub_1000658C4((void *)result), uint64_t result = v1 + 56, ((v1 + 56) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    sub_1000E81E0(result);
    *(void *)uint64_t v1 = off_10012A0B8;
    *(unsigned char *)(v1 + 96) = 0;
    return v1;
  }
  return result;
}

uint64_t sub_1000EBECC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EBF84(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EBEE0(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EBF84(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EBF28(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EBF84(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EBF3C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EBF84(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EBF84(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || (((_BYTE)result + 56) & 7) != 0 || ((result + 72) & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = (void *)(result + 72);
    sub_1000EBFEC(&v2);
    sub_1000E96E8(v1 + 8);
    return v1;
  }
  return result;
}

void sub_1000EBFEC(void **a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = (void **)*a1;
  if (!*a1 || ((unint64_t)*a1 & 7) != 0) {
    goto LABEL_17;
  }
  if (*v2)
  {
    sub_1000E8C28(v2, *v2);
    int v4 = (void **)*a1;
    if (!*a1 || (v4 & 7) != 0 || (((_BYTE)v4 + 16) & 7) != 0)
    {
LABEL_17:
      __break(0x5516u);
      goto LABEL_18;
    }
    uint64_t v5 = *v4;
    if ((unsigned char *)v4[2] - (unsigned char *)*v4 < 0)
    {
LABEL_18:
      __break(0x550Cu);
      return;
    }
    operator delete(v5);
  }
}

uint64_t sub_1000EC088(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t inited = InitSigningContext();
    if (!inited) {
      return 0;
    }
    uint64_t v2 = (void *)inited;
    if (UpdateSigningContext()) {
      uint64_t v3 = FinalizeSigningContext();
    }
    else {
      uint64_t v3 = 0;
    }
    free(v2);
    return v3;
  }
  return result;
}

uint64_t sub_1000EC158(const char *a1, int a2, char **a3, void *a4)
{
  uint64_t v8 = xmlBufferCreate();
  if (!v8) {
    return 0;
  }
  unint64_t v9 = v8;
  uint64_t v10 = xmlNewTextWriterMemory(v8, 0);
  if (!v10)
  {
    uint64_t v16 = 0;
LABEL_24:
    xmlBufferFree(v9);
    return v16;
  }
  uint64_t v11 = v10;
  if (xmlTextWriterWriteBase64(v10, a1, 0, a2) == -1) {
    goto LABEL_11;
  }
  xmlTextWriterFlush(v11);
  uint64_t v12 = xmlBufferContent(v9);
  uint64_t result = xmlBufferLength(v9);
  if (!a3 || (a3 & 7) != 0) {
    goto LABEL_27;
  }
  int v14 = result;
  int v15 = *a3;
  if (*a3)
  {
    if (a4 && (a4 & 7) == 0)
    {
      if ((*a4 & 0x80000000) != 0) {
        sub_1000F2634();
      }
      if ((int)result >= (int)*a4) {
        goto LABEL_11;
      }
LABEL_16:
      uint64_t result = (uint64_t)memcpy(v15, v12, v14);
      BOOL v17 = __CFADD__(v15, v14);
      BOOL v18 = &v15[v14] >= v15;
      if (v14 < 0) {
        BOOL v18 = v17;
      }
      if (v18)
      {
        v15[v14] = 0;
        uint64_t v16 = 1;
        goto LABEL_23;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(0x5516u);
LABEL_28:
    __break(0x5513u);
    goto LABEL_29;
  }
  if (!__OFADD__(result, 1))
  {
    int v15 = (char *)malloc_type_malloc((int)result + 1, 0x8656C743uLL);
    *a3 = v15;
    if (!v15)
    {
LABEL_11:
      uint64_t v16 = 0;
LABEL_23:
      xmlFreeTextWriter(v11);
      goto LABEL_24;
    }
    goto LABEL_16;
  }
LABEL_29:
  __break(0x5500u);
  return result;
}

uint64_t sub_1000EC2BC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    if ((byte_10013C790 & 1) == 0)
    {
      unint64_t v2 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v1 = (const char *)sub_1000EABCC();
      sub_1000EC158(v1, 1215, (char **)&qword_10013C788, &v2);
      byte_10013C790 = 1;
    }
    return qword_10013C788;
  }
  return result;
}

uint64_t sub_1000EC334(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    if ((byte_10013C7A0 & 1) == 0)
    {
      unint64_t v2 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v1 = (const char *)sub_1000EABC0();
      sub_1000EC158(v1, 1013, (char **)&qword_10013C798, &v2);
      byte_10013C7A0 = 1;
    }
    return qword_10013C798;
  }
  return result;
}

uint64_t sub_1000EC3AC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    unint64_t v1 = 0xAAAAAAAAAAAAAAAALL;
    if ((byte_10013C7A1 & 1) == 0)
    {
      if (IapAuthGetAppCert())
      {
        sub_1000EC158(0, -1431655766, (char **)&qword_10013C7A8, &v1);
        byte_10013C7A1 = 1;
      }
    }
    return qword_10013C7A8;
  }
  return result;
}

xmlNode *sub_1000EC43C(uint64_t a1, xmlNode *a2, const char *a3)
{
  if (!a1 || (a1 & 7) != 0) {
LABEL_14:
  }
    __break(0x5516u);
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  content[2] = v6;
  content[3] = v6;
  content[0] = v6;
  content[1] = v6;
  uint64_t v22 = (char *)content;
  uint64_t v21 = 64;
  memset(__b, 170, sizeof(__b));
  doc_txt_ptr[1] = (xmlChar *)2048;
  doc_txt_ptr[2] = __b;
  if ((sub_1000EC158(a3, 20, &v22, &v21) & 1) == 0)
  {
LABEL_13:
    __break(0x5518u);
    goto LABEL_14;
  }
  xmlDocPtr v7 = xmlNewDoc((const xmlChar *)"1.0");
  uint64_t v8 = xmlNewTextWriterTree(v7, 0, 0);
  xmlTextWriterStartElement(v8, (const xmlChar *)"SignedInfo");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"xmlns", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#");
  xmlTextWriterStartElement(v8, (const xmlChar *)"CanonicalizationMethod");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"Algorithm", (const xmlChar *)"http://www.w3.org/2001/10/xml-exc-c14n#");
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"SignatureMethod");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"Algorithm", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#rsa-sha1");
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"Reference");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"URI", (const xmlChar *)"");
  xmlTextWriterStartElement(v8, (const xmlChar *)"Transforms");
  xmlTextWriterStartElement(v8, (const xmlChar *)"Transform");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"Algorithm", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#enveloped-signature");
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"DigestMethod");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"Algorithm", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#sha1");
  xmlTextWriterEndElement(v8);
  xmlTextWriterWriteElement(v8, (const xmlChar *)"DigestValue", (const xmlChar *)content);
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndDocument(v8);
  xmlFreeTextWriter(v8);
  RootElement = xmlDocGetRootElement(v7);
  uint64_t v10 = xmlCopyNodeList(RootElement);
  xmlFreeDoc(v7);
  doc_txt_ptr[0] = 0;
  if ((int)sub_1000EC828((uint64_t)v10, doc_txt_ptr) >= 1 && doc_txt_ptr[0])
  {
    if (sub_1000EC088(a1))
    {
      xmlFree(doc_txt_ptr[0]);
      doc_txt_ptr[0] = 0;
      xmlSetProp(a2, (const xmlChar *)"xmlns", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#");
      xmlAddChild(a2, v10);
      uint64_t result = xmlNewNode(0, (const xmlChar *)"SignatureValue");
      if (result)
      {
        uint64_t v12 = result;
        xmlNodeAddContent(result, __b);
        xmlAddChild(a2, v12);
        xmlDocPtr v13 = xmlNewDoc((const xmlChar *)"1.0");
        int v14 = xmlNewTextWriterTree(v13, 0, 0);
        xmlTextWriterStartElement(v14, (const xmlChar *)"KeyInfo");
        xmlTextWriterStartElement(v14, (const xmlChar *)"X509Data");
        int v15 = (const xmlChar *)sub_1000EC3AC(a1);
        xmlTextWriterWriteElement(v14, (const xmlChar *)"X509Certificate", v15);
        uint64_t v16 = (const xmlChar *)sub_1000EC334(a1);
        xmlTextWriterWriteElement(v14, (const xmlChar *)"X509Certificate", v16);
        BOOL v17 = (const xmlChar *)sub_1000EC2BC(a1);
        xmlTextWriterWriteElement(v14, (const xmlChar *)"X509Certificate", v17);
        xmlTextWriterEndElement(v14);
        xmlTextWriterEndElement(v14);
        xmlTextWriterEndDocument(v14);
        xmlFreeTextWriter(v14);
        BOOL v18 = xmlDocGetRootElement(v13);
        uint64_t v19 = xmlCopyNodeList(v18);
        xmlFreeDoc(v13);
        xmlAddChild(a2, v19);
        return (xmlNode *)1;
      }
      return result;
    }
    goto LABEL_13;
  }
  if (doc_txt_ptr[0]) {
    xmlFree(doc_txt_ptr[0]);
  }
  return 0;
}

uint64_t sub_1000EC828(uint64_t result, xmlChar **doc_txt_ptr)
{
  if (!result
    || (unint64_t v2 = (xmlNode *)result, (result & 7) != 0)
    || (uint64_t v3 = (uint64_t *)(result + 64), ((result + 64) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
    return result;
  }
  uint64_t result = *v3;
  if (!*v3) {
    goto LABEL_11;
  }
  if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
    goto LABEL_19;
  }
  if (*(xmlNode **)(result + 24) == v2)
  {
    return xmlC14NDocDumpMemory((xmlDocPtr)result, 0, 1, 0, 0, doc_txt_ptr);
  }
  else
  {
LABEL_11:
    xmlInitParser();
    xmlDocPtr v6 = xmlNewDoc((const xmlChar *)"1.0");
    if (v6)
    {
      xmlDocPtr v7 = v6;
      uint64_t v8 = xmlCopyNode(v2, 1);
      if (v8)
      {
        xmlDocSetRootElement(v7, v8);
        uint64_t v9 = xmlC14NDocDumpMemory(v7, 0, 1, 0, 0, doc_txt_ptr);
        xmlFreeDoc(v7);
        xmlCleanupParser();
        return v9;
      }
      xmlFreeDoc(v7);
    }
    xmlCleanupParser();
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_1000EC948(uint64_t result, xmlChar **a2, const char *a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (a2)
  {
    if (a3)
    {
      uint64_t result = (uint64_t)xmlNewNode(0, (const xmlChar *)"Signature");
      if (result)
      {
        xmlDocPtr v6 = (xmlNode *)result;
        sub_1000EC43C(v3, (xmlNode *)result, a3);
        doc_txt_ptr = 0;
        uint64_t v7 = sub_1000EC828((uint64_t)v6, &doc_txt_ptr);
        xmlFreeNode(v6);
        uint64_t result = 0xFFFFFFFFLL;
        if ((int)v7 >= 1)
        {
          if (doc_txt_ptr)
          {
            if ((a2 & 7) == 0)
            {
              *a2 = doc_txt_ptr;
              return v7;
            }
LABEL_11:
            __break(0x5516u);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000ECA04(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    CC_SHA1_Init((CC_SHA1_CTX *)(result + 8));
    return 0;
  }
  return result;
}

uint64_t sub_1000ECA34(uint64_t result, const void *a2, unint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else if (!HIDWORD(a3))
  {
    CC_SHA1_Update((CC_SHA1_CTX *)(result + 8), a2, a3);
    return 0;
  }
  __break(0x5507u);
  return result;
}

void sub_1000ECA70(uint64_t a1)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      memset(md, 170, sizeof(md));
      sub_1000EBD64();
    }
  }
  __break(0x5516u);
}

uint64_t sub_1000ED0F0(uint64_t a1)
{
  qword_10013C7B0 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));
  return _objc_release_x1();
}

uint64_t sub_1000EDAA0(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_10012A180, ((result + 8) & 7) != 0)
    || (*(void *)uint64_t result = off_10012A0D8, *(void *)(result + 8) = off_10012A108, ((result + 232) & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    *(_OWORD *)(result + 257) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    CC_SHA1_Init((CC_SHA1_CTX *)(result + 36));
    CC_SHA1_Init((CC_SHA1_CTX *)(v1 + 132));
    return v1;
  }
  return result;
}

uint64_t sub_1000EDB5C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000EDAA0(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000EDB70(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)a1 = off_10012A0D8;
  char v2 = a1 + 8;
  *(void *)(a1 + 8) = off_10012A108;
  uint64_t v3 = *(void *)(a1 + 264);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      goto LABEL_6;
    }
LABEL_10:
    __break(0x5516u);
    return;
  }
LABEL_6:
  if (((a1 + 232) & 7) != 0) {
    goto LABEL_10;
  }
  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }
  if ((v2 & 7) != 0) {
    goto LABEL_10;
  }
}

void sub_1000EDC38(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000EDB70(a1);
  }
}

void sub_1000EDC4C(uint64_t a1)
{
  uint64_t v1 = a1 - 8;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000EDB70(v1);
  }
}

uint64_t sub_1000EDC60(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    sub_1000EDB70(result);
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EDCA8(uint64_t a1)
{
  return sub_1000EDC60(a1 - 8);
}

char *sub_1000EDCB0(char *result, const void *a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (char *)memcpy(result + 16, a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EDCCC(uint64_t result, const std::string *a2)
{
  if (result && (result & 7) == 0 && ((result + 232) & 7) == 0)
  {
    std::string::operator=((std::string *)(result + 232), a2);
    operator new();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EDDA0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 264);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EDDB8(uint64_t result, const void *a2, CC_LONG a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    CC_SHA1_Update((CC_SHA1_CTX *)(result + 36), a2, a3);
    return 0;
  }
  return result;
}

uint64_t sub_1000EDDE8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  memset(v12, 170, 20);
  uint64_t v10 = 0;
  memset(md, 170, 20);
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v8[4] = v2;
  v8[5] = v2;
  void v8[2] = v2;
  void v8[3] = v2;
  v8[0] = v2;
  v8[1] = v2;
  sub_1000C0500((uint64_t)v8);
  CC_SHA1_Final(md, (CC_SHA1_CTX *)(a1 + 132));
  CC_SHA1_Final(v12, (CC_SHA1_CTX *)(a1 + 36));
  if (*(void *)md != *(void *)(a1 + 16)
    || *(void *)&md[8] != *(void *)(a1 + 24)
    || *(unsigned int *)&md[16] != (unint64_t)*(unsigned int *)(a1 + 32))
  {
    sub_1000EE4F4(0, 4, "%s:%d: XmlSigData::WriteSignature File verification failed skipping signature", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/xmlSigData.cpp", 95);
    return 1;
  }
  int v6 = sub_1000EC948((uint64_t)v8, &v10, (const char *)v12);
  uint64_t result = 0;
  if (v6 && v10)
  {
    uint64_t v7 = *(void *)(a1 + 256);
    if (v7 && (v7 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 16))(v7);
      xmlFree(v10);
      return 0;
    }
LABEL_17:
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000EDF54(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }
  else
  {
    char data = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
    return CC_SHA1_Update((CC_SHA1_CTX *)(v2 + 132), &data, 1u);
  }
  return result;
}

uint64_t sub_1000EDFC8(uint64_t a1, uint64_t a2)
{
  return sub_1000EDF54(a1 - 8, a2);
}

uint64_t sub_1000EDFD0(uint64_t result, const void *a2, CC_LONG a3)
{
  if (result && (result & 7) == 0) {
    return CC_SHA1_Update((CC_SHA1_CTX *)(result + 132), a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EDFE8(uint64_t result, const void *a2, CC_LONG a3)
{
  if ((((_BYTE)result - 8) & 7) == 0) {
    return CC_SHA1_Update((CC_SHA1_CTX *)(result + 124), a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EE000(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(unsigned char *)(result + 272) = 1;
  }
  return result;
}

uint64_t sub_1000EE01C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(result + 272) < 2u)
  {
    if (!*(unsigned char *)(result + 272))
    {
      uint64_t v2 = 536883205;
      goto LABEL_8;
    }
    if (sub_1000EDDE8(result))
    {
      uint64_t v2 = 1;
LABEL_8:
      sub_1000EE4F4(0, 4, "%s:%d: XmlSigData::CompleteSignedFile WriteSignature() failed or root tag not ready for signature", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/xmlSigData.cpp", 131);
      return v2;
    }
    unint64_t v3 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t result = *(void *)(v1 + 264);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, unint64_t *))(*(void *)result + 24))(result, &v3);
      uint64_t result = v3;
      if (!v3) {
        return 0;
      }
      if ((v3 & 7) == 0)
      {
        (*(void (**)(void))(*(void *)v3 + 16))();
        return 0;
      }
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000EE128(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000EE13C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EE160(uint64_t result, _OWORD *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }
  else if (result > 1)
  {
    return 22;
  }
  else
  {
    return sub_1000EE1C8(a2);
  }
  return result;
}

uint64_t sub_1000EE184(uint64_t result, __darwin_time_t *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }
  else if (result > 1)
  {
    return 22;
  }
  else
  {
    return sub_1000EE1DC(a2);
  }
  return result;
}

int *sub_1000EE1A8(int *result, __darwin_time_t *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }
  else if (result)
  {
    return (int *)22;
  }
  else
  {
    return sub_1000EE244(a2);
  }
  return result;
}

uint64_t sub_1000EE1C8(_OWORD *a1)
{
  *a1 = xmmword_100100FE0;
  return 0;
}

uint64_t sub_1000EE1DC(__darwin_time_t *a1)
{
  v4.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v4.tv_usec = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = gettimeofday(&v4, 0);
  if (!result)
  {
    *a1 = v4.tv_sec;
    uint64_t v3 = 1000 * v4.tv_usec;
    if (v3 == (int)v3) {
      a1[1] = (int)v3;
    }
    else {
      __break(0x550Cu);
    }
  }
  return result;
}

int *sub_1000EE244(__darwin_time_t *a1)
{
  __darwin_time_t v1 = a1[1];
  v3.tv_sec = *a1;
  *(&v3.tv_usec + 1) = -1431655766;
  v3.tv_usec = (int)v1 / 1000;
  if ((settimeofday(&v3, 0) & 0x80000000) == 0) {
    return 0;
  }
  uint64_t result = __error();
  if (result && (result & 3) == 0) {
    return (int *)*result;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EE2C0(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    *(void *)uint64_t result = off_10012A1A0;
    if (a2 < 8)
    {
      *(_DWORD *)(result + 8) = a2;
      return result;
    }
  }
  __break(0x550Au);
  return result;
}

void *sub_1000EE300(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_10012A1A0;
  }
  return result;
}

void *sub_1000EE330(void *result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *uint64_t result = off_10012A1A0;
  }
  return result;
}

void *sub_1000EE360(void *result)
{
  if (result && (result & 7) == 0)
  {
    *uint64_t result = off_10012A1A0;
    operator delete();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000EE3A0(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }
  uint64_t result = *(unsigned int *)(result + 8);
  if (result >= 8) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000EE3C4(uint64_t result, _OWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = *(unsigned int *)(result + 8);
    if (result < 8) {
      return sub_1000EE160(result, a2);
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000EE3E8(uint64_t result, __darwin_time_t *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = *(unsigned int *)(result + 8);
    if (result < 8) {
      return sub_1000EE184(result, a2);
    }
  }
  __break(0x550Au);
  return result;
}

int *sub_1000EE40C(int *result, __darwin_time_t *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t result = (int *)result[2];
    if (result < 8) {
      return sub_1000EE1A8(result, a2);
    }
  }
  __break(0x550Au);
  return result;
}

uint64_t start()
{
  id v0 = objc_alloc_init((Class)NSAutoreleasePool);
  objc_msgSend(+[IAPServer sharedIAPServer](IAPServer, "sharedIAPServer"), "run");

  return 0;
}

BOOL sub_1000EE474(BOOL result)
{
  if (result < 0x10) {
    return (qword_10013C7C0 & (1 << result)) != 0;
  }
  __break(0x550Au);
  return result;
}

void sub_1000EE49C(unsigned int a1, NSString *format, ...)
{
  va_start(va, format);
  if (a1 >= 0x10)
  {
    __break(0x550Au);
  }
  else if ((qword_10013C7C0 & (1 << a1)) != 0)
  {
    NSLogv(format, va);
  }
}

void sub_1000EE4F4(unsigned int a1, int a2, char *a3, ...)
{
  va_start(va, a3);
  if (a1 >= 0x10)
  {
    __break(0x550Au);
  }
  else if ((qword_10013C7C0 & (1 << a1)) != 0)
  {
    vsyslog(a2, a3, va);
  }
}

void sub_1000EE550()
{
  NSLog(@"Loading logging preferences... (IAPLogging)");
  uint64_t v0 = 0;
  qword_10013C7C0 = 0;
  do
  {
    if (CFPreferencesGetAppBooleanValue(*(CFStringRef *)&dword_10012A1E0[v0 + 2], *(CFStringRef *)&dword_10012A1E0[v0 + 4], 0))
    {
      unsigned int v1 = dword_10012A1E0[v0];
      if (v1 >= 0x10)
      {
        __break(0x550Au);
        return;
      }
      qword_10013C7C0 |= 1 << v1;
    }
    v0 += 6;
  }
  while (v0 != 84);
  if (MGGetBoolAnswer())
  {
    NSLog(@"Internal build, enable Verbose Logging");
    qword_10013C7C0 |= 1uLL;
    uint64_t v2 = "Enabled";
  }
  else if (qword_10013C7C0)
  {
    uint64_t v2 = "Enabled";
  }
  else
  {
    uint64_t v2 = "Disabled";
  }
  NSLog(@"Verbose Logging %s", v2);
}

void sub_1000EE7E4(void *a1, int a2, int a3)
{
  if (!a2)
  {
    NSLog(@"ERROR - %s:%s - %d service is NULL", "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAPPortManager.mm", "__accessoryPortManagerInterest", 40);
    return;
  }
  switch(a3)
  {
    case -469794794:
      uint64_t v8 = sub_10002C320((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
      if (!v8)
      {
        uint64_t v8 = sub_10002C3D0((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v8)
        {
          NSLog(@"ERROR - kIOAccessoryManagerMessageUSBBatteryPackChange Still no podTransport for manager %d", objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          return;
        }
      }
      uint64_t v9 = (uint64_t)v8;
      uint64_t v6 = sub_10004E9C8();
      if (!v6 || (v6 & 7) != 0) {
        goto LABEL_41;
      }
      sub_100050960(v6, v9, 0);
      break;
    case -469794795:
      uint64_t v10 = sub_10002C320((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
      if (!v10)
      {
        uint64_t v10 = sub_10002C3D0((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v10)
        {
          NSLog(@"ERROR - kIOAccessoryManagerMessageUSBCurrentLimitChange Still no podTransport for manager %d", objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          return;
        }
      }
      uint64_t v11 = (uint64_t)v10;
      unsigned int v12 = [a1 sendReserveCurrentNotification];
      uint64_t v6 = sub_10004E9C8();
      BOOL v14 = (v6 & 7) == 0 && v6 != 0;
      if (v12)
      {
        if (v14)
        {
          sub_100050918(v6, v11, 0);
          uint64_t v6 = (uint64_t)a1;
          uint64_t v7 = 0;
          goto _objc_msgSend$setSendReserveCurrentNotification_;
        }
LABEL_41:
        __break(0x5516u);
_objc_msgSend$setSendReserveCurrentNotification_:
        [(id)v6 setSendReserveCurrentNotification:v7];
        return;
      }
      if (!v14) {
        goto LABEL_41;
      }
      sub_1000508D0(v6, v11, 0);
      break;
    case -469794796:
      timeval v4 = sub_10002C320((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
      if (!v4)
      {
        timeval v4 = sub_10002C3D0((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v4)
        {
          NSLog(@"ERROR - kIOAccessoryManagerMessageUSBConnectChange Still no podTransport for manager %d", objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          return;
        }
      }
      uint64_t v5 = (uint64_t)v4;
      uint64_t v6 = sub_10005176C();
      if (v6 && (v6 & 7) == 0)
      {
        sub_1000562E8(v6, v5);
        return;
      }
      goto LABEL_41;
    default:
      return;
  }
}

void sub_1000EF8C0(id a1)
{
  qword_10013C7C8 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.CoreAccessories"];
}

void *sub_1000EF8F4(const char *a1, const void *a2)
{
  uint64_t result = (void *)sub_1000EF940(a2);
  if (result)
  {
    return dlsym(result, a1);
  }
  return result;
}

const void *sub_1000EF940(const void *a1)
{
  pthread_mutex_lock(&stru_10013BA80);
  CFDictionaryRef Mutable = (const __CFDictionary *)qword_10013C7D8;
  if (!qword_10013C7D8)
  {
    CFDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, 0, 0);
    qword_10013C7D8 = (uint64_t)Mutable;
  }
  int Value = CFDictionaryGetValue(Mutable, a1);
  if (!Value)
  {
    switch((unint64_t)a1)
    {
      case 0uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"UIKit";
        CFStringRef v5 = @"UIKit.framework";
        goto LABEL_7;
      case 1uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"MobileCoreServices";
        CFStringRef v5 = @"MobileCoreServices.framework";
LABEL_7:
        CFStringRef v6 = @"Frameworks";
        goto LABEL_14;
      case 2uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"SpringBoardServices";
        CFStringRef v5 = @"SpringBoardServices.framework";
        goto LABEL_13;
      case 3uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"FrontBoardServices";
        CFStringRef v5 = @"FrontBoardServices.framework";
        goto LABEL_13;
      case 4uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"CarKit";
        CFStringRef v5 = @"CarKit.framework";
        goto LABEL_13;
      case 5uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"VisualVoicemail";
        CFStringRef v5 = @"VisualVoicemail.framework";
        goto LABEL_13;
      case 6uLL:
        uint64_t v4 = CPSystemRootDirectory();
        CFStringRef v10 = @"AccessoryAudio";
        CFStringRef v5 = @"AccessoryAudio.framework";
LABEL_13:
        CFStringRef v6 = @"PrivateFrameworks";
LABEL_14:
        uint64_t v7 = +[NSString pathWithComponents:](NSString, "pathWithComponents:", +[NSArray arrayWithObjects:v4, @"System", @"Library", v6, v5, v10, 0]);
        if (!v7) {
          goto LABEL_17;
        }
        uint64_t v8 = dlopen([(NSString *)v7 UTF8String], 1);
        if (!v8) {
          goto LABEL_17;
        }
        int Value = v8;
        CFDictionarySetValue((CFMutableDictionaryRef)qword_10013C7D8, a1, v8);
        break;
      default:
LABEL_17:
        NSLog(@"Could not load source: %ld", a1);
        int Value = 0;
        break;
    }
  }
  pthread_mutex_unlock(&stru_10013BA80);
  return Value;
}

Class sub_1000EFBCC(NSString *a1, const void *a2)
{
  Class result = (Class)sub_1000EF940(a2);
  if (result)
  {
    return NSClassFromString(a1);
  }
  return result;
}

void sub_1000EFE64(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_1000EFE7C(uint64_t a1)
{
  id result = [*(id *)(a1 + 40) length];
  uint64_t v3 = *(void *)(a1 + 32) + 40;
  if ((v3 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    goto LABEL_7;
  }
  if (!__CFADD__(*(void *)v3, result))
  {
    *(void *)v3 += result;
    uint64_t v4 = (id *)(*(void *)(a1 + 32) + 8);
    if ((v4 & 7) == 0)
    {
      id result = [*v4 addObject:*(void *)(a1 + 40)];
      uint64_t v5 = *(void *)(a1 + 32) + 40;
      if ((v5 & 7) == 0)
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(void *)v5 >> 10 > 4uLL;
        return result;
      }
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(0x5500u);
  return result;
}

void sub_1000F0104(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_1000F0120(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _log:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000F029C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

char *sub_1000F02B8(uint64_t a1)
{
  id result = (char *)[*(id *)(a1 + 48) _log:+[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@ %@<", *(void *)(a1 + 32), *(void *)(a1 + 40))];
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 24);
  if (v4 < 2)
  {
    *(unsigned char *)(v3 + 24) = v4 | result;
    uint64_t v5 = *(void **)(a1 + 56);
    if (v5)
    {
      CFStringRef v6 = (unsigned __int8 *)[v5 bytes];
      id result = (char *)[*(id *)(a1 + 56) length];
      if (result)
      {
        uint64_t v7 = result;
        while (v6)
        {
          id result = (char *)[*(id *)(a1 + 48) _log:+[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%02x ", *v6)];
          uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
          unsigned int v9 = *(unsigned __int8 *)(v8 + 24);
          if (v9 > 1) {
            goto LABEL_11;
          }
          *(unsigned char *)(v8 + 24) = v9 | result;
          if (v6 == (unsigned __int8 *)-1) {
            goto LABEL_13;
          }
          ++v6;
          if (!--v7) {
            goto LABEL_9;
          }
        }
        goto LABEL_12;
      }
    }
LABEL_9:
    id result = (char *)[*(id *)(a1 + 48) _log:@">\n"];
    uint64_t v10 = *(void *)(*(void *)(a1 + 64) + 8);
    unsigned int v11 = *(unsigned __int8 *)(v10 + 24);
    if (v11 <= 1)
    {
      *(unsigned char *)(v10 + 24) = v11 | result;
      return result;
    }
  }
LABEL_11:
  __break(0x550Au);
LABEL_12:
  __break(0x5516u);
LABEL_13:
  __break(0x5513u);
  return result;
}

void sub_1000F057C(uint64_t a1)
{
  uint64_t v3 = +[NSFileManager defaultManager];
  unsigned int v4 = *(void **)(a1 + 32);
  if (((unint64_t)(v4 + 3) & 7) != 0) {
    goto LABEL_20;
  }
  if (v4[3])
  {
    if (-[NSFileManager fileExistsAtPath:](v3, "fileExistsAtPath:")) {
      goto LABEL_8;
    }
    unsigned int v4 = *(void **)(a1 + 32);
  }
  [v4 createFilePath];
  uint64_t v5 = (id *)(*(void *)(a1 + 32) + 24);
  if ((v5 & 7) != 0) {
    goto LABEL_20;
  }
  CFStringRef v6 = fopen((const char *)[*v5 fileSystemRepresentation], "a");
  if (v6) {
    fclose(v6);
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 32) + 24;
  if ((v7 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v8 = +[NSFileHandle fileHandleForWritingAtPath:*(void *)v7];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  unsigned int v9 = (id *)(*(void *)(a1 + 32) + 8);
  if ((v9 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v10 = v8;
  id v11 = *v9;
  id v12 = [*v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v20;
    do
    {
      for (unint64_t i = 0; i != v13; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void *)(*((void *)&v19 + 1) + 8 * i);
        [(NSFileHandle *)v10 seekToEndOfFile];
        [(NSFileHandle *)v10 writeData:v16];
      }
      id v13 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v13);
  }
  BOOL v17 = (id *)(*(void *)(a1 + 32) + 8);
  if ((v17 & 7) != 0
    || ([*v17 removeAllObjects], uint64_t v18 = *(void *)(a1 + 32) + 40, (v18 & 7) != 0))
  {
LABEL_20:
    __break(0x5516u);
  }
  *(void *)uint64_t v18 = 0;
}

void sub_1000F0824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (((v1 + 48) & 7) != 0) {
    goto LABEL_8;
  }
  if (*(void *)(v1 + 48)) {
    return;
  }
  uint64_t v3 = +[NSTimer timerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "timerWithTimeInterval:target:selector:userInfo:repeats:", 3.0);
  uint64_t v4 = *(void *)(a1 + 32) + 48;
  if ((v4 & 7) != 0
    || (*(void *)uint64_t v4 = v3,
        Main = CFRunLoopGetMain(),
        CFStringRef v6 = (__CFRunLoopTimer **)(*(void *)(a1 + 32) + 48),
        (v6 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
  }
  else
  {
    uint64_t v7 = *v6;
    CFRunLoopAddTimer(Main, v7, kCFRunLoopCommonModes);
  }
}

void sub_1000F0964(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) + 48;
  if ((v1 & 7) != 0) {
    goto LABEL_8;
  }
  if (!*(void *)v1) {
    return;
  }
  Main = CFRunLoopGetMain();
  uint64_t v4 = (CFRunLoopTimerRef *)(*(void *)(a1 + 32) + 48);
  if ((v4 & 7) != 0
    || (CFRunLoopRemoveTimer(Main, *v4, kCFRunLoopCommonModes),
        uint64_t v5 = (id *)(*(void *)(a1 + 32) + 48),
        (v5 & 7) != 0)
    || (*v5, uint64_t v6 = *(void *)(a1 + 32) + 48, (v6 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
    return;
  }
  *(void *)uint64_t v6 = 0;
}

void sub_1000F0A9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40) + 48;
  if ((v1 & 7) != 0) {
    goto LABEL_6;
  }
  uint64_t v3 = *(void **)(a1 + 32);
  if (v3 != *(void **)v1) {
    return;
  }

  uint64_t v4 = *(void *)(a1 + 40) + 48;
  if ((v4 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }
  *(void *)uint64_t v4 = 0;
}

void sub_1000F0E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F0E30(uint64_t a1, uint64_t a2)
{
}

void sub_1000F0E40(uint64_t a1)
{
}

void *sub_1000F0E4C(void *result)
{
  uint64_t v1 = (id *)(result[4] + 24);
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = result;
    id result = *v1;
    *(void *)(*(void *)(v2[5] + 8) + 40) = result;
  }
  return result;
}

void sub_1000F0F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1000F0FA0(void *result)
{
  uint64_t v1 = (id *)(result[4] + 40);
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
  }
  else
  {
    uint64_t v2 = result;
    id result = *v1;
    *(void *)(*(void *)(v2[5] + 8) + 40) = result;
  }
  return result;
}

void sub_1000F10D4(uint64_t a1, uint64_t a2)
{
}

void sub_1000F10E4(uint64_t a1)
{
}

void sub_1000F10F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) + 32;
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_7:
    __break(0x5510u);
    return;
  }
  uint64_t v2 = *(void *)v1;
  if (v2)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = v2;
    uint64_t v3 = *(NSObject **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      dispatch_retain(v3);
      return;
    }
    goto LABEL_7;
  }
}

void *sub_1000F12F8(void *result)
{
  uint64_t v1 = (void **)(result[4] + 24);
  if ((v1 & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t v2 = result;
  uint64_t v3 = *v1;
  if (v3 == (void *)result[5]) {
    return result;
  }

  id result = [(id)v2[5] copy];
  uint64_t v4 = v2[4] + 24;
  if ((v4 & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    return result;
  }
  *(void *)uint64_t v4 = result;
  uint64_t v5 = (void *)v2[4];
  return [v5 _reloadEventHandler];
}

void *sub_1000F1408(void *result)
{
  uint64_t v1 = (void **)(result[4] + 40);
  if ((v1 & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t v2 = result;
  uint64_t v3 = *v1;
  if (v3 == (void *)result[5]) {
    return result;
  }

  id result = [(id)v2[5] copy];
  uint64_t v4 = v2[4] + 40;
  if ((v4 & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    return result;
  }
  *(void *)uint64_t v4 = result;
  uint64_t v5 = (void *)v2[4];
  return [v5 _reloadEventHandler];
}

void sub_1000F1518(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (((v1 + 32) & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v3 = *(NSObject **)(v1 + 32);
  if (v3 == *(NSObject **)(a1 + 40)) {
    return;
  }
  if (v3)
  {
    dispatch_release(v3);
    uint64_t v1 = *(void *)(a1 + 32);
  }
  uint64_t v4 = (void *)(v1 + 32);
  if ((v4 & 7) != 0
    || (*uint64_t v4 = *(void *)(a1 + 40), v5 = (NSObject **)(*(void *)(a1 + 32) + 32), (v5 & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    return;
  }
  uint64_t v6 = *v5;
  if (*v5)
  {
    dispatch_retain(v6);
  }
}

void sub_1000F1754(void *a1, _xpc_connection_s *object)
{
  if (object == (_xpc_connection_s *)&_xpc_error_connection_invalid)
  {
    *(unsigned char *)(a1[4] + 48) = 0;
    goto LABEL_12;
  }
  if (object == (_xpc_connection_s *)&_xpc_error_connection_interrupted)
  {
LABEL_12:
    if (*(unsigned __int8 *)(a1[4] + 49) < 2u)
    {
      if (*(unsigned char *)(a1[4] + 49))
      {
        uint64_t v6 = a1[5];
        if (v6)
        {
          uint64_t v7 = *(void (**)(void))(v6 + 16);
          v7();
        }
      }
      return;
    }
    __break(0x550Au);
LABEL_21:
    __break(0x5510u);
    goto LABEL_22;
  }
  if (!object) {
    goto LABEL_21;
  }
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_connection)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000F18DC;
    v9[3] = &unk_10012A408;
    uint64_t v8 = a1[4];
    long long v10 = *(_OWORD *)(a1 + 5);
    v9[4] = v8;
    _OWORD v9[5] = object;
    xpc_connection_set_event_handler(object, v9);
    xpc_connection_resume(object);
    return;
  }
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v4 = a1[6];
    if (v4)
    {
      if (((a1[4] + 8) & 7) == 0)
      {
        uint64_t v5 = *(void (**)(void))(v4 + 16);
        v5();
        return;
      }
LABEL_22:
      __break(0x5516u);
    }
  }
}

uint64_t sub_1000F18DC(uint64_t result, void *a2)
{
  if (a2 == &_xpc_error_connection_invalid)
  {
    *(unsigned char *)(*(void *)(result + 32) + 48) = 0;
  }
  else if (a2 != &_xpc_error_connection_interrupted)
  {
    uint64_t v2 = *(void *)(result + 56);
    if (v2) {
      return (*(uint64_t (**)(void))(v2 + 16))(*(void *)(result + 56));
    }
    return result;
  }
  if (*(unsigned __int8 *)(*(void *)(result + 32) + 49) >= 2u)
  {
    __break(0x550Au);
  }
  else if (*(unsigned char *)(*(void *)(result + 32) + 49))
  {
    id result = *(void *)(result + 48);
    if (result) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  return result;
}

void sub_1000F1950()
{
  if (qword_10013C7E8 != -1) {
    dispatch_once(&qword_10013C7E8, &stru_10012A450);
  }
  int v0 = dword_10013C7E0 + 1;
  if (dword_10013C7E0 != -1)
  {
    if ((v0 & 0xFFFFFF) == 0) {
      int v0 = dword_10013C7E0 + 2;
    }
    dword_10013C7E0 = v0;
    uint64_t v1 = [+[NSBundle mainBundle] bundleIdentifier];
    if ([(NSString *)v1 caseInsensitiveCompare:@"com.apple.iapd"])
    {
      if ([(NSString *)v1 caseInsensitiveCompare:@"com.apple.iap2d"])
      {
        NSLog(@"%s:%s unknown daemon %@ creating connectionID", "/Library/Caches/com.apple.xbs/Sources/iapd/common/SharedFunctions.m", "Generate32BitConnectionID", v1);
        unsigned int v2 = dword_10013C7E0 | 0xFF000000;
LABEL_12:
        dword_10013C7E0 = v2;
        return;
      }
      int v3 = dword_10013C7E0;
      int v4 = 0x2000000;
    }
    else
    {
      int v3 = dword_10013C7E0;
      int v4 = 0x1000000;
    }
    unsigned int v2 = v4 & 0xFF000000 | v3 & 0xFFFFFF;
    goto LABEL_12;
  }
  __break(0x5500u);
}

void sub_1000F1A40(id a1)
{
  dword_10013C7E0 = arc4random();
}

id sub_1000F1A60(uint64_t a1)
{
  uint64_t v1 = +[NSString stringWithUTF8String:a1];
  Class v2 = sub_1000EFBCC(@"LSApplicationProxy", (const void *)1);
  Class v3 = sub_1000EFBCC(@"LSApplicationWorkspace", (const void *)1);
  uint64_t v8 = 0;
  unsigned int v9 = &v8;
  uint64_t v10 = 0x2020000000;
  char v11 = 0;
  id result = objc_msgSend(-[objc_class defaultWorkspace](v3, "defaultWorkspace"), "applicationIsInstalled:", v1);
  if (result)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_1000F1BA8;
    void v7[3] = &unk_10012A478;
    v7[4] = [(objc_class *)v2 applicationProxyForIdentifier:v1];
    v7[5] = &v8;
    id result = objc_msgSend(-[objc_class defaultWorkspace](v3, "defaultWorkspace"), "enumerateBundlesOfType:block:", 4, v7);
  }
  unsigned int v5 = *((unsigned __int8 *)v9 + 24);
  if (v5 >= 2)
  {
    __break(0x550Au);
  }
  else
  {
    BOOL v6 = v5 != 0;
    _Block_object_dispose(&v8, 8);
    return (id)v6;
  }
  return result;
}

void sub_1000F1B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F1BA8(uint64_t a1, void *a2, unsigned char *a3)
{
  id result = [a2 isEqual:*(void *)(a1 + 32)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  if (*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) >= 2u)
  {
    __break(0x550Au);
    goto LABEL_7;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    return result;
  }
  if (!a3)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }
  *a3 = 1;
  return result;
}

BOOL sub_1000F1C10(uint64_t a1)
{
  Class v3 = +[NSString stringWithCString:a1 encoding:4];
  unint64_t v4 = 0;
  do
  {
    NSComparisonResult v5 = [(NSString *)v3 caseInsensitiveCompare:*(&off_10012A498 + v4)];
    if (v4 > 0xF) {
      break;
    }
    ++v4;
  }
  while (v5);
  BOOL v6 = v5 == NSOrderedSame;
  return v6;
}

BOOL sub_1000F1C94()
{
  return CFPreferencesGetAppBooleanValue(@"GreenValkyrie", @"com.apple.iaptransportd", 0) != 0;
}

void sub_1000F1DB8(id a1)
{
  qword_10013C7F0 = (uint64_t)asl_open(0, "IAP", 2u);
  if (qword_10013C7F0) {
    qword_10013C7F8 = (uint64_t)asl_new(0);
  }
  else {
    syslog(3, "Couldn't open Event Log file");
  }
}

void sub_1000F200C(const char *a1, uint64_t a2, char a3)
{
  if (!_AXSVoiceOverTouchEnabled())
  {
    NSLog(@"%s:%s-%d ERROR - trying to talk to VOT without enabling it first!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 98);
    return;
  }
  xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
  if (v7)
  {
    uint64_t v8 = v7;
    xpc_dictionary_set_string(v7, "requestType", "VoiceOver");
    if (a1)
    {
      xpc_dictionary_set_string(v8, "VoiceOver", a1);
      unsigned int v9 = (const char *)[IAPAppEAClientXPC UTF8String];
      if (v9)
      {
        mach_service = xpc_connection_create_mach_service(v9, 0, 0);
        if (!mach_service)
        {
          NSLog(@"%s:%s-%d ERROR - No connection made!\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 90);
LABEL_28:
          xpc_release(v8);
          return;
        }
        char v11 = mach_service;
        xpc_connection_set_event_handler(mach_service, &stru_10012A558);
        xpc_connection_resume(v11);
        id v19 = 0;
        id v12 = +[NSPropertyListSerialization dataWithPropertyList:a2 format:200 options:0 error:&v19];
        if (!v12)
        {
          if (v19) {
            CFStringRef v15 = (const __CFString *)[v19 description];
          }
          else {
            CFStringRef v15 = &stru_10012A858;
          }
          NSLog(@"%s:%s-%d ERROR - bogus userInfo with the following error: %@ ", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 83, v15);
LABEL_27:
          xpc_release(v11);
          goto LABEL_28;
        }
        id v13 = v12;
        id v14 = [(NSData *)v12 bytes];
        if (v14)
        {
          xpc_dictionary_set_data(v8, "userInfo", v14, [(NSData *)v13 length]);
          if (a3)
          {
            xpc_connection_send_message(v11, v8);
          }
          else
          {
            uint64_t v16 = (void *)IAPAppSendXPCMessageWithTimeout();
            if (v16)
            {
              BOOL v17 = v16;
              xpc_type_t type = xpc_get_type(v16);
              if (type != (xpc_type_t)&_xpc_type_dictionary)
              {
                if (v17 == &_xpc_error_connection_invalid && type == (xpc_type_t)&_xpc_type_error)
                {
                  NSLog(@"%s:%s-%d ERROR - received an XPC_ERROR_CONNECTION_INVALID error.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 58);
                }
                else if (v17 == &_xpc_error_connection_interrupted && type == (xpc_type_t)&_xpc_type_error)
                {
                  NSLog(@"%s:%s-%d ERROR - received an XPC_ERROR_CONNECTION_INTERRUPTED error.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 62);
                }
                else
                {
                  NSLog(@"%s:%s-%d ERROR - received an unknown error.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 66);
                }
              }
              xpc_release(v17);
            }
            else
            {
              NSLog(@"%s:%s-%d ERROR - NULL reply dictionary.\n", "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m", "VoiceOver", 72);
            }
          }
          goto LABEL_27;
        }
      }
    }
  }
  __break(0x5510u);
}

void sub_1000F232C()
{
}

void sub_1000F2364()
{
}

void sub_1000F2384()
{
}

void sub_1000F2398()
{
}

void sub_1000F23B4()
{
}

void sub_1000F23C8()
{
  __assert_rtn("__GetPlaylistNamesHelper", "MediaLibrary.mm", 2287, "(int32_t)[collections count] == geniusMixCount");
}

void sub_1000F23F8()
{
  __assert_rtn("GetNestedPlaylistNames", "MediaLibrary.mm", 2458, "(int32_t)[collections count] == geniusMixCount");
}

void sub_1000F2428(uint64_t a1)
{
}

void sub_1000F2460(uint64_t a1)
{
}

void sub_1000F2498()
{
  __assert_rtn("deserializeGiant", "ckutilities.c", 120, "numBytes <= (g->capacity * (sizeof(giantDigit)))");
}

void sub_1000F24C8()
{
  __assert_rtn("feeSigVerify", "feeDigitalSignature.c", 385, "frtn == FR_Success");
}

void sub_1000F24F8()
{
  __assert_rtn("bitlen", "giantIntegers.c", 191, "w != 0");
}

void sub_1000F2528(int a1, char *a2)
{
}

void sub_1000F2554()
{
  __assert_rtn("iaddg", "giantIntegers.c", 355, "(g)->sign <= (g)->capacity");
}

void sub_1000F2584(int a1, char *a2)
{
}

void sub_1000F25B0()
{
  __assert_rtn("normal_addg", "giantIntegers.c", 437, "(b)->sign <= (b)->capacity");
}

void sub_1000F25E0()
{
  __assert_rtn("mulg_common", "giantIntegers.c", 896, "dest->capacity >= (a->sign + b->sign)");
}

void sub_1000F2610()
{
}

void sub_1000F2634()
{
}

void sub_1000F264C()
{
}

void sub_1000F2668(int a1)
{
}

void sub_1000F2694()
{
}

void sub_1000F26B0(int a1)
{
}

void sub_1000F26DC()
{
}

void sub_1000F2700()
{
}

void sub_1000F2724()
{
}

void sub_1000F2748(int a1)
{
}

void sub_1000F2774(int a1)
{
}

uint64_t AllocCapsFromAuthCert()
{
  return _AllocCapsFromAuthCert();
}

uint64_t BKSDisplayBrightnessGetCurrent()
{
  return _BKSDisplayBrightnessGetCurrent();
}

uint64_t BTAccessoryManagerGetDefault()
{
  return _BTAccessoryManagerGetDefault();
}

uint64_t BTAccessoryManagerPlugInDevice()
{
  return _BTAccessoryManagerPlugInDevice();
}

uint64_t BTAccessoryManagerRegisterDevice()
{
  return _BTAccessoryManagerRegisterDevice();
}

uint64_t BTAccessoryManagerUnplugDevice()
{
  return _BTAccessoryManagerUnplugDevice();
}

uint64_t BTDeviceAddressFromString()
{
  return _BTDeviceAddressFromString();
}

uint64_t BTDeviceConnect()
{
  return _BTDeviceConnect();
}

uint64_t BTDeviceDisconnect()
{
  return _BTDeviceDisconnect();
}

uint64_t BTDeviceFromAddress()
{
  return _BTDeviceFromAddress();
}

uint64_t BTDeviceGetAddressString()
{
  return _BTDeviceGetAddressString();
}

uint64_t BTDeviceGetConnectedServices()
{
  return _BTDeviceGetConnectedServices();
}

uint64_t BTLocalDeviceAddCallbacks()
{
  return _BTLocalDeviceAddCallbacks();
}

uint64_t BTLocalDeviceGetConnectedDevices()
{
  return _BTLocalDeviceGetConnectedDevices();
}

uint64_t BTLocalDeviceGetDefault()
{
  return _BTLocalDeviceGetDefault();
}

uint64_t BTLocalDeviceGetModulePower()
{
  return _BTLocalDeviceGetModulePower();
}

uint64_t BTServiceAddCallbacks()
{
  return _BTServiceAddCallbacks();
}

uint64_t BTSessionAttachWithQueue()
{
  return _BTSessionAttachWithQueue();
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA1(data, len, md);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return _CC_SHA1_Final(md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return _CC_SHA1_Init(c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA1_Update(c, data, len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return _CFArrayGetTypeID();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return _CFBooleanGetTypeID();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle)
{
  return _CFBundleCopyBundleLocalizations(bundle);
}

CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray)
{
  return _CFBundleCopyLocalizationsForPreferences(locArray, prefArray);
}

CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID)
{
  return _CFBundleGetBundleWithIdentifier(bundleID);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return _CFDataCreate(allocator, bytes, length);
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryContainsKey(theDict, key);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreate(allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return _CFEqual(cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return _CFLocaleCopyCurrent();
}

CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier)
{
  return _CFLocaleCreateCanonicalLocaleIdentifierFromString(allocator, localeIdentifier);
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return _CFLocaleGetIdentifier(locale);
}

CFRunLoopSourceRef CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order)
{
  return _CFMachPortCreateRunLoopSource(allocator, port, order);
}

CFMachPortRef CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo)
{
  return _CFMachPortCreateWithPort(allocator, portNum, callout, context, shouldFreeInfo);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return _CFNotificationCenterGetLocalCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return _CFNumberCreate(allocator, theType, valuePtr);
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return _CFNumberGetValue(number, theType, valuePtr);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyValue(key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppIntegerValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesSynchronize(applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

void CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode)
{
}

void CFRunLoopRun(void)
{
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return _CFRunLoopRunInMode(mode, seconds, returnAfterSourceHandled);
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
}

void CFRunLoopStop(CFRunLoopRef rl)
{
}

CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context)
{
  return _CFRunLoopTimerCreate(allocator, fireDate, interval, flags, order, callout, context);
}

void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer)
{
}

void CFShow(CFTypeRef obj)
{
}

CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order)
{
  return _CFSocketCreateRunLoopSource(allocator, s, order);
}

CFSocketRef CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context)
{
  return _CFSocketCreateWithNative(allocator, sock, callBackTypes, callout, context);
}

void CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes)
{
}

void CFSocketInvalidate(CFSocketRef s)
{
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions)
{
  return _CFStringCompareWithOptions(theString1, theString2, rangeToCompare, compareOptions);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return _CFStringCreateMutableCopy(alloc, maxLength, theString);
}

CFStringRef CFStringCreateStringWithValidatedFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef validFormatSpecifiers, CFStringRef format, CFErrorRef *errorPtr, ...)
{
  return _CFStringCreateStringWithValidatedFormat(alloc, formatOptions, validFormatSpecifiers, format, errorPtr);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return _CFStringCreateWithFormat(alloc, formatOptions, format);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return _CFStringGetCString(theString, buffer, bufferSize, encoding);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return _CFStringGetLength(theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return _CFStringHasSuffix(theString, suffix);
}

void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad)
{
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return _CFUserNotificationCancel(userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return _CFUserNotificationCreateRunLoopSource(allocator, userNotification, callout, order);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return _CFUserNotificationReceiveResponse(userNotification, timeout, responseFlags);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return _CGBitmapContextGetData(context);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

uint64_t CPFileBuildDirectoriesToPath()
{
  return _CPFileBuildDirectoriesToPath();
}

uint64_t CPGetDeviceRegionCode()
{
  return _CPGetDeviceRegionCode();
}

uint64_t CPSharedResourcesDirectory()
{
  return _CPSharedResourcesDirectory();
}

uint64_t CPSystemRootDirectory()
{
  return _CPSystemRootDirectory();
}

uint64_t CTCallGetStatus()
{
  return _CTCallGetStatus();
}

uint64_t CTGetCurrentCallCountWithTypes()
{
  return _CTGetCurrentCallCountWithTypes();
}

uint64_t CTIndicatorsCopyVoicemailStatus()
{
  return _CTIndicatorsCopyVoicemailStatus();
}

uint64_t CTTelephonyCenterAddObserver()
{
  return _CTTelephonyCenterAddObserver();
}

uint64_t CTTelephonyCenterGetDefault()
{
  return _CTTelephonyCenterGetDefault();
}

uint64_t CTTelephonyCenterSetDefaultDispatchQueue()
{
  return _CTTelephonyCenterSetDefaultDispatchQueue();
}

uint64_t EraseSigningContext()
{
  return _EraseSigningContext();
}

uint64_t FinalizeSigningContext()
{
  return _FinalizeSigningContext();
}

uint64_t GSInitialize()
{
  return _GSInitialize();
}

uint64_t GSSendAppPreferencesChanged()
{
  return _GSSendAppPreferencesChanged();
}

uint64_t IAPAppSendXPCMessageWithTimeout()
{
  return _IAPAppSendXPCMessageWithTimeout();
}

uint64_t IAPAppToAppSocketPath()
{
  return _IAPAppToAppSocketPath();
}

uint64_t IOAccessoryManagerConfigurePower()
{
  return _IOAccessoryManagerConfigurePower();
}

uint64_t IOAccessoryManagerConfigureUSBMode()
{
  return _IOAccessoryManagerConfigureUSBMode();
}

uint64_t IOAccessoryManagerGetAccessoryID()
{
  return _IOAccessoryManagerGetAccessoryID();
}

uint64_t IOAccessoryManagerGetBatteryPackMode()
{
  return _IOAccessoryManagerGetBatteryPackMode();
}

uint64_t IOAccessoryManagerGetPowerDuringSleep()
{
  return _IOAccessoryManagerGetPowerDuringSleep();
}

uint64_t IOAccessoryManagerGetPrimaryPort()
{
  return _IOAccessoryManagerGetPrimaryPort();
}

uint64_t IOAccessoryManagerGetServiceWithPrimaryPort()
{
  return _IOAccessoryManagerGetServiceWithPrimaryPort();
}

uint64_t IOAccessoryManagerGetUSBConnectType()
{
  return _IOAccessoryManagerGetUSBConnectType();
}

uint64_t IOAccessoryManagerGetUSBCurrentLimitBase()
{
  return _IOAccessoryManagerGetUSBCurrentLimitBase();
}

uint64_t IOAccessoryManagerGetUSBCurrentLimitMaximum()
{
  return _IOAccessoryManagerGetUSBCurrentLimitMaximum();
}

uint64_t IOAccessoryManagerGetUSBCurrentLimitOffset()
{
  return _IOAccessoryManagerGetUSBCurrentLimitOffset();
}

uint64_t IOAccessoryManagerPowerDuringSleepIsSupported()
{
  return _IOAccessoryManagerPowerDuringSleepIsSupported();
}

uint64_t IOAccessoryManagerPowerModeIsSupported()
{
  return _IOAccessoryManagerPowerModeIsSupported();
}

uint64_t IOAccessoryManagerRestoreUSBCurrentLimitBase()
{
  return _IOAccessoryManagerRestoreUSBCurrentLimitBase();
}

uint64_t IOAccessoryManagerSetBatteryPackMode()
{
  return _IOAccessoryManagerSetBatteryPackMode();
}

uint64_t IOAccessoryManagerSetPowerDuringSleep()
{
  return _IOAccessoryManagerSetPowerDuringSleep();
}

uint64_t IOAccessoryManagerSetUSBCurrentLimitBase()
{
  return _IOAccessoryManagerSetUSBCurrentLimitBase();
}

uint64_t IOAccessoryManagerSetUSBCurrentLimitMaximum()
{
  return _IOAccessoryManagerSetUSBCurrentLimitMaximum();
}

uint64_t IOAccessoryManagerSetUSBCurrentOffset()
{
  return _IOAccessoryManagerSetUSBCurrentOffset();
}

uint64_t IOAccessoryPortGetManagerService()
{
  return _IOAccessoryPortGetManagerService();
}

uint64_t IOAccessoryPortGetServiceWithPort()
{
  return _IOAccessoryPortGetServiceWithPort();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

IOReturn IOCancelPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOCancelPowerChange(kernelPort, notificationID);
}

IOReturn IODeregisterForSystemPower(io_object_t *notifier)
{
  return _IODeregisterForSystemPower(notifier);
}

uint64_t IOHIDUserDeviceCreate()
{
  return _IOHIDUserDeviceCreate();
}

uint64_t IOHIDUserDeviceHandleReport()
{
  return _IOHIDUserDeviceHandleReport();
}

uint64_t IOHIDUserDeviceRegisterSetReportCallback()
{
  return _IOHIDUserDeviceRegisterSetReportCallback();
}

uint64_t IOHIDUserDeviceScheduleWithRunLoop()
{
  return _IOHIDUserDeviceScheduleWithRunLoop();
}

uint64_t IOHIDUserDeviceUnscheduleFromRunLoop()
{
  return _IOHIDUserDeviceUnscheduleFromRunLoop();
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return _IOIteratorNext(iterator);
}

uint64_t IOMobileFramebufferGetSecondaryDisplay()
{
  return _IOMobileFramebufferGetSecondaryDisplay();
}

uint64_t IOMobileFramebufferSetLine21Data()
{
  return _IOMobileFramebufferSetLine21Data();
}

uint64_t IOMobileFramebufferSetVideoDACGain()
{
  return _IOMobileFramebufferSetVideoDACGain();
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return _IONotificationPortCreate(mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

kern_return_t IOObjectRetain(io_object_t object)
{
  return _IOObjectRetain(object);
}

IOReturn IOPMAssertionCreateWithProperties(CFDictionaryRef AssertionProperties, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithProperties(AssertionProperties, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

CFDictionaryRef IOPSCopyExternalPowerAdapterDetails(void)
{
  return _IOPSCopyExternalPowerAdapterDetails();
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

kern_return_t IORegistryEntryCreateCFProperties(io_registry_entry_t entry, CFMutableDictionaryRef *properties, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperties(entry, properties, allocator, options);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperty(entry, key, allocator, options);
}

kern_return_t IORegistryEntrySetCFProperty(io_registry_entry_t entry, CFStringRef propertyName, CFTypeRef property)
{
  return _IORegistryEntrySetCFProperty(entry, propertyName, property);
}

kern_return_t IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification)
{
  return _IOServiceAddInterestNotification(notifyPort, service, interestType, callback, refCon, notification);
}

kern_return_t IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification)
{
  return _IOServiceAddMatchingNotification(notifyPort, notificationType, matching, callback, refCon, notification);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

kern_return_t IOServiceGetMatchingServices(mach_port_t mainPort, CFDictionaryRef matching, io_iterator_t *existing)
{
  return _IOServiceGetMatchingServices(mainPort, matching, existing);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

kern_return_t IOServiceRequestProbe(io_service_t service, uint32_t options)
{
  return _IOServiceRequestProbe(service, options);
}

uint64_t IapAuthCertSerial()
{
  return _IapAuthCertSerial();
}

uint64_t IapAuthCertVerifyAuthVersion()
{
  return _IapAuthCertVerifyAuthVersion();
}

uint64_t IapAuthChallengeRespondSync()
{
  return _IapAuthChallengeRespondSync();
}

uint64_t IapAuthChallengeVerify()
{
  return _IapAuthChallengeVerify();
}

uint64_t IapAuthGetAppCert()
{
  return _IapAuthGetAppCert();
}

uint64_t IapAuthGetAppCertP7Sync()
{
  return _IapAuthGetAppCertP7Sync();
}

uint64_t IapAuthRandomNumber()
{
  return _IapAuthRandomNumber();
}

uint64_t InitSigningContext()
{
  return _InitSigningContext();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGCopyAnswerWithError()
{
  return _MGCopyAnswerWithError();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

uint64_t MRMediaRemoteCommandInfoCopyValueForKey()
{
  return _MRMediaRemoteCommandInfoCopyValueForKey();
}

uint64_t MRMediaRemoteCommandInfoGetCommand()
{
  return _MRMediaRemoteCommandInfoGetCommand();
}

uint64_t MRMediaRemoteCommandInfoGetEnabled()
{
  return _MRMediaRemoteCommandInfoGetEnabled();
}

uint64_t MRMediaRemoteCopyShuffleModeDescription()
{
  return _MRMediaRemoteCopyShuffleModeDescription();
}

uint64_t MRMediaRemoteCopySupportedCommands()
{
  return _MRMediaRemoteCopySupportedCommands();
}

uint64_t MRMediaRemoteGetNowPlayingApplicationIsPlaying()
{
  return _MRMediaRemoteGetNowPlayingApplicationIsPlaying();
}

uint64_t MRMediaRemoteGetNowPlayingApplicationPID()
{
  return _MRMediaRemoteGetNowPlayingApplicationPID();
}

uint64_t MRMediaRemoteGetNowPlayingInfo()
{
  return _MRMediaRemoteGetNowPlayingInfo();
}

uint64_t MRMediaRemoteRegisterForNowPlayingNotifications()
{
  return _MRMediaRemoteRegisterForNowPlayingNotifications();
}

uint64_t MRMediaRemoteSelectSourceWithID()
{
  return _MRMediaRemoteSelectSourceWithID();
}

uint64_t MRMediaRemoteSendCommand()
{
  return _MRMediaRemoteSendCommand();
}

uint64_t MRMediaRemoteSendCommandToApp()
{
  return _MRMediaRemoteSendCommandToApp();
}

uint64_t MRMediaRemoteSetAppPlaybackQueue()
{
  return _MRMediaRemoteSetAppPlaybackQueue();
}

uint64_t MRMediaRemoteSetPlaybackSpeed()
{
  return _MRMediaRemoteSetPlaybackSpeed();
}

uint64_t MRMediaRemoteSetWantsSupportedCommandsChangedNotifications()
{
  return _MRMediaRemoteSetWantsSupportedCommandsChangedNotifications();
}

uint64_t MRMediaRemoteUnregisterForNowPlayingNotifications()
{
  return _MRMediaRemoteUnregisterForNowPlayingNotifications();
}

uint64_t MRSystemAppPlaybackQueueCreate()
{
  return _MRSystemAppPlaybackQueueCreate();
}

uint64_t MRSystemAppPlaybackQueueDestroy()
{
  return _MRSystemAppPlaybackQueueDestroy();
}

uint64_t MRSystemAppPlaybackQueueInternalPrepareBundleIDForPlayback()
{
  return _MRSystemAppPlaybackQueueInternalPrepareBundleIDForPlayback();
}

uint64_t MRSystemAppPlaybackQueueSetLocalQueryData()
{
  return _MRSystemAppPlaybackQueueSetLocalQueryData();
}

uint64_t MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID()
{
  return _MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

void NSLog(NSString *format, ...)
{
}

void NSLogv(NSString *format, va_list args)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t PLLogRegisteredEvent()
{
  return _PLLogRegisteredEvent();
}

uint64_t SBGetCurrentBacklightFactor()
{
  return _SBGetCurrentBacklightFactor();
}

uint64_t SBGetMediaVolume()
{
  return _SBGetMediaVolume();
}

uint64_t SBGetScreenLockStatus()
{
  return _SBGetScreenLockStatus();
}

uint64_t SBSCopyDisplayIdentifiersForExternalAccessoryProtocol()
{
  return _SBSCopyDisplayIdentifiersForExternalAccessoryProtocol();
}

uint64_t SBSCopyFrontmostApplicationDisplayIdentifier()
{
  return _SBSCopyFrontmostApplicationDisplayIdentifier();
}

uint64_t SBSCopyNowPlayingAppBundleIdentifier()
{
  return _SBSCopyNowPlayingAppBundleIdentifier();
}

uint64_t SBSGetScreenLockStatus()
{
  return _SBSGetScreenLockStatus();
}

uint64_t SBSLockDevice()
{
  return _SBSLockDevice();
}

uint64_t SBSProcessAssertionCreateForPID()
{
  return _SBSProcessAssertionCreateForPID();
}

uint64_t SBSSpringBoardServerPort()
{
  return _SBSSpringBoardServerPort();
}

uint64_t SBSUndimScreen()
{
  return _SBSUndimScreen();
}

uint64_t SBSetMediaVolume()
{
  return _SBSetMediaVolume();
}

SCPreferencesRef SCPreferencesCreate(CFAllocatorRef allocator, CFStringRef name, CFStringRef prefsID)
{
  return _SCPreferencesCreate(allocator, name, prefsID);
}

CFPropertyListRef SCPreferencesGetValue(SCPreferencesRef prefs, CFStringRef key)
{
  return _SCPreferencesGetValue(prefs, key);
}

void SCPreferencesSynchronize(SCPreferencesRef prefs)
{
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return _SecTaskCopyValueForEntitlement(task, entitlement, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return _SecTaskCreateWithAuditToken(allocator, token);
}

uint64_t UpdateSigningContext()
{
  return _UpdateSigningContext();
}

uint64_t WiFiDeviceClientCopyCurrentNetwork()
{
  return _WiFiDeviceClientCopyCurrentNetwork();
}

uint64_t WiFiManagerClientCopyDevices()
{
  return _WiFiManagerClientCopyDevices();
}

uint64_t WiFiManagerClientCreate()
{
  return _WiFiManagerClientCreate();
}

uint64_t WiFiNetworkCopyPassword()
{
  return _WiFiNetworkCopyPassword();
}

uint64_t WiFiNetworkCopyRecord()
{
  return _WiFiNetworkCopyRecord();
}

uint64_t WiFiNetworkGetSSID()
{
  return _WiFiNetworkGetSSID();
}

uint64_t WiFiNetworkIsWEP()
{
  return _WiFiNetworkIsWEP();
}

uint64_t WiFiNetworkIsWPA()
{
  return _WiFiNetworkIsWPA();
}

uint64_t WiFiNetworkRequiresIdentity()
{
  return _WiFiNetworkRequiresIdentity();
}

uint64_t WiFiNetworkRequiresUsername()
{
  return _WiFiNetworkRequiresUsername();
}

uint64_t WriteStackshotReport_async()
{
  return _WriteStackshotReport_async();
}

uint64_t _AXSAssistiveTouchEnabled()
{
  return __AXSAssistiveTouchEnabled();
}

uint64_t _AXSAssistiveTouchHardwareEnabled()
{
  return __AXSAssistiveTouchHardwareEnabled();
}

uint64_t _AXSAssistiveTouchSetHardwareEnabled()
{
  return __AXSAssistiveTouchSetHardwareEnabled();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchSetEnabled()
{
  return __AXSVoiceOverTouchSetEnabled();
}

uint64_t _AXSVoiceOverTouchSetEnabledThroughAccessory()
{
  return __AXSVoiceOverTouchSetEnabledThroughAccessory();
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int std::string::compare(const std::string *this, const std::string::value_type *__s)
{
  return std::string::compare(this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return std::string::append(this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return std::string::append(this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return std::string::assign(this, __s);
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str)
{
  return std::string::basic_string(this, __str);
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return std::string::basic_string(this, __str, __pos, __n, __a);
}

void std::string::~string(std::string *this)
{
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return std::string::operator=(this, __str);
}

uint64_t std::operator+<char>()
{
  return std::operator+<char>();
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return ___cxa_atexit(lpfunc, obj, lpdso_handle);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return ___cxa_guard_acquire((uint64_t *)a1);
}

void __cxa_guard_release(__guard *a1)
{
}

int __darwin_check_fd_set_overflow(int a1, const void *a2, int a3)
{
  return ___darwin_check_fd_set_overflow(a1, a2, a3);
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)___dynamic_cast(lpsrc, lpstype, lpdtype, s2d);
}

int *__error(void)
{
  return ___error();
}

__darwin_ct_rune_t __tolower(__darwin_ct_rune_t a1)
{
  return ___tolower(a1);
}

uint64_t _os_assert_log()
{
  return __os_assert_log();
}

uint64_t _os_crash()
{
  return __os_crash();
}

void abort(void)
{
}

uint32_t arc4random(void)
{
  return _arc4random();
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

int asl_log(asl_object_t client, asl_object_t msg, int level, const char *format, ...)
{
  return _asl_log(client, msg, level, format);
}

asl_object_t asl_new(uint32_t type)
{
  return _asl_new(type);
}

asl_object_t asl_open(const char *ident, const char *facility, uint32_t opts)
{
  return _asl_open(ident, facility, opts);
}

int asl_set(asl_object_t obj, const char *key, const char *value)
{
  return _asl_set(obj, key, value);
}

int atoi(const char *a1)
{
  return _atoi(a1);
}

int bind(int a1, const sockaddr *a2, socklen_t a3)
{
  return _bind(a1, a2, a3);
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return _close(a1);
}

int closedir(DIR *a1)
{
  return _closedir(a1);
}

char *__cdecl dirname(char *a1)
{
  return _dirname(a1);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_retain(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

int feof(FILE *a1)
{
  return _feof(a1);
}

int fflush(FILE *a1)
{
  return _fflush(a1);
}

int fgetc(FILE *a1)
{
  return _fgetc(a1);
}

int fileno(FILE *a1)
{
  return _fileno(a1);
}

const char *__cdecl fmtcheck(const char *a1, const char *a2)
{
  return _fmtcheck(a1, a2);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

int ftruncate(int a1, off_t a2)
{
  return _ftruncate(a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

int gethostname(char *a1, size_t a2)
{
  return _gethostname(a1, a2);
}

pid_t getpid(void)
{
  return _getpid();
}

int gettimeofday(timeval *a1, void *a2)
{
  return _gettimeofday(a1, a2);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return _ioctl(a1, a2);
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

int listen(int a1, int a2)
{
  return _listen(a1, a2);
}

tm *__cdecl localtime(const time_t *a1)
{
  return _localtime(a1);
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return _localtime_r(a1, a2);
}

char *__cdecl mach_error_string(mach_error_t error_value)
{
  return _mach_error_string(error_value);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_check(int token, int *check)
{
  return _notify_check(token, check);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_mach_port(const char *name, mach_port_t *notify_port, int flags, int *out_token)
{
  return _notify_register_mach_port(name, notify_port, flags, out_token);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

DIR *__cdecl opendir(const char *a1)
{
  return _opendir(a1);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

int pthread_attr_destroy(pthread_attr_t *a1)
{
  return _pthread_attr_destroy(a1);
}

int pthread_attr_getschedparam(const pthread_attr_t *a1, sched_param *a2)
{
  return _pthread_attr_getschedparam(a1, a2);
}

int pthread_attr_init(pthread_attr_t *a1)
{
  return _pthread_attr_init(a1);
}

int pthread_attr_setdetachstate(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setdetachstate(a1, a2);
}

int pthread_attr_setinheritsched(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setinheritsched(a1, a2);
}

int pthread_attr_setschedparam(pthread_attr_t *a1, const sched_param *a2)
{
  return _pthread_attr_setschedparam(a1, a2);
}

int pthread_attr_setscope(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setscope(a1, a2);
}

int pthread_cond_broadcast(pthread_cond_t *a1)
{
  return _pthread_cond_broadcast(a1);
}

int pthread_cond_destroy(pthread_cond_t *a1)
{
  return _pthread_cond_destroy(a1);
}

int pthread_cond_init(pthread_cond_t *a1, const pthread_condattr_t *a2)
{
  return _pthread_cond_init(a1, a2);
}

int pthread_cond_signal(pthread_cond_t *a1)
{
  return _pthread_cond_signal(a1);
}

int pthread_cond_timedwait(pthread_cond_t *a1, pthread_mutex_t *a2, const timespec *a3)
{
  return _pthread_cond_timedwait(a1, a2, a3);
}

int pthread_cond_wait(pthread_cond_t *a1, pthread_mutex_t *a2)
{
  return _pthread_cond_wait(a1, a2);
}

int pthread_create(pthread_t *a1, const pthread_attr_t *a2, void *(__cdecl *a3)(void *), void *a4)
{
  return _pthread_create(a1, a2, a3, a4);
}

int pthread_detach(pthread_t a1)
{
  return _pthread_detach(a1);
}

int pthread_getschedparam(pthread_t a1, int *a2, sched_param *a3)
{
  return _pthread_getschedparam(a1, a2, a3);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return _pthread_mutex_destroy(a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return _pthread_mutex_init(a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return _pthread_mutex_lock(a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return _pthread_mutex_unlock(a1);
}

int pthread_mutexattr_destroy(pthread_mutexattr_t *a1)
{
  return _pthread_mutexattr_destroy(a1);
}

int pthread_mutexattr_init(pthread_mutexattr_t *a1)
{
  return _pthread_mutexattr_init(a1);
}

int pthread_mutexattr_settype(pthread_mutexattr_t *a1, int a2)
{
  return _pthread_mutexattr_settype(a1, a2);
}

int pthread_once(pthread_once_t *a1, void (*a2)(void))
{
  return _pthread_once(a1, a2);
}

pthread_t pthread_self(void)
{
  return _pthread_self();
}

int pthread_setschedparam(pthread_t a1, int a2, const sched_param *a3)
{
  return _pthread_setschedparam(a1, a2, a3);
}

int puts(const char *a1)
{
  return _puts(a1);
}

dirent *__cdecl readdir(DIR *a1)
{
  return _readdir(a1);
}

int reboot(int a1)
{
  return _reboot(a1);
}

ssize_t recv(int a1, void *a2, size_t a3, int a4)
{
  return _recv(a1, a2, a3, a4);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

SEL sel_registerName(const char *str)
{
  return _sel_registerName(str);
}

int select(int a1, fd_set *a2, fd_set *a3, fd_set *a4, timeval *a5)
{
  return _select(a1, a2, a3, a4, a5);
}

ssize_t send(int a1, const void *a2, size_t a3, int a4)
{
  return _send(a1, a2, a3, a4);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return _setsockopt(a1, a2, a3, a4, a5);
}

int settimeofday(const timeval *a1, const timezone *a2)
{
  return _settimeofday(a1, a2);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return _sleep(a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return _socket(a1, a2, a3);
}

int sprintf(char *a1, const char *a2, ...)
{
  return _sprintf(a1, a2);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return _statfs(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return _strdup(__s1);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return _strlcpy(__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return _strstr(__s1, __s2);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return _strtoul(__str, __endptr, __base);
}

void syslog(int a1, const char *a2, ...)
{
}

time_t time(time_t *a1)
{
  return _time(a1);
}

int unlink(const char *a1)
{
  return _unlink(a1);
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

int vsnprintf(char *__str, size_t __size, const char *__format, va_list a4)
{
  return _vsnprintf(__str, __size, __format, a4);
}

void vsyslog(int a1, const char *a2, __darwin_va_list a3)
{
}

xmlNodePtr xmlAddChild(xmlNodePtr parent, xmlNodePtr cur)
{
  return _xmlAddChild(parent, cur);
}

const xmlChar *__cdecl xmlBufferContent(const xmlBuffer *buf)
{
  return _xmlBufferContent(buf);
}

xmlBufferPtr xmlBufferCreate(void)
{
  return _xmlBufferCreate();
}

void xmlBufferFree(xmlBufferPtr buf)
{
}

int xmlBufferLength(const xmlBuffer *buf)
{
  return _xmlBufferLength(buf);
}

int xmlC14NDocDumpMemory(xmlDocPtr doc, xmlNodeSetPtr nodes, int mode, xmlChar **inclusive_ns_prefixes, int with_comments, xmlChar **doc_txt_ptr)
{
  return _xmlC14NDocDumpMemory(doc, nodes, mode, inclusive_ns_prefixes, with_comments, doc_txt_ptr);
}

void xmlCleanupParser(void)
{
}

xmlNodePtr xmlCopyNode(xmlNodePtr node, int recursive)
{
  return _xmlCopyNode(node, recursive);
}

xmlNodePtr xmlCopyNodeList(xmlNodePtr node)
{
  return _xmlCopyNodeList(node);
}

xmlNodePtr xmlDocGetRootElement(const xmlDoc *doc)
{
  return _xmlDocGetRootElement(doc);
}

xmlNodePtr xmlDocSetRootElement(xmlDocPtr doc, xmlNodePtr root)
{
  return _xmlDocSetRootElement(doc, root);
}

void xmlFreeDoc(xmlDocPtr cur)
{
}

void xmlFreeNode(xmlNodePtr cur)
{
}

void xmlFreeTextReader(xmlTextReaderPtr reader)
{
}

void xmlFreeTextWriter(xmlTextWriterPtr writer)
{
}

void xmlInitParser(void)
{
}

xmlDocPtr xmlNewDoc(const xmlChar *version)
{
  return _xmlNewDoc(version);
}

xmlNodePtr xmlNewNode(xmlNsPtr ns, const xmlChar *name)
{
  return _xmlNewNode(ns, name);
}

xmlTextWriterPtr xmlNewTextWriterMemory(xmlBufferPtr buf, int compression)
{
  return _xmlNewTextWriterMemory(buf, compression);
}

xmlTextWriterPtr xmlNewTextWriterTree(xmlDocPtr doc, xmlNodePtr node, int compression)
{
  return _xmlNewTextWriterTree(doc, node, compression);
}

void xmlNodeAddContent(xmlNodePtr cur, const xmlChar *content)
{
}

void xmlNodeDumpOutput(xmlOutputBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, int level, int format, const char *encoding)
{
}

int xmlOutputBufferClose(xmlOutputBufferPtr out)
{
  return _xmlOutputBufferClose(out);
}

xmlOutputBufferPtr xmlOutputBufferCreateIO(xmlOutputWriteCallback iowrite, xmlOutputCloseCallback ioclose, void *ioctx, xmlCharEncodingHandlerPtr encoder)
{
  return _xmlOutputBufferCreateIO(iowrite, ioclose, ioctx, encoder);
}

xmlDocPtr xmlParseFile(const char *filename)
{
  return _xmlParseFile(filename);
}

xmlTextReaderPtr xmlReaderForIO(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
{
  return _xmlReaderForIO(ioread, ioclose, ioctx, URL, encoding, options);
}

xmlAttrPtr xmlSetProp(xmlNodePtr node, const xmlChar *name, const xmlChar *value)
{
  return _xmlSetProp(node, name, value);
}

int xmlStrcmp(const xmlChar *str1, const xmlChar *str2)
{
  return _xmlStrcmp(str1, str2);
}

const xmlChar *__cdecl xmlTextReaderConstName(xmlTextReaderPtr reader)
{
  return _xmlTextReaderConstName(reader);
}

const xmlChar *__cdecl xmlTextReaderConstValue(xmlTextReaderPtr reader)
{
  return _xmlTextReaderConstValue(reader);
}

int xmlTextReaderHasAttributes(xmlTextReaderPtr reader)
{
  return _xmlTextReaderHasAttributes(reader);
}

int xmlTextReaderIsEmptyElement(xmlTextReaderPtr reader)
{
  return _xmlTextReaderIsEmptyElement(reader);
}

int xmlTextReaderMoveToNextAttribute(xmlTextReaderPtr reader)
{
  return _xmlTextReaderMoveToNextAttribute(reader);
}

int xmlTextReaderNodeType(xmlTextReaderPtr reader)
{
  return _xmlTextReaderNodeType(reader);
}

int xmlTextReaderRead(xmlTextReaderPtr reader)
{
  return _xmlTextReaderRead(reader);
}

int xmlTextWriterEndDocument(xmlTextWriterPtr writer)
{
  return _xmlTextWriterEndDocument(writer);
}

int xmlTextWriterEndElement(xmlTextWriterPtr writer)
{
  return _xmlTextWriterEndElement(writer);
}

int xmlTextWriterFlush(xmlTextWriterPtr writer)
{
  return _xmlTextWriterFlush(writer);
}

int xmlTextWriterStartElement(xmlTextWriterPtr writer, const xmlChar *name)
{
  return _xmlTextWriterStartElement(writer, name);
}

int xmlTextWriterWriteAttribute(xmlTextWriterPtr writer, const xmlChar *name, const xmlChar *content)
{
  return _xmlTextWriterWriteAttribute(writer, name, content);
}

int xmlTextWriterWriteBase64(xmlTextWriterPtr writer, const char *data, int start, int len)
{
  return _xmlTextWriterWriteBase64(writer, data, start, len);
}

int xmlTextWriterWriteElement(xmlTextWriterPtr writer, const xmlChar *name, const xmlChar *content)
{
  return _xmlTextWriterWriteElement(writer, name, content);
}

int xmlTextWriterWriteFormatElement(xmlTextWriterPtr writer, const xmlChar *name, const char *format, ...)
{
  return _xmlTextWriterWriteFormatElement(writer, name, format);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return _xpc_connection_get_pid(connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return _xpc_connection_send_message_with_reply_sync(connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

uint64_t xpc_dictionary_get_audit_token()
{
  return _xpc_dictionary_get_audit_token();
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_BOOL(xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return _xpc_dictionary_get_data(xdict, key, length);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_double(xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_int64(xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_uint64(xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_release(xpc_object_t object)
{
}

xpc_object_t xpc_retain(xpc_object_t object)
{
  return _xpc_retain(object);
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return [a1 CGImage];
}

id objc_msgSend_UIBackgroundModes(void *a1, const char *a2, ...)
{
  return [a1 UIBackgroundModes];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend__calcNewFakeStreamIndexCount(void *a1, const char *a2, ...)
{
  return [a1 _calcNewFakeStreamIndexCount];
}

id objc_msgSend__flush(void *a1, const char *a2, ...)
{
  return [a1 _flush];
}

id objc_msgSend__getProcessId(void *a1, const char *a2, ...)
{
  return [a1 _getProcessId];
}

id objc_msgSend__getProcessIdForUnregisteredClient(void *a1, const char *a2, ...)
{
  return [a1 _getProcessIdForUnregisteredClient];
}

id objc_msgSend__isSetElapsedTimeAvailable(void *a1, const char *a2, ...)
{
  return [a1 _isSetElapsedTimeAvailable];
}

id objc_msgSend__loggingEnabled(void *a1, const char *a2, ...)
{
  return [a1 _loggingEnabled];
}

id objc_msgSend__openPipeFromApp(void *a1, const char *a2, ...)
{
  return [a1 _openPipeFromApp];
}

id objc_msgSend__openPipeToApp(void *a1, const char *a2, ...)
{
  return [a1 _openPipeToApp];
}

id objc_msgSend__registerListenSocket(void *a1, const char *a2, ...)
{
  return [a1 _registerListenSocket];
}

id objc_msgSend__reloadEventHandler(void *a1, const char *a2, ...)
{
  return [a1 _reloadEventHandler];
}

id objc_msgSend__resetFakeStreamTrackCount(void *a1, const char *a2, ...)
{
  return [a1 _resetFakeStreamTrackCount];
}

id objc_msgSend__sessionPacketsFromAppBytesFree(void *a1, const char *a2, ...)
{
  return [a1 _sessionPacketsFromAppBytesFree];
}

id objc_msgSend__supportedCommandsDidChangeNotification(void *a1, const char *a2, ...)
{
  return [a1 _supportedCommandsDidChangeNotification];
}

id objc_msgSend__takeClientAssertionsForAccessoryConnection(void *a1, const char *a2, ...)
{
  return [a1 _takeClientAssertionsForAccessoryConnection];
}

id objc_msgSend__takeClientAssertionsForAccessoryDisconnection(void *a1, const char *a2, ...)
{
  return [a1 _takeClientAssertionsForAccessoryDisconnection];
}

id objc_msgSend__updateITunesRadioEnabled(void *a1, const char *a2, ...)
{
  return [a1 _updateITunesRadioEnabled];
}

id objc_msgSend__updateRadioLibraryList(void *a1, const char *a2, ...)
{
  return [a1 _updateRadioLibraryList];
}

id objc_msgSend__waitForNowPlayingInfoReceived(void *a1, const char *a2, ...)
{
  return [a1 _waitForNowPlayingInfoReceived];
}

id objc_msgSend_accessoryPowerState(void *a1, const char *a2, ...)
{
  return [a1 accessoryPowerState];
}

id objc_msgSend_acquire(void *a1, const char *a2, ...)
{
  return [a1 acquire];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return [a1 applicationIdentifier];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return [a1 applicationState];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_audiobooksQuery(void *a1, const char *a2, ...)
{
  return [a1 audiobooksQuery];
}

id objc_msgSend_authorized(void *a1, const char *a2, ...)
{
  return [a1 authorized];
}

id objc_msgSend_availableCurrentFromAccInMa(void *a1, const char *a2, ...)
{
  return [a1 availableCurrentFromAccInMa];
}

id objc_msgSend_beginGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return [a1 beginGeneratingLibraryChangeNotifications];
}

id objc_msgSend_beginSeekingBackward(void *a1, const char *a2, ...)
{
  return [a1 beginSeekingBackward];
}

id objc_msgSend_beginSeekingForward(void *a1, const char *a2, ...)
{
  return [a1 beginSeekingForward];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return [a1 bounds];
}

id objc_msgSend_bringdownPlatform(void *a1, const char *a2, ...)
{
  return [a1 bringdownPlatform];
}

id objc_msgSend_bufferToAppHasSpaceAvailable(void *a1, const char *a2, ...)
{
  return [a1 bufferToAppHasSpaceAvailable];
}

id objc_msgSend_builtInPresetType(void *a1, const char *a2, ...)
{
  return [a1 builtInPresetType];
}

id objc_msgSend_bundleId(void *a1, const char *a2, ...)
{
  return [a1 bundleId];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 bundleIdentifier];
}

id objc_msgSend_bypassAuthorization(void *a1, const char *a2, ...)
{
  return [a1 bypassAuthorization];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_canShowCloudMusic(void *a1, const char *a2, ...)
{
  return [a1 canShowCloudMusic];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return [a1 cancel];
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return [a1 cancelled];
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return [a1 capabilities];
}

id objc_msgSend_certSerialString(void *a1, const char *a2, ...)
{
  return [a1 certSerialString];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return [a1 client];
}

id objc_msgSend_clientID(void *a1, const char *a2, ...)
{
  return [a1 clientID];
}

id objc_msgSend_clientIDForLocationClient(void *a1, const char *a2, ...)
{
  return [a1 clientIDForLocationClient];
}

id objc_msgSend_clientRequiresAccReset(void *a1, const char *a2, ...)
{
  return [a1 clientRequiresAccReset];
}

id objc_msgSend_closeDataPipes(void *a1, const char *a2, ...)
{
  return [a1 closeDataPipes];
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return [a1 collections];
}

id objc_msgSend_connectedAccessories(void *a1, const char *a2, ...)
{
  return [a1 connectedAccessories];
}

id objc_msgSend_connectionID(void *a1, const char *a2, ...)
{
  return [a1 connectionID];
}

id objc_msgSend_consumeNextOutPacket(void *a1, const char *a2, ...)
{
  return [a1 consumeNextOutPacket];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_createFilePath(void *a1, const char *a2, ...)
{
  return [a1 createFilePath];
}

id objc_msgSend_currentNowPlayingInfoAlbumTrack(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoAlbumTrack];
}

id objc_msgSend_currentNowPlayingInfoChapterCount(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoChapterCount];
}

id objc_msgSend_currentNowPlayingInfoDisc(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoDisc];
}

id objc_msgSend_currentNowPlayingInfoDuration(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoDuration];
}

id objc_msgSend_currentNowPlayingInfoPID(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoPID];
}

id objc_msgSend_currentNowPlayingInfoTrack(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoTrack];
}

id objc_msgSend_currentNowPlayingInfoTrackCount(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoTrackCount];
}

id objc_msgSend_currentNowPlayingInfoTrackCountExists(void *a1, const char *a2, ...)
{
  return [a1 currentNowPlayingInfoTrackCountExists];
}

id objc_msgSend_currentPlaybackTime(void *a1, const char *a2, ...)
{
  return [a1 currentPlaybackTime];
}

id objc_msgSend_currentRepeatMode(void *a1, const char *a2, ...)
{
  return [a1 currentRepeatMode];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return [a1 currentRunLoop];
}

id objc_msgSend_currentShuffleMode(void *a1, const char *a2, ...)
{
  return [a1 currentShuffleMode];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_dealloc(void *a1, const char *a2, ...)
{
  return [a1 dealloc];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 decimalDigitCharacterSet];
}

id objc_msgSend_decreaseSessionRefCount(void *a1, const char *a2, ...)
{
  return [a1 decreaseSessionRefCount];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return [a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return [a1 defaultMediaLibrary];
}

id objc_msgSend_defaultRadioLibrary(void *a1, const char *a2, ...)
{
  return [a1 defaultRadioLibrary];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return [a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return [a1 delegate];
}

id objc_msgSend_deleteAllPorts(void *a1, const char *a2, ...)
{
  return [a1 deleteAllPorts];
}

id objc_msgSend_dequeueOutReport(void *a1, const char *a2, ...)
{
  return [a1 dequeueOutReport];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return [a1 deviceClass];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return [a1 displayName];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_dpFirmwareVersion(void *a1, const char *a2, ...)
{
  return [a1 dpFirmwareVersion];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return [a1 elements];
}

id objc_msgSend_endGeneratingLibraryChangeNotifications(void *a1, const char *a2, ...)
{
  return [a1 endGeneratingLibraryChangeNotifications];
}

id objc_msgSend_fakeStreamTrackIndexTimeExpired(void *a1, const char *a2, ...)
{
  return [a1 fakeStreamTrackIndexTimeExpired];
}

id objc_msgSend_fakedLocationDeviceEphemerisMaxIntervalAvailable(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationDeviceEphemerisMaxIntervalAvailable];
}

id objc_msgSend_fakedLocationDeviceEphemerisRefreshIntervalAvailable(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationDeviceEphemerisRefreshIntervalAvailable];
}

id objc_msgSend_fakedLocationDeviceEphemerisURLAvailable(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationDeviceEphemerisURLAvailable];
}

id objc_msgSend_fakedLocationDeviceNMEAAvailable(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationDeviceNMEAAvailable];
}

id objc_msgSend_fakedLocationDevicePointDataAvailable(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationDevicePointDataAvailable];
}

id objc_msgSend_fakedLocationRequestGPSTime(void *a1, const char *a2, ...)
{
  return [a1 fakedLocationRequestGPSTime];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return [a1 fileSystemRepresentation];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return [a1 floatValue];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return [a1 flush];
}

id objc_msgSend_foregroundAppBundleIDs(void *a1, const char *a2, ...)
{
  return [a1 foregroundAppBundleIDs];
}

id objc_msgSend_foregroundAppBundleIDsMutable(void *a1, const char *a2, ...)
{
  return [a1 foregroundAppBundleIDsMutable];
}

id objc_msgSend_foregroundBundleIDsQueue(void *a1, const char *a2, ...)
{
  return [a1 foregroundBundleIDsQueue];
}

id objc_msgSend_generateClientID(void *a1, const char *a2, ...)
{
  return [a1 generateClientID];
}

id objc_msgSend_geniusMixesQuery(void *a1, const char *a2, ...)
{
  return [a1 geniusMixesQuery];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return [a1 hash];
}

id objc_msgSend_iBooksAppSelected(void *a1, const char *a2, ...)
{
  return [a1 iBooksAppSelected];
}

id objc_msgSend_iTunesRadioEnabled(void *a1, const char *a2, ...)
{
  return [a1 iTunesRadioEnabled];
}

id objc_msgSend_iTunesUAppSelected(void *a1, const char *a2, ...)
{
  return [a1 iTunesUAppSelected];
}

id objc_msgSend_iapPortManagers(void *a1, const char *a2, ...)
{
  return [a1 iapPortManagers];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return [a1 identifier];
}

id objc_msgSend_increaseSessionRefCount(void *a1, const char *a2, ...)
{
  return [a1 increaseSessionRefCount];
}

id objc_msgSend_initPBQItemsFromQueueQuery(void *a1, const char *a2, ...)
{
  return [a1 initPBQItemsFromQueueQuery];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return [a1 invalidate];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return [a1 invertedSet];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return [a1 isCancelled];
}

id objc_msgSend_isDeviceInLowPowerMode(void *a1, const char *a2, ...)
{
  return [a1 isDeviceInLowPowerMode];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return [a1 isEnabled];
}

id objc_msgSend_isFakedLocationDeviceEnabled(void *a1, const char *a2, ...)
{
  return [a1 isFakedLocationDeviceEnabled];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return [a1 isFinished];
}

id objc_msgSend_isLoadingRadioStation(void *a1, const char *a2, ...)
{
  return [a1 isLoadingRadioStation];
}

id objc_msgSend_isLowPowerModeSupported(void *a1, const char *a2, ...)
{
  return [a1 isLowPowerModeSupported];
}

id objc_msgSend_isNowPlayingItemFromGeniusMix(void *a1, const char *a2, ...)
{
  return [a1 isNowPlayingItemFromGeniusMix];
}

id objc_msgSend_isPacketAvailable(void *a1, const char *a2, ...)
{
  return [a1 isPacketAvailable];
}

id objc_msgSend_isShuttingDown(void *a1, const char *a2, ...)
{
  return [a1 isShuttingDown];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return [a1 items];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return [a1 keyEnumerator];
}

id objc_msgSend_lastModifiedDate(void *a1, const char *a2, ...)
{
  return [a1 lastModifiedDate];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return [a1 lastObject];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_letterCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 letterCharacterSet];
}

id objc_msgSend_lineOutChanged(void *a1, const char *a2, ...)
{
  return [a1 lineOutChanged];
}

id objc_msgSend_lineOutEnabled(void *a1, const char *a2, ...)
{
  return [a1 lineOutEnabled];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return [a1 localizedName];
}

id objc_msgSend_localizedTitle(void *a1, const char *a2, ...)
{
  return [a1 localizedTitle];
}

id objc_msgSend_locationSupportedByClient(void *a1, const char *a2, ...)
{
  return [a1 locationSupportedByClient];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return [a1 lock];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return [a1 longValue];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return [a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return [a1 mainBundle];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return [a1 mainRunLoop];
}

id objc_msgSend_maxInputCurrentFromAccInMa(void *a1, const char *a2, ...)
{
  return [a1 maxInputCurrentFromAccInMa];
}

id objc_msgSend_mediaLibraryHelper(void *a1, const char *a2, ...)
{
  return [a1 mediaLibraryHelper];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return [a1 mediaType];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return [a1 name];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return [a1 nextObject];
}

id objc_msgSend_notificationDictMutable(void *a1, const char *a2, ...)
{
  return [a1 notificationDictMutable];
}

id objc_msgSend_nowPlayingAppIsIPodApp(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsIPodApp];
}

id objc_msgSend_nowPlayingAppIsPodcastApp(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsPodcastApp];
}

id objc_msgSend_nowPlayingAppIsValid(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsValid];
}

id objc_msgSend_nowPlayingAppIsVideosApp(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsVideosApp];
}

id objc_msgSend_nowPlayingAppIsiBooksApp(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsiBooksApp];
}

id objc_msgSend_nowPlayingAppIsiTunesRadio(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsiTunesRadio];
}

id objc_msgSend_nowPlayingAppIsiTunesUApp(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppIsiTunesUApp];
}

id objc_msgSend_nowPlayingAppName(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppName];
}

id objc_msgSend_nowPlayingAppPlaybackRate(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppPlaybackRate];
}

id objc_msgSend_nowPlayingAppPlaybackSpeed(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppPlaybackSpeed];
}

id objc_msgSend_nowPlayingAppPlaybackState(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingAppPlaybackState];
}

id objc_msgSend_nowPlayingHandlerQueue(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingHandlerQueue];
}

id objc_msgSend_nowPlayingItem(void *a1, const char *a2, ...)
{
  return [a1 nowPlayingItem];
}

id objc_msgSend_numberOfItems(void *a1, const char *a2, ...)
{
  return [a1 numberOfItems];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 objectEnumerator];
}

id objc_msgSend_openPipeFromApp(void *a1, const char *a2, ...)
{
  return [a1 openPipeFromApp];
}

id objc_msgSend_openPipeToApp(void *a1, const char *a2, ...)
{
  return [a1 openPipeToApp];
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return [a1 persistentID];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return [a1 play];
}

id objc_msgSend_playbackDuration(void *a1, const char *a2, ...)
{
  return [a1 playbackDuration];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return [a1 playbackState];
}

id objc_msgSend_playbackTime(void *a1, const char *a2, ...)
{
  return [a1 playbackTime];
}

id objc_msgSend_playlistsQuery(void *a1, const char *a2, ...)
{
  return [a1 playlistsQuery];
}

id objc_msgSend_podcastAppSelected(void *a1, const char *a2, ...)
{
  return [a1 podcastAppSelected];
}

id objc_msgSend_portNumber(void *a1, const char *a2, ...)
{
  return [a1 portNumber];
}

id objc_msgSend_precomposedStringWithCanonicalMapping(void *a1, const char *a2, ...)
{
  return [a1 precomposedStringWithCanonicalMapping];
}

id objc_msgSend_prepareQueueForPlayback(void *a1, const char *a2, ...)
{
  return [a1 prepareQueueForPlayback];
}

id objc_msgSend_processID(void *a1, const char *a2, ...)
{
  return [a1 processID];
}

id objc_msgSend_protocolID(void *a1, const char *a2, ...)
{
  return [a1 protocolID];
}

id objc_msgSend_queueAsQuery(void *a1, const char *a2, ...)
{
  return [a1 queueAsQuery];
}

id objc_msgSend_releaseProcessAssertion(void *a1, const char *a2, ...)
{
  return [a1 releaseProcessAssertion];
}

id objc_msgSend_removeAllClients(void *a1, const char *a2, ...)
{
  return [a1 removeAllClients];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return [a1 removeAllObjects];
}

id objc_msgSend_removeNonGlobalCache(void *a1, const char *a2, ...)
{
  return [a1 removeNonGlobalCache];
}

id objc_msgSend_representativeItem(void *a1, const char *a2, ...)
{
  return [a1 representativeItem];
}

id objc_msgSend_reserveCurrentForAccInMa(void *a1, const char *a2, ...)
{
  return [a1 reserveCurrentForAccInMa];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return [a1 reset];
}

id objc_msgSend_resetSessionIDCounter(void *a1, const char *a2, ...)
{
  return [a1 resetSessionIDCounter];
}

id objc_msgSend_restoreAvailableCurrentFromAcc(void *a1, const char *a2, ...)
{
  return [a1 restoreAvailableCurrentFromAcc];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return [a1 run];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return [a1 scale];
}

id objc_msgSend_scheduleFlush(void *a1, const char *a2, ...)
{
  return [a1 scheduleFlush];
}

id objc_msgSend_seekToEndOfFile(void *a1, const char *a2, ...)
{
  return [a1 seekToEndOfFile];
}

id objc_msgSend_sendAudioStateChangedNotification(void *a1, const char *a2, ...)
{
  return [a1 sendAudioStateChangedNotification];
}

id objc_msgSend_sendMicrophoneStateChangedNotification(void *a1, const char *a2, ...)
{
  return [a1 sendMicrophoneStateChangedNotification];
}

id objc_msgSend_sendReserveCurrentNotification(void *a1, const char *a2, ...)
{
  return [a1 sendReserveCurrentNotification];
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return [a1 service];
}

id objc_msgSend_sessionID(void *a1, const char *a2, ...)
{
  return [a1 sessionID];
}

id objc_msgSend_sessions(void *a1, const char *a2, ...)
{
  return [a1 sessions];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return [a1 set];
}

id objc_msgSend_sharedCloudController(void *a1, const char *a2, ...)
{
  return [a1 sharedCloudController];
}

id objc_msgSend_sharedDefaults(void *a1, const char *a2, ...)
{
  return [a1 sharedDefaults];
}

id objc_msgSend_sharedIAPServer(void *a1, const char *a2, ...)
{
  return [a1 sharedIAPServer];
}

id objc_msgSend_sharedInit(void *a1, const char *a2, ...)
{
  return [a1 sharedInit];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return [a1 sharedManager];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return [a1 sharedService];
}

id objc_msgSend_sharedStore(void *a1, const char *a2, ...)
{
  return [a1 sharedStore];
}

id objc_msgSend_sharedSystemMusicPlayer(void *a1, const char *a2, ...)
{
  return [a1 sharedSystemMusicPlayer];
}

id objc_msgSend_sharedSystemMusicPlayerQueue(void *a1, const char *a2, ...)
{
  return [a1 sharedSystemMusicPlayerQueue];
}

id objc_msgSend_showAudioBooks(void *a1, const char *a2, ...)
{
  return [a1 showAudioBooks];
}

id objc_msgSend_showITunesU(void *a1, const char *a2, ...)
{
  return [a1 showITunesU];
}

id objc_msgSend_showMusic(void *a1, const char *a2, ...)
{
  return [a1 showMusic];
}

id objc_msgSend_showPodcasts(void *a1, const char *a2, ...)
{
  return [a1 showPodcasts];
}

id objc_msgSend_shuttingDownSession(void *a1, const char *a2, ...)
{
  return [a1 shuttingDownSession];
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return [a1 signal];
}

id objc_msgSend_skipToBeginningOrPreviousItem(void *a1, const char *a2, ...)
{
  return [a1 skipToBeginningOrPreviousItem];
}

id objc_msgSend_skipToNextItem(void *a1, const char *a2, ...)
{
  return [a1 skipToNextItem];
}

id objc_msgSend_songsQuery(void *a1, const char *a2, ...)
{
  return [a1 songsQuery];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return [a1 start];
}

id objc_msgSend_startObserving(void *a1, const char *a2, ...)
{
  return [a1 startObserving];
}

id objc_msgSend_stationCount(void *a1, const char *a2, ...)
{
  return [a1 stationCount];
}

id objc_msgSend_stations(void *a1, const char *a2, ...)
{
  return [a1 stations];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return [a1 stop];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return [a1 stopObserving];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return [a1 string];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return [a1 synchronize];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSince1970];
}

id objc_msgSend_ultraHighPowerModeCurrentLimit(void *a1, const char *a2, ...)
{
  return [a1 ultraHighPowerModeCurrentLimit];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return [a1 uniqueIdentifier];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return [a1 unlock];
}

id objc_msgSend_unscheduleFlush(void *a1, const char *a2, ...)
{
  return [a1 unscheduleFlush];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongValue];
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return [a1 userDefaults];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return [a1 userInfo];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return [a1 value];
}

id objc_msgSend_videoOutSettingChanged(void *a1, const char *a2, ...)
{
  return [a1 videoOutSettingChanged];
}

id objc_msgSend_wait(void *a1, const char *a2, ...)
{
  return [a1 wait];
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return [a1 xpcConnection];
}