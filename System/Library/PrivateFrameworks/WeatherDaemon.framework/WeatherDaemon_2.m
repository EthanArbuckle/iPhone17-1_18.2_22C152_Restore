id static OS_dispatch_queue.notifications.getter()
{
  return sub_1A953E884(&qword_1EB6DAB98, (void **)&qword_1EB6DAB90);
}

uint64_t sub_1A953E6C0()
{
  uint64_t v1 = sub_1A9632290();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_31();
  sub_1A9632270();
  OUTLINED_FUNCTION_3_15();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1A9631BA0();
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_2_21();
  sub_1A9631B80();
  sub_1A953E8D0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DF2E0);
  sub_1A953E920();
  sub_1A96323D0();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x1E4FBCC58], v1);
  uint64_t result = sub_1A96322A0();
  qword_1EB6DAA00 = result;
  return result;
}

id static OS_dispatch_queue.authService.getter()
{
  return sub_1A953E884(&qword_1EB6DAA08, (void **)&qword_1EB6DAA00);
}

id sub_1A953E884(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

unint64_t sub_1A953E8D0()
{
  unint64_t result = qword_1EB6DF300;
  if (!qword_1EB6DF300)
  {
    sub_1A9632270();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DF300);
  }
  return result;
}

unint64_t sub_1A953E920()
{
  unint64_t result = qword_1EB6DF2F0;
  if (!qword_1EB6DF2F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB6DF2E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DF2F0);
  }
  return result;
}

uint64_t sub_1A953E974()
{
  uint64_t v1 = sub_1A962E3A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  v44 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = *v0;
  sub_1A962E370();
  uint64_t v6 = sub_1A944C528(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = *(void *)(v6 + 16);
  unint64_t v7 = *(void *)(v6 + 24);
  if (v8 >= v7 >> 1)
  {
    char v35 = OUTLINED_FUNCTION_3_14(v7);
    uint64_t v6 = sub_1A944C528(v35, v8 + 1, 1, v6);
  }
  *(void *)(v6 + 16) = v8 + 1;
  v11 = *(void (**)(void))(v2 + 32);
  uint64_t v9 = v2 + 32;
  v10 = v11;
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 48);
  uint64_t v45 = *(void *)(v9 + 40);
  OUTLINED_FUNCTION_0_21();
  v11();
  sub_1A962E370();
  unint64_t v14 = *(void *)(v6 + 16);
  unint64_t v13 = *(void *)(v6 + 24);
  if (v14 >= v13 >> 1)
  {
    char v36 = OUTLINED_FUNCTION_3_14(v13);
    uint64_t v6 = sub_1A944C528(v36, v14 + 1, 1, v6);
  }
  *(void *)(v6 + 16) = v14 + 1;
  unint64_t v42 = v12;
  uint64_t v43 = v6;
  OUTLINED_FUNCTION_0_21();
  v10();
  uint64_t v15 = *(void *)(v46 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    v39 = v10;
    uint64_t v40 = v9;
    uint64_t v41 = v1;
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_1A9631510();
    sub_1A944C5FC(0, v15, 0);
    uint64_t v16 = v47;
    uint64_t v17 = 0;
    uint64_t v18 = *(void *)(v47 + 16);
    uint64_t v19 = 16 * v18;
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_1_21();
    do
    {
      unint64_t v24 = v18 + v17;
      if (*(unsigned char *)(v20 + v17 + 32)) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = v21;
      }
      if (*(unsigned char *)(v20 + v17 + 32)) {
        unint64_t v26 = 0xEB00000000657275;
      }
      else {
        unint64_t v26 = v23;
      }
      uint64_t v47 = v16;
      unint64_t v27 = *(void *)(v16 + 24);
      uint64_t v28 = v24 + 1;
      if (v24 >= v27 >> 1)
      {
        char v30 = OUTLINED_FUNCTION_3_14(v27);
        sub_1A944C5FC(v30, v28, 1);
        OUTLINED_FUNCTION_1_21();
        OUTLINED_FUNCTION_2_3();
        OUTLINED_FUNCTION_4_17();
        uint64_t v20 = v46;
        uint64_t v16 = v47;
      }
      ++v17;
      *(void *)(v16 + 16) = v28;
      uint64_t v29 = v16 + v19;
      *(void *)(v29 + 32) = v25;
      *(void *)(v29 + 40) = v26;
      v19 += 16;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    v10 = v39;
  }
  uint64_t v47 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE268);
  sub_1A944C79C();
  sub_1A9631D00();
  swift_bridgeObjectRelease();
  sub_1A962E370();
  swift_bridgeObjectRelease();
  uint64_t v31 = v43;
  unint64_t v33 = *(void *)(v43 + 16);
  unint64_t v32 = *(void *)(v43 + 24);
  if (v33 >= v32 >> 1)
  {
    char v37 = OUTLINED_FUNCTION_3_14(v32);
    uint64_t v31 = sub_1A944C528(v37, v33 + 1, 1, v31);
  }
  *(void *)(v31 + 16) = v33 + 1;
  OUTLINED_FUNCTION_0_21();
  v10();
  return v31;
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsRequest()
{
  return &type metadata for DailyWeatherStatisticsRequest;
}

uint64_t NSFileManager.deleteSqliteDatabase(_:in:)(void *a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A962E5F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DDC10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9635D60;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  id v21 = a1;
  uint64_t v22 = a2;
  swift_bridgeObjectRetain_n();
  sub_1A9631EA0();
  uint64_t v9 = v22;
  *(void *)(inited + 48) = v21;
  *(void *)(inited + 56) = v9;
  id v21 = a1;
  uint64_t v22 = a2;
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t v10 = v22;
  *(void *)(inited + 64) = v21;
  *(void *)(inited + 72) = v10;
  id v21 = a1;
  uint64_t v22 = a2;
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t v11 = 0;
  uint64_t v12 = v22;
  *(void *)(inited + 80) = v21;
  *(void *)(inited + 88) = v12;
  unint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
  do
  {
    sub_1A9631510();
    sub_1A962E580();
    swift_bridgeObjectRelease();
    unint64_t v14 = (void *)sub_1A962E560();
    (*v13)(v7, v4);
    id v21 = 0;
    unsigned int v15 = objc_msgSend(v20[1], sel_removeItemAtURL_error_, v14, &v21);

    id v16 = v21;
    if (!v15)
    {
      uint64_t v17 = v16;
      uint64_t v18 = (void *)sub_1A962E530();

      swift_willThrow();
    }
    v11 += 16;
  }
  while (v11 != 64);
  swift_setDeallocating();
  return sub_1A953EF94();
}

uint64_t sub_1A953EF94()
{
  swift_arrayDestroy();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

ValueMetadata *type metadata accessor for HourlyWeatherStatisticsDescriptor()
{
  return &type metadata for HourlyWeatherStatisticsDescriptor;
}

uint64_t sub_1A953EFE8()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E9802C50 = 0x2E312E302E30;
  *(void *)algn_1E9802C58 = 0xE600000000000000;
  return result;
}

uint64_t *sub_1A953F064()
{
  if (qword_1E97EA5A8 != -1) {
    swift_once();
  }
  return &qword_1E9802C50;
}

uint64_t sub_1A953F0B0()
{
  uint64_t v0 = qword_1E97EBCA8;
  sub_1A9631510();
  return v0;
}

uint64_t sub_1A953F0E8()
{
  sub_1A953F064();
  uint64_t v0 = qword_1E9802C50;
  sub_1A9631510();
  return v0;
}

uint64_t WeatherAlerts.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A943F20C(v1, a1);
}

uint64_t WeatherAlerts.metadata.setter(uint64_t a1)
{
  return sub_1A947A5CC(a1, v1);
}

uint64_t (*WeatherAlerts.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t WeatherAlerts.detailsUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WeatherAlerts() + 20));
  sub_1A9631510();
  return v1;
}

uint64_t WeatherAlerts.detailsUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for WeatherAlerts() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WeatherAlerts.detailsUrl.modify())(void)
{
  return nullsub_1;
}

uint64_t WeatherAlerts.alerts.getter()
{
  type metadata accessor for WeatherAlerts();
  return sub_1A9631510();
}

uint64_t WeatherAlerts.alerts.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for WeatherAlerts() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*WeatherAlerts.alerts.modify())(void)
{
  return nullsub_1;
}

uint64_t WeatherAlerts.init(metadata:detailsUrl:alerts:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for WeatherAlerts();
  uint64_t v11 = (void *)(a5 + *(int *)(v10 + 20));
  uint64_t result = sub_1A943C990(a1, a5);
  *uint64_t v11 = a2;
  v11[1] = a3;
  *(void *)(a5 + *(int *)(v10 + 24)) = a4;
  return result;
}

uint64_t WeatherAlerts.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAF20);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A953F604();
  sub_1A9632950();
  if (!v2)
  {
    LOBYTE(v18) = 0;
    sub_1A953FB04(&qword_1EB6DCA18, (void (*)(uint64_t))type metadata accessor for Metadata);
    sub_1A9632680();
    sub_1A96325D0();
    type metadata accessor for WeatherAlert();
    sub_1A953FB04(&qword_1EB6DADA8, (void (*)(uint64_t))type metadata accessor for WeatherAlert);
    uint64_t v10 = sub_1A96325C0();
    uint64_t v11 = OUTLINED_FUNCTION_4_18();
    v12(v11);
    uint64_t v13 = type metadata accessor for WeatherAlerts();
    uint64_t v14 = v7;
    uint64_t v15 = v13;
    id v16 = (void *)(a2 + *(int *)(v13 + 20));
    sub_1A943C990(v14, a2);
    *id v16 = v18;
    v16[1] = v19;
    *(void *)(a2 + *(int *)(v15 + 24)) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A953F604()
{
  unint64_t result = qword_1EB6DAE90;
  if (!qword_1EB6DAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAE90);
  }
  return result;
}

uint64_t sub_1A953F650(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x55736C6961746564 && a2 == 0xEA00000000006C72;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x737472656C61 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A953F7A4(char a1)
{
  if (!a1) {
    return 0x617461646174656DLL;
  }
  if (a1 == 1) {
    return 0x55736C6961746564;
  }
  return 0x737472656C61;
}

uint64_t sub_1A953F7FC()
{
  return sub_1A953F7A4(*v0);
}

uint64_t sub_1A953F804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A953F650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A953F82C(uint64_t a1)
{
  unint64_t v2 = sub_1A953F604();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A953F868(uint64_t a1)
{
  unint64_t v2 = sub_1A953F604();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherAlerts.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB0A0);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A953F604();
  sub_1A9632970();
  type metadata accessor for Metadata();
  sub_1A953FB04(&qword_1EB6DCA10, (void (*)(uint64_t))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_9();
  if (!v1)
  {
    type metadata accessor for WeatherAlerts();
    sub_1A96326D0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB060);
    sub_1A953FA60();
    OUTLINED_FUNCTION_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A953FA60()
{
  unint64_t result = qword_1EB6DB068;
  if (!qword_1EB6DB068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DB060);
    sub_1A953FB04(&qword_1EB6DAFA8, (void (*)(uint64_t))type metadata accessor for WeatherAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB068);
  }
  return result;
}

uint64_t sub_1A953FB04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A953FB4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherAlerts.init(from:)(a1, a2);
}

uint64_t sub_1A953FB64(void *a1)
{
  return WeatherAlerts.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
    uint64_t v15 = v9[10];
    id v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)id v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v9[11];
    uint64_t v20 = &a1[v19];
    id v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v9[12];
    unint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)unint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    uint64_t v27 = v9[15];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = *(int *)(a3 + 20);
    uint64_t v32 = *(int *)(a3 + 24);
    unint64_t v33 = &a1[v31];
    v34 = &a2[v31];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)unint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    *(void *)&a1[v32] = *(void *)&a2[v32];
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
  }
  return a1;
}

uint64_t destroy for WeatherAlerts(uint64_t a1)
{
  uint64_t v2 = sub_1A962E810();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for Metadata();
  v3(a1 + *(int *)(v4 + 20), v2);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v2)) {
    v3(v5, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  uint64_t v13 = v8[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = v8[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = v8[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  uint64_t v25 = v8[15];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = &a1[v29];
  uint64_t v32 = &a2[v29];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  *(void *)&a1[v30] = *(void *)&a2[v30];
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

char *assignWithCopy for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v5);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v5);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v11, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
LABEL_7:
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  uint64_t v15 = v8[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v18 = v8[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v21 = v8[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  uint64_t v24 = v8[15];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  uint64_t v13 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *assignWithTake for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v5);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v5);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v11, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
LABEL_7:
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  uint64_t v15 = v8[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v8[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v8[12];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (uint64_t *)&a2[v25];
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  uint64_t v30 = v8[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (uint64_t *)&a2[v30];
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(a3 + 20);
  char v36 = &a1[v35];
  char v37 = (uint64_t *)&a2[v35];
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *(void *)char v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9540840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_1A95408CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

unsigned char *storeEnumTagSinglePayload for WeatherAlerts.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9540A20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlerts.CodingKeys()
{
  return &type metadata for WeatherAlerts.CodingKeys;
}

unint64_t sub_1A9540A5C()
{
  unint64_t result = qword_1E97EBCB8;
  if (!qword_1E97EBCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBCB8);
  }
  return result;
}

unint64_t sub_1A9540AAC()
{
  unint64_t result = qword_1EB6DAEA0;
  if (!qword_1EB6DAEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAEA0);
  }
  return result;
}

unint64_t sub_1A9540AFC()
{
  unint64_t result = qword_1EB6DAE98;
  if (!qword_1EB6DAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAE98);
  }
  return result;
}

uint64_t HourForecast.forecastStart.setter(uint64_t a1)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*HourForecast.forecastStart.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.cloudCover.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 20)) = v1;
  return result;
}

uint64_t (*HourForecast.cloudCover.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.cloudCoverLowAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 24)) = v1;
  return result;
}

uint64_t (*HourForecast.cloudCoverLowAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.cloudCoverMidAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 28)) = v1;
  return result;
}

uint64_t (*HourForecast.cloudCoverMidAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.cloudCoverHighAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 32)) = v1;
  return result;
}

uint64_t (*HourForecast.cloudCoverHighAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.conditionCode.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for HourForecast();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*HourForecast.conditionCode.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.daylight.setter(char a1)
{
  uint64_t result = type metadata accessor for HourForecast();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*HourForecast.daylight.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.humidity.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 44)) = v1;
  return result;
}

uint64_t (*HourForecast.humidity.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.precipitationAmount.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 48)) = v1;
  return result;
}

uint64_t (*HourForecast.precipitationAmount.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.precipitationChance.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 52)) = v1;
  return result;
}

uint64_t (*HourForecast.precipitationChance.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.precipitationType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for HourForecast();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*HourForecast.precipitationType.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.perceivedPrecipitationIntensity.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 60)) = v1;
  return result;
}

uint64_t (*HourForecast.perceivedPrecipitationIntensity.modify())(void)
{
  return nullsub_1;
}

void HourForecast.pressure.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 64));
}

uint64_t (*HourForecast.pressure.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.pressureTrend.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for HourForecast();
  *(unsigned char *)(v1 + *(int *)(result + 68)) = v2;
  return result;
}

uint64_t (*HourForecast.pressureTrend.modify())(void)
{
  return nullsub_1;
}

void HourForecast.snowfallIntensity.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 72));
}

uint64_t (*HourForecast.snowfallIntensity.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.temperature.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 76)) = v1;
  return result;
}

uint64_t (*HourForecast.temperature.modify())(void)
{
  return nullsub_1;
}

void HourForecast.temperatureApparent.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 80));
}

uint64_t (*HourForecast.temperatureApparent.modify())(void)
{
  return nullsub_1;
}

void HourForecast.temperatureDewPoint.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 84));
}

uint64_t (*HourForecast.temperatureDewPoint.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.uvIndex.setter()
{
  uint64_t result = OUTLINED_FUNCTION_1_23();
  *(void *)(v1 + *(int *)(result + 88)) = v0;
  return result;
}

uint64_t (*HourForecast.uvIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.visibility.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 92)) = v1;
  return result;
}

uint64_t (*HourForecast.visibility.modify())(void)
{
  return nullsub_1;
}

void HourForecast.windDirection.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 96));
}

uint64_t (*HourForecast.windDirection.modify())(void)
{
  return nullsub_1;
}

void HourForecast.windGust.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 100));
}

uint64_t (*HourForecast.windGust.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.windSpeed.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_17();
  *(void *)(v0 + *(int *)(result + 104)) = v1;
  return result;
}

uint64_t (*HourForecast.windSpeed.modify())(void)
{
  return nullsub_1;
}

uint64_t HourForecast.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC2E8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9541BC0();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A947198C(&qword_1EB6DC8D8);
    sub_1A9632680();
    OUTLINED_FUNCTION_5_22();
    double v9 = OUTLINED_FUNCTION_10_11();
    double v10 = 0.0;
    if (v11) {
      double v12 = v9;
    }
    else {
      double v12 = 0.0;
    }
    OUTLINED_FUNCTION_5_22();
    double v13 = OUTLINED_FUNCTION_10_11();
    if (v11) {
      double v14 = v13;
    }
    else {
      double v14 = 0.0;
    }
    OUTLINED_FUNCTION_5_22();
    double v15 = OUTLINED_FUNCTION_10_11();
    if (v11) {
      double v16 = v15;
    }
    else {
      double v16 = 0.0;
    }
    OUTLINED_FUNCTION_5_22();
    double v17 = OUTLINED_FUNCTION_10_11();
    if (v11) {
      double v10 = v17;
    }
    sub_1A9541C0C();
    OUTLINED_FUNCTION_21_5();
    v52[0] = v52[1];
    char v19 = sub_1A9632650();
    OUTLINED_FUNCTION_11_13(7);
    double v21 = v20;
    OUTLINED_FUNCTION_11_13(8);
    double v23 = v22;
    OUTLINED_FUNCTION_11_13(9);
    double v25 = v24;
    LOBYTE(v48) = 10;
    sub_1A9502638();
    OUTLINED_FUNCTION_21_5();
    v51[0] = v51[1];
    OUTLINED_FUNCTION_18_6();
    sub_1A96325D0();
    double v26 = OUTLINED_FUNCTION_10_11();
    if (!v11) {
      double v26 = 0.0;
    }
    double v36 = v26;
    OUTLINED_FUNCTION_18_6();
    sub_1A96325D0();
    LOBYTE(v46) = 13;
    sub_1A9541C58();
    sub_1A96325D0();
    v50[0] = v50[1];
    OUTLINED_FUNCTION_18_6();
    sub_1A96325D0();
    LOBYTE(v44) = 15;
    sub_1A9632660();
    uint64_t v28 = v27;
    LOBYTE(v42) = 16;
    OUTLINED_FUNCTION_20_2();
    LOBYTE(v40) = 17;
    OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_22_4(18);
    uint64_t v35 = sub_1A9632670();
    OUTLINED_FUNCTION_22_4(19);
    sub_1A9632660();
    uint64_t v34 = v29;
    LOBYTE(v38) = 20;
    sub_1A96325D0();
    sub_1A96325D0();
    sub_1A9632660();
    double v33 = v30;
    uint64_t v31 = OUTLINED_FUNCTION_12_12();
    v32(v31);
    HourForecast.init(forecastStart:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount:precipitationChance:precipitationType:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallIntensity:temperature:temperatureApparent:temperatureDewPoint:uvIndex:visibility:windDirection:windGust:windSpeed:)(v7, v52, v19 & 1, v51, v48, v49, v50, v46, a2, v12, v14, v16, v10, v21, v23, v25, v36, v47, v28,
      v44,
      v45,
      v42,
      v43,
      v35,
      v34,
      v40,
      v41,
      v38,
      v39,
      v33);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9541BC0()
{
  unint64_t result = qword_1EB6DBFD8;
  if (!qword_1EB6DBFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBFD8);
  }
  return result;
}

unint64_t sub_1A9541C0C()
{
  unint64_t result = qword_1EB6DC998;
  if (!qword_1EB6DC998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC998);
  }
  return result;
}

unint64_t sub_1A9541C58()
{
  unint64_t result = qword_1EB6DC9B8;
  if (!qword_1EB6DC9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC9B8);
  }
  return result;
}

uint64_t sub_1A9541CA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x766F4364756F6C63 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96474C0 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96474E0 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001A9647500 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v7 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x746867696C796164 && a2 == 0xE800000000000000;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x79746964696D7568 && a2 == 0xE800000000000000;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9647520 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9646EF0 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9647540 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A9647560 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else
          {
            BOOL v10 = a1 == 0x6572757373657270 && a2 == 0xE800000000000000;
            if (v10 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              BOOL v11 = a1 == 0x6572757373657270 && a2 == 0xED0000646E657254;
              if (v11 || (sub_1A96327D0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9647580 || (sub_1A96327D0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else
              {
                BOOL v12 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
                if (v12 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96475A0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 16;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96475C0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 17;
                }
                else
                {
                  BOOL v13 = a1 == 0x7865646E497675 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1A96327D0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 18;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
                    if (v14 || (sub_1A96327D0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 19;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x65726944646E6977 && a2 == 0xED00006E6F697463;
                      if (v15 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 20;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x74737547646E6977 && a2 == 0xE800000000000000;
                        if (v16 || (sub_1A96327D0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 21;
                        }
                        else if (a1 == 0x65657053646E6977 && a2 == 0xE900000000000064)
                        {
                          swift_bridgeObjectRelease();
                          return 22;
                        }
                        else
                        {
                          char v18 = sub_1A96327D0();
                          swift_bridgeObjectRelease();
                          if (v18) {
                            return 22;
                          }
                          else {
                            return 23;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A95425D4()
{
  return 23;
}

uint64_t sub_1A95425DC(char a1)
{
  uint64_t result = 0x7473616365726F66;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x766F4364756F6C63;
      break;
    case 2:
    case 3:
    case 8:
    case 9:
    case 16:
    case 17:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0x6F697469646E6F63;
      break;
    case 6:
      uint64_t result = 0x746867696C796164;
      break;
    case 7:
      uint64_t result = 0x79746964696D7568;
      break;
    case 10:
      uint64_t result = 0xD000000000000011;
      break;
    case 11:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 12:
    case 13:
      uint64_t v3 = 0x757373657270;
      goto LABEL_16;
    case 14:
      uint64_t result = 0xD000000000000011;
      break;
    case 15:
      uint64_t result = 0x74617265706D6574;
      break;
    case 18:
      uint64_t result = 0x7865646E497675;
      break;
    case 19:
      uint64_t result = 0x696C696269736976;
      break;
    case 20:
      uint64_t v3 = 0x6944646E6977;
LABEL_16:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6572000000000000;
      break;
    case 21:
      uint64_t result = 0x74737547646E6977;
      break;
    case 22:
      uint64_t result = 0x65657053646E6977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9542888()
{
  return sub_1A95425DC(*v0);
}

uint64_t sub_1A9542890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9541CA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95428B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95425D4();
  *a1 = result;
  return result;
}

uint64_t sub_1A95428E0(uint64_t a1)
{
  unint64_t v2 = sub_1A9541BC0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A954291C(uint64_t a1)
{
  unint64_t v2 = sub_1A9541BC0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HourForecast.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC310);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  uint64_t v11 = v10 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9541BC0();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632770();
  if (!v2)
  {
    BOOL v12 = (int *)type metadata accessor for HourForecast();
    OUTLINED_FUNCTION_0_22(1);
    OUTLINED_FUNCTION_0_22(2);
    OUTLINED_FUNCTION_0_22(3);
    OUTLINED_FUNCTION_0_22(4);
    sub_1A9542D40();
    sub_1A9632770();
    OUTLINED_FUNCTION_15_9(6);
    sub_1A9632740();
    OUTLINED_FUNCTION_0_22(7);
    OUTLINED_FUNCTION_0_22(8);
    OUTLINED_FUNCTION_0_22(9);
    sub_1A9502C94();
    OUTLINED_FUNCTION_14_11();
    OUTLINED_FUNCTION_0_22(11);
    OUTLINED_FUNCTION_9_1(v3 + v12[16]);
    OUTLINED_FUNCTION_3_16(12);
    sub_1A9542D8C();
    OUTLINED_FUNCTION_14_11();
    OUTLINED_FUNCTION_9_1(v3 + v12[18]);
    OUTLINED_FUNCTION_3_16(14);
    OUTLINED_FUNCTION_0_22(15);
    OUTLINED_FUNCTION_9_1(v3 + v12[20]);
    OUTLINED_FUNCTION_3_16(16);
    OUTLINED_FUNCTION_9_1(v3 + v12[21]);
    OUTLINED_FUNCTION_3_16(17);
    OUTLINED_FUNCTION_15_9(18);
    sub_1A9632760();
    OUTLINED_FUNCTION_0_22(19);
    OUTLINED_FUNCTION_9_1(v3 + v12[24]);
    sub_1A9632710();
    OUTLINED_FUNCTION_9_1(v3 + v12[25]);
    OUTLINED_FUNCTION_3_16(21);
    OUTLINED_FUNCTION_0_22(22);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

unint64_t sub_1A9542D40()
{
  unint64_t result = qword_1EB6DC988;
  if (!qword_1EB6DC988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC988);
  }
  return result;
}

unint64_t sub_1A9542D8C()
{
  unint64_t result = qword_1EB6DC9A8;
  if (!qword_1EB6DC9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC9A8);
  }
  return result;
}

uint64_t sub_1A9542DD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HourForecast.init(from:)(a1, a2);
}

uint64_t sub_1A9542DF0(void *a1)
{
  return HourForecast.encode(to:)(a1);
}

void sub_1A9542E08()
{
}

void sub_1A9542E20()
{
}

void *initializeBufferWithCopyOfBuffer for HourForecast(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
    uint64_t v12 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[16];
    *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    BOOL v14 = (char *)a1 + v13;
    BOOL v15 = (char *)a2 + v13;
    *(void *)BOOL v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    double v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    *(void *)double v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[20];
    *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
    double v20 = (char *)a1 + v19;
    double v21 = (char *)a2 + v19;
    *(void *)double v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = a3[21];
    uint64_t v23 = a3[22];
    double v24 = (char *)a1 + v22;
    double v25 = (char *)a2 + v22;
    *(void *)double v24 = *(void *)v25;
    v24[8] = v25[8];
    *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
    uint64_t v26 = a3[24];
    *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = a3[25];
    uint64_t v30 = a3[26];
    uint64_t v31 = (char *)a1 + v29;
    uint64_t v32 = (char *)a2 + v29;
    *(void *)uint64_t v31 = *(void *)v32;
    v31[8] = v32[8];
    *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  }
  return a1;
}

uint64_t destroy for TideEvent(uint64_t a1)
{
  uint64_t v2 = sub_1A962E810();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[21];
  uint64_t v22 = a3[22];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v25 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[25];
  uint64_t v29 = a3[26];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  return a1;
}

uint64_t assignWithCopy for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v7 = a3[16];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v11 = a3[18];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v15 = a3[20];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = a3[21];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v23 = a3[24];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v26;
  uint64_t v27 = a3[25];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v30;
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t initializeWithTake for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[21];
  uint64_t v22 = a3[22];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v25 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[25];
  uint64_t v29 = a3[26];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  return a1;
}

uint64_t assignWithTake for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[21];
  uint64_t v22 = a3[22];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v25 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[25];
  uint64_t v29 = a3[26];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  return a1;
}

uint64_t sub_1A9543774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 40));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1A9543810(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 40)) = a2 + 1;
  }
}

uint64_t getEnumTagSinglePayload for HourForecast.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEA)
  {
    if (a2 + 22 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 22) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 23;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v5 = v6 - 23;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HourForecast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95439ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourForecast.CodingKeys()
{
  return &type metadata for HourForecast.CodingKeys;
}

unint64_t sub_1A9543A28()
{
  unint64_t result = qword_1E97EBCC0;
  if (!qword_1E97EBCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBCC0);
  }
  return result;
}

unint64_t sub_1A9543A78()
{
  unint64_t result = qword_1EB6DBFE8;
  if (!qword_1EB6DBFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBFE8);
  }
  return result;
}

unint64_t sub_1A9543AC8()
{
  unint64_t result = qword_1EB6DBFE0;
  if (!qword_1EB6DBFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBFE0);
  }
  return result;
}

uint64_t static AirQualityDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aAirquality_8;
  sub_1A9631510();
  return v0;
}

uint64_t static AirQualityDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aAirquality_8 = a1;
  *(void *)&aAirquality_8[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AirQualityDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A9543BEC()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD7D8 = 0x2E312E312E30;
  qword_1EB6DD7E0 = 0xE600000000000000;
  return result;
}

uint64_t static AirQualityDescriptor.version.getter()
{
  if (qword_1EB6DD7E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD7D8;
  sub_1A9631510();
  return v0;
}

uint64_t static AirQualityDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD7E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD7D8 = a1;
  qword_1EB6DD7E0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AirQualityDescriptor.version.modify())()
{
  if (qword_1EB6DD7E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for AirQualityDescriptor()
{
  return &type metadata for AirQualityDescriptor;
}

void static NextHourForecast.currentlyClearWithRainStarting(on:with:chance:intensity:perceivedIntensity:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_49_1(v3, v4);
  uint64_t v41 = v5;
  uint64_t v50 = v6;
  uint64_t v49 = type metadata accessor for NextHourForecast() - 8;
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_27_4(v7, v40);
  OUTLINED_FUNCTION_14_12();
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_38_0(v11, v40);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v13 = OUTLINED_FUNCTION_2_0(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_10_12(v14, v40);
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = OUTLINED_FUNCTION_18_7();
  uint64_t v20 = OUTLINED_FUNCTION_2_0(v19);
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_4_19(v21, v40);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v40 - v23;
  uint64_t v42 = (uint64_t)&v40 - v23;
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_13_12();
  v0();
  OUTLINED_FUNCTION_13_12();
  v0();
  OUTLINED_FUNCTION_16_11(v1);
  char v51 = 1;
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_2_22((uint64_t)v24, 37.323, -122.0322, v40, v41, v42, v43, v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_1_24();
  uint64_t v26 = *(void *)(v25 + 72);
  uint64_t v27 = OUTLINED_FUNCTION_40_1();
  uint64_t v44 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_1A9635D50;
  uint64_t v28 = v27 + 1;
  uint64_t v29 = v41;
  OUTLINED_FUNCTION_13_12();
  v0();
  OUTLINED_FUNCTION_9_17(v1, 0);
  OUTLINED_FUNCTION_45_1();
  uint64_t v30 = OUTLINED_FUNCTION_44_1();
  v31(v30);
  sub_1A9471308(v1);
  uint64_t v32 = v28 + v26;
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v16);
  OUTLINED_FUNCTION_20_3(v29, v33, v34);
  sub_1A9471308(v1);
  uint64_t v36 = v42;
  uint64_t v35 = v43;
  sub_1A943F20C(v42, (uint64_t)v43);
  sub_1A962E800();
  OUTLINED_FUNCTION_17_9(v1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8D8);
  char v37 = (__n128 *)OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_50_0(v37, (__n128)xmmword_1A96357F0);
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_33_3();
  sub_1A9544160(v32, v2, (void (*)(void))type metadata accessor for ForecastMinute);
  uint64_t v39 = v48;
  uint64_t v38 = v49;
  OUTLINED_FUNCTION_16_11(v48 + *(int *)(v49 + 36));
  sub_1A9544160((uint64_t)v35, v39, (void (*)(void))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_31_2(MEMORY[0x1E4FBC860]);
  *(void *)(v39 + *(int *)(v38 + 40)) = v37;
  sub_1A9544160(v39, v50, (void (*)(void))type metadata accessor for NextHourForecast);
  sub_1A943F424(v36);
  OUTLINED_FUNCTION_7_18();
}

uint64_t sub_1A9544160(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void static NextHourForecast.currentlyRainingWithClearConditionsStarting(on:with:chance:intensity:perceivedIntensity:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_49_1(v4, v5);
  uint64_t v41 = v6;
  uint64_t v50 = v7;
  uint64_t v49 = type metadata accessor for NextHourForecast() - 8;
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_27_4(v8, v40);
  OUTLINED_FUNCTION_14_12();
  uint64_t v46 = v9;
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_38_0(v12, v40);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v14 = OUTLINED_FUNCTION_2_0(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_10_12(v15, v40);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = OUTLINED_FUNCTION_18_7();
  uint64_t v21 = OUTLINED_FUNCTION_2_0(v20);
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_4_19(v22, v40);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v40 - v24;
  uint64_t v42 = (uint64_t)&v40 - v24;
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_13_12();
  v1();
  OUTLINED_FUNCTION_13_12();
  v1();
  OUTLINED_FUNCTION_16_11(v2);
  char v51 = 1;
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_2_22((uint64_t)v25, 37.323, -122.0322, v40, v41, v42, v43, v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_1_24();
  uint64_t v27 = *(void *)(v26 + 72);
  uint64_t v28 = OUTLINED_FUNCTION_40_1();
  uint64_t v44 = v28;
  *(_OWORD *)(v28 + 16) = xmmword_1A9635D50;
  uint64_t v29 = &v25[v28];
  OUTLINED_FUNCTION_13_12();
  v1();
  OUTLINED_FUNCTION_9_17(v2, 0);
  OUTLINED_FUNCTION_20_3(v0, v30, v31);
  uint64_t v32 = OUTLINED_FUNCTION_44_1();
  v33(v32);
  sub_1A9471308(v2);
  uint64_t v34 = (uint64_t)&v29[v27];
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v17);
  static ForecastSummary.clear(starting:until:)(v2, (uint64_t)&v29[v27]);
  sub_1A9471308(v2);
  uint64_t v36 = v42;
  uint64_t v35 = v43;
  sub_1A943F20C(v42, (uint64_t)v43);
  sub_1A962E800();
  OUTLINED_FUNCTION_17_9(v2, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8D8);
  char v37 = (__n128 *)OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_50_0(v37, (__n128)xmmword_1A96357F0);
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_33_3();
  sub_1A9544160(v34, v3, (void (*)(void))type metadata accessor for ForecastMinute);
  uint64_t v39 = v48;
  uint64_t v38 = v49;
  OUTLINED_FUNCTION_16_11(v48 + *(int *)(v49 + 36));
  sub_1A9544160((uint64_t)v35, v39, (void (*)(void))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_31_2(MEMORY[0x1E4FBC860]);
  *(void *)(v39 + *(int *)(v38 + 40)) = v37;
  sub_1A9544160(v39, v50, (void (*)(void))type metadata accessor for NextHourForecast);
  sub_1A943F424(v36);
  OUTLINED_FUNCTION_7_18();
}

uint64_t static NextHourForecast.clear(until:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v49 = a3;
  uint64_t HourForecast = type metadata accessor for NextHourForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_28();
  uint64_t v12 = v10 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v16 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_28();
  uint64_t v22 = v20 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v26 = type metadata accessor for Metadata();
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_28();
  uint64_t v30 = v28 - v29;
  MEMORY[0x1F4188790](v31);
  __n128 v33 = (char *)&v45 - v32;
  uint64_t v48 = a1;
  sub_1A9412F20(a1, (uint64_t)v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    sub_1A962E800();
    sub_1A9471308((uint64_t)v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v15, v16);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, v46, v16);
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v16);
  char v50 = 1;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_3_17((uint64_t)v25, v22, v12, (uint64_t)v33, 37.323, -122.0322, v41, v42, v43, v44, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_1_24();
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1A96357F0;
  sub_1A962E6D0();
  static ForecastSummary.clear(starting:until:)(v48, v36 + v35);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
  sub_1A943F20C((uint64_t)v33, v30);
  sub_1A962E800();
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v16);
  char v37 = (int *)HourForecast;
  uint64_t v38 = v7 + *(int *)(HourForecast + 28);
  __swift_storeEnumTagSinglePayload(v38, 1, 1, v16);
  sub_1A9544160(v30, v7, (void (*)(void))type metadata accessor for Metadata);
  uint64_t v39 = MEMORY[0x1E4FBC860];
  *(void *)(v7 + v37[5]) = MEMORY[0x1E4FBC860];
  *(void *)(v7 + v37[6]) = v36;
  sub_1A94200B4(v12, v38);
  *(void *)(v7 + v37[8]) = v39;
  sub_1A9544160(v7, v49, (void (*)(void))type metadata accessor for NextHourForecast);
  return sub_1A943F424((uint64_t)v33);
}

void static NextHourForecast.rain(until:with:chance:intensity:perceivedIntensity:)()
{
  OUTLINED_FUNCTION_8_16();
  v60 = v0;
  unint64_t v2 = v1;
  unint64_t v4 = v3;
  *(void *)&long long v56 = v5;
  uint64_t v7 = v6;
  uint64_t v65 = v8;
  uint64_t HourForecast = type metadata accessor for NextHourForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t v63 = type metadata accessor for ForecastMinute();
  OUTLINED_FUNCTION_1();
  uint64_t v61 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v19 = OUTLINED_FUNCTION_2_0(v18);
  MEMORY[0x1F4188790](v19);
  v62 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v55 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v55 - v25;
  uint64_t v27 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_28();
  uint64_t v33 = v31 - v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)v55 - v35;
  uint64_t v37 = type metadata accessor for Metadata();
  uint64_t v38 = OUTLINED_FUNCTION_2_0(v37);
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_10_12(v39, v55[0]);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)v55 - v41;
  HIDWORD(v58) = *v60;
  v60 = (unsigned __int8 *)v7;
  sub_1A9412F20(v7, (uint64_t)v26);
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27) == 1)
  {
    sub_1A962E800();
    sub_1A9471308((uint64_t)v26);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v36, v26, v27);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 16))(v33, v56, v27);
  OUTLINED_FUNCTION_47_1((uint64_t)v23, 1);
  char v67 = 1;
  OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_3_17((uint64_t)v36, v33, (uint64_t)v23, (uint64_t)v42, 37.323, -122.0322, v55[0], (uint64_t)v42, v56, *((char **)&v56 + 1), v57, v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  type metadata accessor for ForecastSummary();
  OUTLINED_FUNCTION_1_24();
  uint64_t v43 = swift_allocObject();
  long long v56 = xmmword_1A96357F0;
  *(_OWORD *)(v43 + 16) = xmmword_1A96357F0;
  sub_1A962E6D0();
  v44.n128_u64[0] = v4;
  v45.n128_u64[0] = v2;
  static ForecastSummary.rain(starting:until:chance:intensity:)(v33, v60, v44, v45);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v27);
  uint64_t v46 = (uint64_t)v42;
  uint64_t v47 = v59;
  sub_1A943F20C(v46, v59);
  sub_1A962E800();
  OUTLINED_FUNCTION_47_1((uint64_t)v23, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8D8);
  uint64_t v48 = OUTLINED_FUNCTION_21_6();
  *(_OWORD *)(v48 + 16) = v56;
  uint64_t v49 = (uint64_t)v62;
  sub_1A962E800();
  OUTLINED_FUNCTION_47_1(v49, 0);
  char v66 = BYTE4(v58);
  ForecastSummary.Intensity.range.getter();
  uint64_t v51 = v50;
  OUTLINED_FUNCTION_47_1(v17, 1);
  sub_1A94200B4(v49, v17);
  uint64_t v52 = v63;
  *(void *)(v17 + *(int *)(v63 + 20)) = v4;
  *(void *)(v17 + *(int *)(v52 + 24)) = v2;
  *(void *)(v17 + *(int *)(v52 + 28)) = v51;
  sub_1A9544160(v17, v48 + v33, (void (*)(void))type metadata accessor for ForecastMinute);
  v53 = (int *)HourForecast;
  uint64_t v54 = v12 + *(int *)(HourForecast + 28);
  OUTLINED_FUNCTION_47_1(v54, 1);
  sub_1A9544160(v47, v12, (void (*)(void))type metadata accessor for Metadata);
  *(void *)(v12 + v53[5]) = MEMORY[0x1E4FBC860];
  *(void *)(v12 + v53[6]) = v43;
  sub_1A94200B4((uint64_t)v23, v54);
  *(void *)(v12 + v53[8]) = v48;
  sub_1A9544160(v12, v65, (void (*)(void))type metadata accessor for NextHourForecast);
  sub_1A943F424(v55[1]);
  OUTLINED_FUNCTION_7_18();
}

void static NextHourForecast.currentlyClearWithRainStarting(on:with:chance:intensity:perceivedIntensity:stopping:)()
{
  OUTLINED_FUNCTION_8_16();
  uint64_t v56 = OUTLINED_FUNCTION_22_5(v4, v5, v6) - 8;
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = OUTLINED_FUNCTION_26_2(v7, v48);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v52 = v8 - 8;
  uint64_t v53 = v9;
  OUTLINED_FUNCTION_1_24();
  uint64_t v54 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_37(v12, v48);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v14 = OUTLINED_FUNCTION_2_0(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_4_19(v15, v48);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v18;
  uint64_t v58 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = OUTLINED_FUNCTION_18_7();
  uint64_t v23 = OUTLINED_FUNCTION_2_0(v22);
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_29_4(v24, v48);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v48 - v26;
  uint64_t v48 = (uint64_t)&v48 - v26;
  int v51 = *v1;
  uint64_t v28 = *(void (**)(void))(v19 + 16);
  uint64_t v29 = v3;
  OUTLINED_FUNCTION_6_19();
  v28();
  OUTLINED_FUNCTION_6_19();
  v28();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v17);
  char v59 = 1;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_2_22((uint64_t)v27, 37.323, -122.0322, v44, v45, v46, v47, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_1_24();
  uint64_t v31 = *(void *)(v30 + 72);
  uint64_t v32 = OUTLINED_FUNCTION_32_3();
  uint64_t v50 = v32;
  *(_OWORD *)(v32 + 16) = xmmword_1A9633D00;
  uint64_t v33 = &v27[v32];
  OUTLINED_FUNCTION_6_19();
  v28();
  OUTLINED_FUNCTION_9_17(v2, 0);
  OUTLINED_FUNCTION_45_1();
  uint64_t v34 = OUTLINED_FUNCTION_25_3();
  v0(v34);
  sub_1A9471308(v2);
  uint64_t v35 = (uint64_t)&v33[v31];
  OUTLINED_FUNCTION_6_19();
  v28();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v17);
  OUTLINED_FUNCTION_20_3(v29, v36, v37);
  sub_1A9471308(v2);
  OUTLINED_FUNCTION_9_17(v2, 1);
  OUTLINED_FUNCTION_45_1();
  uint64_t v38 = OUTLINED_FUNCTION_42_1();
  v0(v38);
  sub_1A9471308(v2);
  uint64_t v40 = v48;
  uint64_t v39 = v49;
  sub_1A943F20C(v48, v49);
  sub_1A962E800();
  OUTLINED_FUNCTION_17_9(v2, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8D8);
  uint64_t v41 = (__n128 *)OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_51_1(v41, (__n128)xmmword_1A96357F0);
  OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_39_2();
  sub_1A9544160((uint64_t)v0, v35, (void (*)(void))type metadata accessor for ForecastMinute);
  uint64_t v43 = v55;
  uint64_t v42 = v56;
  OUTLINED_FUNCTION_16_11(v55 + *(int *)(v56 + 36));
  sub_1A9544160(v39, v43, (void (*)(void))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_30_4(MEMORY[0x1E4FBC860]);
  *(void *)(v43 + *(int *)(v42 + 40)) = v41;
  sub_1A9544160(v43, v57, (void (*)(void))type metadata accessor for NextHourForecast);
  sub_1A943F424(v40);
  OUTLINED_FUNCTION_7_18();
}

void static NextHourForecast.currentlyRainingWithClearConditionsStarting(on:with:chance:intensity:perceivedIntensity:resuming:)()
{
  OUTLINED_FUNCTION_8_16();
  uint64_t v57 = OUTLINED_FUNCTION_22_5(v4, v5, v6) - 8;
  MEMORY[0x1F4188790](v57);
  uint64_t v8 = OUTLINED_FUNCTION_26_2(v7, v49);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8 - 8;
  uint64_t v54 = v9;
  OUTLINED_FUNCTION_1_24();
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_37(v12, v49);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v14 = OUTLINED_FUNCTION_2_0(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_4_19(v15, v49);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = OUTLINED_FUNCTION_19_7();
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v18;
  uint64_t v59 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = OUTLINED_FUNCTION_18_7();
  uint64_t v23 = OUTLINED_FUNCTION_2_0(v22);
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_29_4(v24, v49);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v49 = (uint64_t)&v49 - v26;
  int v52 = *v2;
  uint64_t v28 = *(void (**)(void))(v19 + 16);
  OUTLINED_FUNCTION_6_19();
  v28();
  OUTLINED_FUNCTION_6_19();
  v28();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v17);
  char v60 = 1;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_2_22((uint64_t)v27, 37.323, -122.0322, v45, v46, v47, v48, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8E0);
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_1_24();
  uint64_t v30 = *(void *)(v29 + 72);
  uint64_t v31 = OUTLINED_FUNCTION_32_3();
  uint64_t v51 = v31;
  *(_OWORD *)(v31 + 16) = xmmword_1A9633D00;
  uint64_t v32 = &v27[v31];
  OUTLINED_FUNCTION_6_19();
  v28();
  OUTLINED_FUNCTION_9_17(v3, 0);
  OUTLINED_FUNCTION_20_3(v1, v33, v34);
  uint64_t v35 = OUTLINED_FUNCTION_25_3();
  v0(v35);
  sub_1A9471308(v3);
  uint64_t v36 = (uint64_t)&v32[v30];
  OUTLINED_FUNCTION_6_19();
  v28();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v17);
  static ForecastSummary.clear(starting:until:)(v3, (uint64_t)&v32[v30]);
  sub_1A9471308(v3);
  OUTLINED_FUNCTION_9_17(v3, 1);
  OUTLINED_FUNCTION_20_3(v1, v37, v38);
  uint64_t v39 = OUTLINED_FUNCTION_42_1();
  v0(v39);
  sub_1A9471308(v3);
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  sub_1A943F20C(v49, v50);
  sub_1A962E800();
  OUTLINED_FUNCTION_17_9(v3, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EA8D8);
  uint64_t v42 = (__n128 *)OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_51_1(v42, (__n128)xmmword_1A96357F0);
  OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_39_2();
  sub_1A9544160((uint64_t)v0, v36, (void (*)(void))type metadata accessor for ForecastMinute);
  uint64_t v44 = v56;
  uint64_t v43 = v57;
  OUTLINED_FUNCTION_16_11(v56 + *(int *)(v57 + 36));
  sub_1A9544160(v40, v44, (void (*)(void))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_30_4(MEMORY[0x1E4FBC860]);
  *(void *)(v44 + *(int *)(v43 + 40)) = v42;
  sub_1A9544160(v44, v58, (void (*)(void))type metadata accessor for NextHourForecast);
  sub_1A943F424(v41);
  OUTLINED_FUNCTION_7_18();
}

uint64_t OUTLINED_FUNCTION_50_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1A962E800();
}

uint64_t sub_1A95455B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB138);
  uint64_t v3 = OUTLINED_FUNCTION_2_0(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Metadata();
  uint64_t v8 = OUTLINED_FUNCTION_2_0(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  uint64_t v11 = v10 - v9;
  sub_1A9630300();
  uint64_t v12 = sub_1A962FF50();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A9545BC0(v11);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
    sub_1A954570C();
    uint64_t v15 = v14;
    sub_1A943C990(v11, a1);
    uint64_t result = type metadata accessor for DailySummary();
    *(void *)(a1 + *(int *)(result + 20)) = v15;
  }
  return result;
}

void sub_1A954570C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCD8);
  uint64_t v1 = OUTLINED_FUNCTION_2_0(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = v3 - v2;
  int v5 = sub_1A9630310();
  if (v5 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  int v6 = v5;
  if (v5)
  {
    int v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    int v18 = v5;
    while (v6 != v7)
    {
      sub_1A96302F0();
      sub_1A9545908(v4, (uint64_t)&v26);
      sub_1A9545AF8(v4);
      uint64_t v9 = v27;
      if (v27)
      {
        uint64_t v10 = v26;
        uint64_t v12 = v28;
        char v11 = v29;
        char v25 = v37;
        char v23 = v35;
        uint64_t v24 = v36;
        char v21 = v33;
        uint64_t v22 = v34;
        uint64_t v13 = v30;
        char v19 = v31;
        uint64_t v20 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A9481D88();
          uint64_t v8 = v16;
        }
        unint64_t v14 = *(void *)(v8 + 16);
        if (v14 >= *(void *)(v8 + 24) >> 1)
        {
          sub_1A9481D88();
          uint64_t v8 = v17;
        }
        *(void *)(v8 + 16) = v14 + 1;
        uint64_t v15 = v8 + 96 * v14;
        *(void *)(v15 + 32) = v10;
        *(void *)(v15 + 40) = v9;
        *(void *)(v15 + 48) = v12;
        *(unsigned char *)(v15 + 56) = v11 & 1;
        *(void *)(v15 + 64) = v13;
        *(unsigned char *)(v15 + 72) = v19 & 1;
        *(void *)(v15 + 80) = v20;
        *(unsigned char *)(v15 + 88) = v21 & 1;
        *(void *)(v15 + 96) = v22;
        *(unsigned char *)(v15 + 104) = v23 & 1;
        *(void *)(v15 + 112) = v24;
        *(unsigned char *)(v15 + 120) = v25 & 1;
        int v6 = v18;
      }
      if (v6 == ++v7) {
        return;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A9545908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCD8);
  uint64_t v5 = OUTLINED_FUNCTION_2_0(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1A96301D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  sub_1A9545B58(a1, v8);
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    uint64_t result = sub_1A9545AF8(v8);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(void *)(a2 + 48) = 0;
    double v15 = 0.0;
    double v16 = 0.0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v8, v9);
    uint64_t v17 = sub_1A96301C0();
    sub_1A96301A0();
    double v19 = v18;
    sub_1A9630190();
    double v21 = v20;
    sub_1A96301B0();
    double v15 = v22;
    sub_1A9630180();
    double v16 = v23;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
    *(_OWORD *)a2 = xmmword_1A963A040;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = 0;
    *(double *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = 0;
    *(double *)(a2 + 48) = v21;
  }
  *(void *)(a2 + 56) = 0;
  *(double *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = 0;
  *(double *)(a2 + 80) = v16;
  *(unsigned char *)(a2 + 88) = 0;
  return result;
}

uint64_t type metadata accessor for DailySummaryModelFactory()
{
  return self;
}

uint64_t sub_1A9545AF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9545B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9545BC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9545BD8((void (*)(unint64_t))sub_1A96209AC, a1);
}

uint64_t sub_1A9545BD8@<X0>(void (*a1)(unint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v31 = v6 - v5;
  uint64_t v7 = sub_1A962E810();
  uint64_t v8 = OUTLINED_FUNCTION_2_0(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - v12;
  sub_1A962FF30();
  sub_1A962E7A0();
  sub_1A962FE00();
  sub_1A962E7A0();
  unint64_t v14 = sub_1A962FE40();
  a1(v14 | ((HIDWORD(v14) & 1) << 32));
  sub_1A962FF20();
  double v16 = v15;
  sub_1A962FF40();
  double v18 = v17;
  uint64_t v30 = sub_1A962FF10();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1A962FE30();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1A962FE20();
  uint64_t v26 = v25;
  LOBYTE(a1) = sub_1A962FE60() & 1;
  v33[0] = 0;
  uint64_t v27 = sub_1A962FE50();
  return Metadata.init(readTime:expireTime:reportedTime:version:latitude:longitude:language:providerName:providerLogo:temporarilyUnavailable:units:attributionURL:)((uint64_t)v13, (uint64_t)v10, v31, 2, v30, v20, v21, v23, v32, v16, v18, v24, v26, (char)a1, v33, v27, v28);
}

uint64_t sub_1A9545DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB608);
  uint64_t v7 = OUTLINED_FUNCTION_2_0(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_24();
  uint64_t v8 = sub_1A9631110();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_26();
  sub_1A9546678(a1, v2, &qword_1E97EB608);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v8);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t result = sub_1A944C424(v2, &qword_1E97EB608);
    double v14 = 0.0;
    double v15 = 0.0;
  }
  else
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v3, v2, v8);
    double v14 = MEMORY[0x1AD0F51C0](v16);
    double v15 = MEMORY[0x1AD0F51B0]();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v3, v8);
  }
  *(double *)a2 = v14;
  *(double *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = EnumTagSinglePayload == 1;
  return result;
}

uint64_t sub_1A9545F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB600);
  uint64_t v7 = OUTLINED_FUNCTION_2_0(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_26();
  uint64_t v8 = sub_1A9630D40();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_24();
  sub_1A9546678(a1, v3, &qword_1E97EB600);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v8);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t result = sub_1A944C424(v3, &qword_1E97EB600);
    double v14 = 0.0;
    double v15 = 0.0;
    double v16 = 0.0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v2, v3, v8);
    double v14 = (double)sub_1A9630D30() / 100.0;
    double v15 = MEMORY[0x1AD0F4DE0]();
    double v16 = MEMORY[0x1AD0F4DD0]();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v2, v8);
  }
  *(double *)a2 = v14;
  *(double *)(a2 + 8) = v15;
  *(double *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = EnumTagSinglePayload == 1;
  return result;
}

uint64_t sub_1A95460A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB138);
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for Metadata();
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_26();
  sub_1A962F060();
  uint64_t v10 = sub_1A962FF50();
  uint64_t result = __swift_getEnumTagSinglePayload(v7, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A9545BD8((void (*)(unint64_t))sub_1A96209AC, v1);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
    sub_1A9546228();
    uint64_t v13 = v12;
    sub_1A962F040();
    uint64_t v14 = type metadata accessor for MonthlyWeatherStatistics();
    sub_1A962E7A0();
    uint64_t result = sub_1A943C990(v1, a1);
    *(void *)(a1 + *(int *)(v14 + 20)) = v13;
  }
  return result;
}

void sub_1A9546228()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCE0);
  uint64_t v2 = OUTLINED_FUNCTION_2_0(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_6_0();
  int v3 = sub_1A962F030();
  if (v3 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  int v4 = v3;
  if (v3)
  {
    int v5 = 0;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (v4 != v5)
    {
      sub_1A962F050();
      sub_1A95463E4(v0, (uint64_t)&v17);
      sub_1A944C424(v0, &qword_1E97EBCE0);
      if ((v23 & 1) == 0)
      {
        long long v15 = v17;
        long long v16 = v20;
        uint64_t v7 = v21;
        char v8 = v22;
        uint64_t v9 = v18;
        char v10 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A9481984();
          uint64_t v6 = v13;
        }
        unint64_t v11 = *(void *)(v6 + 16);
        if (v11 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1A9481984();
          uint64_t v6 = v14;
        }
        *(void *)(v6 + 16) = v11 + 1;
        uint64_t v12 = v6 + (v11 << 6);
        *(_OWORD *)(v12 + 32) = v15;
        *(void *)(v12 + 48) = v9;
        *(unsigned char *)(v12 + 56) = v10 & 1;
        *(_OWORD *)(v12 + 64) = v16;
        *(void *)(v12 + 80) = v7;
        *(unsigned char *)(v12 + 88) = v8 & 1;
      }
      if (v4 == ++v5) {
        return;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A95463E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB600);
  uint64_t v6 = OUTLINED_FUNCTION_2_0(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB608);
  uint64_t v8 = OUTLINED_FUNCTION_2_0(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBCE0);
  uint64_t v13 = OUTLINED_FUNCTION_2_0(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1A962FD20();
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_2();
  uint64_t v23 = v22 - v21;
  sub_1A9546678(a1, v16, &qword_1E97EBCE0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v17);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t result = sub_1A944C424(v16, &qword_1E97EBCE0);
    char v26 = 0;
    long long v27 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v16, v17);
    uint64_t v32 = (char)sub_1A962FD10();
    sub_1A962FCF0();
    sub_1A9545DB0(v11, (uint64_t)v36);
    sub_1A944C424(v11, &qword_1E97EB608);
    uint64_t v28 = v36[0];
    uint64_t v31 = v36[1];
    uint64_t v29 = v37;
    sub_1A962FD00();
    sub_1A9545F18(v2, (uint64_t)&v33);
    sub_1A944C424(v2, &qword_1E97EB600);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
    uint64_t v30 = v33;
    long long v27 = v34;
    char v26 = v35;
    *(void *)a2 = v32;
    *(void *)(a2 + 8) = v28;
    *(void *)(a2 + 16) = v31;
    *(void *)(a2 + 24) = v29;
    *(void *)(a2 + 32) = v30;
  }
  *(_OWORD *)(a2 + 40) = v27;
  *(unsigned char *)(a2 + 56) = v26;
  *(unsigned char *)(a2 + 57) = EnumTagSinglePayload == 1;
  return result;
}

uint64_t type metadata accessor for MonthlyStatisticsModelFactory()
{
  return self;
}

uint64_t sub_1A9546678(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

WeatherDaemon::XPCActivity __swiftcall XPCActivity.init(identifier:gracePeriod:priority:requiresNetworkConnectivity:)(Swift::String identifier, Swift::Double gracePeriod, WeatherDaemon::XPCActivity::XPCPriority priority, Swift::Bool requiresNetworkConnectivity)
{
  char v5 = *(unsigned char *)priority;
  *(Swift::String *)uint64_t v4 = identifier;
  *(Swift::Double *)(v4 + 16) = gracePeriod;
  *(unsigned char *)(v4 + 24) = v5;
  *(unsigned char *)(v4 + 25) = requiresNetworkConnectivity;
  result.identifier = identifier;
  result.gracePeriod = gracePeriod;
  result.priority = priority;
  return result;
}

uint64_t XPCActivity.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

double XPCActivity.gracePeriod.getter()
{
  return *(double *)(v0 + 16);
}

void XPCActivity.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t XPCActivity.requiresNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

BOOL static XPCActivity.XPCPriority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCActivity.XPCPriority.hash(into:)()
{
  return sub_1A9632910();
}

uint64_t XPCActivity.XPCPriority.hashValue.getter()
{
  return sub_1A9632930();
}

unint64_t sub_1A95467DC()
{
  unint64_t result = qword_1E97EBCE8;
  if (!qword_1E97EBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBCE8);
  }
  return result;
}

uint64_t initializeWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  sub_1A9631510();
  return a1;
}

uint64_t assignWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCActivity(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 26))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity()
{
  return &type metadata for XPCActivity;
}

unsigned char *storeEnumTagSinglePayload for XPCActivity.XPCPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9546A9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.XPCPriority()
{
  return &type metadata for XPCActivity.XPCPriority;
}

uint64_t sub_1A9546AD4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A96317F0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB6EB630);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A96317D0();
  os_log_type_t v14 = sub_1A9632230();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = a5;
    uint64_t v16 = swift_slowAlloc();
    v22[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    sub_1A9631510();
    sub_1A945C1DC(a1, a2, v22);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v13, v14, "Requesting weather alert with identifier %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    a5 = v21;
    MEMORY[0x1AD0F7300](v17, -1, -1);
    MEMORY[0x1AD0F7300](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v22[0] = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A94AEC90();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1A9546D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11 = *(void *)a4;
  char v12 = *(unsigned char *)(a4 + 8);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A96317F0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB6EB630);
  os_log_type_t v14 = sub_1A96317D0();
  os_log_type_t v15 = sub_1A9632230();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v30 = a3;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v11;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558275;
    v32[0] = v17;
    sub_1A9632350();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v18 = CLLocationCoordinate2D.id.getter();
    sub_1A945C1DC(v18, v19, v32);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v14, v15, "Fetching daily weather statistics for location: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v11 = v31;
    MEMORY[0x1AD0F7300](v20, -1, -1);
    uint64_t v21 = v16;
    a3 = v30;
    MEMORY[0x1AD0F7300](v21, -1, -1);
  }

  uint64_t v22 = sub_1A9546F60(a2);
  uint64_t v24 = v23;
  uint64_t v25 = sub_1A9546F60(a3);
  v32[0] = a1;
  *(double *)&v32[1] = a5;
  *(double *)&v32[2] = a6;
  v32[3] = v22;
  v32[4] = v24;
  v32[5] = v25;
  v32[6] = v26;
  v32[7] = v11;
  char v33 = v12;
  sub_1A9631510();
  sub_1A94AF0F8();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1A9546F60(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(v1 + 16) + qword_1EB6EB5F8)) {
    return sub_1A96327B0();
  }
  else {
    return sub_1A9546FC0(a1);
  }
}

uint64_t sub_1A9546FC0(uint64_t a1)
{
  uint64_t v1 = a1 - 31;
  if (a1 <= 31) {
    uint64_t v1 = a1;
  }
  if (v1 <= 29) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = v1 - 29;
  }
  if (v2 > 31)
  {
    swift_bridgeObjectRelease();
    v2 -= 31;
  }
  if (v2 >= 31)
  {
    swift_bridgeObjectRelease();
    if ((unint64_t)(v2 - 30) < 0x20)
    {
      v2 -= 30;
    }
    else
    {
      swift_bridgeObjectRelease();
      v2 -= 61;
    }
    if ((unint64_t)v2 >= 0x1F)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v2 - 30;
      if ((unint64_t)(v2 - 30) < 0x20
        || (swift_bridgeObjectRelease(), uint64_t v3 = v2 - 61, (unint64_t)(v2 - 61) < 0x20))
      {
        uint64_t v2 = v3;
      }
      else
      {
        swift_bridgeObjectRelease();
        v2 -= 92;
      }
      if ((unint64_t)v2 >= 0x1F)
      {
        swift_bridgeObjectRelease();
        if ((unint64_t)(v2 - 30) < 0x20)
        {
          v2 -= 30;
        }
        else
        {
          swift_bridgeObjectRelease();
          v2 -= 61;
        }
        if ((unint64_t)v2 >= 0x1F)
        {
          swift_bridgeObjectRelease();
          v2 -= 30;
        }
      }
    }
  }
  if (v2 >= 31) {
    uint64_t v2 = 31;
  }
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE280);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v4 + 16) = xmmword_1A96357F0;
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = v2;
  sub_1A9631D90();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return 11565;
}

uint64_t type metadata accessor for DailyStatisticsService()
{
  return self;
}

uint64_t sub_1A95471C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A95471EC()
{
  sub_1A95471C4();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

unint64_t sub_1A9547260()
{
  unint64_t result = qword_1E97EBCF0;
  if (!qword_1E97EBCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBCF0);
  }
  return result;
}

uint64_t static DailyWeatherStatisticsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EBCF8;
  sub_1A9631510();
  return v0;
}

uint64_t static DailyWeatherStatisticsDescriptor.name.setter(uint64_t a1, char *a2)
{
  qword_1E97EBCF8 = a1;
  off_1E97EBD00 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DailyWeatherStatisticsDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A9547384()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E97EBD08 = 0x2E312E302E30;
  qword_1E97EBD10 = 0xE600000000000000;
  return result;
}

uint64_t static DailyWeatherStatisticsDescriptor.version.getter()
{
  if (qword_1E97EA5B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EBD08;
  sub_1A9631510();
  return v0;
}

uint64_t static DailyWeatherStatisticsDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1E97EA5B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1E97EBD08 = a1;
  qword_1E97EBD10 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DailyWeatherStatisticsDescriptor.version.modify())()
{
  if (qword_1E97EA5B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsDescriptor()
{
  return &type metadata for DailyWeatherStatisticsDescriptor;
}

uint64_t EventMessage.language.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t EventMessage.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventMessage.language.modify())(void)
{
  return nullsub_1;
}

uint64_t EventMessage.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A9631510();
  return v1;
}

uint64_t EventMessage.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventMessage.message.modify())(void)
{
  return nullsub_1;
}

WeatherDaemon::EventMessage __swiftcall EventMessage.init(language:message:)(Swift::String_optional language, Swift::String_optional message)
{
  *uint64_t v2 = language;
  v2[1] = message;
  result.message = message;
  result.language = language;
  return result;
}

uint64_t EventMessage.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBD18);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9547818();
  sub_1A9632950();
  if (!v2)
  {
    LOBYTE(v18) = 0;
    sub_1A96325D0();
    uint64_t v11 = v20;
    uint64_t v17 = v21;
    char v22 = 1;
    sub_1A96325D0();
    uint64_t v12 = v18;
    uint64_t v13 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    uint64_t v14 = v17;
    *a2 = v11;
    a2[1] = v14;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9547818()
{
  unint64_t result = qword_1E97EBD20;
  if (!qword_1E97EBD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD20);
  }
  return result;
}

uint64_t sub_1A9547864(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A9547954(char a1)
{
  if (a1) {
    return 0x6567617373656DLL;
  }
  else {
    return 0x65676175676E616CLL;
  }
}

uint64_t sub_1A954798C()
{
  return sub_1A9547954(*v0);
}

uint64_t sub_1A9547994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9547864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95479BC(uint64_t a1)
{
  unint64_t v2 = sub_1A9547818();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95479F8(uint64_t a1)
{
  unint64_t v2 = sub_1A9547818();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventMessage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBD28);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  v12[1] = *(void *)(v1 + 24);
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9547818();
  sub_1A9632970();
  char v14 = 0;
  uint64_t v10 = v12[3];
  sub_1A96326D0();
  if (!v10)
  {
    char v13 = 1;
    sub_1A96326D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1A9547B84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EventMessage.init(from:)(a1, a2);
}

uint64_t sub_1A9547B9C(void *a1)
{
  return EventMessage.encode(to:)(a1);
}

uint64_t sub_1A9547BB4()
{
  return static EventMessage.read(from:)();
}

uint64_t sub_1A9547BCC()
{
  return EventMessage.write(to:)();
}

uint64_t destroy for EventMessage()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EventMessage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

void *assignWithCopy for EventMessage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for EventMessage(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventMessage(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventMessage()
{
  return &type metadata for EventMessage;
}

unsigned char *storeEnumTagSinglePayload for EventMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9547EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventMessage.CodingKeys()
{
  return &type metadata for EventMessage.CodingKeys;
}

unint64_t sub_1A9547EE4()
{
  unint64_t result = qword_1E97EBD30;
  if (!qword_1E97EBD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD30);
  }
  return result;
}

unint64_t sub_1A9547F34()
{
  unint64_t result = qword_1E97EBD38;
  if (!qword_1E97EBD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD38);
  }
  return result;
}

unint64_t sub_1A9547F84()
{
  unint64_t result = qword_1E97EBD40;
  if (!qword_1E97EBD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD40);
  }
  return result;
}

uint64_t DataSet.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    DataSet.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 13) {
      char v9 = 12;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::DataSet_optional __swiftcall DataSet.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t DataSet.rawValue.getter()
{
  unint64_t result = 0x696C617551726961;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x57746E6572727563;
      break;
    case 2:
    case 3:
      unint64_t result = 0x7473616365726F66;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 1937204590;
      break;
    case 6:
      unint64_t result = 0x7365646974;
      break;
    case 7:
      unint64_t result = 0x6D6F43646E657274;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0x4172656874616577;
      break;
    case 0xA:
      unint64_t result = 0x4372656874616577;
      break;
    case 0xB:
      unint64_t result = 0x6369726F74736968;
      break;
    case 0xC:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95482D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950B0E0(*a1, *a2);
}

unint64_t sub_1A95482E0()
{
  unint64_t result = qword_1E97EBD48;
  if (!qword_1E97EBD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD48);
  }
  return result;
}

uint64_t sub_1A954832C()
{
  return sub_1A95C92A4();
}

uint64_t sub_1A9548334(uint64_t a1)
{
  return sub_1A94AC264(a1, *v1);
}

uint64_t sub_1A954833C()
{
  return sub_1A94ADF5C();
}

WeatherDaemon::DataSet_optional sub_1A9548344(Swift::String *a1)
{
  return DataSet.init(rawValue:)(*a1);
}

unint64_t sub_1A9548350@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DataSet.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9548378@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return DataSet.init(from:)(a1, a2);
}

uint64_t sub_1A9548390()
{
  return sub_1A9631FB0();
}

void sub_1A95483E0(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A95483F8()
{
  return DataSet.write(to:)();
}

uint64_t getEnumTagSinglePayload for EventSignificance(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DataSet(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9548564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

unint64_t sub_1A954858C()
{
  unint64_t result = qword_1E97EBD50;
  if (!qword_1E97EBD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD50);
  }
  return result;
}

uint64_t WDSVersion.rawValue.getter()
{
  uint64_t v1 = 0x32762F697061;
  if (*v0 != 1) {
    uint64_t v1 = 13174;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x31762F697061;
  }
}

WeatherDaemon::WDSVersion_optional __swiftcall WDSVersion.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t sub_1A954867C(char *a1, char *a2)
{
  return sub_1A950B728(*a1, *a2);
}

unint64_t sub_1A954868C()
{
  unint64_t result = qword_1E97EBD58;
  if (!qword_1E97EBD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD58);
  }
  return result;
}

uint64_t sub_1A95486D8()
{
  return sub_1A95C92B0();
}

uint64_t sub_1A95486E0(uint64_t a1)
{
  return sub_1A94ACCFC(a1, *v1);
}

uint64_t sub_1A95486E8()
{
  return sub_1A94AD8EC();
}

WeatherDaemon::WDSVersion_optional sub_1A95486F0(Swift::String *a1)
{
  return WDSVersion.init(rawValue:)(*a1);
}

uint64_t sub_1A95486FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WDSVersion.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for WDSVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95487F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSVersion()
{
  return &type metadata for WDSVersion;
}

uint64_t sub_1A9548828()
{
  sub_1A9548DFC();
  sub_1A9631510();
  uint64_t v1 = sub_1A9631F30();
  sub_1A9631E90();
  return v1;
}

uint64_t WDSEndpoint.init(url:)@<X0>(uint64_t a1@<X8>)
{
  sub_1A962E5F0();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_8_17();
  v2();
  uint64_t result = type metadata accessor for WDSEndpoint();
  unsigned int v4 = (void *)(a1 + *(int *)(result + 20));
  *unsigned int v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WDSEndpoint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1A962E5F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    if (!*(void *)v10)
    {
      *(_OWORD *)char v9 = *(_OWORD *)v10;
      return a1;
    }
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)char v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
  }
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *(void *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(v9 + 8);
      *uint64_t v8 = v11;
      v8[1] = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v12 = *(void *)(v9 + 8);
  *uint64_t v8 = v11;
  v8[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t v11 = v9[1];
    *uint64_t v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t assignWithTake for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *v9;
  if (!v10)
  {
    if (v11)
    {
      uint64_t v13 = v9[1];
      *uint64_t v8 = v11;
      v8[1] = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v12 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A9548C34);
}

uint64_t sub_1A9548C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A962E5F0();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A9548CE0);
}

void sub_1A9548CE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1A962E5F0();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
}

unint64_t sub_1A9548D68()
{
  unint64_t result = qword_1E97EBD60;
  if (!qword_1E97EBD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD60);
  }
  return result;
}

uint64_t sub_1A9548DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9548DFC()
{
  unint64_t result = qword_1E97EBD70;
  if (!qword_1E97EBD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WDSEndpoint.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9548F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSEndpoint.Error()
{
  return &type metadata for WDSEndpoint.Error;
}

unint64_t sub_1A9548F50()
{
  unint64_t result = qword_1E97EBD78;
  if (!qword_1E97EBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBD78);
  }
  return result;
}

uint64_t WDSJWTAuthenticatorService.__allocating_init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1A9548FCC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A954BC64);
}

uint64_t WDSJWTAuthenticatorService.init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1A9548FCC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A954BEA8);
}

uint64_t sub_1A9548FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v28 = a7;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v13 = a6 & 1;
  __swift_mutable_project_boxed_opaque_existential_1(a1, v12);
  OUTLINED_FUNCTION_0_1();
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v20 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v19);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v22 + 16))(v7);
  uint64_t v23 = v28(v17, v7, a3, v25, v26, v13, v27, v12, v19, v11, v20);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v23;
}

uint64_t WDSJWTAuthenticatorService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_1A9490C8C(v0 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WDSJWTAuthenticatorService.__deallocating_deinit()
{
  WDSJWTAuthenticatorService.deinit();
  OUTLINED_FUNCTION_1_26();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x1F4186488](v0, v2, v3);
}

uint64_t WDSJWTAuthenticatorService.generateToken(session:url:)()
{
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A96317F0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB6EB630);
  uint64_t v2 = sub_1A96317D0();
  os_log_type_t v3 = sub_1A9632230();
  if (os_log_type_enabled(v2, v3))
  {
    unsigned int v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl(&dword_1A9410000, v2, v3, "About to attempt to generate JWT token request ... requesting bundler identifier", v4, 2u);
    OUTLINED_FUNCTION_3_1();
  }

  uint64_t v5 = self;
  uint64_t v6 = sub_1A9433030(objc_msgSend(v5, sel_mainBundle));
  if (v7)
  {
    uint64_t v8 = v6;
    unint64_t v9 = v7;
    if (sub_1A946A6CC())
    {
      uint64_t v10 = WDSJWTAuthenticatorService.generateToken(for:endpoint:)(v8, v9, v0 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
      swift_bridgeObjectRelease();
      return v10;
    }
    sub_1A9631510();
    uint64_t v16 = sub_1A96317D0();
    os_log_type_t v17 = sub_1A9632220();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      sub_1A9631510();
      uint64_t v23 = sub_1A945C1DC(v8, v9, &v24);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A9410000, v16, v17, "Aborting: bundleIdentifier is not first party. bundleIdentifier=%{public}s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3_1();
      OUTLINED_FUNCTION_3_1();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v19 = sub_1A9433030(objc_msgSend(v5, sel_mainBundle, v23, v24));
    uint64_t v21 = v20;
    sub_1A94AB10C();
    swift_allocError();
    *(void *)uint64_t v22 = v19;
    *(void *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE2A8);
    swift_allocObject();
  }
  else
  {
    uint64_t v12 = sub_1A96317D0();
    os_log_type_t v13 = sub_1A9632220();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A9410000, v12, v13, "Aborting: could not obtain Bundle.main.bundleIdentifier.", v14, 2u);
      OUTLINED_FUNCTION_3_1();
    }

    sub_1A94AB10C();
    swift_allocError();
    *(void *)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    *(unsigned char *)(v15 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE2A8);
    swift_allocObject();
  }
  return sub_1A9631700();
}

uint64_t WDSJWTAuthenticatorService.generateToken(for:endpoint:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_1_26();
  uint64_t v41 = v8;
  uint64_t v9 = type metadata accessor for WDSEndpoint();
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v39 = v10;
  uint64_t v40 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1A962E850();
  OUTLINED_FUNCTION_0_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_6_0();
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v44 = v3;
  uint64_t v14 = sub_1A96317F0();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB6EB630);
  swift_bridgeObjectRetain_n();
  uint64_t v42 = v15;
  uint64_t v16 = sub_1A96317D0();
  os_log_type_t v17 = sub_1A9632230();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v37 = a3;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446210;
    sub_1A9631510();
    uint64_t v20 = sub_1A945C1DC(a1, a2, &v45);
    OUTLINED_FUNCTION_489(v20);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v16, v17, "Starting to generate JWT token request. bundleIdentifier=%{public}s", v19, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    a3 = v37;
    OUTLINED_FUNCTION_3_1();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A962E840();
  uint64_t v21 = sub_1A962E820();
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v43);
  uint64_t v24 = v44;
  uint64_t v25 = sub_1A9549B84();
  unint64_t v27 = v26;
  uint64_t v43 = *(void *)(v24 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_signQueue);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v25;
  v28[3] = v27;
  v28[4] = a1;
  v28[5] = a2;
  sub_1A9442980(v25, v27);
  sub_1A9631510();
  sub_1A9442980(v25, v27);
  sub_1A9631760();
  swift_release();
  uint64_t v29 = v40;
  sub_1A9434270(a3, v40);
  unint64_t v30 = (*(unsigned __int8 *)(v38 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v21;
  v31[3] = v23;
  v31[4] = v25;
  v31[5] = v27;
  sub_1A9434CA8(v29, (uint64_t)v31 + v30);
  sub_1A9631510();
  sub_1A96316D0();
  swift_release();
  swift_release();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v21;
  *(void *)(v32 + 24) = v23;
  char v33 = (void *)sub_1A9631660();
  uint64_t v34 = sub_1A96316F0();
  sub_1A9466028(v25, v27);
  swift_release();
  swift_release();

  return v34;
}

uint64_t sub_1A9549B84()
{
  uint64_t v0 = sub_1A9631DB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1A9632450();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "{\"bundleId\":\"");
  HIWORD(v9[1]) = -4864;
  sub_1A9631EA0();
  sub_1A9631EA0();
  sub_1A9631DA0();
  uint64_t v4 = sub_1A9631D70();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    sub_1A94AB10C();
    swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 2;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1A9549D30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, a3, a4, a5, v9, v10);
}

uint64_t sub_1A9549DC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v53 = a7;
  uint64_t v51 = a5;
  unint64_t v52 = a6;
  uint64_t v11 = sub_1A962E290();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v47 = (char *)&v44 - v16;
  os_log_type_t v17 = *(NSObject **)a1;
  unint64_t v49 = *(void *)(a1 + 8);
  uint64_t v50 = v17;
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A96317F0();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB6EB630);
  swift_bridgeObjectRetain_n();
  uint64_t v48 = v19;
  uint64_t v20 = sub_1A96317D0();
  os_log_type_t v21 = sub_1A9632230();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v44 = a2;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v46 = v11;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v12;
    uint64_t v25 = v24;
    uint64_t v56 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    sub_1A9631510();
    uint64_t v55 = sub_1A945C1DC(a3, a4, &v56);
    a2 = v44;
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v20, v21, "Make new JWT token request. requestIdentifier=%{public}s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v25;
    uint64_t v12 = v45;
    MEMORY[0x1AD0F7300](v26, -1, -1);
    unint64_t v27 = v23;
    uint64_t v11 = v46;
    MEMORY[0x1AD0F7300](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = v54;
  sub_1A954A2A8(v51, v52, v50, v49, v53, a3, a4, (uint64_t)v14);
  if (v28)
  {
    id v29 = v28;
    id v30 = v28;
    uint64_t v31 = sub_1A96317D0();
    os_log_type_t v32 = sub_1A9632220();
    if (os_log_type_enabled(v31, v32))
    {
      char v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v56 = v34;
      *(_DWORD *)char v33 = 136446210;
      uint64_t v55 = (uint64_t)v28;
      id v35 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
      uint64_t v36 = sub_1A9631DC0();
      uint64_t v55 = sub_1A945C1DC(v36, v37, &v56);
      sub_1A9632350();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A9410000, v31, v32, "Cannot make token request. error=%{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v34, -1, -1);
      MEMORY[0x1AD0F7300](v33, -1, -1);
    }
    else
    {
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE2A8);
    swift_allocObject();
    return sub_1A9631700();
  }
  else
  {
    uint64_t v38 = a2;
    uint64_t v39 = v47;
    uint64_t v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v47, v14, v11);
    MEMORY[0x1F4188790](v40);
    *(&v44 - 4) = v38;
    *(&v44 - 3) = (uint64_t)v39;
    *(&v44 - 2) = v41;
    *(&v44 - 1) = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE2A8);
    swift_allocObject();
    uint64_t v42 = sub_1A9631750();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
  }
  return v42;
}

uint64_t sub_1A954A2A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, NSObject *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  unint64_t v86 = a5;
  uint64_t v9 = v8;
  unint64_t v82 = a2;
  uint64_t v83 = a1;
  uint64_t v84 = a8;
  v89[1] = *MEMORY[0x1E4F143B8];
  uint64_t v14 = sub_1A962E5F0();
  uint64_t v85 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v74 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v74 - v21;
  os_log_t v80 = a3;
  v81 = (char *)a4;
  uint64_t v23 = sub_1A962E670();
  unint64_t v25 = v24;
  LOBYTE(v88[0]) = *(unsigned char *)(v9 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_version);
  uint64_t v26 = v87;
  sub_1A945A004(a6, a7, (uint64_t)v88, 0, 0);
  if (v26) {
    return swift_bridgeObjectRelease();
  }
  v76 = v16;
  uint64_t v77 = v23;
  uint64_t v78 = 0;
  uint64_t v79 = v14;
  unint64_t v86 = v25;
  uint64_t v87 = v9;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v28(v19, v22, v14);
  sub_1A962E240();
  sub_1A962E200();
  unint64_t v29 = v82;
  sub_1A9442980(v83, v82);
  sub_1A962E270();
  sub_1A962E280();
  if (sub_1A9566794((uint64_t)v80, (unint64_t)v81))
  {
    swift_bridgeObjectRelease();
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A96317F0();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB6EB630);
    uint64_t v31 = sub_1A96317D0();
    os_log_type_t v32 = sub_1A9632230();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v85;
    if (v33)
    {
      id v35 = v22;
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1A9410000, v31, v32, "Not adding authentication header to token request - Signature is missing", v36, 2u);
      unint64_t v37 = v36;
      uint64_t v22 = v35;
      MEMORY[0x1AD0F7300](v37, -1, -1);
    }

    uint64_t v38 = v87;
    sub_1A962E280();
    uint64_t v39 = v79;
    goto LABEL_28;
  }
  sub_1A9631510();
  sub_1A962E280();
  swift_bridgeObjectRelease();
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1A96317F0();
  __swift_project_value_buffer(v40, (uint64_t)qword_1EB6EB648);
  uint64_t v41 = v76;
  uint64_t v39 = v79;
  v28(v76, v22, v79);
  uint64_t v42 = v83;
  sub_1A9442980(v83, v29);
  sub_1A9442980(v42, v29);
  sub_1A9631510();
  uint64_t v43 = sub_1A96317D0();
  int v44 = sub_1A9632230();
  if (os_log_type_enabled(v43, (os_log_type_t)v44))
  {
    int v75 = v44;
    v81 = v22;
    unint64_t v45 = v29 >> 62;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v89[0] = v74;
    *(_DWORD *)uint64_t v46 = 136446722;
    uint64_t v47 = sub_1A962E540();
    v88[0] = sub_1A945C1DC(v47, v48, v89);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    uint64_t v34 = v85;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v41, v39);
    *(_WORD *)(v46 + 12) = 2082;
    os_log_t v80 = v43;
    switch((int)v45)
    {
      case 1:
        if (v42 >> 32 < (int)v42)
        {
          __break(1u);
LABEL_36:
          __break(1u);
        }
        else
        {
          sub_1A9442980(v42, v82);
          if (!sub_1A962E470() || !__OFSUB__((int)v42, sub_1A962E490()))
          {
            uint64_t v49 = v46;
            sub_1A962E480();
            uint64_t v52 = sub_1A9631E40();
            unint64_t v54 = v61;
            unint64_t v51 = v82;
            uint64_t v50 = v83;
            sub_1A9466028(v83, v82);
LABEL_25:
            uint64_t v39 = v79;
LABEL_26:
            uint64_t v63 = v77;
            v88[0] = sub_1A945C1DC(v52, v54, v89);
            sub_1A9632350();
            swift_bridgeObjectRelease();
            sub_1A9466028(v50, v51);
            sub_1A9466028(v50, v51);
            *(_WORD *)(v49 + 22) = 2082;
            unint64_t v64 = v86;
            sub_1A9631510();
            v88[0] = sub_1A945C1DC(v63, v64, v89);
            sub_1A9632350();
            swift_bridgeObjectRelease_n();
            os_log_t v65 = v80;
            _os_log_impl(&dword_1A9410000, v80, (os_log_type_t)v75, "building url token request. url=%{public}s, message=%{public}s, signature=%{public}s", (uint8_t *)v49, 0x20u);
            uint64_t v66 = v74;
            swift_arrayDestroy();
            MEMORY[0x1AD0F7300](v66, -1, -1);
            MEMORY[0x1AD0F7300](v49, -1, -1);

            uint64_t v22 = v81;
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      case 2:
        uint64_t v57 = v42;
        uint64_t v58 = *(void *)(v42 + 16);
        uint64_t v59 = *(void *)(v42 + 24);
        sub_1A9442980(v57, v82);
        swift_retain();
        swift_retain();
        if (sub_1A962E470() && __OFSUB__(v58, sub_1A962E490())) {
          goto LABEL_38;
        }
        if (__OFSUB__(v59, v58)) {
          goto LABEL_36;
        }
        uint64_t v49 = v46;
        sub_1A962E480();
        uint64_t v50 = v83;
        uint64_t v52 = sub_1A9631E40();
        unint64_t v54 = v62;
        uint64_t v39 = v79;
        swift_release();
        swift_release();
        unint64_t v51 = v82;
        sub_1A9466028(v50, v82);
        goto LABEL_26;
      case 3:
        uint64_t v49 = v46;
        memset(v88, 0, 14);
        uint64_t v52 = sub_1A9631E40();
        unint64_t v54 = v60;
        uint64_t v55 = v42;
        uint64_t v50 = v42;
        unint64_t v51 = v82;
        goto LABEL_24;
      default:
        uint64_t v49 = v46;
        v88[0] = v42;
        uint64_t v50 = v42;
        unint64_t v51 = v82;
        LODWORD(v88[1]) = v82;
        WORD2(v88[1]) = WORD2(v82);
        uint64_t v52 = sub_1A9631E40();
        unint64_t v54 = v53;
        uint64_t v55 = v50;
LABEL_24:
        sub_1A9466028(v55, v51);
        goto LABEL_25;
    }
  }
  unint64_t v56 = v29;
  uint64_t v34 = v85;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v41, v39);
  sub_1A9466028(v42, v56);
  sub_1A9466028(v42, v56);

  swift_bridgeObjectRelease_n();
LABEL_27:
  uint64_t v38 = v87;
LABEL_28:
  if ((*(unsigned char *)(v38 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout + 8) & 1) == 0)
  {
    uint64_t v67 = *(void *)(v38 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout);
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_1A96317F0();
    __swift_project_value_buffer(v68, (uint64_t)qword_1EB6EB630);
    v69 = sub_1A96317D0();
    os_log_type_t v70 = sub_1A9632230();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = v22;
      v72 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v72 = 134217984;
      v88[0] = v67;
      sub_1A9632350();
      _os_log_impl(&dword_1A9410000, v69, v70, "Setting token request timeout time interval to %f", v72, 0xCu);
      v73 = v72;
      uint64_t v22 = v71;
      MEMORY[0x1AD0F7300](v73, -1, -1);
    }

    sub_1A962E210();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v39);
}

uint64_t sub_1A954AC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v20)(void *__return_ptr, uint64_t, void (*)(uint64_t, unint64_t, void *, void *), void *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void v25[3];
  uint64_t v26;
  uint64_t v27;

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = a5 + 2;
  uint64_t v18 = a5[5];
  uint64_t v17 = a5[6];
  __swift_project_boxed_opaque_existential_1(v16, v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = sub_1A954C694;
  v19[7] = v15;
  uint64_t v20 = *(void (**)(void *__return_ptr, uint64_t, void (*)(uint64_t, unint64_t, void *, void *), void *, uint64_t, uint64_t))(v17 + 8);
  swift_retain();
  sub_1A9631510();
  swift_retain();
  v20(v25, a6, sub_1A954C6E4, v19, v18, v17);
  swift_release();
  uint64_t v21 = v26;
  uint64_t v22 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void sub_1A954ADE8(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, unint64_t a6, void (*a7)(void), uint64_t a8, void (*a9)(uint64_t, uint64_t))
{
  uint64_t v15 = sub_1A9631DB0();
  MEMORY[0x1F4188790](v15 - 8);
  if (a4)
  {
    id v16 = a4;
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A96317F0();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB6EB630);
    sub_1A9631510();
    id v18 = a4;
    sub_1A9631510();
    id v19 = a4;
    uint64_t v20 = sub_1A96317D0();
    os_log_type_t v21 = sub_1A9632220();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v82[0] = v23;
      *(_DWORD *)uint64_t v22 = 136446723;
      sub_1A9631510();
      uint64_t v83 = sub_1A945C1DC(a5, a6, v82);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2160;
      uint64_t v83 = 1752392040;
      sub_1A9632350();
      *(_WORD *)(v22 + 22) = 2081;
      uint64_t v83 = (uint64_t)a4;
      id v24 = a4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
      uint64_t v25 = sub_1A9631DC0();
      uint64_t v83 = sub_1A945C1DC(v25, v26, v82);
      sub_1A9632350();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A9410000, v20, v21, "Error while fetching new JWT token. requestIdentifier=%{public}s, error=%{private,mask.hash}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v23, -1, -1);
      MEMORY[0x1AD0F7300](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    sub_1A94AB10C();
    uint64_t v36 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v37 = xmmword_1A963A7C0;
    *(unsigned char *)(v37 + 16) = 2;
    a7();

    uint64_t v38 = a4;
    goto LABEL_24;
  }
  uint64_t v77 = a1;
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1A96317F0();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EB6EB630);
  id v28 = a3;
  swift_bridgeObjectRetain_n();
  id v29 = v28;
  uint64_t v30 = sub_1A96317D0();
  os_log_type_t v79 = sub_1A9632230();
  uint64_t v78 = a5;
  if (os_log_type_enabled(v30, v79))
  {
    unint64_t v75 = a2;
    uint64_t v31 = a5;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v82[0] = v74;
    *(_DWORD *)uint64_t v32 = 136446466;
    sub_1A9631510();
    uint64_t v83 = sub_1A945C1DC(v31, a6, v82);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v83 = (uint64_t)a3;
    id v33 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9C0);
    uint64_t v34 = sub_1A9631DC0();
    uint64_t v83 = sub_1A945C1DC(v34, v35, v82);
    sub_1A9632350();

    a2 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v30, v79, "Got JWT token response. requestIdentifier=%{public}s, response=%{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v74, -1, -1);
    MEMORY[0x1AD0F7300](v32, -1, -1);

    if (!a3) {
      goto LABEL_20;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a3)
    {
LABEL_20:
      swift_bridgeObjectRetain_n();
      unint64_t v53 = sub_1A96317D0();
      os_log_type_t v54 = sub_1A9632220();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        v82[0] = v56;
        *(_DWORD *)uint64_t v55 = 136446210;
        sub_1A9631510();
        uint64_t v83 = sub_1A945C1DC(v78, a6, v82);
        sub_1A9632350();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A9410000, v53, v54, "Invalid JWT Response. requestIdentifier=%{public}s", v55, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0F7300](v56, -1, -1);
        MEMORY[0x1AD0F7300](v55, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1A94AB10C();
      uint64_t v57 = swift_allocError();
      *(void *)uint64_t v58 = 0;
      *(void *)(v58 + 8) = 0;
      *(unsigned char *)(v58 + 16) = 1;
      a7();
      uint64_t v38 = (void *)v57;
LABEL_24:

      return;
    }
  }
  self;
  uint64_t v39 = swift_dynamicCastObjCClass();
  if (!v39) {
    goto LABEL_20;
  }
  uint64_t v40 = v39;
  id v41 = v29;
  if (!NSHTTPURLResponse.isSuccess.getter())
  {
    swift_bridgeObjectRetain_n();
    uint64_t v59 = sub_1A96317D0();
    os_log_type_t v60 = sub_1A9632220();
    if (!os_log_type_enabled(v59, v60))
    {

      swift_bridgeObjectRelease_n();
LABEL_34:
      sub_1A94AB10C();
      v71 = (void *)swift_allocError();
      *(void *)uint64_t v72 = v40;
      *(void *)(v72 + 8) = 0;
      *(unsigned char *)(v72 + 16) = 1;
      id v73 = v41;
      ((void (*)(void *))a7)(v71);

      return;
    }
    unint64_t v61 = (uint8_t *)swift_slowAlloc();
    id v62 = v41;
    uint64_t v63 = swift_slowAlloc();
    v82[0] = v63;
    *(_DWORD *)unint64_t v61 = 136446210;
    sub_1A9631510();
    uint64_t v83 = sub_1A945C1DC(v78, a6, v82);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v59, v60, "JWT Response not successful. requestIdentifier=%{public}s", v61, 0xCu);
    swift_arrayDestroy();
    uint64_t v64 = v63;
    id v41 = v62;
    MEMORY[0x1AD0F7300](v64, -1, -1);
    uint64_t v65 = (uint64_t)v61;
    goto LABEL_31;
  }
  if (a2 >> 60 == 15)
  {
LABEL_29:
    sub_1A9631510();
    sub_1A954C714(v77, a2);
    sub_1A9631510();
    sub_1A954C714(v77, a2);
    uint64_t v59 = sub_1A96317D0();
    os_log_type_t v66 = sub_1A9632220();
    if (!os_log_type_enabled(v59, v66))
    {
      swift_bridgeObjectRelease_n();
      sub_1A9490CE8(v77, a2);
      sub_1A9490CE8(v77, a2);
      goto LABEL_33;
    }
    uint64_t v67 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v83 = v68;
    *(_DWORD *)uint64_t v67 = 136446466;
    sub_1A9631510();
    v82[0] = sub_1A945C1DC(v78, a6, &v83);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v67 + 12) = 2082;
    v82[0] = v77;
    v82[1] = a2;
    sub_1A954C714(v77, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBD80);
    uint64_t v69 = sub_1A9631DC0();
    v82[0] = sub_1A945C1DC(v69, v70, &v83);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    sub_1A9490CE8(v77, a2);
    sub_1A9490CE8(v77, a2);
    _os_log_impl(&dword_1A9410000, v59, v66, "JWT Token not found. requestIdentifier=%{public}s, data=%{public}s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v68, -1, -1);
    uint64_t v65 = v67;
LABEL_31:
    MEMORY[0x1AD0F7300](v65, -1, -1);
LABEL_33:

    goto LABEL_34;
  }
  sub_1A9442980(v77, a2);
  sub_1A9631DA0();
  uint64_t v42 = sub_1A9631D80();
  if (!v43)
  {
    sub_1A9490CE8(v77, a2);
    goto LABEL_29;
  }
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  unint64_t v76 = a2;
  uint64_t v46 = a9;
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_1A96317D0();
  os_log_type_t v48 = sub_1A9632230();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    id v80 = v41;
    uint64_t v50 = swift_slowAlloc();
    v82[0] = v50;
    *(_DWORD *)uint64_t v49 = 136446210;
    sub_1A9631510();
    uint64_t v83 = sub_1A945C1DC(v78, a6, v82);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v47, v48, "Successfully generated JWT Token. requestIdentifier=%{public}s", v49, 0xCu);
    swift_arrayDestroy();
    uint64_t v51 = v50;
    id v41 = v80;
    MEMORY[0x1AD0F7300](v51, -1, -1);
    uint64_t v52 = v49;
    uint64_t v46 = a9;
    MEMORY[0x1AD0F7300](v52, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v46(v44, v45);
  swift_bridgeObjectRelease();
  sub_1A9490CE8(v77, v76);
}

void sub_1A954B9AC(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A96317F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB6EB630);
  sub_1A9631510();
  id v7 = a1;
  sub_1A9631510();
  id v8 = a1;
  oslog = sub_1A96317D0();
  os_log_type_t v9 = sub_1A9632220();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 136446723;
    sub_1A9631510();
    sub_1A945C1DC(a2, a3, &v16);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2160;
    sub_1A9632350();
    *(_WORD *)(v10 + 22) = 2081;
    id v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
    uint64_t v13 = sub_1A9631DC0();
    sub_1A945C1DC(v13, v14, &v16);
    sub_1A9632350();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A9410000, oslog, v9, "Error while creating local signature. requestIdentifier=%{public}s, error=%{private,mask.hash}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v11, -1, -1);
    MEMORY[0x1AD0F7300](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A954BC3C()
{
  return WDSJWTAuthenticatorService.generateToken(session:url:)();
}

uint64_t sub_1A954BC64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v33 = a4;
  uint64_t v34 = a5;
  uint64_t v30 = a11;
  uint64_t v31 = a10;
  uint64_t v32 = a3;
  uint64_t v13 = *(void *)(a9 - 8);
  int v14 = a6 & 1;
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v19);
  os_log_type_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v29 - v24;
  (*(void (**)(char *, __n128))(v18 + 32))((char *)&v29 - v24, v23);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v25, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a9);
  uint64_t v27 = sub_1A954BEA8((uint64_t)v21, (uint64_t)v16, v32, v33, v34, v14, v26, a8, a9, v31, v30);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, a9);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v25, a8);
  return v27;
}

uint64_t sub_1A954BEA8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v32 = a6;
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  uint64_t v27 = a2;
  id v28 = a4;
  uint64_t v26 = a11;
  uint64_t v29 = sub_1A9632290();
  uint64_t v14 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A9632270();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = sub_1A9631BA0();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v38 = a8;
  uint64_t v39 = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  uint64_t v35 = a9;
  uint64_t v36 = v26;
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v20, v27, a9);
  LODWORD(v28) = *v28;
  os_log_type_t v21 = (void *)(a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_httpHeaderMescalAuthenticationKey);
  *os_log_type_t v21 = 0xD000000000000017;
  v21[1] = 0x80000001A9645AF0;
  uint64_t v22 = OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_signQueue;
  sub_1A9453728();
  sub_1A9631B70();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1A953E8D0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DF2E0);
  sub_1A953E920();
  sub_1A96323D0();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCC58], v29);
  *(void *)(a7 + v22) = sub_1A96322A0();
  sub_1A9435A70(&v37, a7 + 16);
  sub_1A9435A70(&v34, a7 + 56);
  sub_1A9434CA8(v30, a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
  *(unsigned char *)(a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_version) = (_BYTE)v28;
  uint64_t v23 = a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout;
  *(void *)uint64_t v23 = v31;
  *(unsigned char *)(v23 + 8) = v32 & 1;
  return a7;
}

uint64_t sub_1A954C1E4()
{
  sub_1A9466028(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A954C224(void *a1)
{
  return sub_1A9549D30(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A954C244()
{
  uint64_t v1 = (int *)(type metadata accessor for WDSEndpoint() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  sub_1A9466028(*(void *)(v0 + 32), *(void *)(v0 + 40));
  uint64_t v5 = sub_1A962E5F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + v1[7])) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1A954C348(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WDSEndpoint() - 8);
  return sub_1A9549DC4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), v2 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1A954C3CC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A954C404(void *a1)
{
  sub_1A954B9AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceType.generateToken(session:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A954C420()
{
  return type metadata accessor for WDSJWTAuthenticatorService();
}

uint64_t method lookup function for WDSJWTAuthenticatorService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSJWTAuthenticatorService);
}

uint64_t dispatch thunk of WDSJWTAuthenticatorService.__allocating_init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 136))(a1, a2, a3, a4, a5, a6 & 1);
}

id sub_1A954C45C(id result, id a2, char a3)
{
  if (a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)sub_1A9631510();
  }
  return result;
}

void destroy for WDSJWTAuthenticatorService.Errors(uint64_t a1)
{
}

uint64_t _s13WeatherDaemon26WDSJWTAuthenticatorServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A954C45C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for WDSJWTAuthenticatorService.Errors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A954C45C(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  id v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A948B5A0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for WDSJWTAuthenticatorService.Errors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A948B5A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSJWTAuthenticatorService.Errors(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSJWTAuthenticatorService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A954C610(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A954C628(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WDSJWTAuthenticatorService.Errors()
{
  return &type metadata for WDSJWTAuthenticatorService.Errors;
}

uint64_t sub_1A954C650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A954AC88(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_1A954C65C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A954C694(uint64_t a1, uint64_t a2)
{
  return sub_1A956051C(a1, a2, *(uint64_t (**)(void *))(v2 + 16));
}

uint64_t sub_1A954C69C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1A954C6E4(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_1A954ADE8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void (**)(void))(v4 + 32), *(void *)(v4 + 40), *(void (**)(uint64_t, uint64_t))(v4 + 48));
}

uint64_t sub_1A954C714(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A9442980(a1, a2);
  }
  return a1;
}

uint64_t String.isFirstPartyProcess.getter()
{
  return sub_1A946A6CC();
}

uint64_t String.isWeatherProcess.getter()
{
  return OUTLINED_FUNCTION_1_27();
}

uint64_t String.isNanoWeatherProcess.getter()
{
  return OUTLINED_FUNCTION_1_27();
}

uint64_t String.isWeatherWidgetProcess.getter(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001A9647800) {
    return 1;
  }
  else {
    return OUTLINED_FUNCTION_0_23();
  }
}

uint64_t String.isWeatherAppProcess.getter(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A96467A0) {
    return 1;
  }
  else {
    return OUTLINED_FUNCTION_0_23();
  }
}

uint64_t CacheEntity.TimeValid.description.getter()
{
  return 0;
}

uint64_t static CacheEntity.tableName.getter()
{
  return sub_1A96318C0();
}

uint64_t static CacheEntity.version.getter()
{
  return sub_1A96318D0();
}

uint64_t CacheEntity.id.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.modified.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.expires.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.model.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.diagnosticsModel.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v3 = OUTLINED_FUNCTION_2_0(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16();
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v39 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_28();
  uint64_t v12 = v10 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v17 = OUTLINED_FUNCTION_2_0(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_28();
  uint64_t v20 = v18 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v25 = OUTLINED_FUNCTION_2_0(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_28();
  uint64_t v28 = v26 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v39 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v32);
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_15_11();
  uint64_t v39 = sub_1A9631990();
  sub_1A962E800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_13_13();
  long long v34 = *(void (**)(void))(v33 + 104);
  OUTLINED_FUNCTION_22_6();
  v34();
  OUTLINED_FUNCTION_20_4((uint64_t)v23, 0);
  sub_1A962E800();
  OUTLINED_FUNCTION_22_6();
  v34();
  OUTLINED_FUNCTION_20_4(v20, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v35 = OUTLINED_FUNCTION_8_18();
  OUTLINED_FUNCTION_20_4((uint64_t)v23, 1);
  OUTLINED_FUNCTION_20_4(v20, 1);
  swift_allocObject();
  uint64_t v36 = OUTLINED_FUNCTION_8_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  OUTLINED_FUNCTION_5_0((uint64_t)v15);
  OUTLINED_FUNCTION_5_0(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_2_23();
  uint64_t v37 = sub_1A9631990();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_0((uint64_t)v7);
  OUTLINED_FUNCTION_5_0(v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_2_23();
  uint64_t result = sub_1A9631990();
  *a1 = v39;
  a1[1] = v35;
  a1[2] = v36;
  a1[3] = v37;
  a1[4] = result;
  return result;
}

uint64_t sub_1A954CCD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465696669646F6DLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x73657269707865 && a2 == 0xE700000000000000;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9647820)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_1A96327D0();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_1A954CEC8(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465696669646F6DLL;
      break;
    case 2:
      unint64_t result = 0x73657269707865;
      break;
    case 3:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1A954CF6C(char *a1, char *a2)
{
  return sub_1A9471368(*a1, *a2);
}

uint64_t sub_1A954CFB0()
{
  return sub_1A9471568();
}

uint64_t sub_1A954CFC8()
{
  return sub_1A9471378();
}

uint64_t sub_1A954D000()
{
  return sub_1A9632930();
}

unint64_t sub_1A954D058()
{
  return sub_1A954CEC8(*v0);
}

uint64_t sub_1A954D070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A954CCD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A954D0B8()
{
  return sub_1A94715B0();
}

uint64_t sub_1A954D0E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1A954D124(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A954D178(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t CacheEntity.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v27 = *(_OWORD *)(a2 + 16);
  long long v28 = v5;
  long long v29 = *(_OWORD *)(a2 + 48);
  uint64_t v30 = v4;
  type metadata accessor for CacheEntity.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_1A9632790();
  OUTLINED_FUNCTION_1();
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v12 = *v2;
  uint64_t v11 = v2[1];
  uint64_t v23 = v2[2];
  uint64_t v24 = v11;
  uint64_t v13 = v2[3];
  uint64_t v21 = v2[4];
  uint64_t v22 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = v6;
  sub_1A9632970();
  *(void *)&long long v27 = v12;
  char v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  sub_1A9459F18(&qword_1E97EBD88, &qword_1EB6DE238);
  uint64_t v15 = v26;
  sub_1A9632770();
  if (v15)
  {
    OUTLINED_FUNCTION_34();
    return v16();
  }
  else
  {
    uint64_t v19 = v22;
    uint64_t v18 = v23;
    uint64_t v20 = v25;
    *(void *)&long long v27 = v24;
    char v31 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
    sub_1A9459F18(&qword_1E97EBD90, &qword_1EB6DE230);
    OUTLINED_FUNCTION_7_20();
    *(void *)&long long v27 = v18;
    char v31 = 2;
    OUTLINED_FUNCTION_7_20();
    *(void *)&long long v27 = v19;
    char v31 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
    sub_1A9459F18(&qword_1E97EBD98, &qword_1EB6DCA30);
    OUTLINED_FUNCTION_4_21();
    *(void *)&long long v27 = v21;
    char v31 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
    sub_1A9459F18(&qword_1E97EBDA0, &qword_1EB6DD970);
    OUTLINED_FUNCTION_4_21();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v14);
  }
}

uint64_t type metadata accessor for CacheEntity.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t CacheEntity.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v61 = (void *)a1;
  v54[0] = a9;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v68 = a8;
  uint64_t v58 = type metadata accessor for CacheEntity.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1A96326B0();
  OUTLINED_FUNCTION_1();
  v54[1] = v10;
  v54[2] = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)v54 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v13 = OUTLINED_FUNCTION_2_0(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_16();
  uint64_t v56 = v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (uint64_t)v54 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v18 = OUTLINED_FUNCTION_2_0(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_28();
  uint64_t v21 = v19 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v54 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v26 = OUTLINED_FUNCTION_2_0(v25);
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_28();
  uint64_t v29 = v27 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v54 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v34 = OUTLINED_FUNCTION_2_0(v33);
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_28();
  uint64_t v37 = v35 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)v54 - v39;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v40, 1, 1, v41);
  __swift_storeEnumTagSinglePayload(v37, 1, 1, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_15_11();
  v54[6] = sub_1A9631990();
  sub_1A962E800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_13_13();
  uint64_t v43 = *(void (**)(void))(v42 + 104);
  OUTLINED_FUNCTION_18_8();
  v43();
  OUTLINED_FUNCTION_20_4((uint64_t)v32, 0);
  sub_1A962E800();
  OUTLINED_FUNCTION_18_8();
  v43();
  uint64_t v44 = v61;
  OUTLINED_FUNCTION_20_4(v29, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  v54[5] = OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_20_4((uint64_t)v32, 1);
  OUTLINED_FUNCTION_20_4(v29, 1);
  swift_allocObject();
  v54[3] = OUTLINED_FUNCTION_9_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  OUTLINED_FUNCTION_5_0((uint64_t)v24);
  OUTLINED_FUNCTION_5_0(v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_2_23();
  v54[4] = sub_1A9631990();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_0(v55);
  OUTLINED_FUNCTION_5_0(v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_2_23();
  uint64_t v56 = sub_1A9631990();
  __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  uint64_t v45 = v60;
  sub_1A9632950();
  if (v45)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    char v69 = 0;
    sub_1A9459F18(&qword_1E97EBDA8, &qword_1EB6DE238);
    OUTLINED_FUNCTION_12_14();
    sub_1A9632680();
    uint64_t v47 = v62;
    swift_retain();
    swift_release();
    char v69 = 1;
    sub_1A9459F18(&qword_1E97EBDB0, &qword_1EB6DE230);
    OUTLINED_FUNCTION_11_15();
    sub_1A9632680();
    uint64_t v48 = v62;
    swift_retain();
    swift_release();
    char v69 = 2;
    OUTLINED_FUNCTION_11_15();
    sub_1A9632680();
    uint64_t v49 = v62;
    swift_retain();
    swift_release();
    char v69 = 3;
    sub_1A9459F18(&qword_1E97EBDB8, &qword_1EB6DCA30);
    OUTLINED_FUNCTION_12_14();
    sub_1A9632680();
    uint64_t v50 = v62;
    swift_retain();
    swift_release();
    char v69 = 4;
    sub_1A9459F18(qword_1E97EBDC0, &qword_1EB6DD970);
    OUTLINED_FUNCTION_12_14();
    sub_1A9632680();
    OUTLINED_FUNCTION_34();
    v51();
    uint64_t v52 = v62;
    swift_retain();
    swift_release();
    unint64_t v53 = (void *)v54[0];
    *(void *)v54[0] = v47;
    v53[1] = v48;
    v53[2] = v49;
    v53[3] = v50;
    v53[4] = v52;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A954DC64()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DC80()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DCA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DCBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DCD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DCF4()
{
  return static CacheEntity.tableName.getter();
}

uint64_t sub_1A954DD04()
{
  return static CacheEntity.version.getter();
}

uint64_t sub_1A954DD14()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954DD30(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4C8](a1, WitnessTable);
}

uint64_t sub_1A954DD94(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4D8](a1, WitnessTable);
}

uint64_t sub_1A954DDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4D0](a1, a2, a3, WitnessTable);
}

uint64_t sub_1A954DE78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return CacheEntity.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3);
}

uint64_t sub_1A954DEA4(void *a1, uint64_t a2)
{
  return CacheEntity.encode(to:)(a1, a2);
}

uint64_t sub_1A954DEBC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4F0](a1, a2, WitnessTable);
}

uint64_t sub_1A954DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4E8](a1, a2, a3, WitnessTable);
}

uint64_t sub_1A954DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1A954E004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1A954E00C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_1A954E060(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1A954E0D0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A954E178(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_1A954E1E0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A954E220(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CacheEntity()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A954E280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1A954E288(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A954E2C8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A954E30C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A954E314(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for CacheEntity.TimeValid()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1A954E334(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A954E400);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1A954E428()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954E444()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A954E460()
{
  return swift_getWitnessTable();
}

uint64_t DailySummary.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A94306CC(v1, a1, (void (*)(void))type metadata accessor for Metadata);
}

uint64_t DailySummary.days.getter()
{
  type metadata accessor for DailySummary();
  return sub_1A9631510();
}

uint64_t static DailySummary.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!static Metadata.== infix(_:_:)(a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for DailySummary() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);
  return sub_1A947ADE4(v5, v6);
}

uint64_t sub_1A954E544(uint64_t a1)
{
  unint64_t v2 = sub_1A954E774();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A954E580(uint64_t a1)
{
  unint64_t v2 = sub_1A954E774();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DailySummary.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBEC8);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A954E774();
  sub_1A9632970();
  type metadata accessor for Metadata();
  sub_1A954ECCC(&qword_1EB6DCA10, (void (*)(uint64_t))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_9();
  if (!v1)
  {
    type metadata accessor for DailySummary();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBED8);
    sub_1A954EAE4(&qword_1E97EBEE0, (void (*)(void))sub_1A954E7C0);
    OUTLINED_FUNCTION_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A954E774()
{
  unint64_t result = qword_1E97EBED0;
  if (!qword_1E97EBED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBED0);
  }
  return result;
}

unint64_t sub_1A954E7C0()
{
  unint64_t result = qword_1E97EBEE8;
  if (!qword_1E97EBEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBEE8);
  }
  return result;
}

uint64_t DailySummary.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBEF0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = type metadata accessor for DailySummary();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A954E774();
  sub_1A9632950();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1A954ECCC(&qword_1EB6DCA18, (void (*)(uint64_t))type metadata accessor for Metadata);
  sub_1A9632680();
  sub_1A943C990(v17, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBED8);
  sub_1A954EAE4(&qword_1E97EBEF8, (void (*)(void))sub_1A954EB54);
  sub_1A9632680();
  uint64_t v13 = OUTLINED_FUNCTION_6_2();
  v14(v13);
  *(void *)(v12 + *(int *)(v8 + 20)) = v18;
  sub_1A94306CC(v12, a2, (void (*)(void))type metadata accessor for DailySummary);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A954EBA0(v12, (void (*)(void))type metadata accessor for DailySummary);
}

uint64_t sub_1A954EAE4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97EBED8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A954EB54()
{
  unint64_t result = qword_1E97EBF00;
  if (!qword_1E97EBF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF00);
  }
  return result;
}

uint64_t sub_1A954EBA0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1A954EBF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DailySummary.init(from:)(a1, a2);
}

uint64_t sub_1A954EC10(void *a1)
{
  return DailySummary.encode(to:)(a1);
}

uint64_t sub_1A954EC2C()
{
  return static DailySummary.read(from:)();
}

void sub_1A954EC44()
{
}

uint64_t sub_1A954EC5C()
{
  return MEMORY[0x1E4FB5B78];
}

uint64_t sub_1A954EC68()
{
  return MEMORY[0x1E4FB5B70];
}

uint64_t sub_1A954EC74(uint64_t a1)
{
  uint64_t result = sub_1A954ECCC(&qword_1E97EB148, (void (*)(uint64_t))type metadata accessor for DailySummary);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A954ECCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DailySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A954ED28);
}

uint64_t sub_1A954ED28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DailySummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A954EDC8);
}

void sub_1A954EDC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

unsigned char *storeEnumTagSinglePayload for DailySummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A954EF1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailySummary.CodingKeys()
{
  return &type metadata for DailySummary.CodingKeys;
}

unint64_t sub_1A954EF58()
{
  unint64_t result = qword_1E97EBF08;
  if (!qword_1E97EBF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF08);
  }
  return result;
}

unint64_t sub_1A954EFA8()
{
  unint64_t result = qword_1E97EBF10;
  if (!qword_1E97EBF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF10);
  }
  return result;
}

unint64_t sub_1A954EFF8()
{
  unint64_t result = qword_1E97EBF18;
  if (!qword_1E97EBF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF18);
  }
  return result;
}

WeatherDaemon::ChangeDirection_optional __swiftcall ChangeDirection.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ChangeDirection.rawValue.getter()
{
  uint64_t result = 0x65676E6168436F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6516329;
      break;
    case 2:
      uint64_t result = 6514020;
      break;
    case 3:
      uint64_t result = 0x796461657473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A954F120(unsigned __int8 *a1, char *a2)
{
  return sub_1A950B8D0(*a1, *a2);
}

unint64_t sub_1A954F130()
{
  unint64_t result = qword_1E97EBF20;
  if (!qword_1E97EBF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF20);
  }
  return result;
}

uint64_t sub_1A954F17C()
{
  return sub_1A95C92BC(*v0);
}

uint64_t sub_1A954F184()
{
  return sub_1A94AC844();
}

uint64_t sub_1A954F18C()
{
  return sub_1A94ADC54();
}

WeatherDaemon::ChangeDirection_optional sub_1A954F194(Swift::String *a1)
{
  return ChangeDirection.init(rawValue:)(*a1);
}

uint64_t sub_1A954F1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ChangeDirection.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A954F1C8()
{
  return sub_1A9632000();
}

uint64_t sub_1A954F228()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A954F278@<X0>(unsigned char *a1@<X8>)
{
  return static ChangeDirection.read(from:)(a1);
}

uint64_t sub_1A954F290()
{
  return ChangeDirection.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for ChangeDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A954F374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeDirection()
{
  return &type metadata for ChangeDirection;
}

unint64_t sub_1A954F3AC()
{
  unint64_t result = qword_1EB6DB3F8;
  if (!qword_1EB6DB3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB3F8);
  }
  return result;
}

uint64_t WeatherAvailabilityCaching.hash(into:)()
{
  return sub_1A9632910();
}

BOOL static WeatherAvailabilityCaching.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WeatherAvailabilityCaching.hashValue.getter()
{
  return sub_1A9632930();
}

unint64_t sub_1A954F490()
{
  unint64_t result = qword_1E97EBF28;
  if (!qword_1E97EBF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherAvailabilityCaching(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A954F5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1A954F5D4()
{
  swift_retain();
  sub_1A96315F0();
  swift_release();
  return v1;
}

uint64_t sub_1A954F618@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A954F808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return CLLocationCoordinate2D.cacheKey.getter();
  }
  uint64_t v5 = CLLocationCoordinate2D.cacheKey.getter();
  sub_1A9631EA0();
  sub_1A9631EA0();
  sub_1A9631EA0();
  sub_1A95CC4C0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A954F89C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A9631860();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB6DA588 != -1) {
    swift_once();
  }
  uint64_t v46 = a1;
  uint64_t v12 = sub_1A96317F0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB6EB560);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A96317D0();
  os_log_type_t v14 = sub_1A9632230();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v43 = v3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v53 = v17;
    *(_DWORD *)uint64_t v16 = 141558275;
    uint64_t v48 = 1752392040;
    sub_1A9632350();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1A9631510();
    uint64_t v48 = sub_1A945C1DC(v46, a2, &v53);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v13, v14, "Attempting to retrieve availableDataSets from cache; identifier=%{private,mask.hash}s",
      (uint8_t *)v16,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v17, -1, -1);
    MEMORY[0x1AD0F7300](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = sub_1A954F5D4();
  if (!v18)
  {
    uint64_t v22 = sub_1A96317D0();
    os_log_type_t v23 = sub_1A9632220();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1A9410000, v22, v23, "Cannot retrieve cached availableDataSets due to missing store", v24, 2u);
      MEMORY[0x1AD0F7300](v24, -1, -1);
    }

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = v18;
  sub_1A9631960();
  uint64_t v56 = MEMORY[0x1E4FBB1A0];
  uint64_t v57 = MEMORY[0x1E4FAA778];
  uint64_t v20 = v46;
  uint64_t v53 = v46;
  unint64_t v54 = a2;
  sub_1A9631510();
  sub_1A96318F0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  uint64_t v21 = sub_1A96319F0();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v21);
  sub_1A9631930();
  uint64_t v43 = v19;
  swift_release();
  sub_1A9551220((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
  uint64_t v25 = v48;
  if (!v48)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v36 = sub_1A96317D0();
    os_log_type_t v37 = sub_1A9632230();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = v20;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v53 = v40;
      *(_DWORD *)uint64_t v38 = 141558275;
      uint64_t v48 = 1752392040;
      sub_1A9632350();
      *(_WORD *)(v38 + 12) = 2081;
      sub_1A9631510();
      uint64_t v48 = sub_1A945C1DC(v39, a2, &v53);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A9410000, v36, v37, "Could not find availableDataSets data in cache; identifier=%{private,mask.hash}s",
        (uint8_t *)v38,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v40, -1, -1);
      MEMORY[0x1AD0F7300](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_20;
  }
  uint64_t v27 = v49;
  uint64_t v26 = v50;
  uint64_t v29 = v51;
  uint64_t v28 = v52;
  uint64_t v53 = v48;
  unint64_t v54 = v49;
  uint64_t v55 = v50;
  uint64_t v56 = v51;
  uint64_t v57 = v52;
  sub_1A95DCDFC();
  if (!v30)
  {
    sub_1A948A95C(v25);
LABEL_20:
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v31 = v30;
  v42[0] = v25;
  v42[1] = v27;
  v42[2] = v26;
  uint64_t v44 = v29;
  uint64_t v45 = v28;
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_1A96317D0();
  os_log_type_t v33 = sub_1A9632230();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v48 = v35;
    *(_DWORD *)uint64_t v34 = 141558275;
    uint64_t v47 = 1752392040;
    sub_1A9632350();
    *(_WORD *)(v34 + 12) = 2081;
    sub_1A9631510();
    uint64_t v47 = sub_1A945C1DC(v20, a2, &v48);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v32, v33, "Successfully retrieved availableDataSets from cache; identifier=%{private,mask.hash}s",
      (uint8_t *)v34,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v35, -1, -1);
    MEMORY[0x1AD0F7300](v34, -1, -1);
    sub_1A948A95C(v42[0]);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A948A95C(v42[0]);

    swift_release();
  }
  return v31;
}

uint64_t sub_1A9550144(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1A94577A0(a2, a3 & 1, a4, a5);
}

uint64_t sub_1A955018C@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v6 = *a1;
  if (a2) {
    sub_1A95501E4(*a1, a3, a4);
  }
  *a5 = v6;
  return sub_1A9631510();
}

void sub_1A95501E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  if (sub_1A954F5D4())
  {
    sub_1A9631510();
    sub_1A9631510();
    sub_1A962E7F0();
    sub_1A962E760();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1A95CD4A8();
    long long v28 = v25;
    long long v29 = v26;
    uint64_t v30 = v27;
    sub_1A9631950();
    long long v25 = v28;
    long long v26 = v29;
    uint64_t v27 = v30;
    sub_1A9631920();
    swift_release();
    if (qword_1EB6DA588 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A96317F0();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB6EB560);
    sub_1A9631510();
    sub_1A948A8F8((uint64_t)&v28);
    sub_1A9631510();
    sub_1A948A8F8((uint64_t)&v28);
    uint64_t v15 = sub_1A96317D0();
    os_log_type_t v16 = sub_1A9632230();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v24[0] = v18;
      *(_DWORD *)uint64_t v17 = 141558531;
      *(void *)&long long v25 = 1752392040;
      sub_1A9632350();
      *(_WORD *)(v17 + 12) = 2081;
      sub_1A9631510();
      *(void *)&long long v25 = sub_1A945C1DC(a2, a3, v24);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 22) = 2080;
      uint64_t v19 = sub_1A948A8F8((uint64_t)&v28);
      sub_1A95D6120(&v25, v19);
      sub_1A948A894((uint64_t)&v28);
      uint64_t v20 = sub_1A95D62D4(v25, BYTE8(v25));
      *(void *)&long long v25 = sub_1A945C1DC(v20, v21, v24);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      sub_1A948A894((uint64_t)&v28);
      sub_1A948A894((uint64_t)&v28);
      _os_log_impl(&dword_1A9410000, v15, v16, "Just cached availableDataSets; identifier=%{private,mask.hash}s. It's valid for another %s",
        (uint8_t *)v17,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v18, -1, -1);
      MEMORY[0x1AD0F7300](v17, -1, -1);

      sub_1A948A894((uint64_t)&v28);
    }
    else
    {
      sub_1A948A894((uint64_t)&v28);
      swift_bridgeObjectRelease_n();
      sub_1A948A894((uint64_t)&v28);
      sub_1A948A894((uint64_t)&v28);
    }
    sub_1A9550878();
    swift_release();
  }
  else
  {
    if (qword_1EB6DA588 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A96317F0();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB6EB560);
    os_log_t v23 = (os_log_t)sub_1A96317D0();
    os_log_type_t v11 = sub_1A9632220();
    if (os_log_type_enabled(v23, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A9410000, v23, v11, "Cannot cache availableDataSets due to missing store", v12, 2u);
      MEMORY[0x1AD0F7300](v12, -1, -1);
    }
    os_log_t v13 = v23;
  }
}

void sub_1A9550878()
{
  uint64_t v0 = sub_1A962E810();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  uint64_t v4 = sub_1A9631860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A954F5D4())
  {
    sub_1A9631980();
    v17[3] = v0;
    v17[4] = MEMORY[0x1E4FAA600];
    __swift_allocate_boxed_opaque_existential_1(v17);
    sub_1A962E7F0();
    sub_1A962E770();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A9631910();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    sub_1A96319E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1EB6DA588 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A96317F0();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB6EB560);
    os_log_t v13 = sub_1A96317D0();
    os_log_type_t v14 = sub_1A9632230();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1A9410000, v13, v14, "Purged expired availableDataSets", v15, 2u);
      MEMORY[0x1AD0F7300](v15, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    if (qword_1EB6DA588 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB6EB560);
    os_log_t v16 = (os_log_t)sub_1A96317D0();
    os_log_type_t v9 = sub_1A9632220();
    if (os_log_type_enabled(v16, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A9410000, v16, v9, "Cannot purge expired availableDataSets due to missing store", v10, 2u);
      MEMORY[0x1AD0F7300](v10, -1, -1);
    }
    os_log_t v11 = v16;
  }
}

void sub_1A9550E08()
{
  if (sub_1A954F5D4())
  {
    sub_1A9631980();
    sub_1A96319D0();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1EB6DA588 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_1A96317F0();
    __swift_project_value_buffer(v0, (uint64_t)qword_1EB6EB560);
    oslog = sub_1A96317D0();
    os_log_type_t v1 = sub_1A9632220();
    if (os_log_type_enabled(oslog, v1))
    {
      uint64_t v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v2 = 0;
      _os_log_impl(&dword_1A9410000, oslog, v1, "Cannot purge availableDataSets due to missing store", v2, 2u);
      MEMORY[0x1AD0F7300](v2, -1, -1);
    }
  }
}

uint64_t sub_1A9551154()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return MEMORY[0x1F4186488](v0, 72, 7);
}

uint64_t sub_1A9551194()
{
  return sub_1A9550144(*(void *)(v0 + 16), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1A95511C8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A9551200@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A955018C(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1A9551220(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LocationInfo.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A943F20C(v1, a1);
}

uint64_t LocationInfo.metadata.setter(uint64_t a1)
{
  return sub_1A947A5CC(a1, v1);
}

uint64_t (*LocationInfo.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.primaryName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t LocationInfo.primaryName.setter()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t result = OUTLINED_FUNCTION_32_0();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LocationInfo.primaryName.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.secondaryName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t LocationInfo.secondaryName.setter()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t result = OUTLINED_FUNCTION_32_0();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LocationInfo.secondaryName.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.preciseName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t LocationInfo.preciseName.setter()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t result = OUTLINED_FUNCTION_32_0();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LocationInfo.preciseName.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.countryCode.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t LocationInfo.countryCode.setter()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t result = OUTLINED_FUNCTION_32_0();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LocationInfo.countryCode.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.timeZone.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t LocationInfo.timeZone.setter()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t result = OUTLINED_FUNCTION_32_0();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*LocationInfo.timeZone.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAF28);
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9551948();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A9553248(&qword_1EB6DCA18, (void (*)(uint64_t))type metadata accessor for Metadata);
    sub_1A9632680();
    LOBYTE(v35) = 1;
    uint64_t v14 = sub_1A9632640();
    uint64_t v16 = v15;
    uint64_t v27 = v14;
    uint64_t v28 = v7;
    LOBYTE(v33) = 2;
    OUTLINED_FUNCTION_10_13();
    sub_1A96325D0();
    LOBYTE(v31) = 3;
    OUTLINED_FUNCTION_10_13();
    sub_1A96325D0();
    sub_1A96325D0();
    uint64_t v18 = sub_1A9632640();
    uint64_t v26 = v19;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v30);
    uint64_t v20 = (int *)type metadata accessor for LocationInfo();
    unint64_t v21 = (void *)(a2 + v20[6]);
    uint64_t v22 = (void *)(a2 + v20[7]);
    os_log_t v23 = (void *)(a2 + v20[8]);
    sub_1A943C990(v28, a2);
    uint64_t v24 = (uint64_t *)(a2 + v20[5]);
    *uint64_t v24 = v27;
    v24[1] = v16;
    *unint64_t v21 = v35;
    v21[1] = v36;
    *uint64_t v22 = v33;
    v22[1] = v34;
    *os_log_t v23 = v31;
    v23[1] = v32;
    long long v25 = (uint64_t *)(a2 + v20[9]);
    *long long v25 = v18;
    v25[1] = v26;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9551948()
{
  unint64_t result = qword_1EB6DAEB0;
  if (!qword_1EB6DAEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAEB0);
  }
  return result;
}

uint64_t sub_1A9551994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4E7972616D697270 && a2 == 0xEB00000000656D61;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7261646E6F636573 && a2 == 0xED0000656D614E79;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x4E65736963657270 && a2 == 0xEB00000000656D61;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1A96327D0();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A9551C50()
{
  return 6;
}

uint64_t sub_1A9551C58(char a1)
{
  uint64_t result = 0x617461646174656DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4E7972616D697270;
      break;
    case 2:
      uint64_t result = 0x7261646E6F636573;
      break;
    case 3:
      uint64_t result = 0x4E65736963657270;
      break;
    case 4:
      uint64_t result = 0x437972746E756F63;
      break;
    case 5:
      uint64_t result = 0x656E6F5A656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9551D3C()
{
  return sub_1A9551C58(*v0);
}

uint64_t sub_1A9551D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9551994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9551D6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9551C50();
  *a1 = result;
  return result;
}

uint64_t sub_1A9551D94(uint64_t a1)
{
  unint64_t v2 = sub_1A9551948();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9551DD0(uint64_t a1)
{
  unint64_t v2 = sub_1A9551948();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LocationInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA790);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9551948();
  sub_1A9632970();
  type metadata accessor for Metadata();
  sub_1A9553248(&qword_1EB6DCA10, (void (*)(uint64_t))type metadata accessor for Metadata);
  sub_1A9632770();
  if (!v1)
  {
    uint64_t v10 = (int *)type metadata accessor for LocationInfo();
    OUTLINED_FUNCTION_8_19(v10[5]);
    sub_1A9632730();
    OUTLINED_FUNCTION_8_19(v10[6]);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_8_19(v10[7]);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_8_19(v10[8]);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_8_19(v10[9]);
    sub_1A9632730();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1A9552020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LocationInfo.init(from:)(a1, a2);
}

uint64_t sub_1A9552038(void *a1)
{
  return LocationInfo.encode(to:)(a1);
}

void sub_1A9552050()
{
}

void sub_1A9552068()
{
}

uint64_t LocationInfo.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA618);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A963B0E0;
  *(void *)(inited + 32) = 0x4E7972616D697270;
  *(void *)(inited + 40) = 0xEB00000000656D61;
  uint64_t v4 = (int *)type metadata accessor for LocationInfo();
  uint64_t v5 = v4;
  uint64_t v6 = (void *)(v1 + v4[5]);
  uint64_t v7 = v6[1];
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = *v6;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 72) = v8;
  strcpy((char *)(inited + 80), "secondaryName");
  *(_WORD *)(inited + 94) = -4864;
  uint64_t v9 = (uint64_t *)(v1 + v4[6]);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t v12 = 7104878;
  if (v11)
  {
    unint64_t v13 = v11;
  }
  else
  {
    uint64_t v10 = 7104878;
    unint64_t v13 = 0xE300000000000000;
  }
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0x4E65736963657270;
  *(void *)(inited + 136) = 0xEB00000000656D61;
  uint64_t v14 = (uint64_t *)(v1 + v4[7]);
  unint64_t v15 = v14[1];
  if (v15) {
    uint64_t v16 = *v14;
  }
  else {
    uint64_t v16 = 7104878;
  }
  if (v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE300000000000000;
  }
  *(void *)(inited + 144) = v16;
  *(void *)(inited + 152) = v17;
  *(void *)(inited + 168) = v8;
  *(void *)(inited + 176) = 0x437972746E756F63;
  *(void *)(inited + 184) = 0xEB0000000065646FLL;
  uint64_t v18 = (uint64_t *)(v1 + v5[8]);
  if (v18[1])
  {
    uint64_t v12 = *v18;
    unint64_t v19 = v18[1];
  }
  else
  {
    unint64_t v19 = 0xE300000000000000;
  }
  *(void *)(inited + 192) = v12;
  *(void *)(inited + 200) = v19;
  *(void *)(inited + 216) = v8;
  *(void *)(inited + 224) = 0x656E6F5A656D6974;
  *(void *)(inited + 232) = 0xE800000000000000;
  uint64_t v20 = (uint64_t *)(v1 + v5[9]);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  *(void *)(inited + 264) = v8;
  *(void *)(inited + 240) = v21;
  *(void *)(inited + 248) = v22;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631CC0();
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA5E0);
  a1[4] = sub_1A95522B0();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1A9631500();
}

unint64_t sub_1A95522B0()
{
  unint64_t result = qword_1EB6DA5D8;
  if (!qword_1EB6DA5D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DA5E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA5D8);
  }
  return result;
}

uint64_t sub_1A9552304()
{
  return sub_1A9553248(&qword_1EB6DA600, (void (*)(uint64_t))type metadata accessor for LocationInfo);
}

uint64_t sub_1A9552350(uint64_t a1)
{
  uint64_t v2 = sub_1A9553248(&qword_1EB6DA5F8, (void (*)(uint64_t))type metadata accessor for LocationInfo);
  return MEMORY[0x1F415E228](a1, v2);
}

char *initializeBufferWithCopyOfBuffer for LocationInfo(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    uint64_t v10 = v9[6];
    unint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
    uint64_t v15 = v9[10];
    uint64_t v16 = &a1[v15];
    unint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v9[11];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v9[12];
    uint64_t v24 = &a1[v23];
    long long v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    uint64_t v27 = v9[15];
    uint64_t v28 = &a1[v27];
    long long v29 = &a2[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = a3[5];
    uint64_t v32 = a3[6];
    uint64_t v33 = &a1[v31];
    uint64_t v34 = &a2[v31];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = &a1[v32];
    os_log_type_t v37 = &a2[v32];
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = a3[7];
    uint64_t v40 = a3[8];
    uint64_t v41 = &a1[v39];
    uint64_t v42 = &a2[v39];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = &a1[v40];
    uint64_t v45 = &a2[v40];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    uint64_t v47 = a3[9];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
  }
  return a1;
}

char *assignWithCopy for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v5);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  unint64_t v11 = &a2[v9];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v5);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v11, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
LABEL_7:
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  uint64_t v15 = v8[10];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v18 = v8[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v21 = v8[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  uint64_t v24 = v8[15];
  long long v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)long long v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[5];
  uint64_t v28 = &a1[v27];
  long long v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[6];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[7];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[8];
  os_log_type_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)os_log_type_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[9];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  unint64_t v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  uint64_t v13 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v5);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  unint64_t v11 = &a2[v9];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v5);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v11, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
LABEL_7:
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  uint64_t v15 = v8[10];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v8[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v8[12];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (uint64_t *)&a2[v25];
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  uint64_t v30 = v8[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (uint64_t *)&a2[v30];
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[5];
  uint64_t v36 = &a1[v35];
  os_log_type_t v37 = (uint64_t *)&a2[v35];
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[6];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = (uint64_t *)&a2[v40];
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[7];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = (uint64_t *)&a2[v45];
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *(void *)uint64_t v46 = v49;
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[8];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = (uint64_t *)&a2[v50];
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *(void *)uint64_t v51 = v54;
  *((void *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[9];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = (uint64_t *)&a2[v55];
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *(void *)uint64_t v56 = v59;
  *((void *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9552EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_1A9552F40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t getEnumTagSinglePayload for LocationInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocationInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9553120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationInfo.CodingKeys()
{
  return &type metadata for LocationInfo.CodingKeys;
}

unint64_t sub_1A955315C()
{
  unint64_t result = qword_1E97EBF30;
  if (!qword_1E97EBF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF30);
  }
  return result;
}

unint64_t sub_1A95531AC()
{
  unint64_t result = qword_1EB6DAEC0;
  if (!qword_1EB6DAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAEC0);
  }
  return result;
}

unint64_t sub_1A95531FC()
{
  unint64_t result = qword_1EB6DAEB8;
  if (!qword_1EB6DAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAEB8);
  }
  return result;
}

uint64_t sub_1A9553248(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t InterpolationElement.init(value:date:)@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  *a2 = a3;
  unsigned int v4 = (char *)a2 + *(int *)(type metadata accessor for InterpolationElement() + 20);
  uint64_t v5 = sub_1A962E810();
  unsigned int v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(v4, a1, v5);
}

uint64_t type metadata accessor for InterpolationElement()
{
  uint64_t result = qword_1EB6DA278;
  if (!qword_1EB6DA278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double InterpolationElement.value.getter()
{
  return *(double *)v0;
}

uint64_t InterpolationElement.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterpolationElement() + 20);
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for InterpolationElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1A962E810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for InterpolationElement(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1A962E810();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for InterpolationElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for InterpolationElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *initializeWithTake for InterpolationElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for InterpolationElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolationElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A9553710);
}

uint64_t sub_1A9553710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1A962E810();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for InterpolationElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A9553770);
}

uint64_t sub_1A9553770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1A962E810();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t sub_1A95537C0()
{
  uint64_t result = sub_1A962E810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t WeatherRequestLocationOptions.decimalPrecision.getter()
{
  return *(void *)v0;
}

uint64_t WeatherRequestLocationOptions.limitsPrecision.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1A9553870(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001A9647880 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72507374696D696CLL && a2 == 0xEF6E6F6973696365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A9553980(char a1)
{
  if (a1) {
    return 0x72507374696D696CLL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1A95539C8()
{
  return sub_1A9553980(*v0);
}

uint64_t sub_1A95539D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9553870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95539F8(uint64_t a1)
{
  unint64_t v2 = sub_1A9553BC0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9553A34(uint64_t a1)
{
  unint64_t v2 = sub_1A9553BC0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherRequestLocationOptions.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBF38);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9553BC0();
  sub_1A9632970();
  char v14 = 0;
  uint64_t v9 = v11[1];
  sub_1A9632710();
  if (!v9)
  {
    char v13 = 1;
    sub_1A96326E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A9553BC0()
{
  unint64_t result = qword_1E97EBF40;
  if (!qword_1E97EBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF40);
  }
  return result;
}

uint64_t WeatherRequestLocationOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBF48);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9553BC0();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v6 = sub_1A9632620();
    char v8 = v7;
    char v9 = sub_1A9632600();
    uint64_t v10 = OUTLINED_FUNCTION_1_11();
    v11(v10);
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = v8 & 1;
    *(unsigned char *)(a2 + 9) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A9553D70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestLocationOptions.init(from:)(a1, a2);
}

uint64_t sub_1A9553D88(void *a1)
{
  return WeatherRequestLocationOptions.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestLocationOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9553E6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestLocationOptions.CodingKeys()
{
  return &type metadata for WeatherRequestLocationOptions.CodingKeys;
}

unint64_t sub_1A9553EA8()
{
  unint64_t result = qword_1E97EBF50;
  if (!qword_1E97EBF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF50);
  }
  return result;
}

unint64_t sub_1A9553EF8()
{
  unint64_t result = qword_1E97EBF58;
  if (!qword_1E97EBF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF58);
  }
  return result;
}

unint64_t sub_1A9553F48()
{
  unint64_t result = qword_1E97EBF60;
  if (!qword_1E97EBF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF60);
  }
  return result;
}

uint64_t static TideEventsUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EBF68;
  sub_1A9631510();
  return v0;
}

uint64_t static TideEventsUnavailableDescriptor.name.setter(uint64_t a1, char *a2)
{
  qword_1E97EBF68 = a1;
  off_1E97EBF70 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TideEventsUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A955406C()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD2F0 = 0x2E312E312E30;
  qword_1EB6DD2F8 = 0xE600000000000000;
  return result;
}

uint64_t static TideEventsUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD300 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD2F0;
  sub_1A9631510();
  return v0;
}

uint64_t static TideEventsUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD300 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD2F0 = a1;
  qword_1EB6DD2F8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TideEventsUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD300 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for TideEventsUnavailableDescriptor()
{
  return &type metadata for TideEventsUnavailableDescriptor;
}

uint64_t MarineHourForecast.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A962E810();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MarineHourForecast.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A962E810();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*MarineHourForecast.date.modify())(void)
{
  return nullsub_1;
}

double MarineHourForecast.primarySwell.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarineHourForecast() + 20);
  double result = *(double *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MarineHourForecast()
{
  uint64_t result = qword_1E97EBFA0;
  if (!qword_1E97EBFA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 MarineHourForecast.primarySwell.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for MarineHourForecast() + 20));
  __n128 result = v5;
  *uint64_t v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*MarineHourForecast.primarySwell.modify())(void)
{
  return nullsub_1;
}

double MarineHourForecast.waterTemperature.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for MarineHourForecast() + 24));
}

uint64_t MarineHourForecast.waterTemperature.setter(double a1)
{
  uint64_t result = type metadata accessor for MarineHourForecast();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MarineHourForecast.waterTemperature.modify())(void)
{
  return nullsub_1;
}

uint64_t MarineHourForecast.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBF78);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955478C();
  sub_1A9632950();
  if (!v2)
  {
    LOBYTE(v20) = 0;
    sub_1A947198C(&qword_1EB6DC8D8);
    sub_1A9632680();
    sub_1A95547D8();
    sub_1A9632680();
    sub_1A9632660();
    uint64_t v13 = v12;
    uint64_t v14 = OUTLINED_FUNCTION_2_24();
    v15(v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(a2, v9, v4);
    uint64_t v16 = type metadata accessor for MarineHourForecast();
    unint64_t v17 = (void *)(a2 + *(int *)(v16 + 20));
    *unint64_t v17 = v20;
    v17[1] = v21;
    v17[2] = v22;
    *(void *)(a2 + *(int *)(v16 + 24)) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A955478C()
{
  unint64_t result = qword_1E97EBF80;
  if (!qword_1E97EBF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF80);
  }
  return result;
}

unint64_t sub_1A95547D8()
{
  unint64_t result = qword_1E97EBF88;
  if (!qword_1E97EBF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF88);
  }
  return result;
}

uint64_t MarineHourForecast.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBF90);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955478C();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632770();
  if (!v1)
  {
    type metadata accessor for MarineHourForecast();
    sub_1A95549E8();
    sub_1A9632770();
    sub_1A9632750();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A95549E8()
{
  unint64_t result = qword_1E97EBF98;
  if (!qword_1E97EBF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBF98);
  }
  return result;
}

uint64_t sub_1A9554A34()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A9554A84(char a1)
{
  if (!a1) {
    return 1702125924;
  }
  if (a1 == 1) {
    return 0x537972616D697270;
  }
  return 0xD000000000000010;
}

uint64_t sub_1A9554AE0(char *a1, char *a2)
{
  return sub_1A950B24C(*a1, *a2);
}

uint64_t sub_1A9554AEC()
{
  return sub_1A95C92D4();
}

uint64_t sub_1A9554AF4(uint64_t a1)
{
  return sub_1A94AC364(a1, *v1);
}

uint64_t sub_1A9554AFC()
{
  return sub_1A94ADDC4();
}

uint64_t sub_1A9554B04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9554A34();
  *a1 = result;
  return result;
}

uint64_t sub_1A9554B34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9554A84(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9554B60()
{
  return sub_1A9554A84(*v0);
}

uint64_t sub_1A9554B68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9554A80();
  *a1 = result;
  return result;
}

uint64_t sub_1A9554B90(uint64_t a1)
{
  unint64_t v2 = sub_1A955478C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9554BCC(uint64_t a1)
{
  unint64_t v2 = sub_1A955478C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A9554C08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MarineHourForecast.init(from:)(a1, a2);
}

uint64_t sub_1A9554C20(void *a1)
{
  return MarineHourForecast.encode(to:)(a1);
}

BOOL static MarineHourForecast.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1A962E7C0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for MarineHourForecast();
  uint64_t v5 = *(int *)(v4 + 20);
  double v6 = *(double *)(a1 + v5);
  double v7 = *(double *)(a1 + v5 + 8);
  double v8 = *(double *)(a1 + v5 + 16);
  uint64_t v9 = (double *)(a2 + v5);
  BOOL v10 = v6 == *v9 && v7 == v9[1];
  return v10 && v8 == v9[2] && *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
}

uint64_t *initializeBufferWithCopyOfBuffer for MarineHourForecast(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    BOOL v10 = (char *)a1 + v8;
    unint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)BOOL v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t initializeWithCopy for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithCopy for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A955500C);
}

uint64_t sub_1A955500C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A9555068);
}

uint64_t sub_1A9555068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1A95550B4()
{
  uint64_t result = sub_1A962E810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MarineHourForecast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9555224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarineHourForecast.CodingKeys()
{
  return &type metadata for MarineHourForecast.CodingKeys;
}

unint64_t sub_1A9555260()
{
  unint64_t result = qword_1E97EBFB0;
  if (!qword_1E97EBFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBFB0);
  }
  return result;
}

unint64_t sub_1A95552B0()
{
  unint64_t result = qword_1E97EBFB8;
  if (!qword_1E97EBFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBFB8);
  }
  return result;
}

unint64_t sub_1A9555300()
{
  unint64_t result = qword_1E97EBFC0;
  if (!qword_1E97EBFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBFC0);
  }
  return result;
}

uint64_t sub_1A955534C(uint64_t a1)
{
  uint64_t result = sub_1A95553E0(&qword_1EB6DADA8);
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlertResource()
{
  return &type metadata for WeatherAlertResource;
}

_UNKNOWN **sub_1A95553A0()
{
  return &off_1EFFCCC70;
}

uint64_t sub_1A95553AC()
{
  return sub_1A95553E0(&qword_1E97EBFD8);
}

uint64_t sub_1A95553E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherAlert();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A9555424(uint64_t a1)
{
  return sub_1A9555460(a1, &qword_1EB6DA7F8);
}

id static NSOperationQueue.notifications.getter()
{
  return sub_1A953E884(&qword_1EB6DA800, (void **)&qword_1EB6DA7F8);
}

id sub_1A9555454(uint64_t a1)
{
  return sub_1A9555460(a1, &qword_1EB6DA7E8);
}

id sub_1A9555460(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  objc_msgSend(v3, sel_setMaxConcurrentOperationCount_, 1);
  if (qword_1EB6DAB98 != -1) {
    swift_once();
  }
  id result = objc_msgSend(v3, sel_setUnderlyingQueue_, qword_1EB6DAB90);
  *a2 = v3;
  return result;
}

id static NSOperationQueue.cloudChannels.getter()
{
  return sub_1A953E884(&qword_1EB6DA7F0, (void **)&qword_1EB6DA7E8);
}

uint64_t WDSNetworkActivity.domain.getter()
{
  return *(void *)v0;
}

uint64_t WDSNetworkActivity.label.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t WDSNetworkActivity.parentToken.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WDSNetworkActivity() + 24);
  return sub_1A9470134(v3, a1);
}

uint64_t sub_1A9555570(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F54746E65726170 && a2 == 0xEB000000006E656BLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A95556C8(char a1)
{
  if (!a1) {
    return 0x6E69616D6F64;
  }
  if (a1 == 1) {
    return 0x6C6562616CLL;
  }
  return 0x6F54746E65726170;
}

uint64_t sub_1A9555720()
{
  return sub_1A95556C8(*v0);
}

uint64_t sub_1A9555728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9555570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9555750(uint64_t a1)
{
  unint64_t v2 = sub_1A955595C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A955578C(uint64_t a1)
{
  unint64_t v2 = sub_1A955595C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WDSNetworkActivity.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBFE0);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955595C();
  sub_1A9632970();
  sub_1A9632760();
  if (!v1)
  {
    sub_1A9632760();
    type metadata accessor for WDSNetworkActivity();
    sub_1A962E850();
    sub_1A9555C28(&qword_1EB6DAF80);
    sub_1A9632720();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1A955595C()
{
  unint64_t result = qword_1E97EBFE8;
  if (!qword_1E97EBFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBFE8);
  }
  return result;
}

uint64_t WDSNetworkActivity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EBFF0);
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for WDSNetworkActivity();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = (uint64_t *)(v15 - v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955595C();
  sub_1A9632950();
  if (!v2)
  {
    *uint64_t v16 = sub_1A9632670();
    v16[1] = sub_1A9632670();
    sub_1A962E850();
    sub_1A9555C28(&qword_1EB6DAF88);
    sub_1A9632630();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v12, v20);
    sub_1A947019C(v7, (uint64_t)v16 + *(int *)(v13 + 24));
    sub_1A9555C6C((uint64_t)v16, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A9555C28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A962E850();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9555C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WDSNetworkActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9555CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WDSNetworkActivity.init(from:)(a1, a2);
}

uint64_t sub_1A9555CE8(void *a1)
{
  return WDSNetworkActivity.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WDSNetworkActivity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1A962E850();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for WDSNetworkActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1A962E850();
  uint64_t result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

_OWORD *initializeWithCopy for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E850();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithCopy for WDSNetworkActivity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E850();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  int v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E850();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_OWORD *assignWithTake for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A962E850();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  int v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1A955632C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_1A955637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

unsigned char *storeEnumTagSinglePayload for WDSNetworkActivity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A955649CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSNetworkActivity.CodingKeys()
{
  return &type metadata for WDSNetworkActivity.CodingKeys;
}

unint64_t sub_1A95564D8()
{
  unint64_t result = qword_1E97EBFF8;
  if (!qword_1E97EBFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EBFF8);
  }
  return result;
}

unint64_t sub_1A9556528()
{
  unint64_t result = qword_1E97EC000;
  if (!qword_1E97EC000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC000);
  }
  return result;
}

unint64_t sub_1A9556578()
{
  unint64_t result = qword_1E97EC008[0];
  if (!qword_1E97EC008[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E97EC008);
  }
  return result;
}

uint64_t sub_1A95565C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD370);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9556624(double a1, double a2)
{
  uint64_t v3 = *v2;
  if (*v2)
  {
    if (*(void *)(v3 + 16) != 4) {
      return 0;
    }
    BOOL v4 = *(double *)(v3 + 32) > a2 || *(double *)(v3 + 48) < a2;
    BOOL v5 = v4 || *(double *)(v3 + 40) > a1;
    if (v5 || *(double *)(v3 + 56) < a1) {
      return 0;
    }
  }
  uint64_t v7 = v2[1];
  if (!v7) {
    return 0;
  }
  else {
    return Array<A>.contains(_:)(v7);
  }
}

BOOL static GeoJSON.Polygon.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = a4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A9632330();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_1();
  uint64_t v45 = v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v42 - v15;
  OUTLINED_FUNCTION_0_1();
  uint64_t v47 = v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v42 - v25;
  uint64_t v27 = *a2;
  if (*a1)
  {
    if (!v27 || !sub_1A947A7C0(*a1, v27)) {
      return 0;
    }
  }
  else if (v27)
  {
    return 0;
  }
  uint64_t v28 = (void *)a1[1];
  uint64_t v29 = (void *)a2[1];
  if (v28)
  {
    if (!v29 || (sub_1A947A82C(v28, v29) & 1) == 0) {
      return 0;
    }
  }
  else if (v29)
  {
    return 0;
  }
  uint64_t v42 = v8;
  type metadata accessor for GeoJSON.Polygon();
  uint64_t v43 = TupleTypeMetadata2;
  uint64_t v30 = *(void (**)(void))(v47 + 16);
  OUTLINED_FUNCTION_2_25();
  v30();
  uint64_t v31 = v30;
  uint64_t v32 = v43;
  OUTLINED_FUNCTION_2_25();
  v31();
  uint64_t v33 = (uint64_t)&v16[*(int *)(v32 + 48)];
  OUTLINED_FUNCTION_2_25();
  v31();
  OUTLINED_FUNCTION_2_25();
  v31();
  OUTLINED_FUNCTION_6_3((uint64_t)v16);
  if (v35)
  {
    uint64_t v34 = *(void (**)(void))(v47 + 8);
    OUTLINED_FUNCTION_5_27();
    v34();
    OUTLINED_FUNCTION_5_27();
    v34();
    OUTLINED_FUNCTION_6_3(v33);
    if (v35)
    {
      OUTLINED_FUNCTION_5_27();
      v34();
      return 1;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_2_25();
  v31();
  OUTLINED_FUNCTION_6_3(v33);
  if (v35)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v47 + 8);
    v36(v23, v11);
    v36(v26, v11);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v20, a3);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v32);
    return 0;
  }
  uint64_t v37 = v42;
  uint64_t v38 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v44, v33, a3);
  LODWORD(v46) = sub_1A9631D30();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
  v39(v38, a3);
  uint64_t v40 = *(void (**)(void))(v47 + 8);
  OUTLINED_FUNCTION_4_13();
  v40();
  OUTLINED_FUNCTION_4_13();
  v40();
  v39(v20, a3);
  OUTLINED_FUNCTION_4_13();
  v40();
  return (v46 & 1) != 0;
}

uint64_t type metadata accessor for GeoJSON.Polygon()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t GeoJSON.Polygon.boundingBox.getter()
{
  return sub_1A9631510();
}

uint64_t GeoJSON.Polygon.coordinates.getter()
{
  return sub_1A9631510();
}

uint64_t GeoJSON.Polygon.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1A9632330();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t GeoJSON.Polygon.init(boundingBox:coordinates:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for GeoJSON.Polygon() + 40);
  uint64_t v6 = sub_1A9632330();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t sub_1A9556B70()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A9556BC0(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 2020565602;
      break;
    case 2:
      uint64_t result = 0x616E6964726F6F63;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9556C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9556CC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A9556D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9556DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9556E10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9556B70();
  *a1 = result;
  return result;
}

uint64_t sub_1A9556E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9556BC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9556E78()
{
  return sub_1A9556C4C(*v0);
}

uint64_t sub_1A9556E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1A9556BBC(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A9556EB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A9556F08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t GeoJSON.Polygon.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v27 = a3;
  sub_1A9632330();
  OUTLINED_FUNCTION_0_1();
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v30 = a2;
  _s7PolygonV10CodingKeysOMa();
  swift_getWitnessTable();
  sub_1A96326B0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v28 = v13;
  uint64_t v29 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v31 = v15;
  uint64_t v16 = (uint64_t)a1;
  uint64_t v17 = v32;
  sub_1A9632950();
  if (!v17)
  {
    uint64_t v32 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
    char v34 = 1;
    sub_1A9500AC8(&qword_1E97EB738);
    OUTLINED_FUNCTION_7_21();
    OUTLINED_FUNCTION_6_22();
    uint64_t v24 = a1;
    uint64_t v18 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB748);
    char v34 = 2;
    uint64_t v33 = sub_1A9500C34(&qword_1E97EB750, &qword_1E97EB738);
    swift_getWitnessTable();
    OUTLINED_FUNCTION_7_21();
    OUTLINED_FUNCTION_6_22();
    uint64_t v23 = v35;
    LOBYTE(v35) = 3;
    sub_1A9632630();
    uint64_t v16 = (uint64_t)v24;
    uint64_t v19 = OUTLINED_FUNCTION_1_29();
    v20(v19);
    uint64_t v21 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v32, v11, v25);
    GeoJSON.Polygon.init(boundingBox:coordinates:properties:)(v18, v23, v21, v27);
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t _s7PolygonV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t GeoJSON.Polygon.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v14[1] = *(void *)(a2 + 24);
  v14[2] = v4;
  _s7PolygonV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v5 = sub_1A9632790();
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9632970();
  LOBYTE(v18) = 0;
  uint64_t v11 = v16;
  sub_1A9632730();
  if (!v11)
  {
    uint64_t v12 = v15;
    uint64_t v18 = *v15;
    char v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
    sub_1A9500AC8(&qword_1E97EB760);
    OUTLINED_FUNCTION_2_13();
    uint64_t v18 = v12[1];
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB748);
    sub_1A9500BA0();
    OUTLINED_FUNCTION_2_13();
    LOBYTE(v18) = 3;
    sub_1A9632720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1A9557500@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return GeoJSON.Polygon.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_1A9557520(void *a1, uint64_t a2)
{
  return GeoJSON.Polygon.encode(to:)(a1, a2);
}

BOOL sub_1A9557538(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static GeoJSON.Polygon.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1A9557544()
{
  uint64_t result = sub_1A9632330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A95575E0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  int v11 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v12 = v10 + ((v9 + 16) & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_28:
      if (v7 > 0x7FFFFFFE)
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9, v6, v4);
        if (EnumTagSinglePayload >= 2) {
          return EnumTagSinglePayload - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v18 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_28;
  }
LABEL_20:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v12 | v17) + 1;
}

void sub_1A95577B8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  size_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v14;
  }
  size_t v15 = v13 + v14;
  char v16 = 8 * (v13 + v14);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        int v6 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v19 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v22 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v15] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v21;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1A9557AC4);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v10 > 0x7FFFFFFE)
        {
          uint64_t v23 = (unsigned char *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12);
          if (v10 >= a2)
          {
            uint64_t v27 = a2 + 1;
            unint64_t v28 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
            __swift_storeEnumTagSinglePayload(v28, v27, v9, v7);
          }
          else
          {
            if (v14 <= 3) {
              int v24 = ~(-1 << (8 * v14));
            }
            else {
              int v24 = -1;
            }
            if (v14)
            {
              int v25 = v24 & (~v10 + a2);
              if (v14 <= 3) {
                int v26 = v14;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v14);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  *uint64_t v23 = v25;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)a1 = a2;
        }
      }
      return;
  }
}

unsigned char *sub_1A9557AFC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9557BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1A9557BF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A9557C0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A9557C28()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsResource()
{
  return &type metadata for DailyWeatherStatisticsResource;
}

_UNKNOWN **sub_1A9557C54()
{
  return &off_1EFFC85E0;
}

unint64_t sub_1A9557C64()
{
  unint64_t result = qword_1E97EC120;
  if (!qword_1E97EC120)
  {
    type metadata accessor for DailyWeatherStatistics();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC120);
  }
  return result;
}

void WeatherInterpolationOptions.Stride.timeInterval.getter()
{
  if (*((unsigned char *)v0 + 8) != 1 && (unsigned __int128)(*v0 * (__int128)60) >> 64 != (60 * *v0) >> 63) {
    __break(1u);
  }
}

uint64_t WeatherInterpolationOptions.Stride.description.getter()
{
  uint64_t v1 = sub_1A96327B0();
  sub_1A9631EA0();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherInterpolationOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A962E360();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA620) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
    }
    else
    {
      uint64_t v11 = sub_1A962E810();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for WeatherInterpolationOptions(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = sub_1A962E360();
  }
  else {
    uint64_t v2 = sub_1A962E810();
  }
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A962E360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA620) + 48);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    *(void *)uint64_t v6 = *(void *)v7;
    *(unsigned char *)(v6 + 8) = *(unsigned char *)(v7 + 8);
  }
  else
  {
    uint64_t v8 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A9558194(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1A962E360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA620) + 48);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      char v8 = *(unsigned char *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(unsigned char *)(v6 + 8) = v8;
    }
    else
    {
      uint64_t v9 = sub_1A962E810();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A9558194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherInterpolationOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A962E360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA620) + 48);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    *(void *)uint64_t v6 = *(void *)v7;
    *(unsigned char *)(v6 + 8) = *(unsigned char *)(v7 + 8);
  }
  else
  {
    uint64_t v8 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A9558194(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1A962E360();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA620) + 48);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      *(void *)uint64_t v6 = *(void *)v7;
      *(unsigned char *)(v6 + 8) = *(unsigned char *)(v7 + 8);
    }
    else
    {
      uint64_t v8 = sub_1A962E810();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherInterpolationOptions.Stride(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherInterpolationOptions.Stride(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A9558484(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherInterpolationOptions.Stride()
{
  return &type metadata for WeatherInterpolationOptions.Stride;
}

uint64_t MarineForecast.hours.getter()
{
  return sub_1A9631510();
}

uint64_t MarineForecast.hours.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MarineForecast.hours.modify())(void)
{
  return nullsub_1;
}

uint64_t MarineForecast.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarineForecast() + 20);
  return sub_1A943F20C(v3, a1);
}

uint64_t MarineForecast.metadata.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MarineForecast() + 20);
  return sub_1A947A5CC(a1, v3);
}

uint64_t (*MarineForecast.metadata.modify())(void)
{
  return nullsub_1;
}

__n128 MarineForecast.closestWaterLocation.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + *(int *)(type metadata accessor for MarineForecast() + 24));
  *a1 = result;
  return result;
}

uint64_t MarineForecast.closestWaterLocation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = type metadata accessor for MarineForecast();
  uint64_t v5 = (void *)(v1 + *(int *)(result + 24));
  *uint64_t v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*MarineForecast.closestWaterLocation.modify())(void)
{
  return nullsub_1;
}

BOOL static MarineForecast.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if (!sub_1A947ABCC(*a1, *a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for MarineForecast();
  if (!static Metadata.== infix(_:_:)((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  double v6 = *(double *)((char *)a1 + v5);
  double v7 = *(double *)((char *)a1 + v5 + 8);
  uint64_t v8 = (double *)((char *)a2 + v5);
  double v9 = v8[1];
  BOOL v10 = v6 == *v8;
  return v7 == v9 && v10;
}

uint64_t MarineForecast.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC128);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95589D0();
  sub_1A9632950();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC138);
    sub_1A9558C48(&qword_1E97EC140, &qword_1E97EC148);
    sub_1A96325D0();
    if (v16) {
      uint64_t v9 = v16;
    }
    else {
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v16) = 1;
    sub_1A9558CDC(&qword_1EB6DCA18, (void (*)(uint64_t))type metadata accessor for Metadata);
    sub_1A9632680();
    sub_1A947C09C();
    sub_1A9632680();
    uint64_t v10 = OUTLINED_FUNCTION_1_30();
    v11(v10);
    *a2 = v9;
    uint64_t v12 = type metadata accessor for MarineForecast();
    sub_1A943C990(v7, (uint64_t)a2 + *(int *)(v12 + 20));
    uint64_t v13 = (void *)((char *)a2 + *(int *)(v12 + 24));
    *uint64_t v13 = v16;
    v13[1] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95589D0()
{
  unint64_t result = qword_1E97EC130;
  if (!qword_1E97EC130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC130);
  }
  return result;
}

uint64_t MarineForecast.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC150);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95589D0();
  sub_1A9632970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC138);
  sub_1A9558C48(&qword_1E97EC158, &qword_1E97EC160);
  sub_1A9632770();
  if (!v1)
  {
    type metadata accessor for MarineForecast();
    type metadata accessor for Metadata();
    sub_1A9558CDC(&qword_1EB6DCA10, (void (*)(uint64_t))type metadata accessor for Metadata);
    sub_1A9632770();
    sub_1A947BB00();
    sub_1A9632770();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1A9558C48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97EC138);
    sub_1A9558CDC(a2, (void (*)(uint64_t))type metadata accessor for MarineHourForecast);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9558CDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9558D24()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A9558D74(char a1)
{
  if (!a1) {
    return 0x7372756F68;
  }
  if (a1 == 1) {
    return 0x617461646174656DLL;
  }
  return 0xD000000000000014;
}

uint64_t sub_1A9558DCC(char *a1, char *a2)
{
  return sub_1A950BAB4(*a1, *a2);
}

uint64_t sub_1A9558DD8()
{
  return sub_1A95C92E0();
}

uint64_t sub_1A9558DE0(uint64_t a1)
{
  return sub_1A94AC96C(a1, *v1);
}

uint64_t sub_1A9558DE8()
{
  return sub_1A94ADB74();
}

uint64_t sub_1A9558DF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9558D24();
  *a1 = result;
  return result;
}

uint64_t sub_1A9558E20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9558D74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9558E4C()
{
  return sub_1A9558D74(*v0);
}

uint64_t sub_1A9558E54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9558D70();
  *a1 = result;
  return result;
}

uint64_t sub_1A9558E7C(uint64_t a1)
{
  unint64_t v2 = sub_1A95589D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9558EB8(uint64_t a1)
{
  unint64_t v2 = sub_1A95589D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A9558EF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MarineForecast.init(from:)(a1, a2);
}

uint64_t sub_1A9558F0C(void *a1)
{
  return MarineForecast.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarineForecast(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1A962E810();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_1A9631510();
    v11(v8, v9, v10);
    uint64_t v12 = (int *)type metadata accessor for Metadata();
    v11(&v8[v12[5]], &v9[v12[5]], v10);
    uint64_t v13 = v12[6];
    size_t v14 = &v8[v13];
    size_t v15 = &v9[v13];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v13], 1, v10))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v11(v14, v15, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
    }
    *(void *)&v8[v12[7]] = *(void *)&v9[v12[7]];
    *(void *)&v8[v12[8]] = *(void *)&v9[v12[8]];
    *(void *)&v8[v12[9]] = *(void *)&v9[v12[9]];
    uint64_t v17 = v12[10];
    unsigned int v18 = &v8[v17];
    unsigned int v19 = &v9[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)unsigned int v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v12[11];
    int v22 = &v8[v21];
    uint64_t v23 = &v9[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)int v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v12[12];
    int v26 = &v8[v25];
    uint64_t v27 = &v9[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)int v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    v8[v12[13]] = v9[v12[13]];
    v8[v12[14]] = v9[v12[14]];
    uint64_t v29 = v12[15];
    uint64_t v30 = &v8[v29];
    uint64_t v31 = &v9[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    *(_OWORD *)((char *)v6 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
  }
  return v6;
}

uint64_t destroy for MarineForecast(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A962E810();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for Metadata();
  v6(v4 + *(int *)(v7 + 20), v5);
  uint64_t v8 = v4 + *(int *)(v7 + 24);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v5)) {
    v6(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MarineForecast(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1A962E810();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  sub_1A9631510();
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for Metadata();
  v9(&v6[v10[5]], &v7[v10[5]], v8);
  uint64_t v11 = v10[6];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v7[v11], 1, v8))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v9(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
  }
  *(void *)&v6[v10[7]] = *(void *)&v7[v10[7]];
  *(void *)&v6[v10[8]] = *(void *)&v7[v10[8]];
  *(void *)&v6[v10[9]] = *(void *)&v7[v10[9]];
  uint64_t v15 = v10[10];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = v10[11];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  uint64_t v23 = v10[12];
  uint64_t v24 = &v6[v23];
  uint64_t v25 = &v7[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  v6[v10[13]] = v7[v10[13]];
  v6[v10[14]] = v7[v10[14]];
  uint64_t v27 = v10[15];
  uint64_t v28 = &v6[v27];
  uint64_t v29 = &v7[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

double assignWithCopy for MarineForecast(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v35 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v36 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A962E810();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = (int *)type metadata accessor for Metadata();
  v11(&v7[v12[5]], &v8[v12[5]], v9);
  uint64_t v13 = v12[6];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v7[v13], 1, v9);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      v11(v14, v15, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v9);
LABEL_7:
  *(void *)&v7[v12[7]] = *(void *)&v8[v12[7]];
  *(void *)&v7[v12[8]] = *(void *)&v8[v12[8]];
  *(void *)&v7[v12[9]] = *(void *)&v8[v12[9]];
  uint64_t v19 = v12[10];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v22 = v12[11];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v25 = v12[12];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  v7[v12[13]] = v8[v12[13]];
  v7[v12[14]] = v8[v12[14]];
  uint64_t v28 = v12[15];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (double *)((char *)v36 + v31);
  uint64_t v33 = (double *)((char *)v35 + v31);
  *uint64_t v32 = *v33;
  double result = v33[1];
  v32[1] = result;
  return result;
}

void *initializeWithTake for MarineForecast(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1A962E810();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for Metadata();
  v9(&v6[v10[5]], &v7[v10[5]], v8);
  uint64_t v11 = v10[6];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v7[v11], 1, v8))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v9(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
  }
  *(void *)&v6[v10[7]] = *(void *)&v7[v10[7]];
  *(void *)&v6[v10[8]] = *(void *)&v7[v10[8]];
  *(void *)&v6[v10[9]] = *(void *)&v7[v10[9]];
  *(_OWORD *)&v6[v10[10]] = *(_OWORD *)&v7[v10[10]];
  *(_OWORD *)&v6[v10[11]] = *(_OWORD *)&v7[v10[11]];
  *(_OWORD *)&v6[v10[12]] = *(_OWORD *)&v7[v10[12]];
  v6[v10[13]] = v7[v10[13]];
  v6[v10[14]] = v7[v10[14]];
  *(_OWORD *)&v6[v10[15]] = *(_OWORD *)&v7[v10[15]];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for MarineForecast(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v40 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v41 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A962E810();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = (int *)type metadata accessor for Metadata();
  v11(&v7[v12[5]], &v8[v12[5]], v9);
  uint64_t v13 = v12[6];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v7[v13], 1, v9);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      v11(v14, v15, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v9);
LABEL_7:
  *(void *)&v7[v12[7]] = *(void *)&v8[v12[7]];
  *(void *)&v7[v12[8]] = *(void *)&v8[v12[8]];
  *(void *)&v7[v12[9]] = *(void *)&v8[v12[9]];
  uint64_t v19 = v12[10];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v12[11];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v12[12];
  uint64_t v30 = &v7[v29];
  uint64_t v31 = &v8[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  v7[v12[13]] = v8[v12[13]];
  v7[v12[14]] = v8[v12[14]];
  uint64_t v34 = v12[15];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  double result = v41;
  *(_OWORD *)((char *)v41 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)v40 + *(int *)(a3 + 24));
  return result;
}

uint64_t sub_1A9559BD0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Metadata();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

void *sub_1A9559C58(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Metadata();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MarineForecast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9559DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarineForecast.CodingKeys()
{
  return &type metadata for MarineForecast.CodingKeys;
}

unint64_t sub_1A9559DE0()
{
  unint64_t result = qword_1E97EC168;
  if (!qword_1E97EC168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC168);
  }
  return result;
}

unint64_t sub_1A9559E30()
{
  unint64_t result = qword_1E97EC170;
  if (!qword_1E97EC170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC170);
  }
  return result;
}

unint64_t sub_1A9559E80()
{
  unint64_t result = qword_1E97EC178;
  if (!qword_1E97EC178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC178);
  }
  return result;
}

uint64_t static Date.fiveDaysFromNow.getter()
{
  return sub_1A9559FA4();
}

id sub_1A9559ED8()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  qword_1EB6EB5D0 = (uint64_t)result;
  return result;
}

uint64_t Date.rounded(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A962E6A0();
  if ((unsigned __int128)(a1 * (__int128)60) >> 64 == (60 * a1) >> 63)
  {
    sub_1A962E690();
    uint64_t v5 = sub_1A962E810();
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Date.fiveMinutesFromNow.getter()
{
  return sub_1A9559FA4();
}

uint64_t sub_1A9559FA4()
{
  uint64_t v0 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = v5 - v4;
  sub_1A962E7F0();
  sub_1A962E760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
}

uint64_t sub_1A955A054(unint64_t a1, id a2, uint64_t a3)
{
  char v24 = *v3;
  uint64_t v4 = *((void *)v3 + 1);
  char v5 = v3[16];
  char v6 = v3[17];
  char v7 = v3[18];
  uint64_t v9 = *((void *)v3 + 3);
  uint64_t v8 = *((void *)v3 + 4);
  char v10 = v3[40];
  uint64_t v11 = *((void *)v3 + 6);
  uint64_t v12 = *((void *)v3 + 7);
  id v32 = a2;
  id v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC6C8);
  if (swift_dynamicCast())
  {
    sub_1A9435A70(&v26, (uint64_t)v33);
    __swift_project_boxed_opaque_existential_1(v33, v34);
    uint64_t v14 = OUTLINED_FUNCTION_0_24();
    if (v15(v14))
    {
      uint64_t v16 = sub_1A9632990();
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v33, v34);
      uint64_t v19 = OUTLINED_FUNCTION_0_24();
      uint64_t v16 = v20(v19);
      if (v21)
      {
        LOBYTE(v26) = v24;
        *((void *)&v26 + 1) = v4;
        LOBYTE(v27) = v5;
        BYTE1(v27) = v6;
        BYTE2(v27) = v7;
        *((void *)&v27 + 1) = v9;
        uint64_t v28 = v8;
        char v29 = v10;
        uint64_t v30 = v11;
        uint64_t v31 = v12;
        uint64_t v16 = sub_1A955A83C(a1, a3);
      }
    }
    uint64_t v18 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    sub_1A955A978((uint64_t)&v26);
    LOBYTE(v26) = v24;
    *((void *)&v26 + 1) = v4;
    LOBYTE(v27) = v5;
    BYTE1(v27) = v6;
    BYTE2(v27) = v7;
    *((void *)&v27 + 1) = v9;
    uint64_t v28 = v8;
    char v29 = v10;
    uint64_t v30 = v11;
    uint64_t v31 = v12;
    uint64_t v17 = sub_1A9632990();
    return sub_1A955A83C(a1, v17);
  }
  return v18;
}

uint64_t sub_1A955A248(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v8 = v4[16];
  int v9 = v4[17];
  unsigned __int8 v10 = v4[18];
  v31[0] = a1;
  id v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC6C8);
  if (swift_dynamicCast())
  {
    sub_1A9435A70(&v32, (uint64_t)v35);
    uint64_t v12 = v36;
    uint64_t v13 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    char v15 = sub_1A955A88C(a2);
    if (v14 & 1) != 0 && (v15)
    {
      if (qword_1EB6DE388 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1A96317F0();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB6EB630);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_1A96317D0();
      os_log_type_t v18 = sub_1A9632230();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(void *)&long long v32 = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        if (a4)
        {
          unint64_t v21 = a4;
        }
        else
        {
          a3 = 0x3E6C696E3CLL;
          unint64_t v21 = 0xE500000000000000;
        }
        sub_1A9631510();
        v31[0] = sub_1A945C1DC(a3, v21, (uint64_t *)&v32);
        sub_1A9632350();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A9410000, v17, v18, "Two auth errors in a row for request %s) - aborting all retries", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0F7300](v20, -1, -1);
        MEMORY[0x1AD0F7300](v19, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      goto LABEL_18;
    }
    sub_1A9433E60((uint64_t)v35, (uint64_t)&v32);
    if (v8)
    {
      __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
      uint64_t v23 = OUTLINED_FUNCTION_1_32();
      char v25 = v24(v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
      sub_1A9433E60((uint64_t)v35, (uint64_t)v31);
      if (v25)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
LABEL_22:
        char v22 = 1;
LABEL_25:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
        return v22 & 1;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
      sub_1A9433E60((uint64_t)v35, (uint64_t)v31);
    }
    sub_1A9433E60((uint64_t)v31, (uint64_t)v30);
    if (v9)
    {
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      uint64_t v26 = OUTLINED_FUNCTION_1_32();
      char v28 = v27(v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if (v28) {
        goto LABEL_22;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    char v22 = v10 & v14;
    goto LABEL_25;
  }
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  sub_1A955A978((uint64_t)&v32);
  if (!v9)
  {
LABEL_18:
    char v22 = 0;
    return v22 & 1;
  }
  swift_getErrorValue();
  char v22 = sub_1A94AA568();
  return v22 & 1;
}

uint64_t initializeWithCopy for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

uint64_t assignWithCopy for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSClientConfiguration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSClientConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A955A83C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 56);
  unint64_t v4 = *(void *)(v3 + 16);
  if ((a1 & 0x8000000000000000) != 0)
  {
    if (v4) {
      goto LABEL_5;
    }
  }
  else
  {
    if (v4 > a1)
    {
      v3 += 16 * a1;
LABEL_5:
      uint64_t v5 = v3 + 32;
      return *(void *)v5;
    }
    if (v4)
    {
      uint64_t v5 = v3 + 16 * v4 + 16;
      return *(void *)v5;
    }
  }
  return a2;
}

uint64_t sub_1A955A88C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1
    || (v10[0] = *(id *)(a1 + 8 * v1 + 24),
        id v2 = v10[0],
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC6C8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_6;
  }
  if (!*((void *)&v8 + 1))
  {
LABEL_6:
    sub_1A955A978((uint64_t)&v7);
    char v5 = 0;
    return v5 & 1;
  }
  sub_1A9435A70(&v7, (uint64_t)v10);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v5 & 1;
}

uint64_t sub_1A955A978(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of InterpolationInitializerType.initialize(a:b:c:d:startDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t static HourlyForecastDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aHourlyforecast_4;
  sub_1A9631510();
  return v0;
}

uint64_t static HourlyForecastDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aHourlyforecast_4 = a1;
  *(void *)&aHourlyforecast_4[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HourlyForecastDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A955AAD8()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD820 = 0x2E312E312E30;
  qword_1EB6DD828 = 0xE600000000000000;
  return result;
}

uint64_t static HourlyForecastDescriptor.version.getter()
{
  if (qword_1EB6DD830 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD820;
  sub_1A9631510();
  return v0;
}

uint64_t static HourlyForecastDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD830 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD820 = a1;
  qword_1EB6DD828 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HourlyForecastDescriptor.version.modify())()
{
  if (qword_1EB6DD830 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for HourlyForecastDescriptor()
{
  return &type metadata for HourlyForecastDescriptor;
}

double PrecipitationAmount.probability.getter()
{
  return *(double *)v0;
}

double PrecipitationAmount.averageAmount.getter()
{
  return *(double *)(v0 + 8);
}

double PrecipitationAmount.averageSnowfallAmount.getter()
{
  return *(double *)(v0 + 16);
}

BOOL static PrecipitationAmount.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1A955AD1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C696261626F7270 && a2 == 0xEB00000000797469;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4165676172657661 && a2 == 0xED0000746E756F6DLL;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001A9647970)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A955AEA8(char a1)
{
  if (!a1) {
    return 0x6C696261626F7270;
  }
  if (a1 == 1) {
    return 0x4165676172657661;
  }
  return 0xD000000000000015;
}

uint64_t sub_1A955AF18()
{
  return sub_1A955AEA8(*v0);
}

uint64_t sub_1A955AF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A955AD1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A955AF48(uint64_t a1)
{
  unint64_t v2 = sub_1A955B10C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A955AF84(uint64_t a1)
{
  unint64_t v2 = sub_1A955B10C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PrecipitationAmount.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC190);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955B10C();
  sub_1A9632970();
  char v13 = 0;
  OUTLINED_FUNCTION_2_2();
  if (!v1)
  {
    char v12 = 1;
    OUTLINED_FUNCTION_2_2();
    char v11 = 2;
    OUTLINED_FUNCTION_2_2();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A955B10C()
{
  unint64_t result = qword_1E97EC198;
  if (!qword_1E97EC198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC198);
  }
  return result;
}

uint64_t PrecipitationAmount.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC1A0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A955B10C();
  sub_1A9632950();
  if (!v2)
  {
    OUTLINED_FUNCTION_1_19();
    uint64_t v7 = v6;
    OUTLINED_FUNCTION_1_19();
    uint64_t v10 = v9;
    OUTLINED_FUNCTION_1_19();
    uint64_t v12 = v11;
    uint64_t v13 = OUTLINED_FUNCTION_12_0();
    v14(v13);
    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A955B2D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PrecipitationAmount.init(from:)(a1, a2);
}

uint64_t sub_1A955B2E8(void *a1)
{
  return PrecipitationAmount.encode(to:)(a1);
}

uint64_t sub_1A955B304()
{
  return static PrecipitationAmount.read(from:)();
}

uint64_t sub_1A955B31C()
{
  return PrecipitationAmount.write(to:)();
}

ValueMetadata *type metadata accessor for PrecipitationAmount()
{
  return &type metadata for PrecipitationAmount;
}

unsigned char *storeEnumTagSinglePayload for PrecipitationAmount.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A955B410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAmount.CodingKeys()
{
  return &type metadata for PrecipitationAmount.CodingKeys;
}

unint64_t sub_1A955B44C()
{
  unint64_t result = qword_1E97EC1A8;
  if (!qword_1E97EC1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC1A8);
  }
  return result;
}

unint64_t sub_1A955B49C()
{
  unint64_t result = qword_1E97EC1B0;
  if (!qword_1E97EC1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC1B0);
  }
  return result;
}

unint64_t sub_1A955B4EC()
{
  unint64_t result = qword_1E97EC1B8;
  if (!qword_1E97EC1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC1B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherAlertRequestOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherAlertRequestOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlertRequestOptions()
{
  return &type metadata for WeatherAlertRequestOptions;
}

uint64_t PrecipitationType.rawValue.getter()
{
  uint64_t result = 0x7261656C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646578696DLL;
      break;
    case 2:
      uint64_t result = 0x7469706963657270;
      break;
    case 3:
      uint64_t result = 1852399986;
      break;
    case 4:
      uint64_t result = 2003791475;
      break;
    case 5:
      uint64_t result = 0x7465656C73;
      break;
    case 6:
      uint64_t result = 1818845544;
      break;
    case 7:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

BOOL PrecipitationType.isClear.getter()
{
  return *v0 == 0;
}

uint64_t PrecipitationType.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    PrecipitationType.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 8) {
      char v9 = 7;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::PrecipitationType_optional __swiftcall PrecipitationType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A955B7E0(unsigned __int8 *a1, char *a2)
{
  return sub_1A950B3BC(*a1, *a2);
}

unint64_t sub_1A955B7F0()
{
  unint64_t result = qword_1E97EC1C0;
  if (!qword_1E97EC1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC1C0);
  }
  return result;
}

uint64_t sub_1A955B83C()
{
  return sub_1A95C92EC(*v0);
}

uint64_t sub_1A955B844(uint64_t a1)
{
  return sub_1A94AC454(a1, *v1);
}

uint64_t sub_1A955B84C()
{
  return sub_1A94ADD28();
}

WeatherDaemon::PrecipitationType_optional sub_1A955B854(Swift::String *a1)
{
  return PrecipitationType.init(rawValue:)(*a1);
}

uint64_t sub_1A955B860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PrecipitationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A955B888@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return PrecipitationType.init(from:)(a1, a2);
}

uint64_t sub_1A955B8A0()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A955B8F0@<X0>(unsigned char *a1@<X8>)
{
  return static PrecipitationType.read(from:)(a1);
}

uint64_t sub_1A955B908()
{
  return PrecipitationType.write(to:)();
}

unint64_t sub_1A955B948()
{
  unint64_t result = qword_1EB6DC6F0;
  if (!qword_1EB6DC6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC6F0);
  }
  return result;
}

uint64_t Settings.DaemonStore.set<A>(setting:value:)()
{
  sub_1A943640C((unint64_t *)&qword_1E97EAA98);
  return sub_1A962EB60();
}

uint64_t type metadata accessor for Settings.DaemonStore()
{
  return self;
}

uint64_t Settings.DaemonStore.deinit()
{
  return v0;
}

uint64_t Settings.DaemonStore.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1A955BA64()
{
  return sub_1A962EB60();
}

uint64_t sub_1A955BA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F415F4E0](a1, *v5, a5);
}

uint64_t sub_1A955BAC4(uint64_t a1)
{
  return MEMORY[0x1F415F4D8](a1, *v1);
}

uint64_t sub_1A955BAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F415F248](a1, *v5, a5);
}

uint64_t sub_1A955BB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F415F240](a1, a2, *v6, a6);
}

uint64_t sub_1A955BB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x1F415F250](a1, a2, a3, *v7, a7);
}

uint64_t sub_1A955BB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x1F415F238](a1, a2, a3, a4, *v8, a8);
}

uint64_t static Settings.Daemon.settingsStore.getter()
{
  type metadata accessor for Settings.DaemonStore();
  return swift_initStaticObject();
}

uint64_t sub_1A955BBE0(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_33(a1, 47, 0x80000001A9647D30, &qword_1EB6DD398);
}

uint64_t static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1EB6DCC10);
}

uint64_t static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1EB6DA260);
}

uint64_t sub_1A955BC48(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_33(a1, 51, 0x80000001A9647CB0, &qword_1E97EC1C8);
}

uint64_t static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1E97EA5B8);
}

uint64_t sub_1A955BC8C(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_33(a1, 48, 0x80000001A9647C70, &qword_1E97EC1D0);
}

uint64_t static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1E97EA5C0);
}

uint64_t sub_1A955BCD0(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_33(a1, 52, 0x80000001A9647C30, &qword_1E97EC1D8);
}

uint64_t static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1E97EA5C8);
}

uint64_t sub_1A955BD14(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_33(a1, 53, 0x80000001A9647BF0, &qword_1E97EC1E0);
}

uint64_t static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1E97EA5D0);
}

uint64_t static Settings.Daemon.clearCachedJWTTokenOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1EB6DE408);
}

uint64_t static Settings.Daemon.mangleCachedJWTTokenOnNextLaunch.getter()
{
  return sub_1A942F508(&qword_1EB6DD020);
}

uint64_t sub_1A955BDA0(uint64_t a1)
{
  return sub_1A94505EC(a1, 1, 0xD000000000000025, 0x80000001A9647AE0, &qword_1E97EC1E8);
}

uint64_t static Settings.Daemon.forceQAAndNoAuthOnSimulator.getter()
{
  return sub_1A942F508(&qword_1E97EA5D8);
}

uint64_t static Settings.Daemon.enableFlatbuffers.getter()
{
  return sub_1A942F508(&qword_1EB6DD9D8);
}

uint64_t static Settings.Daemon.enableStatisticsFlatbuffers.getter()
{
  return sub_1A942F508(&qword_1EB6DD9E8);
}

uint64_t static Settings.Daemon.enableSendFlatbufferSchemaVersion.getter()
{
  return sub_1A942F508(&qword_1EB6DB108);
}

uint64_t static Settings.Daemon.treatmentIdentifierOverrides.getter()
{
  return sub_1A942F508(&qword_1EB6DCB30);
}

uint64_t Settings.Daemon.AttributionOverrides.WeatherDataProvider.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x50746C7561666564;
  }
}

uint64_t Settings.Daemon.AttributionOverrides.WeatherDataProvider.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A9632580();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A955BF34(unsigned __int8 *a1, char *a2)
{
  return sub_1A950CAF8(*a1, *a2);
}

uint64_t sub_1A955BF40()
{
  return sub_1A95C9304();
}

uint64_t sub_1A955BF48(uint64_t a1)
{
  return sub_1A94AD398(a1, *v1);
}

uint64_t sub_1A955BF50()
{
  return sub_1A94AD50C();
}

uint64_t sub_1A955BF58@<X0>(char *a1@<X8>)
{
  return Settings.Daemon.AttributionOverrides.WeatherDataProvider.init(rawValue:)(a1);
}

uint64_t sub_1A955BF64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Settings.Daemon.AttributionOverrides.WeatherDataProvider.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A955BF8C(uint64_t a1)
{
  unint64_t v2 = sub_1A955C430();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1A955BFE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A955C430();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1A955C03C(uint64_t a1)
{
  unint64_t v2 = sub_1A955C430();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t Settings.Daemon.AttributionOverrides.__allocating_init(key:defaultValue:access:)()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_2_26();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  v3(v2);
  OUTLINED_FUNCTION_9_20();
  uint64_t v4 = OUTLINED_FUNCTION_5_1();
  v5(v4);
  return v1;
}

uint64_t Settings.Daemon.AttributionOverrides.init(key:defaultValue:access:)()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_2_26();
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  v3(v2);
  OUTLINED_FUNCTION_9_20();
  uint64_t v4 = OUTLINED_FUNCTION_5_1();
  v5(v4);
  return v0;
}

uint64_t Settings.Daemon.AttributionOverrides.__deallocating_deinit()
{
  uint64_t v0 = _s11TeaSettings0B0C13WeatherDaemonE0D0V20AttributionOverridesCfd_0();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1A955C1F0()
{
  return sub_1A943640C(&qword_1E97EC1F0);
}

unint64_t sub_1A955C228()
{
  unint64_t result = qword_1EB6DC6D8;
  if (!qword_1EB6DC6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC6D8);
  }
  return result;
}

uint64_t method lookup function for Settings.DaemonStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Settings.DaemonStore);
}

ValueMetadata *type metadata accessor for Settings.Daemon()
{
  return &type metadata for Settings.Daemon;
}

uint64_t type metadata accessor for Settings.Daemon.AttributionOverrides()
{
  uint64_t result = qword_1E97EC1F8;
  if (!qword_1E97EC1F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A955C2E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A955C324()
{
  return type metadata accessor for Settings.Daemon.AttributionOverrides();
}

unsigned char *_s6DaemonV20AttributionOverridesC19WeatherDataProviderOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A955C3F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.Daemon.AttributionOverrides.WeatherDataProvider()
{
  return &type metadata for Settings.Daemon.AttributionOverrides.WeatherDataProvider;
}

unint64_t sub_1A955C430()
{
  unint64_t result = qword_1EB6DC6E0;
  if (!qword_1EB6DC6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC6E0);
  }
  return result;
}

uint64_t EventSignificance.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    EventSignificance.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 13) {
      char v9 = 12;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::EventSignificance_optional __swiftcall EventSignificance.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t EventSignificance.rawValue.getter()
{
  uint64_t result = 0x6863746177;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6974656C6C7562;
      break;
    case 2:
      uint64_t result = 0x636E656772656D65;
      break;
    case 3:
      uint64_t v2 = 0x6D6572747865;
      goto LABEL_8;
    case 4:
      uint64_t result = 0x7473616365726F66;
      break;
    case 5:
      uint64_t result = 0x656C416C61636F6CLL;
      break;
    case 6:
      uint64_t v2 = 0x67617373656DLL;
LABEL_8:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
      break;
    case 7:
      uint64_t result = 0x6B6F6F6C74756FLL;
      break;
    case 8:
      uint64_t result = 0x74726F706572;
      break;
    case 9:
      uint64_t result = 0x6E656D6574617473;
      break;
    case 0xA:
      uint64_t result = 0x676E696E726177;
      break;
    case 0xB:
      uint64_t result = 0x79726F7369766461;
      break;
    case 0xC:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A955C738(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950B598(*a1, *a2);
}

unint64_t sub_1A955C748()
{
  unint64_t result = qword_1E97EC208;
  if (!qword_1E97EC208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E97EC208);
  }
  return result;
}

uint64_t sub_1A955C794()
{
  return sub_1A95C9310();
}

uint64_t sub_1A955C79C(uint64_t a1)
{
  return sub_1A94AC558(a1, *v1);
}

uint64_t sub_1A955C7A4()
{
  return sub_1A94ADCF8();
}

WeatherDaemon::EventSignificance_optional sub_1A955C7AC(Swift::String *a1)
{
  return EventSignificance.init(rawValue:)(*a1);
}

uint64_t sub_1A955C7B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EventSignificance.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A955C7E0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return EventSignificance.init(from:)(a1, a2);
}

uint64_t sub_1A955C7F8()
{
  return sub_1A9631FB0();
}

void sub_1A955C848(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A955C860()
{
  return EventSignificance.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for EventSignificance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A955C944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSignificance()
{
  return &type metadata for EventSignificance;
}

unint64_t sub_1A955C97C()
{
  unint64_t result = qword_1EB6DAFF0;
  if (!qword_1EB6DAFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAFF0);
  }
  return result;
}

BOOL Array<A>.contains(_:)(uint64_t a1, double a2, double a3)
{
  if (*(void *)(a1 + 16) != 4) {
    return 0;
  }
  BOOL v3 = *(double *)(a1 + 32) > a3 || *(double *)(a1 + 48) < a3;
  return !v3 && *(double *)(a1 + 40) <= a2 && *(double *)(a1 + 56) >= a2;
}

uint64_t Array<A>.minLongitude.getter(uint64_t result)
{
  if (!*(void *)(result + 16)) {
    __break(1u);
  }
  return result;
}

uint64_t Array<A>.minLatitude.getter(uint64_t result)
{
  if (*(void *)(result + 16) < 2uLL) {
    __break(1u);
  }
  return result;
}

uint64_t Array<A>.maxLongitude.getter(uint64_t result)
{
  if (*(void *)(result + 16) < 3uLL) {
    __break(1u);
  }
  return result;
}

uint64_t Array<A>.maxLatitude.getter(uint64_t result)
{
  if (*(void *)(result + 16) < 4uLL) {
    __break(1u);
  }
  return result;
}

void Array<A>.center.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 < 2)
  {
    __break(1u);
  }
  else if (v1 >= 4)
  {
    CLLocationCoordinate2DMake(*(double *)(a1 + 40) + (*(double *)(a1 + 56) - *(double *)(a1 + 40)) * 0.5, *(double *)(a1 + 32) + (*(double *)(a1 + 48) - *(double *)(a1 + 32)) * 0.5);
    return;
  }
  __break(1u);
}

ValueMetadata *type metadata accessor for AirQualityScaleRequest()
{
  return &type metadata for AirQualityScaleRequest;
}

uint64_t WDSJWTMescalSigner.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WDSJWTMescalSigner.init()();
  return v0;
}

id sub_1A955CAEC@<X0>(void *a1@<X8>)
{
  sub_1A9467B44(0, &qword_1EB6DC6B0);
  id result = sub_1A955CB50();
  *a1 = result;
  return result;
}

id sub_1A955CB50()
{
  uint64_t v0 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  unint64_t v1 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bagForProfile_profileVersion_, v0, v1);

  return v2;
}

uint64_t WDSJWTMescalSigner.sign(data:bundleIdentifier:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A96317F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB6EB648);
  uint64_t v7 = sub_1A96317D0();
  os_log_type_t v8 = sub_1A9632230();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v9 = 0;
    _os_log_impl(&dword_1A9410000, v7, v8, "About to request a signature", v9, 2u);
    MEMORY[0x1AD0F7300](v9, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC5E0);
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a1;
  v11[3] = a2;
  void v11[4] = v10;
  swift_retain();
  sub_1A9442980(a1, a2);
  return sub_1A96316A0();
}

uint64_t sub_1A955CD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  return MEMORY[0x1F4188298](sub_1A955CD68, 0, 0, a4, a5, a6, a7, a8);
}

uint64_t sub_1A955CD68()
{
  unint64_t v1 = v0[9];
  uint64_t v2 = v0[8];
  sub_1A9467B44(0, &qword_1EB6DB600);
  uint64_t v3 = sub_1A955D0D0(v2, v1);
  uint64_t v5 = v4;
  v0[11] = v3;
  v0[12] = v4;
  sub_1A96315F0();
  uint64_t v6 = v0[6];
  v0[13] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1A955CE6C;
  return MEMORY[0x1F410A908](v3, v5, 1, v6);
}

uint64_t sub_1A955CE6C()
{
  OUTLINED_FUNCTION_0_11();
  uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v0;
  v2[15] = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v7 = v3[12];
    uint64_t v6 = (void *)v3[13];
    uint64_t v8 = v3[11];

    sub_1A9466028(v8, v7);
    char v14 = sub_1A955D0B8;
  }
  else
  {
    char v15 = (void *)v3[13];
    sub_1A9466028(v3[11], v3[12]);

    char v14 = sub_1A955CF8C;
  }
  return MEMORY[0x1F4188298](v14, 0, 0, v9, v10, v11, v12, v13);
}

uint64_t sub_1A955CF8C()
{
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A96317F0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB6EB648);
  uint64_t v2 = sub_1A96317D0();
  os_log_type_t v3 = sub_1A9632230();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A9410000, v2, v3, "Signed successfully", v4, 2u);
    MEMORY[0x1AD0F7300](v4, -1, -1);
  }
  uint64_t v5 = *(_OWORD **)(v0 + 56);
  long long v8 = *(_OWORD *)(v0 + 24);

  *uint64_t v5 = v8;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A955D0B8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A955D0D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1A9631C50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1A9631C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A943637C(&qword_1EB6DD9B8, MEMORY[0x1E4F251E8]);
  sub_1A9631BD0();
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
        JUMPOUT(0x1A955D358);
      }
      sub_1A9442980(a1, a2);
      sub_1A955D5FC((int)a1, a1 >> 32);
      goto LABEL_5;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      sub_1A9442980(a1, a2);
      swift_retain();
      swift_retain();
      sub_1A955D5FC(v11, v12);
      swift_release();
      swift_release();
LABEL_5:
      sub_1A9466028(a1, a2);
      break;
    default:
      sub_1A955D6DC();
      sub_1A9466028(a1, a2);
      break;
  }
  sub_1A9631BC0();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1A95667F8((uint64_t)v10);
}

uint64_t WDSJWTMescalSigner.deinit()
{
  swift_release();
  return v0;
}

uint64_t WDSJWTMescalSigner.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A955D3C0(uint64_t a1, unint64_t a2)
{
  return WDSJWTMescalSigner.sign(data:bundleIdentifier:)(a1, a2);
}

uint64_t sub_1A955D3E4()
{
  sub_1A9466028(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A955D424(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A955D4D8;
  return sub_1A955CD44(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A955D4D8()
{
  OUTLINED_FUNCTION_0_11();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of WDSSignerType.sign(data:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for WDSJWTMescalSigner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSJWTMescalSigner);
}

uint64_t dispatch thunk of WDSJWTMescalSigner.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A955D5FC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A962E470();
  if (!result || (uint64_t result = sub_1A962E490(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A962E480();
      sub_1A9631C50();
      sub_1A943637C(&qword_1EB6DD9B8, MEMORY[0x1E4F251E8]);
      return sub_1A9631BB0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A955D6DC()
{
  return sub_1A9631BB0();
}

uint64_t static NewsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aNews_8;
  sub_1A9631510();
  return v0;
}

uint64_t static NewsDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aNews_8 = a1;
  qword_1E97EC228 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NewsDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A955D8DC()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD718 = 0x2E302E312E30;
  qword_1EB6DD720 = 0xE600000000000000;
  return result;
}

uint64_t static NewsDescriptor.version.getter()
{
  if (qword_1EB6DD728 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD718;
  sub_1A9631510();
  return v0;
}

uint64_t static NewsDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD728 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD718 = a1;
  qword_1EB6DD720 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NewsDescriptor.version.modify())()
{
  if (qword_1EB6DD728 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for NewsDescriptor()
{
  return &type metadata for NewsDescriptor;
}

unint64_t WDSSignature.header.getter()
{
  uint64_t v0 = (void *)sub_1A962E660();
  id v1 = objc_msgSend(v0, sel_base64EncodedStringWithOptions_, 1);

  sub_1A9631D60();
  sub_1A9632450();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A9631510();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A9631510();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t destroy for WDSSignature(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A9466028(*(void *)(a1 + 16), *(void *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WDSSignature(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_1A9631510();
  sub_1A9442980(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  sub_1A9631510();
  return a1;
}

void *assignWithCopy for WDSSignature(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_1A9442980(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1A9466028(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WDSSignature(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1A9466028(v5, v6);
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSSignature(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSSignature()
{
  return &type metadata for WDSSignature;
}

uint64_t sub_1A955DE40(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 16) = (*a1 & 1) == 0;
  *(void *)(v3 + 24) = a3;
  *(void *)(v3 + 32) = a2;
  swift_retain();
  swift_retain();
  sub_1A955DEA8();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1A955DEA8()
{
  sub_1A962EAE0();
  sub_1A962EAD0();
  if (qword_1E97EA5B8 != -1) {
    swift_once();
  }
  sub_1A962EAC0();
  uint64_t result = swift_release();
  if (v1 == 1)
  {
    type metadata accessor for Settings.DaemonStore();
    swift_initStaticObject();
    sub_1A948A9C8();
    sub_1A962EB60();
    return sub_1A95600A4();
  }
  return result;
}

uint64_t sub_1A955DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v53 = *v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB240);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - v15;
  int v16 = *(unsigned __int8 *)(a4 + 8);
  uint64_t v49 = *(void *)a4;
  uint64_t v56 = v49;
  int v48 = v16;
  char v57 = v16;
  OUTLINED_FUNCTION_0_12();
  uint64_t v52 = a3;
  uint64_t v20 = sub_1A955E43C(v17, v18, a3, v19);
  unint64_t v22 = v21;
  if (qword_1E97EA638 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1A96317F0();
  __swift_project_value_buffer(v23, (uint64_t)qword_1E9802D00);
  swift_bridgeObjectRetain_n();
  char v24 = sub_1A96317D0();
  os_log_type_t v25 = sub_1A9632230();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v47 = v11;
    uint64_t v27 = v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v51 = v20;
    uint64_t v29 = v28;
    *(_DWORD *)uint64_t v27 = 141558275;
    uint64_t v55 = 1752392040;
    uint64_t v56 = v28;
    uint64_t v46 = a2;
    sub_1A9632350();
    *(_WORD *)(v27 + 12) = 2081;
    sub_1A9631510();
    uint64_t v55 = sub_1A945C1DC(v51, v22, &v56);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v24, v25, "Attempting to read daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v27,
      0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v29;
    uint64_t v20 = v51;
    MEMORY[0x1AD0F7300](v30, -1, -1);
    uint64_t v31 = v27;
    uint64_t v11 = v47;
    MEMORY[0x1AD0F7300](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = v54;
  sub_1A955E5F4(v20, v22, v54);
  if (__swift_getEnumTagSinglePayload(v32, 1, v11) == 1)
  {
    sub_1A944C424(v32, &qword_1E97EB240);
    uint64_t v56 = v49;
    char v57 = v48;
    double v33 = OUTLINED_FUNCTION_0_12();
    sub_1A9546D00(v34, v35, v52, v36, v33, v37);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v20;
    *(void *)(v38 + 24) = v22;
    sub_1A9631510();
    uint64_t v39 = (void *)sub_1A9631660();
    sub_1A96316D0();
    swift_release();
    swift_release();

    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v20;
    *(void *)(v40 + 24) = v22;
    uint64_t v41 = (void *)sub_1A9631660();
    uint64_t v42 = sub_1A96316F0();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = v32;
    uint64_t v44 = v50;
    sub_1A95603BC(v43, v50);
    sub_1A9560420(v44, (uint64_t)v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB1C8);
    swift_allocObject();
    uint64_t v42 = sub_1A9631710();
    sub_1A9560484(v44);
  }
  return v42;
}

uint64_t sub_1A955E43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = *(unsigned char *)(a4 + 8);
  sub_1A9632450();
  uint64_t v6 = CLLocationCoordinate2D.cacheKey.getter();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A96327B0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A96327B0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A9597424(a1);
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  if ((v5 & 1) == 0) {
    sub_1A96327B0();
  }
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A95CC4C0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A955E5F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A9631860();
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E97EA638 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A96317F0();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1E9802D00);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A96317D0();
  os_log_type_t v14 = sub_1A9632230();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v16 = &unk_1A9635000;
  uint64_t v44 = v10;
  if (v15)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v42 = v12;
    uint64_t v19 = v18;
    uint64_t v52 = v18;
    *(_DWORD *)uint64_t v17 = 141558275;
    v48[0] = 1752392040;
    sub_1A9632350();
    *(_WORD *)(v17 + 12) = 2081;
    sub_1A9631510();
    v48[0] = sub_1A945C1DC(v45, a2, &v52);
    int v16 = (void *)&unk_1A9635000;
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v13, v14, "Attempting to retrieve daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v19, -1, -1);
    MEMORY[0x1AD0F7300](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(unsigned char *)(v46 + 16) != 1)
  {
    uint64_t v23 = sub_1A96317D0();
    os_log_type_t v24 = sub_1A9632220();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v25 = 0;
      uint64_t v26 = "Daily statistics cache is disabled - returning nil";
LABEL_13:
      _os_log_impl(&dword_1A9410000, v23, v24, v26, v25, 2u);
      MEMORY[0x1AD0F7300](v25, -1, -1);
    }
LABEL_14:

LABEL_15:
    uint64_t v27 = type metadata accessor for DailyWeatherStatistics();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v27);
  }
  uint64_t v20 = sub_1A9488170();
  if (!v20)
  {
    uint64_t v23 = sub_1A96317D0();
    os_log_type_t v24 = sub_1A9632220();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v25 = 0;
      uint64_t v26 = "Cannot retrieve cached daily statistics due to missing store";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  uint64_t v46 = v20;
  sub_1A9631960();
  uint64_t v55 = (char *)MEMORY[0x1E4FBB1A0];
  uint64_t v56 = MEMORY[0x1E4FAA778];
  uint64_t v52 = v45;
  uint64_t v53 = a2;
  sub_1A9631510();
  unint64_t v21 = v44;
  sub_1A96318F0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  uint64_t v22 = sub_1A96319F0();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v22);
  sub_1A9631930();
  swift_release();
  sub_1A944C424((uint64_t)v7, &qword_1EB6DDBD8);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v8);
  uint64_t v29 = v48[0];
  if (!v48[0])
  {
    swift_bridgeObjectRetain_n();
    double v37 = sub_1A96317D0();
    os_log_type_t v38 = sub_1A9632230();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v52 = v40;
      *(_DWORD *)uint64_t v39 = v16[10];
      v48[0] = 1752392040;
      sub_1A9632350();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1A9631510();
      v48[0] = sub_1A945C1DC(v45, a2, &v52);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A9410000, v37, v38, "Could not find daily statistics in cache; key=%{private,mask.hash}s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v40, -1, -1);
      MEMORY[0x1AD0F7300](v39, -1, -1);
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    goto LABEL_15;
  }
  uint64_t v30 = v49;
  uint64_t v52 = v48[0];
  uint64_t v53 = v48[1];
  uint64_t v54 = v49;
  uint64_t v55 = v50;
  uint64_t v43 = v51;
  uint64_t v44 = v50;
  uint64_t v56 = v51;
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_1A96317D0();
  os_log_type_t v32 = sub_1A9632230();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v30;
    unint64_t v34 = a2;
    uint64_t v35 = v33;
    uint64_t v36 = swift_slowAlloc();
    v48[0] = v36;
    *(_DWORD *)uint64_t v35 = v16[10];
    uint64_t v47 = 1752392040;
    sub_1A9632350();
    *(_WORD *)(v35 + 12) = 2081;
    sub_1A9631510();
    uint64_t v47 = sub_1A945C1DC(v45, v34, v48);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v31, v32, "Successfully retrieved daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v36, -1, -1);
    MEMORY[0x1AD0F7300](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A95DDB44();
  swift_release();
  return sub_1A948A95C(v29);
}

uint64_t sub_1A955EFB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v18[2] = a2;
  uint64_t v8 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E97EA638 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A96317F0();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E9802D00);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1A96317D0();
  os_log_type_t v13 = sub_1A9632230();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v18[1] = v4;
    uint64_t v16 = v15;
    uint64_t v20 = v15;
    *(_DWORD *)uint64_t v14 = 141558275;
    uint64_t v19 = 1752392040;
    v18[0] = v10;
    sub_1A9632350();
    *(_WORD *)(v14 + 12) = 2081;
    sub_1A9631510();
    uint64_t v19 = sub_1A945C1DC(a3, a4, &v20);
    uint64_t v10 = (char *)v18[0];
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v12, v13, "Successfully fetched daily statistics. key=%{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v16, -1, -1);
    MEMORY[0x1AD0F7300](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A955F23C(a1, a3, a4);
  sub_1A9560420(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB1C8);
  swift_allocObject();
  return sub_1A9631710();
}

void sub_1A955F23C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = sub_1A962E810();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v3 + 16) != 1)
  {
    if (qword_1E97EA638 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A96317F0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E9802D00);
    os_log_t v30 = (os_log_t)sub_1A96317D0();
    os_log_type_t v16 = sub_1A9632220();
    if (!os_log_type_enabled(v30, v16)) {
      goto LABEL_13;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Daily statistics cache is disabled - not caching";
    goto LABEL_12;
  }
  if (sub_1A9488170())
  {
    sub_1A9560420(a1, (uint64_t)v13);
    uint64_t v14 = type metadata accessor for Metadata();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v14 + 20), v7);
    sub_1A9631510();
    sub_1A95CDA58();
    long long v35 = v32;
    long long v36 = v33;
    uint64_t v37 = v34;
    sub_1A9631950();
    long long v32 = v35;
    long long v33 = v36;
    uint64_t v34 = v37;
    sub_1A9631920();
    swift_release();
    if (qword_1E97EA638 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A96317F0();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E9802D00);
    sub_1A9631510();
    sub_1A948A8F8((uint64_t)&v35);
    sub_1A9631510();
    sub_1A948A8F8((uint64_t)&v35);
    uint64_t v22 = sub_1A96317D0();
    os_log_type_t v23 = sub_1A9632230();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v31[0] = v25;
      *(_DWORD *)uint64_t v24 = 141558531;
      *(void *)&long long v32 = 1752392040;
      sub_1A9632350();
      *(_WORD *)(v24 + 12) = 2081;
      sub_1A9631510();
      *(void *)&long long v32 = sub_1A945C1DC(a2, a3, v31);
      sub_1A9632350();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 22) = 2080;
      uint64_t v26 = sub_1A948A8F8((uint64_t)&v35);
      sub_1A95D6120(&v32, v26);
      sub_1A948A894((uint64_t)&v35);
      uint64_t v27 = sub_1A95D62D4(v32, BYTE8(v32));
      *(void *)&long long v32 = sub_1A945C1DC(v27, v28, v31);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      sub_1A948A894((uint64_t)&v35);
      sub_1A948A894((uint64_t)&v35);
      _os_log_impl(&dword_1A9410000, v22, v23, "Just cached daily statistics; key=%{private,mask.hash}s. It's valid for another %s",
        (uint8_t *)v24,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v25, -1, -1);
      MEMORY[0x1AD0F7300](v24, -1, -1);

      sub_1A948A894((uint64_t)&v35);
    }
    else
    {
      sub_1A948A894((uint64_t)&v35);
      swift_bridgeObjectRelease_n();
      sub_1A948A894((uint64_t)&v35);
      sub_1A948A894((uint64_t)&v35);
    }
    sub_1A955FBF8();
    swift_release();
    return;
  }
  if (qword_1E97EA638 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A96317F0();
  __swift_project_value_buffer(v19, (uint64_t)qword_1E9802D00);
  os_log_t v30 = (os_log_t)sub_1A96317D0();
  os_log_type_t v16 = sub_1A9632220();
  if (os_log_type_enabled(v30, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Cannot cache daily statistics due to missing store";
LABEL_12:
    _os_log_impl(&dword_1A9410000, v30, v16, v18, v17, 2u);
    MEMORY[0x1AD0F7300](v17, -1, -1);
  }
LABEL_13:
  os_log_t v20 = v30;
}

void sub_1A955FA30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1E97EA638 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A96317F0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E9802D00);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1A96317D0();
  os_log_type_t v7 = sub_1A9632220();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    uint64_t v10 = v9;
    sub_1A9632350();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1A9631510();
    sub_1A945C1DC(a2, a3, &v10);
    sub_1A9632350();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9410000, v6, v7, "Failed to fetch daily statistics. key=%{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v9, -1, -1);
    MEMORY[0x1AD0F7300](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1A955FBF8()
{
  uint64_t v0 = sub_1A962E810();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  uint64_t v4 = sub_1A9631860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A9488170())
  {
    sub_1A9631980();
    v13[3] = v0;
    v13[4] = MEMORY[0x1E4FAA600];
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1A962E7F0();
    sub_1A962E770();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A9631910();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    sub_1A96319E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1E97EA638 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E9802D00);
    uint64_t v9 = sub_1A96317D0();
    os_log_type_t v10 = sub_1A9632230();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1A9410000, v9, v10, "Purged expired daily weather statistics", v11, 2u);
      MEMORY[0x1AD0F7300](v11, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_1A95600A4()
{
  uint64_t result = sub_1A9488170();
  if (result)
  {
    sub_1A9631980();
    sub_1A96319D0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DailyStatisticsDataManager()
{
  return self;
}

uint64_t sub_1A9560360()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A9560398(uint64_t a1, uint64_t a2)
{
  return sub_1A955EFB8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1A95603B4(uint64_t a1)
{
  sub_1A955FA30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A95603BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9560420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9560484(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WDSJWTAuthenticatorServiceProxy.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WDSJWTAuthenticatorServiceProxy.init()();
  return v0;
}

uint64_t sub_1A956051C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  v4[0] = a1;
  v4[1] = a2;
  return a3(v4);
}

id sub_1A9560554()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    id v3 = sub_1A95605AC();
    uint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1A95605AC()
{
  uint64_t v0 = sub_1A9631400();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95616D0();
  if (qword_1EB6DB0C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A9631310();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB6DB0A8);
  sub_1A9631300();
  id v5 = sub_1A9560708();
  sub_1A96312F0();
  uint64_t v6 = (void *)sub_1A96313F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v6);

  return v5;
}

id sub_1A9560708()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithServiceName_, v1);

  return v2;
}

void *WDSJWTAuthenticatorServiceProxy.init()()
{
  uint64_t v1 = sub_1A96312B0();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A96312A0();
  sub_1A96312D0();
  swift_allocObject();
  uint64_t v2 = sub_1A96312C0();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v2;
  return v0;
}

uint64_t WDSJWTAuthenticatorServiceProxy.deinit()
{
  swift_release();

  return v0;
}

uint64_t WDSJWTAuthenticatorServiceProxy.__deallocating_deinit()
{
  WDSJWTAuthenticatorServiceProxy.deinit();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t WDSJWTAuthenticatorServiceProxy.generateToken(session:url:)()
{
  return sub_1A9631750();
}

void sub_1A95608DC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  id v9 = sub_1A9560554();
  objc_msgSend(v9, sel_activate);

  id v10 = sub_1A9560554();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  long long v32 = sub_1A9561618;
  long long v33 = (void *)v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  os_log_t v30 = sub_1A9594730;
  uint64_t v31 = &block_descriptor_1;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v13 = objc_msgSend(v10, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);

  sub_1A96323B0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAA10);
  if (swift_dynamicCast())
  {
    sub_1A9631510();
    uint64_t v14 = (void *)sub_1A9631D40();
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a3;
    v15[3] = a4;
    v15[4] = sub_1A95615E0;
    v15[5] = v8;
    long long v32 = sub_1A95616C4;
    long long v33 = v15;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    os_log_t v30 = sub_1A95614A8;
    uint64_t v31 = &block_descriptor_11;
    os_log_type_t v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_generateTokenWithUrl_completion_, v14, v16);
    swift_unknownObjectRelease();
    _Block_release(v16);
  }
  else
  {
    swift_release();
    if (qword_1EB6DF550 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A96317F0();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB6EB648);
    uint64_t v18 = sub_1A96317D0();
    os_log_type_t v19 = sub_1A9632220();
    if (os_log_type_enabled(v18, v19))
    {
      os_log_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t aBlock = v21;
      *(_DWORD *)os_log_t v20 = 136446210;
      if (qword_1EB6DB0C0 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1A9631310();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB6DB0A8);
      uint64_t v23 = sub_1A9631300();
      sub_1A945C1DC(v23, v24, &aBlock);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v18, v19, "Remote object proxy remote interface mismatch for: %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v21, -1, -1);
      MEMORY[0x1AD0F7300](v20, -1, -1);
    }

    sub_1A9561638();
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v26 = 0;
    a3();
  }
}

void sub_1A9560D4C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
}

void sub_1A9560D58(void *a1, void (*a2)(void *))
{
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A96317F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB6EB648);
  id v5 = a1;
  id v6 = a1;
  os_log_type_t v7 = sub_1A96317D0();
  os_log_type_t v8 = sub_1A9632220();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    if (qword_1EB6DB0C0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A9631310();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB6DB0A8);
    uint64_t v12 = sub_1A9631300();
    sub_1A945C1DC(v12, v13, &v20);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
    uint64_t v15 = sub_1A9631DC0();
    sub_1A945C1DC(v15, v16, &v20);
    sub_1A9632350();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A9410000, v7, v8, "Failed to get remote object proxy for: %{public}s with error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v10, -1, -1);
    MEMORY[0x1AD0F7300](v9, -1, -1);
  }
  else
  {
  }
  sub_1A9561638();
  uint64_t v17 = (void *)swift_allocError();
  *uint64_t v18 = a1;
  id v19 = a1;
  a2(v17);
}

void sub_1A9560FF8(uint64_t a1, void *a2, void (*a3)(void))
{
  if (a1)
  {
    v33[0] = 0;
    v33[1] = 0;
    sub_1A9631D50();
  }
  if (a2)
  {
    uint64_t v5 = qword_1EB6DF550;
    id v6 = a2;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A96317F0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB6EB648);
    id v8 = v6;
    uint64_t v9 = sub_1A96317D0();
    os_log_type_t v10 = sub_1A9632220();
    if (os_log_type_enabled(v9, v10))
    {
      long long v32 = a3;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v33[0] = v31;
      *(_DWORD *)uint64_t v11 = 136446466;
      if (qword_1EB6DB0C0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1A9631310();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EB6DB0A8);
      uint64_t v13 = sub_1A9631300();
      uint64_t v34 = sub_1A945C1DC(v13, v14, v33);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      id v15 = v8;
      id v16 = objc_msgSend(v15, sel_description);
      uint64_t v17 = sub_1A9631D60();
      unint64_t v19 = v18;

      uint64_t v34 = sub_1A945C1DC(v17, v19, v33);
      sub_1A9632350();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v9, v10, "Failed to generate jwt token for: %{public}s with error: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v31, -1, -1);
      MEMORY[0x1AD0F7300](v11, -1, -1);

      a3 = v32;
    }
    else
    {
    }
    id v30 = v8;
    a3();
  }
  else
  {
    if (qword_1EB6DF550 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A96317F0();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB6EB648);
    uint64_t v21 = sub_1A96317D0();
    os_log_type_t v22 = sub_1A9632220();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v33[0] = v24;
      *(_DWORD *)uint64_t v23 = 136446210;
      if (qword_1EB6DB0C0 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1A9631310();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EB6DB0A8);
      uint64_t v26 = sub_1A9631300();
      uint64_t v34 = sub_1A945C1DC(v26, v27, v33);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v21, v22, "Failed to generate jwt token for: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v24, -1, -1);
      MEMORY[0x1AD0F7300](v23, -1, -1);
    }

    sub_1A9561638();
    unint64_t v28 = (void *)swift_allocError();
    *uint64_t v29 = 1;
    a3();
  }
}

void sub_1A95614A8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1A9561534()
{
  return WDSJWTAuthenticatorServiceProxy.generateToken(session:url:)();
}

uint64_t type metadata accessor for WDSJWTAuthenticatorServiceProxy()
{
  return self;
}

uint64_t method lookup function for WDSJWTAuthenticatorServiceProxy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSJWTAuthenticatorServiceProxy);
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceProxy.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A95615A8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A95615E0(uint64_t a1, uint64_t a2)
{
  id v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

void sub_1A9561618(void *a1)
{
  sub_1A9560D58(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_1A9561638()
{
  unint64_t result = qword_1E97EC230;
  if (!qword_1E97EC230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC230);
  }
  return result;
}

uint64_t sub_1A9561684()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1A95616C4(uint64_t a1, void *a2)
{
  sub_1A9560FF8(a1, a2, *(void (**)(void))(v2 + 16));
}

unint64_t sub_1A95616D0()
{
  unint64_t result = qword_1EB6DAA18;
  if (!qword_1EB6DAA18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6DAA18);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for WDSJWTAuthenticatorServiceProxy.Errors(void *a1, void **a2)
{
  id v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for WDSJWTAuthenticatorServiceProxy.Errors(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for WDSJWTAuthenticatorServiceProxy.Errors(void **a1, void **a2)
{
  id v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    id v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **assignWithTake for WDSJWTAuthenticatorServiceProxy.Errors(void **a1, unint64_t *a2)
{
  id v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for WDSJWTAuthenticatorServiceProxy.Errors(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WDSJWTAuthenticatorServiceProxy.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A956190C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A9561924(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for WDSJWTAuthenticatorServiceProxy.Errors()
{
  return &type metadata for WDSJWTAuthenticatorServiceProxy.Errors;
}

uint64_t HourWeatherStatistics.hour.getter()
{
  return *(void *)v0;
}

__n128 HourWeatherStatistics.temperature.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 24);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t HourWeatherStatistics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC238);
  OUTLINED_FUNCTION_1();
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC240);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9561CF4();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v27 = v9;
    uint64_t v25 = sub_1A9632670();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A9561D40();
    sub_1A9632950();
    LOBYTE(v30) = 0;
    uint64_t v12 = v4;
    uint64_t v13 = sub_1A9632620();
    if (v16)
    {
      uint64_t v20 = a2;
      uint64_t v19 = v29;
    }
    else
    {
      uint64_t v26 = v13;
      LOBYTE(v30) = 1;
      uint64_t v17 = sub_1A9632620();
      uint64_t v20 = a2;
      uint64_t v19 = v29;
      if ((v18 & 1) == 0)
      {
        uint64_t v23 = sub_1A9561DD8(v25, v26, v17);
        if (v24)
        {
          sub_1A96324A0();
          swift_allocError();
          sub_1A9561E4C();
          sub_1A9632480();
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v12);
          uint64_t v14 = OUTLINED_FUNCTION_2_27();
          v15(v14);
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        }
        uint64_t v25 = v23;
      }
    }
    sub_1A9561D8C();
    sub_1A9632630();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v27, v12);
    uint64_t v21 = OUTLINED_FUNCTION_2_27();
    v22(v21);
    *(void *)uint64_t v20 = v25;
    *(_OWORD *)(v20 + 8) = v30;
    *(void *)(v20 + 24) = v31;
    *(unsigned char *)(v20 + 32) = v32;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9561CF4()
{
  unint64_t result = qword_1E97EC248;
  if (!qword_1E97EC248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC248);
  }
  return result;
}

unint64_t sub_1A9561D40()
{
  unint64_t result = qword_1E97EC250;
  if (!qword_1E97EC250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC250);
  }
  return result;
}

unint64_t sub_1A9561D8C()
{
  unint64_t result = qword_1E97EC258;
  if (!qword_1E97EC258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC258);
  }
  return result;
}

uint64_t sub_1A9561DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1A95AD7DC(a2, a3);
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = result - 1;
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = (unsigned __int128)(v6 * (__int128)24) >> 64;
      uint64_t v8 = 24 * v6;
      if (v7 == v8 >> 63)
      {
        BOOL v9 = __OFADD__(v8, a1);
        uint64_t v10 = v8 + a1;
        if (!v9)
        {
          uint64_t result = v10 + 1;
          if (!__OFADD__(v10, 1)) {
            return result;
          }
LABEL_10:
          __break(1u);
          return result;
        }
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

unint64_t sub_1A9561E4C()
{
  unint64_t result = qword_1E97EC260;
  if (!qword_1E97EC260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97EC238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC260);
  }
  return result;
}

uint64_t sub_1A9561EA0()
{
  return sub_1A9561EF8();
}

uint64_t sub_1A9561EC0(char a1)
{
  if (a1) {
    return 0x74617265706D6574;
  }
  else {
    return 1920298856;
  }
}

uint64_t sub_1A9561EF8()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A9561F48()
{
  return sub_1A9561EF8();
}

uint64_t sub_1A9561F68(char a1)
{
  if (a1) {
    return 0x68746E6F6DLL;
  }
  else {
    return 0x6E6F4D664F796164;
  }
}

uint64_t sub_1A9561FA0(char *a1, char *a2)
{
  return sub_1A950C784(*a1, *a2);
}

uint64_t sub_1A9561FAC()
{
  return sub_1A95C931C();
}

uint64_t sub_1A9561FB4()
{
  return sub_1A94AD194();
}

uint64_t sub_1A9561FBC()
{
  return sub_1A94AD5E8();
}

uint64_t sub_1A9561FC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9561EF8();
  *a1 = result;
  return result;
}

uint64_t sub_1A9561FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9561EC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9562028()
{
  return sub_1A9561EC0(*v0);
}

uint64_t sub_1A9562030@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9561EA0();
  *a1 = result;
  return result;
}

uint64_t sub_1A9562058(uint64_t a1)
{
  unint64_t v2 = sub_1A9561CF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9562094(uint64_t a1)
{
  unint64_t v2 = sub_1A9561CF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A95620D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950C780(*a1, *a2);
}

uint64_t sub_1A95620DC()
{
  return sub_1A95C9328(*v0);
}

uint64_t sub_1A95620E4(uint64_t a1)
{
  return sub_1A94AD190(a1, *v1);
}

uint64_t sub_1A95620EC(uint64_t a1)
{
  return sub_1A94AD5E4(a1, *v1);
}

uint64_t sub_1A95620F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9561EF8();
  *a1 = result;
  return result;
}

uint64_t sub_1A956212C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9561F68(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9562158()
{
  return sub_1A9561F68(*v0);
}

uint64_t sub_1A9562160@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9561F48();
  *a1 = result;
  return result;
}

uint64_t sub_1A9562188(uint64_t a1)
{
  unint64_t v2 = sub_1A9561D40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95621C4(uint64_t a1)
{
  unint64_t v2 = sub_1A9561D40();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL static HourWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    if (*(unsigned char *)(a2 + 32)) {
      return 0;
    }
    BOOL v2 = *(double *)(a1 + 8) == *(double *)(a2 + 8) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
    return v2 && *(double *)(a1 + 24) == *(double *)(a2 + 24);
  }
  return (*(unsigned char *)(a2 + 32) & 1) != 0;
}

uint64_t HourWeatherStatistics.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC268);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9561CF4();
  sub_1A9632970();
  sub_1A9632760();
  if (!v1)
  {
    sub_1A95623D4();
    sub_1A9632720();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A95623D4()
{
  unint64_t result = qword_1E97EC270;
  if (!qword_1E97EC270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC270);
  }
  return result;
}

uint64_t sub_1A9562420@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HourWeatherStatistics.init(from:)(a1, a2);
}

uint64_t sub_1A9562438(void *a1)
{
  return HourWeatherStatistics.encode(to:)(a1);
}

uint64_t sub_1A9562454()
{
  return static HourWeatherStatistics.read(from:)();
}

uint64_t sub_1A956246C()
{
  return HourWeatherStatistics.write(to:)();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HourWeatherStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HourWeatherStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics()
{
  return &type metadata for HourWeatherStatistics;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics.CodingKeys()
{
  return &type metadata for HourWeatherStatistics.CodingKeys;
}

unsigned char *_s13WeatherDaemon21HourWeatherStatisticsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95625D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics.LegacyCodingKeys()
{
  return &type metadata for HourWeatherStatistics.LegacyCodingKeys;
}

unint64_t sub_1A9562614()
{
  unint64_t result = qword_1E97EC278;
  if (!qword_1E97EC278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC278);
  }
  return result;
}

unint64_t sub_1A9562664()
{
  unint64_t result = qword_1E97EC280;
  if (!qword_1E97EC280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC280);
  }
  return result;
}

unint64_t sub_1A95626B4()
{
  unint64_t result = qword_1E97EC288;
  if (!qword_1E97EC288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC288);
  }
  return result;
}

unint64_t sub_1A9562704()
{
  unint64_t result = qword_1E97EC290;
  if (!qword_1E97EC290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC290);
  }
  return result;
}

unint64_t sub_1A9562754()
{
  unint64_t result = qword_1E97EC298;
  if (!qword_1E97EC298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC298);
  }
  return result;
}

unint64_t sub_1A95627A4()
{
  unint64_t result = qword_1E97EC2A0;
  if (!qword_1E97EC2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2A0);
  }
  return result;
}

uint64_t GeoJSON.Feature<>.country.getter()
{
  if (*(void *)(v0 + 40) == 1) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1A9631510();
  return v1;
}

uint64_t GeoJSON.Feature<>.channel.getter()
{
  if (*(void *)(v0 + 40) == 1) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1A9631510();
  return v1;
}

uint64_t dispatch thunk of CloudChannelRegionType.channel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CloudChannelRegionType.country.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CloudChannelRegionType.geometry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CloudChannelRegionType.contains(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CloudChannelMapType.contains(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CloudChannelMapType.regions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A9562900(unint64_t a1, double a2, double a3)
{
  switch(a1 >> 62)
  {
    case 1uLL:
      uint64_t v14 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v7 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v8 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      if (!v14)
      {
        if (!v13) {
          goto LABEL_59;
        }
        goto LABEL_56;
      }
      if (*(void *)(v14 + 16) == 4)
      {
        BOOL v15 = *(double *)(v14 + 32) > a3 || *(double *)(v14 + 48) < a3;
        BOOL v16 = v15 || *(double *)(v14 + 40) > a2;
        BOOL v17 = v16 || *(double *)(v14 + 56) < a2;
        if (!v17 && v13 != 0)
        {
LABEL_56:
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9565320(v7, v8);
          char v29 = Array<A>.contains(_:)(v13);
          goto LABEL_57;
        }
      }
      goto LABEL_59;
    case 2uLL:
      uint64_t v19 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v21 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v20 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v22 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      if (!v19)
      {
        if ((~v21 & 0xF000000000000007) == 0) {
          goto LABEL_59;
        }
        goto LABEL_61;
      }
      if (*(void *)(v19 + 16) == 4)
      {
        BOOL v23 = *(double *)(v19 + 32) > a3 || *(double *)(v19 + 48) < a3;
        BOOL v24 = v23 || *(double *)(v19 + 40) > a2;
        BOOL v25 = v24 || *(double *)(v19 + 56) < a2;
        if (!v25 && (v21 & 0xF000000000000007) != 0xF000000000000007)
        {
LABEL_61:
          sub_1A9631510();
          sub_1A9631510();
          sub_1A94EB758(v21);
          sub_1A9565320(v20, v22);
          char v32 = sub_1A9562900(v21, a2, a3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v21);
          sub_1A95653D8(v20, v22);
          return v32 & 1;
        }
      }
LABEL_59:
      char v28 = 0;
      return v28 & 1;
    case 3uLL:
      long long v27 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      v33[0] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v33[1] = v27;
      uint64_t v33[2] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      sub_1A9565420((uint64_t)v33);
      char v28 = sub_1A9562CA4(a2, a3);
      sub_1A9565480((uint64_t)v33);
      return v28 & 1;
    default:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      if (v6)
      {
        if (*(void *)(v6 + 16) != 4) {
          goto LABEL_59;
        }
        BOOL v9 = *(double *)(v6 + 32) > a3 || *(double *)(v6 + 48) < a3;
        BOOL v10 = v9 || *(double *)(v6 + 40) > a2;
        BOOL v11 = v10 || *(double *)(v6 + 56) < a2;
        if (v11 || v5 == 0) {
          goto LABEL_59;
        }
      }
      else if (!v5)
      {
        goto LABEL_59;
      }
      sub_1A9631510();
      sub_1A9631510();
      sub_1A9565320(v7, v8);
      char v29 = Array<A>.contains(_:)(v5);
LABEL_57:
      char v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A95653D8(v7, v8);
      return v30 & 1;
  }
}

uint64_t sub_1A9562BC8(double a1, double a2)
{
  sub_1A95654FC(v2 + 16, (uint64_t)v11, &qword_1E97EC2B0);
  sub_1A95654FC((uint64_t)v11, (uint64_t)&v12, &qword_1E97EC2B0);
  if ((!v12
     || *(void *)(v12 + 16) == 4
     && (*(double *)(v12 + 32) <= a2 ? (BOOL v5 = *(double *)(v12 + 48) < a2) : (BOOL v5 = 1),
         !v5 ? (BOOL v6 = *(double *)(v12 + 40) > a1) : (BOOL v6 = 1),
         !v6 ? (BOOL v7 = *(double *)(v12 + 56) < a1) : (BOOL v7 = 1),
         !v7))
    && (sub_1A95654FC(v2 + 24, (uint64_t)&v10, &qword_1E97EB018),
        sub_1A95654FC((uint64_t)&v10, (uint64_t)&v13, &qword_1E97EB018),
        (~v13 & 0xF000000000000007) != 0))
  {
    char v8 = sub_1A9562900(v13, a1, a2);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1A9562CA4(double a1, double a2)
{
  uint64_t v3 = *(void *)(v2 + 8);
  if (!v3 || !*(void *)(v3 + 16)) {
    return 0;
  }
  uint64_t v6 = v3 + 32;
  uint64_t v223 = *(void *)(v3 + 16);
  sub_1A9631510();
  uint64_t v7 = v6;
  uint64_t v8 = v223;
  uint64_t v9 = 0;
  uint64_t v221 = v6;
LABEL_4:
  uint64_t v10 = (void *)(v7 + (v9 << 6));
  uint64_t v11 = v10[2];
  unint64_t v12 = v10[3];
  if (v11)
  {
    if (*(void *)(v11 + 16) != 4) {
      goto LABEL_155;
    }
    BOOL v13 = *(double *)(v11 + 32) > a2 || *(double *)(v11 + 48) < a2;
    BOOL v14 = v13 || *(double *)(v11 + 40) > a1;
    BOOL v15 = v14 || *(double *)(v11 + 56) < a1;
    if (v15 || (v12 & 0xF000000000000007) == 0xF000000000000007) {
      goto LABEL_155;
    }
  }
  else if ((~v12 & 0xF000000000000007) == 0)
  {
    goto LABEL_155;
  }
  uint64_t v225 = v10[5];
  uint64_t v224 = v10[4];
  switch(v12 >> 62)
  {
    case 1uLL:
      uint64_t v26 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v27 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v29 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v28 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      if (v26)
      {
        uint64_t v213 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v219 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
        if (*(void *)(v26 + 16) != 4) {
          goto LABEL_155;
        }
        uint64_t v30 = v10[3];
        sub_1A95A01E8(0, 1, v26);
        double v31 = *(double *)(v26 + 32);
        sub_1A9631510();
        sub_1A9631510();
        uint64_t v222 = v30;
        sub_1A94EB758(v30);
        sub_1A9565320(v224, v225);
        sub_1A9631510();
        sub_1A9631510();
        uint64_t v29 = v213;
        sub_1A9565320(v213, v28);
        sub_1A95A01E8(1, 1, v26);
        double v32 = *(double *)(v26 + 40);
        sub_1A95A01E8(2, 1, v26);
        double v33 = *(double *)(v26 + 48);
        sub_1A95A01E8(3, 1, v26);
        if (v31 > a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95653D8(v213, v219);
LABEL_153:
          swift_bridgeObjectRelease();
          goto LABEL_154;
        }
        if (v33 < a2 || v32 > a1 || *(double *)(v26 + 56) < a1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v213;
          uint64_t v65 = v219;
          goto LABEL_152;
        }
      }
      else
      {
        uint64_t v53 = v10[3];
        sub_1A9631510();
        sub_1A9631510();
        uint64_t v222 = v53;
        sub_1A94EB758(v53);
        sub_1A9565320(v224, v225);
        sub_1A9631510();
        sub_1A9565320(v29, v28);
      }
      if (!v27)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v66 = v29;
        uint64_t v67 = v28;
        goto LABEL_144;
      }
      char v54 = Array<A>.contains(_:)(v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A95653D8(v29, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A95654E4(v222);
      sub_1A95653D8(v224, v225);
      uint64_t v8 = v223;
      uint64_t v7 = v221;
      if ((v54 & 1) == 0) {
        goto LABEL_155;
      }
      goto LABEL_267;
    case 2uLL:
      uint64_t v34 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      unint64_t v35 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      if (v34)
      {
        uint64_t v37 = v10[4];
        uint64_t v36 = v10[5];
        if (*(void *)(v34 + 16) != 4) {
          goto LABEL_155;
        }
        BOOL v38 = *(double *)(v34 + 32) > a2 || *(double *)(v34 + 48) < a2;
        BOOL v39 = v38 || *(double *)(v34 + 40) > a1;
        BOOL v40 = v39 || *(double *)(v34 + 56) < a1;
        if (v40 || (v35 & 0xF000000000000007) == 0xF000000000000007) {
          goto LABEL_155;
        }
      }
      else
      {
        uint64_t v37 = v10[4];
        uint64_t v36 = v10[5];
        if ((~v35 & 0xF000000000000007) == 0) {
          goto LABEL_155;
        }
      }
      uint64_t v222 = v10[3];
      uint64_t v209 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v220 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      switch(v35 >> 62)
      {
        case 1uLL:
          uint64_t v68 = *(double **)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v69 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v70 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v71 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v72 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          if (v68)
          {
            uint64_t v201 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
            uint64_t v73 = sub_1A95319F0((uint64_t)v68);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
            if (v73 != 4) {
              goto LABEL_155;
            }
            sub_1A95A01E8(0, 1, v68);
            double v74 = v68[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v72);
            sub_1A9565320(v220, v209);
            sub_1A9631510();
            sub_1A9631510();
            uint64_t v70 = v201;
            sub_1A9565320(v201, v71);
            sub_1A95A01E8(1, 1, v68);
            double v75 = v68[5];
            sub_1A95A01E8(2, 1, v68);
            double v76 = v68[6];
            sub_1A95A01E8(3, 1, v68);
            if (v74 > a2)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95653D8(v201, v71);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v72);
              uint64_t v64 = v220;
              uint64_t v65 = v209;
              goto LABEL_152;
            }
            uint64_t v100 = v72;
            if (v76 < a2 || v75 > a1 || v68[7] < a1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95653D8(v201, v71);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v119 = v72;
LABEL_151:
              sub_1A95654E4(v119);
              uint64_t v64 = v220;
              uint64_t v65 = v209;
              goto LABEL_152;
            }
          }
          else
          {
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            uint64_t v100 = v72;
            sub_1A94EB758(v72);
            sub_1A9565320(v220, v209);
            sub_1A9631510();
            sub_1A9565320(v70, v71);
          }
          if (v69)
          {
            uint64_t v101 = v70;
            char v102 = Array<A>.contains(_:)(v69);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95653D8(v101, v71);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v103 = v100;
            goto LABEL_111;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95653D8(v70, v71);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v120 = v100;
          goto LABEL_143;
        case 2uLL:
          uint64_t v77 = *(double **)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          unint64_t v79 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v78 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v80 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
          uint64_t v81 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          if (v77)
          {
            uint64_t v202 = *(void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
            uint64_t v82 = sub_1A95319F0((uint64_t)v77);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
            if (v82 != 4) {
              goto LABEL_155;
            }
            sub_1A95A01E8(0, 1, v77);
            double v83 = v77[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            uint64_t v207 = v81;
            sub_1A94EB758(v81);
            sub_1A9565320(v220, v209);
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v79);
            sub_1A9565320(v78, v80);
            sub_1A95A01E8(1, 1, v77);
            double v84 = v77[5];
            sub_1A95A01E8(2, 1, v77);
            double v85 = v77[6];
            sub_1A95A01E8(3, 1, v77);
            if (v83 > a2)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v79);
              uint64_t v86 = v78;
              uint64_t v87 = v80;
LABEL_150:
              sub_1A95653D8(v86, v87);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v119 = v207;
              goto LABEL_151;
            }
            if (v85 < a2 || v84 > a1 || v77[7] < a1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v202);
              uint64_t v86 = v78;
              uint64_t v87 = v80;
              goto LABEL_150;
            }
          }
          else
          {
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            uint64_t v207 = v81;
            sub_1A94EB758(v81);
            sub_1A9565320(v220, v209);
            sub_1A9631510();
            sub_1A94EB758(v79);
            sub_1A9565320(v78, v80);
          }
          if ((~v79 & 0xF000000000000007) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v79);
            uint64_t v104 = v78;
LABEL_116:
            uint64_t v105 = v80;
            goto LABEL_142;
          }
          break;
        case 3uLL:
          long long v88 = *(_OWORD *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          v228[0] = *(_OWORD *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          v228[1] = v88;
          v228[2] = *(_OWORD *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v89 = v12;
          uint64_t v208 = v35;
          sub_1A9631510();
          sub_1A9631510();
          sub_1A94EB758(v89);
          sub_1A9565320(v37, v36);
          sub_1A9631510();
          sub_1A9631510();
          sub_1A94EB758(v208);
          sub_1A9565320(v220, v209);
          uint64_t v90 = sub_1A9565420((uint64_t)v228);
          LOBYTE(v89) = sub_1A9562CA4(v90, a1, a2);
          sub_1A9565480((uint64_t)v228);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v208);
          sub_1A95653D8(v220, v209);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v222);
          sub_1A95653D8(v224, v225);
          uint64_t v7 = v221;
          uint64_t v8 = v223;
          if (v89) {
            goto LABEL_267;
          }
          goto LABEL_155;
        default:
          uint64_t v55 = *(double **)(v35 + 16);
          uint64_t v56 = *(void *)(v35 + 24);
          uint64_t v58 = *(void *)(v35 + 32);
          uint64_t v57 = *(void *)(v35 + 40);
          uint64_t v59 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
          if (v55)
          {
            uint64_t v198 = *(void *)(v35 + 24);
            uint64_t v60 = sub_1A95319F0((uint64_t)v55);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
            if (v60 != 4) {
              goto LABEL_155;
            }
            sub_1A95A01E8(0, 1, v55);
            double v61 = v55[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v59);
            sub_1A9565320(v220, v209);
            uint64_t v56 = v198;
            sub_1A9631510();
            sub_1A9631510();
            sub_1A9565320(v58, v57);
            sub_1A95A01E8(1, 1, v55);
            double v62 = v55[5];
            sub_1A95A01E8(2, 1, v55);
            double v63 = v55[6];
            sub_1A95A01E8(3, 1, v55);
            if (v61 > a2)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95653D8(v58, v57);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v59);
              uint64_t v64 = v220;
              uint64_t v65 = v209;
LABEL_152:
              sub_1A95653D8(v64, v65);
              goto LABEL_153;
            }
            uint64_t v207 = v59;
            if (v63 < a2 || v62 > a1 || v55[7] < a1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v86 = v58;
              uint64_t v87 = v57;
              goto LABEL_150;
            }
          }
          else
          {
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v222);
            sub_1A9565320(v224, v225);
            sub_1A9631510();
            sub_1A9631510();
            uint64_t v207 = v59;
            sub_1A94EB758(v59);
            sub_1A9565320(v220, v209);
            sub_1A9631510();
            sub_1A9565320(v58, v57);
          }
          if (!v56) {
            goto LABEL_141;
          }
          uint64_t v92 = sub_1A95319F0(v56);
          if (!v92) {
            goto LABEL_141;
          }
          uint64_t v93 = v92;
          sub_1A95A01E8(0, 1, v56);
          uint64_t v216 = v58;
          uint64_t v200 = v56 + 32;
          uint64_t v94 = sub_1A9631510();
          char v95 = sub_1A9531648(v94, a1, a2);
          swift_bridgeObjectRelease();
          if ((v95 & 1) == 0) {
            goto LABEL_141;
          }
          if (sub_1A95319B4(v56) < 2) {
            goto LABEL_269;
          }
          if (v93 < 1) {
            goto LABEL_273;
          }
          sub_1A95319BC(1, v56);
          sub_1A95319BC(v93, v56);
          if (v93 == 1) {
            goto LABEL_269;
          }
          uint64_t v203 = v57;
          unint64_t v199 = (2 * v93) | 1;
          sub_1A95319D8(1, 1, v56, v200, 1, v199);
          swift_bridgeObjectRetain_n();
          uint64_t v96 = sub_1A9631510();
          char v97 = sub_1A9531648(v96, a1, a2);
          swift_bridgeObjectRelease();
          if (v97) {
            goto LABEL_106;
          }
          if (v93 == 2) {
            goto LABEL_268;
          }
          sub_1A95319D8(2, 1, v56, v200, 1, v199);
          uint64_t v98 = sub_1A9631510();
          char v99 = sub_1A9531648(v98, a1, a2);
          swift_bridgeObjectRelease();
          if (v99)
          {
LABEL_106:
            swift_bridgeObjectRelease_n();
            uint64_t v57 = v203;
            uint64_t v58 = v216;
LABEL_141:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v104 = v58;
            uint64_t v105 = v57;
LABEL_142:
            sub_1A95653D8(v104, v105);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v120 = v207;
LABEL_143:
            sub_1A95654E4(v120);
            uint64_t v66 = v220;
            uint64_t v67 = v209;
            goto LABEL_144;
          }
          if (v93 == 3)
          {
LABEL_268:
            swift_bridgeObjectRelease_n();
            uint64_t v57 = v203;
            uint64_t v58 = v216;
LABEL_269:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95653D8(v58, v57);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v207);
            uint64_t v184 = v220;
            uint64_t v185 = v209;
            goto LABEL_266;
          }
          uint64_t v147 = 7;
          while (1)
          {
            sub_1A95319D8(v147 - 4, 1, v56, v200, 1, v199);
            uint64_t v148 = v147 - 3;
            if (__OFADD__(v147 - 4, 1)) {
              goto LABEL_272;
            }
            uint64_t v149 = sub_1A9631510();
            char v150 = sub_1A9531648(v149, a1, a2);
            swift_bridgeObjectRelease();
            if (v150) {
              goto LABEL_106;
            }
            ++v147;
            if (v148 == v93) {
              goto LABEL_268;
            }
          }
      }
      uint64_t v206 = v78;
      switch(v79 >> 62)
      {
        case 1uLL:
          uint64_t v204 = v79;
          uint64_t v121 = v79 & 0x3FFFFFFFFFFFFFFFLL;
          v123 = *(double **)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v122 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v124 = *(void *)(v121 + 32);
          uint64_t v125 = *(void *)(v121 + 40);
          if (v123)
          {
            if (sub_1A95319F0((uint64_t)v123) != 4)
            {
LABEL_207:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v204);
              uint64_t v104 = v206;
              uint64_t v105 = v80;
              goto LABEL_142;
            }
            sub_1A95A01E8(0, 1, v123);
            double v126 = v123[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A9565320(v124, v125);
            sub_1A95A01E8(1, 1, v123);
            double v127 = v123[5];
            sub_1A95A01E8(2, 1, v123);
            double v128 = v123[6];
            sub_1A95A01E8(3, 1, v123);
            if (v126 > a2 || v128 < a2 || v127 > a1 || v123[7] < a1)
            {
LABEL_206:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95653D8(v124, v125);
              goto LABEL_207;
            }
          }
          else
          {
            sub_1A9631510();
            sub_1A9565320(v124, v125);
          }
          if (v122)
          {
            char v218 = Array<A>.contains(_:)(v122);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95653D8(v124, v125);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v204);
            sub_1A95653D8(v206, v80);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v207);
            sub_1A95653D8(v220, v209);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v222);
            sub_1A95653D8(v224, v225);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
            if ((v218 & 1) == 0) {
              goto LABEL_155;
            }
            goto LABEL_267;
          }
          goto LABEL_206;
        case 2uLL:
          v129 = *(double **)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v130 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
          uint64_t v217 = v130;
          uint64_t v196 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          if (v129)
          {
            uint64_t v131 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
            uint64_t v132 = v206;
            if (sub_1A95319F0((uint64_t)v129) != 4)
            {
LABEL_189:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95654E4(v79);
              uint64_t v104 = v132;
              goto LABEL_116;
            }
            sub_1A95A01E8(0, 1, v129);
            double v133 = v129[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A94EB758(v131);
            sub_1A9565320(v196, v130);
            sub_1A95A01E8(1, 1, v129);
            double v134 = v129[5];
            sub_1A95A01E8(2, 1, v129);
            double v135 = v129[6];
            sub_1A95A01E8(3, 1, v129);
            if (v133 > a2 || v135 < a2 || v134 > a1)
            {
              swift_bridgeObjectRelease();
LABEL_188:
              swift_bridgeObjectRelease();
              sub_1A95654E4(v131);
              sub_1A95653D8(v196, v130);
              goto LABEL_189;
            }
            double v174 = v129[7];
            unint64_t v146 = v131;
            if (v174 < a1)
            {
              swift_bridgeObjectRelease();
              uint64_t v132 = v206;
              goto LABEL_188;
            }
          }
          else
          {
            uint64_t v192 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
            uint64_t v145 = *(void *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
            sub_1A9631510();
            sub_1A94EB758(v192);
            sub_1A9565320(v145, v130);
            unint64_t v146 = v192;
          }
          if ((~v146 & 0xF000000000000007) == 0)
          {
            uint64_t v131 = v146;
            swift_bridgeObjectRelease();
            uint64_t v132 = v206;
            goto LABEL_188;
          }
          unint64_t v205 = v79;
          uint64_t v193 = v146;
          switch(v146 >> 62)
          {
            case 1uLL:
              v158 = *(double **)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v157 = *(void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
              uint64_t v159 = *(void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
              uint64_t v160 = *(void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
              if (v158)
              {
                if (sub_1A95319F0((uint64_t)v158) != 4) {
                  goto LABEL_225;
                }
                sub_1A95A01E8(0, 1, v158);
                double v161 = v158[4];
                sub_1A9631510();
                sub_1A9631510();
                uint64_t v188 = v160;
                uint64_t v189 = v159;
                sub_1A9565320(v159, v160);
                sub_1A95A01E8(1, 1, v158);
                double v162 = v158[5];
                sub_1A95A01E8(2, 1, v158);
                double v163 = v158[6];
                sub_1A95A01E8(3, 1, v158);
                if (v161 > a2 || v163 < a2 || v162 > a1 || v158[7] < a1) {
                  goto LABEL_249;
                }
              }
              else
              {
                sub_1A9631510();
                uint64_t v188 = v160;
                uint64_t v189 = v159;
                sub_1A9565320(v159, v160);
              }
              if (v157)
              {
                char v173 = Array<A>.contains(_:)(v157);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_250:
                uint64_t v176 = v188;
                uint64_t v175 = v189;
                goto LABEL_251;
              }
LABEL_249:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v173 = 0;
              goto LABEL_250;
            case 2uLL:
              uint64_t v164 = v146 & 0x3FFFFFFFFFFFFFFFLL;
              v165 = *(double **)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
              uint64_t v166 = *(void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
              uint64_t v167 = *(void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
              uint64_t v191 = *(void *)(v164 + 56);
              if (v165)
              {
                if (sub_1A95319F0((uint64_t)v165) != 4) {
                  goto LABEL_225;
                }
                sub_1A95A01E8(0, 1, v165);
                double v168 = v165[4];
                sub_1A9631510();
                sub_1A9631510();
                sub_1A94EB758(v166);
                uint64_t v186 = v167;
                sub_1A9565320(v167, v191);
                sub_1A95A01E8(1, 1, v165);
                double v169 = v165[5];
                sub_1A95A01E8(2, 1, v165);
                double v170 = v165[6];
                sub_1A95A01E8(3, 1, v165);
                if (v168 > a2 || v170 < a2 || v169 > a1 || v165[7] < a1) {
                  goto LABEL_238;
                }
              }
              else
              {
                sub_1A9631510();
                sub_1A94EB758(v166);
                uint64_t v186 = v167;
                sub_1A9565320(v167, v191);
              }
              if ((~v166 & 0xF000000000000007) != 0)
              {
                char v173 = sub_1A9562900(v166, a1, a2);
                swift_bridgeObjectRelease();
LABEL_240:
                swift_bridgeObjectRelease();
                sub_1A95654E4(v166);
                uint64_t v175 = v186;
                uint64_t v176 = v191;
LABEL_251:
                sub_1A95653D8(v175, v176);
                unint64_t v79 = v205;
                uint64_t v130 = v217;
LABEL_252:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1A95654E4(v193);
                sub_1A95653D8(v196, v130);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1A95654E4(v79);
                sub_1A95653D8(v206, v80);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1A95654E4(v207);
                sub_1A95653D8(v220, v209);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1A95654E4(v222);
                sub_1A95653D8(v224, v225);
                uint64_t v8 = v223;
                uint64_t v7 = v221;
                if ((v173 & 1) == 0) {
                  goto LABEL_155;
                }
                goto LABEL_267;
              }
LABEL_238:
              swift_bridgeObjectRelease();
              char v173 = 0;
              goto LABEL_240;
            case 3uLL:
              long long v171 = *(_OWORD *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
              v226[0] = *(_OWORD *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              v226[1] = v171;
              v226[2] = *(_OWORD *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
              uint64_t v172 = sub_1A9565420((uint64_t)v226);
              char v173 = sub_1A9562CA4(v172, a1, a2);
              sub_1A9565480((uint64_t)v226);
              goto LABEL_252;
            default:
              v152 = *(double **)(v146 + 16);
              uint64_t v151 = *(void *)(v146 + 24);
              uint64_t v153 = *(void *)(v146 + 32);
              uint64_t v190 = *(void *)(v146 + 40);
              if (v152)
              {
                if (sub_1A95319F0((uint64_t)v152) != 4)
                {
LABEL_225:
                  char v173 = 0;
                  unint64_t v79 = v205;
                  uint64_t v130 = v217;
                  goto LABEL_252;
                }
                sub_1A95A01E8(0, 1, v152);
                double v154 = v152[4];
                sub_1A9631510();
                sub_1A9631510();
                uint64_t v187 = v153;
                sub_1A9565320(v153, v190);
                sub_1A95A01E8(1, 1, v152);
                double v155 = v152[5];
                sub_1A95A01E8(2, 1, v152);
                double v156 = v152[6];
                sub_1A95A01E8(3, 1, v152);
                if (v154 > a2 || v156 < a2 || v155 > a1 || v152[7] < a1) {
                  goto LABEL_247;
                }
              }
              else
              {
                sub_1A9631510();
                uint64_t v187 = v153;
                sub_1A9565320(v153, v190);
              }
              if (v151)
              {
                char v173 = Array<A>.contains(_:)(v151);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_248;
              }
LABEL_247:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v173 = 0;
LABEL_248:
              uint64_t v176 = v190;
              uint64_t v175 = v187;
              goto LABEL_251;
          }
        case 3uLL:
          long long v136 = *(_OWORD *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          v227[0] = *(_OWORD *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          v227[1] = v136;
          v227[2] = *(_OWORD *)((v79 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v137 = sub_1A9565420((uint64_t)v227);
          char v138 = sub_1A9562CA4(v137, a1, a2);
          sub_1A9565480((uint64_t)v227);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v79);
          sub_1A95653D8(v206, v80);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v207);
          sub_1A95653D8(v220, v209);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95654E4(v222);
          sub_1A95653D8(v224, v225);
          uint64_t v8 = v223;
          uint64_t v7 = v221;
          if (v138) {
            goto LABEL_267;
          }
          goto LABEL_155;
        default:
          unint64_t v111 = v79;
          v112 = *(double **)(v79 + 16);
          uint64_t v113 = *(void *)(v79 + 24);
          uint64_t v115 = *(void *)(v79 + 32);
          uint64_t v114 = *(void *)(v79 + 40);
          uint64_t v204 = v111;
          uint64_t v197 = v114;
          if (v112)
          {
            if (sub_1A95319F0((uint64_t)v112) != 4) {
              goto LABEL_207;
            }
            sub_1A95A01E8(0, 1, v112);
            double v116 = v112[4];
            sub_1A9631510();
            sub_1A9631510();
            sub_1A9565320(v115, v114);
            sub_1A95A01E8(1, 1, v112);
            double v117 = v112[5];
            sub_1A95A01E8(2, 1, v112);
            double v118 = v112[6];
            sub_1A95A01E8(3, 1, v112);
            if (v116 > a2 || v118 < a2 || v117 > a1 || v112[7] < a1)
            {
LABEL_204:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A95653D8(v115, v114);
              goto LABEL_207;
            }
          }
          else
          {
            sub_1A9631510();
            sub_1A9565320(v115, v114);
          }
          if (!v113) {
            goto LABEL_204;
          }
          uint64_t v139 = sub_1A95319F0(v113);
          if (!v139)
          {
            char v102 = 0;
            goto LABEL_246;
          }
          uint64_t v140 = v139;
          sub_1A95A01E8(0, 1, v113);
          uint64_t v195 = v113 + 32;
          uint64_t v141 = sub_1A9631510();
          char v142 = sub_1A9531648(v141, a1, a2);
          swift_bridgeObjectRelease();
          if ((v142 & 1) == 0)
          {
            char v102 = 0;
            goto LABEL_246;
          }
          if (sub_1A95319B4(v113) < 2)
          {
            char v102 = 1;
            goto LABEL_246;
          }
          if (v140 >= 1)
          {
            char v102 = 1;
            sub_1A95319BC(1, v113);
            sub_1A95319BC(v140, v113);
            if (v140 != 1)
            {
              sub_1A95319D8(1, 1, v113, v195, 1, (2 * v140) | 1);
              swift_bridgeObjectRetain_n();
              uint64_t v143 = sub_1A9631510();
              char v144 = sub_1A9531648(v143, a1, a2);
              swift_bridgeObjectRelease();
              if (v144)
              {
LABEL_180:
                char v102 = 0;
LABEL_245:
                swift_bridgeObjectRelease_n();
                goto LABEL_246;
              }
              if (v140 != 2)
              {
                sub_1A95319D8(2, 1, v113, v195, 1, (2 * v140) | 1);
                uint64_t v177 = sub_1A9631510();
                char v178 = sub_1A9531648(v177, a1, a2);
                swift_bridgeObjectRelease();
                if (v178) {
                  goto LABEL_180;
                }
                if (v140 != 3)
                {
                  uint64_t v179 = 7;
                  do
                  {
                    sub_1A95319D8(v179 - 4, 1, v113, v195, 1, (2 * v140) | 1);
                    uint64_t v194 = v179 - 3;
                    if (__OFADD__(v179 - 4, 1)) {
                      goto LABEL_275;
                    }
                    uint64_t v180 = sub_1A9631510();
                    char v181 = sub_1A9531648(v180, a1, a2);
                    swift_bridgeObjectRelease();
                    if (v181) {
                      break;
                    }
                    ++v179;
                  }
                  while (v194 != v140);
                  char v102 = v181 ^ 1;
                  goto LABEL_245;
                }
              }
              char v102 = 1;
              goto LABEL_245;
            }
LABEL_246:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95653D8(v115, v197);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v204);
            sub_1A95653D8(v206, v80);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v103 = v207;
LABEL_111:
            sub_1A95654E4(v103);
            sub_1A95653D8(v220, v209);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A95654E4(v222);
            sub_1A95653D8(v224, v225);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
            if ((v102 & 1) == 0) {
              goto LABEL_155;
            }
            goto LABEL_267;
          }
          break;
      }
      goto LABEL_274;
    case 3uLL:
      long long v42 = *(_OWORD *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      v229[0] = *(_OWORD *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v229[1] = v42;
      v229[2] = *(_OWORD *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v43 = v12;
      sub_1A9631510();
      sub_1A9631510();
      sub_1A94EB758(v43);
      sub_1A9565320(v224, v225);
      uint64_t v44 = sub_1A9565420((uint64_t)v229);
      char v45 = sub_1A9562CA4(v44, a1, a2);
      sub_1A9565480((uint64_t)v229);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A95654E4(v43);
      sub_1A95653D8(v224, v225);
      uint64_t v7 = v221;
      uint64_t v8 = v223;
      if (v45) {
        goto LABEL_267;
      }
      goto LABEL_155;
    default:
      uint64_t v17 = *(void *)(v12 + 16);
      uint64_t v18 = *(void *)(v12 + 24);
      uint64_t v19 = *(void *)(v12 + 32);
      uint64_t v20 = *(void *)(v12 + 40);
      if (v17)
      {
        uint64_t v212 = *(void *)(v12 + 24);
        uint64_t v21 = *(void *)(v12 + 32);
        if (*(void *)(v17 + 16) != 4) {
          goto LABEL_155;
        }
        uint64_t v22 = v10[3];
        sub_1A95A01E8(0, 1, v17);
        double v23 = *(double *)(v17 + 32);
        sub_1A9631510();
        sub_1A9631510();
        uint64_t v222 = v22;
        sub_1A94EB758(v22);
        sub_1A9565320(v224, v225);
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9565320(v19, v20);
        sub_1A95A01E8(1, 1, v17);
        double v24 = *(double *)(v17 + 40);
        sub_1A95A01E8(2, 1, v17);
        double v25 = *(double *)(v17 + 48);
        sub_1A95A01E8(3, 1, v17);
        if (v23 > a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A95653D8(v21, v20);
          swift_bridgeObjectRelease();
          goto LABEL_154;
        }
        if (v25 < a2 || (uint64_t v18 = v212, v24 > a1) || *(double *)(v17 + 56) < a1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v19;
          uint64_t v65 = v20;
          goto LABEL_152;
        }
      }
      else
      {
        uint64_t v46 = v10[3];
        sub_1A9631510();
        sub_1A9631510();
        uint64_t v222 = v46;
        sub_1A94EB758(v46);
        sub_1A9565320(v224, v225);
        sub_1A9631510();
        sub_1A9565320(v19, v20);
      }
      if (!v18
        || (uint64_t v47 = sub_1A95319F0(v18)) == 0
        || (uint64_t v48 = v47,
            sub_1A95A01E8(0, 1, v18),
            uint64_t v215 = v18 + 32,
            uint64_t v49 = sub_1A9631510(),
            char v50 = sub_1A9531648(v49, a1, a2),
            swift_bridgeObjectRelease(),
            (v50 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_77:
        swift_bridgeObjectRelease();
        uint64_t v66 = v19;
        goto LABEL_78;
      }
      if (sub_1A95319B4(v18) <= 1) {
        goto LABEL_262;
      }
      if (v48 < 1) {
        goto LABEL_271;
      }
      sub_1A95319BC(1, v18);
      sub_1A95319BC(v48, v18);
      if (v48 != 1)
      {
        unint64_t v214 = (2 * v48) | 1;
        sub_1A95319D8(1, 1, v18, v215, 1, v214);
        swift_bridgeObjectRetain_n();
        uint64_t v51 = sub_1A9631510();
        char v52 = sub_1A9531648(v51, a1, a2);
        swift_bridgeObjectRelease();
        if (v52) {
          goto LABEL_95;
        }
        if (v48 == 2)
        {
LABEL_263:
          swift_bridgeObjectRelease_n();
          goto LABEL_264;
        }
        sub_1A95319D8(2, 1, v18, v215, 1, v214);
        uint64_t v91 = sub_1A9631510();
        char v210 = sub_1A9531648(v91, a1, a2);
        swift_bridgeObjectRelease();
        if (v210)
        {
LABEL_95:
          swift_bridgeObjectRelease_n();
          goto LABEL_77;
        }
        if (v48 == 3) {
          goto LABEL_263;
        }
        uint64_t v211 = v19;
        uint64_t v106 = 7;
        uint64_t v107 = v18;
        while (1)
        {
          sub_1A95319D8(v106 - 4, 1, v107, v215, 1, v214);
          uint64_t v108 = v106 - 3;
          if (__OFADD__(v106 - 4, 1)) {
            break;
          }
          uint64_t v109 = sub_1A9631510();
          char v110 = sub_1A9531648(v109, a1, a2);
          swift_bridgeObjectRelease();
          if (v110)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v66 = v211;
LABEL_78:
            uint64_t v67 = v20;
LABEL_144:
            sub_1A95653D8(v66, v67);
            swift_bridgeObjectRelease();
LABEL_154:
            swift_bridgeObjectRelease();
            sub_1A95654E4(v222);
            sub_1A95653D8(v224, v225);
            uint64_t v8 = v223;
            uint64_t v7 = v221;
LABEL_155:
            if (++v9 == v8)
            {
              uint64_t v182 = 0;
              goto LABEL_260;
            }
            goto LABEL_4;
          }
          ++v106;
          uint64_t v107 = v18;
          if (v108 == v48)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v184 = v211;
            goto LABEL_265;
          }
        }
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
        JUMPOUT(0x1A9564F40);
      }
LABEL_262:
      swift_bridgeObjectRelease();
LABEL_264:
      swift_bridgeObjectRelease();
      uint64_t v184 = v19;
LABEL_265:
      uint64_t v185 = v20;
LABEL_266:
      sub_1A95653D8(v184, v185);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A95654E4(v222);
      sub_1A95653D8(v224, v225);
LABEL_267:
      uint64_t v182 = 1;
LABEL_260:
      swift_bridgeObjectRelease();
      return v182;
  }
}

unint64_t sub_1A9564F80(double a1, double a2)
{
  unint64_t v5 = *v2;
  swift_retain();
  LOBYTE(v5) = sub_1A9562900(v5, a1, a2);
  swift_release();
  return v5 & 1;
}

uint64_t sub_1A9564FDC()
{
  if (*v0 >> 62 != 3) {
    return MEMORY[0x1E4FBC860];
  }
  if (*(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x18)) {
    uint64_t v1 = *(void *)((*v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  sub_1A9631510();
  uint64_t v2 = sub_1A9565048(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A9565048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1A948FC3C();
    uint64_t v2 = v20;
    unsigned int v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v15 = *(v4 - 2);
      uint64_t v6 = *v4;
      uint64_t v7 = v4[1];
      uint64_t v8 = v4[2];
      uint64_t v9 = v4[3];
      uint64_t v11 = v4[4];
      uint64_t v10 = v4[5];
      sub_1A9631510();
      sub_1A9631510();
      sub_1A94EB758(v7);
      uint64_t v16 = v10;
      sub_1A9565320(v8, v9);
      uint64_t v20 = v2;
      unint64_t v12 = *(void *)(v2 + 16);
      if (v12 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1A948FC3C();
        uint64_t v2 = v20;
      }
      v4 += 8;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC2A8);
      uint64_t v19 = &protocol witness table for <> GeoJSON<A>.Feature;
      BOOL v13 = (void *)swift_allocObject();
      *(void *)&long long v17 = v13;
      v13[2] = v15;
      v13[3] = v5;
      v13[4] = v6;
      uint64_t v13[5] = v7;
      v13[6] = v8;
      v13[7] = v9;
      v13[8] = v11;
      v13[9] = v16;
      *(void *)(v2 + 16) = v12 + 1;
      sub_1A9435A70(&v17, v2 + 40 * v12 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A95651C0(unint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast()) {
    return v2;
  }
LABEL_7:
  sub_1A9632450();
  sub_1A9631EA0();
  sub_1A9631EA0();
  sub_1A9631EA0();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1A96329C0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A9632550();
  __break(1u);
  return result;
}

uint64_t sub_1A9565320(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    sub_1A9631510();
    return sub_1A9631510();
  }
  return result;
}

uint64_t sub_1A9565368()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(void *)(v0 + 40) & 0xF000000000000007) != 0) {
    swift_release();
  }
  if (*(void *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A95653D8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A9565420(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9565320(v2, v3);
  return a1;
}

uint64_t sub_1A9565480(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A95653D8(v2, v3);
  return a1;
}

uint64_t sub_1A95654E4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1A95654FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for CloudChannelMap()
{
  return &type metadata for CloudChannelMap;
}

uint64_t sub_1A9565570()
{
  uint64_t v1 = sub_1A962E3A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v44 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = *v0;
  sub_1A962E370();
  uint64_t v6 = sub_1A944C528(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = *(void *)(v6 + 16);
  unint64_t v7 = *(void *)(v6 + 24);
  if (v8 >= v7 >> 1)
  {
    char v35 = OUTLINED_FUNCTION_3_14(v7);
    uint64_t v6 = sub_1A944C528(v35, v8 + 1, 1, v6);
  }
  *(void *)(v6 + 16) = v8 + 1;
  uint64_t v11 = *(void (**)(void))(v2 + 32);
  uint64_t v9 = v2 + 32;
  uint64_t v10 = v11;
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 48);
  uint64_t v45 = *(void *)(v9 + 40);
  OUTLINED_FUNCTION_0_21();
  v11();
  sub_1A962E370();
  unint64_t v14 = *(void *)(v6 + 16);
  unint64_t v13 = *(void *)(v6 + 24);
  if (v14 >= v13 >> 1)
  {
    char v36 = OUTLINED_FUNCTION_3_14(v13);
    uint64_t v6 = sub_1A944C528(v36, v14 + 1, 1, v6);
  }
  *(void *)(v6 + 16) = v14 + 1;
  unint64_t v42 = v12;
  uint64_t v43 = v6;
  OUTLINED_FUNCTION_0_21();
  v10();
  uint64_t v15 = *(void *)(v46 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    BOOL v39 = v10;
    uint64_t v40 = v9;
    uint64_t v41 = v1;
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_1A9631510();
    sub_1A944C5FC(0, v15, 0);
    uint64_t v16 = v47;
    uint64_t v17 = 0;
    uint64_t v18 = *(void *)(v47 + 16);
    uint64_t v19 = 16 * v18;
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_1_21();
    do
    {
      unint64_t v24 = v18 + v17;
      if (*(unsigned char *)(v20 + v17 + 32)) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = v21;
      }
      if (*(unsigned char *)(v20 + v17 + 32)) {
        unint64_t v26 = 0xEB00000000657275;
      }
      else {
        unint64_t v26 = v23;
      }
      uint64_t v47 = v16;
      unint64_t v27 = *(void *)(v16 + 24);
      uint64_t v28 = v24 + 1;
      if (v24 >= v27 >> 1)
      {
        char v30 = OUTLINED_FUNCTION_3_14(v27);
        sub_1A944C5FC(v30, v28, 1);
        OUTLINED_FUNCTION_1_21();
        OUTLINED_FUNCTION_2_3();
        OUTLINED_FUNCTION_4_17();
        uint64_t v20 = v46;
        uint64_t v16 = v47;
      }
      ++v17;
      *(void *)(v16 + 16) = v28;
      uint64_t v29 = v16 + v19;
      *(void *)(v29 + 32) = v25;
      *(void *)(v29 + 40) = v26;
      v19 += 16;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v10 = v39;
  }
  uint64_t v47 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE268);
  sub_1A944C79C();
  sub_1A9631D00();
  swift_bridgeObjectRelease();
  sub_1A962E370();
  swift_bridgeObjectRelease();
  uint64_t v31 = v43;
  unint64_t v33 = *(void *)(v43 + 16);
  unint64_t v32 = *(void *)(v43 + 24);
  if (v33 >= v32 >> 1)
  {
    char v37 = OUTLINED_FUNCTION_3_14(v32);
    uint64_t v31 = sub_1A944C528(v37, v33 + 1, 1, v31);
  }
  *(void *)(v31 + 16) = v33 + 1;
  OUTLINED_FUNCTION_0_21();
  v10();
  return v31;
}

ValueMetadata *type metadata accessor for MonthlyWeatherStatisticsRequest()
{
  return &type metadata for MonthlyWeatherStatisticsRequest;
}

uint64_t WeatherAvailableDataSetsStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WeatherAvailableDataSetsStore.init()();
  return v0;
}

uint64_t WeatherAvailableDataSetsStore.availableDataSets.getter()
{
  return swift_retain();
}

uint64_t WeatherAvailableDataSetsStore.init()()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_1A9631A80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB6DA3D0 != -1) {
    swift_once();
  }
  if (qword_1EB6DA3C8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA550);
    sub_1A9566520();
    swift_retain();
    uint64_t v7 = sub_1A9631A30();
    if (!v1)
    {
      *(void *)(v0 + 16) = v7;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAA768], v3);
      sub_1A9631A90();
      uint64_t v12 = OUTLINED_FUNCTION_0_25();
      v13(v12);
      swift_release();
      return v2;
    }
    swift_release();
  }
  else
  {
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB6EB630);
    uint64_t v9 = sub_1A96317D0();
    os_log_type_t v10 = sub_1A9632220();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1A9410000, v9, v10, "Failed to create weather available data sets database", v11, 2u);
      MEMORY[0x1AD0F7300](v11, -1, -1);
    }

    sub_1A95664D4();
    swift_allocError();
    swift_willThrow();
  }
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_1A9565C68()
{
  return swift_release();
}

uint64_t WeatherAvailableDataSetsStore.deinit()
{
  swift_release();
  return v0;
}

uint64_t WeatherAvailableDataSetsStore.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A9565D08()
{
  uint64_t v0 = sub_1A9631A40();
  __swift_allocate_value_buffer(v0, qword_1EB6DA3D8);
  uint64_t v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB6DA3D8);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A96317F0();
  uint64_t v3 = (uint8_t *)__swift_project_value_buffer(v2, (uint64_t)qword_1EB6EB630);
  return static Database.Location.protectedLocation(_:logger:)(0xD00000000000001ELL, 0x80000001A9648020, v3, v1);
}

uint64_t static WeatherAvailableDataSetsStore.location.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB6DA3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6DA3D8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static WeatherAvailableDataSetsStore.location.setter(uint64_t a1)
{
  if (qword_1EB6DA3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6DA3D8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static WeatherAvailableDataSetsStore.location.modify())()
{
  if (qword_1EB6DA3F0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A9631A40();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB6DA3D8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WeatherAvailableDataSetsStore.preferredCacheSize.getter@<X0>(void *a1@<X8>)
{
  *a1 = 32;
  uint64_t v2 = *MEMORY[0x1E4FAA740];
  uint64_t v3 = sub_1A9631A60();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1A9566080()
{
  uint64_t v28 = sub_1A9631A10();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  unint64_t v27 = (char *)v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1A9631A20();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v25 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1A9631A00();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A9631A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1A96318A0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A9631A40();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_1A9631A70();
  if (qword_1EB6DA3F0 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB6DA3D8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  static AssertionOptions.weatherAssertions.getter();
  *uint64_t v9 = 32;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAA740], v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAA6F8], v22);
  uint64_t v18 = (uint64_t)v25;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E4FAA718], v24);
  uint64_t v19 = (uint64_t)v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v27, *MEMORY[0x1E4FAA708], v28);
  char v29 = 1;
  uint64_t result = Database.init(location:assertions:journalingMode:recoveryMode:preferredCacheSize:vacuumMode:busyTimeout:)((uint64_t)v16, (uint64_t)v12, v18, v19, (uint64_t)v9, (uint64_t)v5, 0x100000000);
  qword_1EB6DA3C8 = result;
  return result;
}

unint64_t sub_1A95664D4()
{
  unint64_t result = qword_1E97EC2B8;
  if (!qword_1E97EC2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2B8);
  }
  return result;
}

unint64_t sub_1A9566520()
{
  unint64_t result = qword_1EB6DA548;
  if (!qword_1EB6DA548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DA550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA548);
  }
  return result;
}

uint64_t sub_1A9566574()
{
  return sub_1A9565C68();
}

uint64_t method lookup function for WeatherAvailableDataSetsStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherAvailableDataSetsStore);
}

uint64_t dispatch thunk of WeatherAvailableDataSetsStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for WeatherAvailableDataSetsStore.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A956666CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherAvailableDataSetsStore.Errors()
{
  return &type metadata for WeatherAvailableDataSetsStore.Errors;
}

unint64_t sub_1A95666A8()
{
  unint64_t result = qword_1E97EC2C0;
  if (!qword_1E97EC2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2C0);
  }
  return result;
}

_UNKNOWN **sub_1A95666F4()
{
  return &off_1EFFC6F20;
}

unint64_t sub_1A9566704()
{
  unint64_t result = qword_1E97EC2D8;
  if (!qword_1E97EC2D8)
  {
    type metadata accessor for Weather();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2D8);
  }
  return result;
}

uint64_t WDSHMACSigner.__allocating_init(signatureRoundingInterval:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  return v2;
}

BOOL sub_1A9566794(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a1;
      uint64_t v2 = a1 >> 32;
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v2 = *(void *)(a1 + 24);
      break;
    case 3uLL:
      return v3 == v2;
    default:
      uint64_t v3 = 0;
      uint64_t v2 = BYTE6(a2);
      break;
  }
  return v3 == v2;
}

uint64_t sub_1A95667F8(uint64_t a1)
{
  uint64_t v2 = sub_1A9631C40();
  uint64_t v8 = v2;
  uint64_t v9 = sub_1A9567C2C(&qword_1EB6DD9B0, MEMORY[0x1E4F251C8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_1, a1, v2);
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_1A962E4F0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v6;
}

uint64_t sub_1A956693C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE80);
  uint64_t v8 = v2;
  uint64_t v9 = sub_1A9459F18(&qword_1EB6DC2B0, &qword_1EB6DBE80);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_1, a1, v2);
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_1A962E4F0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v6;
}

uint64_t sub_1A9566A78(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC2F0);
  uint64_t v10 = sub_1A9459F18(&qword_1E97EC2F8, &qword_1E97EC2F0);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = *v2 + 32;
  uint64_t v4 = v3 + *(void *)(*v2 + 16);
  sub_1A9631510();
  sub_1A9567BB4(v3, v4, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t WDSHMACSigner.deinit()
{
  return v0;
}

uint64_t WDSHMACSigner.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t WDSHMACSigner.createSignature(with:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v145 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE80);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_1_1();
  uint64_t v141 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE90);
  OUTLINED_FUNCTION_1();
  uint64_t v143 = v9;
  uint64_t v144 = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1_1();
  uint64_t v142 = v10;
  sub_1A9631BF0();
  OUTLINED_FUNCTION_1();
  uint64_t v147 = v12;
  uint64_t v148 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v140 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v146 = (char *)&v126 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEA90);
  MEMORY[0x1F4188790](v16 - 8);
  OUTLINED_FUNCTION_2();
  unint64_t v19 = v18 - v17;
  sub_1A962E450();
  OUTLINED_FUNCTION_1();
  uint64_t v152 = v21;
  uint64_t v153 = v20;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_1();
  uint64_t v151 = v22;
  unint64_t v23 = sub_1A9631DB0();
  OUTLINED_FUNCTION_1();
  uint64_t v154 = v24;
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_2();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v26 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v29 = v28 - v27;
  uint64_t v161 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v31 = v30;
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_2();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = sub_1A962E640();
  if (v37 >> 60 == 15)
  {
    sub_1A9567950();
    OUTLINED_FUNCTION_25();
    *uint64_t v38 = 0;
    return swift_willThrow();
  }
  uint64_t v149 = v36;
  unint64_t v150 = v37;
  uint64_t v139 = v31;
  uint64_t v136 = v3;
  uint64_t v137 = type metadata accessor for WDSAuthenticationContext();
  uint64_t v40 = *(void *)(v4 + 16);
  sub_1A962E6A0();
  if ((unsigned __int128)(v40 * (__int128)60) >> 64 == (60 * v40) >> 63)
  {
    uint64_t v138 = v35;
    sub_1A962E690();
    uint64_t v41 = v161;
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v161);
    if (__swift_getEnumTagSinglePayload(v29, 1, v41) == 1)
    {
      sub_1A944C4D0(v29, &qword_1EB6DE3A0);
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      *unint64_t v42 = 1;
      swift_willThrow();
      return sub_1A9490CE8(v149, v150);
    }
    unint64_t v134 = v19;
    uint64_t v43 = v41;
    unint64_t v44 = v23;
    uint64_t v45 = v138;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32))(v138, v29, v43);
    uint64_t v46 = *(void **)(v4 + 24);
    uint64_t v47 = (void *)sub_1A962E730();
    id v48 = objc_msgSend(v46, sel_stringFromDate_, v47);

    uint64_t v49 = sub_1A9631D60();
    uint64_t v51 = v50;

    sub_1A9631DA0();
    OUTLINED_FUNCTION_13_14();
    uint64_t v131 = v49;
    uint64_t v52 = sub_1A9631D70();
    unint64_t v54 = v53;
    uint64_t v55 = v154 + 8;
    uint64_t v56 = *(void (**)(void))(v154 + 8);
    unint64_t v135 = v44;
    OUTLINED_FUNCTION_103();
    v56();
    if (v54 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v57, 1);
      sub_1A9490CE8(v149, v150);
      uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t))(v139 + 8);
      uint64_t v59 = v45;
LABEL_10:
      uint64_t v64 = v161;
      return v58(v59, v64);
    }
    uint64_t v130 = v51;
    uint64_t v133 = v52;
    unint64_t v132 = v54;
    sub_1A9631DA0();
    OUTLINED_FUNCTION_13_14();
    uint64_t v60 = sub_1A9631D70();
    unint64_t v62 = v61;
    OUTLINED_FUNCTION_103();
    v56();
    if (v62 >> 60 == 15)
    {
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v63, 2);
      sub_1A9490CE8(v133, v132);
      sub_1A9490CE8(v149, v150);
      uint64_t v59 = OUTLINED_FUNCTION_5_29();
      goto LABEL_10;
    }
    double v128 = v56;
    uint64_t v154 = v55;
    uint64_t v129 = v60;
    uint64_t v65 = v134;
    sub_1A962E3C0();
    uint64_t v66 = v153;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v65, 1, v153);
    uint64_t v68 = v161;
    uint64_t v69 = v138;
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_6_23();
      sub_1A944C4D0(v65, &qword_1EB6DEA90);
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v70, 3);
      OUTLINED_FUNCTION_10_14(v129, v62);
      uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t))(v139 + 8);
      uint64_t v59 = v69;
LABEL_18:
      uint64_t v64 = v68;
      return v58(v59, v64);
    }
    unint64_t v127 = v62;
    uint64_t v71 = v151;
    uint64_t v72 = v152;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v151, v65, v66);
    sub_1A962E420();
    uint64_t v73 = sub_1A962E430();
    if (!v74)
    {
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v81, 3);
      OUTLINED_FUNCTION_10_14(v129, v127);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v66);
      goto LABEL_17;
    }
    uint64_t v159 = v73;
    unint64_t v160 = v74;
    uint64_t v157 = 12079;
    unint64_t v158 = 0xE200000000000000;
    uint64_t v155 = 0;
    unint64_t v156 = 0xE000000000000000;
    sub_1A9465524();
    sub_1A9632390();
    swift_bridgeObjectRelease();
    sub_1A9631DA0();
    OUTLINED_FUNCTION_13_14();
    uint64_t v75 = sub_1A9631D70();
    unint64_t v77 = v76;
    swift_bridgeObjectRelease();
    uint64_t v78 = v128;
    OUTLINED_FUNCTION_103();
    v78();
    if (v77 >> 60 == 15)
    {
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v79, 3);
      OUTLINED_FUNCTION_2_28();
      OUTLINED_FUNCTION_34();
      v80();
LABEL_17:
      uint64_t v59 = OUTLINED_FUNCTION_5_29();
      goto LABEL_18;
    }
    uint64_t v82 = (unint64_t *)(a1 + *(int *)(v137 + 32));
    unint64_t v83 = *v82;
    a1 = v82[1];
    sub_1A9631510();
    sub_1A9631DA0();
    OUTLINED_FUNCTION_13_14();
    uint64_t v137 = sub_1A9631D70();
    unint64_t v85 = v84;
    OUTLINED_FUNCTION_103();
    v78();
    uint64_t v86 = v139;
    if (v85 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v87, 4);
      sub_1A9490CE8(v75, v77);
      OUTLINED_FUNCTION_2_28();
LABEL_22:
      OUTLINED_FUNCTION_34();
      v88();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v138, v161);
    }
    unint64_t v126 = v85;
    uint64_t v154 = v75;
    unint64_t v134 = v77;
    uint64_t v90 = v149;
    unint64_t v89 = v150;
    BOOL v91 = sub_1A9566794(v149, v150);
    uint64_t v92 = v152;
    if (v91)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      *uint64_t v93 = 0;
      swift_willThrow();
      sub_1A9490CE8(v137, v126);
      OUTLINED_FUNCTION_3_22(v154);
      sub_1A9490CE8(v133, v132);
      uint64_t v94 = v90;
      unint64_t v95 = v89;
LABEL_27:
      sub_1A9490CE8(v94, v95);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v151, v153);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v138, v161);
    }
    uint64_t v96 = v133;
    unint64_t v97 = v132;
    if (sub_1A9566794(v133, v132))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v98, 1);
      sub_1A9490CE8(v137, v126);
      OUTLINED_FUNCTION_3_22(v154);
      sub_1A9490CE8(v96, v97);
      uint64_t v94 = v149;
      unint64_t v95 = v150;
      goto LABEL_27;
    }
    uint64_t v99 = v129;
    unint64_t v100 = v127;
    if (sub_1A9566794(v129, v127))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_23();
      sub_1A9567950();
      unint64_t v101 = v97;
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v102, 2);
      sub_1A9490CE8(v137, v126);
      sub_1A9490CE8(v154, v134);
      uint64_t v103 = v99;
      unint64_t v104 = v100;
LABEL_33:
      sub_1A9490CE8(v103, v104);
      uint64_t v107 = v133;
      unint64_t v108 = v101;
LABEL_34:
      sub_1A9490CE8(v107, v108);
      sub_1A9490CE8(v149, v150);
      goto LABEL_22;
    }
    unint64_t v135 = v83;
    uint64_t v105 = v154;
    unint64_t v23 = v134;
    if (sub_1A9566794(v154, v134))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A9567950();
      unint64_t v101 = v97;
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v106, 3);
      sub_1A9490CE8(v137, v126);
      sub_1A9490CE8(v105, v23);
      uint64_t v103 = v129;
      unint64_t v104 = v127;
      goto LABEL_33;
    }
    uint64_t v35 = v137;
    unint64_t v109 = v126;
    if (sub_1A9566794(v137, v126))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A9567950();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_4_23(v110, 4);
      sub_1A9490CE8(v35, v109);
      sub_1A9490CE8(v154, v23);
      sub_1A9490CE8(v129, v127);
      uint64_t v107 = v133;
      unint64_t v108 = v132;
      goto LABEL_34;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v159 = v149;
  unint64_t v160 = v150;
  sub_1A9442980(v149, v150);
  unint64_t v111 = v146;
  sub_1A9631BE0();
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v140, v111, v148);
  sub_1A9631C30();
  sub_1A9567C2C(&qword_1EB6DC2B8, MEMORY[0x1E4F25170]);
  sub_1A9631C00();
  uint64_t v159 = v129;
  unint64_t v160 = v127;
  sub_1A956799C();
  sub_1A9631C10();
  uint64_t v112 = v154;
  uint64_t v159 = v154;
  unint64_t v160 = v23;
  OUTLINED_FUNCTION_11_16();
  uint64_t v113 = v133;
  unint64_t v114 = v132;
  uint64_t v159 = v133;
  unint64_t v160 = v132;
  OUTLINED_FUNCTION_11_16();
  unint64_t v115 = v126;
  uint64_t v159 = v35;
  unint64_t v160 = v126;
  sub_1A9631C10();
  uint64_t v116 = v141;
  sub_1A9631C20();
  uint64_t v117 = sub_1A956693C(v116);
  uint64_t v141 = v118;
  sub_1A9490CE8(v35, v115);
  OUTLINED_FUNCTION_3_22(v112);
  sub_1A9490CE8(v113, v114);
  sub_1A9490CE8(v149, v150);
  OUTLINED_FUNCTION_34();
  v119();
  OUTLINED_FUNCTION_34();
  v120();
  OUTLINED_FUNCTION_34();
  v121();
  OUTLINED_FUNCTION_5_29();
  OUTLINED_FUNCTION_34();
  uint64_t result = v122();
  v123 = v145;
  uint64_t v124 = v130;
  *uint64_t v145 = v131;
  v123[1] = v124;
  uint64_t v125 = v141;
  v123[2] = v117;
  v123[3] = v125;
  v123[4] = v135;
  v123[5] = a1;
  return result;
}

unint64_t sub_1A9567950()
{
  unint64_t result = qword_1E97EC2E0;
  if (!qword_1E97EC2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2E0);
  }
  return result;
}

unint64_t sub_1A956799C()
{
  unint64_t result = qword_1EB6DBE88;
  if (!qword_1EB6DBE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE88);
  }
  return result;
}

uint64_t sub_1A95679E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return WDSHMACSigner.createSignature(with:)(a1, a2);
}

uint64_t dispatch thunk of WDSHMACSignerType.createSignature(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for WDSHMACSigner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSHMACSigner);
}

uint64_t dispatch thunk of WDSHMACSigner.__allocating_init(signatureRoundingInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for WDSHMACSigner.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9567B2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSHMACSigner.Errors()
{
  return &type metadata for WDSHMACSigner.Errors;
}

unint64_t sub_1A9567B68()
{
  unint64_t result = qword_1E97EC2E8;
  if (!qword_1E97EC2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC2E8);
  }
  return result;
}

uint64_t sub_1A9567BB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = sub_1A962E600();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = MEMORY[0x1AD0F26D0]();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = MEMORY[0x1AD0F26F0]();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A9567C2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelMapRequest()
{
  return &type metadata for ChannelMapRequest;
}

uint64_t Urgency.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    Urgency.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 5) {
      char v9 = 4;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::Urgency_optional __swiftcall Urgency.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Urgency.rawValue.getter()
{
  uint64_t result = 0x74616964656D6D69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465746365707865;
      break;
    case 2:
      uint64_t result = 0x657275747566;
      break;
    case 3:
      uint64_t result = 1953718640;
      break;
    case 4:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9567E50(unsigned __int8 *a1, char *a2)
{
  return sub_1A950AF64(*a1, *a2);
}

unint64_t sub_1A9567E60()
{
  unint64_t result = qword_1E97EC300;
  if (!qword_1E97EC300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC300);
  }
  return result;
}

uint64_t sub_1A9567EAC()
{
  return sub_1A95C9334(*v0);
}

uint64_t sub_1A9567EB4(uint64_t a1)
{
  return sub_1A94AC198(a1, *v1);
}

uint64_t sub_1A9567EBC()
{
  return sub_1A94ADF74();
}

WeatherDaemon::Urgency_optional sub_1A9567EC4(Swift::String *a1)
{
  return Urgency.init(rawValue:)(*a1);
}

uint64_t sub_1A9567ED0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Urgency.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9567EF8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Urgency.init(from:)(a1, a2);
}

uint64_t sub_1A9567F10()
{
  return sub_1A9631FB0();
}

void sub_1A9567F60(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A9567F78()
{
  return Urgency.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for Urgency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A956805CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Urgency()
{
  return &type metadata for Urgency;
}

unint64_t sub_1A9568094()
{
  unint64_t result = qword_1EB6DB020;
  if (!qword_1EB6DB020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB020);
  }
  return result;
}

uint64_t sub_1A95680E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD120);
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for WeatherRequestOptions();
  sub_1A9568298(a1 + *(int *)(v18 + 48), v13);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_1A944C424(v13, &qword_1EB6DD120);
    sub_1A9631510();
  }
  else
  {
    sub_1A9568300(v13, v17);
    uint64_t v19 = sub_1A962E810();
    __swift_storeEnumTagSinglePayload(v9, 1, 1, v19);
    a2 = sub_1A958DD2C(a2, a3, v9);
    sub_1A944C424(v9, &qword_1EB6DE3A0);
    sub_1A9568364(v17);
  }
  return a2;
}

uint64_t sub_1A9568298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9568300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9568364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void WeatherModel.MissingProductError.product.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

char *initializeBufferWithCopyOfBuffer for WeatherModel(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_1A962E810();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        uint64_t v11 = (int *)type metadata accessor for Metadata();
        v10(&a1[v11[5]], &a2[v11[5]], v9);
        uint64_t v12 = v11[6];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        __dst = v10;
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v12], 1, v9))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          v10(v13, v14, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
        }
        *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
        *(void *)&a1[v11[8]] = *(void *)&a2[v11[8]];
        *(void *)&a1[v11[9]] = *(void *)&a2[v11[9]];
        uint64_t v65 = v11[10];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        uint64_t v68 = *((void *)v67 + 1);
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = v68;
        uint64_t v69 = v11[11];
        uint64_t v70 = &a1[v69];
        uint64_t v71 = &a2[v69];
        uint64_t v72 = *((void *)v71 + 1);
        *(void *)uint64_t v70 = *(void *)v71;
        *((void *)v70 + 1) = v72;
        uint64_t v73 = v11[12];
        unint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        uint64_t v76 = *((void *)v75 + 1);
        *(void *)unint64_t v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        a1[v11[13]] = a2[v11[13]];
        a1[v11[14]] = a2[v11[14]];
        uint64_t v77 = v11[15];
        uint64_t v78 = &a1[v77];
        unint64_t v79 = &a2[v77];
        uint64_t v80 = *((void *)v79 + 1);
        *(void *)uint64_t v78 = *(void *)v79;
        *((void *)v78 + 1) = v80;
        uint64_t v81 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v82 = v81[5];
        unint64_t v83 = &a1[v82];
        unint64_t v84 = &a2[v82];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v9))
        {
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          __dst(v83, v84, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v9);
        }
        *(void *)&a1[v81[6]] = *(void *)&a2[v81[6]];
        *(void *)&a1[v81[7]] = *(void *)&a2[v81[7]];
        *(void *)&a1[v81[8]] = *(void *)&a2[v81[8]];
        *(void *)&a1[v81[9]] = *(void *)&a2[v81[9]];
        a1[v81[10]] = a2[v81[10]];
        a1[v81[11]] = a2[v81[11]];
        *(void *)&a1[v81[12]] = *(void *)&a2[v81[12]];
        *(void *)&a1[v81[13]] = *(void *)&a2[v81[13]];
        *(void *)&a1[v81[14]] = *(void *)&a2[v81[14]];
        *(void *)&a1[v81[15]] = *(void *)&a2[v81[15]];
        *(void *)&a1[v81[16]] = *(void *)&a2[v81[16]];
        *(void *)&a1[v81[17]] = *(void *)&a2[v81[17]];
        *(void *)&a1[v81[18]] = *(void *)&a2[v81[18]];
        *(void *)&a1[v81[19]] = *(void *)&a2[v81[19]];
        *(void *)&a1[v81[20]] = *(void *)&a2[v81[20]];
        *(void *)&a1[v81[21]] = *(void *)&a2[v81[21]];
        *(void *)&a1[v81[22]] = *(void *)&a2[v81[22]];
        *(void *)&a1[v81[23]] = *(void *)&a2[v81[23]];
        *(void *)&a1[v81[24]] = *(void *)&a2[v81[24]];
        *(void *)&a1[v81[25]] = *(void *)&a2[v81[25]];
        *(void *)&a1[v81[26]] = *(void *)&a2[v81[26]];
        uint64_t v233 = v81[27];
        v234 = &a1[v233];
        v235 = &a2[v233];
        *(void *)v234 = *(void *)v235;
        v234[8] = v235[8];
        a1[v81[28]] = a2[v81[28]];
        *(void *)&a1[v81[29]] = *(void *)&a2[v81[29]];
        *(void *)&a1[v81[30]] = *(void *)&a2[v81[30]];
        *(void *)&a1[v81[31]] = *(void *)&a2[v81[31]];
        *(void *)&a1[v81[32]] = *(void *)&a2[v81[32]];
        *(void *)&a1[v81[33]] = *(void *)&a2[v81[33]];
        *(void *)&a1[v81[34]] = *(void *)&a2[v81[34]];
        uint64_t v236 = v81[35];
        v237 = &a1[v236];
        v238 = &a2[v236];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v9))
        {
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
          v240 = __dst;
        }
        else
        {
          v240 = __dst;
          __dst(v237, v238, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v9);
        }
        uint64_t v241 = v81[36];
        v242 = &a1[v241];
        v243 = &a2[v241];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v241], 1, v9))
        {
          uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
        }
        else
        {
          v240(v242, v243, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v9);
        }
        *(void *)&a1[v81[37]] = *(void *)&a2[v81[37]];
        uint64_t v245 = v81[38];
        v246 = &a1[v245];
        v247 = &a2[v245];
        *(void *)v246 = *(void *)v247;
        v246[8] = v247[8];
        uint64_t v248 = v81[39];
        v249 = &a1[v248];
        v250 = &a2[v248];
        *(void *)v249 = *(void *)v250;
        v249[8] = v250[8];
        uint64_t v251 = v81[40];
        v252 = &a1[v251];
        v253 = &a2[v251];
        *(void *)v252 = *(void *)v253;
        v252[8] = v253[8];
        uint64_t v254 = v81[41];
        v255 = &a1[v254];
        v256 = &a2[v254];
        *(void *)v255 = *(void *)v256;
        v255[8] = v256[8];
        *(void *)&a1[v81[42]] = *(void *)&a2[v81[42]];
        *(void *)&a1[v81[43]] = *(void *)&a2[v81[43]];
        uint64_t v257 = v81[44];
        v258 = &a1[v257];
        v259 = &a2[v257];
        *(void *)v258 = *(void *)v259;
        v258[8] = v259[8];
        uint64_t v260 = v81[45];
        v261 = &a1[v260];
        v262 = &a2[v260];
        *(void *)v261 = *(void *)v262;
        v261[8] = v262[8];
        *(void *)&a1[v81[46]] = *(void *)&a2[v81[46]];
        break;
      case 2u:
        uint64_t v16 = sub_1A962E810();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(a1, a2, v16);
        uint64_t v18 = (int *)type metadata accessor for Metadata();
        v17(&a1[v18[5]], &a2[v18[5]], v16);
        uint64_t v19 = v18[6];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v16))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v17(v20, v21, v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v16);
        }
        *(void *)&a1[v18[7]] = *(void *)&a2[v18[7]];
        *(void *)&a1[v18[8]] = *(void *)&a2[v18[8]];
        *(void *)&a1[v18[9]] = *(void *)&a2[v18[9]];
        uint64_t v86 = v18[10];
        uint64_t v87 = &a1[v86];
        long long v88 = &a2[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        uint64_t v90 = v18[11];
        BOOL v91 = &a1[v90];
        uint64_t v92 = &a2[v90];
        uint64_t v93 = *((void *)v92 + 1);
        *(void *)BOOL v91 = *(void *)v92;
        *((void *)v91 + 1) = v93;
        uint64_t v94 = v18[12];
        unint64_t v95 = &a1[v94];
        uint64_t v96 = &a2[v94];
        uint64_t v97 = *((void *)v96 + 1);
        *(void *)unint64_t v95 = *(void *)v96;
        *((void *)v95 + 1) = v97;
        a1[v18[13]] = a2[v18[13]];
        a1[v18[14]] = a2[v18[14]];
        uint64_t v98 = v18[15];
        uint64_t v99 = &a1[v98];
        unint64_t v100 = &a2[v98];
        uint64_t v101 = *((void *)v100 + 1);
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = v101;
        uint64_t v102 = type metadata accessor for DailyForecast();
        *(void *)&a1[*(int *)(v102 + 20)] = *(void *)&a2[*(int *)(v102 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 3u:
        uint64_t v23 = sub_1A962E810();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for Metadata();
        v24(&a1[v25[5]], &a2[v25[5]], v23);
        uint64_t v26 = v25[6];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v26], 1, v23))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v24(v27, v28, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v23);
        }
        *(void *)&a1[v25[7]] = *(void *)&a2[v25[7]];
        *(void *)&a1[v25[8]] = *(void *)&a2[v25[8]];
        *(void *)&a1[v25[9]] = *(void *)&a2[v25[9]];
        uint64_t v103 = v25[10];
        unint64_t v104 = &a1[v103];
        uint64_t v105 = &a2[v103];
        uint64_t v106 = *((void *)v105 + 1);
        *(void *)unint64_t v104 = *(void *)v105;
        *((void *)v104 + 1) = v106;
        uint64_t v107 = v25[11];
        unint64_t v108 = &a1[v107];
        unint64_t v109 = &a2[v107];
        uint64_t v110 = *((void *)v109 + 1);
        *(void *)unint64_t v108 = *(void *)v109;
        *((void *)v108 + 1) = v110;
        uint64_t v111 = v25[12];
        uint64_t v112 = &a1[v111];
        uint64_t v113 = &a2[v111];
        uint64_t v114 = *((void *)v113 + 1);
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = v114;
        a1[v25[13]] = a2[v25[13]];
        a1[v25[14]] = a2[v25[14]];
        uint64_t v115 = v25[15];
        uint64_t v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        uint64_t v118 = *((void *)v117 + 1);
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = v118;
        uint64_t v119 = type metadata accessor for HourlyForecast();
        *(void *)&a1[*(int *)(v119 + 20)] = *(void *)&a2[*(int *)(v119 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v120 = sub_1A962E810();
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          v121(a1, a2, v120);
          uint64_t v122 = (int *)type metadata accessor for Metadata();
          v121(&a1[v122[5]], &a2[v122[5]], v120);
          uint64_t v123 = v122[6];
          uint64_t v124 = &a1[v123];
          uint64_t v125 = &a2[v123];
          v433 = v121;
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v123], 1, v120))
          {
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            v121(v124, v125, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v120);
          }
          *(void *)&a1[v122[7]] = *(void *)&a2[v122[7]];
          *(void *)&a1[v122[8]] = *(void *)&a2[v122[8]];
          *(void *)&a1[v122[9]] = *(void *)&a2[v122[9]];
          uint64_t v304 = v122[10];
          v305 = &a1[v304];
          v306 = &a2[v304];
          uint64_t v307 = *((void *)v306 + 1);
          *(void *)v305 = *(void *)v306;
          *((void *)v305 + 1) = v307;
          uint64_t v308 = v122[11];
          v309 = &a1[v308];
          v310 = &a2[v308];
          uint64_t v311 = *((void *)v310 + 1);
          *(void *)v309 = *(void *)v310;
          *((void *)v309 + 1) = v311;
          uint64_t v312 = v122[12];
          v313 = &a1[v312];
          v314 = &a2[v312];
          uint64_t v315 = *((void *)v314 + 1);
          *(void *)v313 = *(void *)v314;
          *((void *)v313 + 1) = v315;
          a1[v122[13]] = a2[v122[13]];
          a1[v122[14]] = a2[v122[14]];
          uint64_t v316 = v122[15];
          v317 = &a1[v316];
          v318 = &a2[v316];
          uint64_t v319 = *((void *)v318 + 1);
          *(void *)v317 = *(void *)v318;
          *((void *)v317 + 1) = v319;
          *(void *)&a1[HourForecast[5]] = *(void *)&a2[HourForecast[5]];
          *(void *)&a1[HourForecast[6]] = *(void *)&a2[HourForecast[6]];
          uint64_t v320 = HourForecast[7];
          __dstb = &a1[v320];
          v321 = &a2[v320];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v120))
          {
            uint64_t v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dstb, v321, *(void *)(*(void *)(v322 - 8) + 64));
          }
          else
          {
            v433(__dstb, v321, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v120);
          }
          *(void *)&a1[HourForecast[8]] = *(void *)&a2[HourForecast[8]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        break;
      case 5u:
        uint64_t v32 = sub_1A962E810();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        v33(a1, a2, v32);
        uint64_t v34 = (int *)type metadata accessor for Metadata();
        v33(&a1[v34[5]], &a2[v34[5]], v32);
        uint64_t v35 = v34[6];
        uint64_t v36 = &a1[v35];
        unint64_t v37 = &a2[v35];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v32))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          v33(v36, v37, v32);
          __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
        }
        *(void *)&a1[v34[7]] = *(void *)&a2[v34[7]];
        *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
        *(void *)&a1[v34[9]] = *(void *)&a2[v34[9]];
        uint64_t v127 = v34[10];
        double v128 = &a1[v127];
        uint64_t v129 = &a2[v127];
        uint64_t v130 = *((void *)v129 + 1);
        *(void *)double v128 = *(void *)v129;
        *((void *)v128 + 1) = v130;
        uint64_t v131 = v34[11];
        unint64_t v132 = &a1[v131];
        uint64_t v133 = &a2[v131];
        uint64_t v134 = *((void *)v133 + 1);
        *(void *)unint64_t v132 = *(void *)v133;
        *((void *)v132 + 1) = v134;
        uint64_t v135 = v34[12];
        uint64_t v136 = &a1[v135];
        uint64_t v137 = &a2[v135];
        uint64_t v138 = *((void *)v137 + 1);
        *(void *)uint64_t v136 = *(void *)v137;
        *((void *)v136 + 1) = v138;
        a1[v34[13]] = a2[v34[13]];
        a1[v34[14]] = a2[v34[14]];
        uint64_t v139 = v34[15];
        uint64_t v140 = &a1[v139];
        uint64_t v141 = &a2[v139];
        uint64_t v142 = *((void *)v141 + 1);
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        uint64_t v143 = type metadata accessor for PeriodicForecasts();
        *(void *)&a1[*(int *)(v143 + 20)] = *(void *)&a2[*(int *)(v143 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        sub_1A9631510();
        break;
      case 7u:
        uint64_t v39 = sub_1A962E810();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        v40(a1, a2, v39);
        uint64_t v41 = (int *)type metadata accessor for Metadata();
        v40(&a1[v41[5]], &a2[v41[5]], v39);
        uint64_t v42 = v41[6];
        uint64_t v43 = &a1[v42];
        unint64_t v44 = &a2[v42];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v42], 1, v39))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          v40(v43, v44, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v39);
        }
        *(void *)&a1[v41[7]] = *(void *)&a2[v41[7]];
        *(void *)&a1[v41[8]] = *(void *)&a2[v41[8]];
        *(void *)&a1[v41[9]] = *(void *)&a2[v41[9]];
        uint64_t v144 = v41[10];
        uint64_t v145 = &a1[v144];
        unint64_t v146 = &a2[v144];
        uint64_t v147 = *((void *)v146 + 1);
        *(void *)uint64_t v145 = *(void *)v146;
        *((void *)v145 + 1) = v147;
        uint64_t v148 = v41[11];
        uint64_t v149 = &a1[v148];
        unint64_t v150 = &a2[v148];
        uint64_t v151 = *((void *)v150 + 1);
        *(void *)uint64_t v149 = *(void *)v150;
        *((void *)v149 + 1) = v151;
        uint64_t v152 = v41[12];
        uint64_t v153 = &a1[v152];
        uint64_t v154 = &a2[v152];
        uint64_t v155 = *((void *)v154 + 1);
        *(void *)uint64_t v153 = *(void *)v154;
        *((void *)v153 + 1) = v155;
        a1[v41[13]] = a2[v41[13]];
        a1[v41[14]] = a2[v41[14]];
        uint64_t v156 = v41[15];
        uint64_t v157 = &a1[v156];
        unint64_t v158 = &a2[v156];
        uint64_t v159 = *((void *)v158 + 1);
        *(void *)uint64_t v157 = *(void *)v158;
        *((void *)v157 + 1) = v159;
        unint64_t v160 = (int *)type metadata accessor for LocationInfo();
        uint64_t v161 = v160[5];
        double v162 = &a1[v161];
        double v163 = &a2[v161];
        uint64_t v164 = *((void *)v163 + 1);
        *(void *)double v162 = *(void *)v163;
        *((void *)v162 + 1) = v164;
        uint64_t v165 = v160[6];
        uint64_t v166 = &a1[v165];
        uint64_t v167 = &a2[v165];
        uint64_t v168 = *((void *)v167 + 1);
        *(void *)uint64_t v166 = *(void *)v167;
        *((void *)v166 + 1) = v168;
        uint64_t v169 = v160[7];
        double v170 = &a1[v169];
        long long v171 = &a2[v169];
        uint64_t v172 = *((void *)v171 + 1);
        *(void *)double v170 = *(void *)v171;
        *((void *)v170 + 1) = v172;
        uint64_t v173 = v160[8];
        double v174 = &a1[v173];
        uint64_t v175 = &a2[v173];
        uint64_t v176 = *((void *)v175 + 1);
        *(void *)double v174 = *(void *)v175;
        *((void *)v174 + 1) = v176;
        uint64_t v177 = v160[9];
        char v178 = &a1[v177];
        uint64_t v179 = &a2[v177];
        uint64_t v180 = *((void *)v179 + 1);
        *(void *)char v178 = *(void *)v179;
        *((void *)v178 + 1) = v180;
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 8u:
        uint64_t v46 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v46))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v181 = *(int *)(v46 + 20);
          uint64_t v182 = &a1[v181];
          v183 = &a2[v181];
          uint64_t v184 = sub_1A962E810();
          uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16);
          sub_1A9631510();
          v185(v182, v183, v184);
          uint64_t v186 = (int *)type metadata accessor for Metadata();
          v185(&v182[v186[5]], &v183[v186[5]], v184);
          uint64_t v187 = v186[6];
          uint64_t v188 = &v182[v187];
          uint64_t v189 = &v183[v187];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v183[v187], 1, v184))
          {
            uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            v185(v188, v189, v184);
            __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v184);
          }
          *(void *)&v182[v186[7]] = *(void *)&v183[v186[7]];
          *(void *)&v182[v186[8]] = *(void *)&v183[v186[8]];
          *(void *)&v182[v186[9]] = *(void *)&v183[v186[9]];
          uint64_t v323 = v186[10];
          v324 = &v182[v323];
          v325 = &v183[v323];
          uint64_t v326 = *((void *)v325 + 1);
          *(void *)v324 = *(void *)v325;
          *((void *)v324 + 1) = v326;
          uint64_t v327 = v186[11];
          v328 = &v182[v327];
          v329 = &v183[v327];
          uint64_t v330 = *((void *)v329 + 1);
          *(void *)v328 = *(void *)v329;
          *((void *)v328 + 1) = v330;
          uint64_t v331 = v186[12];
          v332 = &v182[v331];
          v333 = &v183[v331];
          uint64_t v334 = *((void *)v333 + 1);
          *(void *)v332 = *(void *)v333;
          *((void *)v332 + 1) = v334;
          v182[v186[13]] = v183[v186[13]];
          v182[v186[14]] = v183[v186[14]];
          uint64_t v335 = v186[15];
          v336 = &v182[v335];
          v337 = &v183[v335];
          uint64_t v338 = *((void *)v337 + 1);
          *(void *)v336 = *(void *)v337;
          *((void *)v336 + 1) = v338;
          *(_OWORD *)&a1[*(int *)(v46 + 24)] = *(_OWORD *)&a2[*(int *)(v46 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v46);
        }
        break;
      case 9u:
        uint64_t v48 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v48))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v191 = sub_1A962E810();
          uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
          v192(a1, a2, v191);
          uint64_t v193 = (int *)type metadata accessor for Metadata();
          v192(&a1[v193[5]], &a2[v193[5]], v191);
          uint64_t v194 = v193[6];
          uint64_t v195 = &a1[v194];
          uint64_t v196 = &a2[v194];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v194], 1, v191))
          {
            uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v195, v196, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            v192(v195, v196, v191);
            __swift_storeEnumTagSinglePayload((uint64_t)v195, 0, 1, v191);
          }
          *(void *)&a1[v193[7]] = *(void *)&a2[v193[7]];
          *(void *)&a1[v193[8]] = *(void *)&a2[v193[8]];
          *(void *)&a1[v193[9]] = *(void *)&a2[v193[9]];
          uint64_t v339 = v193[10];
          v340 = &a1[v339];
          v341 = &a2[v339];
          uint64_t v342 = *((void *)v341 + 1);
          *(void *)v340 = *(void *)v341;
          *((void *)v340 + 1) = v342;
          uint64_t v343 = v193[11];
          v344 = &a1[v343];
          v345 = &a2[v343];
          uint64_t v346 = *((void *)v345 + 1);
          *(void *)v344 = *(void *)v345;
          *((void *)v344 + 1) = v346;
          uint64_t v347 = v193[12];
          v348 = &a1[v347];
          v349 = &a2[v347];
          uint64_t v350 = *((void *)v349 + 1);
          *(void *)v348 = *(void *)v349;
          *((void *)v348 + 1) = v350;
          a1[v193[13]] = a2[v193[13]];
          a1[v193[14]] = a2[v193[14]];
          uint64_t v351 = v193[15];
          v352 = &a1[v351];
          v353 = &a2[v351];
          uint64_t v354 = *((void *)v353 + 1);
          *(void *)v352 = *(void *)v353;
          *((void *)v352 + 1) = v354;
          *(void *)&a1[*(int *)(v48 + 20)] = *(void *)&a2[*(int *)(v48 + 20)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v48);
        }
        break;
      case 0xAu:
        uint64_t v50 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          uint64_t v198 = sub_1A962E810();
          unint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16);
          v199(a1, a2, v198);
          uint64_t v200 = (int *)type metadata accessor for Metadata();
          v199(&a1[v200[5]], &a2[v200[5]], v198);
          uint64_t v201 = v200[6];
          uint64_t v202 = &a1[v201];
          uint64_t v203 = &a2[v201];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v201], 1, v198))
          {
            uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
          }
          else
          {
            v199(v202, v203, v198);
            __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v198);
          }
          *(void *)&a1[v200[7]] = *(void *)&a2[v200[7]];
          *(void *)&a1[v200[8]] = *(void *)&a2[v200[8]];
          *(void *)&a1[v200[9]] = *(void *)&a2[v200[9]];
          uint64_t v355 = v200[10];
          v356 = &a1[v355];
          v357 = &a2[v355];
          uint64_t v358 = *((void *)v357 + 1);
          *(void *)v356 = *(void *)v357;
          *((void *)v356 + 1) = v358;
          uint64_t v359 = v200[11];
          v360 = &a1[v359];
          v361 = &a2[v359];
          uint64_t v362 = *((void *)v361 + 1);
          *(void *)v360 = *(void *)v361;
          *((void *)v360 + 1) = v362;
          uint64_t v363 = v200[12];
          v364 = &a1[v363];
          v365 = &a2[v363];
          uint64_t v366 = *((void *)v365 + 1);
          *(void *)v364 = *(void *)v365;
          *((void *)v364 + 1) = v366;
          a1[v200[13]] = a2[v200[13]];
          a1[v200[14]] = a2[v200[14]];
          uint64_t v367 = v200[15];
          v368 = &a1[v367];
          v369 = &a2[v367];
          uint64_t v370 = *((void *)v369 + 1);
          *(void *)v368 = *(void *)v369;
          *((void *)v368 + 1) = v370;
          uint64_t v371 = *(int *)(v50 + 20);
          v372 = &a1[v371];
          v373 = &a2[v371];
          uint64_t v374 = *((void *)v373 + 1);
          *(void *)v372 = *(void *)v373;
          *((void *)v372 + 1) = v374;
          *(void *)&a1[*(int *)(v50 + 24)] = *(void *)&a2[*(int *)(v50 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v50);
        }
        break;
      case 0xBu:
        uint64_t v52 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v52))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          uint64_t v205 = sub_1A962E810();
          uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16);
          v206(a1, a2, v205);
          uint64_t v207 = (int *)type metadata accessor for Metadata();
          v206(&a1[v207[5]], &a2[v207[5]], v205);
          uint64_t v208 = v207[6];
          uint64_t v209 = &a1[v208];
          char v210 = &a2[v208];
          __dsta = v206;
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v208], 1, v205))
          {
            uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
          }
          else
          {
            v206(v209, v210, v205);
            __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v205);
          }
          *(void *)&a1[v207[7]] = *(void *)&a2[v207[7]];
          *(void *)&a1[v207[8]] = *(void *)&a2[v207[8]];
          *(void *)&a1[v207[9]] = *(void *)&a2[v207[9]];
          uint64_t v375 = v207[10];
          v376 = &a1[v375];
          v377 = &a2[v375];
          uint64_t v378 = *((void *)v377 + 1);
          *(void *)v376 = *(void *)v377;
          *((void *)v376 + 1) = v378;
          uint64_t v379 = v207[11];
          v380 = &a1[v379];
          v381 = &a2[v379];
          uint64_t v382 = *((void *)v381 + 1);
          *(void *)v380 = *(void *)v381;
          *((void *)v380 + 1) = v382;
          uint64_t v383 = v207[12];
          v384 = &a1[v383];
          v385 = &a2[v383];
          uint64_t v386 = *((void *)v385 + 1);
          *(void *)v384 = *(void *)v385;
          *((void *)v384 + 1) = v386;
          a1[v207[13]] = a2[v207[13]];
          a1[v207[14]] = a2[v207[14]];
          uint64_t v387 = v207[15];
          v388 = &a1[v387];
          v389 = &a2[v387];
          uint64_t v390 = *((void *)v389 + 1);
          *(void *)v388 = *(void *)v389;
          *((void *)v388 + 1) = v390;
          uint64_t v391 = v52[5];
          v392 = &a1[v391];
          v393 = &a2[v391];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v393, 1, v205))
          {
            uint64_t v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v392, v393, *(void *)(*(void *)(v394 - 8) + 64));
            v395 = __dsta;
          }
          else
          {
            v395 = __dsta;
            __dsta(v392, v393, v205);
            __swift_storeEnumTagSinglePayload((uint64_t)v392, 0, 1, v205);
          }
          uint64_t v428 = v52[6];
          v429 = &a1[v428];
          v430 = &a2[v428];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v428], 1, v205))
          {
            uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v429, v430, *(void *)(*(void *)(v431 - 8) + 64));
          }
          else
          {
            v395(v429, v430, v205);
            __swift_storeEnumTagSinglePayload((uint64_t)v429, 0, 1, v205);
          }
          *(void *)&a1[v52[7]] = *(void *)&a2[v52[7]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v52);
        }
        break;
      case 0xCu:
        uint64_t v54 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v54))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v212 = *(int *)(v54 + 20);
          uint64_t v213 = &a1[v212];
          unint64_t v214 = &a2[v212];
          uint64_t v215 = sub_1A962E810();
          uint64_t v216 = *(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16);
          sub_1A9631510();
          v216(v213, v214, v215);
          uint64_t v217 = (int *)type metadata accessor for Metadata();
          v216(&v213[v217[5]], &v214[v217[5]], v215);
          uint64_t v218 = v217[6];
          uint64_t v219 = &v213[v218];
          uint64_t v220 = &v214[v218];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v214[v218], 1, v215))
          {
            uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v219, v220, *(void *)(*(void *)(v221 - 8) + 64));
          }
          else
          {
            v216(v219, v220, v215);
            __swift_storeEnumTagSinglePayload((uint64_t)v219, 0, 1, v215);
          }
          *(void *)&v213[v217[7]] = *(void *)&v214[v217[7]];
          *(void *)&v213[v217[8]] = *(void *)&v214[v217[8]];
          *(void *)&v213[v217[9]] = *(void *)&v214[v217[9]];
          uint64_t v396 = v217[10];
          v397 = &v213[v396];
          v398 = &v214[v396];
          uint64_t v399 = *((void *)v398 + 1);
          *(void *)v397 = *(void *)v398;
          *((void *)v397 + 1) = v399;
          uint64_t v400 = v217[11];
          v401 = &v213[v400];
          v402 = &v214[v400];
          uint64_t v403 = *((void *)v402 + 1);
          *(void *)v401 = *(void *)v402;
          *((void *)v401 + 1) = v403;
          uint64_t v404 = v217[12];
          v405 = &v213[v404];
          v406 = &v214[v404];
          uint64_t v407 = *((void *)v406 + 1);
          *(void *)v405 = *(void *)v406;
          *((void *)v405 + 1) = v407;
          v213[v217[13]] = v214[v217[13]];
          v213[v217[14]] = v214[v217[14]];
          uint64_t v408 = v217[15];
          v409 = &v213[v408];
          v410 = &v214[v408];
          uint64_t v411 = *((void *)v410 + 1);
          *(void *)v409 = *(void *)v410;
          *((void *)v409 + 1) = v411;
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v54);
        }
        break;
      case 0xDu:
        uint64_t v56 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v56))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v222 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v222;
          uint64_t v223 = *(int *)(v56 + 24);
          uint64_t v224 = &a1[v223];
          uint64_t v225 = &a2[v223];
          uint64_t v226 = sub_1A962E810();
          v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16);
          sub_1A9631510();
          sub_1A9631510();
          v227(v224, v225, v226);
          v228 = (int *)type metadata accessor for Metadata();
          v227(&v224[v228[5]], &v225[v228[5]], v226);
          uint64_t v229 = v228[6];
          v230 = &v224[v229];
          v231 = &v225[v229];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v225[v229], 1, v226))
          {
            uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v230, v231, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            v227(v230, v231, v226);
            __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v226);
          }
          *(void *)&v224[v228[7]] = *(void *)&v225[v228[7]];
          *(void *)&v224[v228[8]] = *(void *)&v225[v228[8]];
          *(void *)&v224[v228[9]] = *(void *)&v225[v228[9]];
          uint64_t v412 = v228[10];
          v413 = &v224[v412];
          v414 = &v225[v412];
          uint64_t v415 = *((void *)v414 + 1);
          *(void *)v413 = *(void *)v414;
          *((void *)v413 + 1) = v415;
          uint64_t v416 = v228[11];
          v417 = &v224[v416];
          v418 = &v225[v416];
          uint64_t v419 = *((void *)v418 + 1);
          *(void *)v417 = *(void *)v418;
          *((void *)v417 + 1) = v419;
          uint64_t v420 = v228[12];
          v421 = &v224[v420];
          v422 = &v225[v420];
          uint64_t v423 = *((void *)v422 + 1);
          *(void *)v421 = *(void *)v422;
          *((void *)v421 + 1) = v423;
          v224[v228[13]] = v225[v228[13]];
          v224[v228[14]] = v225[v228[14]];
          uint64_t v424 = v228[15];
          v425 = &v224[v424];
          v426 = &v225[v424];
          uint64_t v427 = *((void *)v426 + 1);
          *(void *)v425 = *(void *)v426;
          *((void *)v425 + 1) = v427;
          *(_OWORD *)&a1[*(int *)(v56 + 28)] = *(_OWORD *)&a2[*(int *)(v56 + 28)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v56);
        }
        break;
      default:
        uint64_t v6 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
        {
          uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v58 = sub_1A962E810();
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          v59(a1, a2, v58);
          uint64_t v60 = (int *)type metadata accessor for Metadata();
          v59(&a1[v60[5]], &a2[v60[5]], v58);
          uint64_t v61 = v60[6];
          unint64_t v62 = &a1[v61];
          double v63 = &a2[v61];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v61], 1, v58))
          {
            uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            v59(v62, v63, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v58);
          }
          *(void *)&a1[v60[7]] = *(void *)&a2[v60[7]];
          *(void *)&a1[v60[8]] = *(void *)&a2[v60[8]];
          *(void *)&a1[v60[9]] = *(void *)&a2[v60[9]];
          uint64_t v263 = v60[10];
          v264 = &a1[v263];
          v265 = &a2[v263];
          uint64_t v266 = *((void *)v265 + 1);
          *(void *)v264 = *(void *)v265;
          *((void *)v264 + 1) = v266;
          uint64_t v267 = v60[11];
          v268 = &a1[v267];
          v269 = &a2[v267];
          uint64_t v270 = *((void *)v269 + 1);
          *(void *)v268 = *(void *)v269;
          *((void *)v268 + 1) = v270;
          uint64_t v271 = v60[12];
          v272 = &a1[v271];
          v273 = &a2[v271];
          __dstc = (void *)*((void *)v273 + 1);
          *(void *)v272 = *(void *)v273;
          *((void *)v272 + 1) = __dstc;
          a1[v60[13]] = a2[v60[13]];
          a1[v60[14]] = a2[v60[14]];
          uint64_t v274 = v60[15];
          v275 = &a1[v274];
          v276 = &a2[v274];
          uint64_t v277 = *((void *)v276 + 1);
          *(void *)v275 = *(void *)v276;
          *((void *)v275 + 1) = v277;
          uint64_t v278 = v6[5];
          v279 = &a1[v278];
          v280 = &a2[v278];
          uint64_t v281 = *((void *)v280 + 1);
          *(void *)v279 = *(void *)v280;
          *((void *)v279 + 1) = v281;
          a1[v6[6]] = a2[v6[6]];
          uint64_t v282 = v6[7];
          v283 = &a1[v282];
          v284 = &a2[v282];
          uint64_t v285 = *((void *)v284 + 1);
          *(void *)v283 = *(void *)v284;
          *((void *)v283 + 1) = v285;
          uint64_t v286 = v6[8];
          v287 = &a1[v286];
          v288 = &a2[v286];
          v287[8] = v288[8];
          *(void *)v287 = *(void *)v288;
          uint64_t v289 = v6[9];
          v290 = &a1[v289];
          v291 = &a2[v289];
          *(void *)v290 = *(void *)v291;
          v290[8] = v291[8];
          a1[v6[10]] = a2[v6[10]];
          uint64_t v292 = v6[11];
          v293 = &a1[v292];
          v294 = &a2[v292];
          uint64_t v295 = *((void *)v294 + 1);
          *(void *)v293 = *(void *)v294;
          *((void *)v293 + 1) = v295;
          uint64_t v296 = v6[12];
          v297 = &a1[v296];
          v298 = &a2[v296];
          uint64_t v299 = *((void *)v298 + 1);
          *(void *)v297 = *(void *)v298;
          *((void *)v297 + 1) = v299;
          *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
          uint64_t v300 = v6[14];
          v301 = &a1[v300];
          v302 = &a2[v300];
          uint64_t v303 = *((void *)v302 + 1);
          *(void *)v301 = *(void *)v302;
          *((void *)v301 + 1) = v303;
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for WeatherModel(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1A956CA3C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1A962E810();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for Metadata();
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        uint64_t v9 = v8[6];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
        }
        *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
        *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
        *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
        uint64_t v62 = v8[10];
        double v63 = &a1[v62];
        uint64_t v64 = &a2[v62];
        *(void *)double v63 = *(void *)v64;
        *((void *)v63 + 1) = *((void *)v64 + 1);
        uint64_t v65 = v8[11];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = *((void *)v67 + 1);
        uint64_t v68 = v8[12];
        uint64_t v69 = &a1[v68];
        uint64_t v70 = &a2[v68];
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        a1[v8[13]] = a2[v8[13]];
        a1[v8[14]] = a2[v8[14]];
        uint64_t v71 = v8[15];
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        unint64_t v74 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v75 = v74[5];
        uint64_t v76 = &a1[v75];
        uint64_t v77 = &a2[v75];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v6))
        {
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          v7(v76, v77, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v6);
        }
        *(void *)&a1[v74[6]] = *(void *)&a2[v74[6]];
        *(void *)&a1[v74[7]] = *(void *)&a2[v74[7]];
        *(void *)&a1[v74[8]] = *(void *)&a2[v74[8]];
        *(void *)&a1[v74[9]] = *(void *)&a2[v74[9]];
        a1[v74[10]] = a2[v74[10]];
        a1[v74[11]] = a2[v74[11]];
        *(void *)&a1[v74[12]] = *(void *)&a2[v74[12]];
        *(void *)&a1[v74[13]] = *(void *)&a2[v74[13]];
        *(void *)&a1[v74[14]] = *(void *)&a2[v74[14]];
        *(void *)&a1[v74[15]] = *(void *)&a2[v74[15]];
        *(void *)&a1[v74[16]] = *(void *)&a2[v74[16]];
        *(void *)&a1[v74[17]] = *(void *)&a2[v74[17]];
        *(void *)&a1[v74[18]] = *(void *)&a2[v74[18]];
        *(void *)&a1[v74[19]] = *(void *)&a2[v74[19]];
        *(void *)&a1[v74[20]] = *(void *)&a2[v74[20]];
        *(void *)&a1[v74[21]] = *(void *)&a2[v74[21]];
        *(void *)&a1[v74[22]] = *(void *)&a2[v74[22]];
        *(void *)&a1[v74[23]] = *(void *)&a2[v74[23]];
        *(void *)&a1[v74[24]] = *(void *)&a2[v74[24]];
        *(void *)&a1[v74[25]] = *(void *)&a2[v74[25]];
        *(void *)&a1[v74[26]] = *(void *)&a2[v74[26]];
        uint64_t v204 = v74[27];
        uint64_t v205 = &a1[v204];
        uint64_t v206 = &a2[v204];
        uint64_t v207 = *(void *)v206;
        v205[8] = v206[8];
        *(void *)uint64_t v205 = v207;
        a1[v74[28]] = a2[v74[28]];
        *(void *)&a1[v74[29]] = *(void *)&a2[v74[29]];
        *(void *)&a1[v74[30]] = *(void *)&a2[v74[30]];
        *(void *)&a1[v74[31]] = *(void *)&a2[v74[31]];
        *(void *)&a1[v74[32]] = *(void *)&a2[v74[32]];
        *(void *)&a1[v74[33]] = *(void *)&a2[v74[33]];
        *(void *)&a1[v74[34]] = *(void *)&a2[v74[34]];
        uint64_t v208 = v74[35];
        uint64_t v209 = &a1[v208];
        char v210 = &a2[v208];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v210, 1, v6))
        {
          uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
          uint64_t v212 = v7;
        }
        else
        {
          uint64_t v212 = v7;
          v7(v209, v210, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v6);
        }
        uint64_t v213 = v74[36];
        unint64_t v214 = &a1[v213];
        uint64_t v215 = &a2[v213];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v213], 1, v6))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          v212(v214, v215, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v6);
        }
        *(void *)&a1[v74[37]] = *(void *)&a2[v74[37]];
        uint64_t v217 = v74[38];
        uint64_t v218 = &a1[v217];
        uint64_t v219 = &a2[v217];
        uint64_t v220 = *(void *)v219;
        v218[8] = v219[8];
        *(void *)uint64_t v218 = v220;
        uint64_t v221 = v74[39];
        uint64_t v222 = &a1[v221];
        uint64_t v223 = &a2[v221];
        uint64_t v224 = *(void *)v223;
        v222[8] = v223[8];
        *(void *)uint64_t v222 = v224;
        uint64_t v225 = v74[40];
        uint64_t v226 = &a1[v225];
        v227 = &a2[v225];
        uint64_t v228 = *(void *)v227;
        v226[8] = v227[8];
        *(void *)uint64_t v226 = v228;
        uint64_t v229 = v74[41];
        v230 = &a1[v229];
        v231 = &a2[v229];
        uint64_t v232 = *(void *)v231;
        v230[8] = v231[8];
        *(void *)v230 = v232;
        *(void *)&a1[v74[42]] = *(void *)&a2[v74[42]];
        *(void *)&a1[v74[43]] = *(void *)&a2[v74[43]];
        uint64_t v233 = v74[44];
        v234 = &a1[v233];
        v235 = &a2[v233];
        uint64_t v236 = *(void *)v235;
        v234[8] = v235[8];
        *(void *)v234 = v236;
        uint64_t v237 = v74[45];
        v238 = &a1[v237];
        uint64_t v239 = &a2[v237];
        uint64_t v240 = *(void *)v239;
        v238[8] = v239[8];
        *(void *)v238 = v240;
        *(void *)&a1[v74[46]] = *(void *)&a2[v74[46]];
        break;
      case 2u:
        uint64_t v13 = sub_1A962E810();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        v14(a1, a2, v13);
        uint64_t v15 = (int *)type metadata accessor for Metadata();
        v14(&a1[v15[5]], &a2[v15[5]], v13);
        uint64_t v16 = v15[6];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v13))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          v14(v17, v18, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
        }
        *(void *)&a1[v15[7]] = *(void *)&a2[v15[7]];
        *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
        *(void *)&a1[v15[9]] = *(void *)&a2[v15[9]];
        uint64_t v79 = v15[10];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        *(void *)uint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = *((void *)v81 + 1);
        uint64_t v82 = v15[11];
        unint64_t v83 = &a1[v82];
        unint64_t v84 = &a2[v82];
        *(void *)unint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v85 = v15[12];
        uint64_t v86 = &a1[v85];
        uint64_t v87 = &a2[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((void *)v86 + 1) = *((void *)v87 + 1);
        a1[v15[13]] = a2[v15[13]];
        a1[v15[14]] = a2[v15[14]];
        uint64_t v88 = v15[15];
        uint64_t v89 = &a1[v88];
        uint64_t v90 = &a2[v88];
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = *((void *)v90 + 1);
        uint64_t v91 = type metadata accessor for DailyForecast();
        *(void *)&a1[*(int *)(v91 + 20)] = *(void *)&a2[*(int *)(v91 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 3u:
        uint64_t v20 = sub_1A962E810();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        v21(a1, a2, v20);
        uint64_t v22 = (int *)type metadata accessor for Metadata();
        v21(&a1[v22[5]], &a2[v22[5]], v20);
        uint64_t v23 = v22[6];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v23], 1, v20))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          v21(v24, v25, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v20);
        }
        *(void *)&a1[v22[7]] = *(void *)&a2[v22[7]];
        *(void *)&a1[v22[8]] = *(void *)&a2[v22[8]];
        *(void *)&a1[v22[9]] = *(void *)&a2[v22[9]];
        uint64_t v92 = v22[10];
        uint64_t v93 = &a1[v92];
        uint64_t v94 = &a2[v92];
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = *((void *)v94 + 1);
        uint64_t v95 = v22[11];
        uint64_t v96 = &a1[v95];
        uint64_t v97 = &a2[v95];
        *(void *)uint64_t v96 = *(void *)v97;
        *((void *)v96 + 1) = *((void *)v97 + 1);
        uint64_t v98 = v22[12];
        uint64_t v99 = &a1[v98];
        unint64_t v100 = &a2[v98];
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = *((void *)v100 + 1);
        a1[v22[13]] = a2[v22[13]];
        a1[v22[14]] = a2[v22[14]];
        uint64_t v101 = v22[15];
        uint64_t v102 = &a1[v101];
        uint64_t v103 = &a2[v101];
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        uint64_t v104 = type metadata accessor for HourlyForecast();
        *(void *)&a1[*(int *)(v104 + 20)] = *(void *)&a2[*(int *)(v104 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v105 = sub_1A962E810();
          uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
          v106(a1, a2, v105);
          uint64_t v107 = (int *)type metadata accessor for Metadata();
          v106(&a1[v107[5]], &a2[v107[5]], v105);
          uint64_t v108 = v107[6];
          unint64_t v109 = &a1[v108];
          uint64_t v110 = &a2[v108];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v108], 1, v105))
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            v106(v109, v110, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
          }
          *(void *)&a1[v107[7]] = *(void *)&a2[v107[7]];
          *(void *)&a1[v107[8]] = *(void *)&a2[v107[8]];
          *(void *)&a1[v107[9]] = *(void *)&a2[v107[9]];
          uint64_t v276 = v107[10];
          uint64_t v277 = &a1[v276];
          uint64_t v278 = &a2[v276];
          *(void *)uint64_t v277 = *(void *)v278;
          *((void *)v277 + 1) = *((void *)v278 + 1);
          uint64_t v279 = v107[11];
          v280 = &a1[v279];
          uint64_t v281 = &a2[v279];
          *(void *)v280 = *(void *)v281;
          *((void *)v280 + 1) = *((void *)v281 + 1);
          uint64_t v282 = v107[12];
          v283 = &a1[v282];
          v284 = &a2[v282];
          *(void *)v283 = *(void *)v284;
          *((void *)v283 + 1) = *((void *)v284 + 1);
          a1[v107[13]] = a2[v107[13]];
          a1[v107[14]] = a2[v107[14]];
          uint64_t v285 = v107[15];
          uint64_t v286 = &a1[v285];
          v287 = &a2[v285];
          *(void *)uint64_t v286 = *(void *)v287;
          *((void *)v286 + 1) = *((void *)v287 + 1);
          *(void *)&a1[HourForecast[5]] = *(void *)&a2[HourForecast[5]];
          *(void *)&a1[HourForecast[6]] = *(void *)&a2[HourForecast[6]];
          uint64_t v288 = HourForecast[7];
          __dst = &a1[v288];
          uint64_t v289 = &a2[v288];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v289, 1, v105))
          {
            uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dst, v289, *(void *)(*(void *)(v290 - 8) + 64));
          }
          else
          {
            v106(__dst, v289, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v105);
          }
          *(void *)&a1[HourForecast[8]] = *(void *)&a2[HourForecast[8]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        break;
      case 5u:
        uint64_t v29 = sub_1A962E810();
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        v30(a1, a2, v29);
        uint64_t v31 = (int *)type metadata accessor for Metadata();
        v30(&a1[v31[5]], &a2[v31[5]], v29);
        uint64_t v32 = v31[6];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v32], 1, v29))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v30(v33, v34, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v29);
        }
        *(void *)&a1[v31[7]] = *(void *)&a2[v31[7]];
        *(void *)&a1[v31[8]] = *(void *)&a2[v31[8]];
        *(void *)&a1[v31[9]] = *(void *)&a2[v31[9]];
        uint64_t v112 = v31[10];
        uint64_t v113 = &a1[v112];
        uint64_t v114 = &a2[v112];
        *(void *)uint64_t v113 = *(void *)v114;
        *((void *)v113 + 1) = *((void *)v114 + 1);
        uint64_t v115 = v31[11];
        uint64_t v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = *((void *)v117 + 1);
        uint64_t v118 = v31[12];
        uint64_t v119 = &a1[v118];
        uint64_t v120 = &a2[v118];
        *(void *)uint64_t v119 = *(void *)v120;
        *((void *)v119 + 1) = *((void *)v120 + 1);
        a1[v31[13]] = a2[v31[13]];
        a1[v31[14]] = a2[v31[14]];
        uint64_t v121 = v31[15];
        uint64_t v122 = &a1[v121];
        uint64_t v123 = &a2[v121];
        *(void *)uint64_t v122 = *(void *)v123;
        *((void *)v122 + 1) = *((void *)v123 + 1);
        uint64_t v124 = type metadata accessor for PeriodicForecasts();
        *(void *)&a1[*(int *)(v124 + 20)] = *(void *)&a2[*(int *)(v124 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        sub_1A9631510();
        break;
      case 7u:
        uint64_t v36 = sub_1A962E810();
        unint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        v37(a1, a2, v36);
        uint64_t v38 = (int *)type metadata accessor for Metadata();
        v37(&a1[v38[5]], &a2[v38[5]], v36);
        uint64_t v39 = v38[6];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v39], 1, v36))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v37(v40, v41, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v36);
        }
        *(void *)&a1[v38[7]] = *(void *)&a2[v38[7]];
        *(void *)&a1[v38[8]] = *(void *)&a2[v38[8]];
        *(void *)&a1[v38[9]] = *(void *)&a2[v38[9]];
        uint64_t v125 = v38[10];
        uint64_t v126 = &a1[v125];
        uint64_t v127 = &a2[v125];
        *(void *)uint64_t v126 = *(void *)v127;
        *((void *)v126 + 1) = *((void *)v127 + 1);
        uint64_t v128 = v38[11];
        uint64_t v129 = &a1[v128];
        uint64_t v130 = &a2[v128];
        *(void *)uint64_t v129 = *(void *)v130;
        *((void *)v129 + 1) = *((void *)v130 + 1);
        uint64_t v131 = v38[12];
        unint64_t v132 = &a1[v131];
        uint64_t v133 = &a2[v131];
        *(void *)unint64_t v132 = *(void *)v133;
        *((void *)v132 + 1) = *((void *)v133 + 1);
        a1[v38[13]] = a2[v38[13]];
        a1[v38[14]] = a2[v38[14]];
        uint64_t v134 = v38[15];
        uint64_t v135 = &a1[v134];
        uint64_t v136 = &a2[v134];
        *(void *)uint64_t v135 = *(void *)v136;
        *((void *)v135 + 1) = *((void *)v136 + 1);
        uint64_t v137 = (int *)type metadata accessor for LocationInfo();
        uint64_t v138 = v137[5];
        uint64_t v139 = &a1[v138];
        uint64_t v140 = &a2[v138];
        *(void *)uint64_t v139 = *(void *)v140;
        *((void *)v139 + 1) = *((void *)v140 + 1);
        uint64_t v141 = v137[6];
        uint64_t v142 = &a1[v141];
        uint64_t v143 = &a2[v141];
        *(void *)uint64_t v142 = *(void *)v143;
        *((void *)v142 + 1) = *((void *)v143 + 1);
        uint64_t v144 = v137[7];
        uint64_t v145 = &a1[v144];
        unint64_t v146 = &a2[v144];
        *(void *)uint64_t v145 = *(void *)v146;
        *((void *)v145 + 1) = *((void *)v146 + 1);
        uint64_t v147 = v137[8];
        uint64_t v148 = &a1[v147];
        uint64_t v149 = &a2[v147];
        *(void *)uint64_t v148 = *(void *)v149;
        *((void *)v148 + 1) = *((void *)v149 + 1);
        uint64_t v150 = v137[9];
        uint64_t v151 = &a1[v150];
        uint64_t v152 = &a2[v150];
        *(void *)uint64_t v151 = *(void *)v152;
        *((void *)v151 + 1) = *((void *)v152 + 1);
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 8u:
        uint64_t v43 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v153 = *(int *)(v43 + 20);
          uint64_t v154 = &a1[v153];
          uint64_t v155 = &a2[v153];
          uint64_t v156 = sub_1A962E810();
          uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
          sub_1A9631510();
          v157(v154, v155, v156);
          unint64_t v158 = (int *)type metadata accessor for Metadata();
          v157(&v154[v158[5]], &v155[v158[5]], v156);
          uint64_t v159 = v158[6];
          unint64_t v160 = &v154[v159];
          uint64_t v161 = &v155[v159];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v155[v159], 1, v156))
          {
            uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            v157(v160, v161, v156);
            __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v156);
          }
          *(void *)&v154[v158[7]] = *(void *)&v155[v158[7]];
          *(void *)&v154[v158[8]] = *(void *)&v155[v158[8]];
          *(void *)&v154[v158[9]] = *(void *)&v155[v158[9]];
          uint64_t v291 = v158[10];
          uint64_t v292 = &v154[v291];
          v293 = &v155[v291];
          *(void *)uint64_t v292 = *(void *)v293;
          *((void *)v292 + 1) = *((void *)v293 + 1);
          uint64_t v294 = v158[11];
          uint64_t v295 = &v154[v294];
          uint64_t v296 = &v155[v294];
          *(void *)uint64_t v295 = *(void *)v296;
          *((void *)v295 + 1) = *((void *)v296 + 1);
          uint64_t v297 = v158[12];
          v298 = &v154[v297];
          uint64_t v299 = &v155[v297];
          *(void *)v298 = *(void *)v299;
          *((void *)v298 + 1) = *((void *)v299 + 1);
          v154[v158[13]] = v155[v158[13]];
          v154[v158[14]] = v155[v158[14]];
          uint64_t v300 = v158[15];
          v301 = &v154[v300];
          v302 = &v155[v300];
          *(void *)v301 = *(void *)v302;
          *((void *)v301 + 1) = *((void *)v302 + 1);
          *(_OWORD *)&a1[*(int *)(v43 + 24)] = *(_OWORD *)&a2[*(int *)(v43 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v43);
        }
        break;
      case 9u:
        uint64_t v45 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          uint64_t v163 = sub_1A962E810();
          uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
          v164(a1, a2, v163);
          uint64_t v165 = (int *)type metadata accessor for Metadata();
          v164(&a1[v165[5]], &a2[v165[5]], v163);
          uint64_t v166 = v165[6];
          uint64_t v167 = &a1[v166];
          uint64_t v168 = &a2[v166];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v166], 1, v163))
          {
            uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            v164(v167, v168, v163);
            __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, v163);
          }
          *(void *)&a1[v165[7]] = *(void *)&a2[v165[7]];
          *(void *)&a1[v165[8]] = *(void *)&a2[v165[8]];
          *(void *)&a1[v165[9]] = *(void *)&a2[v165[9]];
          uint64_t v303 = v165[10];
          uint64_t v304 = &a1[v303];
          v305 = &a2[v303];
          *(void *)uint64_t v304 = *(void *)v305;
          *((void *)v304 + 1) = *((void *)v305 + 1);
          uint64_t v306 = v165[11];
          uint64_t v307 = &a1[v306];
          uint64_t v308 = &a2[v306];
          *(void *)uint64_t v307 = *(void *)v308;
          *((void *)v307 + 1) = *((void *)v308 + 1);
          uint64_t v309 = v165[12];
          v310 = &a1[v309];
          uint64_t v311 = &a2[v309];
          *(void *)v310 = *(void *)v311;
          *((void *)v310 + 1) = *((void *)v311 + 1);
          a1[v165[13]] = a2[v165[13]];
          a1[v165[14]] = a2[v165[14]];
          uint64_t v312 = v165[15];
          v313 = &a1[v312];
          v314 = &a2[v312];
          *(void *)v313 = *(void *)v314;
          *((void *)v313 + 1) = *((void *)v314 + 1);
          *(void *)&a1[*(int *)(v45 + 20)] = *(void *)&a2[*(int *)(v45 + 20)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        break;
      case 0xAu:
        uint64_t v47 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v170 = sub_1A962E810();
          long long v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
          v171(a1, a2, v170);
          uint64_t v172 = (int *)type metadata accessor for Metadata();
          v171(&a1[v172[5]], &a2[v172[5]], v170);
          uint64_t v173 = v172[6];
          double v174 = &a1[v173];
          uint64_t v175 = &a2[v173];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v173], 1, v170))
          {
            uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
          }
          else
          {
            v171(v174, v175, v170);
            __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v170);
          }
          *(void *)&a1[v172[7]] = *(void *)&a2[v172[7]];
          *(void *)&a1[v172[8]] = *(void *)&a2[v172[8]];
          *(void *)&a1[v172[9]] = *(void *)&a2[v172[9]];
          uint64_t v315 = v172[10];
          uint64_t v316 = &a1[v315];
          v317 = &a2[v315];
          *(void *)uint64_t v316 = *(void *)v317;
          *((void *)v316 + 1) = *((void *)v317 + 1);
          uint64_t v318 = v172[11];
          uint64_t v319 = &a1[v318];
          uint64_t v320 = &a2[v318];
          *(void *)uint64_t v319 = *(void *)v320;
          *((void *)v319 + 1) = *((void *)v320 + 1);
          uint64_t v321 = v172[12];
          uint64_t v322 = &a1[v321];
          uint64_t v323 = &a2[v321];
          *(void *)uint64_t v322 = *(void *)v323;
          *((void *)v322 + 1) = *((void *)v323 + 1);
          a1[v172[13]] = a2[v172[13]];
          a1[v172[14]] = a2[v172[14]];
          uint64_t v324 = v172[15];
          v325 = &a1[v324];
          uint64_t v326 = &a2[v324];
          *(void *)v325 = *(void *)v326;
          *((void *)v325 + 1) = *((void *)v326 + 1);
          uint64_t v327 = *(int *)(v47 + 20);
          v328 = &a1[v327];
          v329 = &a2[v327];
          *(void *)v328 = *(void *)v329;
          *((void *)v328 + 1) = *((void *)v329 + 1);
          *(void *)&a1[*(int *)(v47 + 24)] = *(void *)&a2[*(int *)(v47 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
        }
        break;
      case 0xBu:
        uint64_t v49 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v177 = sub_1A962E810();
          char v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
          v178(a1, a2, v177);
          uint64_t v179 = (int *)type metadata accessor for Metadata();
          v178(&a1[v179[5]], &a2[v179[5]], v177);
          uint64_t v180 = v179[6];
          uint64_t v181 = &a1[v180];
          uint64_t v182 = &a2[v180];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v180], 1, v177))
          {
            uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
          }
          else
          {
            v178(v181, v182, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v177);
          }
          *(void *)&a1[v179[7]] = *(void *)&a2[v179[7]];
          *(void *)&a1[v179[8]] = *(void *)&a2[v179[8]];
          *(void *)&a1[v179[9]] = *(void *)&a2[v179[9]];
          uint64_t v330 = v179[10];
          uint64_t v331 = &a1[v330];
          v332 = &a2[v330];
          *(void *)uint64_t v331 = *(void *)v332;
          *((void *)v331 + 1) = *((void *)v332 + 1);
          uint64_t v333 = v179[11];
          uint64_t v334 = &a1[v333];
          uint64_t v335 = &a2[v333];
          *(void *)uint64_t v334 = *(void *)v335;
          *((void *)v334 + 1) = *((void *)v335 + 1);
          uint64_t v336 = v179[12];
          v337 = &a1[v336];
          uint64_t v338 = &a2[v336];
          *(void *)v337 = *(void *)v338;
          *((void *)v337 + 1) = *((void *)v338 + 1);
          a1[v179[13]] = a2[v179[13]];
          a1[v179[14]] = a2[v179[14]];
          uint64_t v339 = v179[15];
          v340 = &a1[v339];
          v341 = &a2[v339];
          *(void *)v340 = *(void *)v341;
          *((void *)v340 + 1) = *((void *)v341 + 1);
          uint64_t v342 = v49[5];
          uint64_t v343 = &a1[v342];
          v344 = &a2[v342];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v344, 1, v177))
          {
            uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v343, v344, *(void *)(*(void *)(v345 - 8) + 64));
            uint64_t v346 = v178;
          }
          else
          {
            uint64_t v346 = v178;
            v178(v343, v344, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v343, 0, 1, v177);
          }
          uint64_t v371 = v49[6];
          v372 = &a1[v371];
          v373 = &a2[v371];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v371], 1, v177))
          {
            uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v372, v373, *(void *)(*(void *)(v374 - 8) + 64));
          }
          else
          {
            v346(v372, v373, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v177);
          }
          *(void *)&a1[v49[7]] = *(void *)&a2[v49[7]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v49);
        }
        break;
      case 0xCu:
        uint64_t v51 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v51))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v184 = *(int *)(v51 + 20);
          uint64_t v185 = &a1[v184];
          uint64_t v186 = &a2[v184];
          uint64_t v187 = sub_1A962E810();
          uint64_t v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
          sub_1A9631510();
          v188(v185, v186, v187);
          uint64_t v189 = (int *)type metadata accessor for Metadata();
          v188(&v185[v189[5]], &v186[v189[5]], v187);
          uint64_t v190 = v189[6];
          uint64_t v191 = &v185[v190];
          uint64_t v192 = &v186[v190];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v186[v190], 1, v187))
          {
            uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            v188(v191, v192, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v187);
          }
          *(void *)&v185[v189[7]] = *(void *)&v186[v189[7]];
          *(void *)&v185[v189[8]] = *(void *)&v186[v189[8]];
          *(void *)&v185[v189[9]] = *(void *)&v186[v189[9]];
          uint64_t v347 = v189[10];
          v348 = &v185[v347];
          v349 = &v186[v347];
          *(void *)v348 = *(void *)v349;
          *((void *)v348 + 1) = *((void *)v349 + 1);
          uint64_t v350 = v189[11];
          uint64_t v351 = &v185[v350];
          v352 = &v186[v350];
          *(void *)uint64_t v351 = *(void *)v352;
          *((void *)v351 + 1) = *((void *)v352 + 1);
          uint64_t v353 = v189[12];
          uint64_t v354 = &v185[v353];
          uint64_t v355 = &v186[v353];
          *(void *)uint64_t v354 = *(void *)v355;
          *((void *)v354 + 1) = *((void *)v355 + 1);
          v185[v189[13]] = v186[v189[13]];
          v185[v189[14]] = v186[v189[14]];
          uint64_t v356 = v189[15];
          v357 = &v185[v356];
          uint64_t v358 = &v186[v356];
          *(void *)v357 = *(void *)v358;
          *((void *)v357 + 1) = *((void *)v358 + 1);
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v51);
        }
        break;
      case 0xDu:
        uint64_t v53 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          uint64_t v194 = *(int *)(v53 + 24);
          uint64_t v195 = &a1[v194];
          uint64_t v196 = &a2[v194];
          uint64_t v197 = sub_1A962E810();
          uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16);
          sub_1A9631510();
          sub_1A9631510();
          v198(v195, v196, v197);
          unint64_t v199 = (int *)type metadata accessor for Metadata();
          v198(&v195[v199[5]], &v196[v199[5]], v197);
          uint64_t v200 = v199[6];
          uint64_t v201 = &v195[v200];
          uint64_t v202 = &v196[v200];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v196[v200], 1, v197))
          {
            uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            v198(v201, v202, v197);
            __swift_storeEnumTagSinglePayload((uint64_t)v201, 0, 1, v197);
          }
          *(void *)&v195[v199[7]] = *(void *)&v196[v199[7]];
          *(void *)&v195[v199[8]] = *(void *)&v196[v199[8]];
          *(void *)&v195[v199[9]] = *(void *)&v196[v199[9]];
          uint64_t v359 = v199[10];
          v360 = &v195[v359];
          v361 = &v196[v359];
          *(void *)v360 = *(void *)v361;
          *((void *)v360 + 1) = *((void *)v361 + 1);
          uint64_t v362 = v199[11];
          uint64_t v363 = &v195[v362];
          v364 = &v196[v362];
          *(void *)uint64_t v363 = *(void *)v364;
          *((void *)v363 + 1) = *((void *)v364 + 1);
          uint64_t v365 = v199[12];
          uint64_t v366 = &v195[v365];
          uint64_t v367 = &v196[v365];
          *(void *)uint64_t v366 = *(void *)v367;
          *((void *)v366 + 1) = *((void *)v367 + 1);
          v195[v199[13]] = v196[v199[13]];
          v195[v199[14]] = v196[v199[14]];
          uint64_t v368 = v199[15];
          v369 = &v195[v368];
          uint64_t v370 = &v196[v368];
          *(void *)v369 = *(void *)v370;
          *((void *)v369 + 1) = *((void *)v370 + 1);
          *(_OWORD *)&a1[*(int *)(v53 + 28)] = *(_OWORD *)&a2[*(int *)(v53 + 28)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v53);
        }
        break;
      default:
        uint64_t v4 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
        {
          uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_1A962E810();
          uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          v56(a1, a2, v55);
          uint64_t v57 = (int *)type metadata accessor for Metadata();
          v56(&a1[v57[5]], &a2[v57[5]], v55);
          uint64_t v58 = v57[6];
          uint64_t v59 = &a1[v58];
          uint64_t v60 = &a2[v58];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v58], 1, v55))
          {
            uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            v56(v59, v60, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v55);
          }
          *(void *)&a1[v57[7]] = *(void *)&a2[v57[7]];
          *(void *)&a1[v57[8]] = *(void *)&a2[v57[8]];
          *(void *)&a1[v57[9]] = *(void *)&a2[v57[9]];
          uint64_t v241 = v57[10];
          v242 = &a1[v241];
          v243 = &a2[v241];
          *(void *)v242 = *(void *)v243;
          *((void *)v242 + 1) = *((void *)v243 + 1);
          uint64_t v244 = v57[11];
          uint64_t v245 = &a1[v244];
          v246 = &a2[v244];
          *(void *)uint64_t v245 = *(void *)v246;
          *((void *)v245 + 1) = *((void *)v246 + 1);
          uint64_t v247 = v57[12];
          uint64_t v248 = &a1[v247];
          v249 = &a2[v247];
          *(void *)uint64_t v248 = *(void *)v249;
          *((void *)v248 + 1) = *((void *)v249 + 1);
          a1[v57[13]] = a2[v57[13]];
          a1[v57[14]] = a2[v57[14]];
          uint64_t v250 = v57[15];
          uint64_t v251 = &a1[v250];
          v252 = &a2[v250];
          *(void *)uint64_t v251 = *(void *)v252;
          *((void *)v251 + 1) = *((void *)v252 + 1);
          uint64_t v253 = v4[5];
          uint64_t v254 = &a1[v253];
          v255 = &a2[v253];
          *(void *)uint64_t v254 = *(void *)v255;
          *((void *)v254 + 1) = *((void *)v255 + 1);
          a1[v4[6]] = a2[v4[6]];
          uint64_t v256 = v4[7];
          uint64_t v257 = &a1[v256];
          v258 = &a2[v256];
          *(void *)uint64_t v257 = *(void *)v258;
          *((void *)v257 + 1) = *((void *)v258 + 1);
          uint64_t v259 = v4[8];
          uint64_t v260 = &a1[v259];
          v261 = &a2[v259];
          uint64_t v262 = *(void *)v261;
          v260[8] = v261[8];
          *(void *)uint64_t v260 = v262;
          uint64_t v263 = v4[9];
          v264 = &a1[v263];
          v265 = &a2[v263];
          uint64_t v266 = *(void *)v265;
          v264[8] = v265[8];
          *(void *)v264 = v266;
          a1[v4[10]] = a2[v4[10]];
          uint64_t v267 = v4[11];
          v268 = &a1[v267];
          v269 = &a2[v267];
          *(void *)v268 = *(void *)v269;
          *((void *)v268 + 1) = *((void *)v269 + 1);
          uint64_t v270 = v4[12];
          uint64_t v271 = &a1[v270];
          v272 = &a2[v270];
          *(void *)uint64_t v271 = *(void *)v272;
          *((void *)v271 + 1) = *((void *)v272 + 1);
          *(void *)&a1[v4[13]] = *(void *)&a2[v4[13]];
          uint64_t v273 = v4[14];
          uint64_t v274 = &a1[v273];
          v275 = &a2[v273];
          *(void *)uint64_t v274 = *(void *)v275;
          *((void *)v274 + 1) = *((void *)v275 + 1);
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A956CA3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for WeatherModel(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = (int *)type metadata accessor for AirQuality();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
      {
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v57 = sub_1A962E810();
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
        v58((char *)a1, (char *)a2, v57);
        uint64_t v59 = (int *)type metadata accessor for Metadata();
        v58((char *)a1 + v59[5], (char *)a2 + v59[5], v57);
        uint64_t v60 = v59[6];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v60, 1, v57))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v58(v61, v62, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v57);
        }
        *(void *)((char *)a1 + v59[7]) = *(void *)((char *)a2 + v59[7]);
        *(void *)((char *)a1 + v59[8]) = *(void *)((char *)a2 + v59[8]);
        *(void *)((char *)a1 + v59[9]) = *(void *)((char *)a2 + v59[9]);
        *(_OWORD *)((char *)a1 + v59[10]) = *(_OWORD *)((char *)a2 + v59[10]);
        *(_OWORD *)((char *)a1 + v59[11]) = *(_OWORD *)((char *)a2 + v59[11]);
        *(_OWORD *)((char *)a1 + v59[12]) = *(_OWORD *)((char *)a2 + v59[12]);
        *((unsigned char *)a1 + v59[13]) = *((unsigned char *)a2 + v59[13]);
        *((unsigned char *)a1 + v59[14]) = *((unsigned char *)a2 + v59[14]);
        *(_OWORD *)((char *)a1 + v59[15]) = *(_OWORD *)((char *)a2 + v59[15]);
        *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
        *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
        *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
        uint64_t v157 = v6[8];
        unint64_t v158 = (char *)a1 + v157;
        uint64_t v159 = (char *)a2 + v157;
        v158[8] = v159[8];
        *(void *)unint64_t v158 = *(void *)v159;
        uint64_t v160 = v6[9];
        uint64_t v161 = (char *)a1 + v160;
        uint64_t v162 = (char *)a2 + v160;
        *(void *)uint64_t v161 = *(void *)v162;
        v161[8] = v162[8];
        *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
        *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
        *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
      }
      goto LABEL_96;
    case 1u:
      uint64_t v8 = sub_1A962E810();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
      v9((char *)a1, (char *)a2, v8);
      uint64_t v10 = (int *)type metadata accessor for Metadata();
      v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
      uint64_t v11 = v10[6];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      }
      *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
      *(void *)((char *)a1 + v10[8]) = *(void *)((char *)a2 + v10[8]);
      *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
      *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
      *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
      *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
      *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
      *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
      *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
      uint64_t v64 = (int *)type metadata accessor for CurrentWeather();
      uint64_t v65 = v64[5];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v65, 1, v8))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v9(v66, v67, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v8);
      }
      *(void *)((char *)a1 + v64[6]) = *(void *)((char *)a2 + v64[6]);
      *(void *)((char *)a1 + v64[7]) = *(void *)((char *)a2 + v64[7]);
      *(void *)((char *)a1 + v64[8]) = *(void *)((char *)a2 + v64[8]);
      *(void *)((char *)a1 + v64[9]) = *(void *)((char *)a2 + v64[9]);
      *((unsigned char *)a1 + v64[10]) = *((unsigned char *)a2 + v64[10]);
      *((unsigned char *)a1 + v64[11]) = *((unsigned char *)a2 + v64[11]);
      *(void *)((char *)a1 + v64[12]) = *(void *)((char *)a2 + v64[12]);
      *(void *)((char *)a1 + v64[13]) = *(void *)((char *)a2 + v64[13]);
      *(void *)((char *)a1 + v64[14]) = *(void *)((char *)a2 + v64[14]);
      *(void *)((char *)a1 + v64[15]) = *(void *)((char *)a2 + v64[15]);
      *(void *)((char *)a1 + v64[16]) = *(void *)((char *)a2 + v64[16]);
      *(void *)((char *)a1 + v64[17]) = *(void *)((char *)a2 + v64[17]);
      *(void *)((char *)a1 + v64[18]) = *(void *)((char *)a2 + v64[18]);
      *(void *)((char *)a1 + v64[19]) = *(void *)((char *)a2 + v64[19]);
      *(void *)((char *)a1 + v64[20]) = *(void *)((char *)a2 + v64[20]);
      *(void *)((char *)a1 + v64[21]) = *(void *)((char *)a2 + v64[21]);
      *(void *)((char *)a1 + v64[22]) = *(void *)((char *)a2 + v64[22]);
      *(void *)((char *)a1 + v64[23]) = *(void *)((char *)a2 + v64[23]);
      *(void *)((char *)a1 + v64[24]) = *(void *)((char *)a2 + v64[24]);
      *(void *)((char *)a1 + v64[25]) = *(void *)((char *)a2 + v64[25]);
      *(void *)((char *)a1 + v64[26]) = *(void *)((char *)a2 + v64[26]);
      uint64_t v128 = v64[27];
      uint64_t v129 = (char *)a1 + v128;
      uint64_t v130 = (char *)a2 + v128;
      *(void *)uint64_t v129 = *(void *)v130;
      v129[8] = v130[8];
      *((unsigned char *)a1 + v64[28]) = *((unsigned char *)a2 + v64[28]);
      *(void *)((char *)a1 + v64[29]) = *(void *)((char *)a2 + v64[29]);
      *(void *)((char *)a1 + v64[30]) = *(void *)((char *)a2 + v64[30]);
      *(void *)((char *)a1 + v64[31]) = *(void *)((char *)a2 + v64[31]);
      *(void *)((char *)a1 + v64[32]) = *(void *)((char *)a2 + v64[32]);
      *(void *)((char *)a1 + v64[33]) = *(void *)((char *)a2 + v64[33]);
      *(void *)((char *)a1 + v64[34]) = *(void *)((char *)a2 + v64[34]);
      uint64_t v131 = v64[35];
      unint64_t v132 = (char *)a1 + v131;
      uint64_t v133 = (char *)a2 + v131;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v131, 1, v8))
      {
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        v9(v132, v133, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v8);
      }
      uint64_t v135 = v64[36];
      uint64_t v136 = (char *)a1 + v135;
      uint64_t v137 = (char *)a2 + v135;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v135, 1, v8))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        v9(v136, v137, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v8);
      }
      *(void *)((char *)a1 + v64[37]) = *(void *)((char *)a2 + v64[37]);
      uint64_t v139 = v64[38];
      uint64_t v140 = (char *)a1 + v139;
      uint64_t v141 = (char *)a2 + v139;
      *(void *)uint64_t v140 = *(void *)v141;
      v140[8] = v141[8];
      uint64_t v142 = v64[39];
      uint64_t v143 = (char *)a1 + v142;
      uint64_t v144 = (char *)a2 + v142;
      *(void *)uint64_t v143 = *(void *)v144;
      v143[8] = v144[8];
      uint64_t v145 = v64[40];
      unint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = (char *)a2 + v145;
      *(void *)unint64_t v146 = *(void *)v147;
      v146[8] = v147[8];
      uint64_t v148 = v64[41];
      uint64_t v149 = (char *)a1 + v148;
      uint64_t v150 = (char *)a2 + v148;
      *(void *)uint64_t v149 = *(void *)v150;
      v149[8] = v150[8];
      *(void *)((char *)a1 + v64[42]) = *(void *)((char *)a2 + v64[42]);
      *(void *)((char *)a1 + v64[43]) = *(void *)((char *)a2 + v64[43]);
      uint64_t v151 = v64[44];
      uint64_t v152 = (char *)a1 + v151;
      uint64_t v153 = (char *)a2 + v151;
      *(void *)uint64_t v152 = *(void *)v153;
      v152[8] = v153[8];
      uint64_t v154 = v64[45];
      uint64_t v155 = (char *)a1 + v154;
      uint64_t v156 = (char *)a2 + v154;
      *(void *)uint64_t v155 = *(void *)v156;
      v155[8] = v156[8];
      *(void *)((char *)a1 + v64[46]) = *(void *)((char *)a2 + v64[46]);
      goto LABEL_96;
    case 2u:
      uint64_t v15 = sub_1A962E810();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16((char *)a1, (char *)a2, v15);
      uint64_t v17 = (int *)type metadata accessor for Metadata();
      v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
      uint64_t v18 = v17[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v16(v19, v20, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
      }
      *(void *)((char *)a1 + v17[7]) = *(void *)((char *)a2 + v17[7]);
      *(void *)((char *)a1 + v17[8]) = *(void *)((char *)a2 + v17[8]);
      *(void *)((char *)a1 + v17[9]) = *(void *)((char *)a2 + v17[9]);
      *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
      *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
      *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
      *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
      *((unsigned char *)a1 + v17[14]) = *((unsigned char *)a2 + v17[14]);
      *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
      uint64_t v69 = type metadata accessor for DailyForecast();
      *(void *)((char *)a1 + *(int *)(v69 + 20)) = *(void *)((char *)a2 + *(int *)(v69 + 20));
      goto LABEL_96;
    case 3u:
      uint64_t v22 = sub_1A962E810();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23((char *)a1, (char *)a2, v22);
      uint64_t v24 = (int *)type metadata accessor for Metadata();
      v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
      uint64_t v25 = v24[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v23(v26, v27, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
      }
      *(void *)((char *)a1 + v24[7]) = *(void *)((char *)a2 + v24[7]);
      *(void *)((char *)a1 + v24[8]) = *(void *)((char *)a2 + v24[8]);
      *(void *)((char *)a1 + v24[9]) = *(void *)((char *)a2 + v24[9]);
      *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
      *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
      *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
      *((unsigned char *)a1 + v24[13]) = *((unsigned char *)a2 + v24[13]);
      *((unsigned char *)a1 + v24[14]) = *((unsigned char *)a2 + v24[14]);
      *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
      uint64_t v70 = type metadata accessor for HourlyForecast();
      *(void *)((char *)a1 + *(int *)(v70 + 20)) = *(void *)((char *)a2 + *(int *)(v70 + 20));
      goto LABEL_96;
    case 4u:
      uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v71 = sub_1A962E810();
        uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32);
        v72((char *)a1, (char *)a2, v71);
        uint64_t v73 = (int *)type metadata accessor for Metadata();
        v72((char *)a1 + v73[5], (char *)a2 + v73[5], v71);
        uint64_t v74 = v73[6];
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v74, 1, v71))
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          v72(v75, v76, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v71);
        }
        *(void *)((char *)a1 + v73[7]) = *(void *)((char *)a2 + v73[7]);
        *(void *)((char *)a1 + v73[8]) = *(void *)((char *)a2 + v73[8]);
        *(void *)((char *)a1 + v73[9]) = *(void *)((char *)a2 + v73[9]);
        *(_OWORD *)((char *)a1 + v73[10]) = *(_OWORD *)((char *)a2 + v73[10]);
        *(_OWORD *)((char *)a1 + v73[11]) = *(_OWORD *)((char *)a2 + v73[11]);
        *(_OWORD *)((char *)a1 + v73[12]) = *(_OWORD *)((char *)a2 + v73[12]);
        *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
        *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
        *(_OWORD *)((char *)a1 + v73[15]) = *(_OWORD *)((char *)a2 + v73[15]);
        *(void *)((char *)a1 + HourForecast[5]) = *(void *)((char *)a2 + HourForecast[5]);
        *(void *)((char *)a1 + HourForecast[6]) = *(void *)((char *)a2 + HourForecast[6]);
        uint64_t v163 = HourForecast[7];
        uint64_t v164 = (char *)a1 + v163;
        uint64_t v165 = (char *)a2 + v163;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v163, 1, v71))
        {
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
        }
        else
        {
          v72(v164, v165, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v71);
        }
        *(void *)((char *)a1 + HourForecast[8]) = *(void *)((char *)a2 + HourForecast[8]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
      }
      goto LABEL_96;
    case 5u:
      uint64_t v31 = sub_1A962E810();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32((char *)a1, (char *)a2, v31);
      uint64_t v33 = (int *)type metadata accessor for Metadata();
      v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
      uint64_t v34 = v33[6];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v32(v35, v36, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
      }
      *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
      *(void *)((char *)a1 + v33[8]) = *(void *)((char *)a2 + v33[8]);
      *(void *)((char *)a1 + v33[9]) = *(void *)((char *)a2 + v33[9]);
      *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
      *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
      *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
      *((unsigned char *)a1 + v33[13]) = *((unsigned char *)a2 + v33[13]);
      *((unsigned char *)a1 + v33[14]) = *((unsigned char *)a2 + v33[14]);
      *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
      uint64_t v78 = type metadata accessor for PeriodicForecasts();
      *(void *)((char *)a1 + *(int *)(v78 + 20)) = *(void *)((char *)a2 + *(int *)(v78 + 20));
      goto LABEL_96;
    case 7u:
      uint64_t v38 = sub_1A962E810();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
      v39((char *)a1, (char *)a2, v38);
      uint64_t v40 = (int *)type metadata accessor for Metadata();
      v39((char *)a1 + v40[5], (char *)a2 + v40[5], v38);
      uint64_t v41 = v40[6];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v41, 1, v38))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        v39(v42, v43, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
      }
      *(void *)((char *)a1 + v40[7]) = *(void *)((char *)a2 + v40[7]);
      *(void *)((char *)a1 + v40[8]) = *(void *)((char *)a2 + v40[8]);
      *(void *)((char *)a1 + v40[9]) = *(void *)((char *)a2 + v40[9]);
      *(_OWORD *)((char *)a1 + v40[10]) = *(_OWORD *)((char *)a2 + v40[10]);
      *(_OWORD *)((char *)a1 + v40[11]) = *(_OWORD *)((char *)a2 + v40[11]);
      *(_OWORD *)((char *)a1 + v40[12]) = *(_OWORD *)((char *)a2 + v40[12]);
      *((unsigned char *)a1 + v40[13]) = *((unsigned char *)a2 + v40[13]);
      *((unsigned char *)a1 + v40[14]) = *((unsigned char *)a2 + v40[14]);
      *(_OWORD *)((char *)a1 + v40[15]) = *(_OWORD *)((char *)a2 + v40[15]);
      uint64_t v79 = (int *)type metadata accessor for LocationInfo();
      *(_OWORD *)((char *)a1 + v79[5]) = *(_OWORD *)((char *)a2 + v79[5]);
      *(_OWORD *)((char *)a1 + v79[6]) = *(_OWORD *)((char *)a2 + v79[6]);
      *(_OWORD *)((char *)a1 + v79[7]) = *(_OWORD *)((char *)a2 + v79[7]);
      *(_OWORD *)((char *)a1 + v79[8]) = *(_OWORD *)((char *)a2 + v79[8]);
      *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)((char *)a2 + v79[9]);
      goto LABEL_96;
    case 8u:
      uint64_t v45 = type metadata accessor for MarineForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
        memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v80 = *(int *)(v45 + 20);
        uint64_t v81 = (char *)a1 + v80;
        uint64_t v82 = (char *)a2 + v80;
        uint64_t v83 = sub_1A962E810();
        unint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
        v84(v81, v82, v83);
        uint64_t v85 = (int *)type metadata accessor for Metadata();
        uint64_t v176 = v84;
        v84(&v81[v85[5]], &v82[v85[5]], v83);
        uint64_t v86 = v85[6];
        __dst = &v81[v86];
        uint64_t v87 = &v82[v86];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v86], 1, v83))
        {
          uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          v176(__dst, v87, v83);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v83);
        }
        *(void *)&v81[v85[7]] = *(void *)&v82[v85[7]];
        *(void *)&v81[v85[8]] = *(void *)&v82[v85[8]];
        *(void *)&v81[v85[9]] = *(void *)&v82[v85[9]];
        *(_OWORD *)&v81[v85[10]] = *(_OWORD *)&v82[v85[10]];
        *(_OWORD *)&v81[v85[11]] = *(_OWORD *)&v82[v85[11]];
        *(_OWORD *)&v81[v85[12]] = *(_OWORD *)&v82[v85[12]];
        v81[v85[13]] = v82[v85[13]];
        v81[v85[14]] = v82[v85[14]];
        *(_OWORD *)&v81[v85[15]] = *(_OWORD *)&v82[v85[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v45 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v45 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
      }
      goto LABEL_96;
    case 9u:
      uint64_t v47 = type metadata accessor for News();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
        memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v89 = sub_1A962E810();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32);
        v90((char *)a1, (char *)a2, v89);
        uint64_t v91 = (int *)type metadata accessor for Metadata();
        v90((char *)a1 + v91[5], (char *)a2 + v91[5], v89);
        uint64_t v92 = v91[6];
        uint64_t v93 = (char *)a1 + v92;
        uint64_t v94 = (char *)a2 + v92;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v92, 1, v89))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v90(v93, v94, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v89);
        }
        *(void *)((char *)a1 + v91[7]) = *(void *)((char *)a2 + v91[7]);
        *(void *)((char *)a1 + v91[8]) = *(void *)((char *)a2 + v91[8]);
        *(void *)((char *)a1 + v91[9]) = *(void *)((char *)a2 + v91[9]);
        *(_OWORD *)((char *)a1 + v91[10]) = *(_OWORD *)((char *)a2 + v91[10]);
        *(_OWORD *)((char *)a1 + v91[11]) = *(_OWORD *)((char *)a2 + v91[11]);
        *(_OWORD *)((char *)a1 + v91[12]) = *(_OWORD *)((char *)a2 + v91[12]);
        *((unsigned char *)a1 + v91[13]) = *((unsigned char *)a2 + v91[13]);
        *((unsigned char *)a1 + v91[14]) = *((unsigned char *)a2 + v91[14]);
        *(_OWORD *)((char *)a1 + v91[15]) = *(_OWORD *)((char *)a2 + v91[15]);
        *(void *)((char *)a1 + *(int *)(v47 + 20)) = *(void *)((char *)a2 + *(int *)(v47 + 20));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
      }
      goto LABEL_96;
    case 0xAu:
      uint64_t v49 = type metadata accessor for WeatherAlerts();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v49))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
        memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v96 = sub_1A962E810();
        uint64_t v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32);
        v97((char *)a1, (char *)a2, v96);
        uint64_t v98 = (int *)type metadata accessor for Metadata();
        v97((char *)a1 + v98[5], (char *)a2 + v98[5], v96);
        uint64_t v99 = v98[6];
        unint64_t v100 = (char *)a1 + v99;
        uint64_t v101 = (char *)a2 + v99;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v99, 1, v96))
        {
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          v97(v100, v101, v96);
          __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v96);
        }
        *(void *)((char *)a1 + v98[7]) = *(void *)((char *)a2 + v98[7]);
        *(void *)((char *)a1 + v98[8]) = *(void *)((char *)a2 + v98[8]);
        *(void *)((char *)a1 + v98[9]) = *(void *)((char *)a2 + v98[9]);
        *(_OWORD *)((char *)a1 + v98[10]) = *(_OWORD *)((char *)a2 + v98[10]);
        *(_OWORD *)((char *)a1 + v98[11]) = *(_OWORD *)((char *)a2 + v98[11]);
        *(_OWORD *)((char *)a1 + v98[12]) = *(_OWORD *)((char *)a2 + v98[12]);
        *((unsigned char *)a1 + v98[13]) = *((unsigned char *)a2 + v98[13]);
        *((unsigned char *)a1 + v98[14]) = *((unsigned char *)a2 + v98[14]);
        *(_OWORD *)((char *)a1 + v98[15]) = *(_OWORD *)((char *)a2 + v98[15]);
        *(_OWORD *)((char *)a1 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v49 + 20));
        *(void *)((char *)a1 + *(int *)(v49 + 24)) = *(void *)((char *)a2 + *(int *)(v49 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v49);
      }
      goto LABEL_96;
    case 0xBu:
      uint64_t v51 = (int *)type metadata accessor for WeatherChange();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v51))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
        memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v103 = sub_1A962E810();
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32);
        v104((char *)a1, (char *)a2, v103);
        uint64_t v105 = (int *)type metadata accessor for Metadata();
        v104((char *)a1 + v105[5], (char *)a2 + v105[5], v103);
        uint64_t v106 = v105[6];
        uint64_t v107 = (char *)a1 + v106;
        uint64_t v108 = (char *)a2 + v106;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v106, 1, v103))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          v104(v107, v108, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v103);
        }
        *(void *)((char *)a1 + v105[7]) = *(void *)((char *)a2 + v105[7]);
        *(void *)((char *)a1 + v105[8]) = *(void *)((char *)a2 + v105[8]);
        *(void *)((char *)a1 + v105[9]) = *(void *)((char *)a2 + v105[9]);
        *(_OWORD *)((char *)a1 + v105[10]) = *(_OWORD *)((char *)a2 + v105[10]);
        *(_OWORD *)((char *)a1 + v105[11]) = *(_OWORD *)((char *)a2 + v105[11]);
        *(_OWORD *)((char *)a1 + v105[12]) = *(_OWORD *)((char *)a2 + v105[12]);
        *((unsigned char *)a1 + v105[13]) = *((unsigned char *)a2 + v105[13]);
        *((unsigned char *)a1 + v105[14]) = *((unsigned char *)a2 + v105[14]);
        *(_OWORD *)((char *)a1 + v105[15]) = *(_OWORD *)((char *)a2 + v105[15]);
        uint64_t v167 = v51[5];
        uint64_t v168 = (char *)a1 + v167;
        uint64_t v169 = (char *)a2 + v167;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v167, 1, v103))
        {
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          v104(v168, v169, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v103);
        }
        uint64_t v171 = v51[6];
        uint64_t v172 = (char *)a1 + v171;
        uint64_t v173 = (char *)a2 + v171;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v171, 1, v103))
        {
          uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          v104(v172, v173, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v103);
        }
        *(void *)((char *)a1 + v51[7]) = *(void *)((char *)a2 + v51[7]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v51);
      }
      goto LABEL_96;
    case 0xCu:
      uint64_t v53 = type metadata accessor for WeatherComparisons();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v53))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
        memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v110 = *(int *)(v53 + 20);
        uint64_t v111 = (char *)a1 + v110;
        uint64_t v112 = (char *)a2 + v110;
        uint64_t v113 = sub_1A962E810();
        uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32);
        v114(v111, v112, v113);
        uint64_t v115 = (int *)type metadata accessor for Metadata();
        v114(&v111[v115[5]], &v112[v115[5]], v113);
        uint64_t v116 = v115[6];
        __dsta = &v111[v116];
        uint64_t v117 = &v112[v116];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v112[v116], 1, v113))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dsta, v117, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          v114(__dsta, v117, v113);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v113);
        }
        *(void *)&v111[v115[7]] = *(void *)&v112[v115[7]];
        *(void *)&v111[v115[8]] = *(void *)&v112[v115[8]];
        *(void *)&v111[v115[9]] = *(void *)&v112[v115[9]];
        *(_OWORD *)&v111[v115[10]] = *(_OWORD *)&v112[v115[10]];
        *(_OWORD *)&v111[v115[11]] = *(_OWORD *)&v112[v115[11]];
        *(_OWORD *)&v111[v115[12]] = *(_OWORD *)&v112[v115[12]];
        v111[v115[13]] = v112[v115[13]];
        v111[v115[14]] = v112[v115[14]];
        *(_OWORD *)&v111[v115[15]] = *(_OWORD *)&v112[v115[15]];
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v53);
      }
      goto LABEL_96;
    case 0xDu:
      uint64_t v55 = type metadata accessor for TideEvents();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v55))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
        memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v119 = *(int *)(v55 + 24);
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = sub_1A962E810();
        uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32);
        v123(v120, v121, v122);
        uint64_t v124 = (int *)type metadata accessor for Metadata();
        uint64_t v177 = v123;
        v123(&v120[v124[5]], &v121[v124[5]], v122);
        uint64_t v125 = v124[6];
        __dstb = &v120[v125];
        uint64_t v126 = &v121[v125];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v121[v125], 1, v122))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dstb, v126, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          v177(__dstb, v126, v122);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v122);
        }
        *(void *)&v120[v124[7]] = *(void *)&v121[v124[7]];
        *(void *)&v120[v124[8]] = *(void *)&v121[v124[8]];
        *(void *)&v120[v124[9]] = *(void *)&v121[v124[9]];
        *(_OWORD *)&v120[v124[10]] = *(_OWORD *)&v121[v124[10]];
        *(_OWORD *)&v120[v124[11]] = *(_OWORD *)&v121[v124[11]];
        *(_OWORD *)&v120[v124[12]] = *(_OWORD *)&v121[v124[12]];
        v120[v124[13]] = v121[v124[13]];
        v120[v124[14]] = v121[v124[14]];
        *(_OWORD *)&v120[v124[15]] = *(_OWORD *)&v121[v124[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v55 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v55 + 28));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v55);
      }
LABEL_96:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for WeatherModel(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A956CA3C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
        {
          uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v57 = sub_1A962E810();
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
          v58((char *)a1, (char *)a2, v57);
          uint64_t v59 = (int *)type metadata accessor for Metadata();
          v58((char *)a1 + v59[5], (char *)a2 + v59[5], v57);
          uint64_t v60 = v59[6];
          uint64_t v61 = (char *)a1 + v60;
          uint64_t v62 = (char *)a2 + v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v60, 1, v57))
          {
            uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            v58(v61, v62, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v57);
          }
          *(void *)((char *)a1 + v59[7]) = *(void *)((char *)a2 + v59[7]);
          *(void *)((char *)a1 + v59[8]) = *(void *)((char *)a2 + v59[8]);
          *(void *)((char *)a1 + v59[9]) = *(void *)((char *)a2 + v59[9]);
          *(_OWORD *)((char *)a1 + v59[10]) = *(_OWORD *)((char *)a2 + v59[10]);
          *(_OWORD *)((char *)a1 + v59[11]) = *(_OWORD *)((char *)a2 + v59[11]);
          *(_OWORD *)((char *)a1 + v59[12]) = *(_OWORD *)((char *)a2 + v59[12]);
          *((unsigned char *)a1 + v59[13]) = *((unsigned char *)a2 + v59[13]);
          *((unsigned char *)a1 + v59[14]) = *((unsigned char *)a2 + v59[14]);
          *(_OWORD *)((char *)a1 + v59[15]) = *(_OWORD *)((char *)a2 + v59[15]);
          *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
          *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
          *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
          uint64_t v157 = v6[8];
          unint64_t v158 = (char *)a1 + v157;
          uint64_t v159 = (char *)a2 + v157;
          v158[8] = v159[8];
          *(void *)unint64_t v158 = *(void *)v159;
          uint64_t v160 = v6[9];
          uint64_t v161 = (char *)a1 + v160;
          uint64_t v162 = (char *)a2 + v160;
          *(void *)uint64_t v161 = *(void *)v162;
          v161[8] = v162[8];
          *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
          *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
          *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
          *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
          *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
        }
        goto LABEL_97;
      case 1u:
        uint64_t v8 = sub_1A962E810();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
        v9((char *)a1, (char *)a2, v8);
        uint64_t v10 = (int *)type metadata accessor for Metadata();
        v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
        uint64_t v11 = v10[6];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
        }
        *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
        *(void *)((char *)a1 + v10[8]) = *(void *)((char *)a2 + v10[8]);
        *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
        *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
        *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
        *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
        *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
        *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
        *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
        uint64_t v64 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v65 = v64[5];
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v65, 1, v8))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v9(v66, v67, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v8);
        }
        *(void *)((char *)a1 + v64[6]) = *(void *)((char *)a2 + v64[6]);
        *(void *)((char *)a1 + v64[7]) = *(void *)((char *)a2 + v64[7]);
        *(void *)((char *)a1 + v64[8]) = *(void *)((char *)a2 + v64[8]);
        *(void *)((char *)a1 + v64[9]) = *(void *)((char *)a2 + v64[9]);
        *((unsigned char *)a1 + v64[10]) = *((unsigned char *)a2 + v64[10]);
        *((unsigned char *)a1 + v64[11]) = *((unsigned char *)a2 + v64[11]);
        *(void *)((char *)a1 + v64[12]) = *(void *)((char *)a2 + v64[12]);
        *(void *)((char *)a1 + v64[13]) = *(void *)((char *)a2 + v64[13]);
        *(void *)((char *)a1 + v64[14]) = *(void *)((char *)a2 + v64[14]);
        *(void *)((char *)a1 + v64[15]) = *(void *)((char *)a2 + v64[15]);
        *(void *)((char *)a1 + v64[16]) = *(void *)((char *)a2 + v64[16]);
        *(void *)((char *)a1 + v64[17]) = *(void *)((char *)a2 + v64[17]);
        *(void *)((char *)a1 + v64[18]) = *(void *)((char *)a2 + v64[18]);
        *(void *)((char *)a1 + v64[19]) = *(void *)((char *)a2 + v64[19]);
        *(void *)((char *)a1 + v64[20]) = *(void *)((char *)a2 + v64[20]);
        *(void *)((char *)a1 + v64[21]) = *(void *)((char *)a2 + v64[21]);
        *(void *)((char *)a1 + v64[22]) = *(void *)((char *)a2 + v64[22]);
        *(void *)((char *)a1 + v64[23]) = *(void *)((char *)a2 + v64[23]);
        *(void *)((char *)a1 + v64[24]) = *(void *)((char *)a2 + v64[24]);
        *(void *)((char *)a1 + v64[25]) = *(void *)((char *)a2 + v64[25]);
        *(void *)((char *)a1 + v64[26]) = *(void *)((char *)a2 + v64[26]);
        uint64_t v128 = v64[27];
        uint64_t v129 = (char *)a1 + v128;
        uint64_t v130 = (char *)a2 + v128;
        *(void *)uint64_t v129 = *(void *)v130;
        v129[8] = v130[8];
        *((unsigned char *)a1 + v64[28]) = *((unsigned char *)a2 + v64[28]);
        *(void *)((char *)a1 + v64[29]) = *(void *)((char *)a2 + v64[29]);
        *(void *)((char *)a1 + v64[30]) = *(void *)((char *)a2 + v64[30]);
        *(void *)((char *)a1 + v64[31]) = *(void *)((char *)a2 + v64[31]);
        *(void *)((char *)a1 + v64[32]) = *(void *)((char *)a2 + v64[32]);
        *(void *)((char *)a1 + v64[33]) = *(void *)((char *)a2 + v64[33]);
        *(void *)((char *)a1 + v64[34]) = *(void *)((char *)a2 + v64[34]);
        uint64_t v131 = v64[35];
        unint64_t v132 = (char *)a1 + v131;
        uint64_t v133 = (char *)a2 + v131;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v131, 1, v8))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          v9(v132, v133, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v8);
        }
        uint64_t v135 = v64[36];
        uint64_t v136 = (char *)a1 + v135;
        uint64_t v137 = (char *)a2 + v135;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v135, 1, v8))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          v9(v136, v137, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v8);
        }
        *(void *)((char *)a1 + v64[37]) = *(void *)((char *)a2 + v64[37]);
        uint64_t v139 = v64[38];
        uint64_t v140 = (char *)a1 + v139;
        uint64_t v141 = (char *)a2 + v139;
        *(void *)uint64_t v140 = *(void *)v141;
        v140[8] = v141[8];
        uint64_t v142 = v64[39];
        uint64_t v143 = (char *)a1 + v142;
        uint64_t v144 = (char *)a2 + v142;
        *(void *)uint64_t v143 = *(void *)v144;
        v143[8] = v144[8];
        uint64_t v145 = v64[40];
        unint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        *(void *)unint64_t v146 = *(void *)v147;
        v146[8] = v147[8];
        uint64_t v148 = v64[41];
        uint64_t v149 = (char *)a1 + v148;
        uint64_t v150 = (char *)a2 + v148;
        *(void *)uint64_t v149 = *(void *)v150;
        v149[8] = v150[8];
        *(void *)((char *)a1 + v64[42]) = *(void *)((char *)a2 + v64[42]);
        *(void *)((char *)a1 + v64[43]) = *(void *)((char *)a2 + v64[43]);
        uint64_t v151 = v64[44];
        uint64_t v152 = (char *)a1 + v151;
        uint64_t v153 = (char *)a2 + v151;
        *(void *)uint64_t v152 = *(void *)v153;
        v152[8] = v153[8];
        uint64_t v154 = v64[45];
        uint64_t v155 = (char *)a1 + v154;
        uint64_t v156 = (char *)a2 + v154;
        *(void *)uint64_t v155 = *(void *)v156;
        v155[8] = v156[8];
        *(void *)((char *)a1 + v64[46]) = *(void *)((char *)a2 + v64[46]);
        goto LABEL_97;
      case 2u:
        uint64_t v15 = sub_1A962E810();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16((char *)a1, (char *)a2, v15);
        uint64_t v17 = (int *)type metadata accessor for Metadata();
        v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
        uint64_t v18 = v17[6];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v16(v19, v20, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
        }
        *(void *)((char *)a1 + v17[7]) = *(void *)((char *)a2 + v17[7]);
        *(void *)((char *)a1 + v17[8]) = *(void *)((char *)a2 + v17[8]);
        *(void *)((char *)a1 + v17[9]) = *(void *)((char *)a2 + v17[9]);
        *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
        *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
        *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
        *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
        *((unsigned char *)a1 + v17[14]) = *((unsigned char *)a2 + v17[14]);
        *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
        uint64_t v69 = type metadata accessor for DailyForecast();
        *(void *)((char *)a1 + *(int *)(v69 + 20)) = *(void *)((char *)a2 + *(int *)(v69 + 20));
        goto LABEL_97;
      case 3u:
        uint64_t v22 = sub_1A962E810();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
        v23((char *)a1, (char *)a2, v22);
        uint64_t v24 = (int *)type metadata accessor for Metadata();
        v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
        uint64_t v25 = v24[6];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          v23(v26, v27, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
        }
        *(void *)((char *)a1 + v24[7]) = *(void *)((char *)a2 + v24[7]);
        *(void *)((char *)a1 + v24[8]) = *(void *)((char *)a2 + v24[8]);
        *(void *)((char *)a1 + v24[9]) = *(void *)((char *)a2 + v24[9]);
        *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
        *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
        *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
        *((unsigned char *)a1 + v24[13]) = *((unsigned char *)a2 + v24[13]);
        *((unsigned char *)a1 + v24[14]) = *((unsigned char *)a2 + v24[14]);
        *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
        uint64_t v70 = type metadata accessor for HourlyForecast();
        *(void *)((char *)a1 + *(int *)(v70 + 20)) = *(void *)((char *)a2 + *(int *)(v70 + 20));
        goto LABEL_97;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v71 = sub_1A962E810();
          uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32);
          v72((char *)a1, (char *)a2, v71);
          uint64_t v73 = (int *)type metadata accessor for Metadata();
          v72((char *)a1 + v73[5], (char *)a2 + v73[5], v71);
          uint64_t v74 = v73[6];
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v74, 1, v71))
          {
            uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            v72(v75, v76, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v71);
          }
          *(void *)((char *)a1 + v73[7]) = *(void *)((char *)a2 + v73[7]);
          *(void *)((char *)a1 + v73[8]) = *(void *)((char *)a2 + v73[8]);
          *(void *)((char *)a1 + v73[9]) = *(void *)((char *)a2 + v73[9]);
          *(_OWORD *)((char *)a1 + v73[10]) = *(_OWORD *)((char *)a2 + v73[10]);
          *(_OWORD *)((char *)a1 + v73[11]) = *(_OWORD *)((char *)a2 + v73[11]);
          *(_OWORD *)((char *)a1 + v73[12]) = *(_OWORD *)((char *)a2 + v73[12]);
          *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
          *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
          *(_OWORD *)((char *)a1 + v73[15]) = *(_OWORD *)((char *)a2 + v73[15]);
          *(void *)((char *)a1 + HourForecast[5]) = *(void *)((char *)a2 + HourForecast[5]);
          *(void *)((char *)a1 + HourForecast[6]) = *(void *)((char *)a2 + HourForecast[6]);
          uint64_t v163 = HourForecast[7];
          uint64_t v164 = (char *)a1 + v163;
          uint64_t v165 = (char *)a2 + v163;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v163, 1, v71))
          {
            uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            v72(v164, v165, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v71);
          }
          *(void *)((char *)a1 + HourForecast[8]) = *(void *)((char *)a2 + HourForecast[8]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        goto LABEL_97;
      case 5u:
        uint64_t v31 = sub_1A962E810();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v32((char *)a1, (char *)a2, v31);
        uint64_t v33 = (int *)type metadata accessor for Metadata();
        v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
        uint64_t v34 = v33[6];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v32(v35, v36, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
        }
        *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
        *(void *)((char *)a1 + v33[8]) = *(void *)((char *)a2 + v33[8]);
        *(void *)((char *)a1 + v33[9]) = *(void *)((char *)a2 + v33[9]);
        *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
        *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
        *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
        *((unsigned char *)a1 + v33[13]) = *((unsigned char *)a2 + v33[13]);
        *((unsigned char *)a1 + v33[14]) = *((unsigned char *)a2 + v33[14]);
        *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
        uint64_t v78 = type metadata accessor for PeriodicForecasts();
        *(void *)((char *)a1 + *(int *)(v78 + 20)) = *(void *)((char *)a2 + *(int *)(v78 + 20));
        goto LABEL_97;
      case 7u:
        uint64_t v38 = sub_1A962E810();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
        v39((char *)a1, (char *)a2, v38);
        uint64_t v40 = (int *)type metadata accessor for Metadata();
        v39((char *)a1 + v40[5], (char *)a2 + v40[5], v38);
        uint64_t v41 = v40[6];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v41, 1, v38))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          v39(v42, v43, v38);
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
        }
        *(void *)((char *)a1 + v40[7]) = *(void *)((char *)a2 + v40[7]);
        *(void *)((char *)a1 + v40[8]) = *(void *)((char *)a2 + v40[8]);
        *(void *)((char *)a1 + v40[9]) = *(void *)((char *)a2 + v40[9]);
        *(_OWORD *)((char *)a1 + v40[10]) = *(_OWORD *)((char *)a2 + v40[10]);
        *(_OWORD *)((char *)a1 + v40[11]) = *(_OWORD *)((char *)a2 + v40[11]);
        *(_OWORD *)((char *)a1 + v40[12]) = *(_OWORD *)((char *)a2 + v40[12]);
        *((unsigned char *)a1 + v40[13]) = *((unsigned char *)a2 + v40[13]);
        *((unsigned char *)a1 + v40[14]) = *((unsigned char *)a2 + v40[14]);
        *(_OWORD *)((char *)a1 + v40[15]) = *(_OWORD *)((char *)a2 + v40[15]);
        uint64_t v79 = (int *)type metadata accessor for LocationInfo();
        *(_OWORD *)((char *)a1 + v79[5]) = *(_OWORD *)((char *)a2 + v79[5]);
        *(_OWORD *)((char *)a1 + v79[6]) = *(_OWORD *)((char *)a2 + v79[6]);
        *(_OWORD *)((char *)a1 + v79[7]) = *(_OWORD *)((char *)a2 + v79[7]);
        *(_OWORD *)((char *)a1 + v79[8]) = *(_OWORD *)((char *)a2 + v79[8]);
        *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)((char *)a2 + v79[9]);
        goto LABEL_97;
      case 8u:
        uint64_t v45 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v80 = *(int *)(v45 + 20);
          uint64_t v81 = (char *)a1 + v80;
          uint64_t v82 = (char *)a2 + v80;
          uint64_t v83 = sub_1A962E810();
          unint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
          v84(v81, v82, v83);
          uint64_t v85 = (int *)type metadata accessor for Metadata();
          uint64_t v176 = v84;
          v84(&v81[v85[5]], &v82[v85[5]], v83);
          uint64_t v86 = v85[6];
          __dst = &v81[v86];
          uint64_t v87 = &v82[v86];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v86], 1, v83))
          {
            uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            v176(__dst, v87, v83);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v83);
          }
          *(void *)&v81[v85[7]] = *(void *)&v82[v85[7]];
          *(void *)&v81[v85[8]] = *(void *)&v82[v85[8]];
          *(void *)&v81[v85[9]] = *(void *)&v82[v85[9]];
          *(_OWORD *)&v81[v85[10]] = *(_OWORD *)&v82[v85[10]];
          *(_OWORD *)&v81[v85[11]] = *(_OWORD *)&v82[v85[11]];
          *(_OWORD *)&v81[v85[12]] = *(_OWORD *)&v82[v85[12]];
          v81[v85[13]] = v82[v85[13]];
          v81[v85[14]] = v82[v85[14]];
          *(_OWORD *)&v81[v85[15]] = *(_OWORD *)&v82[v85[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v45 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v45 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        goto LABEL_97;
      case 9u:
        uint64_t v47 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v89 = sub_1A962E810();
          uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32);
          v90((char *)a1, (char *)a2, v89);
          uint64_t v91 = (int *)type metadata accessor for Metadata();
          v90((char *)a1 + v91[5], (char *)a2 + v91[5], v89);
          uint64_t v92 = v91[6];
          uint64_t v93 = (char *)a1 + v92;
          uint64_t v94 = (char *)a2 + v92;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v92, 1, v89))
          {
            uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
          }
          else
          {
            v90(v93, v94, v89);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v89);
          }
          *(void *)((char *)a1 + v91[7]) = *(void *)((char *)a2 + v91[7]);
          *(void *)((char *)a1 + v91[8]) = *(void *)((char *)a2 + v91[8]);
          *(void *)((char *)a1 + v91[9]) = *(void *)((char *)a2 + v91[9]);
          *(_OWORD *)((char *)a1 + v91[10]) = *(_OWORD *)((char *)a2 + v91[10]);
          *(_OWORD *)((char *)a1 + v91[11]) = *(_OWORD *)((char *)a2 + v91[11]);
          *(_OWORD *)((char *)a1 + v91[12]) = *(_OWORD *)((char *)a2 + v91[12]);
          *((unsigned char *)a1 + v91[13]) = *((unsigned char *)a2 + v91[13]);
          *((unsigned char *)a1 + v91[14]) = *((unsigned char *)a2 + v91[14]);
          *(_OWORD *)((char *)a1 + v91[15]) = *(_OWORD *)((char *)a2 + v91[15]);
          *(void *)((char *)a1 + *(int *)(v47 + 20)) = *(void *)((char *)a2 + *(int *)(v47 + 20));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
        }
        goto LABEL_97;
      case 0xAu:
        uint64_t v49 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v96 = sub_1A962E810();
          uint64_t v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32);
          v97((char *)a1, (char *)a2, v96);
          uint64_t v98 = (int *)type metadata accessor for Metadata();
          v97((char *)a1 + v98[5], (char *)a2 + v98[5], v96);
          uint64_t v99 = v98[6];
          unint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v99, 1, v96))
          {
            uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            v97(v100, v101, v96);
            __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v96);
          }
          *(void *)((char *)a1 + v98[7]) = *(void *)((char *)a2 + v98[7]);
          *(void *)((char *)a1 + v98[8]) = *(void *)((char *)a2 + v98[8]);
          *(void *)((char *)a1 + v98[9]) = *(void *)((char *)a2 + v98[9]);
          *(_OWORD *)((char *)a1 + v98[10]) = *(_OWORD *)((char *)a2 + v98[10]);
          *(_OWORD *)((char *)a1 + v98[11]) = *(_OWORD *)((char *)a2 + v98[11]);
          *(_OWORD *)((char *)a1 + v98[12]) = *(_OWORD *)((char *)a2 + v98[12]);
          *((unsigned char *)a1 + v98[13]) = *((unsigned char *)a2 + v98[13]);
          *((unsigned char *)a1 + v98[14]) = *((unsigned char *)a2 + v98[14]);
          *(_OWORD *)((char *)a1 + v98[15]) = *(_OWORD *)((char *)a2 + v98[15]);
          *(_OWORD *)((char *)a1 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v49 + 20));
          *(void *)((char *)a1 + *(int *)(v49 + 24)) = *(void *)((char *)a2 + *(int *)(v49 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v49);
        }
        goto LABEL_97;
      case 0xBu:
        uint64_t v51 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v51))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v103 = sub_1A962E810();
          uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32);
          v104((char *)a1, (char *)a2, v103);
          uint64_t v105 = (int *)type metadata accessor for Metadata();
          v104((char *)a1 + v105[5], (char *)a2 + v105[5], v103);
          uint64_t v106 = v105[6];
          uint64_t v107 = (char *)a1 + v106;
          uint64_t v108 = (char *)a2 + v106;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v106, 1, v103))
          {
            uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            v104(v107, v108, v103);
            __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v103);
          }
          *(void *)((char *)a1 + v105[7]) = *(void *)((char *)a2 + v105[7]);
          *(void *)((char *)a1 + v105[8]) = *(void *)((char *)a2 + v105[8]);
          *(void *)((char *)a1 + v105[9]) = *(void *)((char *)a2 + v105[9]);
          *(_OWORD *)((char *)a1 + v105[10]) = *(_OWORD *)((char *)a2 + v105[10]);
          *(_OWORD *)((char *)a1 + v105[11]) = *(_OWORD *)((char *)a2 + v105[11]);
          *(_OWORD *)((char *)a1 + v105[12]) = *(_OWORD *)((char *)a2 + v105[12]);
          *((unsigned char *)a1 + v105[13]) = *((unsigned char *)a2 + v105[13]);
          *((unsigned char *)a1 + v105[14]) = *((unsigned char *)a2 + v105[14]);
          *(_OWORD *)((char *)a1 + v105[15]) = *(_OWORD *)((char *)a2 + v105[15]);
          uint64_t v167 = v51[5];
          uint64_t v168 = (char *)a1 + v167;
          uint64_t v169 = (char *)a2 + v167;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v167, 1, v103))
          {
            uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            v104(v168, v169, v103);
            __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v103);
          }
          uint64_t v171 = v51[6];
          uint64_t v172 = (char *)a1 + v171;
          uint64_t v173 = (char *)a2 + v171;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v171, 1, v103))
          {
            uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            v104(v172, v173, v103);
            __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v103);
          }
          *(void *)((char *)a1 + v51[7]) = *(void *)((char *)a2 + v51[7]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v51);
        }
        goto LABEL_97;
      case 0xCu:
        uint64_t v53 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v110 = *(int *)(v53 + 20);
          uint64_t v111 = (char *)a1 + v110;
          uint64_t v112 = (char *)a2 + v110;
          uint64_t v113 = sub_1A962E810();
          uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32);
          v114(v111, v112, v113);
          uint64_t v115 = (int *)type metadata accessor for Metadata();
          v114(&v111[v115[5]], &v112[v115[5]], v113);
          uint64_t v116 = v115[6];
          __dsta = &v111[v116];
          uint64_t v117 = &v112[v116];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v112[v116], 1, v113))
          {
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dsta, v117, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            v114(__dsta, v117, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v113);
          }
          *(void *)&v111[v115[7]] = *(void *)&v112[v115[7]];
          *(void *)&v111[v115[8]] = *(void *)&v112[v115[8]];
          *(void *)&v111[v115[9]] = *(void *)&v112[v115[9]];
          *(_OWORD *)&v111[v115[10]] = *(_OWORD *)&v112[v115[10]];
          *(_OWORD *)&v111[v115[11]] = *(_OWORD *)&v112[v115[11]];
          *(_OWORD *)&v111[v115[12]] = *(_OWORD *)&v112[v115[12]];
          v111[v115[13]] = v112[v115[13]];
          v111[v115[14]] = v112[v115[14]];
          *(_OWORD *)&v111[v115[15]] = *(_OWORD *)&v112[v115[15]];
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v53);
        }
        goto LABEL_97;
      case 0xDu:
        uint64_t v55 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v55))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v119 = *(int *)(v55 + 24);
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_1A962E810();
          uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32);
          v123(v120, v121, v122);
          uint64_t v124 = (int *)type metadata accessor for Metadata();
          uint64_t v177 = v123;
          v123(&v120[v124[5]], &v121[v124[5]], v122);
          uint64_t v125 = v124[6];
          __dstb = &v120[v125];
          uint64_t v126 = &v121[v125];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v121[v125], 1, v122))
          {
            uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dstb, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            v177(__dstb, v126, v122);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v122);
          }
          *(void *)&v120[v124[7]] = *(void *)&v121[v124[7]];
          *(void *)&v120[v124[8]] = *(void *)&v121[v124[8]];
          *(void *)&v120[v124[9]] = *(void *)&v121[v124[9]];
          *(_OWORD *)&v120[v124[10]] = *(_OWORD *)&v121[v124[10]];
          *(_OWORD *)&v120[v124[11]] = *(_OWORD *)&v121[v124[11]];
          *(_OWORD *)&v120[v124[12]] = *(_OWORD *)&v121[v124[12]];
          v120[v124[13]] = v121[v124[13]];
          v120[v124[14]] = v121[v124[14]];
          *(_OWORD *)&v120[v124[15]] = *(_OWORD *)&v121[v124[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v55 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v55 + 28));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v55);
        }
LABEL_97:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WeatherModel.MissingProductError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A957055CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherModel.MissingProductError()
{
  return &type metadata for WeatherModel.MissingProductError;
}

uint64_t CurrentWeather.metadata.setter(uint64_t a1)
{
  return sub_1A947A5CC(a1, v1);
}

uint64_t (*CurrentWeather.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.asOf.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_2_30() + 20);
  return sub_1A94200B4(v0, v2);
}

uint64_t (*CurrentWeather.asOf.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.cloudCover.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 24)) = v1;
  return result;
}

uint64_t (*CurrentWeather.cloudCover.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.cloudCoverLowAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 28)) = v1;
  return result;
}

uint64_t (*CurrentWeather.cloudCoverLowAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.cloudCoverMidAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 32)) = v1;
  return result;
}

uint64_t (*CurrentWeather.cloudCoverMidAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.cloudCoverHighAltPct.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 36)) = v1;
  return result;
}

uint64_t (*CurrentWeather.cloudCoverHighAltPct.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.conditionCode.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for CurrentWeather();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*CurrentWeather.conditionCode.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.daylight.setter(char a1)
{
  uint64_t result = type metadata accessor for CurrentWeather();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*CurrentWeather.daylight.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.humidity.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 48)) = v1;
  return result;
}

uint64_t (*CurrentWeather.humidity.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmount1h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 52)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmount1h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmount6h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 56)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmount6h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmount24h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 60)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmount24h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext1h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 64)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext1h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext6h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 68)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext6h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext24h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 72)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext24h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountPrevious1hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 76);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountPrevious1hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountPrevious6hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 80);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountPrevious6hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountPrevious24hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 84);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountPrevious24hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext1hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 88);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext1hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext6hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 92);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext6hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext24hByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_2_30() + 96);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*CurrentWeather.precipitationAmountNext24hByType.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationIntensity.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 100)) = v1;
  return result;
}

uint64_t (*CurrentWeather.precipitationIntensity.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.perceivedPrecipitationIntensity.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 104)) = v1;
  return result;
}

uint64_t (*CurrentWeather.perceivedPrecipitationIntensity.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.pressure.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 108));
}

uint64_t (*CurrentWeather.pressure.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.pressureTrend.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for CurrentWeather();
  *(unsigned char *)(v1 + *(int *)(result + 112)) = v2;
  return result;
}

uint64_t (*CurrentWeather.pressureTrend.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmount1h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 116)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmount1h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmount6h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 120)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmount6h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmount24h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 124)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmount24h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmountNext1h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 128)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmountNext1h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmountNext6h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 132)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmountNext6h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.snowfallAmountNext24h.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 136)) = v1;
  return result;
}

uint64_t (*CurrentWeather.snowfallAmountNext24h.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.sunrise.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_22_7() + 140);
  return sub_1A9412F20(v2, v0);
}

uint64_t CurrentWeather.sunrise.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_2_30() + 140);
  return sub_1A94200B4(v0, v2);
}

uint64_t (*CurrentWeather.sunrise.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.sunset.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_22_7() + 144);
  return sub_1A9412F20(v2, v0);
}

uint64_t CurrentWeather.sunset.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_2_30() + 144);
  return sub_1A94200B4(v0, v2);
}

uint64_t (*CurrentWeather.sunset.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.temperature.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 148)) = v1;
  return result;
}

uint64_t (*CurrentWeather.temperature.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.temperatureApparent.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 152));
}

uint64_t (*CurrentWeather.temperatureApparent.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.temperatureDewPoint.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 156));
}

uint64_t (*CurrentWeather.temperatureDewPoint.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.temperatureTodayMax.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 160));
}

uint64_t (*CurrentWeather.temperatureTodayMax.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.temperatureTodayMin.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 164));
}

uint64_t (*CurrentWeather.temperatureTodayMin.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.uvIndex.setter()
{
  uint64_t result = OUTLINED_FUNCTION_2_30();
  *(void *)(v1 + *(int *)(result + 168)) = v0;
  return result;
}

uint64_t (*CurrentWeather.uvIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.visibility.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 172)) = v1;
  return result;
}

uint64_t (*CurrentWeather.visibility.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.windDirection.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 176));
}

uint64_t (*CurrentWeather.windDirection.modify())(void)
{
  return nullsub_1;
}

void CurrentWeather.windGust.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 180));
}

uint64_t (*CurrentWeather.windGust.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.windSpeed.setter()
{
  uint64_t result = OUTLINED_FUNCTION_7_22();
  *(void *)(v0 + *(int *)(result + 184)) = v1;
  return result;
}

uint64_t (*CurrentWeather.windSpeed.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v101 = &v66[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v66[-v6];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v66[-v9];
  uint64_t v11 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA50);
  OUTLINED_FUNCTION_13_15();
  uint64_t v102 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_26();
  uint64_t v16 = a1[3];
  uint64_t v103 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A9572510();
  uint64_t v17 = (uint64_t)v104;
  sub_1A9632950();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  }
  uint64_t v18 = (uint64_t)v7;
  LOBYTE(v111) = 0;
  sub_1A9485718(&qword_1EB6DCA18, (void (*)(uint64_t))type metadata accessor for Metadata);
  sub_1A9632680();
  uint64_t v104 = v13;
  sub_1A962E810();
  LOBYTE(v111) = 1;
  uint64_t v19 = sub_1A9485718(&qword_1EB6DC8D8, MEMORY[0x1E4F27928]);
  sub_1A96325D0();
  LOBYTE(v109) = 2;
  OUTLINED_FUNCTION_10_15();
  double v20 = OUTLINED_FUNCTION_10_11();
  double v21 = 0.0;
  if (v22) {
    double v23 = v20;
  }
  else {
    double v23 = 0.0;
  }
  LOBYTE(v109) = 3;
  OUTLINED_FUNCTION_10_15();
  double v24 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v25 = v24;
  }
  else {
    double v25 = 0.0;
  }
  LOBYTE(v109) = 4;
  OUTLINED_FUNCTION_10_15();
  double v26 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v27 = v26;
  }
  else {
    double v27 = 0.0;
  }
  LOBYTE(v109) = 5;
  OUTLINED_FUNCTION_10_15();
  double v28 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v21 = v28;
  }
  LOBYTE(v111) = 6;
  sub_1A9541C0C();
  sub_1A9632680();
  double v99 = *(double *)&v19;
  v116[0] = v116[1];
  LOBYTE(v111) = 7;
  int v30 = sub_1A9632650();
  OUTLINED_FUNCTION_24_5(8);
  double v32 = v31;
  int v113 = v30;
  LOBYTE(v109) = 9;
  sub_1A96325D0();
  double v33 = OUTLINED_FUNCTION_10_11();
  double v34 = 0.0;
  if (v22) {
    double v35 = v33;
  }
  else {
    double v35 = 0.0;
  }
  OUTLINED_FUNCTION_1_35(10);
  double v36 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v37 = v36;
  }
  else {
    double v37 = 0.0;
  }
  OUTLINED_FUNCTION_1_35(11);
  double v88 = OUTLINED_FUNCTION_17_10();
  OUTLINED_FUNCTION_1_35(12);
  uint64_t v87 = OUTLINED_FUNCTION_17_10();
  OUTLINED_FUNCTION_1_35(13);
  uint64_t v86 = OUTLINED_FUNCTION_17_10();
  OUTLINED_FUNCTION_1_35(14);
  double v38 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v34 = v38;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD340);
  LOBYTE(v109) = 15;
  sub_1A957416C((unint64_t *)&unk_1EB6DD350, (void (*)(void))sub_1A957255C);
  sub_1A96325D0();
  uint64_t v98 = v18;
  if (v111) {
    uint64_t v97 = v111;
  }
  else {
    uint64_t v97 = sub_1A9631CC0();
  }
  OUTLINED_FUNCTION_1_35(16);
  if (v111) {
    uint64_t v96 = v111;
  }
  else {
    uint64_t v96 = sub_1A9631CC0();
  }
  OUTLINED_FUNCTION_1_35(17);
  if (v111) {
    uint64_t v95 = v111;
  }
  else {
    uint64_t v95 = sub_1A9631CC0();
  }
  OUTLINED_FUNCTION_1_35(18);
  if (v111) {
    uint64_t v94 = v111;
  }
  else {
    uint64_t v94 = sub_1A9631CC0();
  }
  OUTLINED_FUNCTION_1_35(19);
  if (v111) {
    uint64_t v93 = v111;
  }
  else {
    uint64_t v93 = sub_1A9631CC0();
  }
  OUTLINED_FUNCTION_1_35(20);
  double v91 = v32;
  double v90 = v35;
  double v89 = v37;
  uint64_t v85 = *(void *)&v34;
  if (v111) {
    uint64_t v92 = v111;
  }
  else {
    uint64_t v92 = sub_1A9631CC0();
  }
  LOBYTE(v109) = 21;
  sub_1A96325D0();
  double v39 = OUTLINED_FUNCTION_10_11();
  double v40 = 0.0;
  if (!v22) {
    double v39 = 0.0;
  }
  uint64_t v84 = *(void *)&v39;
  OUTLINED_FUNCTION_3_23(22);
  uint64_t v83 = OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_3_23(23);
  uint64_t v80 = v111;
  int v79 = v112;
  LOBYTE(v109) = 24;
  sub_1A9541C58();
  sub_1A96325D0();
  char v41 = v111;
  if (v111 == 3) {
    char v41 = 2;
  }
  char v115 = v41;
  OUTLINED_FUNCTION_3_23(25);
  uint64_t v82 = OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_3_23(26);
  uint64_t v81 = OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_3_23(27);
  double v42 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v43 = v42;
  }
  else {
    double v43 = 0.0;
  }
  OUTLINED_FUNCTION_3_23(28);
  double v44 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v45 = v44;
  }
  else {
    double v45 = 0.0;
  }
  OUTLINED_FUNCTION_3_23(29);
  double v46 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v47 = v46;
  }
  else {
    double v47 = 0.0;
  }
  OUTLINED_FUNCTION_3_23(30);
  double v48 = OUTLINED_FUNCTION_10_11();
  if (v22) {
    double v40 = v48;
  }
  LOBYTE(v111) = 31;
  OUTLINED_FUNCTION_25_4();
  sub_1A96325D0();
  LOBYTE(v111) = 32;
  OUTLINED_FUNCTION_25_4();
  sub_1A96325D0();
  OUTLINED_FUNCTION_24_5(33);
  uint64_t v75 = v49;
  uint64_t v76 = *(void *)&v40;
  uint64_t v77 = *(void *)&v47;
  uint64_t v78 = *(void *)&v45;
  double v99 = v43;
  LOBYTE(v109) = 34;
  OUTLINED_FUNCTION_14_14();
  uint64_t v74 = v111;
  int v73 = v112;
  LOBYTE(v109) = 35;
  OUTLINED_FUNCTION_14_14();
  uint64_t v72 = v111;
  int v50 = v112;
  LOBYTE(v109) = 36;
  OUTLINED_FUNCTION_14_14();
  uint64_t v51 = v111;
  int v52 = v112;
  LOBYTE(v107) = 37;
  sub_1A96325D0();
  uint64_t v53 = v109;
  char v54 = v110;
  OUTLINED_FUNCTION_26_3(38);
  uint64_t v68 = sub_1A9632670();
  int v69 = v52;
  uint64_t v70 = v51;
  int v71 = v50;
  OUTLINED_FUNCTION_26_3(39);
  sub_1A9632660();
  uint64_t v56 = v55;
  LOBYTE(v105) = 40;
  sub_1A96325D0();
  uint64_t v57 = v107;
  char v58 = v108;
  char v114 = 41;
  sub_1A96325D0();
  uint64_t v59 = v105;
  int v67 = v106;
  char v114 = 42;
  sub_1A9632660();
  uint64_t v61 = v80;
  if (v79) {
    uint64_t v61 = 0;
  }
  uint64_t v62 = v74;
  if (v73) {
    uint64_t v62 = 0;
  }
  uint64_t v63 = v72;
  if (v71) {
    uint64_t v63 = 0;
  }
  CurrentWeather.init(metadata:asOf:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount1h:precipitationAmount6h:precipitationAmount24h:precipitationAmountNext1h:precipitationAmountNext6h:precipitationAmountNext24h:precipitationAmountPrevious1hByType:precipitationAmountPrevious6hByType:precipitationAmountPrevious24hByType:precipitationAmountNext1hByType:precipitationAmountNext6hByType:precipitationAmountNext24hByType:precipitationIntensity:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallAmount1h:snowfallAmount6h:snowfallAmount24h:snowfallAmountNext1h:snowfallAmountNext6h:snowfallAmountNext24h:sunrise:sunset:temperature:temperatureApparent:temperatureDewPoint:temperatureTodayMax:temperatureTodayMin:uvIndex:visibility:windDirection:windGust:windSpeed:)((uint64_t)v104, (uint64_t)v10, v116, v113 & 1, v97, v96, v95, v94, v100, v23, v25, v27, v21, v91, v90, v89, v88, v87, v86,
    v85,
    v93,
    v92,
    v84,
    v83,
    v61,
    0,
    &v115,
    v82,
    v81,
    *(uint64_t *)&v99,
    v78,
    v77,
    v76,
    v98,
    (uint64_t)v101,
    v75,
    v62,
    0,
    v63,
    0,
    v70,
    v69,
    v53,
    v54,
    v68,
    v56,
    v57,
    v58,
    v59,
    v67,
    v60);
  uint64_t v64 = OUTLINED_FUNCTION_19_8();
  v65(v64);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
}

unint64_t sub_1A9572510()
{
  unint64_t result = qword_1EB6DC900;
  if (!qword_1EB6DC900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC900);
  }
  return result;
}

unint64_t sub_1A957255C()
{
  unint64_t result = qword_1EB6DD2D0;
  if (!qword_1EB6DD2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD2D0);
  }
  return result;
}

uint64_t sub_1A95725A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1716482913 && a2 == 0xE400000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x766F4364756F6C63 && a2 == 0xEA00000000007265;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96474C0 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96474E0 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001A9647500 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x746867696C796164 && a2 == 0xE800000000000000;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v10 = a1 == 0x79746964696D7568 && a2 == 0xE800000000000000;
            if (v10 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001A96480A0 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001A96480C0 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A96480E0 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A9648100 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A9648120 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 13;
            }
            else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A9648140 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001A9648160 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001A9648190 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000024 && a2 == 0x80000001A96481C0 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A96481F0 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A9648210 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001A9648230 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 20;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A9646F10 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 21;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A9647560 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 22;
            }
            else
            {
              BOOL v11 = a1 == 0x6572757373657270 && a2 == 0xE800000000000000;
              if (v11 || (sub_1A96327D0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 23;
              }
              else
              {
                BOOL v12 = a1 == 0x6572757373657270 && a2 == 0xED0000646E657254;
                if (v12 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 24;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9648260 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 25;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9648280 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 26;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A96482A0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 27;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x80000001A96482C0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 28;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x80000001A96482E0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 29;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x80000001A9648300 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 30;
                }
                else
                {
                  BOOL v13 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1A96327D0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 31;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x7465736E7573 && a2 == 0xE600000000000000;
                    if (v14 || (sub_1A96327D0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 32;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
                      if (v15 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 33;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96475A0 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 34;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96475C0 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 35;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9648320 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 36;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9648340 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 37;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x7865646E497675 && a2 == 0xE700000000000000;
                        if (v16 || (sub_1A96327D0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 38;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
                          if (v17 || (sub_1A96327D0() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 39;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x65726944646E6977 && a2 == 0xED00006E6F697463;
                            if (v18 || (sub_1A96327D0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 40;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x74737547646E6977 && a2 == 0xE800000000000000;
                              if (v19 || (sub_1A96327D0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 41;
                              }
                              else if (a1 == 0x65657053646E6977 && a2 == 0xE900000000000064)
                              {
                                swift_bridgeObjectRelease();
                                return 42;
                              }
                              else
                              {
                                char v21 = sub_1A96327D0();
                                swift_bridgeObjectRelease();
                                if (v21) {
                                  return 42;
                                }
                                else {
                                  return 43;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A957353C()
{
  return 43;
}

uint64_t sub_1A9573544(char a1)
{
  uint64_t result = 0x617461646174656DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 1716482913;
      break;
    case 2:
      uint64_t result = 0x766F4364756F6C63;
      break;
    case 3:
    case 4:
    case 34:
    case 35:
    case 36:
    case 37:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      uint64_t result = 0x6F697469646E6F63;
      break;
    case 7:
      uint64_t result = 0x746867696C796164;
      break;
    case 8:
      uint64_t result = 0x79746964696D7568;
      break;
    case 9:
      uint64_t result = 0xD000000000000015;
      break;
    case 10:
      uint64_t result = 0xD000000000000015;
      break;
    case 11:
      uint64_t result = 0xD000000000000016;
      break;
    case 12:
      uint64_t result = 0xD000000000000019;
      break;
    case 13:
      uint64_t result = 0xD000000000000019;
      break;
    case 14:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      uint64_t result = 0xD000000000000023;
      break;
    case 16:
      uint64_t result = 0xD000000000000023;
      break;
    case 17:
      uint64_t result = 0xD000000000000024;
      break;
    case 18:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 19:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 20:
      uint64_t result = 0xD000000000000020;
      break;
    case 21:
      uint64_t result = 0xD000000000000016;
      break;
    case 22:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 23:
    case 24:
      uint64_t v3 = 0x757373657270;
      goto LABEL_37;
    case 25:
      uint64_t result = 0xD000000000000010;
      break;
    case 26:
      uint64_t result = 0xD000000000000010;
      break;
    case 27:
      uint64_t result = 0xD000000000000011;
      break;
    case 28:
      uint64_t result = 0xD000000000000014;
      break;
    case 29:
      uint64_t result = 0xD000000000000014;
      break;
    case 30:
      uint64_t result = 0xD000000000000015;
      break;
    case 31:
      uint64_t result = 0x657369726E7573;
      break;
    case 32:
      uint64_t result = 0x7465736E7573;
      break;
    case 33:
      uint64_t result = 0x74617265706D6574;
      break;
    case 38:
      uint64_t result = 0x7865646E497675;
      break;
    case 39:
      uint64_t result = 0x696C696269736976;
      break;
    case 40:
      uint64_t v3 = 0x6944646E6977;
LABEL_37:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6572000000000000;
      break;
    case 41:
      uint64_t result = 0x74737547646E6977;
      break;
    case 42:
      uint64_t result = 0x65657053646E6977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95739F4()
{
  return sub_1A9573544(*v0);
}

uint64_t sub_1A95739FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95725A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9573A24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A957353C();
  *a1 = result;
  return result;
}

uint64_t sub_1A9573A4C(uint64_t a1)
{
  unint64_t v2 = sub_1A9572510();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9573A88(uint64_t a1)
{
  unint64_t v2 = sub_1A9572510();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CurrentWeather.encode(to:)(void *a1)
{
  uint64_t v5 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA60);
  OUTLINED_FUNCTION_13_15();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_26();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9572510();
  sub_1A9632970();
  type metadata accessor for Metadata();
  sub_1A9485718(&qword_1EB6DCA10, (void (*)(uint64_t))type metadata accessor for Metadata);
  sub_1A9632770();
  if (!v2)
  {
    BOOL v10 = (int *)type metadata accessor for CurrentWeather();
    sub_1A962E810();
    sub_1A9485718(&qword_1EB6DC8D0, MEMORY[0x1E4F27928]);
    OUTLINED_FUNCTION_15_12();
    OUTLINED_FUNCTION_0_4(2);
    OUTLINED_FUNCTION_0_4(3);
    OUTLINED_FUNCTION_0_4(4);
    OUTLINED_FUNCTION_0_4(5);
    sub_1A9542D40();
    OUTLINED_FUNCTION_16_12();
    sub_1A9632770();
    OUTLINED_FUNCTION_16_12();
    sub_1A9632740();
    OUTLINED_FUNCTION_0_4(8);
    OUTLINED_FUNCTION_0_4(9);
    OUTLINED_FUNCTION_0_4(10);
    OUTLINED_FUNCTION_0_4(11);
    OUTLINED_FUNCTION_0_4(12);
    OUTLINED_FUNCTION_0_4(13);
    OUTLINED_FUNCTION_0_4(14);
    OUTLINED_FUNCTION_20_5(v10[19]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD340);
    sub_1A957416C(&qword_1EB6DD348, (void (*)(void))sub_1A95741E8);
    sub_1A9632770();
    OUTLINED_FUNCTION_20_5(v10[20]);
    OUTLINED_FUNCTION_5_30(16);
    OUTLINED_FUNCTION_20_5(v10[21]);
    OUTLINED_FUNCTION_5_30(17);
    OUTLINED_FUNCTION_20_5(v10[22]);
    OUTLINED_FUNCTION_5_30(18);
    OUTLINED_FUNCTION_20_5(v10[23]);
    OUTLINED_FUNCTION_5_30(19);
    OUTLINED_FUNCTION_20_5(v10[24]);
    OUTLINED_FUNCTION_5_30(20);
    OUTLINED_FUNCTION_0_4(21);
    OUTLINED_FUNCTION_0_4(22);
    OUTLINED_FUNCTION_9_1(v5 + v10[27]);
    OUTLINED_FUNCTION_8_0(23);
    sub_1A9542D8C();
    OUTLINED_FUNCTION_16_12();
    sub_1A9632720();
    OUTLINED_FUNCTION_0_4(25);
    OUTLINED_FUNCTION_0_4(26);
    OUTLINED_FUNCTION_0_4(27);
    OUTLINED_FUNCTION_0_4(28);
    OUTLINED_FUNCTION_0_4(29);
    OUTLINED_FUNCTION_0_4(30);
    OUTLINED_FUNCTION_15_12();
    OUTLINED_FUNCTION_15_12();
    OUTLINED_FUNCTION_0_4(33);
    OUTLINED_FUNCTION_9_1(v5 + v10[38]);
    OUTLINED_FUNCTION_8_0(34);
    OUTLINED_FUNCTION_9_1(v5 + v10[39]);
    OUTLINED_FUNCTION_8_0(35);
    OUTLINED_FUNCTION_9_1(v5 + v10[40]);
    OUTLINED_FUNCTION_8_0(36);
    OUTLINED_FUNCTION_9_1(v5 + v10[41]);
    OUTLINED_FUNCTION_8_0(37);
    OUTLINED_FUNCTION_16_12();
    sub_1A9632760();
    OUTLINED_FUNCTION_0_4(39);
    OUTLINED_FUNCTION_9_1(v5 + v10[44]);
    sub_1A9632710();
    OUTLINED_FUNCTION_9_1(v5 + v10[45]);
    OUTLINED_FUNCTION_8_0(41);
    OUTLINED_FUNCTION_0_4(42);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v3);
}

uint64_t sub_1A957416C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DD340);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A95741E8()
{
  unint64_t result = qword_1EB6DD2C8;
  if (!qword_1EB6DD2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD2C8);
  }
  return result;
}

uint64_t sub_1A9574234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CurrentWeather.init(from:)(a1, a2);
}

uint64_t sub_1A957424C(void *a1)
{
  return CurrentWeather.encode(to:)(a1);
}

void sub_1A9574264()
{
}

void sub_1A957427C()
{
}

char *initializeBufferWithCopyOfBuffer for CurrentWeather(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    uint64_t v10 = v9[6];
    BOOL v11 = &a1[v10];
    BOOL v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
    uint64_t v15 = v9[10];
    BOOL v16 = &a1[v15];
    BOOL v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)BOOL v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v9[11];
    double v20 = &a1[v19];
    char v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)double v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v9[12];
    double v24 = &a1[v23];
    double v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)double v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    uint64_t v27 = v9[15];
    double v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)double v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = a3[5];
    double v32 = &a1[v31];
    double v33 = &a2[v31];
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v7))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v8(v32, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
    }
    uint64_t v35 = a3[7];
    *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
    *(void *)&a1[v35] = *(void *)&a2[v35];
    uint64_t v36 = a3[9];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    *(void *)&a1[v36] = *(void *)&a2[v36];
    uint64_t v37 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v37] = a2[v37];
    uint64_t v38 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    *(void *)&a1[v38] = *(void *)&a2[v38];
    uint64_t v39 = a3[15];
    *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
    *(void *)&a1[v39] = *(void *)&a2[v39];
    uint64_t v40 = a3[17];
    *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
    *(void *)&a1[v40] = *(void *)&a2[v40];
    uint64_t v41 = a3[19];
    *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
    *(void *)&a1[v41] = *(void *)&a2[v41];
    uint64_t v42 = a3[21];
    *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
    *(void *)&a1[v42] = *(void *)&a2[v42];
    uint64_t v43 = a3[23];
    *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
    *(void *)&a1[v43] = *(void *)&a2[v43];
    uint64_t v44 = a3[25];
    *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
    *(void *)&a1[v44] = *(void *)&a2[v44];
    uint64_t v45 = a3[27];
    *(void *)&a1[a3[26]] = *(void *)&a2[a3[26]];
    double v46 = &a1[v45];
    double v47 = &a2[v45];
    *(void *)double v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = a3[29];
    a1[a3[28]] = a2[a3[28]];
    *(void *)&a1[v48] = *(void *)&a2[v48];
    uint64_t v49 = a3[31];
    *(void *)&a1[a3[30]] = *(void *)&a2[a3[30]];
    *(void *)&a1[v49] = *(void *)&a2[v49];
    uint64_t v50 = a3[33];
    *(void *)&a1[a3[32]] = *(void *)&a2[a3[32]];
    *(void *)&a1[v50] = *(void *)&a2[v50];
    uint64_t v51 = a3[35];
    *(void *)&a1[a3[34]] = *(void *)&a2[a3[34]];
    int v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v7))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      uint64_t v55 = v8;
    }
    else
    {
      uint64_t v55 = v8;
      v8(v52, v53, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v7);
    }
    uint64_t v56 = a3[36];
    uint64_t v57 = &a1[v56];
    char v58 = &a2[v56];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v56], 1, v7))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      v55(v57, v58, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v7);
    }
    uint64_t v60 = a3[38];
    *(void *)&a1[a3[37]] = *(void *)&a2[a3[37]];
    uint64_t v61 = &a1[v60];
    uint64_t v62 = &a2[v60];
    v61[8] = v62[8];
    *(void *)uint64_t v61 = *(void *)v62;
    uint64_t v63 = a3[39];
    uint64_t v64 = a3[40];
    uint64_t v65 = &a1[v63];
    uint64_t v66 = &a2[v63];
    v65[8] = v66[8];
    *(void *)uint64_t v65 = *(void *)v66;
    int v67 = &a1[v64];
    uint64_t v68 = &a2[v64];
    *(void *)int v67 = *(void *)v68;
    v67[8] = v68[8];
    uint64_t v69 = a3[41];
    uint64_t v70 = a3[42];
    int v71 = &a1[v69];
    uint64_t v72 = &a2[v69];
    *(void *)int v71 = *(void *)v72;
    v71[8] = v72[8];
    *(void *)&a1[v70] = *(void *)&a2[v70];
    uint64_t v73 = a3[44];
    *(void *)&a1[a3[43]] = *(void *)&a2[a3[43]];
    uint64_t v74 = &a1[v73];
    uint64_t v75 = &a2[v73];
    *(void *)uint64_t v74 = *(void *)v75;
    v74[8] = v75[8];
    uint64_t v76 = a3[45];
    uint64_t v77 = a3[46];
    uint64_t v78 = &a1[v76];
    int v79 = &a2[v76];
    *(void *)uint64_t v78 = *(void *)v79;
    v78[8] = v79[8];
    *(void *)&a1[v77] = *(void *)&a2[v77];
  }
  return a1;
}

char *assignWithCopy for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = (int *)type metadata accessor for Metadata();
  uint64_t v75 = v8;
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  uint64_t v10 = v9[6];
  BOOL v11 = &a1[v10];
  BOOL v12 = &a2[v10];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v75(v11, v12, v6);
LABEL_7:
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
  *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
  uint64_t v16 = v9[10];
  BOOL v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)BOOL v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v19 = v9[11];
  double v20 = &a1[v19];
  char v21 = &a2[v19];
  *(void *)double v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v22 = v9[12];
  uint64_t v23 = &a1[v22];
  double v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  uint64_t v25 = v9[15];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[5];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v6);
  int v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  v75(v29, v30, v6);
LABEL_13:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[a3[19]] = *(void *)&a2[a3[19]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  *(void *)&a1[a3[26]] = *(void *)&a2[a3[26]];
  uint64_t v34 = a3[27];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  v35[8] = v36[8];
  *(void *)uint64_t v35 = v37;
  a1[a3[28]] = a2[a3[28]];
  *(void *)&a1[a3[29]] = *(void *)&a2[a3[29]];
  *(void *)&a1[a3[30]] = *(void *)&a2[a3[30]];
  *(void *)&a1[a3[31]] = *(void *)&a2[a3[31]];
  *(void *)&a1[a3[32]] = *(void *)&a2[a3[32]];
  *(void *)&a1[a3[33]] = *(void *)&a2[a3[33]];
  *(void *)&a1[a3[34]] = *(void *)&a2[a3[34]];
  uint64_t v38 = a3[35];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v38], 1, v6);
  int v42 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v6);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v39, v40, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v6);
LABEL_18:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  v75(v39, v40, v6);
LABEL_19:
  uint64_t v44 = a3[36];
  uint64_t v45 = &a1[v44];
  double v46 = &a2[v44];
  int v47 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v44], 1, v6);
  int v48 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v6);
  if (!v47)
  {
    if (!v48)
    {
      v75(v45, v46, v6);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v45, v6);
    goto LABEL_24;
  }
  if (v48)
  {
LABEL_24:
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v45, v46, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v6);
LABEL_25:
  *(void *)&a1[a3[37]] = *(void *)&a2[a3[37]];
  uint64_t v50 = a3[38];
  uint64_t v51 = &a1[v50];
  int v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = a3[39];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  uint64_t v58 = a3[40];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  uint64_t v61 = *(void *)v60;
  v59[8] = v60[8];
  *(void *)uint64_t v59 = v61;
  uint64_t v62 = a3[41];
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v65 = *(void *)v64;
  v63[8] = v64[8];
  *(void *)uint64_t v63 = v65;
  *(void *)&a1[a3[42]] = *(void *)&a2[a3[42]];
  *(void *)&a1[a3[43]] = *(void *)&a2[a3[43]];
  uint64_t v66 = a3[44];
  int v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = *(void *)v68;
  v67[8] = v68[8];
  *(void *)int v67 = v69;
  uint64_t v70 = a3[45];
  int v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = *(void *)v72;
  v71[8] = v72[8];
  *(void *)int v71 = v73;
  *(void *)&a1[a3[46]] = *(void *)&a2[a3[46]];
  return a1;
}

char *initializeWithTake for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  uint64_t v9 = v8[6];
  uint64_t v10 = &a1[v9];
  BOOL v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
  *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
  *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  uint64_t v13 = a3[5];
  int v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v13], 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7(v14, v15, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
  }
  uint64_t v17 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v21 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v22 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  uint64_t v24 = a3[21];
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[23];
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  uint64_t v26 = a3[25];
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v27 = a3[27];
  *(void *)&a1[a3[26]] = *(void *)&a2[a3[26]];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  uint64_t v31 = a3[31];
  *(void *)&a1[a3[30]] = *(void *)&a2[a3[30]];
  *(void *)&a1[v31] = *(void *)&a2[v31];
  uint64_t v32 = a3[33];
  *(void *)&a1[a3[32]] = *(void *)&a2[a3[32]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  uint64_t v33 = a3[35];
  *(void *)&a1[a3[34]] = *(void *)&a2[a3[34]];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v33], 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v7(v34, v35, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
  }
  uint64_t v37 = a3[36];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v37], 1, v6))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v7(v38, v39, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v6);
  }
  uint64_t v41 = a3[38];
  *(void *)&a1[a3[37]] = *(void *)&a2[a3[37]];
  int v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  v42[8] = v43[8];
  *(void *)int v42 = *(void *)v43;
  uint64_t v44 = a3[39];
  uint64_t v45 = a3[40];
  double v46 = &a1[v44];
  int v47 = &a2[v44];
  v46[8] = v47[8];
  *(void *)double v46 = *(void *)v47;
  int v48 = &a1[v45];
  uint64_t v49 = &a2[v45];
  *(void *)int v48 = *(void *)v49;
  v48[8] = v49[8];
  uint64_t v50 = a3[41];
  uint64_t v51 = a3[42];
  int v52 = &a1[v50];
  uint64_t v53 = &a2[v50];
  *(void *)int v52 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)&a1[v51] = *(void *)&a2[v51];
  uint64_t v54 = a3[44];
  *(void *)&a1[a3[43]] = *(void *)&a2[a3[43]];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = a3[45];
  uint64_t v58 = a3[46];
  uint64_t v59 = &a1[v57];
  uint64_t v60 = &a2[v57];
  *(void *)uint64_t v59 = *(void *)v60;
  v59[8] = v60[8];
  *(void *)&a1[v58] = *(void *)&a2[v58];
  return a1;
}

char *assignWithTake for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = (int *)type metadata accessor for Metadata();
  double v90 = v8;
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  uint64_t v10 = v9[6];
  BOOL v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v90(v11, v12, v6);
LABEL_7:
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
  *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
  uint64_t v16 = v9[10];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (uint64_t *)&a2[v16];
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v9[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v9[12];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = (uint64_t *)&a2[v26];
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  uint64_t v31 = v9[15];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (uint64_t *)&a2[v31];
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[5];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v36], 1, v6);
  int v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_12:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v90(v37, v38, v6);
LABEL_13:
  uint64_t v42 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v42] = *(void *)&a2[v42];
  uint64_t v43 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  uint64_t v44 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v44] = a2[v44];
  uint64_t v45 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v45] = *(void *)&a2[v45];
  uint64_t v46 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v46] = *(void *)&a2[v46];
  uint64_t v47 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  *(void *)&a1[v47] = *(void *)&a2[v47];
  uint64_t v48 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  *(void *)&a1[v48] = *(void *)&a2[v48];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[21]] = *(void *)&a2[a3[21]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[26];
  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  *(void *)&a1[v49] = *(void *)&a2[v49];
  uint64_t v50 = a3[27];
  uint64_t v51 = a3[28];
  int v52 = &a1[v50];
  uint64_t v53 = &a2[v50];
  v52[8] = v53[8];
  *(void *)int v52 = *(void *)v53;
  a1[v51] = a2[v51];
  uint64_t v54 = a3[30];
  *(void *)&a1[a3[29]] = *(void *)&a2[a3[29]];
  *(void *)&a1[v54] = *(void *)&a2[v54];
  uint64_t v55 = a3[32];
  *(void *)&a1[a3[31]] = *(void *)&a2[a3[31]];
  *(void *)&a1[v55] = *(void *)&a2[v55];
  uint64_t v56 = a3[34];
  *(void *)&a1[a3[33]] = *(void *)&a2[a3[33]];
  uint64_t v57 = a3[35];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  *(void *)&a1[v56] = *(void *)&a2[v56];
  int v60 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v57], 1, v6);
  int v61 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v6);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v58, v59, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v58, v6);
LABEL_18:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  v90(v58, v59, v6);
LABEL_19:
  uint64_t v63 = a3[36];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  int v66 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v63], 1, v6);
  int v67 = __swift_getEnumTagSinglePayload((uint64_t)v65, 1, v6);
  if (!v66)
  {
    if (!v67)
    {
      v90(v64, v65, v6);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v64, v6);
    goto LABEL_24;
  }
  if (v67)
  {
LABEL_24:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v64, v65, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v6);
LABEL_25:
  uint64_t v69 = a3[38];
  *(void *)&a1[a3[37]] = *(void *)&a2[a3[37]];
  uint64_t v70 = &a1[v69];
  int v71 = &a2[v69];
  v70[8] = v71[8];
  *(void *)uint64_t v70 = *(void *)v71;
  uint64_t v72 = a3[39];
  uint64_t v73 = a3[40];
  uint64_t v74 = &a1[v72];
  uint64_t v75 = &a2[v72];
  v74[8] = v75[8];
  *(void *)uint64_t v74 = *(void *)v75;
  uint64_t v76 = &a1[v73];
  uint64_t v77 = &a2[v73];
  *(void *)uint64_t v76 = *(void *)v77;
  v76[8] = v77[8];
  uint64_t v78 = a3[41];
  uint64_t v79 = a3[42];
  uint64_t v80 = &a1[v78];
  uint64_t v81 = &a2[v78];
  *(void *)uint64_t v80 = *(void *)v81;
  v80[8] = v81[8];
  *(void *)&a1[v79] = *(void *)&a2[v79];
  uint64_t v82 = a3[44];
  *(void *)&a1[a3[43]] = *(void *)&a2[a3[43]];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  *(void *)uint64_t v83 = *(void *)v84;
  v83[8] = v84[8];
  uint64_t v85 = a3[45];
  uint64_t v86 = a3[46];
  uint64_t v87 = &a1[v85];
  double v88 = &a2[v85];
  *(void *)uint64_t v87 = *(void *)v88;
  v87[8] = v88[8];
  *(void *)&a1[v86] = *(void *)&a2[v86];
  return a1;
}

uint64_t sub_1A9575C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 76));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

void sub_1A9575D40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_0();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 76)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for CurrentWeather.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD6)
  {
    if (a2 + 42 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 42) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 43;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2B;
  int v5 = v6 - 43;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CurrentWeather.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 42 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 42) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD5)
  {
    unsigned int v6 = ((a2 - 214) >> 8) + 1;
    *unint64_t result = a2 + 42;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9575F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 42;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentWeather.CodingKeys()
{
  return &type metadata for CurrentWeather.CodingKeys;
}

unint64_t sub_1A9575F84()
{
  unint64_t result = qword_1E97EC308;
  if (!qword_1E97EC308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC308);
  }
  return result;
}

unint64_t sub_1A9575FD4()
{
  unint64_t result = qword_1EB6DC910;
  if (!qword_1EB6DC910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC910);
  }
  return result;
}

unint64_t sub_1A9576024()
{
  unint64_t result = qword_1EB6DC908;
  if (!qword_1EB6DC908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC908);
  }
  return result;
}

void static ForecastCondition.read(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v8 = OUTLINED_FUNCTION_2_0(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_1();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_47_2();
  if (!v0)
  {
    sub_1A9632310();
    uint64_t v13 = sub_1A9631C90();
    OUTLINED_FUNCTION_17_11();
    type metadata accessor for ForecastCondition();
    OUTLINED_FUNCTION_87_0();
    uint64_t v19 = v6 + v14;
    OUTLINED_FUNCTION_734();
    __swift_storeEnumTagSinglePayload(v15, v16, v17, v9);
    uint64_t v18 = (void *)(v6 + *(int *)(v4 + 28));
    *uint64_t v18 = 0;
    v18[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v6, v2, v9);
    sub_1A94200B4(v1, v19);
    *(void *)(v6 + *(int *)(v4 + 24)) = v13;
    swift_bridgeObjectRelease();
    *uint64_t v18 = v20;
    v18[1] = v21;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

uint64_t ForecastCondition.write(to:)()
{
  uint64_t result = OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    type metadata accessor for ForecastCondition();
    OUTLINED_FUNCTION_53_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    sub_1A9632320();
    OUTLINED_FUNCTION_76_0();
    sub_1A962E810();
    OUTLINED_FUNCTION_95_0();
    sub_1A9631CA0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    return OUTLINED_FUNCTION_38_3();
  }
  return result;
}

void static HistoricalFact.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, unsigned __int8 a12, char a13)
{
  OUTLINED_FUNCTION_3();
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for Metadata();
  uint64_t v17 = OUTLINED_FUNCTION_2_0(v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_6_24();
  if (!v13)
  {
    if (a13 == 2)
    {
      char v20 = 1;
    }
    else
    {
      if (a13 != 1) {
        goto LABEL_8;
      }
      char v20 = 0;
    }
    OUTLINED_FUNCTION_6_24();
    unsigned int v21 = a12 - 1;
    if (v21 <= 2)
    {
      uint64_t v22 = sub_1A9631E10();
      uint64_t v24 = v23;
      uint64_t v25 = sub_1A9631E10();
      uint64_t v30 = v29;
      uint64_t v37 = v25;
      uint64_t v34 = sub_1A9631E10();
      uint64_t v36 = v31;
      unint64_t v35 = sub_1A9576818();
      sub_1A9576864();
      unint64_t v35 = sub_1A9632040();
      static Metadata.read(from:)();
      *(unsigned char *)uint64_t v15 = v20;
      *(unsigned char *)(v15 + 1) = v21;
      *(void *)(v15 + 8) = v22;
      *(void *)(v15 + 16) = v24;
      *(void *)(v15 + 24) = v37;
      *(void *)(v15 + 32) = v30;
      uint64_t v32 = v36;
      *(void *)(v15 + 40) = v34;
      *(void *)(v15 + 48) = v32;
      *(void *)(v15 + 56) = v35;
      uint64_t v33 = type metadata accessor for HistoricalFact();
      sub_1A943C990((uint64_t)v19, v15 + *(int *)(v33 + 40));
      goto LABEL_9;
    }
LABEL_8:
    sub_1A9631420();
    sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
    uint64_t v26 = OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_31_3(v26, v27);
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_13_16();
    v28();
    swift_willThrow();
  }
LABEL_9:
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

void HistoricalFact.write(to:)()
{
  sub_1A96315E0();
  if (!v0)
  {
    sub_1A96315E0();
    sub_1A9631E20();
    sub_1A9631E20();
    sub_1A9631E20();
    sub_1A9576818();
    sub_1A9576864();
    sub_1A9632050();
    type metadata accessor for HistoricalFact();
    OUTLINED_FUNCTION_72_0();
    Metadata.write(to:)();
  }
}

uint64_t static HistoricalFact.Condition.read(from:)@<X0>(char *a1@<X8>)
{
  return sub_1A9576A58(a1);
}

uint64_t HistoricalFact.Condition.write(to:)()
{
  return sub_1A957FD14();
}

void static HistoricalFact.Period.read(from:)(unsigned char *a1@<X8>)
{
}

unint64_t sub_1A9576818()
{
  unint64_t result = qword_1E97EC318;
  if (!qword_1E97EC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC318);
  }
  return result;
}

unint64_t sub_1A9576864()
{
  unint64_t result = qword_1E97EC320;
  if (!qword_1E97EC320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC320);
  }
  return result;
}

uint64_t HistoricalFact.Period.write(to:)()
{
  return sub_1A957878C();
}

uint64_t static HistoricalFact.Argument.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1A9631E10();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    OUTLINED_FUNCTION_6_24();
    uint64_t result = OUTLINED_FUNCTION_17_11();
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 24) = v7;
  }
  return result;
}

uint64_t HistoricalFact.Argument.write(to:)()
{
  uint64_t result = sub_1A9631E20();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_31();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    return OUTLINED_FUNCTION_38_3();
  }
  return result;
}

uint64_t static DayPartType.read(from:)@<X0>(char *a1@<X8>)
{
  return sub_1A9576A58(a1);
}

uint64_t sub_1A9576A58@<X0>(char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    if (v8 == 1)
    {
      char v4 = 0;
      goto LABEL_6;
    }
    if (v8 == 2)
    {
      char v4 = 1;
LABEL_6:
      *a1 = v4;
      return result;
    }
    sub_1A9631420();
    sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
    uint64_t v5 = OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_31_3(v5, v6);
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_13_16();
    v7();
    return swift_willThrow();
  }
  return result;
}

uint64_t DayPartType.write(to:)()
{
  return sub_1A957FD14();
}

uint64_t static WeatherComparison.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_64_0();
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t result = OUTLINED_FUNCTION_6_24();
  if (!v1)
  {
    if (v21 == 1)
    {
      static Metadata.read(from:)();
      OUTLINED_FUNCTION_98_0();
      static WeatherComparison.Condition.read(from:)(v14);
      OUTLINED_FUNCTION_6_24();
      OUTLINED_FUNCTION_6_24();
      OUTLINED_FUNCTION_98_0();
      static Urgency.read(from:)(v15);
      sub_1A962E6B0();
      sub_1A943C990(v12, a1);
      uint64_t v19 = (int *)type metadata accessor for WeatherComparison();
      *(unsigned char *)(a1 + v19[6]) = v23;
      *(void *)(a1 + v19[7]) = v21;
      *(void *)(a1 + v19[8]) = v20;
      *(unsigned char *)(a1 + v19[9]) = v22;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1 + v19[10], v2, v4);
    }
    else
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v16 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v16, v17);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v18();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t WeatherComparison.write(to:)()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    Metadata.write(to:)();
    type metadata accessor for WeatherComparison();
    OUTLINED_FUNCTION_72_0();
    WeatherComparison.Condition.write(to:)();
    sub_1A96315E0();
    sub_1A96315E0();
    OUTLINED_FUNCTION_72_0();
    Urgency.write(to:)();
    OUTLINED_FUNCTION_72_0();
    return sub_1A962E6C0();
  }
  return result;
}

uint64_t static WeatherComparison.BaselineType.read(from:)()
{
  return sub_1A9578DF4();
}

uint64_t WeatherComparison.BaselineType.write(to:)()
{
  return sub_1A96315E0();
}

uint64_t static WeatherComparison.Condition.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A95796C4(a1);
}

uint64_t WeatherComparison.Condition.write(to:)()
{
  return sub_1A958141C();
}

uint64_t static DailyWeatherStatistics.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Metadata();
  uint64_t v11 = OUTLINED_FUNCTION_2_0(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_67_0();
  uint64_t result = static Metadata.read(from:)();
  if (!v1)
  {
    sub_1A9580494();
    sub_1A95804E0();
    uint64_t v13 = sub_1A9632040();
    sub_1A962E6B0();
    sub_1A943C990(v2, a1);
    uint64_t v14 = type metadata accessor for DailyWeatherStatistics();
    *(void *)(a1 + *(int *)(v14 + 20)) = v13;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1 + *(int *)(v14 + 24), v9, v4);
  }
  return result;
}

void DailyWeatherStatistics.write(to:)(uint64_t a1)
{
}

void static DailyForecast.read(from:)()
{
  OUTLINED_FUNCTION_94_0();
  uint64_t v3 = OUTLINED_FUNCTION_51_2();
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_24_6();
  if (!v1)
  {
    type metadata accessor for DayForecast();
    sub_1A9581244(&qword_1EB6DC5E8, (void (*)(uint64_t))type metadata accessor for DayForecast);
    sub_1A9581244(&qword_1EB6DC5F0, (void (*)(uint64_t))type metadata accessor for DayForecast);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_86_0();
    *(void *)(v0 + *(int *)(type metadata accessor for DailyForecast() + 20)) = v2;
  }
  OUTLINED_FUNCTION_100_0();
}

void DailyForecast.write(to:)()
{
  Metadata.write(to:)();
  if (!v0)
  {
    type metadata accessor for DailyForecast();
    type metadata accessor for DayForecast();
    sub_1A9581244(&qword_1EB6DC5E8, (void (*)(uint64_t))type metadata accessor for DayForecast);
    sub_1A9581244(&qword_1EB6DC5F0, (void (*)(uint64_t))type metadata accessor for DayForecast);
    OUTLINED_FUNCTION_16_13();
  }
}

uint64_t static TemperatureRange.read(from:)()
{
  return sub_1A957C888();
}

uint64_t TemperatureRange.write(to:)()
{
  return sub_1A957C80C();
}

uint64_t static PeriodicForecasts.read(from:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1A957F6EC((void (*)(uint64_t))sub_1A958052C, (void (*)(void))sub_1A9580578, (uint64_t (*)(void))type metadata accessor for PeriodicForecasts, a1);
}

void PeriodicForecasts.write(to:)()
{
}

void static PeriodicForecast.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_37_4();
  if (!v14)
  {
    type metadata accessor for DayPartForecast();
    sub_1A9581244(&qword_1EB6DC668, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9581244(&qword_1EB6DC670, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    uint64_t v15 = OUTLINED_FUNCTION_75_0();
    *(unsigned char *)uint64_t v13 = a13;
    *(void *)(v13 + 8) = v15;
  }
  OUTLINED_FUNCTION_100_0();
}

uint64_t PeriodicForecast.write(to:)()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    type metadata accessor for DayPartForecast();
    sub_1A9581244(&qword_1EB6DC668, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9581244(&qword_1EB6DC670, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    return sub_1A9632050();
  }
  return result;
}

void static WeatherChange.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_3();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v28 = OUTLINED_FUNCTION_2_0(v27);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_90_0();
  uint64_t v32 = type metadata accessor for Metadata();
  uint64_t v33 = OUTLINED_FUNCTION_2_0(v32);
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_56();
  static Metadata.read(from:)();
  if (!v20)
  {
    uint64_t v34 = sub_1A962E810();
    sub_1A9632310();
    sub_1A9632310();
    a10 = type metadata accessor for TrendDeviation();
    sub_1A9581244(&qword_1EB6DB618, (void (*)(uint64_t))type metadata accessor for TrendDeviation);
    sub_1A9581244(&qword_1EB6DB620, (void (*)(uint64_t))type metadata accessor for TrendDeviation);
    a10 = sub_1A9632040();
    unint64_t v35 = (int *)type metadata accessor for WeatherChange();
    uint64_t v36 = v26 + v35[5];
    __swift_storeEnumTagSinglePayload(v36, 1, 1, v34);
    uint64_t v37 = v26 + v35[6];
    __swift_storeEnumTagSinglePayload(v37, 1, 1, v34);
    sub_1A943C990(v22, v26);
    sub_1A94200B4(v21, v36);
    sub_1A94200B4((uint64_t)v30, v37);
    *(void *)(v26 + v35[7]) = a10;
  }
  OUTLINED_FUNCTION_4_0();
}

void WeatherChange.write(to:)()
{
  OUTLINED_FUNCTION_79_0();
  if (!v0)
  {
    type metadata accessor for WeatherChange();
    OUTLINED_FUNCTION_53_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_76_0();
    type metadata accessor for TrendDeviation();
    sub_1A9581244(&qword_1EB6DB618, (void (*)(uint64_t))type metadata accessor for TrendDeviation);
    sub_1A9581244(&qword_1EB6DB620, (void (*)(uint64_t))type metadata accessor for TrendDeviation);
    OUTLINED_FUNCTION_16_13();
  }
}

void static ForecastSummary.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_3();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v21 = OUTLINED_FUNCTION_2_0(v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_1();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_47_2();
  if (!v13)
  {
    sub_1A9632310();
    OUTLINED_FUNCTION_98_0();
    static CardinalDirection.read(from:)(v26);
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    type metadata accessor for ForecastSummary();
    OUTLINED_FUNCTION_87_0();
    uint64_t v33 = v19 + v27;
    OUTLINED_FUNCTION_734();
    __swift_storeEnumTagSinglePayload(v28, v29, v30, v22);
    uint64_t v31 = v19 + v17[7];
    *(void *)uint64_t v31 = 0;
    *(unsigned char *)(v31 + 8) = 1;
    uint64_t v32 = v19 + v17[8];
    *(void *)uint64_t v32 = 0;
    *(unsigned char *)(v32 + 8) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v19, v15, v22);
    sub_1A94200B4(v14, v33);
    *(unsigned char *)(v19 + v17[6]) = a13;
    *(void *)uint64_t v31 = v36;
    *(unsigned char *)(v31 + 8) = v37;
    *(void *)uint64_t v32 = v34;
    *(unsigned char *)(v32 + 8) = v35;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

uint64_t ForecastSummary.write(to:)()
{
  uint64_t result = OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    type metadata accessor for ForecastSummary();
    OUTLINED_FUNCTION_53_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_70_0();
    CardinalDirection.write(to:)();
    OUTLINED_FUNCTION_10_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_10_16();
    return OUTLINED_FUNCTION_5_31();
  }
  return result;
}

void static NextHourForecast.read(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v6 = OUTLINED_FUNCTION_2_0(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_6_1();
  uint64_t v7 = type metadata accessor for Metadata();
  uint64_t v8 = OUTLINED_FUNCTION_2_0(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_65_0();
  static Metadata.read(from:)();
  if (!v0)
  {
    type metadata accessor for ForecastCondition();
    sub_1A9581244(&qword_1EB6DB9C8, (void (*)(uint64_t))type metadata accessor for ForecastCondition);
    sub_1A9581244(&qword_1EB6DB9D0, (void (*)(uint64_t))type metadata accessor for ForecastCondition);
    uint64_t v9 = sub_1A9632040();
    type metadata accessor for ForecastSummary();
    sub_1A9581244(&qword_1EB6DB8C0, (void (*)(uint64_t))type metadata accessor for ForecastSummary);
    sub_1A9581244(&qword_1EB6DB8C8, (void (*)(uint64_t))type metadata accessor for ForecastSummary);
    uint64_t v10 = sub_1A9632040();
    uint64_t v11 = sub_1A962E810();
    sub_1A9632310();
    type metadata accessor for ForecastMinute();
    sub_1A9581244(&qword_1EB6DB808, (void (*)(uint64_t))type metadata accessor for ForecastMinute);
    sub_1A9581244(&qword_1EB6DB810, (void (*)(uint64_t))type metadata accessor for ForecastMinute);
    uint64_t v17 = sub_1A9632040();
    uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
    uint64_t v13 = v4 + HourForecast[7];
    OUTLINED_FUNCTION_734();
    __swift_storeEnumTagSinglePayload(v14, v15, v16, v11);
    sub_1A943C990(v2, v4);
    *(void *)(v4 + HourForecast[5]) = v9;
    *(void *)(v4 + HourForecast[6]) = v10;
    sub_1A94200B4(v1, v13);
    *(void *)(v4 + HourForecast[8]) = v17;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

void NextHourForecast.write(to:)()
{
  OUTLINED_FUNCTION_79_0();
  if (!v0)
  {
    type metadata accessor for NextHourForecast();
    OUTLINED_FUNCTION_76_0();
    type metadata accessor for ForecastCondition();
    sub_1A9581244(&qword_1EB6DB9C8, (void (*)(uint64_t))type metadata accessor for ForecastCondition);
    sub_1A9581244(&qword_1EB6DB9D0, (void (*)(uint64_t))type metadata accessor for ForecastCondition);
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_76_0();
    type metadata accessor for ForecastSummary();
    sub_1A9581244(&qword_1EB6DB8C0, (void (*)(uint64_t))type metadata accessor for ForecastSummary);
    sub_1A9581244(&qword_1EB6DB8C8, (void (*)(uint64_t))type metadata accessor for ForecastSummary);
    OUTLINED_FUNCTION_59_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_76_0();
    type metadata accessor for ForecastMinute();
    sub_1A9581244(&qword_1EB6DB808, (void (*)(uint64_t))type metadata accessor for ForecastMinute);
    sub_1A9581244(&qword_1EB6DB810, (void (*)(uint64_t))type metadata accessor for ForecastMinute);
    OUTLINED_FUNCTION_16_13();
  }
}

void static ResponseType.read(from:)(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 9)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

uint64_t ResponseType.write(to:)()
{
  return sub_1A96315E0();
}

void static HourlyForecast.read(from:)()
{
  OUTLINED_FUNCTION_94_0();
  uint64_t v3 = OUTLINED_FUNCTION_51_2();
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_24_6();
  if (!v1)
  {
    type metadata accessor for HourForecast();
    sub_1A9581244(&qword_1EB6DC628, (void (*)(uint64_t))type metadata accessor for HourForecast);
    sub_1A9581244(&qword_1EB6DC630, (void (*)(uint64_t))type metadata accessor for HourForecast);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_86_0();
    *(void *)(v0 + *(int *)(type metadata accessor for HourlyForecast() + 20)) = v2;
  }
  OUTLINED_FUNCTION_100_0();
}

void HourlyForecast.write(to:)()
{
  Metadata.write(to:)();
  if (!v0)
  {
    type metadata accessor for HourlyForecast();
    type metadata accessor for HourForecast();
    sub_1A9581244(&qword_1EB6DC628, (void (*)(uint64_t))type metadata accessor for HourForecast);
    sub_1A9581244(&qword_1EB6DC630, (void (*)(uint64_t))type metadata accessor for HourForecast);
    OUTLINED_FUNCTION_16_13();
  }
}

void static PressureTrend.read(from:)(unsigned char *a1@<X8>)
{
}

void sub_1A95786A0(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 3)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

uint64_t PressureTrend.write(to:)()
{
  return sub_1A957878C();
}

uint64_t sub_1A957878C()
{
  return sub_1A96315E0();
}

uint64_t static Metadata.read(from:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v2 = OUTLINED_FUNCTION_2_0(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A962E810();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_567();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_91_0();
  uint64_t result = sub_1A962E6B0();
  if (!v0)
  {
    sub_1A962E6B0();
    sub_1A9632310();
    OUTLINED_FUNCTION_6_24();
    uint64_t v27 = v37;
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_88_0();
    uint64_t v8 = v36;
    uint64_t v26 = v35;
    OUTLINED_FUNCTION_88_0();
    uint64_t v24 = v33;
    uint64_t v25 = v8;
    uint64_t v9 = v34;
    OUTLINED_FUNCTION_88_0();
    uint64_t v22 = v31;
    uint64_t v23 = v9;
    uint64_t v10 = v32;
    OUTLINED_FUNCTION_88_0();
    HIDWORD(v20) = v30[2];
    unint64_t v21 = sub_1A95805C4();
    sub_1A9580610();
    sub_1A9632310();
    v30[0] = v30[1];
    OUTLINED_FUNCTION_88_0();
    uint64_t v18 = v28;
    uint64_t v19 = v29;
    char v17 = BYTE4(v20);
    uint64_t v16 = v22;
    uint64_t v11 = OUTLINED_FUNCTION_97_0();
    return Metadata.init(readTime:expireTime:reportedTime:version:latitude:longitude:language:providerName:providerLogo:temporarilyUnavailable:units:attributionURL:)(v11, v12, (uint64_t)v4, v27, v26, v25, v24, v23, v13, v14, v15, v16, v10, v17, v30, v18, v19);
  }
  return result;
}

void Metadata.write(to:)()
{
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    type metadata accessor for Metadata();
    OUTLINED_FUNCTION_78_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[8]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[9]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_32_4(v1[10]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_32_4(v1[11]);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_32_4(v1[12]);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD988);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD950);
    sub_1A95805C4();
    sub_1A9580610();
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_32_4(v1[15]);
    OUTLINED_FUNCTION_5_31();
  }
  OUTLINED_FUNCTION_83_0();
}

uint64_t static Metadata.Units.read(from:)()
{
  return sub_1A9578DF4();
}

uint64_t sub_1A9578DF4()
{
  uint64_t result = OUTLINED_FUNCTION_37_4();
  if (!v0 && v5 != 1)
  {
    sub_1A9631420();
    sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
    uint64_t v2 = OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_31_3(v2, v3);
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_13_16();
    v4();
    return swift_willThrow();
  }
  return result;
}

uint64_t static CardinalDirection.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A957AD74(a1);
}

uint64_t CardinalDirection.write(to:)()
{
  return sub_1A958151C();
}

void static AirQuality.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_3();
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for Metadata();
  uint64_t v18 = OUTLINED_FUNCTION_2_0(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_48_1();
  if (!v13)
  {
    OUTLINED_FUNCTION_17_11();
    sub_1A958065C();
    sub_1A95806A8();
    sub_1A9632310();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC568);
    sub_1A958078C(&qword_1EB6DC570);
    sub_1A958078C(&qword_1EB6DC578);
    sub_1A9632310();
    OUTLINED_FUNCTION_17_11();
    uint64_t v19 = (int *)type metadata accessor for AirQuality();
    uint64_t v29 = v19[6];
    uint64_t v20 = (void *)(v16 + v19[5]);
    uint64_t v23 = (void *)(v16 + v19[7]);
    uint64_t v26 = v16 + v19[8];
    uint64_t v28 = v19[10];
    uint64_t v22 = v16 + v19[9];
    unint64_t v21 = (void *)(v16 + v19[11]);
    uint64_t v25 = (void *)(v16 + v19[12]);
    uint64_t v27 = v19[13];
    uint64_t v24 = (void *)(v16 + v19[14]);
    sub_1A943C990(v14, v16);
    *uint64_t v20 = v43;
    v20[1] = v44;
    *(unsigned char *)(v16 + v29) = a13;
    *uint64_t v23 = v41;
    v23[1] = v42;
    *(void *)uint64_t v26 = v39;
    *(unsigned char *)(v26 + 8) = v40;
    *(void *)uint64_t v22 = v37;
    *(unsigned char *)(v22 + 8) = v38;
    *(unsigned char *)(v16 + v28) = a12;
    *unint64_t v21 = v35;
    v21[1] = v36;
    *uint64_t v25 = v33;
    v25[1] = v34;
    *(void *)(v16 + v27) = v32;
    *uint64_t v24 = v30;
    v24[1] = v31;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

void AirQuality.write(to:)()
{
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  if (!v0)
  {
    type metadata accessor for AirQuality();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_32_4(v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    OUTLINED_FUNCTION_30_5();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC458);
    sub_1A958065C();
    sub_1A95806A8();
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_32_4(v1[7]);
    OUTLINED_FUNCTION_30_5();
    OUTLINED_FUNCTION_10_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA40);
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD988);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_32_4(v1[11]);
    OUTLINED_FUNCTION_30_5();
    OUTLINED_FUNCTION_32_4(v1[12]);
    OUTLINED_FUNCTION_30_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC590);
    sub_1A958078C(&qword_1EB6DC570);
    sub_1A958078C(&qword_1EB6DC578);
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_32_4(v1[14]);
    OUTLINED_FUNCTION_30_5();
  }
  OUTLINED_FUNCTION_83_0();
}

uint64_t static AirQuality.SourceType.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A95796C4(a1);
}

uint64_t sub_1A95796C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    if ((v7 - 1) >= 4u)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      return swift_willThrow();
    }
    else
    {
      *a1 = v7 - 1;
    }
  }
  return result;
}

uint64_t AirQuality.SourceType.write(to:)()
{
  return sub_1A958141C();
}

void static HourlyWeatherStatistics.read(from:)()
{
}

void HourlyWeatherStatistics.write(to:)(uint64_t a1)
{
}

uint64_t static Quantiles.read(from:)()
{
  return sub_1A957AC14();
}

uint64_t Quantiles.write(to:)()
{
  return sub_1A957ACD0();
}

void static MonthlyWeatherStatistics.read(from:)()
{
}

void sub_1A95798FC()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  unint64_t v21 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = OUTLINED_FUNCTION_64_0();
  uint64_t v14 = OUTLINED_FUNCTION_2_0(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = static Metadata.read(from:)();
  if (!v0)
  {
    v6(v18);
    v21();
    uint64_t v19 = sub_1A9632040();
    sub_1A962E6B0();
    sub_1A943C990(v17, v8);
    uint64_t v20 = v3(0);
    *(void *)(v8 + *(int *)(v20 + 20)) = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8 + *(int *)(v20 + 24), v1, v9);
  }
  OUTLINED_FUNCTION_4_0();
}

void MonthlyWeatherStatistics.write(to:)(uint64_t a1)
{
}

void sub_1A9579B18(uint64_t a1, void (*a2)(void), void (*a3)(void), void (*a4)(void))
{
  Metadata.write(to:)();
  if (!v4)
  {
    a2(0);
    OUTLINED_FUNCTION_87_0();
    a3();
    a4();
    sub_1A9632050();
    sub_1A962E6C0();
  }
}

void static HourForecast.read(from:)()
{
  OUTLINED_FUNCTION_33_4();
  uint64_t v2 = v1;
  sub_1A962E810();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A962E6B0();
  if (!v0)
  {
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_98_0();
    static ConditionCode.read(from:)(v6);
    char v68 = v69;
    OUTLINED_FUNCTION_6_24();
    char v7 = v67;
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_50_1();
    char v65 = v66;
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_17_11();
    uint64_t v46 = v63;
    char v8 = v64;
    sub_1A95809D8();
    sub_1A9580A24();
    OUTLINED_FUNCTION_50_1();
    char v61 = v62;
    OUTLINED_FUNCTION_17_11();
    uint64_t v45 = v59;
    int v44 = v60;
    OUTLINED_FUNCTION_6_24();
    uint64_t v43 = v58;
    OUTLINED_FUNCTION_17_11();
    uint64_t v42 = v56;
    int v41 = v57;
    OUTLINED_FUNCTION_17_11();
    uint64_t v40 = v54;
    int v39 = v55;
    OUTLINED_FUNCTION_6_24();
    uint64_t v38 = v53;
    OUTLINED_FUNCTION_6_24();
    uint64_t v37 = v52;
    OUTLINED_FUNCTION_17_11();
    uint64_t v36 = v50;
    int v35 = v51;
    OUTLINED_FUNCTION_17_11();
    uint64_t v34 = v48;
    HIDWORD(v33) = v49;
    OUTLINED_FUNCTION_6_24();
    double v32 = v47;
    char v31 = BYTE4(v33);
    uint64_t v30 = v34;
    char v29 = v35;
    uint64_t v28 = v36;
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    char v25 = v39;
    uint64_t v24 = v40;
    char v23 = v41;
    uint64_t v22 = v42;
    uint64_t v21 = v43;
    char v20 = v44;
    double v9 = OUTLINED_FUNCTION_23_5();
    HourForecast.init(forecastStart:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount:precipitationChance:precipitationType:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallIntensity:temperature:temperatureApparent:temperatureDewPoint:uvIndex:visibility:windDirection:windGust:windSpeed:)((uint64_t)v5, v10, v7, v11, v46, v8, v12, v45, v2, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32);
  }
  OUTLINED_FUNCTION_35_4();
}

void HourForecast.write(to:)()
{
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    uint64_t v1 = (int *)type metadata accessor for HourForecast();
    OUTLINED_FUNCTION_27_5(v1[5]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[6]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[7]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[8]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_70_0();
    ConditionCode.write(to:)();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[11]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[12]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[13]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC690);
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_27_5(v1[15]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_10_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_49_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD710);
    sub_1A95809D8();
    sub_1A9580A24();
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_27_5(v1[19]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_27_5(v1[23]);
    OUTLINED_FUNCTION_2_31();
    OUTLINED_FUNCTION_10_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA40);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_27_5(v1[26]);
    OUTLINED_FUNCTION_2_31();
  }
  OUTLINED_FUNCTION_83_0();
}

uint64_t static EventMessage.read(from:)()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A9632310();
  if (!v1)
  {
    uint64_t result = sub_1A9632310();
    *(void *)uint64_t v0 = v4;
    *(void *)(v0 + 8) = v5;
    *(_OWORD *)(v0 + 16) = v3;
  }
  return result;
}

uint64_t EventMessage.write(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
  uint64_t result = sub_1A9632320();
  if (!v0) {
    return sub_1A9632320();
  }
  return result;
}

void static DataSet.read(from:)(unsigned char *a1@<X8>)
{
}

uint64_t DataSet.write(to:)()
{
  return sub_1A957AF6C();
}

uint64_t static DailySummary.read(from:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_51_2();
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t result = OUTLINED_FUNCTION_24_6();
  if (!v1)
  {
    sub_1A9580A70();
    sub_1A9580ABC();
    sub_1A9632040();
    OUTLINED_FUNCTION_86_0();
    uint64_t result = type metadata accessor for DailySummary();
    *(void *)(v0 + *(int *)(result + 20)) = v2;
  }
  return result;
}

void DailySummary.write(to:)()
{
}

uint64_t static ChangeDirection.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A95796C4(a1);
}

uint64_t ChangeDirection.write(to:)()
{
  return sub_1A958141C();
}

void static LocationInfo.read(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Metadata();
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_48_1();
  if (!v0)
  {
    uint64_t v5 = sub_1A9631E10();
    uint64_t v7 = v6;
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_17_11();
    uint64_t v8 = sub_1A9631E10();
    uint64_t v18 = v9;
    uint64_t v10 = (int *)type metadata accessor for LocationInfo();
    uint64_t v11 = (void *)(v2 + v10[6]);
    double v17 = (void *)(v2 + v10[7]);
    double v16 = (void *)(v2 + v10[8]);
    uint64_t v12 = OUTLINED_FUNCTION_95_0();
    sub_1A943C990(v12, v13);
    double v14 = (uint64_t *)(v2 + v10[5]);
    *double v14 = v5;
    v14[1] = v7;
    *uint64_t v11 = v23;
    v11[1] = v24;
    *double v17 = v21;
    v17[1] = v22;
    *double v16 = v19;
    v16[1] = v20;
    double v15 = (uint64_t *)(v2 + v10[9]);
    *double v15 = v8;
    v15[1] = v18;
  }
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_4_0();
}

void LocationInfo.write(to:)()
{
  OUTLINED_FUNCTION_79_0();
  if (!v0)
  {
    uint64_t v1 = (int *)type metadata accessor for LocationInfo();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_32_4(v1[6]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_32_4(v1[7]);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_32_4(v1[8]);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_92_0();
  }
}

uint64_t static PrecipitationAmount.read(from:)()
{
  return sub_1A957AC14();
}

uint64_t sub_1A957AC14()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    OUTLINED_FUNCTION_45_2();
    uint64_t result = OUTLINED_FUNCTION_45_2();
    *uint64_t v0 = v5;
    v0[1] = v4;
    v0[2] = v3;
  }
  return result;
}

uint64_t PrecipitationAmount.write(to:)()
{
  return sub_1A957ACD0();
}

uint64_t sub_1A957ACD0()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    OUTLINED_FUNCTION_43_2();
    return OUTLINED_FUNCTION_43_2();
  }
  return result;
}

uint64_t static PrecipitationType.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A957AD74(a1);
}

uint64_t sub_1A957AD74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    if ((v7 - 1) >= 8u)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      return swift_willThrow();
    }
    else
    {
      *a1 = v7 - 1;
    }
  }
  return result;
}

uint64_t PrecipitationType.write(to:)()
{
  return sub_1A958151C();
}

void static EventSignificance.read(from:)(unsigned char *a1@<X8>)
{
}

void sub_1A957AE80(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 0xD)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

uint64_t EventSignificance.write(to:)()
{
  return sub_1A957AF6C();
}

uint64_t sub_1A957AF6C()
{
  return sub_1A96315E0();
}

uint64_t static HourWeatherStatistics.read(from:)()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    sub_1A9580B08();
    sub_1A9580B54();
    uint64_t result = OUTLINED_FUNCTION_77_0();
    *(void *)uint64_t v0 = v6;
    *(_OWORD *)(v0 + 8) = v3;
    *(void *)(v0 + 24) = v4;
    *(unsigned char *)(v0 + 32) = v5;
  }
  return result;
}

uint64_t HourWeatherStatistics.write(to:)()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC388);
    sub_1A9580B08();
    sub_1A9580B54();
    return OUTLINED_FUNCTION_34_4();
  }
  return result;
}

void static Urgency.read(from:)(unsigned char *a1@<X8>)
{
}

uint64_t Urgency.write(to:)()
{
  return sub_1A95816AC();
}

void static CurrentWeather.read(from:)()
{
  OUTLINED_FUNCTION_33_4();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v57[-v8];
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = type metadata accessor for Metadata();
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_65_0();
  static Metadata.read(from:)();
  if (!v0)
  {
    uint64_t v92 = v2;
    sub_1A962E810();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    static ConditionCode.read(from:)(v125);
    char v124 = v125[0];
    OUTLINED_FUNCTION_8_20();
    int v91 = v123;
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_8_20();
    uint64_t v90 = v122;
    OUTLINED_FUNCTION_8_20();
    uint64_t v89 = v121;
    OUTLINED_FUNCTION_8_20();
    uint64_t v86 = v120;
    unint64_t v13 = sub_1A9580BA0();
    sub_1A9580BEC();
    uint64_t v88 = v13;
    uint64_t v87 = sub_1A9631C90();
    uint64_t v85 = OUTLINED_FUNCTION_29_5();
    uint64_t v84 = OUTLINED_FUNCTION_29_5();
    uint64_t v83 = OUTLINED_FUNCTION_29_5();
    uint64_t v82 = OUTLINED_FUNCTION_29_5();
    uint64_t v88 = OUTLINED_FUNCTION_29_5();
    OUTLINED_FUNCTION_8_20();
    uint64_t v81 = v119;
    OUTLINED_FUNCTION_8_20();
    uint64_t v80 = v118;
    OUTLINED_FUNCTION_58_0();
    uint64_t v79 = v116;
    int v78 = v117;
    sub_1A95809D8();
    sub_1A9580A24();
    sub_1A9632310();
    v115[0] = v115[1];
    OUTLINED_FUNCTION_8_20();
    uint64_t v77 = v114;
    OUTLINED_FUNCTION_8_20();
    uint64_t v76 = v113;
    OUTLINED_FUNCTION_8_20();
    uint64_t v75 = v112;
    OUTLINED_FUNCTION_8_20();
    uint64_t v74 = v111;
    OUTLINED_FUNCTION_8_20();
    uint64_t v73 = v110;
    OUTLINED_FUNCTION_8_20();
    uint64_t v72 = v109;
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_8_20();
    uint64_t v71 = v108;
    OUTLINED_FUNCTION_58_0();
    uint64_t v70 = v106;
    char v14 = v107;
    OUTLINED_FUNCTION_58_0();
    uint64_t v69 = v104;
    int v68 = v105;
    OUTLINED_FUNCTION_58_0();
    uint64_t v67 = v102;
    int v66 = v103;
    OUTLINED_FUNCTION_58_0();
    uint64_t v65 = v100;
    int v64 = v101;
    OUTLINED_FUNCTION_8_20();
    uint64_t v63 = v99;
    OUTLINED_FUNCTION_8_20();
    uint64_t v62 = v98;
    OUTLINED_FUNCTION_58_0();
    uint64_t v61 = v96;
    int v60 = v97;
    OUTLINED_FUNCTION_58_0();
    uint64_t v59 = v94;
    int v58 = v95;
    OUTLINED_FUNCTION_8_20();
    double v56 = v93;
    char v55 = v58;
    uint64_t v54 = v59;
    char v53 = v60;
    uint64_t v52 = v61;
    uint64_t v51 = v62;
    uint64_t v50 = v63;
    char v49 = v64;
    uint64_t v48 = v65;
    char v47 = v66;
    uint64_t v46 = v67;
    char v45 = v68;
    uint64_t v44 = v69;
    uint64_t v43 = v70;
    uint64_t v42 = v71;
    uint64_t v41 = v72;
    uint64_t v40 = v73;
    uint64_t v39 = v74;
    uint64_t v38 = v75;
    uint64_t v37 = v76;
    uint64_t v36 = v77;
    char v35 = v78;
    uint64_t v34 = v79;
    uint64_t v33 = v80;
    uint64_t v32 = v81;
    uint64_t v31 = v88;
    uint64_t v30 = v82;
    uint64_t v29 = v86;
    uint64_t v28 = v89;
    uint64_t v27 = v90;
    OUTLINED_FUNCTION_23_5();
    uint64_t v15 = OUTLINED_FUNCTION_97_0();
    CurrentWeather.init(metadata:asOf:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount1h:precipitationAmount6h:precipitationAmount24h:precipitationAmountNext1h:precipitationAmountNext6h:precipitationAmountNext24h:precipitationAmountPrevious1hByType:precipitationAmountPrevious6hByType:precipitationAmountPrevious24hByType:precipitationAmountNext1hByType:precipitationAmountNext6hByType:precipitationAmountNext24hByType:precipitationIntensity:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallAmount1h:snowfallAmount6h:snowfallAmount24h:snowfallAmountNext1h:snowfallAmountNext6h:snowfallAmountNext24h:sunrise:sunset:temperature:temperatureApparent:temperatureDewPoint:temperatureTodayMax:temperatureTodayMin:uvIndex:visibility:windDirection:windGust:windSpeed:)(v15, v16, v17, v91, v87, v85, v84, v83, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v115,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      (uint64_t)v9,
      (uint64_t)v6,
      v42,
      v43,
      v14,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56);
  }
  OUTLINED_FUNCTION_35_4();
}

void CurrentWeather.write(to:)()
{
  OUTLINED_FUNCTION_79_0();
  if (!v0)
  {
    type metadata accessor for CurrentWeather();
    OUTLINED_FUNCTION_53_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_7_23(v1[6]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[7]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[8]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[9]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[12]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[13]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[14]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[15]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[16]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[17]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[18]);
    OUTLINED_FUNCTION_0_26();
    sub_1A9580BA0();
    sub_1A9580BEC();
    sub_1A9631CA0();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_7_23(v1[25]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[26]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_3_24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD710);
    sub_1A95809D8();
    sub_1A9580A24();
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_7_23(v1[29]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[30]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[31]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[32]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[33]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[34]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_7_23(v1[37]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[43]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_3_24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA40);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_7_23(v1[46]);
    OUTLINED_FUNCTION_0_26();
  }
  OUTLINED_FUNCTION_73_0();
}

uint64_t Article.write(to:)()
{
  uint64_t result = sub_1A9631E20();
  if (!v0)
  {
    sub_1A9632050();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA38);
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_101_0();
    sub_1A9632050();
    sub_1A962E850();
    return sub_1A9632050();
  }
  return result;
}

uint64_t static Article.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9631E10();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t v7 = sub_1A9632040();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_85_0();
    uint64_t v8 = sub_1A9632040();
    sub_1A962E850();
    uint64_t result = sub_1A9632040();
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    a1[3] = v11;
    a1[4] = v12;
    a1[5] = v9;
    a1[6] = v10;
    a1[7] = v8;
    a1[8] = result;
  }
  return result;
}

uint64_t Coordinate.write(to:)()
{
  return sub_1A957C80C();
}

uint64_t sub_1A957C80C()
{
  uint64_t result = sub_1A96315E0();
  if (!v0) {
    return OUTLINED_FUNCTION_43_2();
  }
  return result;
}

uint64_t static Coordinate.read(from:)()
{
  return sub_1A957C888();
}

uint64_t sub_1A957C888()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    uint64_t result = OUTLINED_FUNCTION_45_2();
    *uint64_t v0 = v4;
    v0[1] = v3;
  }
  return result;
}

uint64_t ConditionCode.write(to:)()
{
  return sub_1A96315E0();
}

void static ConditionCode.read(from:)(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 0x23)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

void DayForecast.write(to:)()
{
  OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    uint64_t v1 = (int *)type metadata accessor for DayForecast();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC648);
    sub_1A9580C38();
    sub_1A9580C84();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_3_24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC6A8);
    sub_1A9580CD0();
    sub_1A9580D1C();
    OUTLINED_FUNCTION_20_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_7_23(v1[12]);
    OUTLINED_FUNCTION_0_26();
    sub_1A9580BA0();
    sub_1A9580BEC();
    OUTLINED_FUNCTION_95_0();
    sub_1A9631CA0();
    OUTLINED_FUNCTION_7_23(v1[14]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC690);
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_7_23(v1[16]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_7_23(v1[27]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_7_23(v1[29]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    DayPartForecast.write(to:)();
    DayPartForecast.write(to:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
    sub_1A9581244(&qword_1EB6DC668, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9581244(&qword_1EB6DC670, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9632320();
  }
  OUTLINED_FUNCTION_73_0();
}

uint64_t DayPartForecast.write(to:)()
{
  uint64_t result = OUTLINED_FUNCTION_61_0();
  if (!v0)
  {
    type metadata accessor for DayPartForecast();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC620);
    sub_1A9580D68();
    sub_1A9580DB4();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_7_23(v1[7]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[8]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[9]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[10]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_7_23(v1[12]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[13]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[14]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[15]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_3_24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_5_31();
    sub_1A9580BA0();
    sub_1A9580BEC();
    OUTLINED_FUNCTION_95_0();
    sub_1A9631CA0();
    OUTLINED_FUNCTION_7_23(v1[18]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_44_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC690);
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_5_31();
    OUTLINED_FUNCTION_7_23(v1[21]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[22]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_3_24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA40);
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_7_23(v1[24]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[25]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[26]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[27]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[28]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[29]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[30]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[31]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[32]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_7_23(v1[33]);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_44_2();
    return OUTLINED_FUNCTION_0_26();
  }
  return result;
}

uint64_t static DayForecast.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v82 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
  uint64_t v5 = OUTLINED_FUNCTION_2_0(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v80 = v7 - v6;
  uint64_t v77 = type metadata accessor for DayPartForecast();
  MEMORY[0x1F4188790](v77);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v8);
  uint64_t v79 = (uint64_t)&v59 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v11 = OUTLINED_FUNCTION_2_0(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v19);
  double v21 = (char *)&v59 - v20;
  MEMORY[0x1F4188790](v22);
  double v24 = (char *)&v59 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v59 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v59 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v59 - v32;
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_90_0();
  uint64_t v35 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v37 = v36;
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_67_0();
  uint64_t v39 = v90;
  uint64_t result = sub_1A962E6B0();
  if (!v39)
  {
    uint64_t v69 = v21;
    uint64_t v70 = v24;
    uint64_t v71 = v27;
    uint64_t v72 = v30;
    uint64_t v73 = v33;
    uint64_t v74 = v2;
    uint64_t v76 = v35;
    uint64_t v75 = v3;
    uint64_t v90 = v37;
    sub_1A9580C38();
    sub_1A9580C84();
    OUTLINED_FUNCTION_50_1();
    v114[0] = v114[1];
    sub_1A9632310();
    uint64_t v41 = v112;
    char v42 = v113;
    sub_1A9632310();
    uint64_t v44 = v110;
    int v45 = v111;
    sub_1A96315D0();
    uint64_t v46 = v109;
    sub_1A9580CD0();
    sub_1A9580D1C();
    OUTLINED_FUNCTION_50_1();
    uint64_t v68 = v46;
    v108[0] = v108[1];
    sub_1A9632310();
    int v67 = v45;
    sub_1A9632310();
    sub_1A96315D0();
    double v47 = v107;
    sub_1A9580BA0();
    sub_1A9580BEC();
    uint64_t v66 = sub_1A9631C90();
    OUTLINED_FUNCTION_6_24();
    double v48 = v106;
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_50_1();
    v105[0] = v105[1];
    OUTLINED_FUNCTION_6_24();
    double v49 = v104;
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_6_24();
    double v51 = v103;
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_6_24();
    double v52 = v102;
    OUTLINED_FUNCTION_4_24();
    OUTLINED_FUNCTION_41_1();
    uint64_t v53 = v100;
    char v54 = v101;
    OUTLINED_FUNCTION_41_1();
    uint64_t v55 = v98;
    char v56 = v99;
    OUTLINED_FUNCTION_41_1();
    uint64_t v57 = v96;
    int v65 = v97;
    OUTLINED_FUNCTION_41_1();
    uint64_t v64 = v94;
    int v63 = v95;
    OUTLINED_FUNCTION_41_1();
    uint64_t v62 = v92;
    int v61 = v93;
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_93_0();
    uint64_t v60 = 0;
    uint64_t v59 = sub_1A9581244(&qword_1EB6DC668, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9581244(&qword_1EB6DC670, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    uint64_t v58 = v60;
    sub_1A9632310();
    if (v58)
    {
      OUTLINED_FUNCTION_21_7();
      sub_1A9580E00(v78, (uint64_t (*)(void))type metadata accessor for DayPartForecast);
      sub_1A9580E00(v79, (uint64_t (*)(void))type metadata accessor for DayPartForecast);
      sub_1A9471308(v81);
      sub_1A9471308(v83);
      sub_1A9471308(v84);
      sub_1A9471308(v85);
      sub_1A9471308(v86);
      sub_1A9471308(v87);
      sub_1A9471308(v88);
      sub_1A9471308(v89);
      sub_1A9471308((uint64_t)v69);
      sub_1A9471308((uint64_t)v70);
      sub_1A9471308((uint64_t)v71);
      sub_1A9471308((uint64_t)v72);
      sub_1A9471308((uint64_t)v73);
      sub_1A9471308(v74);
      uint64_t v50 = OUTLINED_FUNCTION_28_6();
      return v43(v50);
    }
    else
    {
      return DayForecast.init(forecastStart:conditionCode:humidityMax:humidityMin:maxUvIndex:moonPhase:moonrise:moonset:precipitationAmount:precipitationAmountByType:precipitationChance:precipitationType:snowfallAmount:solarNoon:solarMidnight:sunrise:sunriseAstronomical:sunriseCivil:sunriseNautical:sunset:sunsetAstronomical:sunsetCivil:sunsetNautical:temperatureMax:temperatureMaxTime:temperatureMin:temperatureMinTime:visibilityMax:visibilityMin:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)(v75, v114, v41, v42, v44, v67, v68, v108, v82, v47, v48, v49, v51, v52, v74, (uint64_t)v73, v66, v105, (uint64_t)v72,
               (uint64_t)v71,
               (uint64_t)v70,
               (uint64_t)v69,
               v89,
               v88,
               v87,
               v86,
               v85,
               v84,
               v83,
               v81,
               v53,
               v54,
               v55,
               v56,
               v57,
               v65,
               v64,
               v63,
               v62,
               v61,
               v79,
               v78,
               v80);
    }
  }
  return result;
}

void static DayPartForecast.read(from:)()
{
  OUTLINED_FUNCTION_33_4();
  sub_1A962E810();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_567();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_91_0();
  sub_1A962E6B0();
  if (!v0)
  {
    sub_1A962E6B0();
    sub_1A9580D68();
    sub_1A9580DB4();
    OUTLINED_FUNCTION_50_1();
    v37[39] = v37[40];
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    static ConditionCode.read(from:)(v37);
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_85_0();
    sub_1A9580BA0();
    sub_1A9580BEC();
    uint64_t v38 = sub_1A9631C90();
    OUTLINED_FUNCTION_6_24();
    sub_1A9580940();
    sub_1A958098C();
    OUTLINED_FUNCTION_50_1();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_23_5();
    uint64_t v3 = OUTLINED_FUNCTION_97_0();
    DayPartForecast.init(forecastStart:forecastEnd:period:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:humidityMax:humidityMin:temperatureMax:temperatureMin:precipitationAmount:precipitationAmountByType:precipitationChance:precipitationType:snowfallAmount:visibilityMax:visibilityMin:windDirection:windGustSpeedMax:windSpeed:windSpeedMax:humidity:precipitationIntensityMax:perceivedPrecipitationIntensityMax:uvIndexMin:uvIndexMax:temperatureApparentMin:temperatureApparentMax:daylight:)(v3, v4, v5, v6, v35, v36, v38, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v34, v32,
      v33,
      v31,
      v30,
      v28,
      v29,
      v27,
      v26,
      v25,
      v24,
      v23,
      v22,
      v21,
      v20,
      v19,
      v18,
      v17);
  }
  OUTLINED_FUNCTION_35_4();
}

uint64_t DaySummary.write(to:)()
{
  uint64_t result = sub_1A9631E20();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA40);
    sub_1A9632320();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD9A0);
    OUTLINED_FUNCTION_40_2();
    OUTLINED_FUNCTION_40_2();
    OUTLINED_FUNCTION_40_2();
    return OUTLINED_FUNCTION_40_2();
  }
  return result;
}

uint64_t static DaySummary.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1A9631E10();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_84_0();
    uint64_t result = OUTLINED_FUNCTION_84_0();
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v15;
    *(unsigned char *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v9;
    *(unsigned char *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v7;
    *(unsigned char *)(a1 + 88) = v8;
  }
  return result;
}

void DayWeatherStatistics.write(to:)()
{
}

uint64_t static DayWeatherStatistics.read(from:)()
{
  return sub_1A957F4B4();
}

uint64_t ForecastMinute.write(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t result = sub_1A9632320();
  if (!v0)
  {
    type metadata accessor for ForecastMinute();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_82_0();
    return OUTLINED_FUNCTION_82_0();
  }
  return result;
}

int *static ForecastMinute.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v5 = OUTLINED_FUNCTION_2_0(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_36_4();
  uint64_t result = (int *)sub_1A9632310();
  if (!v1)
  {
    OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_734();
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v6);
    sub_1A94200B4(v2, a1);
    uint64_t result = (int *)type metadata accessor for ForecastMinute();
    *(void *)(a1 + result[5]) = v13;
    *(void *)(a1 + result[6]) = v12;
    *(void *)(a1 + result[7]) = v11;
  }
  return result;
}

uint64_t HistoricalFacts.write(to:)()
{
  return OUTLINED_FUNCTION_16_13();
}

uint64_t static HistoricalFacts.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HistoricalFact();
  sub_1A9581244(&qword_1E97EC3C0, (void (*)(uint64_t))type metadata accessor for HistoricalFact);
  sub_1A9581244(&qword_1E97EC3C8, (void (*)(uint64_t))type metadata accessor for HistoricalFact);
  uint64_t result = OUTLINED_FUNCTION_75_0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void MonthWeatherStatistics.write(to:)()
{
}

void sub_1A957F3BC()
{
  sub_1A96315E0();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC390);
    sub_1A9580E60();
    sub_1A9580EAC();
    OUTLINED_FUNCTION_34_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC3A8);
    sub_1A9580EF8();
    sub_1A9580F44();
    OUTLINED_FUNCTION_34_4();
  }
  OUTLINED_FUNCTION_73_0();
}

uint64_t static MonthWeatherStatistics.read(from:)()
{
  return sub_1A957F4B4();
}

uint64_t sub_1A957F4B4()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    sub_1A9580E60();
    sub_1A9580EAC();
    OUTLINED_FUNCTION_77_0();
    sub_1A9580EF8();
    sub_1A9580F44();
    uint64_t result = OUTLINED_FUNCTION_77_0();
    *(void *)uint64_t v0 = v9;
    *(void *)(v0 + 8) = v6;
    *(void *)(v0 + 16) = v7;
    *(unsigned char *)(v0 + 24) = v8;
    *(_OWORD *)(v0 + 32) = v3;
    *(void *)(v0 + 48) = v4;
    *(unsigned char *)(v0 + 56) = v5;
  }
  return result;
}

void News.write(to:)()
{
}

void sub_1A957F5F8()
{
  OUTLINED_FUNCTION_94_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  Metadata.write(to:)();
  if (!v0)
  {
    v6(0);
    v4();
    v2();
    sub_1A9632050();
  }
  OUTLINED_FUNCTION_100_0();
}

uint64_t static News.read(from:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1A957F6EC((void (*)(uint64_t))sub_1A9580F90, (void (*)(void))sub_1A9580FDC, (uint64_t (*)(void))type metadata accessor for News, a1);
}

uint64_t sub_1A957F6EC@<X0>(void (*a1)(uint64_t)@<X1>, void (*a2)(void)@<X2>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for Metadata();
  uint64_t v11 = OUTLINED_FUNCTION_2_0(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_56();
  uint64_t result = static Metadata.read(from:)();
  if (!v4)
  {
    a1(result);
    a2();
    uint64_t v13 = sub_1A9632040();
    sub_1A943C990(v5, a4);
    uint64_t result = a3(0);
    *(void *)(a4 + *(int *)(result + 20)) = v13;
  }
  return result;
}

uint64_t Placement.write(to:)()
{
  sub_1A9581028();
  sub_1A9581074();
  uint64_t result = sub_1A9632050();
  if (!v0) {
    return PlacementLocation.write(to:)();
  }
  return result;
}

uint64_t PlacementLocation.write(to:)()
{
  return sub_1A96315E0();
}

void static Placement.read(from:)()
{
  OUTLINED_FUNCTION_46_1();
  sub_1A9581028();
  sub_1A9581074();
  uint64_t v2 = sub_1A9632040();
  if (!v1)
  {
    uint64_t v3 = v2;
    static PlacementLocation.read(from:)(&v5);
    char v4 = v5;
    *(void *)uint64_t v0 = v3;
    *(unsigned char *)(v0 + 8) = v4;
  }
}

void static PlacementLocation.read(from:)(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 0xF)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

uint64_t Pollutant.write(to:)()
{
  uint64_t result = sub_1A9631E20();
  if (!v0)
  {
    OUTLINED_FUNCTION_43_2();
    return sub_1A96315E0();
  }
  return result;
}

uint64_t PollutantUnits.write(to:)()
{
  return sub_1A957FD14();
}

uint64_t sub_1A957FD14()
{
  return sub_1A96315E0();
}

uint64_t static Pollutant.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1A9631E10();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    OUTLINED_FUNCTION_12_16();
    uint64_t result = OUTLINED_FUNCTION_12_16();
    if (v9 == 1)
    {
      char v7 = 0;
      goto LABEL_8;
    }
    if (v9 == 2)
    {
      char v7 = 1;
LABEL_8:
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v10;
      *(unsigned char *)(a1 + 24) = v7;
      return result;
    }
    sub_1A9631420();
    sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
    OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_13_16();
    v8();
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static PollutantUnits.read(from:)@<X0>(char *a1@<X8>)
{
  return sub_1A9576A58(a1);
}

uint64_t PrecipitationAmountRange.write(to:)()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    OUTLINED_FUNCTION_43_2();
    OUTLINED_FUNCTION_43_2();
    OUTLINED_FUNCTION_43_2();
    OUTLINED_FUNCTION_43_2();
    return OUTLINED_FUNCTION_43_2();
  }
  return result;
}

uint64_t static PrecipitationAmountRange.read(from:)()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_45_2();
    uint64_t result = OUTLINED_FUNCTION_45_2();
    *uint64_t v0 = v8;
    v0[1] = v7;
    v0[2] = v6;
    v0[3] = v5;
    v0[4] = v4;
    v0[5] = v3;
  }
  return result;
}

void TrendDeviation.write(to:)()
{
  OUTLINED_FUNCTION_80_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_72_0();
  sub_1A9632320();
  if (!v0)
  {
    type metadata accessor for TrendDeviation();
    OUTLINED_FUNCTION_87_0();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB6DACC0);
    sub_1A95810C0();
    sub_1A958110C();
    OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_26_4();
  }
  OUTLINED_FUNCTION_83_0();
}

void static TrendDeviation.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14)
{
  OUTLINED_FUNCTION_3();
  uint64_t v17 = v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v19 = OUTLINED_FUNCTION_2_0(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_6_1();
  uint64_t v20 = sub_1A962E810();
  OUTLINED_FUNCTION_97_0();
  sub_1A9632310();
  if (!v14)
  {
    sub_1A95810C0();
    sub_1A958110C();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_734();
    __swift_storeEnumTagSinglePayload(v21, v22, v23, v20);
    uint64_t v24 = (int *)type metadata accessor for TrendDeviation();
    uint64_t v25 = v24[5];
    *(unsigned char *)(v17 + v25) = 4;
    uint64_t v26 = v24[6];
    *(unsigned char *)(v17 + v26) = 4;
    uint64_t v27 = v24[7];
    *(unsigned char *)(v17 + v27) = 4;
    uint64_t v28 = v24[8];
    *(unsigned char *)(v17 + v28) = 4;
    sub_1A94200B4(v15, v17);
    *(unsigned char *)(v17 + v25) = a14;
    *(unsigned char *)(v17 + v26) = a13;
    *(unsigned char *)(v17 + v27) = a12;
    *(unsigned char *)(v17 + v28) = a11;
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t Deviation.write(to:)()
{
  return sub_1A95816AC();
}

void static Deviation.read(from:)(unsigned char *a1@<X8>)
{
}

void sub_1A95803C0(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_37_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_69_0();
    if (v3 >= 5)
    {
      sub_1A9631420();
      sub_1A9581244(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      uint64_t v4 = OUTLINED_FUNCTION_11_17();
      OUTLINED_FUNCTION_31_3(v4, v5);
      OUTLINED_FUNCTION_14_15();
      OUTLINED_FUNCTION_13_16();
      v6();
      swift_willThrow();
    }
    else
    {
      *a1 = v3;
    }
  }
}

unint64_t sub_1A9580494()
{
  unint64_t result = qword_1E97EC328;
  if (!qword_1E97EC328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC328);
  }
  return result;
}

unint64_t sub_1A95804E0()
{
  unint64_t result = qword_1E97EC330;
  if (!qword_1E97EC330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC330);
  }
  return result;
}

unint64_t sub_1A958052C()
{
  unint64_t result = qword_1E97EC338;
  if (!qword_1E97EC338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC338);
  }
  return result;
}

unint64_t sub_1A9580578()
{
  unint64_t result = qword_1E97EC340;
  if (!qword_1E97EC340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC340);
  }
  return result;
}

unint64_t sub_1A95805C4()
{
  unint64_t result = qword_1EB6DD940;
  if (!qword_1EB6DD940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD940);
  }
  return result;
}

unint64_t sub_1A9580610()
{
  unint64_t result = qword_1EB6DD948;
  if (!qword_1EB6DD948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD948);
  }
  return result;
}

unint64_t sub_1A958065C()
{
  unint64_t result = qword_1EB6DC430;
  if (!qword_1EB6DC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC430);
  }
  return result;
}

unint64_t sub_1A95806A8()
{
  unint64_t result = qword_1EB6DC438;
  if (!qword_1EB6DC438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC438);
  }
  return result;
}

unint64_t sub_1A95806F4()
{
  unint64_t result = qword_1EB6DC548;
  if (!qword_1EB6DC548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC548);
  }
  return result;
}

unint64_t sub_1A9580740()
{
  unint64_t result = qword_1EB6DC550;
  if (!qword_1EB6DC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC550);
  }
  return result;
}

uint64_t sub_1A958078C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DC568);
    sub_1A95806F4();
    sub_1A9580740();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9580810()
{
  unint64_t result = qword_1E97EC348;
  if (!qword_1E97EC348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC348);
  }
  return result;
}

unint64_t sub_1A958085C()
{
  unint64_t result = qword_1E97EC350;
  if (!qword_1E97EC350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC350);
  }
  return result;
}

unint64_t sub_1A95808A8()
{
  unint64_t result = qword_1E97EC358;
  if (!qword_1E97EC358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC358);
  }
  return result;
}

unint64_t sub_1A95808F4()
{
  unint64_t result = qword_1E97EC360;
  if (!qword_1E97EC360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC360);
  }
  return result;
}

unint64_t sub_1A9580940()
{
  unint64_t result = qword_1EB6DC680;
  if (!qword_1EB6DC680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC680);
  }
  return result;
}

unint64_t sub_1A958098C()
{
  unint64_t result = qword_1EB6DC688;
  if (!qword_1EB6DC688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC688);
  }
  return result;
}

unint64_t sub_1A95809D8()
{
  unint64_t result = qword_1EB6DD700;
  if (!qword_1EB6DD700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD700);
  }
  return result;
}

unint64_t sub_1A9580A24()
{
  unint64_t result = qword_1EB6DD708;
  if (!qword_1EB6DD708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD708);
  }
  return result;
}

unint64_t sub_1A9580A70()
{
  unint64_t result = qword_1E97EC368;
  if (!qword_1E97EC368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC368);
  }
  return result;
}

unint64_t sub_1A9580ABC()
{
  unint64_t result = qword_1E97EC370;
  if (!qword_1E97EC370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC370);
  }
  return result;
}

unint64_t sub_1A9580B08()
{
  unint64_t result = qword_1E97EC378;
  if (!qword_1E97EC378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC378);
  }
  return result;
}

unint64_t sub_1A9580B54()
{
  unint64_t result = qword_1E97EC380;
  if (!qword_1E97EC380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC380);
  }
  return result;
}

unint64_t sub_1A9580BA0()
{
  unint64_t result = qword_1EB6DD2B8;
  if (!qword_1EB6DD2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD2B8);
  }
  return result;
}

unint64_t sub_1A9580BEC()
{
  unint64_t result = qword_1EB6DD2C0;
  if (!qword_1EB6DD2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DD2C0);
  }
  return result;
}

unint64_t sub_1A9580C38()
{
  unint64_t result = qword_1EB6DC638;
  if (!qword_1EB6DC638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC638);
  }
  return result;
}

unint64_t sub_1A9580C84()
{
  unint64_t result = qword_1EB6DC640;
  if (!qword_1EB6DC640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC640);
  }
  return result;
}

unint64_t sub_1A9580CD0()
{
  unint64_t result = qword_1EB6DC698;
  if (!qword_1EB6DC698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC698);
  }
  return result;
}

unint64_t sub_1A9580D1C()
{
  unint64_t result = qword_1EB6DC6A0;
  if (!qword_1EB6DC6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC6A0);
  }
  return result;
}

unint64_t sub_1A9580D68()
{
  unint64_t result = qword_1EB6DC5F8;
  if (!qword_1EB6DC5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC5F8);
  }
  return result;
}

unint64_t sub_1A9580DB4()
{
  unint64_t result = qword_1EB6DC600;
  if (!qword_1EB6DC600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC600);
  }
  return result;
}

uint64_t sub_1A9580E00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A9580E60()
{
  unint64_t result = qword_1E97EC398;
  if (!qword_1E97EC398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC398);
  }
  return result;
}

unint64_t sub_1A9580EAC()
{
  unint64_t result = qword_1E97EC3A0;
  if (!qword_1E97EC3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC3A0);
  }
  return result;
}

unint64_t sub_1A9580EF8()
{
  unint64_t result = qword_1E97EC3B0;
  if (!qword_1E97EC3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC3B0);
  }
  return result;
}

unint64_t sub_1A9580F44()
{
  unint64_t result = qword_1E97EC3B8;
  if (!qword_1E97EC3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC3B8);
  }
  return result;
}

unint64_t sub_1A9580F90()
{
  unint64_t result = qword_1EB6DA950;
  if (!qword_1EB6DA950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA950);
  }
  return result;
}

unint64_t sub_1A9580FDC()
{
  unint64_t result = qword_1EB6DA958;
  if (!qword_1EB6DA958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA958);
  }
  return result;
}

unint64_t sub_1A9581028()
{
  unint64_t result = qword_1EB6DA8F0;
  if (!qword_1EB6DA8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8F0);
  }
  return result;
}

unint64_t sub_1A9581074()
{
  unint64_t result = qword_1EB6DA8F8;
  if (!qword_1EB6DA8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8F8);
  }
  return result;
}

unint64_t sub_1A95810C0()
{
  unint64_t result = qword_1EB6DB628;
  if (!qword_1EB6DB628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB628);
  }
  return result;
}

unint64_t sub_1A958110C()
{
  unint64_t result = qword_1EB6DB630;
  if (!qword_1EB6DB630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB630);
  }
  return result;
}

void WeatherComparisons.write(to:)()
{
  OUTLINED_FUNCTION_94_0();
  type metadata accessor for WeatherComparison();
  sub_1A9581244(&qword_1EB6DA860, (void (*)(uint64_t))type metadata accessor for WeatherComparison);
  sub_1A9581244(&qword_1EB6DA868, (void (*)(uint64_t))type metadata accessor for WeatherComparison);
  sub_1A9632050();
  if (!v0)
  {
    type metadata accessor for WeatherComparisons();
    Metadata.write(to:)();
  }
  OUTLINED_FUNCTION_100_0();
}

uint64_t sub_1A9581244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static WeatherComparisons.read(from:)()
{
  OUTLINED_FUNCTION_94_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Metadata();
  uint64_t v4 = OUTLINED_FUNCTION_2_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  type metadata accessor for WeatherComparison();
  sub_1A9581244(&qword_1EB6DA860, (void (*)(uint64_t))type metadata accessor for WeatherComparison);
  sub_1A9581244(&qword_1EB6DA868, (void (*)(uint64_t))type metadata accessor for WeatherComparison);
  uint64_t v8 = sub_1A9632040();
  if (!v0)
  {
    uint64_t v9 = v8;
    static Metadata.read(from:)();
    *uint64_t v2 = v9;
    uint64_t v10 = type metadata accessor for WeatherComparisons();
    sub_1A943C990(v7, (uint64_t)v2 + *(int *)(v10 + 20));
  }
  OUTLINED_FUNCTION_100_0();
}

uint64_t Certainty.write(to:)()
{
  return sub_1A95816AC();
}

void static Certainty.read(from:)(unsigned char *a1@<X8>)
{
}

uint64_t Importance.write(to:)()
{
  return sub_1A958141C();
}

uint64_t sub_1A958141C()
{
  return sub_1A96315E0();
}

uint64_t static Importance.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A95796C4(a1);
}

uint64_t MoonPhase.write(to:)()
{
  return sub_1A958151C();
}

uint64_t sub_1A958151C()
{
  return sub_1A96315E0();
}

uint64_t static MoonPhase.read(from:)@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A957AD74(a1);
}

uint64_t Severity.write(to:)()
{
  return sub_1A95816AC();
}

uint64_t sub_1A95816AC()
{
  return sub_1A96315E0();
}

void static Severity.read(from:)(unsigned char *a1@<X8>)
{
}

uint64_t Metadata.Units.write(to:)()
{
  return WeatherComparison.BaselineType.write(to:)();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_1A9632310();
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return sub_1A9632310();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return sub_1A943C990(v1, v0);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return *(void *)(v0 - 432);
}

uint64_t OUTLINED_FUNCTION_101_0()
{
  return sub_1A9632320();
}

uint64_t Double.humanReadableDescription.getter()
{
  return 0;
}

WeatherDaemon::PlacementLocation_optional __swiftcall PlacementLocation.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PlacementLocation.rawValue.getter()
{
  uint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      uint64_t result = 0x79746964696D7568;
      break;
    case 3:
      unsigned int v2 = 1852796781;
      goto LABEL_16;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0xD000000000000018;
      break;
    case 6:
      uint64_t result = 0xD000000000000012;
      break;
    case 7:
      uint64_t result = 0x6557657265766573;
      break;
    case 8:
      uint64_t result = 0xD000000000000014;
      break;
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      uint64_t result = 0x73646E657274;
      break;
    case 0xB:
      uint64_t result = 0xD000000000000016;
      break;
    case 0xC:
      uint64_t result = 0x6C69617465447675;
      break;
    case 0xE:
      unsigned int v2 = 1684957559;
LABEL_16:
      uint64_t result = v2 | 0x6174654400000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9581B88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950B580(*a1, *a2);
}

unint64_t sub_1A9581B98()
{
  unint64_t result = qword_1E97EC3D0;
  if (!qword_1E97EC3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC3D0);
  }
  return result;
}

uint64_t sub_1A9581BE4()
{
  return sub_1A95C934C();
}

uint64_t sub_1A9581BEC(uint64_t a1)
{
  return sub_1A94AC540(a1, *v1);
}

uint64_t sub_1A9581BF4()
{
  return sub_1A94ADD10();
}

WeatherDaemon::PlacementLocation_optional sub_1A9581BFC(Swift::String *a1)
{
  return PlacementLocation.init(rawValue:)(*a1);
}

uint64_t sub_1A9581C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PlacementLocation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9581C30()
{
  return sub_1A9632000();
}

uint64_t sub_1A9581C90()
{
  return sub_1A9631FB0();
}

void sub_1A9581CE0(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A9581CF8()
{
  return PlacementLocation.write(to:)();
}

uint64_t getEnumTagSinglePayload for PlacementLocation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlacementLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9581E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlacementLocation()
{
  return &type metadata for PlacementLocation;
}

unint64_t sub_1A9581E9C()
{
  unint64_t result = qword_1EB6DA8A0;
  if (!qword_1EB6DA8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8A0);
  }
  return result;
}

uint64_t Importance.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    BOOL v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    Importance.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 4) {
      char v9 = 3;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::Importance_optional __swiftcall Importance.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Importance.rawValue.getter()
{
  uint64_t result = 1751607656;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7827308;
      break;
    case 2:
      uint64_t result = 0x6C616D726F6ELL;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A958208C(unsigned __int8 *a1, char *a2)
{
  return sub_1A950C0F0(*a1, *a2);
}

unint64_t sub_1A958209C()
{
  unint64_t result = qword_1E97EC3D8[0];
  if (!qword_1E97EC3D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E97EC3D8);
  }
  return result;
}

uint64_t sub_1A95820E8()
{
  return sub_1A95C9358(*v0);
}

uint64_t sub_1A95820F0(uint64_t a1)
{
  return sub_1A94ACD64(a1, *v1);
}

uint64_t sub_1A95820F8()
{
  return sub_1A94AD8D4();
}

WeatherDaemon::Importance_optional sub_1A9582100(Swift::String *a1)
{
  return Importance.init(rawValue:)(*a1);
}

uint64_t sub_1A958210C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Importance.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9582134@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Importance.init(from:)(a1, a2);
}

uint64_t sub_1A958214C()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A958219C@<X0>(unsigned char *a1@<X8>)
{
  return static Importance.read(from:)(a1);
}

uint64_t sub_1A95821B4()
{
  return Importance.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for Importance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9582298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Importance()
{
  return &type metadata for Importance;
}

unint64_t sub_1A95822D0()
{
  unint64_t result = qword_1EB6DAFB8;
  if (!qword_1EB6DAFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAFB8);
  }
  return result;
}

Swift::Bool __swiftcall GeoJSON.FeatureCollection.contains(_:)(__C::CLLocationCoordinate2D a1)
{
  if (*(void *)(v1 + 8))
  {
    ((void (*)())MEMORY[0x1F4188790])();
    type metadata accessor for GeoJSON.Feature();
    sub_1A96320A0();
    swift_getWitnessTable();
    char v2 = sub_1A9631F50();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

BOOL static GeoJSON.FeatureCollection.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A9632330();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_1();
  uint64_t v47 = v13;
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v42 - v14;
  OUTLINED_FUNCTION_0_1();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v42 - v25;
  uint64_t v27 = *a2;
  if (*a1)
  {
    if (!v27 || !sub_1A947A7C0(*a1, v27)) {
      return 0;
    }
  }
  else if (v27)
  {
    return 0;
  }
  uint64_t v44 = v17;
  int v45 = v15;
  uint64_t v28 = a2[1];
  if (a1[1])
  {
    if (!v28) {
      return 0;
    }
    uint64_t v43 = v8;
    type metadata accessor for GeoJSON.Feature();
    sub_1A9631510();
    sub_1A9631510();
    swift_getWitnessTable();
    char v29 = sub_1A96320B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v43 = v8;
    if (v28) {
      return 0;
    }
  }
  type metadata accessor for GeoJSON.FeatureCollection();
  uint64_t v30 = v44;
  uint64_t v31 = *(void (**)(void))(v44 + 16);
  OUTLINED_FUNCTION_2_32();
  v31();
  OUTLINED_FUNCTION_2_32();
  v31();
  uint64_t v32 = (uint64_t)v45;
  uint64_t v33 = (uint64_t)&v45[*(int *)(v48 + 48)];
  OUTLINED_FUNCTION_2_32();
  v31();
  OUTLINED_FUNCTION_2_32();
  v31();
  OUTLINED_FUNCTION_6_3(v32);
  if (v35)
  {
    uint64_t v34 = *(void (**)(void))(v30 + 8);
    OUTLINED_FUNCTION_3_25();
    v34();
    OUTLINED_FUNCTION_3_25();
    v34();
    OUTLINED_FUNCTION_6_3(v33);
    if (v35)
    {
      OUTLINED_FUNCTION_3_25();
      v34();
      return 1;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_2_32();
  v31();
  OUTLINED_FUNCTION_6_3(v33);
  if (v35)
  {
    char v36 = *(void (**)(char *, uint64_t))(v44 + 8);
    v36(v23, v11);
    v36(v26, v11);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, a3);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
    return 0;
  }
  uint64_t v37 = v43;
  uint64_t v38 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v46, v33, a3);
  LODWORD(v49) = sub_1A9631D30();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
  v39(v38, a3);
  uint64_t v40 = *(void (**)(void))(v44 + 8);
  OUTLINED_FUNCTION_9_0();
  v40();
  OUTLINED_FUNCTION_9_0();
  v40();
  v39(v20, a3);
  OUTLINED_FUNCTION_9_0();
  v40();
  return (v49 & 1) != 0;
}

uint64_t GeoJSON.FeatureCollection.boundingBox.getter()
{
  return sub_1A9631510();
}

uint64_t GeoJSON.FeatureCollection.features.getter()
{
  return sub_1A9631510();
}

uint64_t GeoJSON.FeatureCollection.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1A9632330();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t GeoJSON.FeatureCollection.init(boundingBox:features:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for GeoJSON.FeatureCollection() + 40);
  uint64_t v6 = sub_1A9632330();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

BOOL sub_1A9582944(double a1, double a2)
{
  return GeoJSON.Feature.contains(_:)((__C::CLLocationCoordinate2D)__PAIR128__(*(unint64_t *)&a2, *(unint64_t *)&a1));
}

BOOL sub_1A9582994()
{
  return sub_1A9582944(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t type metadata accessor for GeoJSON.FeatureCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A95829D0()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A9582A20(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 2020565602;
      break;
    case 2:
      uint64_t result = 0x7365727574616566;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9582AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9582B1C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A9582B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9582BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A9582C68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95829D0();
  *a1 = result;
  return result;
}

uint64_t sub_1A9582CA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A9582A20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A9582CD0()
{
  return sub_1A9582AA4(*v0);
}

uint64_t sub_1A9582CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1A9582A1C(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A9582D0C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A9582D60(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t GeoJSON.FeatureCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v30 = a3;
  sub_1A9632330();
  OUTLINED_FUNCTION_0_1();
  uint64_t v28 = v5;
  uint64_t v29 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v32 = a2;
  _s17FeatureCollectionV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v33 = sub_1A96326B0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v24 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v34 = v15;
  uint64_t v16 = (uint64_t)a1;
  uint64_t v17 = v35;
  sub_1A9632950();
  if (!v17)
  {
    char v35 = v11;
    uint64_t v27 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
    char v37 = 1;
    sub_1A9500AC8(&qword_1E97EB738);
    sub_1A9632630();
    uint64_t v26 = a1;
    uint64_t v18 = v38;
    type metadata accessor for GeoJSON.Feature();
    sub_1A96320A0();
    char v37 = 2;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1A9632630();
    uint64_t v25 = v38;
    LOBYTE(v38) = 3;
    uint64_t v19 = v35;
    sub_1A9632630();
    uint64_t v16 = (uint64_t)v26;
    uint64_t v20 = OUTLINED_FUNCTION_1_36();
    v21(v20);
    uint64_t v22 = (uint64_t)v27;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v27, v19, v28);
    GeoJSON.FeatureCollection.init(boundingBox:features:properties:)(v18, v25, v22, v30);
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t _s17FeatureCollectionV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t GeoJSON.FeatureCollection.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v15[0] = *(void *)(a2 + 24);
  v15[1] = v4;
  _s17FeatureCollectionV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v5 = sub_1A9632790();
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9632970();
  LOBYTE(v20) = 0;
  uint64_t v11 = v17;
  sub_1A9632730();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  }
  uint64_t v17 = a2;
  uint64_t v13 = v7;
  uint64_t v14 = v16;
  uint64_t v20 = *v16;
  char v19 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
  sub_1A9500AC8(&qword_1E97EB760);
  OUTLINED_FUNCTION_6_25();
  sub_1A9632720();
  uint64_t v20 = v14[1];
  char v19 = 2;
  type metadata accessor for GeoJSON.Feature();
  sub_1A96320A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_6_25();
  sub_1A9632720();
  LOBYTE(v20) = 3;
  sub_1A9632720();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v5);
}

uint64_t sub_1A9583418@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return GeoJSON.FeatureCollection.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_1A9583438(void *a1, uint64_t a2)
{
  return GeoJSON.FeatureCollection.encode(to:)(a1, a2);
}

BOOL sub_1A9583450(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static GeoJSON.FeatureCollection.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1A958345C()
{
  uint64_t result = sub_1A9632330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A95834F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  int v11 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v12 = v10 + ((v9 + 16) & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_28:
      if (v7 > 0x7FFFFFFE)
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9, v6, v4);
        if (EnumTagSinglePayload >= 2) {
          return EnumTagSinglePayload - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v18 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_28;
  }
LABEL_20:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v12 | v17) + 1;
}

void sub_1A95836D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  size_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v14;
  }
  size_t v15 = v13 + v14;
  char v16 = 8 * (v13 + v14);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        int v6 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v19 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v22 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v15] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v21;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1A95839DCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v10 > 0x7FFFFFFE)
        {
          uint64_t v23 = (unsigned char *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12);
          if (v10 >= a2)
          {
            uint64_t v27 = a2 + 1;
            unint64_t v28 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
            __swift_storeEnumTagSinglePayload(v28, v27, v9, v7);
          }
          else
          {
            if (v14 <= 3) {
              int v24 = ~(-1 << (8 * v14));
            }
            else {
              int v24 = -1;
            }
            if (v14)
            {
              int v25 = v24 & (~v10 + a2);
              if (v14 <= 3) {
                int v26 = v14;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v14);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  *uint64_t v23 = v25;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)a1 = a2;
        }
      }
      return;
  }
}

unsigned char *sub_1A9583A14(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9583AE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1A9583B08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A9583B24()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A9583B40()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A9583B5C(uint64_t a1)
{
  return sub_1A94700C4(a1, &qword_1E9802C70);
}

uint64_t WeatherRequestHourlyRelativeRange.RelativeTo.rawValue.getter()
{
  if (*v0) {
    return 7827310;
  }
  else {
    return 7954788;
  }
}

WeatherDaemon::WeatherRequestHourlyRelativeRange::RelativeTo_optional __swiftcall WeatherRequestHourlyRelativeRange.RelativeTo.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A9583BF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950C388(*a1, *a2);
}

uint64_t sub_1A9583BFC()
{
  return sub_1A95C9370(*v0);
}

uint64_t sub_1A9583C04(uint64_t a1)
{
  return sub_1A94ACEDC(a1, *v1);
}

uint64_t sub_1A9583C0C(uint64_t a1)
{
  return sub_1A94AD85C(a1, *v1);
}

WeatherDaemon::WeatherRequestHourlyRelativeRange::RelativeTo_optional sub_1A9583C14(Swift::String *a1)
{
  return WeatherRequestHourlyRelativeRange.RelativeTo.init(rawValue:)(*a1);
}

uint64_t sub_1A9583C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WeatherRequestHourlyRelativeRange.RelativeTo.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1A9583C4C()
{
  return sub_1A9632000();
}

uint64_t sub_1A9583CAC()
{
  return sub_1A9631FB0();
}

uint64_t WeatherRequestHourlyRelativeRange.init(start:end:relativeTo:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a3;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = v7;
  uint64_t v8 = a5 + *(int *)(type metadata accessor for WeatherRequestHourlyRelativeRange() + 28);
  uint64_t v9 = sub_1A962E810();
  unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  return v10(v8, a4, v9);
}

uint64_t sub_1A9583D84(char a1)
{
  uint64_t result = 0x7472617473;
  switch(a1)
  {
    case 1:
      uint64_t result = 6581861;
      break;
    case 2:
      uint64_t result = 0x65766974616C6572;
      break;
    case 3:
      uint64_t result = 7827310;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9583E08()
{
  return sub_1A9583D84(*v0);
}

uint64_t sub_1A9583E10(uint64_t a1)
{
  unint64_t v2 = sub_1A9584064();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9583E4C(uint64_t a1)
{
  unint64_t v2 = sub_1A9584064();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherRequestHourlyRelativeRange.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC4E0);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9584064();
  sub_1A9632970();
  sub_1A9632760();
  if (!v1)
  {
    sub_1A9632760();
    sub_1A95840B0();
    sub_1A9632770();
    type metadata accessor for WeatherRequestHourlyRelativeRange();
    sub_1A962E810();
    sub_1A947198C(&qword_1EB6DC8D0);
    sub_1A9632770();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A9584064()
{
  unint64_t result = qword_1E97EC4E8;
  if (!qword_1E97EC4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC4E8);
  }
  return result;
}

unint64_t sub_1A95840B0()
{
  unint64_t result = qword_1E97EC4F0;
  if (!qword_1E97EC4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC4F0);
  }
  return result;
}

uint64_t WeatherRequestHourlyRelativeRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v20 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC4F8);
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v10;
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9584064();
  sub_1A9632950();
  if (!v23)
  {
    *(void *)uint64_t v17 = sub_1A9632670();
    *(void *)(v17 + 8) = sub_1A9632670();
    sub_1A95843C8();
    sub_1A9632680();
    *(unsigned char *)(v17 + 16) = v24;
    sub_1A947198C(&qword_1EB6DC8D8);
    sub_1A9632680();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v17 + *(int *)(v14 + 28), v8, v3);
    sub_1A9584414(v17, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95843C8()
{
  unint64_t result = qword_1E97EC500;
  if (!qword_1E97EC500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC500);
  }
  return result;
}

uint64_t sub_1A9584414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A958447C()
{
  unint64_t result = qword_1E97EC508;
  if (!qword_1E97EC508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC508);
  }
  return result;
}

uint64_t sub_1A95844C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestHourlyRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A95844E0(void *a1)
{
  return WeatherRequestHourlyRelativeRange.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A95847E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1A962E810();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1A9584864(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestHourlyRelativeRange.RelativeTo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95849ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestHourlyRelativeRange.RelativeTo()
{
  return &type metadata for WeatherRequestHourlyRelativeRange.RelativeTo;
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestHourlyRelativeRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9584AB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestHourlyRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys;
}

unint64_t sub_1A9584AEC()
{
  unint64_t result = qword_1E97EC510;
  if (!qword_1E97EC510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC510);
  }
  return result;
}

unint64_t sub_1A9584B3C()
{
  unint64_t result = qword_1E97EC518;
  if (!qword_1E97EC518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC518);
  }
  return result;
}

unint64_t sub_1A9584B8C()
{
  unint64_t result = qword_1E97EC520;
  if (!qword_1E97EC520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC520);
  }
  return result;
}

unint64_t sub_1A9584BD8()
{
  unint64_t result = qword_1E97EC528;
  if (!qword_1E97EC528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC528);
  }
  return result;
}

uint64_t sub_1A9584C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayPartForecast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DayForecast.forecastStart.setter(uint64_t a1)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*DayForecast.forecastStart.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.conditionCode.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for DayForecast();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*DayForecast.conditionCode.modify())(void)
{
  return nullsub_1;
}

void DayForecast.humidityMax.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 24));
}

uint64_t (*DayForecast.humidityMax.modify())(void)
{
  return nullsub_1;
}

void DayForecast.humidityMin.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 28));
}

uint64_t (*DayForecast.humidityMin.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.maxUvIndex.setter()
{
  uint64_t result = OUTLINED_FUNCTION_1_37();
  *(void *)(v1 + *(int *)(result + 32)) = v0;
  return result;
}

uint64_t (*DayForecast.maxUvIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.moonPhase.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for DayForecast();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*DayForecast.moonPhase.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.moonrise.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 40), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.moonrise.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.moonset.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 44), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.moonset.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.precipitationAmount.setter()
{
  uint64_t result = OUTLINED_FUNCTION_21_8();
  *(void *)(v0 + *(int *)(result + 48)) = v1;
  return result;
}

uint64_t (*DayForecast.precipitationAmount.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.precipitationAmountByType.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_1_37() + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*DayForecast.precipitationAmountByType.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.precipitationChance.setter()
{
  uint64_t result = OUTLINED_FUNCTION_21_8();
  *(void *)(v0 + *(int *)(result + 56)) = v1;
  return result;
}

uint64_t (*DayForecast.precipitationChance.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.precipitationType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for DayForecast();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = v2;
  return result;
}

uint64_t (*DayForecast.precipitationType.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.snowfallAmount.setter()
{
  uint64_t result = OUTLINED_FUNCTION_21_8();
  *(void *)(v0 + *(int *)(result + 64)) = v1;
  return result;
}

uint64_t (*DayForecast.snowfallAmount.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.solarNoon.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 68), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.solarNoon.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.solarMidnight.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 72), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.solarMidnight.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunrise.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 76), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunrise.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunriseAstronomical.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 80), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunriseAstronomical.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunriseCivil.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 84), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunriseCivil.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunriseNautical.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 88), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunriseNautical.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunset.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 92), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunset.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunsetAstronomical.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 96), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunsetAstronomical.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunsetCivil.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 100), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunsetCivil.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.sunsetNautical.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 104), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.sunsetNautical.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.temperatureMax.setter()
{
  uint64_t result = OUTLINED_FUNCTION_21_8();
  *(void *)(v0 + *(int *)(result + 108)) = v1;
  return result;
}

uint64_t (*DayForecast.temperatureMax.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.temperatureMaxTime.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 112), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.temperatureMaxTime.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.temperatureMin.setter()
{
  uint64_t result = OUTLINED_FUNCTION_21_8();
  *(void *)(v0 + *(int *)(result + 116)) = v1;
  return result;
}

uint64_t (*DayForecast.temperatureMin.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.temperatureMinTime.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 120), &qword_1EB6DE3A0);
}

uint64_t (*DayForecast.temperatureMinTime.modify())(void)
{
  return nullsub_1;
}

void DayForecast.visibilityMax.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 124));
}

uint64_t (*DayForecast.visibilityMax.modify())(void)
{
  return nullsub_1;
}

void DayForecast.visibilityMin.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 128));
}

uint64_t (*DayForecast.visibilityMin.modify())(void)
{
  return nullsub_1;
}

void DayForecast.windGustSpeedMax.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 132));
}

uint64_t (*DayForecast.windGustSpeedMax.modify())(void)
{
  return nullsub_1;
}

void DayForecast.windSpeedAvg.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 136));
}

uint64_t (*DayForecast.windSpeedAvg.modify())(void)
{
  return nullsub_1;
}

void DayForecast.windSpeedMax.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_10_1(*(int *)(v0 + 140));
}

uint64_t (*DayForecast.windSpeedMax.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A9585AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayPartForecast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DayForecast.daytimeForecast.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_1_37() + 144);
  return sub_1A9585B80(v0, v2);
}

uint64_t sub_1A9585B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayPartForecast();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DayForecast.daytimeForecast.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.overnightForecast.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_1_37() + 148);
  return sub_1A9585B80(v0, v2);
}

uint64_t (*DayForecast.overnightForecast.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.restOfDayForecast.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_1_37();
  return sub_1A94429D8(v0, v1 + *(int *)(v2 + 152), &qword_1EB6DC678);
}

uint64_t (*DayForecast.restOfDayForecast.modify())(void)
{
  return nullsub_1;
}

uint64_t DayForecast.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v79 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for DayPartForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v7);
  uint64_t v83 = (uint64_t)&v60 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_12();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v60 - v22;
  MEMORY[0x1F4188790](v24);
  int v26 = (char *)&v60 - v25;
  uint64_t v27 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v96 = v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC2E0);
  OUTLINED_FUNCTION_1();
  uint64_t v97 = v33;
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_26();
  uint64_t v35 = a1[3];
  uint64_t v98 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_1A9586A74();
  char v36 = v99;
  sub_1A9632950();
  if (!v36)
  {
    uint64_t v78 = v23;
    char v99 = v26;
    LOBYTE(v115) = 0;
    uint64_t v37 = sub_1A958856C(&qword_1EB6DC8D8, MEMORY[0x1E4F27928]);
    uint64_t v38 = v2;
    sub_1A9632680();
    uint64_t v39 = v27;
    uint64_t v76 = v37;
    uint64_t v77 = v31;
    LOBYTE(v115) = 1;
    sub_1A9541C0C();
    sub_1A96325D0();
    v117[0] = v117[1];
    LOBYTE(v113) = 2;
    OUTLINED_FUNCTION_26_5();
    uint64_t v40 = v115;
    int v41 = v116;
    LOBYTE(v109) = 3;
    OUTLINED_FUNCTION_26_5();
    uint64_t v42 = v113;
    int v43 = v114;
    LOBYTE(v109) = 4;
    uint64_t v71 = sub_1A9632670();
    int v72 = v43;
    uint64_t v73 = v42;
    int v74 = v41;
    uint64_t v75 = v40;
    LOBYTE(v109) = 5;
    sub_1A9586AC0();
    sub_1A96325D0();
    v112[0] = v112[1];
    OUTLINED_FUNCTION_12_17(6);
    uint64_t v45 = (uint64_t)v99;
    OUTLINED_FUNCTION_23_6();
    sub_1A96325D0();
    OUTLINED_FUNCTION_12_17(7);
    uint64_t v46 = (uint64_t)v78;
    OUTLINED_FUNCTION_23_6();
    sub_1A96325D0();
    OUTLINED_FUNCTION_15_13(8);
    double v48 = v47;
    uint64_t v70 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD340);
    LOBYTE(v107) = 9;
    sub_1A957416C((unint64_t *)&unk_1EB6DD350, (void (*)(void))sub_1A957255C);
    OUTLINED_FUNCTION_23_6();
    sub_1A96325D0();
    uint64_t v49 = v109;
    if (!v109) {
      uint64_t v49 = sub_1A9631CC0();
    }
    OUTLINED_FUNCTION_15_13(10);
    double v51 = v50;
    LOBYTE(v109) = 11;
    sub_1A9502638();
    sub_1A96325D0();
    v111[0] = v111[1];
    OUTLINED_FUNCTION_15_13(12);
    double v53 = v52;
    uint64_t v69 = v49;
    OUTLINED_FUNCTION_12_17(13);
    sub_1A96325D0();
    OUTLINED_FUNCTION_12_17(14);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(15);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(16);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(17);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(18);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(19);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(20);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(21);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_12_17(22);
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_15_13(23);
    double v55 = v54;
    OUTLINED_FUNCTION_12_17(24);
    OUTLINED_FUNCTION_20_7();
    OUTLINED_FUNCTION_15_13(25);
    double v57 = v56;
    OUTLINED_FUNCTION_12_17(26);
    OUTLINED_FUNCTION_20_7();
    LOBYTE(v107) = 27;
    OUTLINED_FUNCTION_14_16();
    uint64_t v60 = v109;
    LODWORD(v76) = v110;
    LOBYTE(v105) = 28;
    OUTLINED_FUNCTION_14_16();
    uint64_t v68 = v107;
    int v67 = v108;
    LOBYTE(v103) = 29;
    OUTLINED_FUNCTION_14_16();
    uint64_t v66 = v105;
    int v65 = v106;
    LOBYTE(v101) = 30;
    OUTLINED_FUNCTION_14_16();
    uint64_t v64 = v103;
    int v63 = v104;
    char v100 = 31;
    OUTLINED_FUNCTION_14_16();
    uint64_t v62 = v101;
    int v61 = v102;
    char v100 = 32;
    sub_1A958856C(&qword_1EB6DC148, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    sub_1A9632680();
    char v100 = 33;
    uint64_t v58 = v81;
    sub_1A9632680();
    char v100 = 34;
    uint64_t v59 = (uint64_t)v79;
    sub_1A96325D0();
    DayForecast.init(forecastStart:conditionCode:humidityMax:humidityMin:maxUvIndex:moonPhase:moonrise:moonset:precipitationAmount:precipitationAmountByType:precipitationChance:precipitationType:snowfallAmount:solarNoon:solarMidnight:sunrise:sunriseAstronomical:sunriseCivil:sunriseNautical:sunset:sunsetAstronomical:sunsetCivil:sunsetNautical:temperatureMax:temperatureMaxTime:temperatureMin:temperatureMinTime:visibilityMax:visibilityMin:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)((uint64_t)v77, v117, v75, v74, v73, v72, v71, v112, v80, v48, v51, v53, v55, v57, v45, v46, v69, v111, v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v60,
      v76,
      v68,
      v67,
      v66,
      v65,
      v64,
      v63,
      v62,
      v61,
      v83,
      v58,
      v59);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v38, v32);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
}

unint64_t sub_1A9586A74()
{
  unint64_t result = qword_1EB6DBE98;
  if (!qword_1EB6DBE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE98);
  }
  return result;
}

unint64_t sub_1A9586AC0()
{
  unint64_t result = qword_1EB6DC2A8;
  if (!qword_1EB6DC2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC2A8);
  }
  return result;
}

uint64_t sub_1A9586B0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DayPartForecast();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9586B68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x79746964696D7568 && a2 == 0xEB0000000078614DLL;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x79746964696D7568 && a2 == 0xEB000000006E694DLL;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x646E49765578616DLL && a2 == 0xEA00000000007865;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x736168506E6F6F6DLL && a2 == 0xE900000000000065;
            if (v10 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x657369726E6F6F6DLL && a2 == 0xE800000000000000;
              if (v11 || (sub_1A96327D0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x7465736E6F6F6DLL && a2 == 0xE700000000000000;
                if (v12 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9647520 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000019 && a2 == 0x80000001A9648390 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9646EF0 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9647540 || (sub_1A96327D0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  BOOL v13 = a1 == 0x6C6C6166776F6E73 && a2 == 0xEE00746E756F6D41;
                  if (v13 || (sub_1A96327D0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 12;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6F6F4E72616C6F73 && a2 == 0xE90000000000006ELL;
                    if (v14 || (sub_1A96327D0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x64694D72616C6F73 && a2 == 0xED0000746867696ELL;
                      if (v15 || (sub_1A96327D0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
                        if (v16 || (sub_1A96327D0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 15;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x80000001A96483B0 || (sub_1A96327D0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 16;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x43657369726E7573 && a2 == 0xEC0000006C697669;
                          if (v17 || (sub_1A96327D0() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 17;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x4E657369726E7573 && a2 == 0xEF6C616369747561;
                            if (v18 || (sub_1A96327D0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 18;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x7465736E7573 && a2 == 0xE600000000000000;
                              if (v19 || (sub_1A96327D0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 19;
                              }
                              else if (a1 == 0xD000000000000012 && a2 == 0x80000001A96483D0 {
                                     || (sub_1A96327D0() & 1) != 0)
                              }
                              {
                                swift_bridgeObjectRelease();
                                return 20;
                              }
                              else
                              {
                                BOOL v20 = a1 == 0x69437465736E7573 && a2 == 0xEB000000006C6976;
                                if (v20 || (sub_1A96327D0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 21;
                                }
                                else
                                {
                                  BOOL v21 = a1 == 0x614E7465736E7573 && a2 == 0xEE006C6163697475;
                                  if (v21 || (sub_1A96327D0() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 22;
                                  }
                                  else
                                  {
                                    BOOL v22 = a1 == 0x74617265706D6574 && a2 == 0xEE0078614D657275;
                                    if (v22 || (sub_1A96327D0() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 23;
                                    }
                                    else if (a1 == 0xD000000000000012 && a2 == 0x80000001A96483F0 {
                                           || (sub_1A96327D0() & 1) != 0)
                                    }
                                    {
                                      swift_bridgeObjectRelease();
                                      return 24;
                                    }
                                    else
                                    {
                                      BOOL v23 = a1 == 0x74617265706D6574 && a2 == 0xEE006E694D657275;
                                      if (v23 || (sub_1A96327D0() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 25;
                                      }
                                      else if (a1 == 0xD000000000000012 && a2 == 0x80000001A9648410 {
                                             || (sub_1A96327D0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 26;
                                      }
                                      else
                                      {
                                        BOOL v24 = a1 == 0x696C696269736976 && a2 == 0xED000078614D7974;
                                        if (v24 || (sub_1A96327D0() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 27;
                                        }
                                        else
                                        {
                                          BOOL v25 = a1 == 0x696C696269736976 && a2 == 0xED00006E694D7974;
                                          if (v25 || (sub_1A96327D0() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 28;
                                          }
                                          else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9648430 {
                                                 || (sub_1A96327D0() & 1) != 0)
                                          }
                                          {
                                            swift_bridgeObjectRelease();
                                            return 29;
                                          }
                                          else
                                          {
                                            BOOL v26 = a1 == 0x65657053646E6977 && a2 == 0xEC00000067764164;
                                            if (v26 || (sub_1A96327D0() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 30;
                                            }
                                            else
                                            {
                                              BOOL v27 = a1 == 0x65657053646E6977 && a2 == 0xEC00000078614D64;
                                              if (v27 || (sub_1A96327D0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 31;
                                              }
                                              else
                                              {
                                                BOOL v28 = a1 == 0x46656D6974796164 && a2 == 0xEF7473616365726FLL;
                                                if (v28 || (sub_1A96327D0() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 32;
                                                }
                                                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9648450 {
                                                       || (sub_1A96327D0() & 1) != 0)
                                                }
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 33;
                                                }
                                                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A9648470)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 34;
                                                }
                                                else
                                                {
                                                  char v29 = sub_1A96327D0();
                                                  swift_bridgeObjectRelease();
                                                  if (v29) {
                                                    return 34;
                                                  }
                                                  else {
                                                    return 35;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A9587A30()
{
  return 35;
}

unint64_t sub_1A9587A38(char a1)
{
  unint64_t result = 0x7473616365726F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F697469646E6F63;
      break;
    case 2:
    case 3:
      unint64_t result = 0x79746964696D7568;
      break;
    case 4:
      unint64_t result = 0x646E49765578616DLL;
      break;
    case 5:
      unint64_t result = 0x736168506E6F6F6DLL;
      break;
    case 6:
      unint64_t result = 0x657369726E6F6F6DLL;
      break;
    case 7:
      unint64_t result = 0x7465736E6F6F6DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
    case 33:
    case 34:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x6C6C6166776F6E73;
      break;
    case 13:
      unint64_t result = 0x6F6F4E72616C6F73;
      break;
    case 14:
      unint64_t result = 0x64694D72616C6F73;
      break;
    case 15:
      unint64_t result = 0x657369726E7573;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 17:
      unint64_t result = 0x43657369726E7573;
      break;
    case 18:
      unint64_t result = 0x4E657369726E7573;
      break;
    case 19:
      unint64_t result = 0x7465736E7573;
      break;
    case 20:
      unint64_t result = 0xD000000000000012;
      break;
    case 21:
      unint64_t result = 0x69437465736E7573;
      break;
    case 22:
      unint64_t result = 0x614E7465736E7573;
      break;
    case 23:
    case 25:
      unint64_t result = 0x74617265706D6574;
      break;
    case 24:
      unint64_t result = 0xD000000000000012;
      break;
    case 26:
      unint64_t result = 0xD000000000000012;
      break;
    case 27:
    case 28:
      unint64_t result = 0x696C696269736976;
      break;
    case 29:
      unint64_t result = 0xD000000000000010;
      break;
    case 30:
    case 31:
      unint64_t result = 0x65657053646E6977;
      break;
    case 32:
      unint64_t result = 0x46656D6974796164;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A9587E94()
{
  return sub_1A9587A38(*v0);
}

uint64_t sub_1A9587E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9586B68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9587EC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9587A30();
  *a1 = result;
  return result;
}

uint64_t sub_1A9587EEC(uint64_t a1)
{
  unint64_t v2 = sub_1A9586A74();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9587F28(uint64_t a1)
{
  unint64_t v2 = sub_1A9586A74();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DayForecast.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC308);
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_26();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9586A74();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A958856C(&qword_1EB6DC8D0, MEMORY[0x1E4F27928]);
  OUTLINED_FUNCTION_17_12();
  if (!v2)
  {
    BOOL v10 = (int *)type metadata accessor for DayForecast();
    sub_1A9542D40();
    OUTLINED_FUNCTION_19_10();
    OUTLINED_FUNCTION_9_1(v4 + v10[6]);
    OUTLINED_FUNCTION_8_0(2);
    OUTLINED_FUNCTION_9_1(v4 + v10[7]);
    OUTLINED_FUNCTION_8_0(3);
    sub_1A9632760();
    sub_1A9588520();
    OUTLINED_FUNCTION_19_10();
    OUTLINED_FUNCTION_0_27(6);
    OUTLINED_FUNCTION_0_27(7);
    OUTLINED_FUNCTION_0_4(8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD340);
    sub_1A957416C(&qword_1EB6DD348, (void (*)(void))sub_1A95741E8);
    sub_1A9632770();
    OUTLINED_FUNCTION_0_4(10);
    sub_1A9502C94();
    OUTLINED_FUNCTION_19_10();
    OUTLINED_FUNCTION_0_4(12);
    OUTLINED_FUNCTION_0_27(13);
    OUTLINED_FUNCTION_0_27(14);
    OUTLINED_FUNCTION_0_27(15);
    OUTLINED_FUNCTION_0_27(16);
    OUTLINED_FUNCTION_0_27(17);
    OUTLINED_FUNCTION_0_27(18);
    OUTLINED_FUNCTION_0_27(19);
    OUTLINED_FUNCTION_0_27(20);
    OUTLINED_FUNCTION_0_27(21);
    OUTLINED_FUNCTION_0_27(22);
    OUTLINED_FUNCTION_0_4(23);
    OUTLINED_FUNCTION_0_27(24);
    OUTLINED_FUNCTION_0_4(25);
    OUTLINED_FUNCTION_0_27(26);
    OUTLINED_FUNCTION_9_1(v4 + v10[31]);
    OUTLINED_FUNCTION_8_0(27);
    OUTLINED_FUNCTION_9_1(v4 + v10[32]);
    OUTLINED_FUNCTION_8_0(28);
    OUTLINED_FUNCTION_9_1(v4 + v10[33]);
    OUTLINED_FUNCTION_8_0(29);
    OUTLINED_FUNCTION_9_1(v4 + v10[34]);
    OUTLINED_FUNCTION_8_0(30);
    OUTLINED_FUNCTION_9_1(v4 + v10[35]);
    OUTLINED_FUNCTION_8_0(31);
    type metadata accessor for DayPartForecast();
    sub_1A958856C(&qword_1EB6DC140, (void (*)(uint64_t))type metadata accessor for DayPartForecast);
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_0_27(34);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

unint64_t sub_1A9588520()
{
  unint64_t result = qword_1EB6DC298;
  if (!qword_1EB6DC298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC298);
  }
  return result;
}

uint64_t sub_1A958856C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95885B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DayForecast.init(from:)(a1, a2);
}

uint64_t sub_1A95885CC(void *a1)
{
  return DayForecast.encode(to:)(a1);
}

uint64_t sub_1A95885E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static DayForecast.read(from:)(a1, a2);
}

void sub_1A95885FC()
{
}

char *initializeBufferWithCopyOfBuffer for DayForecast(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    BOOL v10 = &a1[v9];
    BOOL v11 = &a2[v9];
    *(void *)BOOL v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    BOOL v14 = &a1[v12];
    BOOL v15 = &a2[v12];
    *(void *)BOOL v14 = *(void *)v15;
    v14[8] = v15[8];
    *(void *)&a1[v13] = *(void *)&a2[v13];
    uint64_t v16 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    BOOL v17 = &a1[v16];
    BOOL v18 = &a2[v16];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v7))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v8(v17, v18, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v7);
    }
    uint64_t v21 = a3[11];
    BOOL v22 = &a1[v21];
    BOOL v23 = &a2[v21];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v21], 1, v7))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v8(v22, v23, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v7);
    }
    uint64_t v25 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    *(void *)&a1[v25] = *(void *)&a2[v25];
    uint64_t v26 = a3[15];
    *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
    a1[v26] = a2[v26];
    uint64_t v27 = a3[17];
    *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
    BOOL v28 = &a1[v27];
    char v29 = &a2[v27];
    sub_1A9631510();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v7))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v8(v28, v29, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v7);
    }
    uint64_t v31 = a3[18];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v31], 1, v7))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v8(v32, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
    }
    uint64_t v35 = a3[19];
    char v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v7))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v8(v36, v37, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v7);
    }
    uint64_t v39 = a3[20];
    uint64_t v40 = &a1[v39];
    int v41 = &a2[v39];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v39], 1, v7))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v8(v40, v41, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v7);
    }
    uint64_t v43 = a3[21];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v43], 1, v7))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      v8(v44, v45, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v7);
    }
    uint64_t v47 = a3[22];
    double v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v47], 1, v7))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      v8(v48, v49, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v7);
    }
    uint64_t v51 = a3[23];
    double v52 = &a1[v51];
    double v53 = &a2[v51];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v51], 1, v7))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      v8(v52, v53, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v7);
    }
    uint64_t v55 = a3[24];
    double v56 = &a1[v55];
    double v57 = &a2[v55];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v55], 1, v7))
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      v8(v56, v57, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v7);
    }
    uint64_t v59 = a3[25];
    uint64_t v60 = &a1[v59];
    int v61 = &a2[v59];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v59], 1, v7))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v8(v60, v61, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v7);
    }
    uint64_t v63 = a3[26];
    uint64_t v64 = &a1[v63];
    int v65 = &a2[v63];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v63], 1, v7))
    {
      uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      v8(v64, v65, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v7);
    }
    uint64_t v67 = a3[28];
    *(void *)&a1[a3[27]] = *(void *)&a2[a3[27]];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v67], 1, v7))
    {
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      v8(v68, v69, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v7);
    }
    uint64_t v71 = a3[30];
    *(void *)&a1[a3[29]] = *(void *)&a2[a3[29]];
    int v72 = &a1[v71];
    uint64_t v73 = &a2[v71];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v71], 1, v7))
    {
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      v8(v72, v73, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v7);
    }
    uint64_t v75 = a3[31];
    uint64_t v76 = a3[32];
    uint64_t v77 = &a1[v75];
    uint64_t v78 = &a2[v75];
    *(void *)uint64_t v77 = *(void *)v78;
    v77[8] = v78[8];
    uint64_t v79 = &a1[v76];
    uint64_t v80 = &a2[v76];
    *(void *)uint64_t v79 = *(void *)v80;
    v79[8] = v80[8];
    uint64_t v81 = a3[33];
    uint64_t v82 = a3[34];
    uint64_t v83 = &a1[v81];
    uint64_t v84 = &a2[v81];
    *(void *)uint64_t v83 = *(void *)v84;
    v83[8] = v84[8];
    uint64_t v85 = &a1[v82];
    uint64_t v86 = &a2[v82];
    v85[8] = v86[8];
    *(void *)uint64_t v85 = *(void *)v86;
    uint64_t v87 = a3[35];
    uint64_t v88 = a3[36];
    uint64_t v89 = &a1[v87];
    uint64_t v90 = &a2[v87];
    *(void *)uint64_t v89 = *(void *)v90;
    v89[8] = v90[8];
    uint64_t v91 = &a1[v88];
    uint64_t v92 = &a2[v88];
    v8(&a1[v88], &a2[v88], v7);
    uint64_t v93 = (int *)type metadata accessor for DayPartForecast();
    v8(&v91[v93[5]], &v92[v93[5]], v7);
    v91[v93[6]] = v92[v93[6]];
    *(void *)&v91[v93[7]] = *(void *)&v92[v93[7]];
    *(void *)&v91[v93[8]] = *(void *)&v92[v93[8]];
    *(void *)&v91[v93[9]] = *(void *)&v92[v93[9]];
    *(void *)&v91[v93[10]] = *(void *)&v92[v93[10]];
    v91[v93[11]] = v92[v93[11]];
    *(void *)&v91[v93[12]] = *(void *)&v92[v93[12]];
    *(void *)&v91[v93[13]] = *(void *)&v92[v93[13]];
    *(void *)&v91[v93[14]] = *(void *)&v92[v93[14]];
    *(void *)&v91[v93[15]] = *(void *)&v92[v93[15]];
    uint64_t v94 = v93[16];
    uint64_t v95 = &v91[v94];
    uint64_t v96 = &v92[v94];
    *(void *)uint64_t v95 = *(void *)v96;
    v95[8] = v96[8];
    *(void *)&v91[v93[17]] = *(void *)&v92[v93[17]];
    *(void *)&v91[v93[18]] = *(void *)&v92[v93[18]];
    v91[v93[19]] = v92[v93[19]];
    uint64_t v97 = v93[20];
    uint64_t v98 = &v91[v97];
    char v99 = &v92[v97];
    *(void *)uint64_t v98 = *(void *)v99;
    v98[8] = v99[8];
    *(void *)&v91[v93[21]] = *(void *)&v92[v93[21]];
    *(void *)&v91[v93[22]] = *(void *)&v92[v93[22]];
    uint64_t v100 = v93[23];
    uint64_t v101 = &v91[v100];
    unsigned __int8 v102 = &v92[v100];
    *(void *)uint64_t v101 = *(void *)v102;
    v101[8] = v102[8];
    *(void *)&v91[v93[24]] = *(void *)&v92[v93[24]];
    *(void *)&v91[v93[25]] = *(void *)&v92[v93[25]];
    *(void *)&v91[v93[26]] = *(void *)&v92[v93[26]];
    *(void *)&v91[v93[27]] = *(void *)&v92[v93[27]];
    *(void *)&v91[v93[28]] = *(void *)&v92[v93[28]];
    *(void *)&v91[v93[29]] = *(void *)&v92[v93[29]];
    *(void *)&v91[v93[30]] = *(void *)&v92[v93[30]];
    *(void *)&v91[v93[31]] = *(void *)&v92[v93[31]];
    *(void *)&v91[v93[32]] = *(void *)&v92[v93[32]];
    *(void *)&v91[v93[33]] = *(void *)&v92[v93[33]];
    v91[v93[34]] = v92[v93[34]];
    uint64_t v103 = a3[37];
    unsigned __int8 v104 = &a1[v103];
    uint64_t v105 = &a2[v103];
    sub_1A9631510();
    v8(v104, v105, v7);
    v8(&v104[v93[5]], &v105[v93[5]], v7);
    v104[v93[6]] = v105[v93[6]];
    *(void *)&v104[v93[7]] = *(void *)&v105[v93[7]];
    *(void *)&v104[v93[8]] = *(void *)&v105[v93[8]];
    *(void *)&v104[v93[9]] = *(void *)&v105[v93[9]];
    *(void *)&v104[v93[10]] = *(void *)&v105[v93[10]];
    v104[v93[11]] = v105[v93[11]];
    *(void *)&v104[v93[12]] = *(void *)&v105[v93[12]];
    *(void *)&v104[v93[13]] = *(void *)&v105[v93[13]];
    *(void *)&v104[v93[14]] = *(void *)&v105[v93[14]];
    *(void *)&v104[v93[15]] = *(void *)&v105[v93[15]];
    uint64_t v106 = v93[16];
    uint64_t v107 = &v104[v106];
    unsigned __int8 v108 = &v105[v106];
    *(void *)uint64_t v107 = *(void *)v108;
    v107[8] = v108[8];
    *(void *)&v104[v93[17]] = *(void *)&v105[v93[17]];
    *(void *)&v104[v93[18]] = *(void *)&v105[v93[18]];
    v104[v93[19]] = v105[v93[19]];
    uint64_t v109 = v93[20];
    unsigned __int8 v110 = &v104[v109];
    unsigned __int8 v111 = &v105[v109];
    *(void *)unsigned __int8 v110 = *(void *)v111;
    v110[8] = v111[8];
    *(void *)&v104[v93[21]] = *(void *)&v105[v93[21]];
    *(void *)&v104[v93[22]] = *(void *)&v105[v93[22]];
    uint64_t v112 = v93[23];
    uint64_t v113 = &v104[v112];
    unsigned __int8 v114 = &v105[v112];
    *(void *)uint64_t v113 = *(void *)v114;
    v113[8] = v114[8];
    *(void *)&v104[v93[24]] = *(void *)&v105[v93[24]];
    *(void *)&v104[v93[25]] = *(void *)&v105[v93[25]];
    *(void *)&v104[v93[26]] = *(void *)&v105[v93[26]];
    *(void *)&v104[v93[27]] = *(void *)&v105[v93[27]];
    *(void *)&v104[v93[28]] = *(void *)&v105[v93[28]];
    *(void *)&v104[v93[29]] = *(void *)&v105[v93[29]];
    *(void *)&v104[v93[30]] = *(void *)&v105[v93[30]];
    *(void *)&v104[v93[31]] = *(void *)&v105[v93[31]];
    *(void *)&v104[v93[32]] = *(void *)&v105[v93[32]];
    *(void *)&v104[v93[33]] = *(void *)&v105[v93[33]];
    v104[v93[34]] = v105[v93[34]];
    uint64_t v115 = a3[38];
    unsigned __int8 v116 = &a1[v115];
    unsigned __int8 v117 = &a2[v115];
    sub_1A9631510();
    if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, (uint64_t)v93))
    {
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
      memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
    }
    else
    {
      v8(v116, v117, v7);
      v8(&v116[v93[5]], &v117[v93[5]], v7);
      v116[v93[6]] = v117[v93[6]];
      *(void *)&v116[v93[7]] = *(void *)&v117[v93[7]];
      *(void *)&v116[v93[8]] = *(void *)&v117[v93[8]];
      *(void *)&v116[v93[9]] = *(void *)&v117[v93[9]];
      *(void *)&v116[v93[10]] = *(void *)&v117[v93[10]];
      v116[v93[11]] = v117[v93[11]];
      *(void *)&v116[v93[12]] = *(void *)&v117[v93[12]];
      *(void *)&v116[v93[13]] = *(void *)&v117[v93[13]];
      *(void *)&v116[v93[14]] = *(void *)&v117[v93[14]];
      *(void *)&v116[v93[15]] = *(void *)&v117[v93[15]];
      uint64_t v119 = v93[16];
      uint64_t v120 = &v116[v119];
      uint64_t v121 = &v117[v119];
      *(void *)uint64_t v120 = *(void *)v121;
      v120[8] = v121[8];
      *(void *)&v116[v93[17]] = *(void *)&v117[v93[17]];
      *(void *)&v116[v93[18]] = *(void *)&v117[v93[18]];
      v116[v93[19]] = v117[v93[19]];
      uint64_t v122 = v93[20];
      unsigned __int8 v123 = &v116[v122];
      char v124 = &v117[v122];
      *(void *)unsigned __int8 v123 = *(void *)v124;
      v123[8] = v124[8];
      *(void *)&v116[v93[21]] = *(void *)&v117[v93[21]];
      *(void *)&v116[v93[22]] = *(void *)&v117[v93[22]];
      uint64_t v125 = v93[23];
      uint64_t v126 = &v116[v125];
      uint64_t v127 = &v117[v125];
      *(void *)uint64_t v126 = *(void *)v127;
      v126[8] = v127[8];
      *(void *)&v116[v93[24]] = *(void *)&v117[v93[24]];
      *(void *)&v116[v93[25]] = *(void *)&v117[v93[25]];
      *(void *)&v116[v93[26]] = *(void *)&v117[v93[26]];
      *(void *)&v116[v93[27]] = *(void *)&v117[v93[27]];
      *(void *)&v116[v93[28]] = *(void *)&v117[v93[28]];
      *(void *)&v116[v93[29]] = *(void *)&v117[v93[29]];
      *(void *)&v116[v93[30]] = *(void *)&v117[v93[30]];
      *(void *)&v116[v93[31]] = *(void *)&v117[v93[31]];
      *(void *)&v116[v93[32]] = *(void *)&v117[v93[32]];
      *(void *)&v116[v93[33]] = *(void *)&v117[v93[33]];
      v116[v93[34]] = v117[v93[34]];
      sub_1A9631510();
      __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, (uint64_t)v93);
    }
  }
  return a1;
}

uint64_t assignWithCopy for DayForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  char v16 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = v16;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v17 = a3[10];
  BOOL v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v17, 1, v6);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v18, v19, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v18, v6);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v18, (uint64_t)v19, v6);
LABEL_7:
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  int v26 = __swift_getEnumTagSinglePayload(a1 + v23, 1, v6);
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v6);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v24, v25, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v24, v6);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v8((uint64_t)v24, (uint64_t)v25, v6);
LABEL_13:
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v29 = a3[17];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  int v32 = __swift_getEnumTagSinglePayload(a1 + v29, 1, v6);
  int v33 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v6);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v30, v31, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v30, v6);
LABEL_18:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  v8((uint64_t)v30, (uint64_t)v31, v6);
LABEL_19:
  uint64_t v35 = a3[18];
  char v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  int v38 = __swift_getEnumTagSinglePayload(a1 + v35, 1, v6);
  int v39 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v6);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v36, v37, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v36, v6);
LABEL_24:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_25;
  }
  v8((uint64_t)v36, (uint64_t)v37, v6);
LABEL_25:
  uint64_t v41 = a3[19];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  int v44 = __swift_getEnumTagSinglePayload(a1 + v41, 1, v6);
  int v45 = __swift_getEnumTagSinglePayload((uint64_t)v43, 1, v6);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v42, v43, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v42, v6);
LABEL_30:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  v8((uint64_t)v42, (uint64_t)v43, v6);
LABEL_31:
  uint64_t v47 = a3[20];
  double v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  int v50 = __swift_getEnumTagSinglePayload(a1 + v47, 1, v6);
  int v51 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v48, v49, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v48, v6);
LABEL_36:
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  v8((uint64_t)v48, (uint64_t)v49, v6);
LABEL_37:
  uint64_t v53 = a3[21];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  int v56 = __swift_getEnumTagSinglePayload(a1 + v53, 1, v6);
  int v57 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v6);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v54, v55, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v54, v6);
LABEL_42:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_43;
  }
  v8((uint64_t)v54, (uint64_t)v55, v6);
LABEL_43:
  uint64_t v59 = a3[22];
  uint64_t v60 = (void *)(a1 + v59);
  int v61 = (const void *)(a2 + v59);
  int v62 = __swift_getEnumTagSinglePayload(a1 + v59, 1, v6);
  int v63 = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v6);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v60, v61, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v63)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v60, v6);
LABEL_48:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_49;
  }
  v8((uint64_t)v60, (uint64_t)v61, v6);
LABEL_49:
  uint64_t v65 = a3[23];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  int v68 = __swift_getEnumTagSinglePayload(a1 + v65, 1, v6);
  int v69 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, v6);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v66, v67, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v69)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v66, v6);
LABEL_54:
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_55;
  }
  v8((uint64_t)v66, (uint64_t)v67, v6);
LABEL_55:
  uint64_t v71 = a3[24];
  int v72 = (void *)(a1 + v71);
  uint64_t v73 = (const void *)(a2 + v71);
  int v74 = __swift_getEnumTagSinglePayload(a1 + v71, 1, v6);
  int v75 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v6);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v72, v73, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v75)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v72, v6);
LABEL_60:
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_61;
  }
  v8((uint64_t)v72, (uint64_t)v73, v6);
LABEL_61:
  uint64_t v77 = a3[25];
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (const void *)(a2 + v77);
  int v80 = __swift_getEnumTagSinglePayload(a1 + v77, 1, v6);
  int v81 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v6);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v78, v79, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v81)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v78, v6);
LABEL_66:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_67;
  }
  v8((uint64_t)v78, (uint64_t)v79, v6);
LABEL_67:
  uint64_t v83 = a3[26];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (const void *)(a2 + v83);
  int v86 = __swift_getEnumTagSinglePayload(a1 + v83, 1, v6);
  int v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v6);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v84, v85, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v87)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v84, v6);
LABEL_72:
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_73;
  }
  v8((uint64_t)v84, (uint64_t)v85, v6);
LABEL_73:
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  uint64_t v89 = a3[28];
  uint64_t v90 = (void *)(a1 + v89);
  uint64_t v91 = (const void *)(a2 + v89);
  int v92 = __swift_getEnumTagSinglePayload(a1 + v89, 1, v6);
  int v93 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v6);
  if (v92)
  {
    if (!v93)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v90, v91, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v93)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v90, v6);
LABEL_78:
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
    goto LABEL_79;
  }
  v8((uint64_t)v90, (uint64_t)v91, v6);
LABEL_79:
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  uint64_t v95 = a3[30];
  uint64_t v96 = (void *)(a1 + v95);
  uint64_t v97 = (const void *)(a2 + v95);
  int v98 = __swift_getEnumTagSinglePayload(a1 + v95, 1, v6);
  int v99 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v6);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v96, v97, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v6);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v99)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v96, v6);
LABEL_84:
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_85;
  }
  v8((uint64_t)v96, (uint64_t)v97, v6);
LABEL_85:
  uint64_t v101 = a3[31];
  uint64_t v102 = a1 + v101;
  uint64_t v103 = (uint64_t *)(a2 + v101);
  uint64_t v104 = *v103;
  *(unsigned char *)(v102 + 8) = *((unsigned char *)v103 + 8);
  *(void *)uint64_t v102 = v104;
  uint64_t v105 = a3[32];
  uint64_t v106 = a1 + v105;
  uint64_t v107 = (uint64_t *)(a2 + v105);
  uint64_t v108 = *v107;
  *(unsigned char *)(v106 + 8) = *((unsigned char *)v107 + 8);
  *(void *)uint64_t v106 = v108;
  uint64_t v109 = a3[33];
  uint64_t v110 = a1 + v109;
  unsigned __int8 v111 = (uint64_t *)(a2 + v109);
  uint64_t v112 = *v111;
  *(unsigned char *)(v110 + 8) = *((unsigned char *)v111 + 8);
  *(void *)uint64_t v110 = v112;
  uint64_t v113 = a3[34];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = (uint64_t *)(a2 + v113);
  uint64_t v116 = *v115;
  *(unsigned char *)(v114 + 8) = *((unsigned char *)v115 + 8);
  *(void *)uint64_t v114 = v116;
  uint64_t v117 = a3[35];
  uint64_t v118 = a1 + v117;
  uint64_t v119 = (uint64_t *)(a2 + v117);
  uint64_t v120 = *v119;
  *(unsigned char *)(v118 + 8) = *((unsigned char *)v119 + 8);
  *(void *)uint64_t v118 = v120;
  uint64_t v121 = a3[36];
  uint64_t v122 = a1 + v121;
  uint64_t v123 = a2 + v121;
  v8(a1 + v121, a2 + v121, v6);
  char v124 = (int *)type metadata accessor for DayPartForecast();
  v8(v122 + v124[5], v123 + v124[5], v6);
  *(unsigned char *)(v122 + v124[6]) = *(unsigned char *)(v123 + v124[6]);
  *(void *)(v122 + v124[7]) = *(void *)(v123 + v124[7]);
  *(void *)(v122 + v124[8]) = *(void *)(v123 + v124[8]);
  *(void *)(v122 + v124[9]) = *(void *)(v123 + v124[9]);
  *(void *)(v122 + v124[10]) = *(void *)(v123 + v124[10]);
  *(unsigned char *)(v122 + v124[11]) = *(unsigned char *)(v123 + v124[11]);
  *(void *)(v122 + v124[12]) = *(void *)(v123 + v124[12]);
  *(void *)(v122 + v124[13]) = *(void *)(v123 + v124[13]);
  *(void *)(v122 + v124[14]) = *(void *)(v123 + v124[14]);
  *(void *)(v122 + v124[15]) = *(void *)(v123 + v124[15]);
  uint64_t v125 = v124[16];
  uint64_t v126 = v122 + v125;
  uint64_t v127 = v123 + v125;
  char v128 = *(unsigned char *)(v127 + 8);
  *(void *)uint64_t v126 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = v128;
  *(void *)(v122 + v124[17]) = *(void *)(v123 + v124[17]);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(v122 + v124[18]) = *(void *)(v123 + v124[18]);
  *(unsigned char *)(v122 + v124[19]) = *(unsigned char *)(v123 + v124[19]);
  uint64_t v129 = v124[20];
  uint64_t v130 = v122 + v129;
  uint64_t v131 = (uint64_t *)(v123 + v129);
  uint64_t v132 = *v131;
  *(unsigned char *)(v130 + 8) = *((unsigned char *)v131 + 8);
  *(void *)uint64_t v130 = v132;
  *(void *)(v122 + v124[21]) = *(void *)(v123 + v124[21]);
  *(void *)(v122 + v124[22]) = *(void *)(v123 + v124[22]);
  uint64_t v133 = v124[23];
  uint64_t v134 = v122 + v133;
  uint64_t v135 = (uint64_t *)(v123 + v133);
  uint64_t v136 = *v135;
  *(unsigned char *)(v134 + 8) = *((unsigned char *)v135 + 8);
  *(void *)uint64_t v134 = v136;
  *(void *)(v122 + v124[24]) = *(void *)(v123 + v124[24]);
  *(void *)(v122 + v124[25]) = *(void *)(v123 + v124[25]);
  *(void *)(v122 + v124[26]) = *(void *)(v123 + v124[26]);
  *(void *)(v122 + v124[27]) = *(void *)(v123 + v124[27]);
  *(void *)(v122 + v124[28]) = *(void *)(v123 + v124[28]);
  *(void *)(v122 + v124[29]) = *(void *)(v123 + v124[29]);
  *(void *)(v122 + v124[30]) = *(void *)(v123 + v124[30]);
  *(void *)(v122 + v124[31]) = *(void *)(v123 + v124[31]);
  *(void *)(v122 + v124[32]) = *(void *)(v123 + v124[32]);
  *(void *)(v122 + v124[33]) = *(void *)(v123 + v124[33]);
  *(unsigned char *)(v122 + v124[34]) = *(unsigned char *)(v123 + v124[34]);
  uint64_t v137 = a3[37];
  uint64_t v138 = a1 + v137;
  uint64_t v139 = a2 + v137;
  v8(a1 + v137, a2 + v137, v6);
  v8(v138 + v124[5], v139 + v124[5], v6);
  *(unsigned char *)(v138 + v124[6]) = *(unsigned char *)(v139 + v124[6]);
  *(void *)(v138 + v124[7]) = *(void *)(v139 + v124[7]);
  *(void *)(v138 + v124[8]) = *(void *)(v139 + v124[8]);
  *(void *)(v138 + v124[9]) = *(void *)(v139 + v124[9]);
  *(void *)(v138 + v124[10]) = *(void *)(v139 + v124[10]);
  *(unsigned char *)(v138 + v124[11]) = *(unsigned char *)(v139 + v124[11]);
  *(void *)(v138 + v124[12]) = *(void *)(v139 + v124[12]);
  *(void *)(v138 + v124[13]) = *(void *)(v139 + v124[13]);
  *(void *)(v138 + v124[14]) = *(void *)(v139 + v124[14]);
  *(void *)(v138 + v124[15]) = *(void *)(v139 + v124[15]);
  uint64_t v140 = v124[16];
  uint64_t v141 = v138 + v140;
  uint64_t v142 = v139 + v140;
  char v143 = *(unsigned char *)(v142 + 8);
  *(void *)uint64_t v141 = *(void *)v142;
  *(unsigned char *)(v141 + 8) = v143;
  *(void *)(v138 + v124[17]) = *(void *)(v139 + v124[17]);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(v138 + v124[18]) = *(void *)(v139 + v124[18]);
  *(unsigned char *)(v138 + v124[19]) = *(unsigned char *)(v139 + v124[19]);
  uint64_t v144 = v124[20];
  uint64_t v145 = v138 + v144;
  unint64_t v146 = (uint64_t *)(v139 + v144);
  uint64_t v147 = *v146;
  *(unsigned char *)(v145 + 8) = *((unsigned char *)v146 + 8);
  *(void *)uint64_t v145 = v147;
  *(void *)(v138 + v124[21]) = *(void *)(v139 + v124[21]);
  *(void *)(v138 + v124[22]) = *(void *)(v139 + v124[22]);
  uint64_t v148 = v124[23];
  uint64_t v149 = v138 + v148;
  uint64_t v150 = (uint64_t *)(v139 + v148);
  uint64_t v151 = *v150;
  *(unsigned char *)(v149 + 8) = *((unsigned char *)v150 + 8);
  *(void *)uint64_t v149 = v151;
  *(void *)(v138 + v124[24]) = *(void *)(v139 + v124[24]);
  *(void *)(v138 + v124[25]) = *(void *)(v139 + v124[25]);
  *(void *)(v138 + v124[26]) = *(void *)(v139 + v124[26]);
  *(void *)(v138 + v124[27]) = *(void *)(v139 + v124[27]);
  *(void *)(v138 + v124[28]) = *(void *)(v139 + v124[28]);
  *(void *)(v138 + v124[29]) = *(void *)(v139 + v124[29]);
  *(void *)(v138 + v124[30]) = *(void *)(v139 + v124[30]);
  *(void *)(v138 + v124[31]) = *(void *)(v139 + v124[31]);
  *(void *)(v138 + v124[32]) = *(void *)(v139 + v124[32]);
  *(void *)(v138 + v124[33]) = *(void *)(v139 + v124[33]);
  *(unsigned char *)(v138 + v124[34]) = *(unsigned char *)(v139 + v124[34]);
  uint64_t v152 = a3[38];
  uint64_t v153 = (unsigned char *)(a1 + v152);
  uint64_t v154 = (unsigned char *)(a2 + v152);
  LODWORD(v138) = __swift_getEnumTagSinglePayload(a1 + v152, 1, (uint64_t)v124);
  int v155 = __swift_getEnumTagSinglePayload((uint64_t)v154, 1, (uint64_t)v124);
  if (!v138)
  {
    if (!v155)
    {
      v8((uint64_t)v153, (uint64_t)v154, v6);
      v8((uint64_t)&v153[v124[5]], (uint64_t)&v154[v124[5]], v6);
      v153[v124[6]] = v154[v124[6]];
      *(void *)&v153[v124[7]] = *(void *)&v154[v124[7]];
      *(void *)&v153[v124[8]] = *(void *)&v154[v124[8]];
      *(void *)&v153[v124[9]] = *(void *)&v154[v124[9]];
      *(void *)&v153[v124[10]] = *(void *)&v154[v124[10]];
      v153[v124[11]] = v154[v124[11]];
      *(void *)&v153[v124[12]] = *(void *)&v154[v124[12]];
      *(void *)&v153[v124[13]] = *(void *)&v154[v124[13]];
      *(void *)&v153[v124[14]] = *(void *)&v154[v124[14]];
      *(void *)&v153[v124[15]] = *(void *)&v154[v124[15]];
      uint64_t v171 = v124[16];
      uint64_t v172 = &v153[v171];
      uint64_t v173 = &v154[v171];
      char v174 = v173[8];
      *(void *)uint64_t v172 = *(void *)v173;
      v172[8] = v174;
      *(void *)&v153[v124[17]] = *(void *)&v154[v124[17]];
      sub_1A9631510();
      swift_bridgeObjectRelease();
      *(void *)&v153[v124[18]] = *(void *)&v154[v124[18]];
      v153[v124[19]] = v154[v124[19]];
      uint64_t v175 = v124[20];
      uint64_t v176 = &v153[v175];
      uint64_t v177 = &v154[v175];
      uint64_t v178 = *(void *)v177;
      v176[8] = v177[8];
      *(void *)uint64_t v176 = v178;
      *(void *)&v153[v124[21]] = *(void *)&v154[v124[21]];
      *(void *)&v153[v124[22]] = *(void *)&v154[v124[22]];
      uint64_t v179 = v124[23];
      uint64_t v180 = &v153[v179];
      uint64_t v181 = &v154[v179];
      uint64_t v182 = *(void *)v181;
      v180[8] = v181[8];
      *(void *)uint64_t v180 = v182;
      *(void *)&v153[v124[24]] = *(void *)&v154[v124[24]];
      *(void *)&v153[v124[25]] = *(void *)&v154[v124[25]];
      *(void *)&v153[v124[26]] = *(void *)&v154[v124[26]];
      *(void *)&v153[v124[27]] = *(void *)&v154[v124[27]];
      *(void *)&v153[v124[28]] = *(void *)&v154[v124[28]];
      *(void *)&v153[v124[29]] = *(void *)&v154[v124[29]];
      *(void *)&v153[v124[30]] = *(void *)&v154[v124[30]];
      *(void *)&v153[v124[31]] = *(void *)&v154[v124[31]];
      *(void *)&v153[v124[32]] = *(void *)&v154[v124[32]];
      *(void *)&v153[v124[33]] = *(void *)&v154[v124[33]];
      v153[v124[34]] = v154[v124[34]];
      return a1;
    }
    sub_1A9586B0C((uint64_t)v153);
    goto LABEL_90;
  }
  if (v155)
  {
LABEL_90:
    uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
    memcpy(v153, v154, *(void *)(*(void *)(v169 - 8) + 64));
    return a1;
  }
  uint64_t v156 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16);
  v156(v153, v154, v6);
  v156(&v153[v124[5]], &v154[v124[5]], v6);
  v153[v124[6]] = v154[v124[6]];
  *(void *)&v153[v124[7]] = *(void *)&v154[v124[7]];
  *(void *)&v153[v124[8]] = *(void *)&v154[v124[8]];
  *(void *)&v153[v124[9]] = *(void *)&v154[v124[9]];
  *(void *)&v153[v124[10]] = *(void *)&v154[v124[10]];
  v153[v124[11]] = v154[v124[11]];
  *(void *)&v153[v124[12]] = *(void *)&v154[v124[12]];
  *(void *)&v153[v124[13]] = *(void *)&v154[v124[13]];
  *(void *)&v153[v124[14]] = *(void *)&v154[v124[14]];
  *(void *)&v153[v124[15]] = *(void *)&v154[v124[15]];
  uint64_t v157 = v124[16];
  unint64_t v158 = &v153[v157];
  uint64_t v159 = &v154[v157];
  char v160 = v159[8];
  *(void *)unint64_t v158 = *(void *)v159;
  v158[8] = v160;
  *(void *)&v153[v124[17]] = *(void *)&v154[v124[17]];
  *(void *)&v153[v124[18]] = *(void *)&v154[v124[18]];
  v153[v124[19]] = v154[v124[19]];
  uint64_t v161 = v124[20];
  uint64_t v162 = &v153[v161];
  uint64_t v163 = &v154[v161];
  char v164 = v163[8];
  *(void *)uint64_t v162 = *(void *)v163;
  v162[8] = v164;
  *(void *)&v153[v124[21]] = *(void *)&v154[v124[21]];
  *(void *)&v153[v124[22]] = *(void *)&v154[v124[22]];
  uint64_t v165 = v124[23];
  uint64_t v166 = &v153[v165];
  uint64_t v167 = &v154[v165];
  char v168 = v167[8];
  *(void *)uint64_t v166 = *(void *)v167;
  v166[8] = v168;
  *(void *)&v153[v124[24]] = *(void *)&v154[v124[24]];
  *(void *)&v153[v124[25]] = *(void *)&v154[v124[25]];
  *(void *)&v153[v124[26]] = *(void *)&v154[v124[26]];
  *(void *)&v153[v124[27]] = *(void *)&v154[v124[27]];
  *(void *)&v153[v124[28]] = *(void *)&v154[v124[28]];
  *(void *)&v153[v124[29]] = *(void *)&v154[v124[29]];
  *(void *)&v153[v124[30]] = *(void *)&v154[v124[30]];
  *(void *)&v153[v124[31]] = *(void *)&v154[v124[31]];
  *(void *)&v153[v124[32]] = *(void *)&v154[v124[32]];
  *(void *)&v153[v124[33]] = *(void *)&v154[v124[33]];
  v153[v124[34]] = v154[v124[34]];
  sub_1A9631510();
  __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, (uint64_t)v124);
  return a1;
}

uint64_t initializeWithTake for DayForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v15 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  char v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (__swift_getEnumTagSinglePayload(a2 + v15, 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v16, (uint64_t)v17, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
  }
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  int v21 = (const void *)(a2 + v19);
  if (__swift_getEnumTagSinglePayload(a2 + v19, 1, v6))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v20, (uint64_t)v21, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v6);
  }
  uint64_t v23 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  int v26 = (void *)(a1 + v25);
  int v27 = (const void *)(a2 + v25);
  if (__swift_getEnumTagSinglePayload(a2 + v25, 1, v6))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v26, (uint64_t)v27, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v6);
  }
  uint64_t v29 = a3[18];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  if (__swift_getEnumTagSinglePayload(a2 + v29, 1, v6))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v6);
  }
  uint64_t v33 = a3[19];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  if (__swift_getEnumTagSinglePayload(a2 + v33, 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v34, (uint64_t)v35, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
  }
  uint64_t v37 = a3[20];
  int v38 = (void *)(a1 + v37);
  int v39 = (const void *)(a2 + v37);
  if (__swift_getEnumTagSinglePayload(a2 + v37, 1, v6))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v38, (uint64_t)v39, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v6);
  }
  uint64_t v41 = a3[21];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  if (__swift_getEnumTagSinglePayload(a2 + v41, 1, v6))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v42, (uint64_t)v43, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
  }
  uint64_t v45 = a3[22];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (const void *)(a2 + v45);
  if (__swift_getEnumTagSinglePayload(a2 + v45, 1, v6))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v46, (uint64_t)v47, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v6);
  }
  uint64_t v49 = a3[23];
  int v50 = (void *)(a1 + v49);
  int v51 = (const void *)(a2 + v49);
  if (__swift_getEnumTagSinglePayload(a2 + v49, 1, v6))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v50, (uint64_t)v51, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v6);
  }
  uint64_t v53 = a3[24];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  if (__swift_getEnumTagSinglePayload(a2 + v53, 1, v6))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v54, (uint64_t)v55, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v6);
  }
  uint64_t v57 = a3[25];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (const void *)(a2 + v57);
  if (__swift_getEnumTagSinglePayload(a2 + v57, 1, v6))
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v58, (uint64_t)v59, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v6);
  }
  uint64_t v61 = a3[26];
  int v62 = (void *)(a1 + v61);
  int v63 = (const void *)(a2 + v61);
  if (__swift_getEnumTagSinglePayload(a2 + v61, 1, v6))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v62, (uint64_t)v63, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v6);
  }
  uint64_t v65 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  if (__swift_getEnumTagSinglePayload(a2 + v65, 1, v6))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v66, (uint64_t)v67, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v6);
  }
  uint64_t v69 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (const void *)(a2 + v69);
  if (__swift_getEnumTagSinglePayload(a2 + v69, 1, v6))
  {
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v70, (uint64_t)v71, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v6);
  }
  uint64_t v73 = a3[31];
  uint64_t v74 = a3[32];
  uint64_t v75 = a1 + v73;
  uint64_t v76 = a2 + v73;
  *(void *)uint64_t v75 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  uint64_t v77 = a1 + v74;
  uint64_t v78 = a2 + v74;
  *(void *)uint64_t v77 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
  uint64_t v79 = a3[33];
  uint64_t v80 = a3[34];
  uint64_t v81 = a1 + v79;
  uint64_t v82 = a2 + v79;
  *(void *)uint64_t v81 = *(void *)v82;
  *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
  uint64_t v83 = a1 + v80;
  uint64_t v84 = a2 + v80;
  *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
  *(void *)uint64_t v83 = *(void *)v84;
  uint64_t v85 = a3[35];
  uint64_t v86 = a3[36];
  uint64_t v87 = a1 + v85;
  uint64_t v88 = a2 + v85;
  *(void *)uint64_t v87 = *(void *)v88;
  *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
  uint64_t v89 = a1 + v86;
  uint64_t v90 = a2 + v86;
  v7(a1 + v86, a2 + v86, v6);
  uint64_t v91 = (int *)type metadata accessor for DayPartForecast();
  v7(v89 + v91[5], v90 + v91[5], v6);
  *(unsigned char *)(v89 + v91[6]) = *(unsigned char *)(v90 + v91[6]);
  *(void *)(v89 + v91[7]) = *(void *)(v90 + v91[7]);
  *(void *)(v89 + v91[8]) = *(void *)(v90 + v91[8]);
  *(void *)(v89 + v91[9]) = *(void *)(v90 + v91[9]);
  *(void *)(v89 + v91[10]) = *(void *)(v90 + v91[10]);
  *(unsigned char *)(v89 + v91[11]) = *(unsigned char *)(v90 + v91[11]);
  *(void *)(v89 + v91[12]) = *(void *)(v90 + v91[12]);
  *(void *)(v89 + v91[13]) = *(void *)(v90 + v91[13]);
  *(void *)(v89 + v91[14]) = *(void *)(v90 + v91[14]);
  *(void *)(v89 + v91[15]) = *(void *)(v90 + v91[15]);
  uint64_t v92 = v91[16];
  uint64_t v93 = v89 + v92;
  uint64_t v94 = v90 + v92;
  *(void *)uint64_t v93 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  *(void *)(v89 + v91[17]) = *(void *)(v90 + v91[17]);
  *(void *)(v89 + v91[18]) = *(void *)(v90 + v91[18]);
  *(unsigned char *)(v89 + v91[19]) = *(unsigned char *)(v90 + v91[19]);
  uint64_t v95 = v91[20];
  uint64_t v96 = v89 + v95;
  uint64_t v97 = v90 + v95;
  *(void *)uint64_t v96 = *(void *)v97;
  *(unsigned char *)(v96 + 8) = *(unsigned char *)(v97 + 8);
  *(void *)(v89 + v91[21]) = *(void *)(v90 + v91[21]);
  *(void *)(v89 + v91[22]) = *(void *)(v90 + v91[22]);
  uint64_t v98 = v91[23];
  uint64_t v99 = v89 + v98;
  uint64_t v100 = v90 + v98;
  *(void *)uint64_t v99 = *(void *)v100;
  *(unsigned char *)(v99 + 8) = *(unsigned char *)(v100 + 8);
  *(void *)(v89 + v91[24]) = *(void *)(v90 + v91[24]);
  *(void *)(v89 + v91[25]) = *(void *)(v90 + v91[25]);
  *(void *)(v89 + v91[26]) = *(void *)(v90 + v91[26]);
  *(void *)(v89 + v91[27]) = *(void *)(v90 + v91[27]);
  *(void *)(v89 + v91[28]) = *(void *)(v90 + v91[28]);
  *(void *)(v89 + v91[29]) = *(void *)(v90 + v91[29]);
  *(void *)(v89 + v91[30]) = *(void *)(v90 + v91[30]);
  *(void *)(v89 + v91[31]) = *(void *)(v90 + v91[31]);
  *(void *)(v89 + v91[32]) = *(void *)(v90 + v91[32]);
  *(void *)(v89 + v91[33]) = *(void *)(v90 + v91[33]);
  *(unsigned char *)(v89 + v91[34]) = *(unsigned char *)(v90 + v91[34]);
  uint64_t v101 = a3[37];
  uint64_t v102 = a1 + v101;
  uint64_t v103 = a2 + v101;
  v7(a1 + v101, a2 + v101, v6);
  v7(v102 + v91[5], v103 + v91[5], v6);
  *(unsigned char *)(v102 + v91[6]) = *(unsigned char *)(v103 + v91[6]);
  *(void *)(v102 + v91[7]) = *(void *)(v103 + v91[7]);
  *(void *)(v102 + v91[8]) = *(void *)(v103 + v91[8]);
  *(void *)(v102 + v91[9]) = *(void *)(v103 + v91[9]);
  *(void *)(v102 + v91[10]) = *(void *)(v103 + v91[10]);
  *(unsigned char *)(v102 + v91[11]) = *(unsigned char *)(v103 + v91[11]);
  *(void *)(v102 + v91[12]) = *(void *)(v103 + v91[12]);
  *(void *)(v102 + v91[13]) = *(void *)(v103 + v91[13]);
  *(void *)(v102 + v91[14]) = *(void *)(v103 + v91[14]);
  *(void *)(v102 + v91[15]) = *(void *)(v103 + v91[15]);
  uint64_t v104 = v91[16];
  uint64_t v105 = v102 + v104;
  uint64_t v106 = v103 + v104;
  *(void *)uint64_t v105 = *(void *)v106;
  *(unsigned char *)(v105 + 8) = *(unsigned char *)(v106 + 8);
  *(void *)(v102 + v91[17]) = *(void *)(v103 + v91[17]);
  *(void *)(v102 + v91[18]) = *(void *)(v103 + v91[18]);
  *(unsigned char *)(v102 + v91[19]) = *(unsigned char *)(v103 + v91[19]);
  uint64_t v107 = v91[20];
  uint64_t v108 = v102 + v107;
  uint64_t v109 = v103 + v107;
  *(void *)uint64_t v108 = *(void *)v109;
  *(unsigned char *)(v108 + 8) = *(unsigned char *)(v109 + 8);
  *(void *)(v102 + v91[21]) = *(void *)(v103 + v91[21]);
  *(void *)(v102 + v91[22]) = *(void *)(v103 + v91[22]);
  uint64_t v110 = v91[23];
  uint64_t v111 = v102 + v110;
  uint64_t v112 = v103 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
  *(void *)(v102 + v91[24]) = *(void *)(v103 + v91[24]);
  *(void *)(v102 + v91[25]) = *(void *)(v103 + v91[25]);
  *(void *)(v102 + v91[26]) = *(void *)(v103 + v91[26]);
  *(void *)(v102 + v91[27]) = *(void *)(v103 + v91[27]);
  *(void *)(v102 + v91[28]) = *(void *)(v103 + v91[28]);
  *(void *)(v102 + v91[29]) = *(void *)(v103 + v91[29]);
  *(void *)(v102 + v91[30]) = *(void *)(v103 + v91[30]);
  *(void *)(v102 + v91[31]) = *(void *)(v103 + v91[31]);
  *(void *)(v102 + v91[32]) = *(void *)(v103 + v91[32]);
  *(void *)(v102 + v91[33]) = *(void *)(v103 + v91[33]);
  *(unsigned char *)(v102 + v91[34]) = *(unsigned char *)(v103 + v91[34]);
  uint64_t v113 = a3[38];
  uint64_t v114 = (char *)(a1 + v113);
  uint64_t v115 = (char *)(a2 + v113);
  if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, (uint64_t)v91))
  {
    uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
    memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v114, (uint64_t)v115, v6);
    v7((uint64_t)&v114[v91[5]], (uint64_t)&v115[v91[5]], v6);
    v114[v91[6]] = v115[v91[6]];
    *(void *)&v114[v91[7]] = *(void *)&v115[v91[7]];
    *(void *)&v114[v91[8]] = *(void *)&v115[v91[8]];
    *(void *)&v114[v91[9]] = *(void *)&v115[v91[9]];
    *(void *)&v114[v91[10]] = *(void *)&v115[v91[10]];
    v114[v91[11]] = v115[v91[11]];
    *(void *)&v114[v91[12]] = *(void *)&v115[v91[12]];
    *(void *)&v114[v91[13]] = *(void *)&v115[v91[13]];
    *(void *)&v114[v91[14]] = *(void *)&v115[v91[14]];
    *(void *)&v114[v91[15]] = *(void *)&v115[v91[15]];
    uint64_t v117 = v91[16];
    uint64_t v118 = &v114[v117];
    uint64_t v119 = &v115[v117];
    *(void *)uint64_t v118 = *(void *)v119;
    v118[8] = v119[8];
    *(void *)&v114[v91[17]] = *(void *)&v115[v91[17]];
    *(void *)&v114[v91[18]] = *(void *)&v115[v91[18]];
    v114[v91[19]] = v115[v91[19]];
    uint64_t v120 = v91[20];
    uint64_t v121 = &v114[v120];
    uint64_t v122 = &v115[v120];
    *(void *)uint64_t v121 = *(void *)v122;
    v121[8] = v122[8];
    *(void *)&v114[v91[21]] = *(void *)&v115[v91[21]];
    *(void *)&v114[v91[22]] = *(void *)&v115[v91[22]];
    uint64_t v123 = v91[23];
    char v124 = &v114[v123];
    uint64_t v125 = &v115[v123];
    *(void *)char v124 = *(void *)v125;
    v124[8] = v125[8];
    *(void *)&v114[v91[24]] = *(void *)&v115[v91[24]];
    *(void *)&v114[v91[25]] = *(void *)&v115[v91[25]];
    *(void *)&v114[v91[26]] = *(void *)&v115[v91[26]];
    *(void *)&v114[v91[27]] = *(void *)&v115[v91[27]];
    *(void *)&v114[v91[28]] = *(void *)&v115[v91[28]];
    *(void *)&v114[v91[29]] = *(void *)&v115[v91[29]];
    *(void *)&v114[v91[30]] = *(void *)&v115[v91[30]];
    *(void *)&v114[v91[31]] = *(void *)&v115[v91[31]];
    *(void *)&v114[v91[32]] = *(void *)&v115[v91[32]];
    *(void *)&v114[v91[33]] = *(void *)&v115[v91[33]];
    v114[v91[34]] = v115[v91[34]];
    __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, (uint64_t)v91);
  }
  return a1;
}

uint64_t assignWithTake for DayForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v16, 1, v6);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v17, v18, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v17, v6);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v17, (uint64_t)v18, v6);
LABEL_7:
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  int v25 = __swift_getEnumTagSinglePayload(a1 + v22, 1, v6);
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v23, v24, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v23, v6);
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  v8((uint64_t)v23, (uint64_t)v24, v6);
LABEL_13:
  uint64_t v28 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  int v33 = __swift_getEnumTagSinglePayload(a1 + v30, 1, v6);
  int v34 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v31, v32, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v31, v6);
LABEL_18:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  v8((uint64_t)v31, (uint64_t)v32, v6);
LABEL_19:
  uint64_t v36 = a3[18];
  uint64_t v37 = (void *)(a1 + v36);
  int v38 = (const void *)(a2 + v36);
  int v39 = __swift_getEnumTagSinglePayload(a1 + v36, 1, v6);
  int v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v37, v38, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v37, v6);
LABEL_24:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  v8((uint64_t)v37, (uint64_t)v38, v6);
LABEL_25:
  uint64_t v42 = a3[19];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  int v45 = __swift_getEnumTagSinglePayload(a1 + v42, 1, v6);
  int v46 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v43, v44, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v43, v6);
LABEL_30:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_31;
  }
  v8((uint64_t)v43, (uint64_t)v44, v6);
LABEL_31:
  uint64_t v48 = a3[20];
  uint64_t v49 = (void *)(a1 + v48);
  int v50 = (const void *)(a2 + v48);
  int v51 = __swift_getEnumTagSinglePayload(a1 + v48, 1, v6);
  int v52 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v49, v50, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v49, v6);
LABEL_36:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_37;
  }
  v8((uint64_t)v49, (uint64_t)v50, v6);
LABEL_37:
  uint64_t v54 = a3[21];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (const void *)(a2 + v54);
  int v57 = __swift_getEnumTagSinglePayload(a1 + v54, 1, v6);
  int v58 = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v55, v56, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v55, v6);
LABEL_42:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_43;
  }
  v8((uint64_t)v55, (uint64_t)v56, v6);
LABEL_43:
  uint64_t v60 = a3[22];
  uint64_t v61 = (void *)(a1 + v60);
  int v62 = (const void *)(a2 + v60);
  int v63 = __swift_getEnumTagSinglePayload(a1 + v60, 1, v6);
  int v64 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v61, v62, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v61, v6);
LABEL_48:
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_49;
  }
  v8((uint64_t)v61, (uint64_t)v62, v6);
LABEL_49:
  uint64_t v66 = a3[23];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (const void *)(a2 + v66);
  int v69 = __swift_getEnumTagSinglePayload(a1 + v66, 1, v6);
  int v70 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v67, v68, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v70)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v67, v6);
LABEL_54:
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_55;
  }
  v8((uint64_t)v67, (uint64_t)v68, v6);
LABEL_55:
  uint64_t v72 = a3[24];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (const void *)(a2 + v72);
  int v75 = __swift_getEnumTagSinglePayload(a1 + v72, 1, v6);
  int v76 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v73, v74, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v76)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v73, v6);
LABEL_60:
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_61;
  }
  v8((uint64_t)v73, (uint64_t)v74, v6);
LABEL_61:
  uint64_t v78 = a3[25];
  uint64_t v79 = (void *)(a1 + v78);
  uint64_t v80 = (const void *)(a2 + v78);
  int v81 = __swift_getEnumTagSinglePayload(a1 + v78, 1, v6);
  int v82 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v6);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v79, v80, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v82)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v79, v6);
LABEL_66:
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_67;
  }
  v8((uint64_t)v79, (uint64_t)v80, v6);
LABEL_67:
  uint64_t v84 = a3[26];
  uint64_t v85 = (void *)(a1 + v84);
  uint64_t v86 = (const void *)(a2 + v84);
  int v87 = __swift_getEnumTagSinglePayload(a1 + v84, 1, v6);
  int v88 = __swift_getEnumTagSinglePayload((uint64_t)v86, 1, v6);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v85, v86, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v85, v6);
LABEL_72:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_73;
  }
  v8((uint64_t)v85, (uint64_t)v86, v6);
LABEL_73:
  uint64_t v90 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  uint64_t v91 = (void *)(a1 + v90);
  uint64_t v92 = (const void *)(a2 + v90);
  int v93 = __swift_getEnumTagSinglePayload(a1 + v90, 1, v6);
  int v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v6);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v91, v92, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v94)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v91, v6);
LABEL_78:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_79;
  }
  v8((uint64_t)v91, (uint64_t)v92, v6);
LABEL_79:
  uint64_t v96 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  uint64_t v97 = (void *)(a1 + v96);
  uint64_t v98 = (const void *)(a2 + v96);
  int v99 = __swift_getEnumTagSinglePayload(a1 + v96, 1, v6);
  int v100 = __swift_getEnumTagSinglePayload((uint64_t)v98, 1, v6);
  if (v99)
  {
    if (!v100)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v97, v98, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v6);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v100)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v97, v6);
LABEL_84:
    uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
    goto LABEL_85;
  }
  v8((uint64_t)v97, (uint64_t)v98, v6);
LABEL_85:
  uint64_t v102 = a3[31];
  uint64_t v103 = a3[32];
  uint64_t v104 = a1 + v102;
  uint64_t v105 = a2 + v102;
  *(void *)uint64_t v104 = *(void *)v105;
  *(unsigned char *)(v104 + 8) = *(unsigned char *)(v105 + 8);
  uint64_t v106 = a1 + v103;
  uint64_t v107 = a2 + v103;
  *(void *)uint64_t v106 = *(void *)v107;
  *(unsigned char *)(v106 + 8) = *(unsigned char *)(v107 + 8);
  uint64_t v108 = a3[33];
  uint64_t v109 = a3[34];
  uint64_t v110 = a1 + v108;
  uint64_t v111 = a2 + v108;
  *(void *)uint64_t v110 = *(void *)v111;
  *(unsigned char *)(v110 + 8) = *(unsigned char *)(v111 + 8);
  uint64_t v112 = a1 + v109;
  uint64_t v113 = a2 + v109;
  *(unsigned char *)(v112 + 8) = *(unsigned char *)(v113 + 8);
  *(void *)uint64_t v112 = *(void *)v113;
  uint64_t v114 = a3[35];
  uint64_t v115 = a3[36];
  uint64_t v116 = a1 + v114;
  uint64_t v117 = a2 + v114;
  *(void *)uint64_t v116 = *(void *)v117;
  *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
  uint64_t v118 = a1 + v115;
  uint64_t v119 = a2 + v115;
  v8(a1 + v115, a2 + v115, v6);
  uint64_t v120 = (int *)type metadata accessor for DayPartForecast();
  v8(v118 + v120[5], v119 + v120[5], v6);
  *(unsigned char *)(v118 + v120[6]) = *(unsigned char *)(v119 + v120[6]);
  *(void *)(v118 + v120[7]) = *(void *)(v119 + v120[7]);
  *(void *)(v118 + v120[8]) = *(void *)(v119 + v120[8]);
  *(void *)(v118 + v120[9]) = *(void *)(v119 + v120[9]);
  *(void *)(v118 + v120[10]) = *(void *)(v119 + v120[10]);
  *(unsigned char *)(v118 + v120[11]) = *(unsigned char *)(v119 + v120[11]);
  *(void *)(v118 + v120[12]) = *(void *)(v119 + v120[12]);
  *(void *)(v118 + v120[13]) = *(void *)(v119 + v120[13]);
  *(void *)(v118 + v120[14]) = *(void *)(v119 + v120[14]);
  *(void *)(v118 + v120[15]) = *(void *)(v119 + v120[15]);
  uint64_t v121 = v120[16];
  uint64_t v122 = v118 + v121;
  uint64_t v123 = v119 + v121;
  *(void *)uint64_t v122 = *(void *)v123;
  *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
  *(void *)(v118 + v120[17]) = *(void *)(v119 + v120[17]);
  swift_bridgeObjectRelease();
  *(void *)(v118 + v120[18]) = *(void *)(v119 + v120[18]);
  *(unsigned char *)(v118 + v120[19]) = *(unsigned char *)(v119 + v120[19]);
  uint64_t v124 = v120[20];
  uint64_t v125 = v118 + v124;
  uint64_t v126 = v119 + v124;
  *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
  *(void *)uint64_t v125 = *(void *)v126;
  *(void *)(v118 + v120[21]) = *(void *)(v119 + v120[21]);
  *(void *)(v118 + v120[22]) = *(void *)(v119 + v120[22]);
  uint64_t v127 = v120[23];
  uint64_t v128 = v118 + v127;
  uint64_t v129 = v119 + v127;
  *(void *)uint64_t v128 = *(void *)v129;
  *(unsigned char *)(v128 + 8) = *(unsigned char *)(v129 + 8);
  *(void *)(v118 + v120[24]) = *(void *)(v119 + v120[24]);
  *(void *)(v118 + v120[25]) = *(void *)(v119 + v120[25]);
  *(void *)(v118 + v120[26]) = *(void *)(v119 + v120[26]);
  *(void *)(v118 + v120[27]) = *(void *)(v119 + v120[27]);
  *(void *)(v118 + v120[28]) = *(void *)(v119 + v120[28]);
  *(void *)(v118 + v120[29]) = *(void *)(v119 + v120[29]);
  *(void *)(v118 + v120[30]) = *(void *)(v119 + v120[30]);
  *(void *)(v118 + v120[31]) = *(void *)(v119 + v120[31]);
  *(void *)(v118 + v120[32]) = *(void *)(v119 + v120[32]);
  *(void *)(v118 + v120[33]) = *(void *)(v119 + v120[33]);
  *(unsigned char *)(v118 + v120[34]) = *(unsigned char *)(v119 + v120[34]);
  uint64_t v130 = a3[37];
  uint64_t v131 = a1 + v130;
  uint64_t v132 = a2 + v130;
  v8(a1 + v130, a2 + v130, v6);
  v8(v131 + v120[5], v132 + v120[5], v6);
  *(unsigned char *)(v131 + v120[6]) = *(unsigned char *)(v132 + v120[6]);
  *(void *)(v131 + v120[7]) = *(void *)(v132 + v120[7]);
  *(void *)(v131 + v120[8]) = *(void *)(v132 + v120[8]);
  *(void *)(v131 + v120[9]) = *(void *)(v132 + v120[9]);
  *(void *)(v131 + v120[10]) = *(void *)(v132 + v120[10]);
  *(unsigned char *)(v131 + v120[11]) = *(unsigned char *)(v132 + v120[11]);
  *(void *)(v131 + v120[12]) = *(void *)(v132 + v120[12]);
  *(void *)(v131 + v120[13]) = *(void *)(v132 + v120[13]);
  *(void *)(v131 + v120[14]) = *(void *)(v132 + v120[14]);
  *(void *)(v131 + v120[15]) = *(void *)(v132 + v120[15]);
  uint64_t v133 = v120[16];
  uint64_t v134 = v131 + v133;
  uint64_t v135 = v132 + v133;
  *(void *)uint64_t v134 = *(void *)v135;
  *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
  *(void *)(v131 + v120[17]) = *(void *)(v132 + v120[17]);
  swift_bridgeObjectRelease();
  *(void *)(v131 + v120[18]) = *(void *)(v132 + v120[18]);
  *(unsigned char *)(v131 + v120[19]) = *(unsigned char *)(v132 + v120[19]);
  uint64_t v136 = v120[20];
  uint64_t v137 = v131 + v136;
  uint64_t v138 = v132 + v136;
  *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
  *(void *)uint64_t v137 = *(void *)v138;
  *(void *)(v131 + v120[21]) = *(void *)(v132 + v120[21]);
  *(void *)(v131 + v120[22]) = *(void *)(v132 + v120[22]);
  uint64_t v139 = v120[23];
  uint64_t v140 = v131 + v139;
  uint64_t v141 = v132 + v139;
  *(void *)uint64_t v140 = *(void *)v141;
  *(unsigned char *)(v140 + 8) = *(unsigned char *)(v141 + 8);
  *(void *)(v131 + v120[24]) = *(void *)(v132 + v120[24]);
  *(void *)(v131 + v120[25]) = *(void *)(v132 + v120[25]);
  *(void *)(v131 + v120[26]) = *(void *)(v132 + v120[26]);
  *(void *)(v131 + v120[27]) = *(void *)(v132 + v120[27]);
  *(void *)(v131 + v120[28]) = *(void *)(v132 + v120[28]);
  *(void *)(v131 + v120[29]) = *(void *)(v132 + v120[29]);
  *(void *)(v131 + v120[30]) = *(void *)(v132 + v120[30]);
  *(void *)(v131 + v120[31]) = *(void *)(v132 + v120[31]);
  *(void *)(v131 + v120[32]) = *(void *)(v132 + v120[32]);
  *(void *)(v131 + v120[33]) = *(void *)(v132 + v120[33]);
  *(unsigned char *)(v131 + v120[34]) = *(unsigned char *)(v132 + v120[34]);
  uint64_t v142 = a3[38];
  char v143 = (unsigned char *)(a1 + v142);
  uint64_t v144 = (unsigned char *)(a2 + v142);
  LODWORD(v131) = __swift_getEnumTagSinglePayload(a1 + v142, 1, (uint64_t)v120);
  int v145 = __swift_getEnumTagSinglePayload((uint64_t)v144, 1, (uint64_t)v120);
  if (!v131)
  {
    if (!v145)
    {
      v8((uint64_t)v143, (uint64_t)v144, v6);
      v8((uint64_t)&v143[v120[5]], (uint64_t)&v144[v120[5]], v6);
      v143[v120[6]] = v144[v120[6]];
      *(void *)&v143[v120[7]] = *(void *)&v144[v120[7]];
      *(void *)&v143[v120[8]] = *(void *)&v144[v120[8]];
      *(void *)&v143[v120[9]] = *(void *)&v144[v120[9]];
      *(void *)&v143[v120[10]] = *(void *)&v144[v120[10]];
      v143[v120[11]] = v144[v120[11]];
      *(void *)&v143[v120[12]] = *(void *)&v144[v120[12]];
      *(void *)&v143[v120[13]] = *(void *)&v144[v120[13]];
      *(void *)&v143[v120[14]] = *(void *)&v144[v120[14]];
      *(void *)&v143[v120[15]] = *(void *)&v144[v120[15]];
      uint64_t v158 = v120[16];
      uint64_t v159 = &v143[v158];
      char v160 = &v144[v158];
      *(void *)uint64_t v159 = *(void *)v160;
      v159[8] = v160[8];
      *(void *)&v143[v120[17]] = *(void *)&v144[v120[17]];
      swift_bridgeObjectRelease();
      *(void *)&v143[v120[18]] = *(void *)&v144[v120[18]];
      v143[v120[19]] = v144[v120[19]];
      uint64_t v161 = v120[20];
      uint64_t v162 = &v143[v161];
      uint64_t v163 = &v144[v161];
      v162[8] = v163[8];
      *(void *)uint64_t v162 = *(void *)v163;
      *(void *)&v143[v120[21]] = *(void *)&v144[v120[21]];
      *(void *)&v143[v120[22]] = *(void *)&v144[v120[22]];
      uint64_t v164 = v120[23];
      uint64_t v165 = &v143[v164];
      uint64_t v166 = &v144[v164];
      *(void *)uint64_t v165 = *(void *)v166;
      v165[8] = v166[8];
      *(void *)&v143[v120[24]] = *(void *)&v144[v120[24]];
      *(void *)&v143[v120[25]] = *(void *)&v144[v120[25]];
      *(void *)&v143[v120[26]] = *(void *)&v144[v120[26]];
      *(void *)&v143[v120[27]] = *(void *)&v144[v120[27]];
      *(void *)&v143[v120[28]] = *(void *)&v144[v120[28]];
      *(void *)&v143[v120[29]] = *(void *)&v144[v120[29]];
      *(void *)&v143[v120[30]] = *(void *)&v144[v120[30]];
      *(void *)&v143[v120[31]] = *(void *)&v144[v120[31]];
      *(void *)&v143[v120[32]] = *(void *)&v144[v120[32]];
      *(void *)&v143[v120[33]] = *(void *)&v144[v120[33]];
      v143[v120[34]] = v144[v120[34]];
      return a1;
    }
    sub_1A9586B0C((uint64_t)v143);
    goto LABEL_90;
  }
  if (v145)
  {
LABEL_90:
    uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
    memcpy(v143, v144, *(void *)(*(void *)(v156 - 8) + 64));
    return a1;
  }
  unint64_t v146 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32);
  v146(v143, v144, v6);
  v146(&v143[v120[5]], &v144[v120[5]], v6);
  v143[v120[6]] = v144[v120[6]];
  *(void *)&v143[v120[7]] = *(void *)&v144[v120[7]];
  *(void *)&v143[v120[8]] = *(void *)&v144[v120[8]];
  *(void *)&v143[v120[9]] = *(void *)&v144[v120[9]];
  *(void *)&v143[v120[10]] = *(void *)&v144[v120[10]];
  v143[v120[11]] = v144[v120[11]];
  *(void *)&v143[v120[12]] = *(void *)&v144[v120[12]];
  *(void *)&v143[v120[13]] = *(void *)&v144[v120[13]];
  *(void *)&v143[v120[14]] = *(void *)&v144[v120[14]];
  *(void *)&v143[v120[15]] = *(void *)&v144[v120[15]];
  uint64_t v147 = v120[16];
  uint64_t v148 = &v143[v147];
  uint64_t v149 = &v144[v147];
  *(void *)uint64_t v148 = *(void *)v149;
  v148[8] = v149[8];
  *(void *)&v143[v120[17]] = *(void *)&v144[v120[17]];
  *(void *)&v143[v120[18]] = *(void *)&v144[v120[18]];
  v143[v120[19]] = v144[v120[19]];
  uint64_t v150 = v120[20];
  uint64_t v151 = &v143[v150];
  uint64_t v152 = &v144[v150];
  *(void *)uint64_t v151 = *(void *)v152;
  v151[8] = v152[8];
  *(void *)&v143[v120[21]] = *(void *)&v144[v120[21]];
  *(void *)&v143[v120[22]] = *(void *)&v144[v120[22]];
  uint64_t v153 = v120[23];
  uint64_t v154 = &v143[v153];
  int v155 = &v144[v153];
  *(void *)uint64_t v154 = *(void *)v155;
  v154[8] = v155[8];
  *(void *)&v143[v120[24]] = *(void *)&v144[v120[24]];
  *(void *)&v143[v120[25]] = *(void *)&v144[v120[25]];
  *(void *)&v143[v120[26]] = *(void *)&v144[v120[26]];
  *(void *)&v143[v120[27]] = *(void *)&v144[v120[27]];
  *(void *)&v143[v120[28]] = *(void *)&v144[v120[28]];
  *(void *)&v143[v120[29]] = *(void *)&v144[v120[29]];
  *(void *)&v143[v120[30]] = *(void *)&v144[v120[30]];
  *(void *)&v143[v120[31]] = *(void *)&v144[v120[31]];
  *(void *)&v143[v120[32]] = *(void *)&v144[v120[32]];
  *(void *)&v143[v120[33]] = *(void *)&v144[v120[33]];
  v143[v120[34]] = v144[v120[34]];
  __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, (uint64_t)v120);
  return a1;
}

uint64_t sub_1A958CE0C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[10];
LABEL_12:
    uint64_t v9 = a1 + v12;
    goto LABEL_13;
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for DayPartForecast();
    OUTLINED_FUNCTION_0();
    if (*(_DWORD *)(v16 + 84) == a2)
    {
      uint64_t v8 = v15;
      uint64_t v12 = a3[36];
    }
    else
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
      uint64_t v12 = a3[38];
    }
    goto LABEL_12;
  }
  unint64_t v13 = *(void *)(a1 + a3[13]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

void sub_1A958CF0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    OUTLINED_FUNCTION_0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[10];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[13]) = (a2 - 1);
        return;
      }
      type metadata accessor for DayPartForecast();
      OUTLINED_FUNCTION_0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[36];
      }
      else
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC678);
        uint64_t v14 = a4[38];
      }
    }
    uint64_t v11 = a1 + v14;
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void sub_1A958D008(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A9632330();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DayForecast.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v6 = ((a2 - 222) >> 8) + 1;
    *uint64_t result = a2 + 34;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A958D128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayForecast.CodingKeys()
{
  return &type metadata for DayForecast.CodingKeys;
}

unint64_t sub_1A958D164()
{
  unint64_t result = qword_1E97EC538;
  if (!qword_1E97EC538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC538);
  }
  return result;
}

unint64_t sub_1A958D1B4()
{
  unint64_t result = qword_1EB6DBEA8;
  if (!qword_1EB6DBEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBEA8);
  }
  return result;
}

unint64_t sub_1A958D204()
{
  unint64_t result = qword_1EB6DBEA0;
  if (!qword_1EB6DBEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBEA0);
  }
  return result;
}

double PrecipitationAmountRange.minimum.getter()
{
  return *(double *)v0;
}

double PrecipitationAmountRange.maximum.getter()
{
  return *(double *)(v0 + 8);
}

double PrecipitationAmountRange.expected.getter()
{
  return *(double *)(v0 + 16);
}

double PrecipitationAmountRange.minimumSnow.getter()
{
  return *(double *)(v0 + 24);
}

double PrecipitationAmountRange.maximumSnow.getter()
{
  return *(double *)(v0 + 32);
}

double PrecipitationAmountRange.expectedSnow.getter()
{
  return *(double *)(v0 + 40);
}

BOOL static PrecipitationAmountRange.== infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

uint64_t sub_1A958D2D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D756D696E696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D756D6978616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6465746365707865 && a2 == 0xE800000000000000;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x536D756D696E696DLL && a2 == 0xEB00000000776F6ELL;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x536D756D6978616DLL && a2 == 0xEB00000000776F6ELL;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6465746365707865 && a2 == 0xEC000000776F6E53)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1A96327D0();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A958D57C(char a1)
{
  uint64_t result = 0x6D756D696E696DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D756D6978616DLL;
      break;
    case 2:
    case 5:
      uint64_t result = 0x6465746365707865;
      break;
    case 3:
      unsigned int v3 = 1768843629;
      goto LABEL_5;
    case 4:
      unsigned int v3 = 1769496941;
LABEL_5:
      uint64_t result = v3 | 0x536D756D00000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A958D638()
{
  return sub_1A958D57C(*v0);
}

uint64_t sub_1A958D640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A958D2D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A958D668(uint64_t a1)
{
  unint64_t v2 = sub_1A958D890();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A958D6A4(uint64_t a1)
{
  unint64_t v2 = sub_1A958D890();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PrecipitationAmountRange.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DACB8);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A958D890();
  sub_1A9632970();
  v10[15] = 0;
  OUTLINED_FUNCTION_2_2();
  if (!v1)
  {
    v10[14] = 1;
    OUTLINED_FUNCTION_2_2();
    v10[13] = 2;
    OUTLINED_FUNCTION_2_2();
    v10[12] = 3;
    OUTLINED_FUNCTION_2_2();
    v10[11] = 4;
    OUTLINED_FUNCTION_2_2();
    v10[10] = 5;
    OUTLINED_FUNCTION_2_2();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A958D890()
{
  unint64_t result = qword_1EB6DAC98;
  if (!qword_1EB6DAC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAC98);
  }
  return result;
}

uint64_t PrecipitationAmountRange.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DACB0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A958D890();
  sub_1A9632950();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_28();
    uint64_t v7 = v6;
    OUTLINED_FUNCTION_0_28();
    uint64_t v9 = v8;
    OUTLINED_FUNCTION_0_28();
    uint64_t v11 = v10;
    OUTLINED_FUNCTION_0_28();
    uint64_t v13 = v12;
    OUTLINED_FUNCTION_0_28();
    uint64_t v16 = v15;
    OUTLINED_FUNCTION_0_28();
    uint64_t v18 = v17;
    uint64_t v19 = OUTLINED_FUNCTION_3_27();
    v20(v19);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v11;
    a2[3] = v13;
    a2[4] = v16;
    a2[5] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A958DAB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PrecipitationAmountRange.init(from:)(a1, a2);
}

uint64_t sub_1A958DAC8(void *a1)
{
  return PrecipitationAmountRange.encode(to:)(a1);
}

uint64_t sub_1A958DAE4()
{
  return static PrecipitationAmountRange.read(from:)();
}

uint64_t sub_1A958DAFC()
{
  return PrecipitationAmountRange.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for PrecipitationAmountRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A958DBE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAmountRange.CodingKeys()
{
  return &type metadata for PrecipitationAmountRange.CodingKeys;
}

unint64_t sub_1A958DC1C()
{
  unint64_t result = qword_1E97EC540;
  if (!qword_1E97EC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC540);
  }
  return result;
}

unint64_t sub_1A958DC6C()
{
  unint64_t result = qword_1EB6DACA8;
  if (!qword_1EB6DACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DACA8);
  }
  return result;
}

unint64_t sub_1A958DCBC()
{
  unint64_t result = qword_1EB6DACA0;
  if (!qword_1EB6DACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DACA0);
  }
  return result;
}

uint64_t WeatherRequestMarineHourlyRelativeRange.RelativeTo.rawValue.getter()
{
  if (*v0) {
    return 7827310;
  }
  else {
    return 7954788;
  }
}

uint64_t sub_1A958DD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_32();
  uint64_t v13 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_2();
  uint64_t v19 = v18 - v17;
  sub_1A944A2EC(a3, v4, &qword_1EB6DE3A0);
  sub_1A958F780(v3, v10);
  if (__swift_getEnumTagSinglePayload(v4, 1, v13) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v19, v10 + *(int *)(v6 + 28), v13);
    sub_1A944C3D0(v4, &qword_1EB6DE3A0);
  }
  else
  {
    sub_1A9568364(v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v19, v4, v13);
  }
  sub_1A958E75C();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631510();
  sub_1A9631EA0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A958DF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v81 = a2;
  uint64_t v82 = a1;
  uint64_t v4 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  uint64_t v5 = OUTLINED_FUNCTION_2_0(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (uint64_t)&v68 - v9;
  uint64_t v85 = sub_1A962E9F0();
  OUTLINED_FUNCTION_1();
  uint64_t v88 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_1();
  uint64_t v84 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v14 = OUTLINED_FUNCTION_2_0(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_16();
  uint64_t v80 = v15;
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_16();
  uint64_t v77 = v23;
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v24);
  uint64_t v73 = (char *)&v68 - v25;
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v26);
  uint64_t v86 = (char *)&v68 - v27;
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v68 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD388);
  uint64_t v32 = OUTLINED_FUNCTION_2_0(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_2();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = sub_1A962EA40();
  OUTLINED_FUNCTION_1();
  uint64_t v38 = v37;
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_32();
  sub_1A962EA00();
  OUTLINED_FUNCTION_1();
  uint64_t v74 = v41;
  uint64_t v75 = v40;
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_1_1();
  uint64_t v83 = v42;
  sub_1A944A2EC(v72, v35, &qword_1EB6DD388);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v35, 1, v36);
  uint64_t v79 = v7;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A962EA30();
    sub_1A944C3D0(v35, &qword_1EB6DD388);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v3, v35, v36);
  }
  static Calendar.currentCalendar(with:)(v3, v83);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v3, v36);
  uint64_t v44 = v87;
  sub_1A958E84C(v87, (uint64_t)v30, (uint64_t)v30);
  uint64_t v45 = v88;
  int v46 = *(void (**)(void))(v88 + 104);
  uint64_t v48 = v84;
  uint64_t v47 = v85;
  LODWORD(v72) = *MEMORY[0x1E4F27C10];
  uint64_t v71 = (void (*)(uint64_t, void, uint64_t))v46;
  v46(v84);
  sub_1A962E9B0();
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  uint64_t v88 = v45 + 8;
  int v70 = v49;
  v49(v48, v47);
  int v50 = v73;
  int v69 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v69(v73, v30, v19);
  uint64_t v51 = v44;
  uint64_t v52 = v76;
  sub_1A958F780(v51, v76);
  int v53 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  uint64_t v78 = v21;
  if (v53 == 1)
  {
    sub_1A962E720();
    sub_1A9568364(v52);
    uint64_t v54 = *(void (**)(void))(v21 + 8);
    ((void (*)(char *, uint64_t))v54)(v50, v19);
    sub_1A944C3D0((uint64_t)v18, &qword_1EB6DE3A0);
  }
  else
  {
    sub_1A9568364(v52);
    uint64_t v54 = *(void (**)(void))(v21 + 8);
    ((void (*)(char *, uint64_t))v54)(v50, v19);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v86, v18, v19);
  }
  uint64_t v55 = v84;
  uint64_t v56 = v85;
  v71(v84, v72, v85);
  uint64_t v57 = v87;
  uint64_t v58 = v80;
  sub_1A962E9B0();
  v70(v55, v56);
  v69(v77, v30, v19);
  uint64_t v59 = (uint64_t)v79;
  sub_1A958F780(v57, (uint64_t)v79);
  if (__swift_getEnumTagSinglePayload(v58, 1, v19) == 1)
  {
    sub_1A962E720();
    sub_1A9568364(v59);
    uint64_t v60 = v78;
    OUTLINED_FUNCTION_3_28();
    v54();
    OUTLINED_FUNCTION_3_28();
    v54();
    uint64_t v61 = OUTLINED_FUNCTION_5_32();
    v62(v61);
    sub_1A944C3D0(v58, &qword_1EB6DE3A0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v82, v86, v19);
  }
  else
  {
    sub_1A9568364(v59);
    uint64_t v64 = v78;
    OUTLINED_FUNCTION_3_28();
    v54();
    OUTLINED_FUNCTION_3_28();
    v54();
    uint64_t v65 = OUTLINED_FUNCTION_5_32();
    v66(v65);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32);
    v67(v81, v58, v19);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v67)(v82, v86, v19);
  }
}

WeatherDaemon::WeatherRequestMarineHourlyRelativeRange::RelativeTo_optional __swiftcall WeatherRequestMarineHourlyRelativeRange.RelativeTo.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

WeatherDaemon::WeatherRequestMarineHourlyRelativeRange::RelativeTo_optional sub_1A958E5F4(Swift::String *a1)
{
  return WeatherRequestMarineHourlyRelativeRange.RelativeTo.init(rawValue:)(*a1);
}

uint64_t sub_1A958E600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WeatherRequestMarineHourlyRelativeRange.RelativeTo.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1A958E62C()
{
  return sub_1A9632000();
}

uint64_t sub_1A958E68C()
{
  return sub_1A9631FB0();
}

uint64_t WeatherRequestMarineHourlyRelativeRange.init(start:end:relativeTo:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a3;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = v7;
  uint64_t v8 = a5 + *(int *)(type metadata accessor for WeatherRequestMarineHourlyRelativeRange() + 28);
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  return v11(v8, a4, v9);
}

uint64_t sub_1A958E75C()
{
  if (*(unsigned char *)(v0 + 16)) {
    sub_1A94A8AB4();
  }
  else {
    sub_1A94A88C4();
  }
  uint64_t v2 = sub_1A96327B0();
  sub_1A9631EA0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  sub_1A96327B0();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A958E84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A962E810();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_1A962E4B0();
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v46 = a3;
    uint64_t v42 = v17;
    uint64_t v40 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAF38);
    uint64_t v21 = sub_1A962E9F0();
    uint64_t v43 = v12;
    uint64_t v44 = v15;
    uint64_t v41 = a2;
    uint64_t v22 = v21;
    uint64_t v23 = *(void *)(v21 - 8);
    uint64_t v24 = *(void *)(v23 + 72);
    uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
    uint64_t v45 = v8;
    uint64_t v26 = (v25 + 32) & ~v25;
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1A9635D60;
    uint64_t v28 = v27 + v26;
    uint64_t v29 = *MEMORY[0x1E4F27C20];
    uint64_t v39 = a1;
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104);
    v30(v28, v29, v22);
    v30(v28 + v24, *MEMORY[0x1E4F27C30], v22);
    v30(v28 + 2 * v24, *MEMORY[0x1E4F27BF0], v22);
    uint64_t v31 = v28 + 3 * v24;
    uint64_t v32 = v22;
    uint64_t v34 = v44;
    uint64_t v33 = (uint64_t)v45;
    v30(v31, *MEMORY[0x1E4F27C10], v32);
    uint64_t v35 = v43;
    sub_1A94171F0(v27);
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    sub_1A962E990();
    swift_bridgeObjectRelease();
    sub_1A962E9A0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v42);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v35, v41, v9);
    if (__swift_getEnumTagSinglePayload(v33, 1, v9) == 1)
    {
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v36(v34, v35, v9);
      sub_1A944C3D0(v33, &qword_1EB6DE3A0);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v46, v34, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      v38(v34, v33, v9);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(v46, v34, v9);
    }
  }
  else
  {
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    return sub_1A962E980();
  }
}

uint64_t sub_1A958EC7C(char a1)
{
  uint64_t result = 0x7472617473;
  switch(a1)
  {
    case 1:
      uint64_t result = 6581861;
      break;
    case 2:
      uint64_t result = 0x65766974616C6572;
      break;
    case 3:
      uint64_t result = 7827310;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A958ED00()
{
  return sub_1A958EC7C(*v0);
}

uint64_t sub_1A958ED08(uint64_t a1)
{
  unint64_t v2 = sub_1A958EF5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A958ED44(uint64_t a1)
{
  unint64_t v2 = sub_1A958EF5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherRequestMarineHourlyRelativeRange.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC548);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A958EF5C();
  sub_1A9632970();
  sub_1A9632760();
  if (!v1)
  {
    sub_1A9632760();
    sub_1A958EFA8();
    sub_1A9632770();
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    sub_1A962E810();
    sub_1A947198C(&qword_1EB6DC8D0);
    sub_1A9632770();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A958EF5C()
{
  unint64_t result = qword_1E97EC550;
  if (!qword_1E97EC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC550);
  }
  return result;
}

unint64_t sub_1A958EFA8()
{
  unint64_t result = qword_1E97EC558;
  if (!qword_1E97EC558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC558);
  }
  return result;
}

uint64_t WeatherRequestMarineHourlyRelativeRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC560);
  OUTLINED_FUNCTION_1();
  uint64_t v27 = v9;
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2();
  uint64_t v17 = v16 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A958EF5C();
  uint64_t v29 = v12;
  uint64_t v18 = v30;
  sub_1A9632950();
  if (!v18)
  {
    uint64_t v19 = v7;
    char v35 = 0;
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    *(void *)uint64_t v17 = sub_1A9632670();
    char v34 = 1;
    *(void *)(v17 + 8) = sub_1A9632670();
    char v32 = 2;
    sub_1A958F2C0();
    sub_1A9632680();
    *(unsigned char *)(v17 + 16) = v33;
    char v31 = 3;
    sub_1A947198C(&qword_1EB6DC8D8);
    uint64_t v30 = v19;
    uint64_t v23 = v29;
    sub_1A9632680();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v21);
    uint64_t v24 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17 + *(int *)(v13 + 28), v30, v3);
    sub_1A9568300(v17, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A958F2C0()
{
  unint64_t result = qword_1E97EC568;
  if (!qword_1E97EC568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC568);
  }
  return result;
}

unint64_t sub_1A958F310()
{
  unint64_t result = qword_1E97EC570;
  if (!qword_1E97EC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC570);
  }
  return result;
}

uint64_t sub_1A958F35C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestMarineHourlyRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A958F374(void *a1)
{
  return WeatherRequestMarineHourlyRelativeRange.encode(to:)(a1);
}

uint64_t sub_1A958F38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1A962E810();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1A958F40C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange.RelativeTo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A958F554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestMarineHourlyRelativeRange.RelativeTo()
{
  return &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo;
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A958F658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestMarineHourlyRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys;
}

unint64_t sub_1A958F694()
{
  unint64_t result = qword_1E97EC578;
  if (!qword_1E97EC578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC578);
  }
  return result;
}

unint64_t sub_1A958F6E4()
{
  unint64_t result = qword_1E97EC580;
  if (!qword_1E97EC580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC580);
  }
  return result;
}

unint64_t sub_1A958F734()
{
  unint64_t result = qword_1E97EC588;
  if (!qword_1E97EC588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC588);
  }
  return result;
}

uint64_t sub_1A958F780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A958F7E4()
{
  unint64_t result = qword_1E97EC590;
  if (!qword_1E97EC590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC590);
  }
  return result;
}

uint64_t sub_1A958F830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v14 = *(void *)a6;
  char v15 = *(unsigned char *)(a6 + 8);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A96317F0();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB6EB630);
  uint64_t v17 = sub_1A96317D0();
  os_log_type_t v18 = sub_1A9632230();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v27 = v14;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 141558275;
    v29[0] = v26;
    sub_1A9632350();
    *(_WORD *)(v19 + 12) = 2081;
    uint64_t v20 = CLLocationCoordinate2D.id.getter();
    sub_1A945C1DC(v20, v21, v29);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v17, v18, "Fetching daily weather summary for location: %{private,mask.hash}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v26, -1, -1);
    uint64_t v22 = v19;
    uint64_t v14 = v27;
    MEMORY[0x1AD0F7300](v22, -1, -1);
  }

  v29[0] = a1;
  *(double *)&v29[1] = a7;
  *(double *)&v29[2] = a8;
  v29[3] = a2;
  v29[4] = a3;
  v29[5] = a4;
  v29[6] = a5;
  v29[7] = v14;
  char v30 = v15;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A94AE404();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t type metadata accessor for DailySummaryService()
{
  return self;
}

Swift::String __swiftcall CLLocationCoordinate2D.storeKey(forCountryCode:)(Swift::String forCountryCode)
{
  OUTLINED_FUNCTION_27_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE280);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A9635D60;
  OUTLINED_FUNCTION_6_26((void *)v5, MEMORY[0x1E4FBB3D0]);
  uint64_t v6 = static Locale.languageIdentifier.getter();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 136) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1A9459E7C();
  *(void *)(v5 + 112) = v6;
  *(void *)(v5 + 120) = v8;
  *(void *)(v5 + 176) = v9;
  *(void *)(v5 + 184) = v10;
  *(void *)(v5 + 144) = v10;
  *(void *)(v5 + 152) = v4;
  *(void *)(v5 + 160) = v2;
  sub_1A9631510();
  uint64_t v11 = sub_1A9631D90();
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t sub_1A958FBA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CLLocationCoordinate2D.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double CLLocationCoordinate2D.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB6DB6C8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A958FD34();
  sub_1A9632950();
  if (!v1)
  {
    sub_1A9632660();
    double v2 = v5;
    sub_1A9632660();
    uint64_t v6 = OUTLINED_FUNCTION_4_27();
    v7(v6);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

unint64_t sub_1A958FD34()
{
  unint64_t result = qword_1EB6DB6B0;
  if (!qword_1EB6DB6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB6B0);
  }
  return result;
}

uint64_t CLLocationCoordinate2D.encode(to:)()
{
  OUTLINED_FUNCTION_27_0();
  double v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB5A0);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1A958FD34();
  sub_1A9632970();
  char v12 = 0;
  sub_1A9632750();
  if (!v0)
  {
    char v11 = 1;
    sub_1A9632750();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1A958FEBC()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1A958FEC8()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A958FF20(char a1)
{
  if (a1) {
    return 0x64757469676E6F6CLL;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_1A958FF5C(char *a1, char *a2)
{
  return sub_1A950A6FC(*a1, *a2);
}

uint64_t sub_1A958FF68()
{
  return sub_1A95C937C();
}

uint64_t sub_1A958FF70()
{
  return sub_1A94ABCA8();
}

uint64_t sub_1A958FF78()
{
  return sub_1A94AE158();
}

uint64_t sub_1A958FF80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A958FEC8();
  *a1 = result;
  return result;
}

uint64_t sub_1A958FFB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A958FF20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A958FFDC()
{
  return sub_1A958FF20(*v0);
}

uint64_t sub_1A958FFE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A958FF1C();
  *a1 = result;
  return result;
}

uint64_t sub_1A959000C(uint64_t a1)
{
  unint64_t v2 = sub_1A958FD34();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9590048(uint64_t a1)
{
  unint64_t v2 = sub_1A958FD34();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1A9590084(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = CLLocationCoordinate2D.init(from:)(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_1A95900B0()
{
  return CLLocationCoordinate2D.encode(to:)();
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9590198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1A95901D4()
{
  unint64_t result = qword_1E97EC598;
  if (!qword_1E97EC598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC598);
  }
  return result;
}

unint64_t sub_1A9590224()
{
  unint64_t result = qword_1EB6DB6C0;
  if (!qword_1EB6DB6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB6C0);
  }
  return result;
}

unint64_t sub_1A9590274()
{
  unint64_t result = qword_1EB6DB6B8;
  if (!qword_1EB6DB6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB6B8);
  }
  return result;
}

uint64_t AirQualityScaleAqiGradient.stops.getter()
{
  return sub_1A9631510();
}

uint64_t AirQualityScaleAqiGradient.stops.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unsigned int v1 = a1;
  return result;
}

uint64_t (*AirQualityScaleAqiGradient.stops.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiGradient.init(stops:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A959031C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A959039C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A959031C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A95903C8(uint64_t a1)
{
  unint64_t v2 = sub_1A946C4F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9590404(uint64_t a1)
{
  unint64_t v2 = sub_1A946C4F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AirQualityScaleAqiGradient.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE60);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_18();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A946C4F4();
  sub_1A9632970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE28);
  sub_1A959055C();
  sub_1A9632720();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

unint64_t sub_1A959055C()
{
  unint64_t result = qword_1EB6DBE30;
  if (!qword_1EB6DBE30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DBE28);
    sub_1A95905D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE30);
  }
  return result;
}

unint64_t sub_1A95905D0()
{
  unint64_t result = qword_1EB6DBE08;
  if (!qword_1EB6DBE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE08);
  }
  return result;
}

uint64_t sub_1A959061C(void *a1)
{
  return AirQualityScaleAqiGradient.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for AirQualityScaleAqiGradient(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1A9631510();
  return a1;
}

uint64_t destroy for Placement()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AirQualityScaleAqiGradient(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AirQualityScaleAqiGradient(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AirQualityScaleAqiGradient()
{
  return &type metadata for AirQualityScaleAqiGradient;
}

unsigned char *storeEnumTagSinglePayload for AirQualityScaleAqiGradient.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A9590788);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A95907B4()
{
  unint64_t result = qword_1E97EC5A0;
  if (!qword_1E97EC5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5A0);
  }
  return result;
}

double static CubicInterpolationMath.cubicInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v19 = sub_1A9590CA8(a1, a2, a3, a4, a5, a6, a7, a8);
  return v22 + (a9 - a3) / (a5 - a3) * (v21 + (a9 - a3) / (a5 - a3) * (v20 + (a9 - a3) / (a5 - a3) * v19));
}

void static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v23 = sub_1A9590D64(a5, a6, a1, a2, a3, a4);
  double v24 = a3 - a1;
  double v25 = v23;
  if (a3 - a1 != 0.0) {
    double v25 = ((a4 - a2) * 3.0 / v24 - v23) * 0.5;
  }
  if (a1 > a3)
  {
    __break(1u);
  }
  else
  {
    if (a1 <= a9 && a9 < a3)
    {
      double v31 = v24 / 3.0 + a1;
      double v32 = v24 / 3.0 * v25 + a2;
      double v33 = a3 - v24 / 3.0;
      double v34 = a4 - v24 / 3.0 * v23;
      double v35 = (a9 - a1) / v24;
      double v36 = a1;
      double v37 = a2;
      double v38 = a3;
LABEL_18:
      sub_1A9590DEC(v35, v36, v37, v31, v32, v33, v34, v38);
      return;
    }
    double v27 = sub_1A9590D64(a7, a8, a3, a4, a5, a6);
    if (a3 <= a5)
    {
      if (a3 <= a9 && a9 < a5)
      {
        double v39 = (a5 - a3) / 3.0;
        double v31 = v39 + a3;
        double v32 = v39 * v23 + a4;
        double v33 = a5 - v39;
        double v34 = a6 - v39 * v27;
        double v35 = (a9 - a3) / (a5 - a3);
        double v36 = a3;
        double v37 = a4;
        double v38 = a5;
      }
      else
      {
        double v29 = a7 - a5;
        double v30 = v27;
        if (a7 - a5 != 0.0) {
          double v30 = ((a8 - a6) * 3.0 / v29 - v27) * 0.5;
        }
        double v31 = v29 / 3.0 + a5;
        double v32 = v29 / 3.0 * v27 + a6;
        double v33 = a7 - v29 / 3.0;
        double v34 = a8 - v29 / 3.0 * v30;
        double v35 = (a9 - a5) / v29;
        double v36 = a5;
        double v37 = a6;
        double v38 = a7;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
}

void static CubicInterpolationMath.cubicExtrema(ax:ay:bx:by:cx:cy:dx:dy:x1:x2:useMonotone:)(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>)
{
  if (a2) {
    a1 = a9;
  }
  if (a4) {
    a3 = a11;
  }
  double v25 = sub_1A9590CA8(a7, a8, a9, a10, a11, a12, a13, a14);
  double v26 = (a1 - a9) / (a11 - a9);
  double v27 = (a3 - a9) / (a11 - a9);
  if (v24 + v27 * (v23 + v27 * (v22 + v27 * v25)) >= v24 + v26 * (v23 + v26 * (v22 + v26 * v25))) {
    double v28 = v24 + v26 * (v23 + v26 * (v22 + v26 * v25));
  }
  else {
    double v28 = v24 + v27 * (v23 + v27 * (v22 + v27 * v25));
  }
  if (v25 == 0.0)
  {
    double v29 = -v23 / (v22 + v22);
    if (v26 >= v29 || v29 >= v27) {
      goto LABEL_33;
    }
    double v31 = v22 * v29;
  }
  else
  {
    double v32 = v25 * 3.0;
    double v33 = v22 * v22 - v23 * (v25 * 3.0);
    if (v33 <= 0.0) {
      goto LABEL_33;
    }
    double v34 = sqrt(v33);
    double v35 = (-v22 - v34) / v32;
    double v29 = (v34 - v22) / v32;
    BOOL v36 = v26 < v35 && v35 < v27;
    if (v36 && v24 + v35 * (v23 + v35 * (v22 + v25 * v35)) < v28) {
      double v28 = v24 + v35 * (v23 + v35 * (v22 + v25 * v35));
    }
    if (v26 >= v29 || v29 >= v27) {
      goto LABEL_33;
    }
    double v31 = v29 * (v22 + v25 * v29);
  }
  if (v24 + v29 * (v23 + v31) < v28)
  {
    OUTLINED_FUNCTION_0_29();
    uint64_t v42 = v41;
    double v44 = v43;
    goto LABEL_34;
  }
LABEL_33:
  OUTLINED_FUNCTION_0_29();
LABEL_34:
  double v45 = v44 * v39 + (1.0 - v44) * a9;
  double v46 = v40 * v39 + (1.0 - v40) * a9;
  if (a5)
  {
    double v48 = v39;
    double v50 = v44 * v39 + (1.0 - v44) * a9;
    double v51 = v44;
    double v52 = v40;
    static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(a7, a8, a9, a3, v39, a10, a1, a12, v50);
    uint64_t v49 = v47;
    static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(a7, a8, a9, a3, v48, a10, a1, a12, v46);
    uint64_t v42 = v49;
    double v45 = v50;
    double v44 = v51;
    double v40 = v52;
  }
  *(double *)a6 = v40;
  *(double *)(a6 + 8) = v46;
  *(void *)(a6 + 16) = v38;
  *(double *)(a6 + 24) = v44;
  *(double *)(a6 + 32) = v45;
  *(void *)(a6 + 40) = v42;
}

double sub_1A9590CA8(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = a6 - a4;
  double v9 = 0.0;
  if (((~*(void *)&a1 & 0x7FF0000000000000) != 0 || (*(void *)&a1 & 0xFFFFFFFFFFFFFLL) == 0)
    && ((~*(void *)&a2 & 0x7FF0000000000000) != 0 || (*(void *)&a2 & 0xFFFFFFFFFFFFFLL) == 0))
  {
    double v9 = ((a4 - a2) * (a5 - a3) / (a3 - a1) - v8) * 0.5;
  }
  double v10 = 0.0;
  if (((~*(void *)&a7 & 0x7FF0000000000000) != 0 || (*(void *)&a7 & 0xFFFFFFFFFFFFFLL) == 0)
    && ((~*(void *)&a8 & 0x7FF0000000000000) != 0 || (*(void *)&a8 & 0xFFFFFFFFFFFFFLL) == 0))
  {
    double v10 = ((a5 - a3) * (a8 - a6) / (a7 - a5) - v8) * 0.5;
  }
  return v9 + v10;
}

double sub_1A9590D64(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6 = a5 - a3;
  if (v6 == 0.0) {
    double v7 = 0.0;
  }
  else {
    double v7 = v6;
  }
  double v8 = a1 - a5;
  double v9 = (a6 - a4) / v7;
  if (v8 == 0.0) {
    double v10 = 0.0;
  }
  else {
    double v10 = v8;
  }
  double v11 = (a2 - a6) / v10;
  double v12 = 1.0;
  if (v9 >= 0.0) {
    double v13 = 1.0;
  }
  else {
    double v13 = -1.0;
  }
  if (v11 < 0.0) {
    double v12 = -1.0;
  }
  double v14 = (v8 * v9 + v6 * v11) / (v6 + v8);
  double v15 = fabs(v9);
  double v16 = fabs(v11);
  if (v16 >= v15) {
    double v16 = v15;
  }
  double v17 = fabs(v14) * 0.5;
  if (v17 >= v16) {
    double v17 = v16;
  }
  return v17 * (v12 + v13);
}

double sub_1A9590DEC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return (3.0 - a1 * 3.0) * a1 * a1 * a6
       + (((3.0 - a1) * a1 + -3.0) * a1 + 1.0) * a2
       + ((a1 * 3.0 + -6.0) * a1 + 3.0) * a1 * a4
       + a1 * a1 * a1 * a8;
}

ValueMetadata *type metadata accessor for CubicInterpolationMath()
{
  return &type metadata for CubicInterpolationMath;
}

uint64_t static CurrentWeatherDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aCurrentweather_9;
  sub_1A9631510();
  return v0;
}

uint64_t static CurrentWeatherDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aCurrentweather_9 = a1;
  *(void *)&aCurrentweather_9[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CurrentWeatherDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A9590F60()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD3E0 = 0x2E312E312E30;
  qword_1EB6DD3E8 = 0xE600000000000000;
  return result;
}

uint64_t static CurrentWeatherDescriptor.version.getter()
{
  if (qword_1EB6DD3F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD3E0;
  sub_1A9631510();
  return v0;
}

uint64_t static CurrentWeatherDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD3F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD3E0 = a1;
  qword_1EB6DD3E8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CurrentWeatherDescriptor.version.modify())()
{
  if (qword_1EB6DD3F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for CurrentWeatherDescriptor()
{
  return &type metadata for CurrentWeatherDescriptor;
}

uint64_t WDSAuthenticator.__allocating_init(signer:)(uint64_t a1)
{
  return sub_1A946D6A4(a1, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))sub_1A9591850);
}

void *WDSAuthenticator.__allocating_init(signatureRoundingInterval:)(uint64_t a1)
{
  unint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = type metadata accessor for WDSHMACSigner();
  swift_allocObject();
  uint64_t v4 = WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  v2[5] = v3;
  v2[6] = &protocol witness table for WDSHMACSigner;
  v2[2] = v4;
  return v2;
}

void *WDSAuthenticator.init(signatureRoundingInterval:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WDSHMACSigner();
  swift_allocObject();
  uint64_t v5 = WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  v2[5] = v4;
  v2[6] = &protocol witness table for WDSHMACSigner;
  v2[2] = v5;
  return v2;
}

uint64_t WDSAuthenticator.createSignature(with:)(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t WDSAuthenticator.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t WDSAuthenticator.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t WDSAuthenticator.sign(request:session:)()
{
  return sub_1A9631750();
}

void sub_1A959137C(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v47 = a6;
  uint64_t v43 = a2;
  double v44 = a1;
  uint64_t v8 = sub_1A962E290();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  uint64_t v46 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = (int *)type metadata accessor for WDSAuthenticationContext();
  MEMORY[0x1F4188790](v11);
  double v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEAB0);
  MEMORY[0x1F4188790](v14 - 8);
  double v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A962E5F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  double v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A962E250();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    sub_1A952A0C8((uint64_t)v16);
    sub_1A95919A8();
    double v21 = (void *)swift_allocError();
    *double v22 = 3;
    a3();
  }
  else
  {
    uint64_t v41 = a3;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v23 = sub_1A962E1F0();
    if (v24)
    {
      uint64_t v25 = v23;
      uint64_t v26 = v24;
      sub_1A962E800();
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(&v13[v11[6]], v20, v17);
      *(void *)double v13 = 0xD00000000000002CLL;
      *((void *)v13 + 1) = 0x80000001A96460C0;
      double v27 = (uint64_t *)&v13[v11[7]];
      *double v27 = v25;
      v27[1] = v26;
      double v28 = &v13[v11[8]];
      *(void *)double v28 = 0x79654B697061;
      *((void *)v28 + 1) = 0xE600000000000000;
      uint64_t v29 = v47[5];
      uint64_t v30 = v47[6];
      __swift_project_boxed_opaque_existential_1(v47 + 2, v29);
      (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v30 + 8))(&v48, v13, v29, v30);
      double v32 = v49;
      uint64_t v40 = v48;
      uint64_t v41 = v49;
      uint64_t v33 = v50;
      double v34 = v51;
      uint64_t v47 = v51;
      uint64_t v35 = v53;
      uint64_t v39 = v52;
      BOOL v36 = v42;
      uint64_t v37 = a5;
      uint64_t v38 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v42, v37, v45);
      uint64_t v48 = v40;
      uint64_t v49 = v32;
      uint64_t v50 = v33;
      double v51 = v34;
      uint64_t v52 = v39;
      uint64_t v53 = v35;
      WDSSignature.header.getter();
      sub_1A962E260();
      swift_bridgeObjectRelease();
      v44(v36);
      swift_bridgeObjectRelease();
      sub_1A9466028(v33, (unint64_t)v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v38);
      sub_1A95919F4((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return;
    }
    sub_1A95919A8();
    double v21 = (void *)swift_allocError();
    *double v31 = 2;
    v41();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_1A959182C()
{
  return WDSAuthenticator.sign(request:session:)();
}

uint64_t *sub_1A9591850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  double v11 = sub_1A946D61C((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

void sub_1A9591960(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1A959137C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t method lookup function for WDSAuthenticator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSAuthenticator);
}

uint64_t dispatch thunk of WDSAuthenticator.__allocating_init(signer:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WDSAuthenticator.__allocating_init(signatureRoundingInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1A95919A8()
{
  unint64_t result = qword_1E97EC5B8;
  if (!qword_1E97EC5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5B8);
  }
  return result;
}

uint64_t sub_1A95919F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WDSAuthenticationContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WDSAuthenticator.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9591B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSAuthenticator.Error()
{
  return &type metadata for WDSAuthenticator.Error;
}

unint64_t sub_1A9591B58()
{
  unint64_t result = qword_1E97EC5C0;
  if (!qword_1E97EC5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5C0);
  }
  return result;
}

uint64_t static Domain.weatherInternal.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB6DEAF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A962EB00();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6DEA78);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t NetworkMonitor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  NetworkMonitor.init()();
  return v0;
}

uint64_t NetworkMonitor.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t NetworkMonitor.__deallocating_deinit()
{
  NetworkMonitor.deinit();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t dispatch thunk of NetworkMonitorType.log(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for NetworkMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkMonitor);
}

uint64_t dispatch thunk of NetworkMonitor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t Article.init(id:supportedStorefronts:locale:headlineOverride:phenomena:alertIds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t Article.id.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t Article.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Article.id.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.supportedStorefronts.getter()
{
  return sub_1A9631510();
}

uint64_t Article.supportedStorefronts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Article.supportedStorefronts.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.locale.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1A9631510();
  return v1;
}

uint64_t Article.locale.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Article.locale.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.headlineOverride.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1A9631510();
  return v1;
}

uint64_t Article.headlineOverride.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Article.headlineOverride.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.phenomena.getter()
{
  return sub_1A9631510();
}

uint64_t Article.phenomena.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*Article.phenomena.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.alertIds.getter()
{
  return sub_1A9631510();
}

uint64_t Article.alertIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Article.alertIds.modify())(void)
{
  return nullsub_1;
}

uint64_t Article.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9D0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9592924();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v6 = sub_1A9632640();
    uint64_t v8 = v7;
    LOBYTE(v20) = 1;
    LOBYTE(v18) = 2;
    uint64_t v17 = sub_1A96325C0();
    sub_1A96325D0();
    sub_1A96325D0();
    uint64_t v9 = sub_1A96325E0();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (v9) {
      uint64_t v10 = v9;
    }
    uint64_t v16 = v10;
    sub_1A962E850();
    sub_1A9555C28(&qword_1EB6DAF88);
    uint64_t v11 = sub_1A96325E0();
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = OUTLINED_FUNCTION_1_39();
    v14(v13);
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v17;
    a2[3] = v20;
    a2[4] = v21;
    a2[5] = v18;
    a2[6] = v19;
    a2[7] = v16;
    a2[8] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A959229C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A9648580 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001A96485A0 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656D6F6E656870 && a2 == 0xE900000000000061;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x7364497472656C61 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v9 = sub_1A96327D0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

unint64_t sub_1A95924F0(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6E656D6F6E656870;
      break;
    case 5:
      unint64_t result = 0x7364497472656C61;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A95925BC()
{
  return sub_1A95924F0(*v0);
}

uint64_t sub_1A95925C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A959229C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95925EC(uint64_t a1)
{
  unint64_t v2 = sub_1A9592924();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9592628(uint64_t a1)
{
  unint64_t v2 = sub_1A9592924();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Article.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9F0);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v9;
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v19 = v1[6];
  uint64_t v20 = v10;
  uint64_t v17 = v1[7];
  uint64_t v18 = v11;
  uint64_t v16 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9592924();
  sub_1A9632970();
  LOBYTE(v25) = 0;
  uint64_t v12 = v23;
  sub_1A9632730();
  if (!v12)
  {
    uint64_t v25 = v22;
    char v24 = 1;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE268);
    sub_1A9592970();
    OUTLINED_FUNCTION_2_34();
    sub_1A9632770();
    uint64_t v23 = v13;
    LOBYTE(v25) = 2;
    sub_1A96326D0();
    LOBYTE(v25) = 3;
    sub_1A96326D0();
    uint64_t v25 = v17;
    char v24 = 4;
    OUTLINED_FUNCTION_2_34();
    sub_1A9632770();
    uint64_t v25 = v16;
    char v24 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC5D8);
    sub_1A95929DC();
    OUTLINED_FUNCTION_2_34();
    sub_1A9632770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1A95928C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Article.init(from:)(a1, a2);
}

uint64_t sub_1A95928DC(void *a1)
{
  return Article.encode(to:)(a1);
}

uint64_t sub_1A95928F4@<X0>(uint64_t *a1@<X8>)
{
  return static Article.read(from:)(a1);
}

uint64_t sub_1A959290C()
{
  return Article.write(to:)();
}

unint64_t sub_1A9592924()
{
  unint64_t result = qword_1EB6DA8D8;
  if (!qword_1EB6DA8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8D8);
  }
  return result;
}

unint64_t sub_1A9592970()
{
  unint64_t result = qword_1EB6DA9B8;
  if (!qword_1EB6DA9B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DE268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA9B8);
  }
  return result;
}

unint64_t sub_1A95929DC()
{
  unint64_t result = qword_1E97EC5E0;
  if (!qword_1E97EC5E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97EC5D8);
    sub_1A9555C28(&qword_1EB6DAF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5E0);
  }
  return result;
}

uint64_t destroy for Article()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Article(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

void *assignWithCopy for Article(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for Article(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Article(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Article(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Article()
{
  return &type metadata for Article;
}

unsigned char *storeEnumTagSinglePayload for Article.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9592E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Article.CodingKeys()
{
  return &type metadata for Article.CodingKeys;
}

unint64_t sub_1A9592E60()
{
  unint64_t result = qword_1E97EC5E8;
  if (!qword_1E97EC5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5E8);
  }
  return result;
}

unint64_t sub_1A9592EB0()
{
  unint64_t result = qword_1EB6DA8E8;
  if (!qword_1EB6DA8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8E8);
  }
  return result;
}

unint64_t sub_1A9592F00()
{
  unint64_t result = qword_1EB6DA8E0;
  if (!qword_1EB6DA8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8E0);
  }
  return result;
}

WeatherDaemon::WeatherDataRequest_optional __swiftcall WeatherDataRequest.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v1 >= 0xE) {
    return (WeatherDaemon::WeatherDataRequest_optional)14;
  }
  else {
    return (WeatherDaemon::WeatherDataRequest_optional)v1;
  }
}

uint64_t sub_1A9592FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950C56C(*a1, *a2);
}

unint64_t sub_1A9592FE0()
{
  unint64_t result = qword_1E97EC5F0;
  if (!qword_1E97EC5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5F0);
  }
  return result;
}

uint64_t sub_1A959302C()
{
  return sub_1A95C9388(*v0);
}

uint64_t sub_1A9593034(uint64_t a1)
{
  return sub_1A94AD004(a1, *v1);
}

uint64_t sub_1A959303C()
{
  return sub_1A94AD708();
}

WeatherDaemon::WeatherDataRequest_optional sub_1A9593044@<W0>(Swift::String *a1@<X0>, WeatherDaemon::WeatherDataRequest_optional *a2@<X8>)
{
  result.value = WeatherDataRequest.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t sub_1A9593074@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = WeatherDataRequest.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95930A0()
{
  return sub_1A9632000();
}

uint64_t sub_1A9593100()
{
  return sub_1A9631FB0();
}

unsigned char *storeEnumTagSinglePayload for WeatherDataRequest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A959321CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

unint64_t sub_1A9593244()
{
  unint64_t result = qword_1E97EC5F8;
  if (!qword_1E97EC5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC5F8);
  }
  return result;
}

uint64_t AirQualityScaleMaxPrefix.maxAqi.getter()
{
  return *(void *)v0;
}

uint64_t AirQualityScaleMaxPrefix.maxAqi.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*AirQualityScaleMaxPrefix.maxAqi.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleMaxPrefix._prefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A9631510();
  return v1;
}

uint64_t AirQualityScaleMaxPrefix._prefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AirQualityScaleMaxPrefix._prefix.modify())(void)
{
  return nullsub_1;
}

WeatherDaemon::AirQualityScaleMaxPrefix::CodingKeys_optional __swiftcall AirQualityScaleMaxPrefix.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

WeatherDaemon::AirQualityScaleMaxPrefix::CodingKeys_optional __swiftcall AirQualityScaleMaxPrefix.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

WeatherDaemon::AirQualityScaleMaxPrefix::CodingKeys_optional __swiftcall AirQualityScaleMaxPrefix.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 2;
  return (WeatherDaemon::AirQualityScaleMaxPrefix::CodingKeys_optional)intValue;
}

uint64_t AirQualityScaleMaxPrefix.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t AirQualityScaleMaxPrefix.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x786966657270;
  }
  else {
    return 0x69714178616DLL;
  }
}

uint64_t AirQualityScaleMaxPrefix.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 0x786966657270;
  }
  else {
    return 0x69714178616DLL;
  }
}

uint64_t sub_1A9593498()
{
  return sub_1A950B1D8();
}

uint64_t sub_1A95934A4()
{
  return sub_1A95C93A0();
}

uint64_t sub_1A95934AC()
{
  return sub_1A94AC314();
}

uint64_t sub_1A95934B4()
{
  return sub_1A94ADE38();
}

WeatherDaemon::AirQualityScaleMaxPrefix::CodingKeys_optional sub_1A95934BC(Swift::String *a1)
{
  return AirQualityScaleMaxPrefix.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A95934C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AirQualityScaleMaxPrefix.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE600000000000000;
  return result;
}

uint64_t sub_1A95934F4()
{
  return AirQualityScaleMaxPrefix.CodingKeys.stringValue.getter();
}

uint64_t sub_1A9593518(uint64_t a1)
{
  unint64_t v2 = sub_1A9593728();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9593554(uint64_t a1)
{
  unint64_t v2 = sub_1A9593728();
  return MEMORY[0x1F41862B0](a1, v2);
}

WeatherDaemon::AirQualityScaleMaxPrefix __swiftcall AirQualityScaleMaxPrefix.init(maxAqi:_prefix:)(Swift::Int_optional maxAqi, Swift::String_optional _prefix)
{
  *(void *)uint64_t v2 = maxAqi.value;
  *(unsigned char *)(v2 + 8) = maxAqi.is_nil;
  *(Swift::String_optional *)(v2 + 16) = _prefix;
  result._prefix = _prefix;
  result.maxAqi = maxAqi;
  return result;
}

uint64_t AirQualityScaleMaxPrefix.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC600);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9593728();
  sub_1A9632950();
  if (!v2)
  {
    LOBYTE(v17) = 0;
    sub_1A96325D0();
    uint64_t v16 = v19;
    char v11 = v20;
    char v21 = 1;
    sub_1A96325D0();
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    *(void *)a2 = v16;
    *(unsigned char *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9593728()
{
  unint64_t result = qword_1E97EC608;
  if (!qword_1E97EC608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC608);
  }
  return result;
}

uint64_t AirQualityScaleMaxPrefix.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC610);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  v12[1] = *(void *)(v1 + 24);
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9593728();
  sub_1A9632970();
  char v14 = 0;
  uint64_t v10 = v12[3];
  sub_1A9632710();
  if (!v10)
  {
    char v13 = 1;
    sub_1A96326D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A95938CC()
{
  unint64_t result = qword_1E97EC618;
  if (!qword_1E97EC618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC618);
  }
  return result;
}

unint64_t sub_1A959391C()
{
  unint64_t result = qword_1E97EC620;
  if (!qword_1E97EC620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC620);
  }
  return result;
}

unint64_t sub_1A959396C()
{
  unint64_t result = qword_1E97EC628;
  if (!qword_1E97EC628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC628);
  }
  return result;
}

uint64_t sub_1A95939B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AirQualityScaleMaxPrefix.init(from:)(a1, a2);
}

uint64_t sub_1A95939D0(void *a1)
{
  return AirQualityScaleMaxPrefix.encode(to:)(a1);
}

uint64_t assignWithCopy for AirQualityScaleMaxPrefix(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirQualityScaleMaxPrefix(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirQualityScaleMaxPrefix(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AirQualityScaleMaxPrefix()
{
  return &type metadata for AirQualityScaleMaxPrefix;
}

unsigned char *storeEnumTagSinglePayload for AirQualityScaleMaxPrefix.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9593BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityScaleMaxPrefix.CodingKeys()
{
  return &type metadata for AirQualityScaleMaxPrefix.CodingKeys;
}

uint64_t News.init(metadata:placements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A943C990(a1, a3);
  uint64_t result = type metadata accessor for News();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t News.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A943F20C(v1, a1);
}

uint64_t News.metadata.setter(uint64_t a1)
{
  return sub_1A947A5CC(a1, v1);
}

uint64_t (*News.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t News.placements.getter()
{
  type metadata accessor for News();
  return sub_1A9631510();
}

uint64_t News.placements.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for News() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*News.placements.modify())(void)
{
  return nullsub_1;
}

uint64_t News.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9C8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9593F1C();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A947854C(&qword_1EB6DCA18);
    sub_1A9632680();
    sub_1A9593F68();
    uint64_t v10 = sub_1A96325C0();
    uint64_t v11 = OUTLINED_FUNCTION_4_11();
    v12(v11);
    sub_1A943C990(v7, a2);
    *(void *)(a2 + *(int *)(type metadata accessor for News() + 20)) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A9593F1C()
{
  unint64_t result = qword_1EB6DA8B0;
  if (!qword_1EB6DA8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8B0);
  }
  return result;
}

unint64_t sub_1A9593F68()
{
  unint64_t result = qword_1EB6DA968;
  if (!qword_1EB6DA968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA968);
  }
  return result;
}

uint64_t sub_1A9593FB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A95940B0(char a1)
{
  if (a1) {
    return 0x6E656D6563616C70;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_1A95940EC()
{
  return sub_1A95940B0(*v0);
}

uint64_t sub_1A95940F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9593FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A959411C(uint64_t a1)
{
  unint64_t v2 = sub_1A9593F1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9594158(uint64_t a1)
{
  unint64_t v2 = sub_1A9593F1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t News.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9E8);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9593F1C();
  sub_1A9632970();
  type metadata accessor for Metadata();
  sub_1A947854C(&qword_1EB6DCA10);
  OUTLINED_FUNCTION_9();
  if (!v1)
  {
    type metadata accessor for News();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9A8);
    sub_1A9594308();
    OUTLINED_FUNCTION_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A9594308()
{
  unint64_t result = qword_1EB6DA9B0;
  if (!qword_1EB6DA9B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DA9A8);
    sub_1A959437C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA9B0);
  }
  return result;
}

unint64_t sub_1A959437C()
{
  unint64_t result = qword_1EB6DA960;
  if (!qword_1EB6DA960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA960);
  }
  return result;
}

uint64_t sub_1A95943C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return News.init(from:)(a1, a2);
}

uint64_t sub_1A95943E0(void *a1)
{
  return News.encode(to:)(a1);
}

uint64_t sub_1A95943F8@<X0>(uint64_t a1@<X8>)
{
  return static News.read(from:)(a1);
}

void sub_1A9594410()
{
}

uint64_t sub_1A9594428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_1A95944B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

unsigned char *storeEnumTagSinglePayload for News.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9594608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for News.CodingKeys()
{
  return &type metadata for News.CodingKeys;
}

unint64_t sub_1A9594644()
{
  unint64_t result = qword_1E97EC630;
  if (!qword_1E97EC630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC630);
  }
  return result;
}

unint64_t sub_1A9594694()
{
  unint64_t result = qword_1EB6DA8C0;
  if (!qword_1EB6DA8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8C0);
  }
  return result;
}

unint64_t sub_1A95946E4()
{
  unint64_t result = qword_1EB6DA8B8;
  if (!qword_1EB6DA8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8B8);
  }
  return result;
}

void sub_1A9594730(uint64_t a1, void *a2)
{
}

id sub_1A9594738()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    id v3 = sub_1A9594790();
    unsigned int v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1A9594790()
{
  uint64_t v0 = sub_1A9631400();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95616D0();
  if (qword_1EB6DB320 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A9631310();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB6DB308);
  uint64_t v5 = sub_1A9631300();
  id v7 = sub_1A95948F0(v5, v6, 4096);
  sub_1A96312F0();
  uint64_t v8 = (void *)sub_1A96313F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v7, sel_setRemoteObjectInterface_, v8);

  return v7;
}

id sub_1A95948F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

uint64_t WeatherDataService.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WeatherDataService.init()();
  return v0;
}

void *WeatherDataService.init()()
{
  uint64_t v1 = sub_1A96312B0();
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_2();
  sub_1A96312A0();
  sub_1A96312D0();
  OUTLINED_FUNCTION_10_0();
  uint64_t v2 = sub_1A96312C0();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v2;
  return v0;
}

uint64_t sub_1A9594A34()
{
  sub_1A9631280();
  uint64_t v1 = *(void *)(v0 + 24);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 24) = v3;
    if (qword_1E97EA658 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_1A96317F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E9802D60);
  swift_retain();
  uint64_t v5 = sub_1A96317D0();
  os_log_type_t v6 = sub_1A9632230();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134349314;
    uint64_t v21 = v8;
    sub_1A9632350();
    swift_release();
    *(_WORD *)(v7 + 12) = 2082;
    if (qword_1EB6DB320 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A9631310();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB6DB308);
    uint64_t v10 = sub_1A9631300();
    sub_1A945C1DC(v10, v11, &v21);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v5, v6, "Increasing connection reference count to %{public}ld for: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v8, -1, -1);
    MEMORY[0x1AD0F7300](v7, -1, -1);
  }
  else
  {

    swift_release();
  }
  if (*(void *)(v0 + 24) == 1)
  {
    uint64_t v12 = sub_1A96317D0();
    os_log_type_t v13 = sub_1A9632230();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)char v14 = 136446210;
      if (qword_1EB6DB320 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1A9631310();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB6DB308);
      uint64_t v17 = sub_1A9631300();
      sub_1A945C1DC(v17, v18, &v21);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v12, v13, "Resuming connection for: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v15, -1, -1);
      MEMORY[0x1AD0F7300](v14, -1, -1);
    }

    id v19 = sub_1A9594738();
    objc_msgSend(v19, sel_resume);
  }
  return sub_1A9631290();
}

uint64_t sub_1A9594DC0()
{
  sub_1A9631280();
  uint64_t v1 = *(void *)(v0 + 24);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 24) = v3;
    if (qword_1E97EA658 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_1A96317F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E9802D60);
  swift_retain();
  uint64_t v5 = sub_1A96317D0();
  os_log_type_t v6 = sub_1A9632230();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134349314;
    uint64_t v21 = v8;
    sub_1A9632350();
    swift_release();
    *(_WORD *)(v7 + 12) = 2082;
    if (qword_1EB6DB320 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A9631310();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB6DB308);
    uint64_t v10 = sub_1A9631300();
    sub_1A945C1DC(v10, v11, &v21);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v5, v6, "Decreasing connection reference count to %{public}ld for: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v8, -1, -1);
    MEMORY[0x1AD0F7300](v7, -1, -1);
  }
  else
  {

    swift_release();
  }
  if (!*(void *)(v0 + 24))
  {
    uint64_t v12 = sub_1A96317D0();
    os_log_type_t v13 = sub_1A9632230();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)char v14 = 136446210;
      if (qword_1EB6DB320 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1A9631310();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB6DB308);
      uint64_t v17 = sub_1A9631300();
      sub_1A945C1DC(v17, v18, &v21);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v12, v13, "Suspending connection for: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v15, -1, -1);
      MEMORY[0x1AD0F7300](v14, -1, -1);
    }

    id v19 = sub_1A9594738();
    objc_msgSend(v19, sel_suspend);
  }
  return sub_1A9631290();
}

uint64_t WeatherDataService.deinit()
{
  swift_release();

  return v0;
}

uint64_t WeatherDataService.__deallocating_deinit()
{
  WeatherDataService.deinit();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t WeatherDataService.perform(requests:for:with:)()
{
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC8F8);
  OUTLINED_FUNCTION_10_0();
  sub_1A9631750();
  uint64_t v0 = (void *)sub_1A9631660();
  uint64_t v2 = OUTLINED_FUNCTION_5_33((uint64_t)v0, v1, (uint64_t)sub_1A9597420);
  swift_release();

  return v2;
}

void sub_1A959524C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_retain();
  sub_1A9594A34();
  id v16 = sub_1A9594738();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  uint64_t v41 = (void (*)(uint64_t))sub_1A959741C;
  uint64_t v42 = (void *)v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_1A9594730;
  uint64_t v40 = &block_descriptor_32;
  unint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v16, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_1A96323B0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC640);
  if (swift_dynamicCast())
  {
    char v20 = (void *)v36;
    sub_1A95119A0(a7, (uint64_t)v14);
    id v21 = objc_allocWithZone((Class)type metadata accessor for WeatherDataProxyRequest());
    sub_1A9631510();
    id v22 = WeatherDataProxyRequest.init(requests:location:options:)();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = sub_1A959732C;
    v23[3] = v15;
    v23[4] = a3;
    v23[5] = a4;
    uint64_t v41 = sub_1A95973A8;
    uint64_t v42 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    uint64_t v39 = sub_1A9595700;
    uint64_t v40 = &block_descriptor_38;
    char v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_performRequestsWith_completion_, v22, v24);
    _Block_release(v24);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    if (qword_1E97EA658 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A96317F0();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E9802D60);
    uint64_t v26 = sub_1A96317D0();
    os_log_type_t v27 = sub_1A9632220();
    if (os_log_type_enabled(v26, v27))
    {
      double v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)double v28 = 136446210;
      if (qword_1EB6DB320 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1A9631310();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EB6DB308);
      uint64_t v31 = sub_1A9631300();
      uint64_t v36 = sub_1A945C1DC(v31, v32, &aBlock);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v26, v27, "Remote object proxy remote interface mismatch for: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v29, -1, -1);
      MEMORY[0x1AD0F7300](v28, -1, -1);
    }

    sub_1A9596C68();
    uint64_t v33 = (void *)swift_allocError();
    void *v34 = 0;
    a3();
  }
}

void sub_1A95956F0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1A959524C(a1, a2, a3, a4, v4[2], v4[3], v4[6]);
}

void sub_1A9595700(uint64_t a1, void *a2)
{
}

uint64_t WeatherDataService.fetchAirQualityScale(named:with:)()
{
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBDD8);
  OUTLINED_FUNCTION_10_0();
  sub_1A9631750();
  uint64_t v0 = (void *)sub_1A9631660();
  uint64_t v2 = OUTLINED_FUNCTION_5_33((uint64_t)v0, v1, (uint64_t)sub_1A9597420);
  swift_release();

  return v2;
}

void sub_1A95957AC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v35[1] = a6;
  uint64_t v36 = a1;
  uint64_t v12 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9594A34();
  id v15 = sub_1A9594738();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v42 = sub_1A9597264;
  uint64_t v43 = (void *)v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1A9594730;
  uint64_t v41 = &block_descriptor_17;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v15, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);

  sub_1A96323B0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC640);
  if (swift_dynamicCast())
  {
    id v19 = (void *)v37;
    sub_1A95119A0(a8, (uint64_t)v14);
    id v20 = objc_allocWithZone((Class)type metadata accessor for AirQualityScaleProxyRequest());
    sub_1A9631510();
    id v21 = AirQualityScaleProxyRequest.init(name:options:)();
    id v22 = (void *)swift_allocObject();
    v22[2] = v36;
    v22[3] = a2;
    v22[4] = a3;
    v22[5] = a4;
    uint64_t v42 = sub_1A9597294;
    uint64_t v43 = v22;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A9595700;
    uint64_t v41 = &block_descriptor_23;
    uint64_t v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_fetchAirQualityScaleWith_completion_, v21, v23);
    _Block_release(v23);
    swift_unknownObjectRelease();
  }
  else
  {
    char v24 = a3;
    if (qword_1E97EA658 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A96317F0();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E9802D60);
    uint64_t v26 = sub_1A96317D0();
    os_log_type_t v27 = sub_1A9632220();
    if (os_log_type_enabled(v26, v27))
    {
      double v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)double v28 = 136446210;
      if (qword_1EB6DB320 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1A9631310();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EB6DB308);
      uint64_t v31 = sub_1A9631300();
      uint64_t v37 = sub_1A945C1DC(v31, v32, &aBlock);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v26, v27, "Remote object proxy remote interface mismatch for: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v29, -1, -1);
      MEMORY[0x1AD0F7300](v28, -1, -1);
    }

    sub_1A9596C68();
    uint64_t v33 = (void *)swift_allocError();
    void *v34 = 0;
    v24();
  }
}

void sub_1A9595C14(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1A95957AC(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

void sub_1A9595C20(uint64_t a1, void (*a2)(unsigned char *), uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A96313A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E97EA658 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1A96317F0();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E9802D60);
  id v15 = sub_1A96317D0();
  os_log_type_t v16 = sub_1A9632230();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v27 = v11;
    uint64_t v28 = a5;
    uint64_t v29 = a4;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v35[0] = v18;
    *(_DWORD *)uint64_t v17 = 136446210;
    if (qword_1EB6DB320 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1A9631310();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB6DB308);
    uint64_t v20 = sub_1A9631300();
    v34[0] = sub_1A945C1DC(v20, v21, v35);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v15, v16, "Received air quality scale completion handler callback for: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v18, -1, -1);
    MEMORY[0x1AD0F7300](v17, -1, -1);

    a4 = v29;
    uint64_t v11 = v27;
  }
  else
  {
  }
  uint64_t v22 = v32;
  sub_1A95972A0(v32 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, (uint64_t)v34);
  sub_1A95972A0((uint64_t)v34, (uint64_t)v35);
  if (sub_1A9597308((uint64_t)v35) == 1)
  {
    sub_1A959714C(v22 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error, (uint64_t)v9);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
    {
      sub_1A95971B4((uint64_t)v9);
      sub_1A9596C68();
      uint64_t v23 = (void *)swift_allocError();
      *char v24 = 1;
      a4();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      sub_1A9597214();
      uint64_t v23 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v25, v13, v10);
      ((void (*)(void *))a4)(v23);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    memcpy(v33, v35, sizeof(v33));
    v31(v33);
  }
}

uint64_t WeatherDataService.fetchAvailableDataSets(for:with:)()
{
  OUTLINED_FUNCTION_0_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA0D0);
  OUTLINED_FUNCTION_10_0();
  sub_1A9631750();
  uint64_t v0 = (void *)sub_1A9631660();
  uint64_t v2 = OUTLINED_FUNCTION_5_33((uint64_t)v0, v1, (uint64_t)sub_1A9596BFC);
  swift_release();

  return v2;
}

void sub_1A95960C8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_retain();
  sub_1A9594A34();
  id v15 = sub_1A9594738();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v40 = sub_1A95970CC;
  uint64_t v41 = (void *)v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_1A9594730;
  uint64_t v39 = &block_descriptor_2;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v15, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);

  sub_1A96323B0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC640);
  if (swift_dynamicCast())
  {
    uint64_t v19 = (void *)v35;
    sub_1A95119A0(a6, (uint64_t)v13);
    id v20 = objc_allocWithZone((Class)type metadata accessor for AvailabilityProxyRequest());
    id v21 = AvailabilityProxyRequest.init(location:options:)();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = sub_1A95973F0;
    v22[3] = v14;
    v22[4] = a3;
    v22[5] = a4;
    uint64_t v40 = sub_1A9597114;
    uint64_t v41 = v22;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1A9595700;
    uint64_t v39 = &block_descriptor_11_0;
    uint64_t v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_fetchAvailableDataSetsWith_completion_, v21, v23);
    _Block_release(v23);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    if (qword_1E97EA658 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A96317F0();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E9802D60);
    uint64_t v25 = sub_1A96317D0();
    os_log_type_t v26 = sub_1A9632220();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t aBlock = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      if (qword_1EB6DB320 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1A9631310();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EB6DB308);
      uint64_t v30 = sub_1A9631300();
      uint64_t v35 = sub_1A945C1DC(v30, v31, &aBlock);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9410000, v25, v26, "Remote object proxy remote interface mismatch for: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v28, -1, -1);
      MEMORY[0x1AD0F7300](v27, -1, -1);
    }

    sub_1A9596C68();
    uint64_t v32 = (void *)swift_allocError();
    *uint64_t v33 = 0;
    a3();
  }
}

void sub_1A9596560(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1A95960C8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 40));
}

void sub_1A9596570(void *a1, void (*a2)(void *), int16x8_t a3, uint64_t a4, const char *a5)
{
  if (qword_1E97EA658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A96317F0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E9802D60);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_1A96317D0();
  os_log_type_t v12 = sub_1A9632220();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = vmovn_s16(a3).u32[0];
    if (qword_1EB6DB320 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A9631310();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB6DB308);
    uint64_t v15 = sub_1A9631300();
    sub_1A945C1DC(v15, v16, &v24);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    id v17 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
    uint64_t v18 = sub_1A9631DC0();
    sub_1A945C1DC(v18, v19, &v24);
    sub_1A9632350();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A9410000, v11, v12, a5, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
  }
  sub_1A9596C68();
  id v20 = (void *)OUTLINED_FUNCTION_25();
  *id v21 = a1;
  id v22 = a1;
  a2(v20);
}

void sub_1A9596800(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, const char *a6, void *a7, void *a8)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1A96313A0();
  uint64_t v30 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_2();
  uint64_t v18 = v17 - v16;
  if (qword_1E97EA658 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A96317F0();
  __swift_project_value_buffer(v19, (uint64_t)qword_1E9802D60);
  id v20 = sub_1A96317D0();
  os_log_type_t v21 = sub_1A9632230();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v29 = a8;
    id v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)id v22 = 136446210;
    if (qword_1EB6DB320 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1A9631310();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EB6DB308);
    uint64_t v24 = sub_1A9631300();
    sub_1A945C1DC(v24, v25, &v34);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v20, v21, a6, v22, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();

    a8 = v29;
  }
  else
  {
  }
  if (*(void *)(a1 + *a7))
  {
    a2();
  }
  else
  {
    sub_1A959714C(a1 + *a8, v14);
    if (__swift_getEnumTagSinglePayload(v14, 1, v15) == 1)
    {
      sub_1A95971B4(v14);
      sub_1A9596C68();
      os_log_type_t v26 = (void *)OUTLINED_FUNCTION_25();
      *uint64_t v27 = 1;
      a4();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v18, v14, v15);
      sub_1A9597214();
      os_log_type_t v26 = (void *)OUTLINED_FUNCTION_25();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v28, v18, v15);
      ((void (*)(void *))a4)(v26);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v15);
    }
  }
}

void sub_1A9596B90(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1A9596BFC()
{
  return sub_1A9594DC0();
}

uint64_t WeatherDataService.fetchWeatherAlert(with:for:timezone:)()
{
  sub_1A9596C68();
  uint64_t v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_3_30(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB250);
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_6_27();
}

unint64_t sub_1A9596C68()
{
  unint64_t result = qword_1E97EC638;
  if (!qword_1E97EC638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC638);
  }
  return result;
}

uint64_t WeatherDataService.fetchInstantWeather(spanning:stride:for:with:)()
{
  sub_1A9596C68();
  uint64_t v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_3_30(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB6DA628);
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_6_27();
}

uint64_t WeatherDataService.fetchInstantWeather(at:for:with:)()
{
  sub_1A9596C68();
  uint64_t v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_3_30(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EAC88);
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_6_27();
}

uint64_t WeatherDataService.cached(_:for:with:)()
{
  return 0;
}

uint64_t WeatherDataService.lastServerFetch(for:requests:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A962E810();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

uint64_t WeatherDataService.fetchDailyStatistics(_:for:start:end:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9596E00(a1, a2, a3, a4, &qword_1E97EB1C8);
}

uint64_t WeatherDataService.fetchDailySummary(_:for:start:end:with:)()
{
  sub_1A9596C68();
  uint64_t v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_3_30(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EAA90);
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_6_27();
}

uint64_t WeatherDataService.fetchHourlyStatistics(_:for:start:end:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9596E00(a1, a2, a3, a4, &qword_1E97EB0B8);
}

uint64_t WeatherDataService.fetchMonthlyStatistics(_:for:start:end:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9596E00(a1, a2, a3, a4, &qword_1E97EB028);
}

uint64_t sub_1A9596E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1A9596C68();
  OUTLINED_FUNCTION_25();
  *os_log_type_t v6 = 2;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_10_0();
  return sub_1A9631700();
}

uint64_t sub_1A9596E5C()
{
  return WeatherDataService.perform(requests:for:with:)();
}

uint64_t sub_1A9596E80()
{
  return WeatherDataService.fetchAirQualityScale(named:with:)();
}

uint64_t sub_1A9596EA4()
{
  return WeatherDataService.fetchAvailableDataSets(for:with:)();
}

uint64_t sub_1A9596EC8()
{
  return WeatherDataService.fetchWeatherAlert(with:for:timezone:)();
}

uint64_t sub_1A9596EE0()
{
  return WeatherDataService.fetchInstantWeather(spanning:stride:for:with:)();
}

uint64_t sub_1A9596EF8()
{
  return WeatherDataService.fetchInstantWeather(at:for:with:)();
}

uint64_t sub_1A9596F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return WeatherDataService.fetchDailyStatistics(_:for:start:end:with:)(a1, a2, a3, a4);
}

uint64_t sub_1A9596F28()
{
  return WeatherDataService.fetchDailySummary(_:for:start:end:with:)();
}

uint64_t sub_1A9596F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return WeatherDataService.fetchHourlyStatistics(_:for:start:end:with:)(a1, a2, a3, a4);
}

uint64_t sub_1A9596F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return WeatherDataService.fetchMonthlyStatistics(_:for:start:end:with:)(a1, a2, a3, a4);
}

uint64_t sub_1A9596F70@<X0>(uint64_t a1@<X8>)
{
  return WeatherDataService.lastServerFetch(for:requests:)(a1);
}

uint64_t type metadata accessor for WeatherDataService()
{
  return self;
}

uint64_t method lookup function for WeatherDataService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherDataService);
}

uint64_t dispatch thunk of WeatherDataService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for WeatherDataService.Errors(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WeatherDataService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataService.Errors()
{
  return &type metadata for WeatherDataService.Errors;
}

uint64_t sub_1A9597094()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A95970CC(void *a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002200020002;
  sub_1A9596570(a1, *(void (**)(void *))(v2 + 16), a2, *(void *)(v2 + 24), "Failed to get remote object proxy for: %{public}s with error: %{public}s");
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1A9597114(uint64_t a1)
{
  sub_1A9596800(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), "Received data availability completion handler callback for: %{public}s", &OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_dataSets, &OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error);
}

uint64_t sub_1A959714C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A95971B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A9597214()
{
  unint64_t result = qword_1E97EC648;
  if (!qword_1E97EC648)
  {
    sub_1A96313A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC648);
  }
  return result;
}

void sub_1A9597264(void *a1, int16x8_t a2)
{
  a2.i64[0] = 0x8002000020002;
  sub_1A9596570(a1, *(void (**)(void *))(v2 + 16), a2, *(void *)(v2 + 24), "Failed to get remote object proxy for: %s with error: %{public}s");
}

void sub_1A9597294(uint64_t a1)
{
  sub_1A9595C20(a1, *(void (**)(unsigned char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1A95972A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9597308(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A959732C(uint64_t a1)
{
  int v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1A95973A8(uint64_t a1)
{
  sub_1A9596800(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), "Received weather data completion handler callback for: %{public}s", &OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_responses, &OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error);
}

uint64_t sub_1A9597424(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1A944C5FC(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (unsigned char *)(a1 + 32);
    uint64_t v5 = 16 * *(void *)(v16 + 16);
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_2_3();
    do
    {
      if (*v4) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = v7;
      }
      if (*v4) {
        unint64_t v10 = 0xEB00000000657275;
      }
      else {
        unint64_t v10 = 0xED00006E6F697461;
      }
      uint64_t v16 = v2;
      unint64_t v11 = *(void *)(v2 + 24);
      unint64_t v12 = v6 + 1;
      if (v6 >= v11 >> 1)
      {
        sub_1A944C5FC(v11 > 1, v6 + 1, 1);
        OUTLINED_FUNCTION_2_3();
        OUTLINED_FUNCTION_4_17();
        uint64_t v2 = v16;
      }
      *(void *)(v2 + 16) = v12;
      uint64_t v13 = v2 + v5;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      v5 += 16;
      ++v4;
      unint64_t v6 = v12;
      --v1;
    }
    while (v1);
  }
  uint64_t v16 = v2;
  sub_1A9631510();
  sub_1A9597814(&v16);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE268);
  sub_1A944C79C();
  uint64_t v14 = sub_1A9631D00();
  swift_release();
  return v14;
}

uint64_t StatisticsProduct.rawValue.getter()
{
  if (*v0) {
    return 0x74617265706D6574;
  }
  else {
    return 0x7469706963657270;
  }
}

WeatherDaemon::StatisticsProduct_optional __swiftcall StatisticsProduct.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A9597668(char *a1, char *a2)
{
  return sub_1A950B314(*a1, *a2);
}

unint64_t sub_1A9597678()
{
  unint64_t result = qword_1E97EC650;
  if (!qword_1E97EC650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC650);
  }
  return result;
}

uint64_t sub_1A95976C4()
{
  return sub_1A95C93AC();
}

uint64_t sub_1A95976CC()
{
  return sub_1A94AC3D4();
}

uint64_t sub_1A95976D4()
{
  return sub_1A94ADD40();
}

WeatherDaemon::StatisticsProduct_optional sub_1A95976DC(Swift::String *a1)
{
  return StatisticsProduct.init(rawValue:)(*a1);
}

uint64_t sub_1A95976E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StatisticsProduct.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for StatisticsProduct(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95977DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatisticsProduct()
{
  return &type metadata for StatisticsProduct;
}

uint64_t sub_1A9597814(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A9530164(v2);
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1A9597880(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1A9597880(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A96327A0();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1A9597EE8(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1A948161C(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  int v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1A9597FB0((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A953013C(v98);
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      *uint64_t v90 = v88;
      v90[1] = v89;
      unint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      uint64_t v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      unint64_t v31 = v91 - 1;
      uint64_t v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    unint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    unint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1A96327D0();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_1A96327D0();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_1A96327D0();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      uint64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A9530044(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A9530044((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    uint64_t v33 = (uint64_t *)(v28 + 32 + 16 * v30);
    *uint64_t v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        int v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        uint64_t v64 = *(void *)(v28 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_1A9597FB0((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    *uint64_t v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9597EE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      unint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_1A96327D0();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1A9597FB0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_1A9462CC4(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_1A96327D0() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_1A9462CC4(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_1A96327D0() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_1A9462CC4(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

uint64_t static NextHourForecastUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EC658;
  sub_1A9631510();
  return v0;
}

uint64_t static NextHourForecastUnavailableDescriptor.name.setter(uint64_t a1, void *a2)
{
  qword_1E97EC658 = a1;
  off_1E97EC660 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NextHourForecastUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A9598230()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD918 = 0x2E312E312E30;
  qword_1EB6DD920 = 0xE600000000000000;
  return result;
}

uint64_t static NextHourForecastUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD928 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD918;
  sub_1A9631510();
  return v0;
}

uint64_t static NextHourForecastUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD928 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD918 = a1;
  qword_1EB6DD920 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NextHourForecastUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD928 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for NextHourForecastUnavailableDescriptor()
{
  return &type metadata for NextHourForecastUnavailableDescriptor;
}

id static Locale.preferredUserUnit.getter()
{
  uint64_t v0 = sub_1A962E930();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_28();
  uint64_t v6 = v4 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1A962E8E0();
  id v10 = Locale.temperatureUnit.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v6, v9, v0);
  if (!v10)
  {
    uint64_t v11 = sub_1A962E890();
    unint64_t v12 = self;
    if (v11) {
      id v13 = objc_msgSend(v12, sel_celsius);
    }
    else {
      id v13 = objc_msgSend(v12, sel_fahrenheit);
    }
    id v10 = v13;
  }
  BOOL v14 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v14(v6, v0);
  v14((uint64_t)v9, v0);
  return v10;
}

id Locale.temperatureUnit.getter()
{
  uint64_t v0 = (void *)sub_1A962E8B0();
  id v1 = objc_msgSend(v0, sel_objectForKey_, *MEMORY[0x1E4F1C478]);

  if (v1)
  {
    sub_1A96323B0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1A95987C8((uint64_t)v16, (uint64_t)v17);
  if (!v18)
  {
    sub_1A944C424((uint64_t)v17, &qword_1EB6DAF50);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    if (qword_1E97EA628 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E9802CD0);
    uint64_t v9 = sub_1A96317D0();
    os_log_type_t v10 = sub_1A9632220();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1A9410000, v9, v10, "Failed to read user's temperature unit from the locale", v11, 2u);
      MEMORY[0x1AD0F7300](v11, -1, -1);
    }

    return 0;
  }
  if (v14 == sub_1A9631D60() && v15 == v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = OUTLINED_FUNCTION_1_40();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      if (v14 == sub_1A9631D60() && v15 == v5)
      {
        swift_bridgeObjectRelease_n();
LABEL_27:
        id v13 = objc_msgSend(self, sel_celsius);
        return v13;
      }
      char v7 = OUTLINED_FUNCTION_1_40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_27;
      }
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_fahrenheit);
  return v13;
}

uint64_t sub_1A95987C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAF50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Severity.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    char v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    Severity.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 5) {
      char v9 = 4;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::Severity_optional __swiftcall Severity.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Severity.rawValue.getter()
{
  uint64_t result = 0x656D6572747865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657265766573;
      break;
    case 2:
      uint64_t result = 0x6574617265646F6DLL;
      break;
    case 3:
      uint64_t result = 0x726F6E696DLL;
      break;
    case 4:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95989F8(unsigned __int8 *a1, char *a2)
{
  return sub_1A950ADF0(*a1, *a2);
}

unint64_t sub_1A9598A08()
{
  unint64_t result = qword_1E97EC668;
  if (!qword_1E97EC668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E97EC668);
  }
  return result;
}

uint64_t sub_1A9598A54()
{
  return sub_1A95C93B8(*v0);
}

uint64_t sub_1A9598A5C()
{
  return sub_1A94AC0C0();
}

uint64_t sub_1A9598A64()
{
  return sub_1A94ADFE4();
}

WeatherDaemon::Severity_optional sub_1A9598A6C(Swift::String *a1)
{
  return Severity.init(rawValue:)(*a1);
}

uint64_t sub_1A9598A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Severity.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9598AA0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Severity.init(from:)(a1, a2);
}

uint64_t sub_1A9598AB8()
{
  return sub_1A9631FB0();
}

void sub_1A9598B08(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A9598B20()
{
  return Severity.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for Severity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9598C04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Severity()
{
  return &type metadata for Severity;
}

unint64_t sub_1A9598C3C()
{
  unint64_t result = qword_1EB6DB038;
  if (!qword_1EB6DB038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB038);
  }
  return result;
}

uint64_t sub_1A9598C88(uint64_t a1)
{
  return sub_1A946A3EC(a1, 0x6C7070612E6D6F63, 0xEA00000000002E65, &byte_1EB6DEA68);
}

uint64_t static NSBundle.isFirstPartyProcess.getter()
{
  return sub_1A9426F70(&qword_1EB6DEA70, (unsigned __int8 *)&byte_1EB6DEA68);
}

uint64_t sub_1A9598CD0(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_31(a1, 21, 0x80000001A96477E0, &byte_1EB6DB232);
}

uint64_t static NSBundle.isNanoWeatherProcess.getter()
{
  return sub_1A9426F70(&qword_1EB6DC338, (unsigned __int8 *)&byte_1EB6DB232);
}

uint64_t sub_1A9598D14()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  uint64_t result = sub_1A9433030(v0);
  if (v2)
  {
    if (result == 0xD000000000000011 && v2 == 0x80000001A96467A0) {
      char v3 = 1;
    }
    else {
      char v3 = sub_1A96327D0();
    }
    uint64_t result = swift_bridgeObjectRelease();
    char v4 = v3 & 1;
  }
  else
  {
    char v4 = 0;
  }
  byte_1E97EC674 = v4;
  return result;
}

uint64_t static NSBundle.isWeatherAppProcess.getter()
{
  return sub_1A9426F70(&qword_1E97EA5E8, (unsigned __int8 *)&byte_1E97EC674);
}

id sub_1A9598DEC()
{
  type metadata accessor for BundleLookup();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1E97EC678 = (uint64_t)result;
  return result;
}

id static NSBundle.weatherDaemon.getter()
{
  if (qword_1E97EA5F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  id v0 = (void *)qword_1E97EC678;
  return v0;
}

void static NSBundle.weatherDaemon.setter(uint64_t a1)
{
  if (qword_1E97EA5F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_35();
  uint64_t v2 = (void *)qword_1E97EC678;
  qword_1E97EC678 = a1;
}

uint64_t (*static NSBundle.weatherDaemon.modify())()
{
  if (qword_1E97EA5F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j__swift_endAccess;
}

uint64_t sub_1A9598FA0()
{
  uint64_t v0 = sub_1A962E5F0();
  __swift_allocate_value_buffer(v0, qword_1E97EC680);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E97EC680);
  return sub_1A9598FEC();
}

uint64_t sub_1A9598FEC()
{
  uint64_t v0 = sub_1A962E5F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v9 - v5;
  sub_1A962E550();
  sub_1A962E580();
  char v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  sub_1A962E590();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_1A9599144()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEAB0);
  __swift_allocate_value_buffer(v0, qword_1E97EC698);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E97EC698);
  return sub_1A9599194(v1);
}

uint64_t sub_1A9599194@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainBundle);
  id v3 = sub_1A9599728(0xD000000000000015, 0x80000001A9648780, 0x656C646E7562, 0xE600000000000000, v2);

  if (v3)
  {
    sub_1A962E5A0();

    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = sub_1A962E5F0();
  return __swift_storeEnumTagSinglePayload(a1, v4, 1, v5);
}

id sub_1A9599260()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEAB0);
  MEMORY[0x1F4188790](v0);
  id v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A962E5F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E97EA600 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1E97EC698);
  sub_1A9599680(v7, (uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    if (qword_1E97EA5F8 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v3, (uint64_t)qword_1E97EC680);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
    sub_1A952A0C8((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  sub_1A95996E8();
  id v9 = sub_1A959946C((uint64_t)v6);
  id result = objc_msgSend(v9, sel_load);
  qword_1E97EC6B0 = (uint64_t)v9;
  return result;
}

id sub_1A959946C(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1A962E560();
  id v4 = objc_msgSend(v2, sel_initWithURL_, v3);

  uint64_t v5 = sub_1A962E5F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t static NSBundle.weatherInternalExtras.getter()
{
  if (qword_1E97EA608 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EC6B0;
  id v1 = (id)qword_1E97EC6B0;
  return v0;
}

void static NSBundle.weatherInternalExtras.setter(uint64_t a1)
{
  if (qword_1E97EA608 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_35();
  id v2 = (void *)qword_1E97EC6B0;
  qword_1E97EC6B0 = a1;
}

uint64_t (*static NSBundle.weatherInternalExtras.modify())()
{
  if (qword_1E97EA608 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

uint64_t type metadata accessor for BundleLookup()
{
  return self;
}

uint64_t sub_1A9599680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A95996E8()
{
  unint64_t result = qword_1E97EC6B8;
  if (!qword_1E97EC6B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E97EC6B8);
  }
  return result;
}

id sub_1A9599728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unsigned int v6 = (void *)sub_1A9631D40();
  uint64_t v7 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

uint64_t HourTide.write(to:)()
{
  uint64_t result = sub_1A962E6C0();
  if (!v0)
  {
    type metadata accessor for HourTide();
    return sub_1A96315E0();
  }
  return result;
}

uint64_t static HourTide.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_36();
  uint64_t result = sub_1A962E6B0();
  if (!v1)
  {
    sub_1A96315D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, v2, v4);
    uint64_t result = type metadata accessor for HourTide();
    *(void *)(a1 + *(int *)(result + 20)) = v9;
  }
  return result;
}

uint64_t sub_1A9599928@<X0>(uint64_t a1@<X8>)
{
  return static HourTide.read(from:)(a1);
}

uint64_t sub_1A9599940()
{
  return HourTide.write(to:)();
}

void MarineForecast.write(to:)()
{
  type metadata accessor for MarineHourForecast();
  sub_1A959AB58(&qword_1E97EC6C0, (void (*)(uint64_t))type metadata accessor for MarineHourForecast);
  sub_1A959AB58(&qword_1E97EC6C8, (void (*)(uint64_t))type metadata accessor for MarineHourForecast);
  sub_1A9632050();
  if (!v0)
  {
    type metadata accessor for MarineForecast();
    Metadata.write(to:)();
    sub_1A96315E0();
    sub_1A96315E0();
  }
}

uint64_t static MarineForecast.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_6_1();
  type metadata accessor for MarineHourForecast();
  sub_1A959AB58(&qword_1E97EC6C0, (void (*)(uint64_t))type metadata accessor for MarineHourForecast);
  sub_1A959AB58(&qword_1E97EC6C8, (void (*)(uint64_t))type metadata accessor for MarineHourForecast);
  uint64_t result = sub_1A9632040();
  if (!v1)
  {
    uint64_t v6 = result;
    static Metadata.read(from:)();
    sub_1A96315D0();
    sub_1A96315D0();
    *a1 = v6;
    uint64_t v7 = type metadata accessor for MarineForecast();
    uint64_t result = sub_1A943C990(v2, (uint64_t)a1 + *(int *)(v7 + 20));
    id v8 = (uint64_t *)((char *)a1 + *(int *)(v7 + 24));
    *id v8 = v10;
    v8[1] = v9;
  }
  return result;
}

uint64_t sub_1A9599C94@<X0>(uint64_t *a1@<X8>)
{
  return static MarineForecast.read(from:)(a1);
}

void sub_1A9599CAC()
{
}

uint64_t MarineHourForecast.write(to:)()
{
  uint64_t result = sub_1A962E6C0();
  if (!v0)
  {
    type metadata accessor for MarineHourForecast();
    OUTLINED_FUNCTION_3_31();
    OUTLINED_FUNCTION_3_31();
    OUTLINED_FUNCTION_3_31();
    return OUTLINED_FUNCTION_3_31();
  }
  return result;
}

uint64_t Swell.write(to:)()
{
  uint64_t result = sub_1A96315E0();
  if (!v0)
  {
    sub_1A96315E0();
    return sub_1A96315E0();
  }
  return result;
}

uint64_t static MarineHourForecast.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1A962E6B0();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_41();
    uint64_t v10 = v16;
    OUTLINED_FUNCTION_1_41();
    uint64_t v11 = v15[1];
    OUTLINED_FUNCTION_1_41();
    uint64_t v12 = v15[0];
    OUTLINED_FUNCTION_1_41();
    uint64_t v13 = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v8, v3);
    uint64_t result = type metadata accessor for MarineHourForecast();
    uint64_t v14 = (void *)(a1 + *(int *)(result + 20));
    *uint64_t v14 = v10;
    v14[1] = v11;
    v14[2] = v12;
    *(void *)(a1 + *(int *)(result + 24)) = v13;
  }
  return result;
}

uint64_t static Swell.read(from:)@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1A96315D0();
  if (!v1)
  {
    sub_1A96315D0();
    uint64_t result = sub_1A96315D0();
    *a1 = v6;
    a1[1] = v5;
    a1[2] = v4;
  }
  return result;
}

uint64_t sub_1A959A0B0@<X0>(uint64_t a1@<X8>)
{
  return static MarineHourForecast.read(from:)(a1);
}

uint64_t sub_1A959A0C8()
{
  return MarineHourForecast.write(to:)();
}

uint64_t sub_1A959A0E0@<X0>(void *a1@<X8>)
{
  return static Swell.read(from:)(a1);
}

uint64_t sub_1A959A0F8()
{
  return Swell.write(to:)();
}

uint64_t TideEvent.write(to:)()
{
  uint64_t result = sub_1A962E6C0();
  if (!v0)
  {
    type metadata accessor for TideEvent();
    TideEvent.EventType.write(to:)();
    return sub_1A96315E0();
  }
  return result;
}

uint64_t TideEvent.EventType.write(to:)()
{
  return sub_1A96315E0();
}

uint64_t static TideEvent.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_36();
  uint64_t result = sub_1A962E6B0();
  if (!v1)
  {
    char v9 = static TideEvent.EventType.read(from:)();
    sub_1A96315D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, v2, v4);
    uint64_t result = type metadata accessor for TideEvent();
    *(unsigned char *)(a1 + *(int *)(result + 20)) = v9 & 1;
    *(void *)(a1 + *(int *)(result + 24)) = v10;
  }
  return result;
}

uint64_t static TideEvent.EventType.read(from:)()
{
  uint64_t result = sub_1A96315D0();
  if (!v0)
  {
    if (v4 == 1)
    {
      return 0;
    }
    else if (v4 == 2)
    {
      return 1;
    }
    else
    {
      uint64_t v2 = sub_1A9631420();
      sub_1A959AB58(&qword_1E97EC310, MEMORY[0x1E4FAA9F0]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4FAA9E8], v2);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1A959A458@<X0>(uint64_t a1@<X8>)
{
  return static TideEvent.read(from:)(a1);
}

uint64_t sub_1A959A470()
{
  return TideEvent.write(to:)();
}

uint64_t sub_1A959A488@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static TideEvent.EventType.read(from:)();
  if (!v1) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_1A959A4B8()
{
  return TideEvent.EventType.write(to:)();
}

void TideEvents.write(to:)()
{
  type metadata accessor for TideEvent();
  sub_1A959AB58(&qword_1E97EC6D0, (void (*)(uint64_t))type metadata accessor for TideEvent);
  sub_1A959AB58(&qword_1E97EC6D8, (void (*)(uint64_t))type metadata accessor for TideEvent);
  OUTLINED_FUNCTION_5_34();
  if (!v0)
  {
    type metadata accessor for HourTide();
    sub_1A959AB58(&qword_1E97EC6E0, (void (*)(uint64_t))type metadata accessor for HourTide);
    sub_1A959AB58(&qword_1E97EC6E8, (void (*)(uint64_t))type metadata accessor for HourTide);
    OUTLINED_FUNCTION_5_34();
    type metadata accessor for TideEvents();
    Metadata.write(to:)();
    sub_1A96315E0();
    sub_1A96315E0();
  }
}

uint64_t static TideEvents.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for Metadata();
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_6_1();
  type metadata accessor for TideEvent();
  sub_1A959AB58(&qword_1E97EC6D0, (void (*)(uint64_t))type metadata accessor for TideEvent);
  sub_1A959AB58(&qword_1E97EC6D8, (void (*)(uint64_t))type metadata accessor for TideEvent);
  uint64_t result = sub_1A9632040();
  if (!v1)
  {
    uint64_t v6 = result;
    type metadata accessor for HourTide();
    sub_1A959AB58(&qword_1E97EC6E0, (void (*)(uint64_t))type metadata accessor for HourTide);
    sub_1A959AB58(&qword_1E97EC6E8, (void (*)(uint64_t))type metadata accessor for HourTide);
    uint64_t v7 = sub_1A9632040();
    static Metadata.read(from:)();
    sub_1A96315D0();
    sub_1A96315D0();
    *a1 = v6;
    a1[1] = v7;
    uint64_t v8 = type metadata accessor for TideEvents();
    uint64_t result = sub_1A943C990(v2, (uint64_t)a1 + *(int *)(v8 + 24));
    char v9 = (uint64_t *)((char *)a1 + *(int *)(v8 + 28));
    *char v9 = v11;
    v9[1] = v10;
  }
  return result;
}

uint64_t sub_1A959A920@<X0>(uint64_t *a1@<X8>)
{
  return static TideEvents.read(from:)(a1);
}

void sub_1A959A938()
{
}

uint64_t WeatherAlerts.write(to:)()
{
  uint64_t v1 = type metadata accessor for WeatherAlerts();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DADA0);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A959AAF4(v0, (uint64_t)v3);
  sub_1A959AB58(&qword_1EB6DD618, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
  sub_1A959AB58(&qword_1EB6DAF60, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
  sub_1A9631260();
  sub_1A9631250();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1A959AAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherAlerts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A959AB58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static WeatherAlerts.read(from:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DADA0);
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9631440();
  sub_1A959ACF0(&qword_1EB6DAD90);
  sub_1A959ACF0(&qword_1EB6DAD98);
  uint64_t result = sub_1A9631430();
  if (!v0)
  {
    sub_1A9631270();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  return result;
}

uint64_t sub_1A959ACF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DADA0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A959AD38()
{
  return static WeatherAlerts.read(from:)();
}

uint64_t sub_1A959AD50()
{
  return WeatherAlerts.write(to:)();
}

uint64_t HourTide.date.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t HourTide.date.setter(uint64_t a1)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*HourTide.date.modify())(void)
{
  return nullsub_1;
}

double HourTide.height.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for HourTide() + 20));
}

uint64_t type metadata accessor for HourTide()
{
  uint64_t result = qword_1E97EC708;
  if (!qword_1E97EC708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HourTide.height.setter(double a1)
{
  uint64_t result = type metadata accessor for HourTide();
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*HourTide.height.modify())(void)
{
  return nullsub_1;
}

BOOL static HourTide.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1A962E7C0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for HourTide();
  return *(double *)(a1 + *(int *)(v4 + 20)) == *(double *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_1A959AF7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A959B054(char a1)
{
  if (a1) {
    return 0x746867696568;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1A959B080()
{
  return sub_1A959B054(*v0);
}

uint64_t sub_1A959B088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A959AF7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A959B0B0(uint64_t a1)
{
  unint64_t v2 = sub_1A959B298();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A959B0EC(uint64_t a1)
{
  unint64_t v2 = sub_1A959B298();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HourTide.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC6F0);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959B298();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632770();
  if (!v1)
  {
    type metadata accessor for HourTide();
    sub_1A9632750();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A959B298()
{
  unint64_t result = qword_1E97EC6F8;
  if (!qword_1E97EC6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC6F8);
  }
  return result;
}

uint64_t HourTide.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v5;
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC700);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = type metadata accessor for HourTide();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2();
  uint64_t v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959B298();
  sub_1A9632950();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1A947198C(&qword_1EB6DC8D8);
  sub_1A9632680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v14, v8, v22);
  sub_1A9632660();
  uint64_t v16 = v15;
  uint64_t v17 = OUTLINED_FUNCTION_2_37();
  v18(v17);
  *(void *)(v14 + *(int *)(v10 + 20)) = v16;
  sub_1A959B56C(v14, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A959B5D0(v14);
}

uint64_t sub_1A959B56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HourTide();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A959B5D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HourTide();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A959B62C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HourTide.init(from:)(a1, a2);
}

uint64_t sub_1A959B644(void *a1)
{
  return HourTide.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HourTide(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A959B930);
}

uint64_t sub_1A959B930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HourTide(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A959B98C);
}

uint64_t sub_1A959B98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1A959B9D8()
{
  uint64_t result = sub_1A962E810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HourTide.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A959BB3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourTide.CodingKeys()
{
  return &type metadata for HourTide.CodingKeys;
}

unint64_t sub_1A959BB78()
{
  unint64_t result = qword_1E97EC718;
  if (!qword_1E97EC718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC718);
  }
  return result;
}

unint64_t sub_1A959BBC8()
{
  unint64_t result = qword_1E97EC720;
  if (!qword_1E97EC720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC720);
  }
  return result;
}

unint64_t sub_1A959BC18()
{
  unint64_t result = qword_1E97EC728;
  if (!qword_1E97EC728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC728);
  }
  return result;
}

uint64_t Data.urlSafeBase64EncodedString.getter()
{
  sub_1A962E670();
  sub_1A9465524();
  sub_1A9632390();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_32();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_0_32();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TrendDeviation.init(forecastStart:maxTemperatureChange:minTemperatureChange:dayPrecipitationChange:nightPrecipitationChange:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *a2;
  char v9 = *a3;
  char v10 = *a4;
  char v11 = *a5;
  uint64_t v12 = sub_1A962E810();
  __swift_storeEnumTagSinglePayload(a6, 1, 1, v12);
  uint64_t v13 = (int *)type metadata accessor for TrendDeviation();
  uint64_t v14 = v13[5];
  *(unsigned char *)(a6 + v14) = 4;
  uint64_t v15 = v13[6];
  *(unsigned char *)(a6 + v15) = 4;
  uint64_t v16 = v13[7];
  *(unsigned char *)(a6 + v16) = 4;
  uint64_t v17 = v13[8];
  *(unsigned char *)(a6 + v17) = 4;
  uint64_t result = sub_1A94200B4(a1, a6);
  *(unsigned char *)(a6 + v14) = v8;
  *(unsigned char *)(a6 + v15) = v9;
  *(unsigned char *)(a6 + v16) = v10;
  *(unsigned char *)(a6 + v17) = v11;
  return result;
}

uint64_t TrendDeviation.forecastStart.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9412F20(v1, a1);
}

uint64_t TrendDeviation.forecastStart.setter(uint64_t a1)
{
  return sub_1A94200B4(a1, v1);
}

uint64_t (*TrendDeviation.forecastStart.modify())(void)
{
  return nullsub_1;
}

void TrendDeviation.maxTemperatureChange.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_7_24(*(int *)(v0 + 20));
}

uint64_t TrendDeviation.maxTemperatureChange.setter()
{
  uint64_t result = OUTLINED_FUNCTION_6_28();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t (*TrendDeviation.maxTemperatureChange.modify())(void)
{
  return nullsub_1;
}

void TrendDeviation.minTemperatureChange.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_7_24(*(int *)(v0 + 24));
}

uint64_t TrendDeviation.minTemperatureChange.setter()
{
  uint64_t result = OUTLINED_FUNCTION_6_28();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v0;
  return result;
}

uint64_t (*TrendDeviation.minTemperatureChange.modify())(void)
{
  return nullsub_1;
}

void TrendDeviation.dayPrecipitationChange.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_7_24(*(int *)(v0 + 28));
}

uint64_t TrendDeviation.dayPrecipitationChange.setter()
{
  uint64_t result = OUTLINED_FUNCTION_6_28();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v0;
  return result;
}

uint64_t (*TrendDeviation.dayPrecipitationChange.modify())(void)
{
  return nullsub_1;
}

void TrendDeviation.nightPrecipitationChange.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_7_24(*(int *)(v0 + 32));
}

uint64_t TrendDeviation.nightPrecipitationChange.setter()
{
  uint64_t result = OUTLINED_FUNCTION_6_28();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v0;
  return result;
}

uint64_t (*TrendDeviation.nightPrecipitationChange.modify())(void)
{
  return nullsub_1;
}

uint64_t TrendDeviation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = (int *)type metadata accessor for TrendDeviation();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v7 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DB2B0);
  OUTLINED_FUNCTION_1();
  uint64_t v24 = v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959C36C();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v17 = sub_1A962E810();
    sub_1A947198C(&qword_1EB6DC8D8);
    sub_1A96325D0();
    sub_1A959C3B8();
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_2_38();
    __swift_storeEnumTagSinglePayload(v6, 1, 1, v17);
    uint64_t v18 = v25[5];
    *(unsigned char *)(v6 + v18) = 4;
    uint64_t v19 = v25[6];
    *(unsigned char *)(v6 + v19) = 4;
    uint64_t v20 = v25[7];
    *(unsigned char *)(v6 + v20) = 4;
    uint64_t v21 = v25[8];
    *(unsigned char *)(v6 + v21) = 4;
    sub_1A94200B4(v10, v6);
    *(unsigned char *)(v6 + v18) = v29;
    *(unsigned char *)(v6 + v19) = v28;
    *(unsigned char *)(v6 + v20) = v27;
    *(unsigned char *)(v6 + v21) = v26;
    sub_1A959C404(v6, a2);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v16, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A959C36C()
{
  unint64_t result = qword_1EB6DB328;
  if (!qword_1EB6DB328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB328);
  }
  return result;
}

unint64_t sub_1A959C3B8()
{
  unint64_t result = qword_1EB6DB400;
  if (!qword_1EB6DB400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB400);
  }
  return result;
}

uint64_t sub_1A959C404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendDeviation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A959C468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A96487A0 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A96487C0 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A96487E0 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A9648800)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1A959C684(char a1)
{
  unint64_t result = 0x7473616365726F66;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A959C740()
{
  return sub_1A959C684(*v0);
}

uint64_t sub_1A959C748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A959C468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A959C770(uint64_t a1)
{
  unint64_t v2 = sub_1A959C36C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A959C7AC(uint64_t a1)
{
  unint64_t v2 = sub_1A959C36C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TrendDeviation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DB4E8);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959C36C();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632720();
  if (!v1)
  {
    type metadata accessor for TrendDeviation();
    sub_1A959C9F8();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_3_32();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1A959C9F8()
{
  unint64_t result = qword_1EB6DB3F0;
  if (!qword_1EB6DB3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB3F0);
  }
  return result;
}

uint64_t sub_1A959CA44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrendDeviation.init(from:)(a1, a2);
}

uint64_t sub_1A959CA5C(void *a1)
{
  return TrendDeviation.encode(to:)(a1);
}

void sub_1A959CA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  static TrendDeviation.read(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1A959CA8C()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TrendDeviation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  }
  return a1;
}

uint64_t destroy for ForecastMinute(uint64_t a1)
{
  uint64_t v2 = sub_1A962E810();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for TrendDeviation(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v9 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  return a1;
}

void *assignWithCopy for TrendDeviation(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *initializeWithTake for TrendDeviation(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v9 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  return a1;
}

void *assignWithTake for TrendDeviation(void *a1, const void *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendDeviation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A959D16C);
}

uint64_t sub_1A959D16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 4u) {
      int v9 = 4;
    }
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v10 = v9 - 4;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 4u) {
      return v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for TrendDeviation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A959D218);
}

void sub_1A959D218(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  }
}

unsigned char *storeEnumTagSinglePayload for TrendDeviation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A959D370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendDeviation.CodingKeys()
{
  return &type metadata for TrendDeviation.CodingKeys;
}

unint64_t sub_1A959D3AC()
{
  unint64_t result = qword_1E97EC730;
  if (!qword_1E97EC730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC730);
  }
  return result;
}

unint64_t sub_1A959D3FC()
{
  unint64_t result = qword_1EB6DB338;
  if (!qword_1EB6DB338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB338);
  }
  return result;
}

unint64_t sub_1A959D44C()
{
  unint64_t result = qword_1EB6DB330;
  if (!qword_1EB6DB330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB330);
  }
  return result;
}

WeatherDaemon::Units_optional __swiftcall Units.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Units.rawValue.getter()
{
  if (*v0) {
    return 101;
  }
  else {
    return 109;
  }
}

uint64_t sub_1A959D518()
{
  return sub_1A950B0F8();
}

unint64_t sub_1A959D528()
{
  unint64_t result = qword_1E97EC738;
  if (!qword_1E97EC738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC738);
  }
  return result;
}

uint64_t sub_1A959D574()
{
  return sub_1A95C93D0();
}

uint64_t sub_1A959D57C()
{
  return sub_1A94AC27C();
}

uint64_t sub_1A959D584()
{
  return sub_1A94ADF08();
}

WeatherDaemon::Units_optional sub_1A959D58C(Swift::String *a1)
{
  return Units.init(rawValue:)(*a1);
}

uint64_t sub_1A959D598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Units.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_1A959D5C4()
{
  return sub_1A9632000();
}

uint64_t sub_1A959D624()
{
  return sub_1A9631FB0();
}

unsigned char *storeEnumTagSinglePayload for Units(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A959D740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1A959D768()
{
  unint64_t result = qword_1E97EC740;
  if (!qword_1E97EC740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC740);
  }
  return result;
}

BOOL static Coordinate.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double Coordinate.latitude.getter()
{
  return *(double *)v0;
}

void Coordinate.latitude.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*Coordinate.latitude.modify())(void)
{
  return nullsub_1;
}

double Coordinate.longitude.getter()
{
  return *(double *)(v0 + 8);
}

void Coordinate.longitude.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*Coordinate.longitude.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A959D840(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A959D93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A959D840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A959D964(uint64_t a1)
{
  unint64_t v2 = sub_1A959DB1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A959D9A0(uint64_t a1)
{
  unint64_t v2 = sub_1A959DB1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Coordinate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC748);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959DB1C();
  sub_1A9632970();
  v10[15] = 0;
  sub_1A9632750();
  if (!v1)
  {
    v10[14] = 1;
    sub_1A9632750();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A959DB1C()
{
  unint64_t result = qword_1E97EC750;
  if (!qword_1E97EC750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC750);
  }
  return result;
}

uint64_t Coordinate.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC758);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A959DB1C();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A9632660();
    uint64_t v7 = v6;
    sub_1A9632660();
    uint64_t v9 = v8;
    uint64_t v10 = OUTLINED_FUNCTION_1_11();
    v11(v10);
    *a2 = v7;
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A959DCC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Coordinate.init(from:)(a1, a2);
}

uint64_t sub_1A959DCDC(void *a1)
{
  return Coordinate.encode(to:)(a1);
}

uint64_t sub_1A959DCF4()
{
  return static Coordinate.read(from:)();
}

uint64_t sub_1A959DD0C()
{
  return Coordinate.write(to:)();
}

ValueMetadata *type metadata accessor for Coordinate()
{
  return &type metadata for Coordinate;
}

unsigned char *storeEnumTagSinglePayload for Coordinate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A959DE04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Coordinate.CodingKeys()
{
  return &type metadata for Coordinate.CodingKeys;
}

unint64_t sub_1A959DE40()
{
  unint64_t result = qword_1E97EC760;
  if (!qword_1E97EC760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC760);
  }
  return result;
}

unint64_t sub_1A959DE90()
{
  unint64_t result = qword_1E97EC768;
  if (!qword_1E97EC768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC768);
  }
  return result;
}

unint64_t sub_1A959DEE0()
{
  unint64_t result = qword_1E97EC770;
  if (!qword_1E97EC770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC770);
  }
  return result;
}

void sub_1A959DF2C()
{
  qword_1E9802C78 = 0;
  unk_1E9802C80 = 0;
}

id AvailabilityProxyRequest.__allocating_init(location:options:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_1_42());
  return AvailabilityProxyRequest.init(location:options:)();
}

uint64_t static AvailabilityProxyRequest.supportsSecureCoding.getter()
{
  return byte_1E97EC780;
}

uint64_t static AvailabilityProxyRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97EC780 = a1;
  return result;
}

uint64_t (*static AvailabilityProxyRequest.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

double AvailabilityProxyRequest.location.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_location);
}

uint64_t AvailabilityProxyRequest.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A95119A0(v1 + OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_options, a1);
}

id AvailabilityProxyRequest.init(location:options:)()
{
  OUTLINED_FUNCTION_1_42();
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v1[OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_location];
  *(void *)uint64_t v5 = v3;
  *((void *)v5 + 1) = v2;
  sub_1A95119A0(v0, (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_options]);
  v8.receiver = v1;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_1A959E148(v0);
  return v6;
}

uint64_t sub_1A959E148(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataRequestOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Void __swiftcall AvailabilityProxyRequest.encode(with:)(NSCoder with)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_location;
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_location));
  uint64_t v5 = (void *)sub_1A9631D40();
  OUTLINED_FUNCTION_0_33();

  id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v3 + 8));
  uint64_t v7 = (void *)sub_1A9631D40();
  OUTLINED_FUNCTION_0_33();

  sub_1A962E310();
  swift_allocObject();
  sub_1A962E300();
  type metadata accessor for WeatherDataRequestOptions();
  sub_1A959E7D8(&qword_1E97EC790);
  uint64_t v8 = sub_1A962E2F0();
  unint64_t v10 = v9;
  swift_release();
  uint64_t v11 = (void *)sub_1A962E660();
  uint64_t v12 = (void *)sub_1A9631D40();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  sub_1A9466028(v8, v10);
}

id AvailabilityProxyRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AvailabilityProxyRequest.init(coder:)(a1);
}

id AvailabilityProxyRequest.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC798);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9467B44(0, (unint64_t *)&unk_1E97EC7A0);
  unint64_t v10 = v1;
  uint64_t v11 = sub_1A96322D0();
  if (!v11) {
    goto LABEL_7;
  }
  uint64_t v12 = (void *)v11;
  uint64_t v13 = sub_1A96322D0();
  if (!v13)
  {

LABEL_7:
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v14 = (void *)v13;
  objc_msgSend(v12, sel_doubleValue);
  uint64_t v16 = v15;
  objc_msgSend(v14, sel_doubleValue);
  uint64_t v17 = &v10[OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_location];
  *(void *)uint64_t v17 = v16;
  *((void *)v17 + 1) = v18;
  sub_1A9467B44(0, (unint64_t *)&qword_1E97ECAA0);
  uint64_t v19 = sub_1A96322D0();
  if (!v19)
  {

    goto LABEL_7;
  }
  uint64_t v20 = (void *)v19;
  char v26 = (objc_class *)ObjectType;
  uint64_t v21 = sub_1A962E680();
  unint64_t v23 = v22;

  sub_1A962E2E0();
  swift_allocObject();
  sub_1A962E2D0();
  sub_1A959E7D8((unint64_t *)&unk_1E97EC7B0);
  uint64_t v27 = v21;
  unint64_t v28 = v23;
  sub_1A962E2C0();
  swift_release();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  sub_1A959E87C((uint64_t)v6, (uint64_t)v9);
  sub_1A95119A0((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC13WeatherDaemon24AvailabilityProxyRequest_options]);

  v29.receiver = v10;
  v29.super_class = v26;
  id v25 = objc_msgSendSuper2(&v29, sel_init);

  sub_1A9466028(v27, v28);
  sub_1A959E148((uint64_t)v9);
  return v25;
}

uint64_t sub_1A959E7D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherDataRequestOptions();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A959E81C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A959E87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id AvailabilityProxyRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AvailabilityProxyRequest.init()()
{
}

id AvailabilityProxyRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A959E9C4()
{
  return type metadata accessor for AvailabilityProxyRequest();
}

uint64_t type metadata accessor for AvailabilityProxyRequest()
{
  uint64_t result = qword_1E97EC820;
  if (!qword_1E97EC820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A959EA14()
{
  uint64_t result = type metadata accessor for WeatherDataRequestOptions();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AvailabilityProxyRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AvailabilityProxyRequest);
}

uint64_t dispatch thunk of AvailabilityProxyRequest.__allocating_init(location:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AvailabilityProxyRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t assignWithCopy for AvailabilityRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AvailabilityRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailabilityRequest(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvailabilityRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityRequest()
{
  return &type metadata for AvailabilityRequest;
}

uint64_t GEOMapItem.wd_weatherDisplayName.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1A959ED7C(v0);
  id v3 = objc_msgSend(v1, sel_addressObject);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_weatherDisplayName);
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = sub_1A9631D60();

      OUTLINED_FUNCTION_0_34();
      if (v8)
      {
        swift_bridgeObjectRelease();

        return v7;
      }
      swift_bridgeObjectRelease();
    }
    id v9 = objc_msgSend(v4, sel_weatherLocationName);
    if (!v9)
    {

      return v2;
    }
    unint64_t v10 = v9;
    uint64_t v7 = sub_1A9631D60();

    OUTLINED_FUNCTION_0_34();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return v2;
}

uint64_t sub_1A959ED7C(void *a1)
{
  id v2 = objc_msgSend(self, sel_placemarkWithGEOMapItem_, a1);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_name);
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_1A9631D60();
      unint64_t v8 = v7;

      uint64_t v9 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0) {
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v9) {
        return v6;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  id v10 = objc_msgSend(a1, sel_name);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1A9631D60();

    return v12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE280);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A96357F0;
  swift_unknownObjectRetain();
  uint64_t v15 = sub_1A9631DC0();
  uint64_t v17 = v16;
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = sub_1A9459E7C();
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v17;
  MEMORY[0x1AD0F5540]("No name returned in GEOMapItem, but it is required; falling back to 'Unknown Location' string; geoMapItem=%@",
    108,
    2,
    v14);
  swift_bridgeObjectRelease();
  if (qword_1E97EA5F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v18 = (id)qword_1E97EC678;
  uint64_t v6 = sub_1A962E500();

  return v6;
}

uint64_t Assembly.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Assembly.init()();
  return v0;
}

uint64_t Assembly.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Assembly.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t method lookup function for Assembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Assembly);
}

uint64_t dispatch thunk of Assembly.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

Swift::Bool __swiftcall GeoJSON.Feature.contains(_:)(__C::CLLocationCoordinate2D a1)
{
  Swift::Double longitude = a1.longitude;
  Swift::Double latitude = a1.latitude;
  uint64_t v4 = *(void *)(v1 + 16);
  if ((!v4
     || *(void *)(v4 + 16) == 4
     && (*(double *)(v4 + 32) <= a1.longitude ? (BOOL v5 = *(double *)(v4 + 48) < a1.longitude) : (BOOL v5 = 1),
         !v5 ? (BOOL v6 = *(double *)(v4 + 40) > a1.latitude) : (BOOL v6 = 1),
         !v6 ? (BOOL v7 = *(double *)(v4 + 56) < a1.latitude) : (BOOL v7 = 1),
         !v7))
    && (~*(void *)(v1 + 24) & 0xF000000000000007) != 0)
  {
    type metadata accessor for GeoJSON();
    return GeoJSON.contains(_:)((__C::CLLocationCoordinate2D)__PAIR128__(*(unint64_t *)&longitude, *(unint64_t *)&latitude));
  }
  else
  {
    return 0;
  }
}

BOOL static GeoJSON.Feature.== infix(_:_:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9632330();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v42 - v13;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = a1[1];
  uint64_t v24 = a2[1];
  if (!v23)
  {
    uint64_t v44 = v22;
    uint64_t v45 = v20;
    uint64_t v46 = v21;
    if (v24) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v24) {
    return 0;
  }
  uint64_t v44 = v22;
  uint64_t v45 = v20;
  uint64_t v46 = v21;
  BOOL v25 = *a1 == *a2 && v23 == v24;
  if (v25 || (v26 = sub_1A96327D0(), BOOL result = 0, (v26 & 1) != 0))
  {
LABEL_10:
    uint64_t v28 = a1[2];
    uint64_t v29 = a2[2];
    if (v28)
    {
      if (!v29 || !sub_1A947A7C0(v28, v29)) {
        return 0;
      }
    }
    else if (v29)
    {
      return 0;
    }
    uint64_t v42 = v8;
    uint64_t v43 = v14;
    uint64_t v30 = a1[3];
    uint64_t v31 = a2[3];
    if ((~v30 & 0xF000000000000007) != 0)
    {
      uint64_t v49 = a1[3];
      if ((~v31 & 0xF000000000000007) != 0)
      {
        uint64_t v48 = v31;
        sub_1A94EB758(v30);
        swift_retain();
        char v32 = static GeoJSON.== infix(_:_:)(&v49, &v48, a3, v47);
        swift_release();
        sub_1A95654E4(v30);
        if ((v32 & 1) == 0) {
          return 0;
        }
LABEL_22:
        type metadata accessor for GeoJSON.Feature();
        uint64_t v33 = *(void (**)(void))(v46 + 16);
        OUTLINED_FUNCTION_2_32();
        v33();
        OUTLINED_FUNCTION_2_32();
        v33();
        uint64_t v34 = (uint64_t)v43;
        uint64_t v35 = (uint64_t)&v43[*(int *)(v45 + 48)];
        OUTLINED_FUNCTION_2_32();
        v33();
        OUTLINED_FUNCTION_2_32();
        v33();
        OUTLINED_FUNCTION_6_3(v34);
        if (v25)
        {
          uint64_t v36 = *(void (**)(void))(v46 + 8);
          OUTLINED_FUNCTION_3_25();
          v36();
          OUTLINED_FUNCTION_3_25();
          v36();
          OUTLINED_FUNCTION_6_3(v35);
          if (v25)
          {
            OUTLINED_FUNCTION_3_25();
            v36();
            return 1;
          }
        }
        else
        {
          OUTLINED_FUNCTION_2_32();
          v33();
          OUTLINED_FUNCTION_6_3(v35);
          if (!v37)
          {
            uint64_t v39 = v42;
            (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v11, v35, a3);
            LODWORD(v47) = sub_1A9631D30();
            uint64_t v40 = *(void (**)(void))(v39 + 8);
            OUTLINED_FUNCTION_7_25();
            v40();
            uint64_t v41 = *(void (**)(void))(v46 + 8);
            OUTLINED_FUNCTION_5_14();
            v41();
            OUTLINED_FUNCTION_5_14();
            v41();
            OUTLINED_FUNCTION_7_25();
            v40();
            OUTLINED_FUNCTION_5_14();
            v41();
            return (v47 & 1) != 0;
          }
          char v38 = *(void (**)(void))(v46 + 8);
          OUTLINED_FUNCTION_7_25();
          v38();
          OUTLINED_FUNCTION_7_25();
          v38();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v17, a3);
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
        return 0;
      }
      sub_1A94EB758(v30);
    }
    else if ((~v31 & 0xF000000000000007) == 0)
    {
      goto LABEL_22;
    }
    sub_1A94EB758(v31);
    sub_1A95654E4(v30);
    sub_1A95654E4(v31);
    return 0;
  }
  return result;
}

uint64_t *sub_1A959F584@<X0>(uint64_t a1@<X8>)
{
  return sub_1A959F5C0(a1);
}

uint64_t *sub_1A959F5C0@<X0>(uint64_t a1@<X8>)
{
  sub_1A95A123C(v1 + 24, (uint64_t)&v4);
  sub_1A95A123C((uint64_t)&v4, a1);
  return sub_1A95A12A4(&v4);
}

uint64_t GeoJSON.Feature.geometry.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1A94EB758(v2);
}

uint64_t sub_1A959F614(double a1, double a2)
{
  return sub_1A9562BC8(a1, a2) & 1;
}

uint64_t GeoJSON.Feature.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t GeoJSON.Feature.boundingBox.getter()
{
  return sub_1A9631510();
}

uint64_t GeoJSON.Feature.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_1A9632330();
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t GeoJSON.Feature.init(identifier:boundingBox:geometry:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v8 = *a4;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = v8;
  uint64_t v9 = (char *)a6 + *(int *)(type metadata accessor for GeoJSON.Feature() + 44);
  uint64_t v10 = sub_1A9632330();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  return v11(v9, a5, v10);
}

uint64_t sub_1A959F7A0()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A959F7F0(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 2020565602;
      break;
    case 3:
      uint64_t result = 0x797274656D6F6567;
      break;
    case 4:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A959F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A959F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A959F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A959F9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A959FA48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A959F7A0();
  *a1 = result;
  return result;
}

uint64_t sub_1A959FA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A959F7F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A959FAB0()
{
  return sub_1A959F884(*v0);
}

uint64_t sub_1A959FABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1A959F7EC(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A959FAEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95028FC();
  *a1 = result;
  return result;
}

uint64_t sub_1A959FB1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A959FB70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t GeoJSON.Feature.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v28 = a3;
  sub_1A9632330();
  OUTLINED_FUNCTION_0_1();
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v32 = a2;
  _s7FeatureV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v34 = sub_1A96326B0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v29 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v33 = v15;
  uint64_t v17 = v36;
  sub_1A9632950();
  if (!v17)
  {
    uint64_t v18 = v30;
    uint64_t v19 = v31;
    LOBYTE(v38) = 1;
    uint64_t v27 = sub_1A96325F0();
    uint64_t v36 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
    char v37 = 2;
    sub_1A9500AC8(&qword_1E97EB738);
    OUTLINED_FUNCTION_3_33();
    uint64_t v26 = v38;
    type metadata accessor for GeoJSON();
    char v37 = 3;
    swift_getWitnessTable();
    OUTLINED_FUNCTION_3_33();
    uint64_t v25 = v38;
    LOBYTE(v38) = 4;
    sub_1A9632630();
    uint64_t v22 = OUTLINED_FUNCTION_1_43();
    v23(v22);
    uint64_t v38 = v25;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v8, v11, v19);
    GeoJSON.Feature.init(identifier:boundingBox:geometry:properties:)(v27, v36, v26, &v38, (uint64_t)v8, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t GeoJSON.Feature.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  void v14[3] = *(void *)(a2 + 16);
  v14[1] = v3;
  _s7FeatureV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v4 = sub_1A9632790();
  OUTLINED_FUNCTION_0_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9632970();
  LOBYTE(v16) = 0;
  uint64_t v10 = v14[4];
  sub_1A9632730();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  }
  uint64_t v12 = v6;
  uint64_t v13 = v14[2];
  LOBYTE(v16) = 1;
  sub_1A96326D0();
  uint64_t v16 = *(void *)(v13 + 16);
  char v15 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB730);
  sub_1A9500AC8(&qword_1E97EB760);
  OUTLINED_FUNCTION_4_28();
  uint64_t v16 = *(void *)(v13 + 24);
  char v15 = 3;
  type metadata accessor for GeoJSON();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_4_28();
  LOBYTE(v16) = 4;
  sub_1A9632720();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v4);
}

uint64_t sub_1A95A01A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return GeoJSON.Feature.init(from:)(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_1A95A01C4(void *a1, uint64_t a2)
{
  return GeoJSON.Feature.encode(to:)(a1, a2);
}

BOOL sub_1A95A01DC(void *a1, void *a2, uint64_t a3)
{
  return static GeoJSON.Feature.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

unint64_t sub_1A95A01EC(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for GeoJSON.Feature()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7FeatureV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A95A023C()
{
  uint64_t result = sub_1A9632330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A95A02EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 32) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v24 = ~v8;
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    uint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (unint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v20 = *v19;
    sub_1A9631510();
    sub_1A9631510();
    if (!((v20 >> 57) & 0x18 | v20 & 7)) {
      swift_retain();
    }
    *uint64_t v18 = v20;
    uint64_t v21 = (void *)(((unint64_t)v18 + v8 + 8) & v24);
    uint64_t v22 = (const void *)(((unint64_t)v19 + v8 + 8) & v24);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v4))
    {
      memcpy(v21, v22, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1A95A04A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (!((*v4 >> 57) & 0x18 | *v4 & 7)) {
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v5 - 8);
  unint64_t v6 = ((unint64_t)v4 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v5);
  }
  return result;
}

void *sub_1A95A0594(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (unint64_t *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *v9;
  sub_1A9631510();
  sub_1A9631510();
  if (!((v10 >> 57) & 0x18 | v10 & 7)) {
    swift_retain();
  }
  *uint64_t v8 = v10;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)(((unint64_t)v8 + v13 + 8) & ~v13);
  uint64_t v15 = (const void *)(((unint64_t)v9 + v13 + 8) & ~v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11))
  {
    if (*(_DWORD *)(v12 + 84)) {
      size_t v16 = *(void *)(v12 + 64);
    }
    else {
      size_t v16 = *(void *)(v12 + 64) + 1;
    }
    memcpy(v14, v15, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v14, v15, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v11);
  }
  return a1;
}

void *sub_1A95A06D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (uint64_t *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  int v11 = ((unint64_t)*v9 >> 57) & 0x18 | *v9 & 7;
  if ((*v8 >> 57) & 0x18 | *v8 & 7)
  {
    *uint64_t v8 = v10;
    if (!v11) {
      swift_retain();
    }
  }
  else if (v11)
  {
    swift_release();
    *uint64_t v8 = *v9;
  }
  else
  {
    *uint64_t v8 = v10;
    swift_retain();
    swift_release();
  }
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (void *)(((unint64_t)v8 + v14 + 8) & ~v14);
  size_t v16 = (const void *)(((unint64_t)v9 + v14 + 8) & ~v14);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v12);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
      return a1;
    }
    int v19 = *(_DWORD *)(v13 + 84);
    size_t v20 = *(void *)(v13 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v15, v16, v12);
      return a1;
    }
    uint64_t v22 = *(void (**)(void *, uint64_t))(v13 + 8);
    uint64_t v21 = v13 + 8;
    v22(v15, v12);
    int v19 = *(_DWORD *)(v21 + 76);
    size_t v20 = *(void *)(v21 + 56);
  }
  if (v19) {
    size_t v23 = v20;
  }
  else {
    size_t v23 = v20 + 1;
  }
  memcpy(v15, v16, v23);
  return a1;
}

_OWORD *sub_1A95A08E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  unint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  uint64_t v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84)) {
      size_t v13 = *(void *)(v9 + 64);
    }
    else {
      size_t v13 = *(void *)(v9 + 64) + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v8);
  }
  return a1;
}

void *sub_1A95A09F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  int v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (unint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v10;
  if ((*v9 >> 57) & 0x18 | *v9 & 7)
  {
    *uint64_t v9 = v11;
  }
  else if ((v11 >> 57) & 0x18 | v11 & 7)
  {
    swift_release();
    *uint64_t v9 = *v10;
  }
  else
  {
    *uint64_t v9 = v11;
    swift_release();
  }
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (void *)(((unint64_t)v9 + v14 + 8) & ~v14);
  size_t v16 = (const void *)(((unint64_t)v10 + v14 + 8) & ~v14);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v12);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
      return a1;
    }
    int v19 = *(_DWORD *)(v13 + 84);
    size_t v20 = *(void *)(v13 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v15, v16, v12);
      return a1;
    }
    uint64_t v22 = *(void (**)(void *, uint64_t))(v13 + 8);
    uint64_t v21 = v13 + 8;
    v22(v15, v12);
    int v19 = *(_DWORD *)(v21 + 76);
    size_t v20 = *(void *)(v21 + 56);
  }
  if (v19) {
    size_t v23 = v20;
  }
  else {
    size_t v23 = v20 + 1;
  }
  memcpy(v15, v16, v23);
  return a1;
}

uint64_t sub_1A95A0BC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  int v11 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v12 = v10 + ((v9 + 32) & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_28:
      if (v7 > 0x7FFFFFFE)
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ v9+ 8) & ~v9, v6, v4);
        if (EnumTagSinglePayload >= 2) {
          return EnumTagSinglePayload - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v18 = *((void *)a1 + 1);
        if (v18 >= 0xFFFFFFFF) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_28;
  }
LABEL_20:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v12 | v17) + 1;
}

void sub_1A95A0DA8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  size_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v14;
  }
  size_t v15 = v13 + v14;
  char v16 = 8 * (v13 + v14);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        int v6 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v19 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v22 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v15] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v21;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1A95A10BCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v10 > 0x7FFFFFFE)
        {
          size_t v23 = (unsigned char *)((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12);
          if (v10 >= a2)
          {
            uint64_t v27 = a2 + 1;
            unint64_t v28 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
            __swift_storeEnumTagSinglePayload(v28, v27, v9, v7);
          }
          else
          {
            if (v14 <= 3) {
              int v24 = ~(-1 << (8 * v14));
            }
            else {
              int v24 = -1;
            }
            if (v14)
            {
              int v25 = v24 & (~v10 + a2);
              if (v14 <= 3) {
                int v26 = v14;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v14);
              switch(v26)
              {
                case 2:
                  *(_WORD *)size_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)size_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)size_t v23 = v25;
                  break;
                default:
                  *size_t v23 = v25;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *((void *)a1 + 1) = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *((void *)a1 + 1) = a2;
        }
      }
      return;
  }
}

unsigned char *sub_1A95A10F4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95A11C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1A95A11E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A95A1204()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A95A1220()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A95A123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EB018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1A95A12A4(uint64_t *a1)
{
  return a1;
}

uint64_t static MarineForecastUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97EC990;
  sub_1A9631510();
  return v0;
}

uint64_t static MarineForecastUnavailableDescriptor.name.setter(uint64_t a1, void *a2)
{
  qword_1E97EC990 = a1;
  off_1E97EC998 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarineForecastUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95A13A8()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD308 = 0x2E312E312E30;
  qword_1EB6DD310 = 0xE600000000000000;
  return result;
}

uint64_t static MarineForecastUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD318 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD308;
  sub_1A9631510();
  return v0;
}

uint64_t static MarineForecastUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD318 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD308 = a1;
  qword_1EB6DD310 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarineForecastUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD318 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for MarineForecastUnavailableDescriptor()
{
  return &type metadata for MarineForecastUnavailableDescriptor;
}

unint64_t sub_1A95A15A4(uint64_t a1)
{
  unint64_t result = sub_1A94EE1E0();
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_1A95A15CC()
{
  return &off_1EFFCB848;
}

unint64_t sub_1A95A15DC()
{
  unint64_t result = qword_1E97EC9B0;
  if (!qword_1E97EC9B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB6DA5A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9B0);
  }
  return result;
}

uint64_t Error.domainAndCode.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v6, a1, v3);
  uint64_t v7 = sub_1A96327C0();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    uint64_t v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v5, a1);
  }
  unsigned int v10 = (void *)sub_1A962E520();

  id v11 = objc_msgSend(v10, sel_domain);
  uint64_t v12 = sub_1A9631D60();
  uint64_t v14 = v13;

  uint64_t v17 = v12;
  uint64_t v18 = v14;
  sub_1A9631EA0();
  v16[1] = objc_msgSend(v10, sel_code);
  sub_1A96327B0();
  sub_1A9631EA0();

  swift_bridgeObjectRelease();
  return v17;
}

uint64_t MonthWeatherStatistics.month.getter()
{
  return *(void *)v0;
}

__n128 MonthWeatherStatistics.temperatureRange.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 MonthWeatherStatistics.precipitation.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[3].n128_u64[0];
  unsigned __int8 v3 = v1[3].n128_u8[8];
  __n128 result = v1[2];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t static MonthWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  double v3 = *(double *)(a1 + 32);
  double v4 = *(double *)(a1 + 40);
  double v5 = *(double *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
LABEL_11:
    if (v6)
    {
      if ((*(unsigned char *)(a2 + 56) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(unsigned char *)(a2 + 56)) {
        return 0;
      }
      BOOL v9 = v3 == *(double *)(a2 + 32) && v4 == *(double *)(a2 + 40);
      if (!v9 || v5 != *(double *)(a2 + 48)) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  if ((*(unsigned char *)(a2 + 24) & 1) == 0
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16))
  {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1A95A18C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9645600 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A95A1A2C(char a1)
{
  if (!a1) {
    return 0x68746E6F6DLL;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x7469706963657270;
}

uint64_t sub_1A95A1A90()
{
  return sub_1A95A1A2C(*v0);
}

uint64_t sub_1A95A1A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95A18C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95A1AC0(uint64_t a1)
{
  unint64_t v2 = sub_1A95A1CEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95A1AFC(uint64_t a1)
{
  unint64_t v2 = sub_1A95A1CEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MonthWeatherStatistics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC9B8);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v21 = *(void *)(v1 + 16);
  uint64_t v22 = v10;
  int v27 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 40);
  uint64_t v20 = v11;
  uint64_t v18 = *(void *)(v1 + 48);
  HIDWORD(v17) = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95A1CEC();
  sub_1A9632970();
  LOBYTE(v23) = 0;
  sub_1A9632760();
  if (!v2)
  {
    char v12 = BYTE4(v17);
    uint64_t v14 = v18;
    uint64_t v13 = v19;
    uint64_t v15 = v20;
    uint64_t v23 = v22;
    uint64_t v24 = v21;
    LOBYTE(v25) = v27;
    char v28 = 1;
    sub_1A95A1D38();
    OUTLINED_FUNCTION_2_39();
    uint64_t v23 = v15;
    uint64_t v24 = v13;
    uint64_t v25 = v14;
    char v26 = v12;
    char v28 = 2;
    sub_1A95A1D84();
    OUTLINED_FUNCTION_2_39();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_1A95A1CEC()
{
  unint64_t result = qword_1E97EC9C0;
  if (!qword_1E97EC9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9C0);
  }
  return result;
}

unint64_t sub_1A95A1D38()
{
  unint64_t result = qword_1E97EC9C8;
  if (!qword_1E97EC9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9C8);
  }
  return result;
}

unint64_t sub_1A95A1D84()
{
  unint64_t result = qword_1E97EC9D0;
  if (!qword_1E97EC9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9D0);
  }
  return result;
}

uint64_t MonthWeatherStatistics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC9D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95A1CEC();
  sub_1A9632950();
  if (!v2)
  {
    LOBYTE(v10) = 0;
    uint64_t v6 = sub_1A9632670();
    sub_1A95A1F88();
    OUTLINED_FUNCTION_1_44();
    sub_1A95A1FD4();
    OUTLINED_FUNCTION_1_44();
    uint64_t v8 = OUTLINED_FUNCTION_12_0();
    v9(v8);
    *(void *)a2 = v6;
    *(_OWORD *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 32) = v10;
    *(void *)(a2 + 48) = v11;
    *(unsigned char *)(a2 + 56) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95A1F88()
{
  unint64_t result = qword_1E97EC9E0;
  if (!qword_1E97EC9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9E0);
  }
  return result;
}

unint64_t sub_1A95A1FD4()
{
  unint64_t result = qword_1E97EC9E8;
  if (!qword_1E97EC9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9E8);
  }
  return result;
}

uint64_t sub_1A95A2020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MonthWeatherStatistics.init(from:)(a1, a2);
}

uint64_t sub_1A95A2038(void *a1)
{
  return MonthWeatherStatistics.encode(to:)(a1);
}

uint64_t sub_1A95A2054()
{
  return static MonthWeatherStatistics.read(from:)();
}

void sub_1A95A206C()
{
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DayWeatherStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DayWeatherStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MonthWeatherStatistics()
{
  return &type metadata for MonthWeatherStatistics;
}

unsigned char *storeEnumTagSinglePayload for MonthWeatherStatistics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95A21D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonthWeatherStatistics.CodingKeys()
{
  return &type metadata for MonthWeatherStatistics.CodingKeys;
}

unint64_t sub_1A95A2214()
{
  unint64_t result = qword_1E97EC9F0;
  if (!qword_1E97EC9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9F0);
  }
  return result;
}

unint64_t sub_1A95A2264()
{
  unint64_t result = qword_1E97EC9F8;
  if (!qword_1E97EC9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97EC9F8);
  }
  return result;
}

unint64_t sub_1A95A22B4()
{
  unint64_t result = qword_1E97ECA00;
  if (!qword_1E97ECA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA00);
  }
  return result;
}

uint64_t ConditionCode.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_14();
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_14();
    uint64_t v5 = sub_1A96327F0();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    ConditionCode.init(rawValue:)(v8);
    char v9 = v11[0];
    if (LOBYTE(v11[0]) == 35) {
      char v9 = 34;
    }
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::ConditionCode_optional __swiftcall ConditionCode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9632850();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 17;
  switch(v3)
  {
    case 0:
      goto LABEL_19;
    case 1:
      char v5 = 1;
      goto LABEL_19;
    case 2:
      char v5 = 2;
      goto LABEL_19;
    case 3:
      char v5 = 3;
      goto LABEL_19;
    case 4:
      char v5 = 4;
      goto LABEL_19;
    case 5:
      char v5 = 5;
      goto LABEL_19;
    case 6:
      char v5 = 6;
      goto LABEL_19;
    case 7:
      char v5 = 7;
      goto LABEL_19;
    case 8:
      char v5 = 8;
      goto LABEL_19;
    case 9:
      char v5 = 9;
      goto LABEL_19;
    case 10:
      char v5 = 10;
      goto LABEL_19;
    case 11:
      char v5 = 11;
      goto LABEL_19;
    case 12:
      char v5 = 12;
      goto LABEL_19;
    case 13:
      char v5 = 13;
      goto LABEL_19;
    case 14:
      char v5 = 14;
      goto LABEL_19;
    case 15:
      char v5 = 15;
      goto LABEL_19;
    case 16:
      char v5 = 16;
LABEL_19:
      char v6 = v5;
      break;
    case 17:
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    default:
      char v6 = 35;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t ConditionCode.rawValue.getter()
{
  unint64_t result = 0x7261656C43;
  switch(*v0)
  {
    case 1:
      return 0x6472617A7A696C42;
    case 2:
      return 0x44676E69776F6C42;
    case 3:
      return 0x53676E69776F6C42;
    case 4:
      return 0x797A65657242;
    case 5:
      return 0x7964756F6C43;
    case 6:
      return 0x656C7A7A697244;
    case 7:
      return 0x7365697272756C46;
    case 8:
      uint64_t v2 = 1734831942;
      goto LABEL_34;
    case 9:
    case 0xA:
      return 0x676E697A65657246;
    case 0xB:
      return 0x646967697246;
    case 0xC:
      return 1818845512;
    case 0xD:
      return 1702519112;
    case 0xE:
      return 0x6961527976616548;
    case 0xF:
      return 0x6F6E537976616548;
    case 0x10:
      return 7630664;
    case 0x11:
      return 0x6E61636972727548;
    case 0x12:
      return 0xD000000000000015;
    case 0x13:
      return 0x6C43796C74736F4DLL;
    case 0x14:
      unsigned int v3 = 1953722189;
      return v3 | 0x6C43796C00000000;
    case 0x15:
      unsigned int v3 = 1953653072;
      return v3 | 0x6C43796C00000000;
    case 0x16:
      return 1852399954;
    case 0x17:
      return 0xD000000000000016;
    case 0x18:
      return 0x7465656C53;
    case 0x19:
      uint64_t v2 = 1802464595;
      goto LABEL_34;
    case 0x1A:
      return 2003791443;
    case 0x1B:
      return 0x7453676E6F727453;
    case 0x1C:
      return 0x7272756C466E7553;
    case 0x1D:
      return 0x65776F68536E7553;
    case 0x1E:
      return 0x737265646E756854;
    case 0x1F:
      return 0x6C616369706F7254;
    case 0x20:
      uint64_t v2 = 1684957527;
LABEL_34:
      unint64_t result = v2 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
      break;
    case 0x21:
      unint64_t result = 0x694D7972746E6957;
      break;
    case 0x22:
      unint64_t result = 0x6C69617641746F4ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95A2A00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950BDFC(*a1, *a2);
}

unint64_t sub_1A95A2A10()
{
  unint64_t result = qword_1E97ECA08;
  if (!qword_1E97ECA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA08);
  }
  return result;
}

uint64_t sub_1A95A2A5C()
{
  return sub_1A95C93DC();
}

uint64_t sub_1A95A2A64(uint64_t a1)
{
  return sub_1A94ACB40(a1, *v1);
}

uint64_t sub_1A95A2A6C()
{
  return sub_1A94AD9E4();
}

WeatherDaemon::ConditionCode_optional sub_1A95A2A74(Swift::String *a1)
{
  return ConditionCode.init(rawValue:)(*a1);
}

unint64_t sub_1A95A2A80@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ConditionCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A95A2AA8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return ConditionCode.init(from:)(a1, a2);
}

uint64_t sub_1A95A2AC0()
{
  return sub_1A9631FB0();
}

void sub_1A95A2B10(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A95A2B28()
{
  return ConditionCode.write(to:)();
}

unint64_t sub_1A95A2B68()
{
  unint64_t result = qword_1EB6DC990;
  if (!qword_1EB6DC990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC990);
  }
  return result;
}

WeatherDaemon::MoonPhase_optional __swiftcall MoonPhase.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t MoonPhase.rawValue.getter()
{
  uint64_t result = 7824750;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7243676E69786177;
      break;
    case 2:
      uint64_t v2 = 0x517473726966;
      goto LABEL_9;
    case 3:
      uint64_t result = 0x6947676E69786177;
      break;
    case 4:
      uint64_t result = 1819047270;
      break;
    case 5:
      uint64_t result = 0x6947676E696E6177;
      break;
    case 6:
      uint64_t v2 = 0x516472696874;
LABEL_9:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6175000000000000;
      break;
    case 7:
      uint64_t result = 0x7243676E696E6177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95A2D18(unsigned __int8 *a1, char *a2)
{
  return sub_1A950A8B4(*a1, *a2);
}

unint64_t sub_1A95A2D28()
{
  unint64_t result = qword_1E97ECA10;
  if (!qword_1E97ECA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA10);
  }
  return result;
}

uint64_t sub_1A95A2D74()
{
  return sub_1A95C93E8(*v0);
}

uint64_t sub_1A95A2D7C()
{
  return sub_1A94ABDE4();
}

uint64_t sub_1A95A2D84()
{
  return sub_1A94AE02C();
}

WeatherDaemon::MoonPhase_optional sub_1A95A2D8C(Swift::String *a1)
{
  return MoonPhase.init(rawValue:)(*a1);
}

uint64_t sub_1A95A2D98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MoonPhase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A95A2DC0()
{
  return sub_1A9632000();
}

uint64_t sub_1A95A2E20()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A95A2E70@<X0>(unsigned char *a1@<X8>)
{
  return static MoonPhase.read(from:)(a1);
}

uint64_t sub_1A95A2E88()
{
  return MoonPhase.write(to:)();
}

unint64_t sub_1A95A2EC8()
{
  unint64_t result = qword_1EB6DC2A0;
  if (!qword_1EB6DC2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC2A0);
  }
  return result;
}

uint64_t destroy for WeatherDataLastFetchEntity()
{
  swift_release();
  swift_release();
  return swift_release();
}

void *_s13WeatherDaemon26WeatherDataLastFetchEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for WeatherDataLastFetchEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WeatherDataLastFetchEntity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherDataLastFetchEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherDataLastFetchEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataLastFetchEntity()
{
  return &type metadata for WeatherDataLastFetchEntity;
}

uint64_t sub_1A95A3104()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6EB5D8 = 0x2E302E312E30;
  unk_1EB6EB5E0 = 0xE600000000000000;
  return result;
}

uint64_t *sub_1A95A3180()
{
  if (qword_1EB6DDA90 != -1) {
    swift_once();
  }
  return &qword_1EB6EB5D8;
}

uint64_t sub_1A95A31CC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v1 = OUTLINED_FUNCTION_2_0(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_28();
  uint64_t v4 = v2 - v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_6_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_22();
  uint64_t v11 = sub_1A9631990();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_5_0((uint64_t)v7);
  OUTLINED_FUNCTION_5_0(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_1_45();
  sub_1A9631990();
  OUTLINED_FUNCTION_6_29();
  swift_allocObject();
  OUTLINED_FUNCTION_1_45();
  sub_1A9631990();
  return v11;
}

uint64_t sub_1A95A3374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v7 = OUTLINED_FUNCTION_2_0(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_28();
  uint64_t v15 = v13 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v20 = OUTLINED_FUNCTION_2_0(v19);
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_5_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_22();
  uint64_t v22 = sub_1A9631990();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_5_0((uint64_t)v18);
  OUTLINED_FUNCTION_5_0(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  swift_retain();
  OUTLINED_FUNCTION_1_45();
  sub_1A9631990();
  OUTLINED_FUNCTION_5_36();
  swift_allocObject();
  swift_retain();
  OUTLINED_FUNCTION_1_45();
  sub_1A9631990();
  uint64_t v30 = v26;
  uint64_t v31 = v27;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  uint64_t v23 = sub_1A962E810();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v10, a3, v23);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v23);
  sub_1A96319B0();
  swift_release();
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  sub_1A96319B0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a3, v23);
  return v22;
}

uint64_t sub_1A95A3660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746375646F7270 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A95A37A4(char a1)
{
  if (!a1) {
    return 25705;
  }
  if (a1 == 1) {
    return 0x6D617473656D6974;
  }
  return 0x73746375646F7270;
}

uint64_t sub_1A95A37F4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECA28);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95A4394();
  sub_1A9632970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  sub_1A9459F18(&qword_1E97EBD88, &qword_1EB6DE238);
  OUTLINED_FUNCTION_7_26();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
    sub_1A9459F18(&qword_1E97EBD90, &qword_1EB6DE230);
    sub_1A9632770();
    OUTLINED_FUNCTION_7_26();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1A95A39C4(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECA18);
  OUTLINED_FUNCTION_1();
  v24[0] = v3;
  v24[1] = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2();
  uint64_t v27 = v5 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v7 = OUTLINED_FUNCTION_2_0(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_28();
  uint64_t v10 = v8 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v15 = OUTLINED_FUNCTION_2_0(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_3_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  OUTLINED_FUNCTION_9_22();
  uint64_t v25 = sub_1A9631990();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v17);
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  OUTLINED_FUNCTION_1_45();
  sub_1A9631990();
  OUTLINED_FUNCTION_3_34();
  swift_allocObject();
  OUTLINED_FUNCTION_1_45();
  uint64_t v24[2] = sub_1A9631990();
  uint64_t v18 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A95A4394();
  uint64_t v19 = v28;
  sub_1A9632950();
  if (v19)
  {
    uint64_t v21 = v25;
  }
  else
  {
    char v29 = 0;
    sub_1A9459F18(&qword_1E97EBDA8, &qword_1EB6DE238);
    OUTLINED_FUNCTION_11_18();
    swift_release();
    uint64_t v21 = v30;
    char v29 = 1;
    sub_1A9459F18(&qword_1E97EBDB0, &qword_1EB6DE230);
    swift_retain();
    sub_1A9632680();
    swift_release();
    char v29 = 2;
    swift_retain();
    OUTLINED_FUNCTION_11_18();
    swift_release();
    uint64_t v22 = OUTLINED_FUNCTION_10_17();
    v23(v22);
    swift_retain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return v21;
}

uint64_t sub_1A95A3DE4()
{
  return sub_1A95A37A4(*v0);
}

uint64_t sub_1A95A3DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95A3660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95A3E14(uint64_t a1)
{
  unint64_t v2 = sub_1A95A4394();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95A3E50(uint64_t a1)
{
  unint64_t v2 = sub_1A95A4394();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A95A3E8C()
{
  return swift_retain();
}

uint64_t sub_1A95A3E94()
{
  return 0x637465467473616CLL;
}

uint64_t sub_1A95A3EB0()
{
  sub_1A95A3180();
  uint64_t v0 = qword_1EB6EB5D8;
  sub_1A9631510();
  return v0;
}

uint64_t sub_1A95A3EEC(uint64_t a1)
{
  unint64_t v2 = sub_1A95A4348();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1A95A3F38(uint64_t a1)
{
  unint64_t v2 = sub_1A95A4348();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1A95A3F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1A95A4348();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

uint64_t sub_1A95A3FE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95A31CC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1A95A4014@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A95A39C4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A95A4044(void *a1)
{
  return sub_1A95A37F4(a1);
}

uint64_t sub_1A95A4064(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A95A4348();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1A95A40B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1A95A4348();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1A95A4104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1A95A4348();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1A95A416C()
{
  unint64_t result = qword_1EB6DDAC8;
  if (!qword_1EB6DDAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAC8);
  }
  return result;
}

unint64_t sub_1A95A41BC()
{
  unint64_t result = qword_1EB6DDAC0;
  if (!qword_1EB6DDAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAC0);
  }
  return result;
}

unint64_t sub_1A95A420C()
{
  unint64_t result = qword_1EB6DDAB0;
  if (!qword_1EB6DDAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAB0);
  }
  return result;
}

unint64_t sub_1A95A425C()
{
  unint64_t result = qword_1EB6DDAA8;
  if (!qword_1EB6DDAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAA8);
  }
  return result;
}

unint64_t sub_1A95A42AC()
{
  unint64_t result = qword_1EB6DDAB8;
  if (!qword_1EB6DDAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAB8);
  }
  return result;
}

unint64_t sub_1A95A42FC()
{
  unint64_t result = qword_1EB6DDAA0;
  if (!qword_1EB6DDAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDAA0);
  }
  return result;
}

unint64_t sub_1A95A4348()
{
  unint64_t result = qword_1EB6DDA98;
  if (!qword_1EB6DDA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDA98);
  }
  return result;
}

unint64_t sub_1A95A4394()
{
  unint64_t result = qword_1E97ECA20;
  if (!qword_1E97ECA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherDataLastFetchEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95A44ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataLastFetchEntity.CodingKeys()
{
  return &type metadata for WeatherDataLastFetchEntity.CodingKeys;
}

unint64_t sub_1A95A44E8()
{
  unint64_t result = qword_1E97ECA30;
  if (!qword_1E97ECA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA30);
  }
  return result;
}

unint64_t sub_1A95A4538()
{
  unint64_t result = qword_1E97ECA38;
  if (!qword_1E97ECA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA38);
  }
  return result;
}

unint64_t sub_1A95A4588()
{
  unint64_t result = qword_1E97ECA40;
  if (!qword_1E97ECA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECA40);
  }
  return result;
}

uint64_t sub_1A95A45D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1A944C5FC(0, v1, 0);
    uint64_t v2 = v22;
    unsigned int v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4;
      uint64_t ErrorValue = swift_getErrorValue();
      v20[1] = v20;
      uint64_t v7 = v21;
      uint64_t v8 = *(void *)(v21 - 8);
      __n128 v9 = MEMORY[0x1F4188790](ErrorValue);
      uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      id v12 = v5;
      uint64_t v13 = sub_1A94AA7C4();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);

      uint64_t v22 = v2;
      unint64_t v17 = *(void *)(v2 + 16);
      unint64_t v16 = *(void *)(v2 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A944C5FC(v16 > 1, v17 + 1, 1);
        uint64_t v2 = v22;
      }
      *(void *)(v2 + 16) = v17 + 1;
      uint64_t v18 = v2 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t NetworkOperationTelemetry.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A962E810();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t NetworkOperationTelemetry.startDate.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A962E810();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*NetworkOperationTelemetry.startDate.modify())(void)
{
  return nullsub_1;
}

double NetworkOperationTelemetry.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for NetworkOperationTelemetry() + 20));
}

id NetworkOperationTelemetry.result.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for NetworkOperationTelemetry() + 24);
  id v2 = *(id *)v1;
  sub_1A9456EF4(*(id *)v1, *(unsigned __int8 *)(v1 + 8), *(unsigned char *)(v1 + 9));
  return v2;
}

uint64_t NetworkOperationTelemetry.iterationIndex.getter()
{
  uint64_t v1 = type metadata accessor for NetworkOperationTelemetry();
  uint64_t result = 0;
  uint64_t v3 = (unsigned char *)(v0 + *(int *)(v1 + 24));
  if ((v3[9] & 1) == 0) {
    return *(void *)v3;
  }
  return result;
}

uint64_t NetworkOperationTelemetry.wasRacingRequest.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for NetworkOperationTelemetry() + 24);
  if (*(unsigned char *)(v1 + 9)) {
    return 2;
  }
  else {
    return *(unsigned char *)(v1 + 8) & 1;
  }
}

uint64_t NetworkOperationTelemetry.errorDescriptions.getter()
{
  uint64_t v1 = 0;
  uint64_t v2 = v0 + *(int *)(type metadata accessor for NetworkOperationTelemetry() + 24);
  if (*(unsigned char *)(v2 + 9) == 1)
  {
    uint64_t v4 = *(unsigned __int8 *)(v2 + 8);
    id v3 = *(id *)v2;
    id v5 = *(id *)v2;
    id v6 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
    if (swift_dynamicCast())
    {
      uint64_t v1 = sub_1A95A45D4(v9);
      sub_1A94669E0(v3, v4, 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DDC10);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1A96357F0;
      swift_getErrorValue();
      *(void *)(v1 + 32) = sub_1A94AA7C4();
      *(void *)(v1 + 40) = v7;
      sub_1A94669E0(v3, v4, 1);
    }
  }
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetworkOperationTelemetry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = sub_1A962E810();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)((char *)a2 + v8);
    LOBYTE(v6) = v10[9];
    unsigned __int8 v12 = v10[8];
    sub_1A9456EF4(v11, v12, v6);
    *(void *)uint64_t v9 = v11;
    v9[8] = v12;
    v9[9] = v6;
  }
  return a1;
}

void destroy for NetworkOperationTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = *(void **)v5;
  char v7 = *(unsigned char *)(v5 + 9);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 8);
  sub_1A94669E0(v6, v8, v7);
}

uint64_t initializeWithCopy for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a2 + v7);
  LOBYTE(a2) = *(unsigned char *)(a2 + v7 + 9);
  unsigned __int8 v11 = *(unsigned char *)(v9 + 8);
  sub_1A9456EF4(v10, v11, a2);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 9) = a2;
  return a1;
}

uint64_t assignWithCopy for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  id v10 = *(id *)v9;
  LOBYTE(a2) = *(unsigned char *)(v9 + 9);
  unsigned __int8 v11 = *(unsigned char *)(v9 + 8);
  sub_1A9456EF4(*(id *)v9, v11, a2);
  unsigned __int8 v12 = *(void **)v8;
  char v13 = *(unsigned char *)(v8 + 9);
  *(void *)uint64_t v8 = v10;
  uint64_t v14 = *(unsigned __int8 *)(v8 + 8);
  *(unsigned char *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 9) = a2;
  sub_1A94669E0(v12, v14, v13);
  return a1;
}

uint64_t initializeWithTake for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_WORD *)(v8 + 8) = *(_WORD *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  char v11 = *((unsigned char *)v9 + 8);
  LOBYTE(v9) = *((unsigned char *)v9 + 9);
  unsigned __int8 v12 = *(void **)v8;
  char v13 = *(unsigned char *)(v8 + 9);
  *(void *)uint64_t v8 = v10;
  uint64_t v14 = *(unsigned __int8 *)(v8 + 8);
  *(unsigned char *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 9) = (_BYTE)v9;
  sub_1A94669E0(v12, v14, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A95A4F04);
}

uint64_t sub_1A95A4F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 9);
    if (v9 > 1) {
      return (v9 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for NetworkOperationTelemetry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A95A4FA4);
}

void sub_1A95A4FA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 9) = -(char)a2;
  }
}

uint64_t sub_1A95A5030()
{
  uint64_t v1 = sub_1A962E3A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  v44[2] = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v44 - v6;
  uint64_t v8 = *v0;
  sub_1A962E370();
  uint64_t v9 = sub_1A944C528(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v11 = *(void *)(v9 + 16);
  unint64_t v10 = *(void *)(v9 + 24);
  uint64_t v12 = v9;
  if (v11 >= v10 >> 1) {
    uint64_t v12 = sub_1A944C528(v10 > 1, v11 + 1, 1, v9);
  }
  *(void *)(v12 + 16) = v11 + 1;
  uint64_t v13 = v12;
  uint64_t v15 = *(void (**)(void, void, void))(v2 + 32);
  uint64_t v14 = v2 + 32;
  unint64_t v47 = (*(unsigned __int8 *)(v14 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 48);
  uint64_t v48 = v15;
  uint64_t v46 = *(void *)(v14 + 40);
  v15(v12 + v47 + v46 * v11, v7, v1);
  sub_1A962E370();
  unint64_t v17 = *(void *)(v13 + 16);
  unint64_t v16 = *(void *)(v13 + 24);
  if (v17 >= v16 >> 1) {
    uint64_t v13 = sub_1A944C528(v16 > 1, v17 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v17 + 1;
  OUTLINED_FUNCTION_1_46();
  v18();
  uint64_t v19 = *(void *)(v8 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v45 = v13;
  if (v19)
  {
    sub_1A9631510();
    uint64_t v21 = 0;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    do
    {
      if (*(unsigned char *)(v8 + v21 + 32))
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A948F944();
          uint64_t v22 = v49;
        }
        unint64_t v24 = *(void *)(v22 + 16);
        if (v24 >= *(void *)(v22 + 24) >> 1)
        {
          sub_1A948F944();
          uint64_t v22 = v49;
        }
        *(void *)(v22 + 16) = v24 + 1;
        *(unsigned char *)(v22 + v24 + 32) = 1;
      }
      ++v21;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
    uint64_t v13 = v45;
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = *(void *)(v22 + 16);
  if (v25)
  {
    v44[0] = v14;
    v44[1] = v1;
    uint64_t v49 = v20;
    sub_1A944C5FC(0, v25, 0);
    uint64_t v26 = 0;
    uint64_t v27 = v49;
    uint64_t v28 = *(void *)(v49 + 16);
    uint64_t v29 = 16 * v28;
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_1_21();
    unint64_t v33 = 0xEB00000000657275;
    do
    {
      unint64_t v34 = v28 + v26;
      if (*(unsigned char *)(v22 + v26 + 32)) {
        uint64_t v35 = v31;
      }
      else {
        uint64_t v35 = v30;
      }
      if (*(unsigned char *)(v22 + v26 + 32)) {
        unint64_t v36 = v33;
      }
      else {
        unint64_t v36 = v32;
      }
      uint64_t v49 = v27;
      unint64_t v37 = *(void *)(v27 + 24);
      unint64_t v38 = v34 + 1;
      if (v34 >= v37 >> 1)
      {
        sub_1A944C5FC(v37 > 1, v34 + 1, 1);
        OUTLINED_FUNCTION_1_21();
        OUTLINED_FUNCTION_2_3();
        OUTLINED_FUNCTION_4_17();
        uint64_t v27 = v49;
      }
      ++v26;
      *(void *)(v27 + 16) = v38;
      uint64_t v39 = v27 + v29;
      *(void *)(v39 + 32) = v35;
      *(void *)(v39 + 40) = v36;
      v29 += 16;
    }
    while (v25 != v26);
    swift_release();
    uint64_t v13 = v45;
  }
  else
  {
    swift_release();
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE268);
  sub_1A944C79C();
  sub_1A9631D00();
  swift_bridgeObjectRelease();
  sub_1A962E370();
  swift_bridgeObjectRelease();
  unint64_t v41 = *(void *)(v13 + 16);
  unint64_t v40 = *(void *)(v13 + 24);
  if (v41 >= v40 >> 1) {
    uint64_t v13 = sub_1A944C528(v40 > 1, v41 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v41 + 1;
  OUTLINED_FUNCTION_1_46();
  v42();
  return v13;
}

ValueMetadata *type metadata accessor for HourlyStatisticsRequest()
{
  return &type metadata for HourlyStatisticsRequest;
}

uint64_t static HistoricalFactsUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97ECA48;
  sub_1A9631510();
  return v0;
}

uint64_t static HistoricalFactsUnavailableDescriptor.name.setter(uint64_t a1, char *a2)
{
  qword_1E97ECA48 = a1;
  off_1E97ECA50 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HistoricalFactsUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95A55AC()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD320 = 0x2E312E312E30;
  qword_1EB6DD328 = 0xE600000000000000;
  return result;
}

uint64_t static HistoricalFactsUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD330 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD320;
  sub_1A9631510();
  return v0;
}

uint64_t static HistoricalFactsUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD330 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD320 = a1;
  qword_1EB6DD328 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HistoricalFactsUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD330 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for HistoricalFactsUnavailableDescriptor()
{
  return &type metadata for HistoricalFactsUnavailableDescriptor;
}

id AvailabilityProxyResponse.__allocating_init(dataSets:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return AvailabilityProxyResponse.init(dataSets:)(a1);
}

id AvailabilityProxyResponse.__allocating_init(error:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return AvailabilityProxyResponse.init(error:)(a1);
}

uint64_t static AvailabilityProxyResponse.supportsSecureCoding.getter()
{
  return byte_1E97ECA60;
}

uint64_t static AvailabilityProxyResponse.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97ECA60 = a1;
  return result;
}

uint64_t (*static AvailabilityProxyResponse.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t AvailabilityProxyResponse.dataSets.getter()
{
  return sub_1A9631510();
}

uint64_t AvailabilityProxyResponse.error.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error, a1);
}

id AvailabilityProxyResponse.init(dataSets:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_dataSets] = a1;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error];
  uint64_t v5 = sub_1A96313A0();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id AvailabilityProxyResponse.init(error:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_dataSets] = 0;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error];
  uint64_t v5 = sub_1A96313A0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

Swift::Void __swiftcall AvailabilityProxyResponse.encode(with:)(NSCoder with)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_dataSets);
  if (v6)
  {
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    uint64_t v21 = v6;
    sub_1A9631510();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA5B8);
    sub_1A95A5E14((unint64_t *)&unk_1E97ECA90, &qword_1EB6DA5B8, (void (*)(void))sub_1A95A5E80);
    uint64_t v9 = sub_1A962E2F0();
    unint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1A962E660();
    uint64_t v13 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v12 forKey:v13];

    uint64_t v14 = v9;
    unint64_t v15 = v11;
  }
  else
  {
    sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error, (uint64_t)v5);
    uint64_t v7 = sub_1A96313A0();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
    sub_1A95971B4((uint64_t)v5);
    if (EnumTagSinglePayload == 1) {
      return;
    }
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    sub_1A95A5D84();
    uint64_t v16 = sub_1A962E2F0();
    unint64_t v18 = v17;
    swift_release();
    uint64_t v19 = (void *)sub_1A962E660();
    uint64_t v20 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v19 forKey:v20];

    uint64_t v14 = v16;
    unint64_t v15 = v18;
  }
  sub_1A9466028(v14, v15);
}

unint64_t sub_1A95A5D84()
{
  unint64_t result = qword_1E97ECE40;
  if (!qword_1E97ECE40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E97ECA70);
    sub_1A95A62D8((unint64_t *)&unk_1E97ECA80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECE40);
  }
  return result;
}

uint64_t sub_1A95A5E14(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95A5E80()
{
  return sub_1A95A5E14(&qword_1EB6DAAA8, (uint64_t *)&unk_1EB6DA5A0, (void (*)(void))sub_1A95A5EBC);
}

unint64_t sub_1A95A5EBC()
{
  unint64_t result = qword_1EB6DAA98;
  if (!qword_1EB6DAA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAA98);
  }
  return result;
}

id AvailabilityProxyResponse.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AvailabilityProxyResponse.init(coder:)(a1);
}

id AvailabilityProxyResponse.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95A6298();
  uint64_t v7 = v1;
  uint64_t v8 = sub_1A96322D0();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = sub_1A962E680();
    unint64_t v12 = v11;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DA5A0);
    sub_1A95A5E14((unint64_t *)&qword_1EB6DA5B0, (uint64_t *)&unk_1EB6DA5A0, (void (*)(void))sub_1A94EE254);
    sub_1A962E2C0();
    sub_1A9466028(v10, v12);
    swift_release();
    uint64_t v13 = v24;
  }
  else
  {
    uint64_t v13 = 0;
  }
  *(void *)&v7[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_dataSets] = v13;
  uint64_t v14 = sub_1A96322D0();
  if (v14)
  {
    unint64_t v15 = (void *)v14;
    uint64_t v16 = sub_1A962E680();
    unint64_t v18 = v17;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    uint64_t v19 = sub_1A96313A0();
    sub_1A95A62D8((unint64_t *)&unk_1E97ECAA8);
    sub_1A962E2C0();
    sub_1A9466028(v16, v18);
    swift_release();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v19);
    sub_1A95A631C((uint64_t)v6, (uint64_t)&v7[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error]);
  }
  else
  {
    uint64_t v20 = (uint64_t)&v7[OBJC_IVAR____TtC13WeatherDaemon25AvailabilityProxyResponse_error];
    uint64_t v21 = sub_1A96313A0();
    __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  }

  v25.receiver = v7;
  v25.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v25, sel_init);

  return v22;
}

unint64_t sub_1A95A6298()
{
  unint64_t result = qword_1E97ECAA0;
  if (!qword_1E97ECAA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E97ECAA0);
  }
  return result;
}

uint64_t sub_1A95A62D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A96313A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95A631C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id AvailabilityProxyResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AvailabilityProxyResponse.init()()
{
}

id AvailabilityProxyResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A95A64A4()
{
  return type metadata accessor for AvailabilityProxyResponse();
}

uint64_t type metadata accessor for AvailabilityProxyResponse()
{
  uint64_t result = qword_1E97ECAB8;
  if (!qword_1E97ECAB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A95A64F4()
{
  sub_1A95A65E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AvailabilityProxyResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AvailabilityProxyResponse);
}

uint64_t dispatch thunk of AvailabilityProxyResponse.__allocating_init(dataSets:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AvailabilityProxyResponse.__allocating_init(error:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AvailabilityProxyResponse.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1A95A65E4()
{
  if (!qword_1EB6DB2C0[0])
  {
    sub_1A96313A0();
    unint64_t v0 = sub_1A9632330();
    if (!v1) {
      atomic_store(v0, qword_1EB6DB2C0);
    }
  }
}

uint64_t WeatherDataStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WeatherDataStore.init()();
  return v0;
}

uint64_t WeatherDataStore.airQuality.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.currentWeather.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.dailyForecast.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.hourlyForecast.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.periodForecast.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.locationInfo.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.marineForecast.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.marineLocation.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.news.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.nextHourForecast.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.tideEvents.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherAlerts.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherChange.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherComparisons.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.historicalFacts.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.airQualityUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.marineForecastUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.newsUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.nextHourForecastUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.tideEventsUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherAlertsUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherChangeUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.weatherComparisonsUnavailable.getter()
{
  return swift_retain();
}

uint64_t WeatherDataStore.historicalFactsUnavailable.getter()
{
  return swift_retain();
}

void *WeatherDataStore.init()()
{
  uint64_t v2 = v1;
  id v3 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1A9631A80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB6DD630 != -1) {
    swift_once();
  }
  if (!qword_1EB6DCBB0)
  {
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A96317F0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB6EB630);
    uint64_t v16 = sub_1A96317D0();
    os_log_type_t v17 = sub_1A9632220();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_1A9410000, v16, v17, "Failed to create weather data database", v18, 2u);
      MEMORY[0x1AD0F7300](v18, -1, -1);
    }

    sub_1A95A81C0();
    swift_allocError();
    swift_willThrow();
    goto LABEL_16;
  }
  uint64_t v26 = v6;
  uint64_t v27 = v4;
  uint64_t v9 = qword_1EB6DE388;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A96317F0();
  v25[10] = __swift_project_value_buffer(v10, (uint64_t)qword_1EB6EB630);
  unint64_t v11 = sub_1A96317D0();
  os_log_type_t v12 = sub_1A9632230();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1A9410000, v11, v12, "About to initialize weather data store tables", v13, 2u);
    MEMORY[0x1AD0F7300](v13, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0B8);
  sub_1A95A820C(&qword_1EB6DE0B0, &qword_1EB6DE0B8);
  OUTLINED_FUNCTION_13_18();
  uint64_t v14 = sub_1A9631A30();
  if (v2)
  {
    swift_release();
LABEL_16:
    swift_deallocPartialClassInstance();
    return v3;
  }
  v3[2] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE098);
  sub_1A95A820C(&qword_1EB6DE090, &qword_1EB6DE098);
  v3[3] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0C8);
  sub_1A95A820C(&qword_1EB6DE0C0, &qword_1EB6DE0C8);
  OUTLINED_FUNCTION_13_18();
  v25[1] = 0;
  v3[4] = sub_1A9631A30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0D8);
  sub_1A95A820C(&qword_1EB6DE0D0, &qword_1EB6DE0D8);
  v3[5] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECAC8);
  sub_1A95A820C(&qword_1E97ECAD0, &qword_1E97ECAC8);
  v3[6] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD6B8);
  sub_1A95A820C(&qword_1EB6DD6B0, &qword_1EB6DD6B8);
  v3[7] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD200);
  sub_1A95A820C(&qword_1EB6DD1F8, &qword_1EB6DD200);
  v3[8] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD210);
  sub_1A95A820C(&qword_1EB6DD208, &qword_1EB6DD210);
  v3[9] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD6A8);
  sub_1A95A820C(&qword_1EB6DD6A0, &qword_1EB6DD6A8);
  v3[10] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0E8);
  sub_1A95A820C(&qword_1EB6DE0E0, &qword_1EB6DE0E8);
  v3[11] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1F0);
  sub_1A95A820C(&qword_1EB6DD1E8, &qword_1EB6DD1F0);
  v3[12] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD658);
  sub_1A95A820C(&qword_1EB6DD650, &qword_1EB6DD658);
  v3[13] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0A8);
  sub_1A95A820C(&qword_1EB6DE0A0, &qword_1EB6DE0A8);
  v3[14] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD668);
  sub_1A95A820C(&qword_1EB6DD660, &qword_1EB6DD668);
  v3[15] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD220);
  sub_1A95A820C(&qword_1EB6DD218, &qword_1EB6DD220);
  v3[16] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD6D8);
  sub_1A95A820C(&qword_1EB6DD6D0, &qword_1EB6DD6D8);
  v3[17] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD238);
  sub_1A95A820C(&qword_1EB6DD230, &qword_1EB6DD238);
  v3[18] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD6C8);
  sub_1A95A820C(&qword_1EB6DD6C0, &qword_1EB6DD6C8);
  v3[19] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD6E8);
  sub_1A95A820C(&qword_1EB6DD6E0, &qword_1EB6DD6E8);
  v3[20] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCC00);
  sub_1A95A820C(&qword_1EB6DD228, &qword_1EB6DCC00);
  v3[21] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD678);
  sub_1A95A820C(&qword_1EB6DD670, &qword_1EB6DD678);
  v3[22] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD688);
  sub_1A95A820C(&qword_1EB6DD680, &qword_1EB6DD688);
  v3[23] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD698);
  sub_1A95A820C(&qword_1EB6DD690, &qword_1EB6DD698);
  v3[24] = OUTLINED_FUNCTION_0_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD248);
  sub_1A95A820C(&qword_1EB6DD240, &qword_1EB6DD248);
  v3[25] = OUTLINED_FUNCTION_0_36();
  sub_1A95A4348();
  v3[26] = sub_1A9631A30();
  uint64_t v20 = sub_1A96317D0();
  os_log_type_t v21 = sub_1A9632230();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl(&dword_1A9410000, v20, v21, "Finished initializing weather data store tables", v22, 2u);
    MEMORY[0x1AD0F7300](v22, -1, -1);
  }

  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v8, *MEMORY[0x1E4FAA768], v5);
  sub_1A9631A90();
  uint64_t v23 = OUTLINED_FUNCTION_11_19();
  v24(v23);
  swift_release();
  return v3;
}

void sub_1A95A7394()
{
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A96317F0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB6EB630);
  uint64_t v2 = sub_1A96317D0();
  os_log_type_t v3 = sub_1A9632230();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A9410000, v2, v3, "About to create weather data store tables if neeeded", v4, 2u);
    MEMORY[0x1AD0F7300](v4, -1, -1);
  }

  sub_1A9631970();
  sub_1A96319C0();
  if (v0)
  {
    swift_release();
  }
  else
  {
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    uint64_t v5 = sub_1A96317D0();
    os_log_type_t v6 = sub_1A9632230();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A9410000, v5, v6, "Finished creating weather data store tables as needed", v7, 2u);
      MEMORY[0x1AD0F7300](v7, -1, -1);
    }
  }
}

uint64_t WeatherDataStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherDataStore.__deallocating_deinit()
{
  WeatherDataStore.deinit();
  return MEMORY[0x1F4186488](v0, 216, 7);
}

uint64_t sub_1A95A79FC()
{
  uint64_t v0 = sub_1A9631A40();
  __swift_allocate_value_buffer(v0, qword_1EB6DD638);
  uint64_t v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB6DD638);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A96317F0();
  os_log_type_t v3 = (uint8_t *)__swift_project_value_buffer(v2, (uint64_t)qword_1EB6EB630);
  return static Database.Location.protectedLocation(_:logger:)(0x2D72656874616577, 0xEF62642E61746164, v3, v1);
}

uint64_t static WeatherDataStore.location.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB6DDB28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6DD638);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static WeatherDataStore.location.setter(uint64_t a1)
{
  if (qword_1EB6DDB28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6DD638);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static WeatherDataStore.location.modify())()
{
  if (qword_1EB6DDB28 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A9631A40();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB6DD638);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WeatherDataStore.preferredCacheSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FAA748];
  uint64_t v3 = sub_1A9631A60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1A95A7D74()
{
  uint64_t v28 = sub_1A9631A10();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (char *)v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1A9631A20();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x1F4188790](v1);
  objc_super v25 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1A9631A00();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A9631A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A96318A0();
  MEMORY[0x1F4188790](v10 - 8);
  os_log_type_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A9631A40();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_1A9631A70();
  if (qword_1EB6DDB28 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB6DD638);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  static AssertionOptions.weatherAssertions.getter();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAA748], v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAA6F8], v22);
  uint64_t v18 = (uint64_t)v25;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E4FAA718], v24);
  uint64_t v19 = (uint64_t)v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v27, *MEMORY[0x1E4FAA708], v28);
  char v29 = 1;
  uint64_t result = Database.init(location:assertions:journalingMode:recoveryMode:preferredCacheSize:vacuumMode:busyTimeout:)((uint64_t)v16, (uint64_t)v12, v18, v19, (uint64_t)v9, (uint64_t)v5, 0x100000000);
  qword_1EB6DCBB0 = result;
  return result;
}

unint64_t sub_1A95A81C0()
{
  unint64_t result = qword_1EB6DAB80;
  if (!qword_1EB6DAB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DAB80);
  }
  return result;
}

uint64_t sub_1A95A820C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A95A825C()
{
}

uint64_t type metadata accessor for WeatherDataStore()
{
  return self;
}

uint64_t method lookup function for WeatherDataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherDataStore);
}

uint64_t dispatch thunk of WeatherDataStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

unsigned char *storeEnumTagSinglePayload for WeatherDataStore.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A95A8378);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataStore.Errors()
{
  return &type metadata for WeatherDataStore.Errors;
}

unint64_t sub_1A95A83B4()
{
  unint64_t result = qword_1E97ECAD8;
  if (!qword_1E97ECAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECAD8);
  }
  return result;
}

uint64_t sub_1A95A8400@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB5F8);
  uint64_t result = sub_1A96313D0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for ChannelMapService();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1EFFC7698;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A95A848C(uint64_t a1)
{
  uint64_t v2 = sub_1A96312E0();
  MEMORY[0x1F4188790](v2);
  sub_1A9433E60(a1, (uint64_t)v5);
  uint64_t v3 = swift_allocObject();
  sub_1A9435A70(v5, v3 + 16);
  *(void *)&v5[0] = MEMORY[0x1E4FBC860];
  sub_1A95A896C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE248);
  sub_1A943421C();
  sub_1A96323D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB5F8);
  swift_allocObject();
  return sub_1A9631550();
}

uint64_t sub_1A95A85C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DAAC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WDSEndpoint();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v16 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A96313E0();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1A9434CA8((uint64_t)v6, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDAE0);
  uint64_t result = sub_1A96313E0();
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1A9435A70(&v20, (uint64_t)v22);
  sub_1A9434270((uint64_t)v12, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9467B44(0, &qword_1EB6DEA58);
  uint64_t result = sub_1A96313C0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v14 = result;
  sub_1A9433E60((uint64_t)v22, (uint64_t)&v20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC9D8);
  uint64_t result = sub_1A96313E0();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECAE0);
  uint64_t result = sub_1A96313E0();
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB220);
    swift_allocObject();
    uint64_t v15 = sub_1A9434B4C((uint64_t)v9, 0, v14, &v20, &v18, &v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    uint64_t result = sub_1A9490C8C((uint64_t)v12);
    *a2 = v15;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

id sub_1A95A88A8()
{
  sub_1A9467B44(0, &qword_1EB6DE360);
  unsigned __int8 v3 = 2;
  id v0 = static NSURLSessionConfiguration.makeWeatherSessionConfiguration(serviceType:)(&v3);
  id v1 = objc_msgSend(self, sel_sessionWithConfiguration_, v0);

  return v1;
}

uint64_t sub_1A95A892C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A95A8964@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A95A85C0((void *)(v1 + 16), a1);
}

unint64_t sub_1A95A896C()
{
  unint64_t result = qword_1EB6DDC30;
  if (!qword_1EB6DDC30)
  {
    sub_1A96312E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DDC30);
  }
  return result;
}

id AirQualityScaleProxyRequest.__allocating_init(name:options:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_38());
  return AirQualityScaleProxyRequest.init(name:options:)();
}

uint64_t static AirQualityScaleProxyRequest.supportsSecureCoding.getter()
{
  return byte_1E97ECAF0;
}

uint64_t static AirQualityScaleProxyRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97ECAF0 = a1;
  return result;
}

uint64_t (*static AirQualityScaleProxyRequest.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t AirQualityScaleProxyRequest.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_name);
  sub_1A9631510();
  return v1;
}

uint64_t AirQualityScaleProxyRequest.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A95119A0(v1 + OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_options, a1);
}

id AirQualityScaleProxyRequest.init(name:options:)()
{
  OUTLINED_FUNCTION_0_38();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v1[OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_name];
  *(void *)uint64_t v5 = v3;
  *((void *)v5 + 1) = v2;
  sub_1A95119A0(v0, (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_options]);
  v8.receiver = v1;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_1A959E148(v0);
  return v6;
}

Swift::Void __swiftcall AirQualityScaleProxyRequest.encode(with:)(NSCoder with)
{
  uint64_t v2 = (void *)sub_1A9631D40();
  uint64_t v3 = (void *)sub_1A9631D40();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];

  sub_1A962E310();
  swift_allocObject();
  sub_1A962E300();
  type metadata accessor for WeatherDataRequestOptions();
  sub_1A959E7D8(&qword_1E97EC790);
  uint64_t v4 = sub_1A962E2F0();
  unint64_t v6 = v5;
  swift_release();
  uint64_t v7 = (void *)sub_1A962E660();
  objc_super v8 = (void *)sub_1A9631D40();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  sub_1A9466028(v4, v6);
}

id AirQualityScaleProxyRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AirQualityScaleProxyRequest.init(coder:)(a1);
}

id AirQualityScaleProxyRequest.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC798);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9467B44(0, &qword_1EB6DBDD0);
  uint64_t v10 = v1;
  uint64_t v11 = sub_1A96322D0();
  if (!v11)
  {

LABEL_6:
    swift_deallocPartialClassInstance();
    return 0;
  }
  os_log_type_t v12 = (void *)v11;
  uint64_t v13 = sub_1A9631D60();
  uint64_t v15 = v14;

  long long v16 = (uint64_t *)&v10[OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_name];
  *long long v16 = v13;
  v16[1] = v15;
  sub_1A9467B44(0, (unint64_t *)&qword_1E97ECAA0);
  uint64_t v17 = sub_1A96322D0();
  if (!v17)
  {

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  long long v18 = (void *)v17;
  uint64_t v24 = (objc_class *)ObjectType;
  uint64_t v19 = sub_1A962E680();
  unint64_t v21 = v20;

  sub_1A962E2E0();
  swift_allocObject();
  sub_1A962E2D0();
  sub_1A959E7D8((unint64_t *)&unk_1E97EC7B0);
  sub_1A962E2C0();
  swift_release();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  sub_1A959E87C((uint64_t)v6, (uint64_t)v9);
  sub_1A95119A0((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC13WeatherDaemon27AirQualityScaleProxyRequest_options]);

  v25.receiver = v10;
  v25.super_class = v24;
  id v23 = objc_msgSendSuper2(&v25, sel_init);
  sub_1A9466028(v19, v21);

  sub_1A959E148((uint64_t)v9);
  return v23;
}

id AirQualityScaleProxyRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AirQualityScaleProxyRequest.init()()
{
}

id AirQualityScaleProxyRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A95A9280()
{
  return type metadata accessor for AirQualityScaleProxyRequest();
}

uint64_t type metadata accessor for AirQualityScaleProxyRequest()
{
  uint64_t result = qword_1E97ECB00;
  if (!qword_1E97ECB00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A95A92D0()
{
  uint64_t result = type metadata accessor for WeatherDataRequestOptions();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AirQualityScaleProxyRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AirQualityScaleProxyRequest);
}

uint64_t dispatch thunk of AirQualityScaleProxyRequest.__allocating_init(name:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AirQualityScaleProxyRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t ExtremaReducer.reduce(accumulator:a:b:c:d:time1:time2:useMonotone:)(uint64_t a1, uint64_t a2, double *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v16 = sub_1A962E810();
  uint64_t v33 = *(void *)(v16 - 8);
  uint64_t v34 = v16;
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ExtremaResult();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (uint64_t *)((char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v22 = a8;
  id v23 = v35;
  sub_1A95A96C0(a2, a3, a4, a5, a6, a7, v22, v21);
  double v24 = *(double *)v21;
  if ((~*v21 & 0x7FF0000000000000) != 0 || (*v21 & 0xFFFFFFFFFFFFFLL) == 0)
  {
    uint64_t v26 = (void (**)(void, void, void))v33;
    uint64_t v25 = v34;
    uint64_t v27 = (int *)v32;
    if (*(double *)(a1 + 16) < v24)
    {
      *(double *)(a1 + 16) = v24;
      id v23 = (char *)v21 + v27[5];
      uint64_t v28 = a1 + OBJC_IVAR____TtC13WeatherDaemon18ExtremaAccumulator_maxDate;
      swift_beginAccess();
      ((void (**)(uint64_t, char *, uint64_t))v26)[3](v28, v23, v25);
      swift_endAccess();
    }
  }
  else
  {
    *(void *)(a1 + 16) = 0x7FF8000000000000;
    sub_1A962E6D0();
    OUTLINED_FUNCTION_0_39();
    uint64_t v26 = (void (**)(void, void, void))v33;
    uint64_t v25 = v34;
    (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v23, v18, v34);
    swift_endAccess();
    uint64_t v27 = (int *)v32;
  }
  double v29 = *(double *)((char *)v21 + v27[6]);
  if ((~*(void *)&v29 & 0x7FF0000000000000) != 0 || (*(void *)&v29 & 0xFFFFFFFFFFFFFLL) == 0)
  {
    if (v29 >= *(double *)(a1 + OBJC_IVAR____TtC13WeatherDaemon18ExtremaAccumulator_minValue))
    {
      sub_1A95AA8B4((uint64_t)v21, (void (*)(void))type metadata accessor for ExtremaResult);
      return swift_retain();
    }
    *(double *)(a1 + OBJC_IVAR____TtC13WeatherDaemon18ExtremaAccumulator_minValue) = v29;
    ((void (**)(char *, char *, uint64_t))v26)[2](v18, (char *)v21 + v27[7], v25);
  }
  else
  {
    *(void *)(a1 + OBJC_IVAR____TtC13WeatherDaemon18ExtremaAccumulator_minValue) = 0x7FF8000000000000;
    sub_1A962E6D0();
  }
  sub_1A95AA8B4((uint64_t)v21, (void (*)(void))type metadata accessor for ExtremaResult);
  OUTLINED_FUNCTION_0_39();
  ((void (**)(char *, char *, uint64_t))v26)[5](v23, v18, v25);
  swift_endAccess();
  return swift_retain();
}

uint64_t sub_1A95A96C0@<X0>(uint64_t a1@<X0>, double *a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  int v154 = a7;
  uint64_t v153 = a6;
  uint64_t v152 = a5;
  uint64_t v161 = a4;
  char v160 = a3;
  uint64_t v159 = a2;
  int v155 = a8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA720);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v149 = (double *)((char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v147 = (double *)((char *)&v139 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v143 = (uint64_t)&v139 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v139 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v139 - v19;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)&v139 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v142 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v139 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v139 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v139 - v33;
  uint64_t v35 = sub_1A962E810();
  unint64_t v36 = *(char **)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v150 = (char *)&v139 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v148 = (char *)&v139 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v156 = (char *)&v139 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v157 = (char *)&v139 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v141 = (char *)&v139 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v140 = (char *)&v139 - v47;
  MEMORY[0x1F4188790](v48);
  unint64_t v146 = (char *)&v139 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v151 = (void (**)(char *, char *, uint64_t))((char *)&v139 - v51);
  MEMORY[0x1F4188790](v52);
  int v145 = (char *)&v139 - v53;
  MEMORY[0x1F4188790](v54);
  os_log_t v144 = (os_log_t)((char *)&v139 - v55);
  MEMORY[0x1F4188790](v56);
  uint64_t v165 = (char *)&v139 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v166 = (char *)&v139 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v164 = (char *)&v139 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v163 = (char *)&v139 - v63;
  uint64_t v158 = a1;
  sub_1A95AA84C(a1, (uint64_t)v23);
  uint64_t v64 = type metadata accessor for InterpolationElement();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v64);
  uint64_t v162 = v64;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A944C3D0((uint64_t)v23, &qword_1EB6DA720);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 1, 1, v35);
LABEL_4:
    sub_1A962E6D0();
    sub_1A944C3D0((uint64_t)v34, &qword_1EB6DE3A0);
    uint64_t v67 = (void (*)(char *, char *, uint64_t))*((void *)v36 + 2);
    goto LABEL_6;
  }
  uint64_t v66 = &v23[*(int *)(v64 + 20)];
  uint64_t v67 = (void (*)(char *, char *, uint64_t))*((void *)v36 + 2);
  v67(v34, v66, v35);
  sub_1A95AA8B4((uint64_t)v23, (void (*)(void))type metadata accessor for InterpolationElement);
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v35);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35) == 1) {
    goto LABEL_4;
  }
  (*((void (**)(char *, char *, uint64_t))v36 + 4))(v163, v34, v35);
LABEL_6:
  uint64_t v68 = (void (**)(char *, char *, uint64_t))v36;
  uint64_t v69 = v162;
  v67(v164, (char *)v159 + *(int *)(v162 + 20), v35);
  v67(v166, (char *)v160 + *(int *)(v69 + 20), v35);
  uint64_t v70 = v161;
  sub_1A95AA84C(v161, (uint64_t)v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v69) == 1)
  {
    sub_1A944C3D0((uint64_t)v20, &qword_1EB6DA720);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v35);
LABEL_9:
    sub_1A962E6E0();
    sub_1A944C3D0((uint64_t)v31, &qword_1EB6DE3A0);
    goto LABEL_11;
  }
  v67(v31, &v20[*(int *)(v69 + 20)], v35);
  sub_1A95AA8B4((uint64_t)v20, (void (*)(void))type metadata accessor for InterpolationElement);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v35);
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v35) == 1) {
    goto LABEL_9;
  }
  v68[4](v165, v31, v35);
LABEL_11:
  uint64_t v71 = v145;
  sub_1A95AA84C(v158, (uint64_t)v17);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v69) == 1)
  {
    sub_1A944C3D0((uint64_t)v17, &qword_1EB6DA720);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v35);
  }
  else
  {
    v67(v28, &v17[*(int *)(v69 + 20)], v35);
    sub_1A95AA8B4((uint64_t)v17, (void (*)(void))type metadata accessor for InterpolationElement);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v35);
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v35) != 1)
    {
      sub_1A944C3D0((uint64_t)v28, &qword_1EB6DE3A0);
      goto LABEL_20;
    }
  }
  sub_1A944C3D0((uint64_t)v28, &qword_1EB6DE3A0);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_1A96317F0();
  __swift_project_value_buffer(v72, (uint64_t)qword_1EB6EB630);
  unint64_t v73 = sub_1A96317D0();
  os_log_type_t v74 = sub_1A9632230();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    _os_log_impl(&dword_1A9410000, v73, v74, "ExtremaReducer: aDate is nil", v75, 2u);
    uint64_t v76 = v75;
    uint64_t v69 = v162;
    MEMORY[0x1AD0F7300](v76, -1, -1);
  }

LABEL_20:
  uint64_t v77 = (uint64_t)v142;
  uint64_t v78 = v143;
  sub_1A95AA84C(v70, v143);
  if (__swift_getEnumTagSinglePayload(v78, 1, v69) == 1)
  {
    sub_1A944C3D0(v78, &qword_1EB6DA720);
    __swift_storeEnumTagSinglePayload(v77, 1, 1, v35);
    os_log_t v79 = v144;
  }
  else
  {
    v67((char *)v77, (char *)(v78 + *(int *)(v69 + 20)), v35);
    sub_1A95AA8B4(v78, (void (*)(void))type metadata accessor for InterpolationElement);
    __swift_storeEnumTagSinglePayload(v77, 0, 1, v35);
    int v80 = __swift_getEnumTagSinglePayload(v77, 1, v35);
    os_log_t v79 = v144;
    if (v80 != 1)
    {
      sub_1A944C3D0(v77, &qword_1EB6DE3A0);
      goto LABEL_29;
    }
  }
  sub_1A944C3D0(v77, &qword_1EB6DE3A0);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v81 = sub_1A96317F0();
  __swift_project_value_buffer(v81, (uint64_t)qword_1EB6EB630);
  uint64_t v82 = sub_1A96317D0();
  os_log_type_t v83 = sub_1A9632230();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v84 = 0;
    _os_log_impl(&dword_1A9410000, v82, v83, "ExtremaReducer: dDate is nil", v84, 2u);
    MEMORY[0x1AD0F7300](v84, -1, -1);
  }

LABEL_29:
  uint64_t v85 = v164;
  char v86 = sub_1A962E740();
  v67((char *)v79, v85, v35);
  v67(v71, v166, v35);
  if (v86) {
    char v87 = 1;
  }
  else {
    char v87 = sub_1A962E740();
  }
  uint64_t v88 = (char *)v151;
  uint64_t v151 = v68;
  uint64_t v89 = v68[1];
  ((void (*)(char *, uint64_t))v89)(v71, v35);
  ((void (*)(os_log_t, uint64_t))v89)(v79, v35);
  v67(v88, v166, v35);
  uint64_t v90 = v146;
  v67(v146, v165, v35);
  if (v87)
  {
    ((void (*)(char *, uint64_t))v89)(v90, v35);
    ((void (*)(char *, uint64_t))v89)(v88, v35);
  }
  else
  {
    char v91 = sub_1A962E740();
    ((void (*)(char *, uint64_t))v89)(v90, v35);
    ((void (*)(char *, uint64_t))v89)(v88, v35);
    if ((v91 & 1) == 0) {
      goto LABEL_40;
    }
  }
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_1A96317F0();
  __swift_project_value_buffer(v92, (uint64_t)qword_1EB6EB630);
  int v93 = v140;
  v67(v140, v163, v35);
  uint64_t v94 = v141;
  v67(v141, v164, v35);
  v67(v157, v166, v35);
  uint64_t v95 = v156;
  v67(v156, v165, v35);
  uint64_t v96 = sub_1A96317D0();
  os_log_type_t v97 = sub_1A9632220();
  int v98 = v97;
  if (os_log_type_enabled(v96, v97))
  {
    uint64_t v99 = swift_slowAlloc();
    LODWORD(v145) = v98;
    uint64_t v100 = v99;
    unint64_t v146 = (char *)swift_slowAlloc();
    v168[0] = (uint64_t)v146;
    *(_DWORD *)uint64_t v100 = 136315906;
    sub_1A952C930();
    os_log_t v144 = v96;
    uint64_t v101 = sub_1A96327B0();
    uint64_t v167 = sub_1A945C1DC(v101, v102, v168);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v89)(v93, v35);
    *(_WORD *)(v100 + 12) = 2080;
    uint64_t v103 = sub_1A96327B0();
    uint64_t v167 = sub_1A945C1DC(v103, v104, v168);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v89)(v94, v35);
    *(_WORD *)(v100 + 22) = 2080;
    uint64_t v105 = v157;
    uint64_t v106 = sub_1A96327B0();
    uint64_t v167 = sub_1A945C1DC(v106, v107, v168);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v89)(v105, v35);
    *(_WORD *)(v100 + 32) = 2080;
    uint64_t v108 = v156;
    uint64_t v109 = sub_1A96327B0();
    uint64_t v167 = sub_1A945C1DC(v109, v110, v168);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v89)(v108, v35);
    os_log_t v111 = v144;
    _os_log_impl(&dword_1A9410000, v144, (os_log_type_t)v145, "ExtremaReducer found data in incorrect date order with aDate:%s, bDate:%s, cDate:%s, dDate:%s", (uint8_t *)v100, 0x2Au);
    uint64_t v112 = v146;
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v112, -1, -1);
    MEMORY[0x1AD0F7300](v100, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v89)(v93, v35);
    ((void (*)(char *, uint64_t))v89)(v94, v35);
    ((void (*)(char *, uint64_t))v89)(v157, v35);
    ((void (*)(char *, uint64_t))v89)(v95, v35);
  }
LABEL_40:
  sub_1A962E7B0();
  double v114 = v113;
  uint64_t v115 = v147;
  sub_1A95AA84C(v158, (uint64_t)v147);
  if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v162) == 1)
  {
    sub_1A944C3D0((uint64_t)v115, &qword_1EB6DA720);
    double v116 = NAN;
  }
  else
  {
    double v116 = *v115;
    sub_1A95AA8B4((uint64_t)v115, (void (*)(void))type metadata accessor for InterpolationElement);
  }
  uint64_t v117 = v149;
  uint64_t v118 = v161;
  sub_1A962E7B0();
  double v120 = v119;
  double v121 = *v159;
  sub_1A962E7B0();
  double v123 = v122;
  double v124 = *v160;
  sub_1A962E7B0();
  double v126 = v125;
  sub_1A95AA84C(v118, (uint64_t)v117);
  if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v162) == 1)
  {
    sub_1A944C3D0((uint64_t)v117, &qword_1EB6DA720);
    double v127 = NAN;
  }
  else
  {
    double v127 = *v117;
    sub_1A95AA8B4((uint64_t)v117, (void (*)(void))type metadata accessor for InterpolationElement);
  }
  sub_1A962E7B0();
  double v129 = v128;
  sub_1A962E7B0();
  static CubicInterpolationMath.cubicExtrema(ax:ay:bx:by:cx:cy:dx:dy:x1:x2:useMonotone:)(v129, 0, v130, 0, v154 & 1, (uint64_t)v168, v114, v116, v120, v121, v123, v124, v126, v127);
  uint64_t v131 = v168[2];
  uint64_t v132 = v168[5];
  uint64_t v133 = v148;
  sub_1A962E7A0();
  uint64_t v134 = v150;
  sub_1A962E7A0();
  ((void (*)(char *, uint64_t))v89)(v165, v35);
  ((void (*)(char *, uint64_t))v89)(v166, v35);
  ((void (*)(char *, uint64_t))v89)(v164, v35);
  ((void (*)(char *, uint64_t))v89)(v163, v35);
  uint64_t v135 = v155;
  *int v155 = v131;
  uint64_t v136 = (int *)type metadata accessor for ExtremaResult();
  uint64_t v137 = v151[4];
  v137((char *)v135 + v136[5], v133, v35);
  *(uint64_t *)((char *)v135 + v136[6]) = v132;
  return ((uint64_t (*)(char *, char *, uint64_t))v137)((char *)v135 + v136[7], v134, v35);
}

uint64_t ExtremaReducer.deinit()
{
  return v0;
}

uint64_t ExtremaReducer.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1A95AA7E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>)
{
  uint64_t result = ExtremaReducer.reduce(accumulator:a:b:c:d:time1:time2:useMonotone:)(*a1, a2, a3, a4, a5, a6, a7, a8);
  *a9 = result;
  return result;
}

uint64_t type metadata accessor for ExtremaReducer()
{
  return self;
}

uint64_t method lookup function for ExtremaReducer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExtremaReducer);
}

uint64_t sub_1A95AA84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A95AA8B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

WeatherDaemon::StatisticsRequestOptions __swiftcall StatisticsRequestOptions.init(locationDecimalPrecision:)(WeatherDaemon::StatisticsRequestOptions locationDecimalPrecision)
{
  *(void *)uint64_t v1 = locationDecimalPrecision.locationDecimalPrecision.value;
  *(unsigned char *)(v1 + 8) = locationDecimalPrecision.locationDecimalPrecision.is_nil;
  return locationDecimalPrecision;
}

uint64_t getEnumTagSinglePayload for StatisticsRequestOptions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StatisticsRequestOptions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for StatisticsRequestOptions()
{
  return &type metadata for StatisticsRequestOptions;
}

uint64_t sub_1A95AA978()
{
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A96317F0();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1EB6EB630);
}

uint64_t sub_1A95AA9DC(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802CA0);
}

uint64_t sub_1A95AA9FC(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_48(a1, qword_1E9802CB8);
}

uint64_t sub_1A95AAA1C(uint64_t a1)
{
  return sub_1A9467F4C(a1, qword_1E9802CD0);
}

uint64_t sub_1A95AAA38(uint64_t a1)
{
  return OUTLINED_FUNCTION_1_48(a1, qword_1EB6EB548);
}

uint64_t sub_1A95AAA58(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802CE8);
}

uint64_t sub_1A95AAA78(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802D00);
}

uint64_t sub_1A95AAA98(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802D18);
}

uint64_t sub_1A95AAAB8(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802D30);
}

uint64_t sub_1A95AAAD8(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_40(a1, qword_1E9802D48);
}

uint64_t sub_1A95AAAF8(uint64_t a1)
{
  return sub_1A9467F4C(a1, qword_1E9802D60);
}

uint64_t WeatherRequestPeriodicRelativeRange.init(periodStart:periodEnd:periodLengths:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A962E810();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(a4, a1, v8);
  uint64_t v10 = type metadata accessor for WeatherRequestPeriodicRelativeRange();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(a4 + *(int *)(v10 + 20), a2, v8);
  *(void *)(a4 + *(int *)(v10 + 24)) = a3;
  return result;
}

uint64_t sub_1A95AABC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7453646F69726570 && a2 == 0xEB00000000747261;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E45646F69726570 && a2 == 0xE900000000000064;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x654C646F69726570 && a2 == 0xED0000736874676ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A95AAD5C(char a1)
{
  if (!a1) {
    return 0x7453646F69726570;
  }
  if (a1 == 1) {
    return 0x6E45646F69726570;
  }
  return 0x654C646F69726570;
}

uint64_t sub_1A95AADCC()
{
  return sub_1A95AAD5C(*v0);
}

uint64_t sub_1A95AADD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95AABC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95AADFC(uint64_t a1)
{
  unint64_t v2 = sub_1A95AB040();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95AAE38(uint64_t a1)
{
  unint64_t v2 = sub_1A95AB040();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherRequestPeriodicRelativeRange.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB10);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95AB040();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  OUTLINED_FUNCTION_4_30();
  if (!v1)
  {
    type metadata accessor for WeatherRequestPeriodicRelativeRange();
    OUTLINED_FUNCTION_4_30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE38);
    sub_1A95AB41C((unint64_t *)&qword_1EB6DBE40);
    sub_1A9632770();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1A95AB040()
{
  unint64_t result = qword_1E97ECB18;
  if (!qword_1E97ECB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB18);
  }
  return result;
}

uint64_t WeatherRequestPeriodicRelativeRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (char *)&v24 - v10;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB20);
  OUTLINED_FUNCTION_1();
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WeatherRequestPeriodicRelativeRange();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95AB040();
  uint64_t v31 = v14;
  uint64_t v16 = (uint64_t)v32;
  sub_1A9632950();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = a1;
  uint64_t v25 = v2;
  char v36 = 0;
  sub_1A947198C(&qword_1EB6DC8D8);
  OUTLINED_FUNCTION_2_42();
  uint64_t v17 = v29;
  uint64_t v29 = *(char **)(v27 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v29)(v25, v17, v4);
  char v35 = 1;
  OUTLINED_FUNCTION_2_42();
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v15 + 20);
  uint64_t v20 = v25;
  ((void (*)(uint64_t, char *, uint64_t))v29)(v25 + v19, v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE38);
  char v34 = 2;
  sub_1A95AB41C(&qword_1E97ECB28);
  sub_1A9632680();
  uint64_t v21 = OUTLINED_FUNCTION_5_38();
  v22(v21);
  *(void *)(v20 + *(int *)(v18 + 24)) = v33;
  sub_1A95AB480(v20, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1A95AB4E4(v20);
}

uint64_t sub_1A95AB41C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DBE38);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95AB480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherRequestPeriodicRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A95AB4E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherRequestPeriodicRelativeRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A95AB540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestPeriodicRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A95AB558(void *a1)
{
  return WeatherRequestPeriodicRelativeRange.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherRequestPeriodicRelativeRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    char v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    sub_1A9631510();
  }
  return a1;
}

uint64_t destroy for WeatherRequestPeriodicRelativeRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WeatherRequestPeriodicRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  sub_1A9631510();
  return a1;
}

uint64_t assignWithCopy for WeatherRequestPeriodicRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WeatherRequestPeriodicRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for WeatherRequestPeriodicRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A95AB9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_1A95ABA40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

unsigned char *storeEnumTagSinglePayload for WeatherRequestPeriodicRelativeRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95ABB94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestPeriodicRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestPeriodicRelativeRange.CodingKeys;
}

unint64_t sub_1A95ABBD0()
{
  unint64_t result = qword_1E97ECB30;
  if (!qword_1E97ECB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB30);
  }
  return result;
}

unint64_t sub_1A95ABC20()
{
  unint64_t result = qword_1E97ECB38;
  if (!qword_1E97ECB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB38);
  }
  return result;
}

unint64_t sub_1A95ABC70()
{
  unint64_t result = qword_1E97ECB40;
  if (!qword_1E97ECB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB40);
  }
  return result;
}

uint64_t HistoricalFacts.facts.getter()
{
  return sub_1A9631510();
}

uint64_t HistoricalFacts.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9632940();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB48);
    sub_1A95ABED4(&qword_1E97ECB50, &qword_1E97ECB58);
    sub_1A9632810();
    uint64_t v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t HistoricalFacts.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9632960();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB48);
  sub_1A95ABED4(&qword_1E97ECB60, &qword_1E97ECB68);
  sub_1A9632820();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1A95ABED4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97ECB48);
    sub_1A95ABF54(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95ABF54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HistoricalFact();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95ABF98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return HistoricalFacts.init(from:)(a1, a2);
}

uint64_t sub_1A95ABFB0(void *a1)
{
  return HistoricalFacts.encode(to:)(a1);
}

uint64_t sub_1A95ABFC8@<X0>(uint64_t *a1@<X8>)
{
  return static HistoricalFacts.read(from:)(a1);
}

uint64_t sub_1A95ABFE0()
{
  return HistoricalFacts.write(to:)();
}

uint64_t DaySummary.date.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t DaySummary.daysSince1970.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DaySummary.temperatureMin.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t DaySummary.temperatureMax.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t DaySummary.precipitationAmount.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t DaySummary.snowfallAmount.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t static DaySummary.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  double v6 = *(double *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  double v8 = *(double *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  double v10 = *(double *)(a1 + 80);
  char v11 = *(unsigned char *)(a1 + 88);
  uint64_t v12 = *(void *)(a2 + 16);
  int v13 = *(unsigned __int8 *)(a2 + 24);
  double v14 = *(double *)(a2 + 32);
  int v15 = *(unsigned __int8 *)(a2 + 40);
  double v16 = *(double *)(a2 + 48);
  int v17 = *(unsigned __int8 *)(a2 + 56);
  double v18 = *(double *)(a2 + 64);
  int v19 = *(unsigned __int8 *)(a2 + 72);
  double v20 = *(double *)(a2 + 80);
  BOOL v21 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  char v22 = *(unsigned char *)(a2 + 88);
  if (v21
    || (char v32 = *(unsigned char *)(a1 + 24),
        uint64_t v31 = *(void *)(a2 + 16),
        char v23 = sub_1A96327D0(),
        uint64_t v12 = v31,
        char v3 = v32,
        char v24 = v23,
        uint64_t result = 0,
        (v24 & 1) != 0))
  {
    if (v3)
    {
      if (!v13) {
        return 0;
      }
    }
    else
    {
      if (v2 == v12) {
        char v26 = v13;
      }
      else {
        char v26 = 1;
      }
      if (v26) {
        return 0;
      }
    }
    if (v5)
    {
      if (!v15) {
        return 0;
      }
    }
    else
    {
      if (v4 == v14) {
        char v27 = v15;
      }
      else {
        char v27 = 1;
      }
      if (v27) {
        return 0;
      }
    }
    if (v7)
    {
      if (!v17) {
        return 0;
      }
    }
    else
    {
      if (v6 == v16) {
        char v28 = v17;
      }
      else {
        char v28 = 1;
      }
      if (v28) {
        return 0;
      }
    }
    if (v9)
    {
      if (!v19) {
        return 0;
      }
    }
    else
    {
      if (v8 == v18) {
        char v29 = v19;
      }
      else {
        char v29 = 1;
      }
      if (v29) {
        return 0;
      }
    }
    if (v11)
    {
      if ((v22 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v10 == v20) {
        char v30 = v22;
      }
      else {
        char v30 = 1;
      }
      if (v30) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A95AC1D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x636E695373796164 && a2 == 0xED00003037393165;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x74617265706D6574 && a2 == 0xEE006E694D657275;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74617265706D6574 && a2 == 0xEE0078614D657275;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9647520 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6C6C6166776F6E73 && a2 == 0xEE00746E756F6D41)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = sub_1A96327D0();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_1A95AC4BC(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636E695373796164;
      break;
    case 2:
    case 3:
      unint64_t result = 0x74617265706D6574;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x6C6C6166776F6E73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A95AC5A0()
{
  return sub_1A95AC4BC(*v0);
}

uint64_t sub_1A95AC5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95AC1D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95AC5D0(uint64_t a1)
{
  unint64_t v2 = sub_1A95AC864();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95AC60C(uint64_t a1)
{
  unint64_t v2 = sub_1A95AC864();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DaySummary.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB70);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v1 + 16);
  int v21 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 32);
  int v19 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v18 = *(void *)(v1 + 48);
  int v9 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  int v16 = *(unsigned __int8 *)(v1 + 72);
  int v17 = v9;
  uint64_t v14 = *(void *)(v1 + 80);
  uint64_t v15 = v10;
  v13[1] = *(unsigned __int8 *)(v1 + 88);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95AC864();
  sub_1A9632970();
  char v29 = 0;
  uint64_t v11 = v23;
  sub_1A9632730();
  if (!v11)
  {
    char v28 = 1;
    sub_1A9632710();
    char v27 = 2;
    OUTLINED_FUNCTION_2_43();
    char v26 = 3;
    OUTLINED_FUNCTION_2_43();
    char v25 = 4;
    OUTLINED_FUNCTION_2_43();
    char v24 = 5;
    OUTLINED_FUNCTION_2_43();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1A95AC864()
{
  unint64_t result = qword_1E97ECB78;
  if (!qword_1E97ECB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB78);
  }
  return result;
}

uint64_t DaySummary.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECB80);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95AC864();
  sub_1A9632950();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33[2] = 0;
  uint64_t v7 = sub_1A9632640();
  uint64_t v9 = v8;
  v33[1] = 1;
  sub_1A9631510();
  uint64_t v10 = sub_1A9632620();
  char v28 = v11;
  uint64_t v29 = v10;
  v33[0] = 2;
  uint64_t v12 = OUTLINED_FUNCTION_1_49((uint64_t)v33);
  char v26 = v13;
  uint64_t v27 = v12;
  char v32 = 3;
  uint64_t v14 = OUTLINED_FUNCTION_1_49((uint64_t)&v32);
  char v24 = v15;
  uint64_t v25 = v14;
  char v31 = 4;
  uint64_t v16 = OUTLINED_FUNCTION_1_49((uint64_t)&v31);
  char v22 = v17;
  uint64_t v23 = v16;
  char v30 = 5;
  uint64_t v18 = OUTLINED_FUNCTION_1_49((uint64_t)&v30);
  char v20 = v19;
  OUTLINED_FUNCTION_3_36();
  v21();
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v29;
  *(unsigned char *)(a2 + 24) = v28 & 1;
  *(void *)(a2 + 32) = v27;
  *(unsigned char *)(a2 + 40) = v26 & 1;
  *(void *)(a2 + 48) = v25;
  *(unsigned char *)(a2 + 56) = v24 & 1;
  *(void *)(a2 + 64) = v23;
  *(unsigned char *)(a2 + 72) = v22 & 1;
  *(void *)(a2 + 80) = v18;
  *(unsigned char *)(a2 + 88) = v20 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A95ACB60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DaySummary.init(from:)(a1, a2);
}

uint64_t sub_1A95ACB78(void *a1)
{
  return DaySummary.encode(to:)(a1);
}

uint64_t sub_1A95ACB94@<X0>(uint64_t a1@<X8>)
{
  return static DaySummary.read(from:)(a1);
}

uint64_t sub_1A95ACBAC()
{
  return DaySummary.write(to:)();
}

uint64_t initializeWithCopy for DaySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_1A9631510();
  return a1;
}

uint64_t assignWithCopy for DaySummary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  return a1;
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t assignWithTake for DaySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DaySummary(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 89))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DaySummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DaySummary()
{
  return &type metadata for DaySummary;
}

unsigned char *storeEnumTagSinglePayload for DaySummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95ACEE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DaySummary.CodingKeys()
{
  return &type metadata for DaySummary.CodingKeys;
}

unint64_t sub_1A95ACF24()
{
  unint64_t result = qword_1E97ECB88;
  if (!qword_1E97ECB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB88);
  }
  return result;
}

unint64_t sub_1A95ACF74()
{
  unint64_t result = qword_1E97ECB90;
  if (!qword_1E97ECB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB90);
  }
  return result;
}

unint64_t sub_1A95ACFC4()
{
  unint64_t result = qword_1E97ECB98;
  if (!qword_1E97ECB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECB98);
  }
  return result;
}

WeatherDaemon::Certainty_optional __swiftcall Certainty.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t Certainty.rawValue.getter()
{
  uint64_t result = 0x646576726573626FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796C656B696CLL;
      break;
    case 2:
      uint64_t result = 0x656C626973736F70;
      break;
    case 3:
      uint64_t result = 0x796C656B696C6E75;
      break;
    case 4:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95AD10C(unsigned __int8 *a1, char *a2)
{
  return sub_1A950AC7C(*a1, *a2);
}

unint64_t sub_1A95AD11C()
{
  unint64_t result = qword_1E97ECBA0;
  if (!qword_1E97ECBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBA0);
  }
  return result;
}

uint64_t sub_1A95AD168()
{
  return sub_1A95C9400(*v0);
}

uint64_t sub_1A95AD170(uint64_t a1)
{
  return sub_1A94ABFF8(a1, *v1);
}

uint64_t sub_1A95AD178()
{
  return sub_1A94ADFFC();
}

WeatherDaemon::Certainty_optional sub_1A95AD180(Swift::String *a1)
{
  return Certainty.init(rawValue:)(*a1);
}

uint64_t sub_1A95AD18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Certainty.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A95AD1B4()
{
  return sub_1A9632000();
}

uint64_t sub_1A95AD214()
{
  return sub_1A9631FB0();
}

void sub_1A95AD264(unsigned char *a1@<X8>)
{
}

uint64_t sub_1A95AD27C()
{
  return Certainty.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for Certainty(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95AD360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Certainty()
{
  return &type metadata for Certainty;
}

unint64_t sub_1A95AD398()
{
  unint64_t result = qword_1EB6DB050;
  if (!qword_1EB6DB050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB050);
  }
  return result;
}

uint64_t dispatch thunk of XPCActivityHandlerType.run(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of XPCActivityHandlerType.verify(schedule:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of GeocodeWeatherServiceType.resolveLocationInfo(options:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

WeatherDaemon::PollutantUnits_optional __swiftcall PollutantUnits.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1A9632580();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t PollutantUnits.rawValue.getter()
{
  if (*v0) {
    return 0x6172676F7263696DLL;
  }
  else {
    return 6451312;
  }
}

uint64_t sub_1A95AD4E4(char *a1, char *a2)
{
  return sub_1A950BA1C(*a1, *a2);
}

unint64_t sub_1A95AD4F4()
{
  unint64_t result = qword_1E97ECBA8;
  if (!qword_1E97ECBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBA8);
  }
  return result;
}

uint64_t sub_1A95AD540()
{
  return sub_1A95C9418();
}

uint64_t sub_1A95AD548()
{
  return sub_1A94AC8FC();
}

uint64_t sub_1A95AD550()
{
  return sub_1A94ADBE0();
}

WeatherDaemon::PollutantUnits_optional sub_1A95AD558(Swift::String *a1)
{
  return PollutantUnits.init(rawValue:)(*a1);
}

uint64_t sub_1A95AD564@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PollutantUnits.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A95AD58C()
{
  return sub_1A9632000();
}

uint64_t sub_1A95AD5EC()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A95AD63C@<X0>(char *a1@<X8>)
{
  return static PollutantUnits.read(from:)(a1);
}

uint64_t sub_1A95AD654()
{
  return PollutantUnits.write(to:)();
}

unsigned char *storeEnumTagSinglePayload for PollutantUnits(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95AD738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1A95AD760()
{
  unint64_t result = qword_1EB6DC480;
  if (!qword_1EB6DC480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC480);
  }
  return result;
}

void __swiftcall DayWeatherStatistics.init(day:temperatureRange:precipitation:)(WeatherDaemon::DayWeatherStatistics *__return_ptr retstr, Swift::Int day, WeatherDaemon::TemperatureRange_optional temperatureRange, WeatherDaemon::PrecipitationAmount_optional precipitation)
{
  char v4 = *(unsigned char *)(*(void *)&temperatureRange.is_nil + 16);
  Swift::Double v5 = *(double *)(*(void *)&precipitation.is_nil + 16);
  char v6 = *(unsigned char *)(*(void *)&precipitation.is_nil + 24);
  retstr->day = day;
  retstr->temperatureRange.value = **(WeatherDaemon::TemperatureRange **)&temperatureRange.is_nil;
  retstr->temperatureRange.is_nil = v4;
  *(_OWORD *)&retstr->precipitation.value.probability = **(_OWORD **)&precipitation.is_nil;
  retstr->precipitation.value.averageSnowfallAmount = v5;
  retstr->precipitation.is_nil = v6;
}

uint64_t sub_1A95AD7DC(uint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 1:
      if ((unint64_t)(result - 32) >= 0xFFFFFFFFFFFFFFE1) {
        return result;
      }
      return 0;
    case 2:
      uint64_t v2 = result + 31;
      if (!__OFADD__(result, 31))
      {
        if ((unint64_t)(result - 30) >= 0xFFFFFFFFFFFFFFE3) {
          return v2;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_38;
    case 3:
      uint64_t v2 = result + 60;
      if (!__OFADD__(result, 60)) {
        goto LABEL_29;
      }
      __break(1u);
LABEL_10:
      uint64_t v2 = result + 91;
      if (!__OFADD__(result, 91)) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_13:
      uint64_t v2 = result + 121;
      if (!__OFADD__(result, 121)) {
        goto LABEL_29;
      }
      __break(1u);
LABEL_16:
      uint64_t v2 = result + 152;
      if (!__OFADD__(result, 152)) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_19:
      uint64_t v2 = result + 182;
      if (!__OFADD__(result, 182)) {
        goto LABEL_29;
      }
      __break(1u);
LABEL_22:
      uint64_t v2 = result + 213;
      if (!__OFADD__(result, 213)) {
        goto LABEL_29;
      }
      __break(1u);
LABEL_25:
      uint64_t v2 = result + 244;
      if (__OFADD__(result, 244))
      {
        __break(1u);
LABEL_28:
        uint64_t v2 = result + 274;
        if (__OFADD__(result, 274))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          JUMPOUT(0x1A95AD8F0);
        }
LABEL_29:
        if ((unint64_t)(result - 32) < 0xFFFFFFFFFFFFFFE1) {
          return 0;
        }
      }
      else
      {
LABEL_32:
        if ((unint64_t)(result - 31) < 0xFFFFFFFFFFFFFFE2) {
          return 0;
        }
      }
      return v2;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_13;
    case 6:
      goto LABEL_16;
    case 7:
      goto LABEL_19;
    case 8:
      goto LABEL_22;
    case 9:
      goto LABEL_25;
    case 10:
      goto LABEL_28;
    case 11:
      uint64_t v2 = result + 305;
      if (!__OFADD__(result, 305)) {
        goto LABEL_32;
      }
      goto LABEL_39;
    case 12:
      uint64_t v2 = result + 335;
      if (__OFADD__(result, 335)) {
        goto LABEL_40;
      }
      if ((unint64_t)(result - 32) > 0xFFFFFFFFFFFFFFE0) {
        return v2;
      }
      return 0;
    default:
      return 0;
  }
}

uint64_t DayWeatherStatistics.day.getter()
{
  return *(void *)v0;
}

__n128 DayWeatherStatistics.temperatureRange.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 24);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 DayWeatherStatistics.precipitation.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[3].n128_u64[0];
  unsigned __int8 v3 = v1[3].n128_u8[8];
  __n128 result = v1[2];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t DayWeatherStatistics.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v36 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECBB0);
  OUTLINED_FUNCTION_1();
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECBB8);
  OUTLINED_FUNCTION_1();
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95ADCF0();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v35 = v3;
    uint64_t v14 = v38;
    LOBYTE(v39) = 0;
    uint64_t v15 = sub_1A9632620();
    if (v16)
    {
      uint64_t v26 = a1[3];
      char v34 = (char *)a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v26);
      sub_1A95ADD3C();
      sub_1A9632950();
      char v34 = v12;
      LOBYTE(v39) = 0;
      uint64_t v27 = OUTLINED_FUNCTION_4_31();
      LOBYTE(v39) = 1;
      uint64_t v28 = OUTLINED_FUNCTION_4_31();
      uint64_t v29 = v37;
      uint64_t v30 = sub_1A95AD7DC(v27, v28);
      if (v31)
      {
        LOBYTE(v39) = 0;
        sub_1A96324A0();
        swift_allocError();
        sub_1A95ADD88();
        uint64_t v32 = v35;
        sub_1A9632480();
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v5);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v8);
        return __swift_destroy_boxed_opaque_existential_1(v13);
      }
      uint64_t v18 = v30;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v35, v5);
      uint64_t v12 = v34;
    }
    else
    {
      uint64_t v18 = v15;
    }
    char v42 = 1;
    sub_1A95A1F88();
    OUTLINED_FUNCTION_3_37();
    sub_1A9632630();
    long long v19 = v39;
    char v20 = v12;
    char v21 = v40;
    char v42 = 2;
    sub_1A95A1FD4();
    OUTLINED_FUNCTION_3_37();
    sub_1A9632630();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v8);
    uint64_t v22 = v40;
    char v23 = v41;
    long long v24 = v39;
    uint64_t v25 = v36;
    *char v36 = v18;
    *(_OWORD *)(v25 + 1) = v19;
    *((unsigned char *)v25 + 24) = v21;
    *((_OWORD *)v25 + 2) = v24;
    v25[6] = v22;
    *((unsigned char *)v25 + 56) = v23;
  }
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

unint64_t sub_1A95ADCF0()
{
  unint64_t result = qword_1E97ECBC0;
  if (!qword_1E97ECBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBC0);
  }
  return result;
}

unint64_t sub_1A95ADD3C()
{
  unint64_t result = qword_1E97ECBC8;
  if (!qword_1E97ECBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBC8);
  }
  return result;
}

unint64_t sub_1A95ADD88()
{
  unint64_t result = qword_1E97ECBD0;
  if (!qword_1E97ECBD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97ECBB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBD0);
  }
  return result;
}

uint64_t sub_1A95ADDDC()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A95ADE2C(char a1)
{
  if (!a1) {
    return 7954788;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x7469706963657270;
}

uint64_t sub_1A95ADE8C()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A95ADEE4(unsigned __int8 *a1, char *a2)
{
  return sub_1A950C8AC(*a1, *a2);
}

uint64_t sub_1A95ADEF0()
{
  return sub_1A95C9424();
}

uint64_t sub_1A95ADEF8(uint64_t a1)
{
  return sub_1A94AD26C(a1, *v1);
}

uint64_t sub_1A95ADF00()
{
  return sub_1A94AD580();
}

uint64_t sub_1A95ADF08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95ADDDC();
  *a1 = result;
  return result;
}

uint64_t sub_1A95ADF38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95ADE2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95ADF64()
{
  return sub_1A95ADE2C(*v0);
}

uint64_t sub_1A95ADF6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95ADE28();
  *a1 = result;
  return result;
}

uint64_t sub_1A95ADF94(uint64_t a1)
{
  unint64_t v2 = sub_1A95ADCF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95ADFD0(uint64_t a1)
{
  unint64_t v2 = sub_1A95ADCF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A95AE00C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95ADE8C();
  *a1 = result;
  return result;
}

uint64_t sub_1A95AE03C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95ADEE0();
  *a1 = result;
  return result;
}

uint64_t sub_1A95AE064(uint64_t a1)
{
  unint64_t v2 = sub_1A95ADD3C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95AE0A0(uint64_t a1)
{
  unint64_t v2 = sub_1A95ADD3C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static DayWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  double v3 = *(double *)(a1 + 32);
  double v4 = *(double *)(a1 + 40);
  double v5 = *(double *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
LABEL_11:
    if (v6)
    {
      if ((*(unsigned char *)(a2 + 56) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(unsigned char *)(a2 + 56)) {
        return 0;
      }
      BOOL v9 = v3 == *(double *)(a2 + 32) && v4 == *(double *)(a2 + 40);
      if (!v9 || v5 != *(double *)(a2 + 48)) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  if ((*(unsigned char *)(a2 + 24) & 1) == 0
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16))
  {
    goto LABEL_11;
  }
  return result;
}

uint64_t DayWeatherStatistics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECBD8);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95ADCF0();
  sub_1A9632970();
  sub_1A9632760();
  if (!v1)
  {
    sub_1A95A1D38();
    OUTLINED_FUNCTION_2_39();
    sub_1A95A1D84();
    OUTLINED_FUNCTION_2_39();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1A95AE30C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DayWeatherStatistics.init(from:)(a1, a2);
}

uint64_t sub_1A95AE324(void *a1)
{
  return DayWeatherStatistics.encode(to:)(a1);
}

uint64_t sub_1A95AE340()
{
  return static DayWeatherStatistics.read(from:)();
}

void sub_1A95AE358()
{
}

ValueMetadata *type metadata accessor for DayWeatherStatistics()
{
  return &type metadata for DayWeatherStatistics;
}

unsigned char *storeEnumTagSinglePayload for DayWeatherStatistics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95AE44CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayWeatherStatistics.CodingKeys()
{
  return &type metadata for DayWeatherStatistics.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DayWeatherStatistics.LegacyCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95AE550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayWeatherStatistics.LegacyCodingKeys()
{
  return &type metadata for DayWeatherStatistics.LegacyCodingKeys;
}

unint64_t sub_1A95AE58C()
{
  unint64_t result = qword_1E97ECBE0;
  if (!qword_1E97ECBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBE0);
  }
  return result;
}

unint64_t sub_1A95AE5DC()
{
  unint64_t result = qword_1E97ECBE8;
  if (!qword_1E97ECBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBE8);
  }
  return result;
}

unint64_t sub_1A95AE62C()
{
  unint64_t result = qword_1E97ECBF0;
  if (!qword_1E97ECBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBF0);
  }
  return result;
}

unint64_t sub_1A95AE67C()
{
  unint64_t result = qword_1E97ECBF8;
  if (!qword_1E97ECBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECBF8);
  }
  return result;
}

unint64_t sub_1A95AE6CC()
{
  unint64_t result = qword_1E97ECC00;
  if (!qword_1E97ECC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC00);
  }
  return result;
}

unint64_t sub_1A95AE71C()
{
  unint64_t result = qword_1E97ECC08;
  if (!qword_1E97ECC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC08);
  }
  return result;
}

uint64_t WeatherDataResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v103 = type metadata accessor for WeatherComparisons();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v4);
  uint64_t v101 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_0();
  uint64_t v102 = type metadata accessor for WeatherChange();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v6);
  uint64_t v99 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_0();
  uint64_t v100 = type metadata accessor for TideEvents();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v8);
  os_log_type_t v97 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_0();
  uint64_t v98 = type metadata accessor for News();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v10);
  uint64_t v95 = (char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_0();
  uint64_t v96 = type metadata accessor for MarineForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_1_1();
  uint64_t v108 = v13;
  uint64_t v106 = type metadata accessor for LocationInfo();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1_1();
  uint64_t v94 = v15;
  uint64_t v105 = type metadata accessor for PeriodicForecasts();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1_1();
  uint64_t v92 = v17;
  OUTLINED_FUNCTION_16_0();
  uint64_t HourForecast = type metadata accessor for NextHourForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_1_1();
  uint64_t v91 = v19;
  uint64_t v89 = type metadata accessor for HourlyForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_1();
  uint64_t v90 = v21;
  uint64_t v87 = type metadata accessor for DailyForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_1_1();
  uint64_t v88 = v23;
  uint64_t v85 = type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_1_1();
  uint64_t v84 = v25;
  OUTLINED_FUNCTION_16_0();
  uint64_t v86 = type metadata accessor for WeatherAlerts();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_1_1();
  v83[2] = v27;
  OUTLINED_FUNCTION_16_0();
  uint64_t v28 = type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_2_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECC10);
  OUTLINED_FUNCTION_1();
  uint64_t v107 = v30;
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_6_0();
  uint64_t v32 = type metadata accessor for WeatherDataResponse();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_2();
  char v36 = (void *)(v35 - v34);
  uint64_t v37 = a1[3];
  uint64_t v109 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_1A95AF41C();
  uint64_t v38 = v110;
  sub_1A9632950();
  if (v38)
  {
    uint64_t v41 = (uint64_t)v109;
  }
  else
  {
    v83[0] = v2;
    v83[1] = v28;
    uint64_t v39 = v107;
    unint64_t v110 = v36;
    char v112 = 0;
    sub_1A95AF468();
    OUTLINED_FUNCTION_11_20();
    uint64_t v40 = v106;
    switch((char)v111)
    {
      case 1:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD618, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        uint64_t v41 = v39 + 8;
        OUTLINED_FUNCTION_5_39();
        v45();
        OUTLINED_FUNCTION_24_7();
        OUTLINED_FUNCTION_10_19(v46, v47, (void (*)(void))type metadata accessor for WeatherAlerts);
        OUTLINED_FUNCTION_7_28();
        break;
      case 2:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC920, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
        OUTLINED_FUNCTION_14_7();
        uint64_t v48 = v84;
        OUTLINED_FUNCTION_11_20();
        uint64_t v41 = v39 + 8;
        OUTLINED_FUNCTION_5_39();
        v49();
        OUTLINED_FUNCTION_24_7();
        OUTLINED_FUNCTION_13_19(v48, v50, (void (*)(void))type metadata accessor for CurrentWeather);
        break;
      case 3:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC9A0, (void (*)(uint64_t))type metadata accessor for DailyForecast);
        OUTLINED_FUNCTION_14_7();
        uint64_t v51 = v88;
        OUTLINED_FUNCTION_11_20();
        uint64_t v41 = v39 + 8;
        OUTLINED_FUNCTION_5_39();
        v52();
        OUTLINED_FUNCTION_24_7();
        OUTLINED_FUNCTION_13_19(v51, v53, (void (*)(void))type metadata accessor for DailyForecast);
        break;
      case 4:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC9C0, (void (*)(uint64_t))type metadata accessor for HourlyForecast);
        OUTLINED_FUNCTION_14_7();
        uint64_t v54 = v90;
        OUTLINED_FUNCTION_11_20();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        v55();
        OUTLINED_FUNCTION_13_19(v54, v56, (void (*)(void))type metadata accessor for HourlyForecast);
        goto LABEL_19;
      case 5:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC9C8, (void (*)(uint64_t))type metadata accessor for NextHourForecast);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v58 = v57();
        OUTLINED_FUNCTION_10_19(v58, v59, (void (*)(void))type metadata accessor for NextHourForecast);
        OUTLINED_FUNCTION_7_28();
        goto LABEL_19;
      case 6:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1E97EAC48, (void (*)(uint64_t))type metadata accessor for PeriodicForecasts);
        OUTLINED_FUNCTION_14_7();
        uint64_t v60 = v92;
        OUTLINED_FUNCTION_11_20();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        v61();
        OUTLINED_FUNCTION_13_19(v60, v62, (void (*)(void))type metadata accessor for PeriodicForecasts);
        goto LABEL_19;
      case 7:
        char v112 = 1;
        sub_1A9492950();
        OUTLINED_FUNCTION_11_20();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        v63();
        uint64_t v32 = (uint64_t)v110;
        *unint64_t v110 = v111;
        goto LABEL_19;
      case 8:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD6F0, (void (*)(uint64_t))type metadata accessor for LocationInfo);
        OUTLINED_FUNCTION_14_7();
        uint64_t v64 = v94;
        OUTLINED_FUNCTION_11_20();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        v65();
        OUTLINED_FUNCTION_13_19(v64, v66, (void (*)(void))type metadata accessor for LocationInfo);
        goto LABEL_19;
      case 9:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD250, (void (*)(uint64_t))type metadata accessor for MarineForecast);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v68 = v67();
        OUTLINED_FUNCTION_10_19(v68, v69, (void (*)(void))type metadata accessor for MarineForecast);
        OUTLINED_FUNCTION_7_28();
        goto LABEL_19;
      case 10:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD930, (void (*)(uint64_t))type metadata accessor for News);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v71 = v70();
        OUTLINED_FUNCTION_10_19(v71, v72, (void (*)(void))type metadata accessor for News);
        OUTLINED_FUNCTION_7_28();
        goto LABEL_19;
      case 11:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD1C0, (void (*)(uint64_t))type metadata accessor for TideEvents);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v74 = v73();
        OUTLINED_FUNCTION_10_19(v74, v75, (void (*)(void))type metadata accessor for TideEvents);
        OUTLINED_FUNCTION_7_28();
        goto LABEL_19;
      case 12:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC950, (void (*)(uint64_t))type metadata accessor for WeatherChange);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v77 = v76();
        OUTLINED_FUNCTION_10_19(v77, v78, (void (*)(void))type metadata accessor for WeatherChange);
        OUTLINED_FUNCTION_7_28();
        goto LABEL_19;
      case 13:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DD3F8, (void (*)(uint64_t))type metadata accessor for WeatherComparisons);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        OUTLINED_FUNCTION_9_24();
        OUTLINED_FUNCTION_2_44();
        uint64_t v81 = v80();
        OUTLINED_FUNCTION_10_19(v81, v82, (void (*)(void))type metadata accessor for WeatherComparisons);
        OUTLINED_FUNCTION_7_28();
LABEL_19:
        uint64_t v41 = (uint64_t)v109;
        break;
      default:
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC970, (void (*)(uint64_t))type metadata accessor for AirQuality);
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_4_32();
        uint64_t v41 = v39 + 8;
        OUTLINED_FUNCTION_5_39();
        v42();
        OUTLINED_FUNCTION_24_7();
        OUTLINED_FUNCTION_10_19(v43, v44, (void (*)(void))type metadata accessor for AirQuality);
        OUTLINED_FUNCTION_7_28();
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_1A944952C(v32, v40, (void (*)(void))type metadata accessor for WeatherDataResponse);
  }
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

unint64_t sub_1A95AF41C()
{
  unint64_t result = qword_1E97ECC18;
  if (!qword_1E97ECC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC18);
  }
  return result;
}

unint64_t sub_1A95AF468()
{
  unint64_t result = qword_1E97ECC20;
  if (!qword_1E97ECC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC20);
  }
  return result;
}

uint64_t WeatherDataResponse.encode(to:)(void *a1)
{
  v52[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_1();
  uint64_t v63 = v6;
  v52[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_1();
  uint64_t v62 = v8;
  v52[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1_1();
  uint64_t v61 = v10;
  v52[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_1();
  uint64_t v60 = v12;
  v52[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (uint64_t)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[6] = type metadata accessor for LocationInfo();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_1_1();
  uint64_t v58 = v16;
  v52[5] = type metadata accessor for PeriodicForecasts();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v17);
  uint64_t v57 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_1_1();
  uint64_t v56 = v20;
  v52[3] = type metadata accessor for HourlyForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v21);
  uint64_t v55 = (uint64_t)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v52[2] = type metadata accessor for DailyForecast();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_1_1();
  uint64_t v54 = v24;
  v52[1] = type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v25);
  uint64_t v53 = (uint64_t)v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_2();
  uint64_t v31 = v30 - v29;
  type metadata accessor for WeatherDataResponse();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_2();
  uint64_t v35 = (uint64_t *)(v34 - v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECC28);
  OUTLINED_FUNCTION_1();
  uint64_t v66 = v36;
  uint64_t v67 = v37;
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_2_26();
  uint64_t v38 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95AF41C();
  uint64_t v65 = v3;
  sub_1A9632970();
  sub_1A95B010C(v68, (uint64_t)v35);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v43 = v53;
      sub_1A944952C((uint64_t)v35, v53, (void (*)(void))type metadata accessor for CurrentWeather);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC918, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v44 = type metadata accessor for CurrentWeather;
      goto LABEL_26;
    case 2u:
      uint64_t v43 = v54;
      sub_1A944952C((uint64_t)v35, v54, (void (*)(void))type metadata accessor for DailyForecast);
      OUTLINED_FUNCTION_18_10();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC100, (void (*)(uint64_t))type metadata accessor for DailyForecast);
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v44 = type metadata accessor for DailyForecast;
      goto LABEL_26;
    case 3u:
      uint64_t v43 = v55;
      sub_1A944952C((uint64_t)v35, v55, (void (*)(void))type metadata accessor for HourlyForecast);
      OUTLINED_FUNCTION_18_10();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DC120, (void (*)(uint64_t))type metadata accessor for HourlyForecast);
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v44 = type metadata accessor for HourlyForecast;
      goto LABEL_26;
    case 4u:
      uint64_t v2 = v56;
      sub_1A944A754((uint64_t)v35, v56, &qword_1EB6DE0F8);
      LOBYTE(v69) = 0;
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0744();
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v45 = &qword_1EB6DE0F8;
      goto LABEL_45;
    case 5u:
      uint64_t v43 = v57;
      sub_1A944952C((uint64_t)v35, v57, (void (*)(void))type metadata accessor for PeriodicForecasts);
      LOBYTE(v69) = 0;
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1E97EAC50, (void (*)(uint64_t))type metadata accessor for PeriodicForecasts);
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v44 = type metadata accessor for PeriodicForecasts;
      goto LABEL_26;
    case 6u:
      uint64_t v46 = *v35;
      LOBYTE(v69) = 7;
      char v70 = 0;
      sub_1A95B0170();
      uint64_t v47 = v64;
      sub_1A9632770();
      if (!v47)
      {
        uint64_t v69 = v46;
        char v70 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECC60);
        sub_1A95B06D0();
        sub_1A9632770();
      }
      uint64_t v48 = OUTLINED_FUNCTION_23_7();
      v49(v48);
      return swift_bridgeObjectRelease();
    case 7u:
      uint64_t v43 = v58;
      sub_1A944952C((uint64_t)v35, v58, (void (*)(void))type metadata accessor for LocationInfo);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0930(&qword_1EB6DA6E8, (void (*)(uint64_t))type metadata accessor for LocationInfo);
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v44 = type metadata accessor for LocationInfo;
LABEL_26:
      sub_1A95B5310(v43, (void (*)(void))v44);
      goto LABEL_46;
    case 8u:
      uint64_t v2 = v59;
      sub_1A944A754((uint64_t)v35, v59, &qword_1EB6DD258);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B062C();
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v45 = &qword_1EB6DD258;
      goto LABEL_45;
    case 9u:
      uint64_t v2 = v60;
      sub_1A944A754((uint64_t)v35, v60, &qword_1EB6DD938);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0588();
        OUTLINED_FUNCTION_3_38();
        sub_1A9632770();
      }
      uint64_t v45 = &qword_1EB6DD938;
      goto LABEL_45;
    case 0xAu:
      uint64_t v2 = v61;
      sub_1A944A754((uint64_t)v35, v61, &qword_1EB6DD1D8);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_17_3();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B04E4();
        OUTLINED_FUNCTION_3_38();
        sub_1A9632770();
      }
      uint64_t v45 = &qword_1EB6DD1D8;
      goto LABEL_45;
    case 0xBu:
      sub_1A944A754((uint64_t)v35, v2, &qword_1EB6DD620);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B07E8();
        OUTLINED_FUNCTION_3_38();
        OUTLINED_FUNCTION_15_14();
      }
      uint64_t v45 = &qword_1EB6DD620;
      goto LABEL_45;
    case 0xCu:
      uint64_t v2 = v62;
      sub_1A944A754((uint64_t)v35, v62, &qword_1EB6DDE70);
      OUTLINED_FUNCTION_17_13();
      OUTLINED_FUNCTION_8_24();
      if (!v1)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B0440();
        OUTLINED_FUNCTION_3_38();
        sub_1A9632770();
      }
      uint64_t v45 = &qword_1EB6DDE70;
      goto LABEL_45;
    case 0xDu:
      uint64_t v2 = v63;
      sub_1A944A754((uint64_t)v35, v63, &qword_1EB6DDA28);
      LOBYTE(v69) = 13;
      char v70 = 0;
      sub_1A95B0170();
      uint64_t v38 = v65;
      uint64_t v31 = v66;
      uint64_t v51 = v64;
      sub_1A9632770();
      if (!v51)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B01BC();
        OUTLINED_FUNCTION_3_38();
        sub_1A9632770();
      }
      uint64_t v45 = &qword_1EB6DDA28;
LABEL_45:
      sub_1A944C3D0(v2, v45);
LABEL_46:
      char v42 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 8);
      uint64_t v40 = (uint64_t)v38;
      uint64_t v41 = v31;
      break;
    default:
      sub_1A944A754((uint64_t)v35, v31, &qword_1EB6DE088);
      LOBYTE(v69) = 0;
      uint64_t v39 = v64;
      sub_1A9632730();
      if (!v39)
      {
        OUTLINED_FUNCTION_6_31();
        sub_1A95B088C();
        OUTLINED_FUNCTION_14_7();
        sub_1A9632770();
      }
      sub_1A944C3D0(v31, &qword_1EB6DE088);
      uint64_t v40 = OUTLINED_FUNCTION_23_7();
      break;
  }
  return v42(v40, v41);
}

uint64_t sub_1A95B010C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A95B0170()
{
  unint64_t result = qword_1E97ECC30;
  if (!qword_1E97ECC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC30);
  }
  return result;
}

unint64_t sub_1A95B01BC()
{
  unint64_t result = qword_1E97ECC38;
  if (!qword_1E97ECC38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DDA28);
    sub_1A95B0930(&qword_1EB6DAF58, (void (*)(uint64_t))type metadata accessor for WeatherComparisons);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC38);
  }
  return result;
}

uint64_t sub_1A95B0260(char a1)
{
  uint64_t result = 0x696C617551726961;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x737472656C61;
      break;
    case 2:
      uint64_t result = 0x57746E6572727563;
      break;
    case 3:
    case 4:
      uint64_t result = 0x7473616365726F66;
      break;
    case 5:
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    case 7:
      uint64_t result = 0x6369726F74736968;
      break;
    case 8:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 9:
      uint64_t result = 0x6F46656E6972616DLL;
      break;
    case 10:
      uint64_t result = 1937204590;
      break;
    case 11:
      uint64_t result = OUTLINED_FUNCTION_17_3();
      break;
    case 12:
      uint64_t result = 0x4372656874616577;
      break;
    case 13:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A95B0440()
{
  unint64_t result = qword_1E97ECC40;
  if (!qword_1E97ECC40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DDE70);
    sub_1A95B0930(&qword_1EB6DB300, (void (*)(uint64_t))type metadata accessor for WeatherChange);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC40);
  }
  return result;
}

unint64_t sub_1A95B04E4()
{
  unint64_t result = qword_1E97ECC48;
  if (!qword_1E97ECC48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DD1D8);
    sub_1A95B0930(&qword_1EB6DA5E8, (void (*)(uint64_t))type metadata accessor for TideEvents);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC48);
  }
  return result;
}

unint64_t sub_1A95B0588()
{
  unint64_t result = qword_1E97ECC50;
  if (!qword_1E97ECC50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DD938);
    sub_1A95B0930(&qword_1EB6DAF68, (void (*)(uint64_t))type metadata accessor for News);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC50);
  }
  return result;
}

unint64_t sub_1A95B062C()
{
  unint64_t result = qword_1E97ECC58;
  if (!qword_1E97ECC58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DD258);
    sub_1A95B0930(&qword_1EB6DA270, (void (*)(uint64_t))type metadata accessor for MarineForecast);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC58);
  }
  return result;
}

unint64_t sub_1A95B06D0()
{
  unint64_t result = qword_1E97ECC68;
  if (!qword_1E97ECC68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97ECC60);
    sub_1A9492F60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC68);
  }
  return result;
}

unint64_t sub_1A95B0744()
{
  unint64_t result = qword_1E97ECC70;
  if (!qword_1E97ECC70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DE0F8);
    sub_1A95B0930(&qword_1EB6DB9A8, (void (*)(uint64_t))type metadata accessor for NextHourForecast);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC70);
  }
  return result;
}

unint64_t sub_1A95B07E8()
{
  unint64_t result = qword_1E97ECC78;
  if (!qword_1E97ECC78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DD620);
    sub_1A95B0930(&qword_1EB6DAF60, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC78);
  }
  return result;
}

unint64_t sub_1A95B088C()
{
  unint64_t result = qword_1E97ECC80;
  if (!qword_1E97ECC80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DE088);
    sub_1A95B0930(&qword_1EB6DC470, (void (*)(uint64_t))type metadata accessor for AirQuality);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC80);
  }
  return result;
}

uint64_t sub_1A95B0930(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95B0978()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A95B09D0(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1A95B09F0()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A95B0A3C()
{
  return sub_1A950C4E8();
}

uint64_t sub_1A95B0A48()
{
  return sub_1A95C9430();
}

uint64_t sub_1A95B0A50()
{
  return sub_1A94ACFA4();
}

uint64_t sub_1A95B0A58()
{
  return sub_1A94AD780();
}

uint64_t sub_1A95B0A60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95B0978();
  *a1 = result;
  return result;
}

uint64_t sub_1A95B0A90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95B09D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95B0ABC()
{
  return sub_1A95B09D0(*v0);
}

uint64_t sub_1A95B0AC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95B09CC();
  *a1 = result;
  return result;
}

uint64_t sub_1A95B0AEC(uint64_t a1)
{
  unint64_t v2 = sub_1A95AF41C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95B0B28(uint64_t a1)
{
  unint64_t v2 = sub_1A95AF41C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A95B0B64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950C554(*a1, *a2);
}

uint64_t sub_1A95B0B70()
{
  return sub_1A95C943C(*v0);
}

uint64_t sub_1A95B0B78(uint64_t a1)
{
  return sub_1A94ACFEC(a1, *v1);
}

uint64_t sub_1A95B0B80()
{
  return sub_1A94AD720();
}

uint64_t sub_1A95B0B88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95B09F0();
  *a1 = result;
  return result;
}

uint64_t sub_1A95B0BB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95B0260(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95B0BE4()
{
  return sub_1A9632000();
}

uint64_t sub_1A95B0C44()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A95B0C94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherDataResponse.init(from:)(a1, a2);
}

uint64_t sub_1A95B0CAC(void *a1)
{
  return WeatherDataResponse.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for WeatherDataResponse(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_1A962E810();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        uint64_t v11 = (int *)type metadata accessor for Metadata();
        v10(&a1[v11[5]], &a2[v11[5]], v9);
        uint64_t v12 = v11[6];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        __dst = v10;
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v12], 1, v9))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          v10(v13, v14, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
        }
        *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
        *(void *)&a1[v11[8]] = *(void *)&a2[v11[8]];
        *(void *)&a1[v11[9]] = *(void *)&a2[v11[9]];
        uint64_t v65 = v11[10];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        uint64_t v68 = *((void *)v67 + 1);
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = v68;
        uint64_t v69 = v11[11];
        char v70 = &a1[v69];
        uint64_t v71 = &a2[v69];
        uint64_t v72 = *((void *)v71 + 1);
        *(void *)char v70 = *(void *)v71;
        *((void *)v70 + 1) = v72;
        uint64_t v73 = v11[12];
        uint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        uint64_t v76 = *((void *)v75 + 1);
        *(void *)uint64_t v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        a1[v11[13]] = a2[v11[13]];
        a1[v11[14]] = a2[v11[14]];
        uint64_t v77 = v11[15];
        uint64_t v78 = &a1[v77];
        os_log_t v79 = &a2[v77];
        uint64_t v80 = *((void *)v79 + 1);
        *(void *)uint64_t v78 = *(void *)v79;
        *((void *)v78 + 1) = v80;
        uint64_t v81 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v82 = v81[5];
        os_log_type_t v83 = &a1[v82];
        uint64_t v84 = &a2[v82];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v9))
        {
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          __dst(v83, v84, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v9);
        }
        *(void *)&a1[v81[6]] = *(void *)&a2[v81[6]];
        *(void *)&a1[v81[7]] = *(void *)&a2[v81[7]];
        *(void *)&a1[v81[8]] = *(void *)&a2[v81[8]];
        *(void *)&a1[v81[9]] = *(void *)&a2[v81[9]];
        a1[v81[10]] = a2[v81[10]];
        a1[v81[11]] = a2[v81[11]];
        *(void *)&a1[v81[12]] = *(void *)&a2[v81[12]];
        *(void *)&a1[v81[13]] = *(void *)&a2[v81[13]];
        *(void *)&a1[v81[14]] = *(void *)&a2[v81[14]];
        *(void *)&a1[v81[15]] = *(void *)&a2[v81[15]];
        *(void *)&a1[v81[16]] = *(void *)&a2[v81[16]];
        *(void *)&a1[v81[17]] = *(void *)&a2[v81[17]];
        *(void *)&a1[v81[18]] = *(void *)&a2[v81[18]];
        *(void *)&a1[v81[19]] = *(void *)&a2[v81[19]];
        *(void *)&a1[v81[20]] = *(void *)&a2[v81[20]];
        *(void *)&a1[v81[21]] = *(void *)&a2[v81[21]];
        *(void *)&a1[v81[22]] = *(void *)&a2[v81[22]];
        *(void *)&a1[v81[23]] = *(void *)&a2[v81[23]];
        *(void *)&a1[v81[24]] = *(void *)&a2[v81[24]];
        *(void *)&a1[v81[25]] = *(void *)&a2[v81[25]];
        *(void *)&a1[v81[26]] = *(void *)&a2[v81[26]];
        uint64_t v233 = v81[27];
        v234 = &a1[v233];
        v235 = &a2[v233];
        *(void *)v234 = *(void *)v235;
        v234[8] = v235[8];
        a1[v81[28]] = a2[v81[28]];
        *(void *)&a1[v81[29]] = *(void *)&a2[v81[29]];
        *(void *)&a1[v81[30]] = *(void *)&a2[v81[30]];
        *(void *)&a1[v81[31]] = *(void *)&a2[v81[31]];
        *(void *)&a1[v81[32]] = *(void *)&a2[v81[32]];
        *(void *)&a1[v81[33]] = *(void *)&a2[v81[33]];
        *(void *)&a1[v81[34]] = *(void *)&a2[v81[34]];
        uint64_t v236 = v81[35];
        uint64_t v237 = &a1[v236];
        v238 = &a2[v236];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v9))
        {
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
          uint64_t v240 = __dst;
        }
        else
        {
          uint64_t v240 = __dst;
          __dst(v237, v238, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v9);
        }
        uint64_t v241 = v81[36];
        v242 = &a1[v241];
        v243 = &a2[v241];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v241], 1, v9))
        {
          uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
        }
        else
        {
          v240(v242, v243, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v9);
        }
        *(void *)&a1[v81[37]] = *(void *)&a2[v81[37]];
        uint64_t v245 = v81[38];
        v246 = &a1[v245];
        uint64_t v247 = &a2[v245];
        *(void *)v246 = *(void *)v247;
        v246[8] = v247[8];
        uint64_t v248 = v81[39];
        v249 = &a1[v248];
        uint64_t v250 = &a2[v248];
        *(void *)v249 = *(void *)v250;
        v249[8] = v250[8];
        uint64_t v251 = v81[40];
        v252 = &a1[v251];
        uint64_t v253 = &a2[v251];
        *(void *)v252 = *(void *)v253;
        v252[8] = v253[8];
        uint64_t v254 = v81[41];
        v255 = &a1[v254];
        uint64_t v256 = &a2[v254];
        *(void *)v255 = *(void *)v256;
        v255[8] = v256[8];
        *(void *)&a1[v81[42]] = *(void *)&a2[v81[42]];
        *(void *)&a1[v81[43]] = *(void *)&a2[v81[43]];
        uint64_t v257 = v81[44];
        v258 = &a1[v257];
        uint64_t v259 = &a2[v257];
        *(void *)v258 = *(void *)v259;
        v258[8] = v259[8];
        uint64_t v260 = v81[45];
        v261 = &a1[v260];
        uint64_t v262 = &a2[v260];
        *(void *)v261 = *(void *)v262;
        v261[8] = v262[8];
        *(void *)&a1[v81[46]] = *(void *)&a2[v81[46]];
        break;
      case 2u:
        uint64_t v16 = sub_1A962E810();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(a1, a2, v16);
        uint64_t v18 = (int *)type metadata accessor for Metadata();
        v17(&a1[v18[5]], &a2[v18[5]], v16);
        uint64_t v19 = v18[6];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v16))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v17(v20, v21, v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v16);
        }
        *(void *)&a1[v18[7]] = *(void *)&a2[v18[7]];
        *(void *)&a1[v18[8]] = *(void *)&a2[v18[8]];
        *(void *)&a1[v18[9]] = *(void *)&a2[v18[9]];
        uint64_t v86 = v18[10];
        uint64_t v87 = &a1[v86];
        uint64_t v88 = &a2[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        uint64_t v90 = v18[11];
        uint64_t v91 = &a1[v90];
        uint64_t v92 = &a2[v90];
        uint64_t v93 = *((void *)v92 + 1);
        *(void *)uint64_t v91 = *(void *)v92;
        *((void *)v91 + 1) = v93;
        uint64_t v94 = v18[12];
        uint64_t v95 = &a1[v94];
        uint64_t v96 = &a2[v94];
        uint64_t v97 = *((void *)v96 + 1);
        *(void *)uint64_t v95 = *(void *)v96;
        *((void *)v95 + 1) = v97;
        a1[v18[13]] = a2[v18[13]];
        a1[v18[14]] = a2[v18[14]];
        uint64_t v98 = v18[15];
        uint64_t v99 = &a1[v98];
        uint64_t v100 = &a2[v98];
        uint64_t v101 = *((void *)v100 + 1);
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = v101;
        uint64_t v102 = type metadata accessor for DailyForecast();
        *(void *)&a1[*(int *)(v102 + 20)] = *(void *)&a2[*(int *)(v102 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 3u:
        uint64_t v23 = sub_1A962E810();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for Metadata();
        v24(&a1[v25[5]], &a2[v25[5]], v23);
        uint64_t v26 = v25[6];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v26], 1, v23))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v24(v27, v28, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v23);
        }
        *(void *)&a1[v25[7]] = *(void *)&a2[v25[7]];
        *(void *)&a1[v25[8]] = *(void *)&a2[v25[8]];
        *(void *)&a1[v25[9]] = *(void *)&a2[v25[9]];
        uint64_t v103 = v25[10];
        uint64_t v104 = &a1[v103];
        uint64_t v105 = &a2[v103];
        uint64_t v106 = *((void *)v105 + 1);
        *(void *)uint64_t v104 = *(void *)v105;
        *((void *)v104 + 1) = v106;
        uint64_t v107 = v25[11];
        uint64_t v108 = &a1[v107];
        uint64_t v109 = &a2[v107];
        uint64_t v110 = *((void *)v109 + 1);
        *(void *)uint64_t v108 = *(void *)v109;
        *((void *)v108 + 1) = v110;
        uint64_t v111 = v25[12];
        char v112 = &a1[v111];
        double v113 = &a2[v111];
        uint64_t v114 = *((void *)v113 + 1);
        *(void *)char v112 = *(void *)v113;
        *((void *)v112 + 1) = v114;
        a1[v25[13]] = a2[v25[13]];
        a1[v25[14]] = a2[v25[14]];
        uint64_t v115 = v25[15];
        double v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        uint64_t v118 = *((void *)v117 + 1);
        *(void *)double v116 = *(void *)v117;
        *((void *)v116 + 1) = v118;
        uint64_t v119 = type metadata accessor for HourlyForecast();
        *(void *)&a1[*(int *)(v119 + 20)] = *(void *)&a2[*(int *)(v119 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v120 = sub_1A962E810();
          double v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          v121(a1, a2, v120);
          double v122 = (int *)type metadata accessor for Metadata();
          v121(&a1[v122[5]], &a2[v122[5]], v120);
          uint64_t v123 = v122[6];
          double v124 = &a1[v123];
          double v125 = &a2[v123];
          v433 = v121;
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v123], 1, v120))
          {
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            v121(v124, v125, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v120);
          }
          *(void *)&a1[v122[7]] = *(void *)&a2[v122[7]];
          *(void *)&a1[v122[8]] = *(void *)&a2[v122[8]];
          *(void *)&a1[v122[9]] = *(void *)&a2[v122[9]];
          uint64_t v304 = v122[10];
          v305 = &a1[v304];
          uint64_t v306 = &a2[v304];
          uint64_t v307 = *((void *)v306 + 1);
          *(void *)v305 = *(void *)v306;
          *((void *)v305 + 1) = v307;
          uint64_t v308 = v122[11];
          uint64_t v309 = &a1[v308];
          v310 = &a2[v308];
          uint64_t v311 = *((void *)v310 + 1);
          *(void *)uint64_t v309 = *(void *)v310;
          *((void *)v309 + 1) = v311;
          uint64_t v312 = v122[12];
          v313 = &a1[v312];
          v314 = &a2[v312];
          uint64_t v315 = *((void *)v314 + 1);
          *(void *)v313 = *(void *)v314;
          *((void *)v313 + 1) = v315;
          a1[v122[13]] = a2[v122[13]];
          a1[v122[14]] = a2[v122[14]];
          uint64_t v316 = v122[15];
          v317 = &a1[v316];
          uint64_t v318 = &a2[v316];
          uint64_t v319 = *((void *)v318 + 1);
          *(void *)v317 = *(void *)v318;
          *((void *)v317 + 1) = v319;
          *(void *)&a1[HourForecast[5]] = *(void *)&a2[HourForecast[5]];
          *(void *)&a1[HourForecast[6]] = *(void *)&a2[HourForecast[6]];
          uint64_t v320 = HourForecast[7];
          __dstb = &a1[v320];
          uint64_t v321 = &a2[v320];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v120))
          {
            uint64_t v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dstb, v321, *(void *)(*(void *)(v322 - 8) + 64));
          }
          else
          {
            v433(__dstb, v321, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v120);
          }
          *(void *)&a1[HourForecast[8]] = *(void *)&a2[HourForecast[8]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        break;
      case 5u:
        uint64_t v32 = sub_1A962E810();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        v33(a1, a2, v32);
        uint64_t v34 = (int *)type metadata accessor for Metadata();
        v33(&a1[v34[5]], &a2[v34[5]], v32);
        uint64_t v35 = v34[6];
        uint64_t v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v32))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          v33(v36, v37, v32);
          __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
        }
        *(void *)&a1[v34[7]] = *(void *)&a2[v34[7]];
        *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
        *(void *)&a1[v34[9]] = *(void *)&a2[v34[9]];
        uint64_t v127 = v34[10];
        double v128 = &a1[v127];
        double v129 = &a2[v127];
        uint64_t v130 = *((void *)v129 + 1);
        *(void *)double v128 = *(void *)v129;
        *((void *)v128 + 1) = v130;
        uint64_t v131 = v34[11];
        uint64_t v132 = &a1[v131];
        uint64_t v133 = &a2[v131];
        uint64_t v134 = *((void *)v133 + 1);
        *(void *)uint64_t v132 = *(void *)v133;
        *((void *)v132 + 1) = v134;
        uint64_t v135 = v34[12];
        uint64_t v136 = &a1[v135];
        uint64_t v137 = &a2[v135];
        uint64_t v138 = *((void *)v137 + 1);
        *(void *)uint64_t v136 = *(void *)v137;
        *((void *)v136 + 1) = v138;
        a1[v34[13]] = a2[v34[13]];
        a1[v34[14]] = a2[v34[14]];
        uint64_t v139 = v34[15];
        uint64_t v140 = &a1[v139];
        uint64_t v141 = &a2[v139];
        uint64_t v142 = *((void *)v141 + 1);
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        uint64_t v143 = type metadata accessor for PeriodicForecasts();
        *(void *)&a1[*(int *)(v143 + 20)] = *(void *)&a2[*(int *)(v143 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        sub_1A9631510();
        break;
      case 7u:
        uint64_t v39 = sub_1A962E810();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        v40(a1, a2, v39);
        uint64_t v41 = (int *)type metadata accessor for Metadata();
        v40(&a1[v41[5]], &a2[v41[5]], v39);
        uint64_t v42 = v41[6];
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v42], 1, v39))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          v40(v43, v44, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v39);
        }
        *(void *)&a1[v41[7]] = *(void *)&a2[v41[7]];
        *(void *)&a1[v41[8]] = *(void *)&a2[v41[8]];
        *(void *)&a1[v41[9]] = *(void *)&a2[v41[9]];
        uint64_t v144 = v41[10];
        int v145 = &a1[v144];
        unint64_t v146 = &a2[v144];
        uint64_t v147 = *((void *)v146 + 1);
        *(void *)int v145 = *(void *)v146;
        *((void *)v145 + 1) = v147;
        uint64_t v148 = v41[11];
        uint64_t v149 = &a1[v148];
        uint64_t v150 = &a2[v148];
        uint64_t v151 = *((void *)v150 + 1);
        *(void *)uint64_t v149 = *(void *)v150;
        *((void *)v149 + 1) = v151;
        uint64_t v152 = v41[12];
        uint64_t v153 = &a1[v152];
        int v154 = &a2[v152];
        uint64_t v155 = *((void *)v154 + 1);
        *(void *)uint64_t v153 = *(void *)v154;
        *((void *)v153 + 1) = v155;
        a1[v41[13]] = a2[v41[13]];
        a1[v41[14]] = a2[v41[14]];
        uint64_t v156 = v41[15];
        uint64_t v157 = &a1[v156];
        uint64_t v158 = &a2[v156];
        uint64_t v159 = *((void *)v158 + 1);
        *(void *)uint64_t v157 = *(void *)v158;
        *((void *)v157 + 1) = v159;
        char v160 = (int *)type metadata accessor for LocationInfo();
        uint64_t v161 = v160[5];
        uint64_t v162 = &a1[v161];
        uint64_t v163 = &a2[v161];
        uint64_t v164 = *((void *)v163 + 1);
        *(void *)uint64_t v162 = *(void *)v163;
        *((void *)v162 + 1) = v164;
        uint64_t v165 = v160[6];
        uint64_t v166 = &a1[v165];
        uint64_t v167 = &a2[v165];
        uint64_t v168 = *((void *)v167 + 1);
        *(void *)uint64_t v166 = *(void *)v167;
        *((void *)v166 + 1) = v168;
        uint64_t v169 = v160[7];
        uint64_t v170 = &a1[v169];
        uint64_t v171 = &a2[v169];
        uint64_t v172 = *((void *)v171 + 1);
        *(void *)uint64_t v170 = *(void *)v171;
        *((void *)v170 + 1) = v172;
        uint64_t v173 = v160[8];
        char v174 = &a1[v173];
        uint64_t v175 = &a2[v173];
        uint64_t v176 = *((void *)v175 + 1);
        *(void *)char v174 = *(void *)v175;
        *((void *)v174 + 1) = v176;
        uint64_t v177 = v160[9];
        uint64_t v178 = &a1[v177];
        uint64_t v179 = &a2[v177];
        uint64_t v180 = *((void *)v179 + 1);
        *(void *)uint64_t v178 = *(void *)v179;
        *((void *)v178 + 1) = v180;
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 8u:
        uint64_t v46 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v46))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v181 = *(int *)(v46 + 20);
          uint64_t v182 = &a1[v181];
          uint64_t v183 = &a2[v181];
          uint64_t v184 = sub_1A962E810();
          uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16);
          sub_1A9631510();
          v185(v182, v183, v184);
          uint64_t v186 = (int *)type metadata accessor for Metadata();
          v185(&v182[v186[5]], &v183[v186[5]], v184);
          uint64_t v187 = v186[6];
          uint64_t v188 = &v182[v187];
          uint64_t v189 = &v183[v187];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v183[v187], 1, v184))
          {
            uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            v185(v188, v189, v184);
            __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v184);
          }
          *(void *)&v182[v186[7]] = *(void *)&v183[v186[7]];
          *(void *)&v182[v186[8]] = *(void *)&v183[v186[8]];
          *(void *)&v182[v186[9]] = *(void *)&v183[v186[9]];
          uint64_t v323 = v186[10];
          uint64_t v324 = &v182[v323];
          v325 = &v183[v323];
          uint64_t v326 = *((void *)v325 + 1);
          *(void *)uint64_t v324 = *(void *)v325;
          *((void *)v324 + 1) = v326;
          uint64_t v327 = v186[11];
          v328 = &v182[v327];
          v329 = &v183[v327];
          uint64_t v330 = *((void *)v329 + 1);
          *(void *)v328 = *(void *)v329;
          *((void *)v328 + 1) = v330;
          uint64_t v331 = v186[12];
          v332 = &v182[v331];
          uint64_t v333 = &v183[v331];
          uint64_t v334 = *((void *)v333 + 1);
          *(void *)v332 = *(void *)v333;
          *((void *)v332 + 1) = v334;
          v182[v186[13]] = v183[v186[13]];
          v182[v186[14]] = v183[v186[14]];
          uint64_t v335 = v186[15];
          uint64_t v336 = &v182[v335];
          v337 = &v183[v335];
          uint64_t v338 = *((void *)v337 + 1);
          *(void *)uint64_t v336 = *(void *)v337;
          *((void *)v336 + 1) = v338;
          *(_OWORD *)&a1[*(int *)(v46 + 24)] = *(_OWORD *)&a2[*(int *)(v46 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v46);
        }
        break;
      case 9u:
        uint64_t v48 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v48))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v191 = sub_1A962E810();
          uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
          v192(a1, a2, v191);
          uint64_t v193 = (int *)type metadata accessor for Metadata();
          v192(&a1[v193[5]], &a2[v193[5]], v191);
          uint64_t v194 = v193[6];
          uint64_t v195 = &a1[v194];
          uint64_t v196 = &a2[v194];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v194], 1, v191))
          {
            uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v195, v196, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            v192(v195, v196, v191);
            __swift_storeEnumTagSinglePayload((uint64_t)v195, 0, 1, v191);
          }
          *(void *)&a1[v193[7]] = *(void *)&a2[v193[7]];
          *(void *)&a1[v193[8]] = *(void *)&a2[v193[8]];
          *(void *)&a1[v193[9]] = *(void *)&a2[v193[9]];
          uint64_t v339 = v193[10];
          v340 = &a1[v339];
          v341 = &a2[v339];
          uint64_t v342 = *((void *)v341 + 1);
          *(void *)v340 = *(void *)v341;
          *((void *)v340 + 1) = v342;
          uint64_t v343 = v193[11];
          v344 = &a1[v343];
          uint64_t v345 = &a2[v343];
          uint64_t v346 = *((void *)v345 + 1);
          *(void *)v344 = *(void *)v345;
          *((void *)v344 + 1) = v346;
          uint64_t v347 = v193[12];
          v348 = &a1[v347];
          v349 = &a2[v347];
          uint64_t v350 = *((void *)v349 + 1);
          *(void *)v348 = *(void *)v349;
          *((void *)v348 + 1) = v350;
          a1[v193[13]] = a2[v193[13]];
          a1[v193[14]] = a2[v193[14]];
          uint64_t v351 = v193[15];
          v352 = &a1[v351];
          uint64_t v353 = &a2[v351];
          uint64_t v354 = *((void *)v353 + 1);
          *(void *)v352 = *(void *)v353;
          *((void *)v352 + 1) = v354;
          *(void *)&a1[*(int *)(v48 + 20)] = *(void *)&a2[*(int *)(v48 + 20)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v48);
        }
        break;
      case 0xAu:
        uint64_t v50 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          uint64_t v198 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v198;
          uint64_t v199 = *(int *)(v50 + 24);
          uint64_t v200 = &a1[v199];
          uint64_t v201 = &a2[v199];
          uint64_t v202 = sub_1A962E810();
          uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16);
          sub_1A9631510();
          sub_1A9631510();
          v203(v200, v201, v202);
          uint64_t v204 = (int *)type metadata accessor for Metadata();
          v203(&v200[v204[5]], &v201[v204[5]], v202);
          uint64_t v205 = v204[6];
          uint64_t v206 = &v200[v205];
          uint64_t v207 = &v201[v205];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v201[v205], 1, v202))
          {
            uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
          }
          else
          {
            v203(v206, v207, v202);
            __swift_storeEnumTagSinglePayload((uint64_t)v206, 0, 1, v202);
          }
          *(void *)&v200[v204[7]] = *(void *)&v201[v204[7]];
          *(void *)&v200[v204[8]] = *(void *)&v201[v204[8]];
          *(void *)&v200[v204[9]] = *(void *)&v201[v204[9]];
          uint64_t v355 = v204[10];
          uint64_t v356 = &v200[v355];
          v357 = &v201[v355];
          uint64_t v358 = *((void *)v357 + 1);
          *(void *)uint64_t v356 = *(void *)v357;
          *((void *)v356 + 1) = v358;
          uint64_t v359 = v204[11];
          v360 = &v200[v359];
          v361 = &v201[v359];
          uint64_t v362 = *((void *)v361 + 1);
          *(void *)v360 = *(void *)v361;
          *((void *)v360 + 1) = v362;
          uint64_t v363 = v204[12];
          v364 = &v200[v363];
          uint64_t v365 = &v201[v363];
          uint64_t v366 = *((void *)v365 + 1);
          *(void *)v364 = *(void *)v365;
          *((void *)v364 + 1) = v366;
          v200[v204[13]] = v201[v204[13]];
          v200[v204[14]] = v201[v204[14]];
          uint64_t v367 = v204[15];
          uint64_t v368 = &v200[v367];
          v369 = &v201[v367];
          uint64_t v370 = *((void *)v369 + 1);
          *(void *)uint64_t v368 = *(void *)v369;
          *((void *)v368 + 1) = v370;
          *(_OWORD *)&a1[*(int *)(v50 + 28)] = *(_OWORD *)&a2[*(int *)(v50 + 28)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v50);
        }
        break;
      case 0xBu:
        uint64_t v52 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v52))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          uint64_t v209 = sub_1A962E810();
          char v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
          v210(a1, a2, v209);
          uint64_t v211 = (int *)type metadata accessor for Metadata();
          v210(&a1[v211[5]], &a2[v211[5]], v209);
          uint64_t v212 = v211[6];
          uint64_t v213 = &a1[v212];
          unint64_t v214 = &a2[v212];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v212], 1, v209))
          {
            uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
          }
          else
          {
            v210(v213, v214, v209);
            __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v209);
          }
          *(void *)&a1[v211[7]] = *(void *)&a2[v211[7]];
          *(void *)&a1[v211[8]] = *(void *)&a2[v211[8]];
          *(void *)&a1[v211[9]] = *(void *)&a2[v211[9]];
          uint64_t v371 = v211[10];
          v372 = &a1[v371];
          v373 = &a2[v371];
          uint64_t v374 = *((void *)v373 + 1);
          *(void *)v372 = *(void *)v373;
          *((void *)v372 + 1) = v374;
          uint64_t v375 = v211[11];
          v376 = &a1[v375];
          v377 = &a2[v375];
          uint64_t v378 = *((void *)v377 + 1);
          *(void *)v376 = *(void *)v377;
          *((void *)v376 + 1) = v378;
          uint64_t v379 = v211[12];
          v380 = &a1[v379];
          v381 = &a2[v379];
          uint64_t v382 = *((void *)v381 + 1);
          *(void *)v380 = *(void *)v381;
          *((void *)v380 + 1) = v382;
          a1[v211[13]] = a2[v211[13]];
          a1[v211[14]] = a2[v211[14]];
          uint64_t v383 = v211[15];
          v384 = &a1[v383];
          v385 = &a2[v383];
          uint64_t v386 = *((void *)v385 + 1);
          *(void *)v384 = *(void *)v385;
          *((void *)v384 + 1) = v386;
          uint64_t v387 = *(int *)(v52 + 20);
          v388 = &a1[v387];
          v389 = &a2[v387];
          uint64_t v390 = *((void *)v389 + 1);
          *(void *)v388 = *(void *)v389;
          *((void *)v388 + 1) = v390;
          *(void *)&a1[*(int *)(v52 + 24)] = *(void *)&a2[*(int *)(v52 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v52);
        }
        break;
      case 0xCu:
        uint64_t v54 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v54))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          uint64_t v216 = sub_1A962E810();
          uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
          v217(a1, a2, v216);
          uint64_t v218 = (int *)type metadata accessor for Metadata();
          v217(&a1[v218[5]], &a2[v218[5]], v216);
          uint64_t v219 = v218[6];
          uint64_t v220 = &a1[v219];
          uint64_t v221 = &a2[v219];
          __dsta = v217;
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v219], 1, v216))
          {
            uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
          }
          else
          {
            v217(v220, v221, v216);
            __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v216);
          }
          *(void *)&a1[v218[7]] = *(void *)&a2[v218[7]];
          *(void *)&a1[v218[8]] = *(void *)&a2[v218[8]];
          *(void *)&a1[v218[9]] = *(void *)&a2[v218[9]];
          uint64_t v391 = v218[10];
          v392 = &a1[v391];
          v393 = &a2[v391];
          uint64_t v394 = *((void *)v393 + 1);
          *(void *)v392 = *(void *)v393;
          *((void *)v392 + 1) = v394;
          uint64_t v395 = v218[11];
          uint64_t v396 = &a1[v395];
          v397 = &a2[v395];
          uint64_t v398 = *((void *)v397 + 1);
          *(void *)uint64_t v396 = *(void *)v397;
          *((void *)v396 + 1) = v398;
          uint64_t v399 = v218[12];
          uint64_t v400 = &a1[v399];
          v401 = &a2[v399];
          uint64_t v402 = *((void *)v401 + 1);
          *(void *)uint64_t v400 = *(void *)v401;
          *((void *)v400 + 1) = v402;
          a1[v218[13]] = a2[v218[13]];
          a1[v218[14]] = a2[v218[14]];
          uint64_t v403 = v218[15];
          uint64_t v404 = &a1[v403];
          v405 = &a2[v403];
          uint64_t v406 = *((void *)v405 + 1);
          *(void *)uint64_t v404 = *(void *)v405;
          *((void *)v404 + 1) = v406;
          uint64_t v407 = v54[5];
          uint64_t v408 = &a1[v407];
          v409 = &a2[v407];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v409, 1, v216))
          {
            uint64_t v410 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v408, v409, *(void *)(*(void *)(v410 - 8) + 64));
            uint64_t v411 = __dsta;
          }
          else
          {
            uint64_t v411 = __dsta;
            __dsta(v408, v409, v216);
            __swift_storeEnumTagSinglePayload((uint64_t)v408, 0, 1, v216);
          }
          uint64_t v428 = v54[6];
          v429 = &a1[v428];
          v430 = &a2[v428];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v428], 1, v216))
          {
            uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v429, v430, *(void *)(*(void *)(v431 - 8) + 64));
          }
          else
          {
            v411(v429, v430, v216);
            __swift_storeEnumTagSinglePayload((uint64_t)v429, 0, 1, v216);
          }
          *(void *)&a1[v54[7]] = *(void *)&a2[v54[7]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v54);
        }
        break;
      case 0xDu:
        uint64_t v56 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v56))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v223 = *(int *)(v56 + 20);
          uint64_t v224 = &a1[v223];
          uint64_t v225 = &a2[v223];
          uint64_t v226 = sub_1A962E810();
          v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16);
          sub_1A9631510();
          v227(v224, v225, v226);
          uint64_t v228 = (int *)type metadata accessor for Metadata();
          v227(&v224[v228[5]], &v225[v228[5]], v226);
          uint64_t v229 = v228[6];
          v230 = &v224[v229];
          v231 = &v225[v229];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v225[v229], 1, v226))
          {
            uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v230, v231, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            v227(v230, v231, v226);
            __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v226);
          }
          *(void *)&v224[v228[7]] = *(void *)&v225[v228[7]];
          *(void *)&v224[v228[8]] = *(void *)&v225[v228[8]];
          *(void *)&v224[v228[9]] = *(void *)&v225[v228[9]];
          uint64_t v412 = v228[10];
          v413 = &v224[v412];
          v414 = &v225[v412];
          uint64_t v415 = *((void *)v414 + 1);
          *(void *)v413 = *(void *)v414;
          *((void *)v413 + 1) = v415;
          uint64_t v416 = v228[11];
          v417 = &v224[v416];
          v418 = &v225[v416];
          uint64_t v419 = *((void *)v418 + 1);
          *(void *)v417 = *(void *)v418;
          *((void *)v417 + 1) = v419;
          uint64_t v420 = v228[12];
          v421 = &v224[v420];
          v422 = &v225[v420];
          uint64_t v423 = *((void *)v422 + 1);
          *(void *)v421 = *(void *)v422;
          *((void *)v421 + 1) = v423;
          v224[v228[13]] = v225[v228[13]];
          v224[v228[14]] = v225[v228[14]];
          uint64_t v424 = v228[15];
          v425 = &v224[v424];
          v426 = &v225[v424];
          uint64_t v427 = *((void *)v426 + 1);
          *(void *)v425 = *(void *)v426;
          *((void *)v425 + 1) = v427;
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v56);
        }
        break;
      default:
        uint64_t v6 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
        {
          uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v58 = sub_1A962E810();
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          v59(a1, a2, v58);
          uint64_t v60 = (int *)type metadata accessor for Metadata();
          v59(&a1[v60[5]], &a2[v60[5]], v58);
          uint64_t v61 = v60[6];
          uint64_t v62 = &a1[v61];
          uint64_t v63 = &a2[v61];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v61], 1, v58))
          {
            uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            v59(v62, v63, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v58);
          }
          *(void *)&a1[v60[7]] = *(void *)&a2[v60[7]];
          *(void *)&a1[v60[8]] = *(void *)&a2[v60[8]];
          *(void *)&a1[v60[9]] = *(void *)&a2[v60[9]];
          uint64_t v263 = v60[10];
          v264 = &a1[v263];
          v265 = &a2[v263];
          uint64_t v266 = *((void *)v265 + 1);
          *(void *)v264 = *(void *)v265;
          *((void *)v264 + 1) = v266;
          uint64_t v267 = v60[11];
          v268 = &a1[v267];
          v269 = &a2[v267];
          uint64_t v270 = *((void *)v269 + 1);
          *(void *)v268 = *(void *)v269;
          *((void *)v268 + 1) = v270;
          uint64_t v271 = v60[12];
          v272 = &a1[v271];
          uint64_t v273 = &a2[v271];
          __dstc = (void *)*((void *)v273 + 1);
          *(void *)v272 = *(void *)v273;
          *((void *)v272 + 1) = __dstc;
          a1[v60[13]] = a2[v60[13]];
          a1[v60[14]] = a2[v60[14]];
          uint64_t v274 = v60[15];
          v275 = &a1[v274];
          uint64_t v276 = &a2[v274];
          uint64_t v277 = *((void *)v276 + 1);
          *(void *)v275 = *(void *)v276;
          *((void *)v275 + 1) = v277;
          uint64_t v278 = v6[5];
          uint64_t v279 = &a1[v278];
          v280 = &a2[v278];
          uint64_t v281 = *((void *)v280 + 1);
          *(void *)uint64_t v279 = *(void *)v280;
          *((void *)v279 + 1) = v281;
          a1[v6[6]] = a2[v6[6]];
          uint64_t v282 = v6[7];
          v283 = &a1[v282];
          v284 = &a2[v282];
          uint64_t v285 = *((void *)v284 + 1);
          *(void *)v283 = *(void *)v284;
          *((void *)v283 + 1) = v285;
          uint64_t v286 = v6[8];
          v287 = &a1[v286];
          uint64_t v288 = &a2[v286];
          v287[8] = v288[8];
          *(void *)v287 = *(void *)v288;
          uint64_t v289 = v6[9];
          uint64_t v290 = &a1[v289];
          uint64_t v291 = &a2[v289];
          *(void *)uint64_t v290 = *(void *)v291;
          v290[8] = v291[8];
          a1[v6[10]] = a2[v6[10]];
          uint64_t v292 = v6[11];
          v293 = &a1[v292];
          uint64_t v294 = &a2[v292];
          uint64_t v295 = *((void *)v294 + 1);
          *(void *)v293 = *(void *)v294;
          *((void *)v293 + 1) = v295;
          uint64_t v296 = v6[12];
          uint64_t v297 = &a1[v296];
          v298 = &a2[v296];
          uint64_t v299 = *((void *)v298 + 1);
          *(void *)uint64_t v297 = *(void *)v298;
          *((void *)v297 + 1) = v299;
          *(void *)&a1[v6[13]] = *(void *)&a2[v6[13]];
          uint64_t v300 = v6[14];
          v301 = &a1[v300];
          v302 = &a2[v300];
          uint64_t v303 = *((void *)v302 + 1);
          *(void *)v301 = *(void *)v302;
          *((void *)v301 + 1) = v303;
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for WeatherDataResponse(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1A95B5310((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataResponse);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1A962E810();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for Metadata();
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        uint64_t v9 = v8[6];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
        }
        *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
        *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
        *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
        uint64_t v62 = v8[10];
        uint64_t v63 = &a1[v62];
        uint64_t v64 = &a2[v62];
        *(void *)uint64_t v63 = *(void *)v64;
        *((void *)v63 + 1) = *((void *)v64 + 1);
        uint64_t v65 = v8[11];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = *((void *)v67 + 1);
        uint64_t v68 = v8[12];
        uint64_t v69 = &a1[v68];
        char v70 = &a2[v68];
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        a1[v8[13]] = a2[v8[13]];
        a1[v8[14]] = a2[v8[14]];
        uint64_t v71 = v8[15];
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        uint64_t v74 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v75 = v74[5];
        uint64_t v76 = &a1[v75];
        uint64_t v77 = &a2[v75];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v6))
        {
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          v7(v76, v77, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v6);
        }
        *(void *)&a1[v74[6]] = *(void *)&a2[v74[6]];
        *(void *)&a1[v74[7]] = *(void *)&a2[v74[7]];
        *(void *)&a1[v74[8]] = *(void *)&a2[v74[8]];
        *(void *)&a1[v74[9]] = *(void *)&a2[v74[9]];
        a1[v74[10]] = a2[v74[10]];
        a1[v74[11]] = a2[v74[11]];
        *(void *)&a1[v74[12]] = *(void *)&a2[v74[12]];
        *(void *)&a1[v74[13]] = *(void *)&a2[v74[13]];
        *(void *)&a1[v74[14]] = *(void *)&a2[v74[14]];
        *(void *)&a1[v74[15]] = *(void *)&a2[v74[15]];
        *(void *)&a1[v74[16]] = *(void *)&a2[v74[16]];
        *(void *)&a1[v74[17]] = *(void *)&a2[v74[17]];
        *(void *)&a1[v74[18]] = *(void *)&a2[v74[18]];
        *(void *)&a1[v74[19]] = *(void *)&a2[v74[19]];
        *(void *)&a1[v74[20]] = *(void *)&a2[v74[20]];
        *(void *)&a1[v74[21]] = *(void *)&a2[v74[21]];
        *(void *)&a1[v74[22]] = *(void *)&a2[v74[22]];
        *(void *)&a1[v74[23]] = *(void *)&a2[v74[23]];
        *(void *)&a1[v74[24]] = *(void *)&a2[v74[24]];
        *(void *)&a1[v74[25]] = *(void *)&a2[v74[25]];
        *(void *)&a1[v74[26]] = *(void *)&a2[v74[26]];
        uint64_t v204 = v74[27];
        uint64_t v205 = &a1[v204];
        uint64_t v206 = &a2[v204];
        uint64_t v207 = *(void *)v206;
        v205[8] = v206[8];
        *(void *)uint64_t v205 = v207;
        a1[v74[28]] = a2[v74[28]];
        *(void *)&a1[v74[29]] = *(void *)&a2[v74[29]];
        *(void *)&a1[v74[30]] = *(void *)&a2[v74[30]];
        *(void *)&a1[v74[31]] = *(void *)&a2[v74[31]];
        *(void *)&a1[v74[32]] = *(void *)&a2[v74[32]];
        *(void *)&a1[v74[33]] = *(void *)&a2[v74[33]];
        *(void *)&a1[v74[34]] = *(void *)&a2[v74[34]];
        uint64_t v208 = v74[35];
        uint64_t v209 = &a1[v208];
        char v210 = &a2[v208];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        if (__swift_getEnumTagSinglePayload((uint64_t)v210, 1, v6))
        {
          uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
          uint64_t v212 = v7;
        }
        else
        {
          uint64_t v212 = v7;
          v7(v209, v210, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v6);
        }
        uint64_t v213 = v74[36];
        unint64_t v214 = &a1[v213];
        uint64_t v215 = &a2[v213];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v213], 1, v6))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          v212(v214, v215, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v6);
        }
        *(void *)&a1[v74[37]] = *(void *)&a2[v74[37]];
        uint64_t v217 = v74[38];
        uint64_t v218 = &a1[v217];
        uint64_t v219 = &a2[v217];
        uint64_t v220 = *(void *)v219;
        v218[8] = v219[8];
        *(void *)uint64_t v218 = v220;
        uint64_t v221 = v74[39];
        uint64_t v222 = &a1[v221];
        uint64_t v223 = &a2[v221];
        uint64_t v224 = *(void *)v223;
        v222[8] = v223[8];
        *(void *)uint64_t v222 = v224;
        uint64_t v225 = v74[40];
        uint64_t v226 = &a1[v225];
        v227 = &a2[v225];
        uint64_t v228 = *(void *)v227;
        v226[8] = v227[8];
        *(void *)uint64_t v226 = v228;
        uint64_t v229 = v74[41];
        v230 = &a1[v229];
        v231 = &a2[v229];
        uint64_t v232 = *(void *)v231;
        v230[8] = v231[8];
        *(void *)v230 = v232;
        *(void *)&a1[v74[42]] = *(void *)&a2[v74[42]];
        *(void *)&a1[v74[43]] = *(void *)&a2[v74[43]];
        uint64_t v233 = v74[44];
        v234 = &a1[v233];
        v235 = &a2[v233];
        uint64_t v236 = *(void *)v235;
        v234[8] = v235[8];
        *(void *)v234 = v236;
        uint64_t v237 = v74[45];
        v238 = &a1[v237];
        uint64_t v239 = &a2[v237];
        uint64_t v240 = *(void *)v239;
        v238[8] = v239[8];
        *(void *)v238 = v240;
        *(void *)&a1[v74[46]] = *(void *)&a2[v74[46]];
        break;
      case 2u:
        uint64_t v13 = sub_1A962E810();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        v14(a1, a2, v13);
        uint64_t v15 = (int *)type metadata accessor for Metadata();
        v14(&a1[v15[5]], &a2[v15[5]], v13);
        uint64_t v16 = v15[6];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v13))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          v14(v17, v18, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v13);
        }
        *(void *)&a1[v15[7]] = *(void *)&a2[v15[7]];
        *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
        *(void *)&a1[v15[9]] = *(void *)&a2[v15[9]];
        uint64_t v79 = v15[10];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        *(void *)uint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = *((void *)v81 + 1);
        uint64_t v82 = v15[11];
        os_log_type_t v83 = &a1[v82];
        uint64_t v84 = &a2[v82];
        *(void *)os_log_type_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v85 = v15[12];
        uint64_t v86 = &a1[v85];
        uint64_t v87 = &a2[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((void *)v86 + 1) = *((void *)v87 + 1);
        a1[v15[13]] = a2[v15[13]];
        a1[v15[14]] = a2[v15[14]];
        uint64_t v88 = v15[15];
        uint64_t v89 = &a1[v88];
        uint64_t v90 = &a2[v88];
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = *((void *)v90 + 1);
        uint64_t v91 = type metadata accessor for DailyForecast();
        *(void *)&a1[*(int *)(v91 + 20)] = *(void *)&a2[*(int *)(v91 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 3u:
        uint64_t v20 = sub_1A962E810();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        v21(a1, a2, v20);
        uint64_t v22 = (int *)type metadata accessor for Metadata();
        v21(&a1[v22[5]], &a2[v22[5]], v20);
        uint64_t v23 = v22[6];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v23], 1, v20))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          v21(v24, v25, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v20);
        }
        *(void *)&a1[v22[7]] = *(void *)&a2[v22[7]];
        *(void *)&a1[v22[8]] = *(void *)&a2[v22[8]];
        *(void *)&a1[v22[9]] = *(void *)&a2[v22[9]];
        uint64_t v92 = v22[10];
        uint64_t v93 = &a1[v92];
        uint64_t v94 = &a2[v92];
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = *((void *)v94 + 1);
        uint64_t v95 = v22[11];
        uint64_t v96 = &a1[v95];
        uint64_t v97 = &a2[v95];
        *(void *)uint64_t v96 = *(void *)v97;
        *((void *)v96 + 1) = *((void *)v97 + 1);
        uint64_t v98 = v22[12];
        uint64_t v99 = &a1[v98];
        uint64_t v100 = &a2[v98];
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = *((void *)v100 + 1);
        a1[v22[13]] = a2[v22[13]];
        a1[v22[14]] = a2[v22[14]];
        uint64_t v101 = v22[15];
        uint64_t v102 = &a1[v101];
        uint64_t v103 = &a2[v101];
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        uint64_t v104 = type metadata accessor for HourlyForecast();
        *(void *)&a1[*(int *)(v104 + 20)] = *(void *)&a2[*(int *)(v104 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v105 = sub_1A962E810();
          uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
          v106(a1, a2, v105);
          uint64_t v107 = (int *)type metadata accessor for Metadata();
          v106(&a1[v107[5]], &a2[v107[5]], v105);
          uint64_t v108 = v107[6];
          uint64_t v109 = &a1[v108];
          uint64_t v110 = &a2[v108];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v108], 1, v105))
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            v106(v109, v110, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
          }
          *(void *)&a1[v107[7]] = *(void *)&a2[v107[7]];
          *(void *)&a1[v107[8]] = *(void *)&a2[v107[8]];
          *(void *)&a1[v107[9]] = *(void *)&a2[v107[9]];
          uint64_t v276 = v107[10];
          uint64_t v277 = &a1[v276];
          uint64_t v278 = &a2[v276];
          *(void *)uint64_t v277 = *(void *)v278;
          *((void *)v277 + 1) = *((void *)v278 + 1);
          uint64_t v279 = v107[11];
          v280 = &a1[v279];
          uint64_t v281 = &a2[v279];
          *(void *)v280 = *(void *)v281;
          *((void *)v280 + 1) = *((void *)v281 + 1);
          uint64_t v282 = v107[12];
          v283 = &a1[v282];
          v284 = &a2[v282];
          *(void *)v283 = *(void *)v284;
          *((void *)v283 + 1) = *((void *)v284 + 1);
          a1[v107[13]] = a2[v107[13]];
          a1[v107[14]] = a2[v107[14]];
          uint64_t v285 = v107[15];
          uint64_t v286 = &a1[v285];
          v287 = &a2[v285];
          *(void *)uint64_t v286 = *(void *)v287;
          *((void *)v286 + 1) = *((void *)v287 + 1);
          *(void *)&a1[HourForecast[5]] = *(void *)&a2[HourForecast[5]];
          *(void *)&a1[HourForecast[6]] = *(void *)&a2[HourForecast[6]];
          uint64_t v288 = HourForecast[7];
          __dst = &a1[v288];
          uint64_t v289 = &a2[v288];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v289, 1, v105))
          {
            uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dst, v289, *(void *)(*(void *)(v290 - 8) + 64));
          }
          else
          {
            v106(__dst, v289, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v105);
          }
          *(void *)&a1[HourForecast[8]] = *(void *)&a2[HourForecast[8]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        break;
      case 5u:
        uint64_t v29 = sub_1A962E810();
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        v30(a1, a2, v29);
        uint64_t v31 = (int *)type metadata accessor for Metadata();
        v30(&a1[v31[5]], &a2[v31[5]], v29);
        uint64_t v32 = v31[6];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v32], 1, v29))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v30(v33, v34, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v29);
        }
        *(void *)&a1[v31[7]] = *(void *)&a2[v31[7]];
        *(void *)&a1[v31[8]] = *(void *)&a2[v31[8]];
        *(void *)&a1[v31[9]] = *(void *)&a2[v31[9]];
        uint64_t v112 = v31[10];
        double v113 = &a1[v112];
        uint64_t v114 = &a2[v112];
        *(void *)double v113 = *(void *)v114;
        *((void *)v113 + 1) = *((void *)v114 + 1);
        uint64_t v115 = v31[11];
        double v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        *(void *)double v116 = *(void *)v117;
        *((void *)v116 + 1) = *((void *)v117 + 1);
        uint64_t v118 = v31[12];
        uint64_t v119 = &a1[v118];
        uint64_t v120 = &a2[v118];
        *(void *)uint64_t v119 = *(void *)v120;
        *((void *)v119 + 1) = *((void *)v120 + 1);
        a1[v31[13]] = a2[v31[13]];
        a1[v31[14]] = a2[v31[14]];
        uint64_t v121 = v31[15];
        double v122 = &a1[v121];
        uint64_t v123 = &a2[v121];
        *(void *)double v122 = *(void *)v123;
        *((void *)v122 + 1) = *((void *)v123 + 1);
        uint64_t v124 = type metadata accessor for PeriodicForecasts();
        *(void *)&a1[*(int *)(v124 + 20)] = *(void *)&a2[*(int *)(v124 + 20)];
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        sub_1A9631510();
        break;
      case 7u:
        uint64_t v36 = sub_1A962E810();
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        v37(a1, a2, v36);
        uint64_t v38 = (int *)type metadata accessor for Metadata();
        v37(&a1[v38[5]], &a2[v38[5]], v36);
        uint64_t v39 = v38[6];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v39], 1, v36))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v37(v40, v41, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v36);
        }
        *(void *)&a1[v38[7]] = *(void *)&a2[v38[7]];
        *(void *)&a1[v38[8]] = *(void *)&a2[v38[8]];
        *(void *)&a1[v38[9]] = *(void *)&a2[v38[9]];
        uint64_t v125 = v38[10];
        uint64_t v126 = &a1[v125];
        uint64_t v127 = &a2[v125];
        *(void *)uint64_t v126 = *(void *)v127;
        *((void *)v126 + 1) = *((void *)v127 + 1);
        uint64_t v128 = v38[11];
        double v129 = &a1[v128];
        uint64_t v130 = &a2[v128];
        *(void *)double v129 = *(void *)v130;
        *((void *)v129 + 1) = *((void *)v130 + 1);
        uint64_t v131 = v38[12];
        uint64_t v132 = &a1[v131];
        uint64_t v133 = &a2[v131];
        *(void *)uint64_t v132 = *(void *)v133;
        *((void *)v132 + 1) = *((void *)v133 + 1);
        a1[v38[13]] = a2[v38[13]];
        a1[v38[14]] = a2[v38[14]];
        uint64_t v134 = v38[15];
        uint64_t v135 = &a1[v134];
        uint64_t v136 = &a2[v134];
        *(void *)uint64_t v135 = *(void *)v136;
        *((void *)v135 + 1) = *((void *)v136 + 1);
        uint64_t v137 = (int *)type metadata accessor for LocationInfo();
        uint64_t v138 = v137[5];
        uint64_t v139 = &a1[v138];
        uint64_t v140 = &a2[v138];
        *(void *)uint64_t v139 = *(void *)v140;
        *((void *)v139 + 1) = *((void *)v140 + 1);
        uint64_t v141 = v137[6];
        uint64_t v142 = &a1[v141];
        uint64_t v143 = &a2[v141];
        *(void *)uint64_t v142 = *(void *)v143;
        *((void *)v142 + 1) = *((void *)v143 + 1);
        uint64_t v144 = v137[7];
        int v145 = &a1[v144];
        unint64_t v146 = &a2[v144];
        *(void *)int v145 = *(void *)v146;
        *((void *)v145 + 1) = *((void *)v146 + 1);
        uint64_t v147 = v137[8];
        uint64_t v148 = &a1[v147];
        uint64_t v149 = &a2[v147];
        *(void *)uint64_t v148 = *(void *)v149;
        *((void *)v148 + 1) = *((void *)v149 + 1);
        uint64_t v150 = v137[9];
        uint64_t v151 = &a1[v150];
        uint64_t v152 = &a2[v150];
        *(void *)uint64_t v151 = *(void *)v152;
        *((void *)v151 + 1) = *((void *)v152 + 1);
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        sub_1A9631510();
        break;
      case 8u:
        uint64_t v43 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v153 = *(int *)(v43 + 20);
          int v154 = &a1[v153];
          uint64_t v155 = &a2[v153];
          uint64_t v156 = sub_1A962E810();
          uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
          sub_1A9631510();
          v157(v154, v155, v156);
          uint64_t v158 = (int *)type metadata accessor for Metadata();
          v157(&v154[v158[5]], &v155[v158[5]], v156);
          uint64_t v159 = v158[6];
          char v160 = &v154[v159];
          uint64_t v161 = &v155[v159];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v155[v159], 1, v156))
          {
            uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            v157(v160, v161, v156);
            __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v156);
          }
          *(void *)&v154[v158[7]] = *(void *)&v155[v158[7]];
          *(void *)&v154[v158[8]] = *(void *)&v155[v158[8]];
          *(void *)&v154[v158[9]] = *(void *)&v155[v158[9]];
          uint64_t v291 = v158[10];
          uint64_t v292 = &v154[v291];
          v293 = &v155[v291];
          *(void *)uint64_t v292 = *(void *)v293;
          *((void *)v292 + 1) = *((void *)v293 + 1);
          uint64_t v294 = v158[11];
          uint64_t v295 = &v154[v294];
          uint64_t v296 = &v155[v294];
          *(void *)uint64_t v295 = *(void *)v296;
          *((void *)v295 + 1) = *((void *)v296 + 1);
          uint64_t v297 = v158[12];
          v298 = &v154[v297];
          uint64_t v299 = &v155[v297];
          *(void *)v298 = *(void *)v299;
          *((void *)v298 + 1) = *((void *)v299 + 1);
          v154[v158[13]] = v155[v158[13]];
          v154[v158[14]] = v155[v158[14]];
          uint64_t v300 = v158[15];
          v301 = &v154[v300];
          v302 = &v155[v300];
          *(void *)v301 = *(void *)v302;
          *((void *)v301 + 1) = *((void *)v302 + 1);
          *(_OWORD *)&a1[*(int *)(v43 + 24)] = *(_OWORD *)&a2[*(int *)(v43 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v43);
        }
        break;
      case 9u:
        uint64_t v45 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          uint64_t v163 = sub_1A962E810();
          uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
          v164(a1, a2, v163);
          uint64_t v165 = (int *)type metadata accessor for Metadata();
          v164(&a1[v165[5]], &a2[v165[5]], v163);
          uint64_t v166 = v165[6];
          uint64_t v167 = &a1[v166];
          uint64_t v168 = &a2[v166];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v166], 1, v163))
          {
            uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            v164(v167, v168, v163);
            __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, v163);
          }
          *(void *)&a1[v165[7]] = *(void *)&a2[v165[7]];
          *(void *)&a1[v165[8]] = *(void *)&a2[v165[8]];
          *(void *)&a1[v165[9]] = *(void *)&a2[v165[9]];
          uint64_t v303 = v165[10];
          uint64_t v304 = &a1[v303];
          v305 = &a2[v303];
          *(void *)uint64_t v304 = *(void *)v305;
          *((void *)v304 + 1) = *((void *)v305 + 1);
          uint64_t v306 = v165[11];
          uint64_t v307 = &a1[v306];
          uint64_t v308 = &a2[v306];
          *(void *)uint64_t v307 = *(void *)v308;
          *((void *)v307 + 1) = *((void *)v308 + 1);
          uint64_t v309 = v165[12];
          v310 = &a1[v309];
          uint64_t v311 = &a2[v309];
          *(void *)v310 = *(void *)v311;
          *((void *)v310 + 1) = *((void *)v311 + 1);
          a1[v165[13]] = a2[v165[13]];
          a1[v165[14]] = a2[v165[14]];
          uint64_t v312 = v165[15];
          v313 = &a1[v312];
          v314 = &a2[v312];
          *(void *)v313 = *(void *)v314;
          *((void *)v313 + 1) = *((void *)v314 + 1);
          *(void *)&a1[*(int *)(v45 + 20)] = *(void *)&a2[*(int *)(v45 + 20)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        break;
      case 0xAu:
        uint64_t v47 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          uint64_t v170 = *(int *)(v47 + 24);
          uint64_t v171 = &a1[v170];
          uint64_t v172 = &a2[v170];
          uint64_t v173 = sub_1A962E810();
          char v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
          sub_1A9631510();
          sub_1A9631510();
          v174(v171, v172, v173);
          uint64_t v175 = (int *)type metadata accessor for Metadata();
          v174(&v171[v175[5]], &v172[v175[5]], v173);
          uint64_t v176 = v175[6];
          uint64_t v177 = &v171[v176];
          uint64_t v178 = &v172[v176];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v172[v176], 1, v173))
          {
            uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
          }
          else
          {
            v174(v177, v178, v173);
            __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v173);
          }
          *(void *)&v171[v175[7]] = *(void *)&v172[v175[7]];
          *(void *)&v171[v175[8]] = *(void *)&v172[v175[8]];
          *(void *)&v171[v175[9]] = *(void *)&v172[v175[9]];
          uint64_t v315 = v175[10];
          uint64_t v316 = &v171[v315];
          v317 = &v172[v315];
          *(void *)uint64_t v316 = *(void *)v317;
          *((void *)v316 + 1) = *((void *)v317 + 1);
          uint64_t v318 = v175[11];
          uint64_t v319 = &v171[v318];
          uint64_t v320 = &v172[v318];
          *(void *)uint64_t v319 = *(void *)v320;
          *((void *)v319 + 1) = *((void *)v320 + 1);
          uint64_t v321 = v175[12];
          uint64_t v322 = &v171[v321];
          uint64_t v323 = &v172[v321];
          *(void *)uint64_t v322 = *(void *)v323;
          *((void *)v322 + 1) = *((void *)v323 + 1);
          v171[v175[13]] = v172[v175[13]];
          v171[v175[14]] = v172[v175[14]];
          uint64_t v324 = v175[15];
          v325 = &v171[v324];
          uint64_t v326 = &v172[v324];
          *(void *)v325 = *(void *)v326;
          *((void *)v325 + 1) = *((void *)v326 + 1);
          *(_OWORD *)&a1[*(int *)(v47 + 28)] = *(_OWORD *)&a2[*(int *)(v47 + 28)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
        }
        break;
      case 0xBu:
        uint64_t v49 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v180 = sub_1A962E810();
          uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16);
          v181(a1, a2, v180);
          uint64_t v182 = (int *)type metadata accessor for Metadata();
          v181(&a1[v182[5]], &a2[v182[5]], v180);
          uint64_t v183 = v182[6];
          uint64_t v184 = &a1[v183];
          uint64_t v185 = &a2[v183];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v183], 1, v180))
          {
            uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
          }
          else
          {
            v181(v184, v185, v180);
            __swift_storeEnumTagSinglePayload((uint64_t)v184, 0, 1, v180);
          }
          *(void *)&a1[v182[7]] = *(void *)&a2[v182[7]];
          *(void *)&a1[v182[8]] = *(void *)&a2[v182[8]];
          *(void *)&a1[v182[9]] = *(void *)&a2[v182[9]];
          uint64_t v327 = v182[10];
          v328 = &a1[v327];
          v329 = &a2[v327];
          *(void *)v328 = *(void *)v329;
          *((void *)v328 + 1) = *((void *)v329 + 1);
          uint64_t v330 = v182[11];
          uint64_t v331 = &a1[v330];
          v332 = &a2[v330];
          *(void *)uint64_t v331 = *(void *)v332;
          *((void *)v331 + 1) = *((void *)v332 + 1);
          uint64_t v333 = v182[12];
          uint64_t v334 = &a1[v333];
          uint64_t v335 = &a2[v333];
          *(void *)uint64_t v334 = *(void *)v335;
          *((void *)v334 + 1) = *((void *)v335 + 1);
          a1[v182[13]] = a2[v182[13]];
          a1[v182[14]] = a2[v182[14]];
          uint64_t v336 = v182[15];
          v337 = &a1[v336];
          uint64_t v338 = &a2[v336];
          *(void *)v337 = *(void *)v338;
          *((void *)v337 + 1) = *((void *)v338 + 1);
          uint64_t v339 = *(int *)(v49 + 20);
          v340 = &a1[v339];
          v341 = &a2[v339];
          *(void *)v340 = *(void *)v341;
          *((void *)v340 + 1) = *((void *)v341 + 1);
          *(void *)&a1[*(int *)(v49 + 24)] = *(void *)&a2[*(int *)(v49 + 24)];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v49);
        }
        break;
      case 0xCu:
        uint64_t v51 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v51))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v187 = sub_1A962E810();
          uint64_t v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
          v188(a1, a2, v187);
          uint64_t v189 = (int *)type metadata accessor for Metadata();
          v188(&a1[v189[5]], &a2[v189[5]], v187);
          uint64_t v190 = v189[6];
          uint64_t v191 = &a1[v190];
          uint64_t v192 = &a2[v190];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v190], 1, v187))
          {
            uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            v188(v191, v192, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v187);
          }
          *(void *)&a1[v189[7]] = *(void *)&a2[v189[7]];
          *(void *)&a1[v189[8]] = *(void *)&a2[v189[8]];
          *(void *)&a1[v189[9]] = *(void *)&a2[v189[9]];
          uint64_t v342 = v189[10];
          uint64_t v343 = &a1[v342];
          v344 = &a2[v342];
          *(void *)uint64_t v343 = *(void *)v344;
          *((void *)v343 + 1) = *((void *)v344 + 1);
          uint64_t v345 = v189[11];
          uint64_t v346 = &a1[v345];
          uint64_t v347 = &a2[v345];
          *(void *)uint64_t v346 = *(void *)v347;
          *((void *)v346 + 1) = *((void *)v347 + 1);
          uint64_t v348 = v189[12];
          v349 = &a1[v348];
          uint64_t v350 = &a2[v348];
          *(void *)v349 = *(void *)v350;
          *((void *)v349 + 1) = *((void *)v350 + 1);
          a1[v189[13]] = a2[v189[13]];
          a1[v189[14]] = a2[v189[14]];
          uint64_t v351 = v189[15];
          v352 = &a1[v351];
          uint64_t v353 = &a2[v351];
          *(void *)v352 = *(void *)v353;
          *((void *)v352 + 1) = *((void *)v353 + 1);
          uint64_t v354 = v51[5];
          uint64_t v355 = &a1[v354];
          uint64_t v356 = &a2[v354];
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          if (__swift_getEnumTagSinglePayload((uint64_t)v356, 1, v187))
          {
            uint64_t v357 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v355, v356, *(void *)(*(void *)(v357 - 8) + 64));
            uint64_t v358 = v188;
          }
          else
          {
            uint64_t v358 = v188;
            v188(v355, v356, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v355, 0, 1, v187);
          }
          uint64_t v371 = v51[6];
          v372 = &a1[v371];
          v373 = &a2[v371];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v371], 1, v187))
          {
            uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v372, v373, *(void *)(*(void *)(v374 - 8) + 64));
          }
          else
          {
            v358(v372, v373, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v187);
          }
          *(void *)&a1[v51[7]] = *(void *)&a2[v51[7]];
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v51);
        }
        break;
      case 0xDu:
        uint64_t v53 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v194 = *(int *)(v53 + 20);
          uint64_t v195 = &a1[v194];
          uint64_t v196 = &a2[v194];
          uint64_t v197 = sub_1A962E810();
          uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16);
          sub_1A9631510();
          v198(v195, v196, v197);
          uint64_t v199 = (int *)type metadata accessor for Metadata();
          v198(&v195[v199[5]], &v196[v199[5]], v197);
          uint64_t v200 = v199[6];
          uint64_t v201 = &v195[v200];
          uint64_t v202 = &v196[v200];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v196[v200], 1, v197))
          {
            uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            v198(v201, v202, v197);
            __swift_storeEnumTagSinglePayload((uint64_t)v201, 0, 1, v197);
          }
          *(void *)&v195[v199[7]] = *(void *)&v196[v199[7]];
          *(void *)&v195[v199[8]] = *(void *)&v196[v199[8]];
          *(void *)&v195[v199[9]] = *(void *)&v196[v199[9]];
          uint64_t v359 = v199[10];
          v360 = &v195[v359];
          v361 = &v196[v359];
          *(void *)v360 = *(void *)v361;
          *((void *)v360 + 1) = *((void *)v361 + 1);
          uint64_t v362 = v199[11];
          uint64_t v363 = &v195[v362];
          v364 = &v196[v362];
          *(void *)uint64_t v363 = *(void *)v364;
          *((void *)v363 + 1) = *((void *)v364 + 1);
          uint64_t v365 = v199[12];
          uint64_t v366 = &v195[v365];
          uint64_t v367 = &v196[v365];
          *(void *)uint64_t v366 = *(void *)v367;
          *((void *)v366 + 1) = *((void *)v367 + 1);
          v195[v199[13]] = v196[v199[13]];
          v195[v199[14]] = v196[v199[14]];
          uint64_t v368 = v199[15];
          v369 = &v195[v368];
          uint64_t v370 = &v196[v368];
          *(void *)v369 = *(void *)v370;
          *((void *)v369 + 1) = *((void *)v370 + 1);
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v53);
        }
        break;
      default:
        uint64_t v4 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
        {
          uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_1A962E810();
          uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          v56(a1, a2, v55);
          uint64_t v57 = (int *)type metadata accessor for Metadata();
          v56(&a1[v57[5]], &a2[v57[5]], v55);
          uint64_t v58 = v57[6];
          uint64_t v59 = &a1[v58];
          uint64_t v60 = &a2[v58];
          if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v58], 1, v55))
          {
            uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            v56(v59, v60, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v55);
          }
          *(void *)&a1[v57[7]] = *(void *)&a2[v57[7]];
          *(void *)&a1[v57[8]] = *(void *)&a2[v57[8]];
          *(void *)&a1[v57[9]] = *(void *)&a2[v57[9]];
          uint64_t v241 = v57[10];
          v242 = &a1[v241];
          v243 = &a2[v241];
          *(void *)v242 = *(void *)v243;
          *((void *)v242 + 1) = *((void *)v243 + 1);
          uint64_t v244 = v57[11];
          uint64_t v245 = &a1[v244];
          v246 = &a2[v244];
          *(void *)uint64_t v245 = *(void *)v246;
          *((void *)v245 + 1) = *((void *)v246 + 1);
          uint64_t v247 = v57[12];
          uint64_t v248 = &a1[v247];
          v249 = &a2[v247];
          *(void *)uint64_t v248 = *(void *)v249;
          *((void *)v248 + 1) = *((void *)v249 + 1);
          a1[v57[13]] = a2[v57[13]];
          a1[v57[14]] = a2[v57[14]];
          uint64_t v250 = v57[15];
          uint64_t v251 = &a1[v250];
          v252 = &a2[v250];
          *(void *)uint64_t v251 = *(void *)v252;
          *((void *)v251 + 1) = *((void *)v252 + 1);
          uint64_t v253 = v4[5];
          uint64_t v254 = &a1[v253];
          v255 = &a2[v253];
          *(void *)uint64_t v254 = *(void *)v255;
          *((void *)v254 + 1) = *((void *)v255 + 1);
          a1[v4[6]] = a2[v4[6]];
          uint64_t v256 = v4[7];
          uint64_t v257 = &a1[v256];
          v258 = &a2[v256];
          *(void *)uint64_t v257 = *(void *)v258;
          *((void *)v257 + 1) = *((void *)v258 + 1);
          uint64_t v259 = v4[8];
          uint64_t v260 = &a1[v259];
          v261 = &a2[v259];
          uint64_t v262 = *(void *)v261;
          v260[8] = v261[8];
          *(void *)uint64_t v260 = v262;
          uint64_t v263 = v4[9];
          v264 = &a1[v263];
          v265 = &a2[v263];
          uint64_t v266 = *(void *)v265;
          v264[8] = v265[8];
          *(void *)v264 = v266;
          a1[v4[10]] = a2[v4[10]];
          uint64_t v267 = v4[11];
          v268 = &a1[v267];
          v269 = &a2[v267];
          *(void *)v268 = *(void *)v269;
          *((void *)v268 + 1) = *((void *)v269 + 1);
          uint64_t v270 = v4[12];
          uint64_t v271 = &a1[v270];
          v272 = &a2[v270];
          *(void *)uint64_t v271 = *(void *)v272;
          *((void *)v271 + 1) = *((void *)v272 + 1);
          *(void *)&a1[v4[13]] = *(void *)&a2[v4[13]];
          uint64_t v273 = v4[14];
          uint64_t v274 = &a1[v273];
          v275 = &a2[v273];
          *(void *)uint64_t v274 = *(void *)v275;
          *((void *)v274 + 1) = *((void *)v275 + 1);
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          sub_1A9631510();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A95B5310(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *initializeWithTake for WeatherDataResponse(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = (int *)type metadata accessor for AirQuality();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
      {
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v57 = sub_1A962E810();
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
        v58((char *)a1, (char *)a2, v57);
        uint64_t v59 = (int *)type metadata accessor for Metadata();
        v58((char *)a1 + v59[5], (char *)a2 + v59[5], v57);
        uint64_t v60 = v59[6];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v60, 1, v57))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v58(v61, v62, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v57);
        }
        *(void *)((char *)a1 + v59[7]) = *(void *)((char *)a2 + v59[7]);
        *(void *)((char *)a1 + v59[8]) = *(void *)((char *)a2 + v59[8]);
        *(void *)((char *)a1 + v59[9]) = *(void *)((char *)a2 + v59[9]);
        *(_OWORD *)((char *)a1 + v59[10]) = *(_OWORD *)((char *)a2 + v59[10]);
        *(_OWORD *)((char *)a1 + v59[11]) = *(_OWORD *)((char *)a2 + v59[11]);
        *(_OWORD *)((char *)a1 + v59[12]) = *(_OWORD *)((char *)a2 + v59[12]);
        *((unsigned char *)a1 + v59[13]) = *((unsigned char *)a2 + v59[13]);
        *((unsigned char *)a1 + v59[14]) = *((unsigned char *)a2 + v59[14]);
        *(_OWORD *)((char *)a1 + v59[15]) = *(_OWORD *)((char *)a2 + v59[15]);
        *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
        *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
        *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
        uint64_t v157 = v6[8];
        uint64_t v158 = (char *)a1 + v157;
        uint64_t v159 = (char *)a2 + v157;
        v158[8] = v159[8];
        *(void *)uint64_t v158 = *(void *)v159;
        uint64_t v160 = v6[9];
        uint64_t v161 = (char *)a1 + v160;
        uint64_t v162 = (char *)a2 + v160;
        *(void *)uint64_t v161 = *(void *)v162;
        v161[8] = v162[8];
        *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
        *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
        *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
      }
      goto LABEL_96;
    case 1u:
      uint64_t v8 = sub_1A962E810();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
      v9((char *)a1, (char *)a2, v8);
      uint64_t v10 = (int *)type metadata accessor for Metadata();
      v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
      uint64_t v11 = v10[6];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      }
      *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
      *(void *)((char *)a1 + v10[8]) = *(void *)((char *)a2 + v10[8]);
      *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
      *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
      *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
      *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
      *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
      *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
      *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
      uint64_t v64 = (int *)type metadata accessor for CurrentWeather();
      uint64_t v65 = v64[5];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v65, 1, v8))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v9(v66, v67, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v8);
      }
      *(void *)((char *)a1 + v64[6]) = *(void *)((char *)a2 + v64[6]);
      *(void *)((char *)a1 + v64[7]) = *(void *)((char *)a2 + v64[7]);
      *(void *)((char *)a1 + v64[8]) = *(void *)((char *)a2 + v64[8]);
      *(void *)((char *)a1 + v64[9]) = *(void *)((char *)a2 + v64[9]);
      *((unsigned char *)a1 + v64[10]) = *((unsigned char *)a2 + v64[10]);
      *((unsigned char *)a1 + v64[11]) = *((unsigned char *)a2 + v64[11]);
      *(void *)((char *)a1 + v64[12]) = *(void *)((char *)a2 + v64[12]);
      *(void *)((char *)a1 + v64[13]) = *(void *)((char *)a2 + v64[13]);
      *(void *)((char *)a1 + v64[14]) = *(void *)((char *)a2 + v64[14]);
      *(void *)((char *)a1 + v64[15]) = *(void *)((char *)a2 + v64[15]);
      *(void *)((char *)a1 + v64[16]) = *(void *)((char *)a2 + v64[16]);
      *(void *)((char *)a1 + v64[17]) = *(void *)((char *)a2 + v64[17]);
      *(void *)((char *)a1 + v64[18]) = *(void *)((char *)a2 + v64[18]);
      *(void *)((char *)a1 + v64[19]) = *(void *)((char *)a2 + v64[19]);
      *(void *)((char *)a1 + v64[20]) = *(void *)((char *)a2 + v64[20]);
      *(void *)((char *)a1 + v64[21]) = *(void *)((char *)a2 + v64[21]);
      *(void *)((char *)a1 + v64[22]) = *(void *)((char *)a2 + v64[22]);
      *(void *)((char *)a1 + v64[23]) = *(void *)((char *)a2 + v64[23]);
      *(void *)((char *)a1 + v64[24]) = *(void *)((char *)a2 + v64[24]);
      *(void *)((char *)a1 + v64[25]) = *(void *)((char *)a2 + v64[25]);
      *(void *)((char *)a1 + v64[26]) = *(void *)((char *)a2 + v64[26]);
      uint64_t v128 = v64[27];
      double v129 = (char *)a1 + v128;
      uint64_t v130 = (char *)a2 + v128;
      *(void *)double v129 = *(void *)v130;
      v129[8] = v130[8];
      *((unsigned char *)a1 + v64[28]) = *((unsigned char *)a2 + v64[28]);
      *(void *)((char *)a1 + v64[29]) = *(void *)((char *)a2 + v64[29]);
      *(void *)((char *)a1 + v64[30]) = *(void *)((char *)a2 + v64[30]);
      *(void *)((char *)a1 + v64[31]) = *(void *)((char *)a2 + v64[31]);
      *(void *)((char *)a1 + v64[32]) = *(void *)((char *)a2 + v64[32]);
      *(void *)((char *)a1 + v64[33]) = *(void *)((char *)a2 + v64[33]);
      *(void *)((char *)a1 + v64[34]) = *(void *)((char *)a2 + v64[34]);
      uint64_t v131 = v64[35];
      uint64_t v132 = (char *)a1 + v131;
      uint64_t v133 = (char *)a2 + v131;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v131, 1, v8))
      {
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        v9(v132, v133, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v8);
      }
      uint64_t v135 = v64[36];
      uint64_t v136 = (char *)a1 + v135;
      uint64_t v137 = (char *)a2 + v135;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v135, 1, v8))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        v9(v136, v137, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v8);
      }
      *(void *)((char *)a1 + v64[37]) = *(void *)((char *)a2 + v64[37]);
      uint64_t v139 = v64[38];
      uint64_t v140 = (char *)a1 + v139;
      uint64_t v141 = (char *)a2 + v139;
      *(void *)uint64_t v140 = *(void *)v141;
      v140[8] = v141[8];
      uint64_t v142 = v64[39];
      uint64_t v143 = (char *)a1 + v142;
      uint64_t v144 = (char *)a2 + v142;
      *(void *)uint64_t v143 = *(void *)v144;
      v143[8] = v144[8];
      uint64_t v145 = v64[40];
      unint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = (char *)a2 + v145;
      *(void *)unint64_t v146 = *(void *)v147;
      v146[8] = v147[8];
      uint64_t v148 = v64[41];
      uint64_t v149 = (char *)a1 + v148;
      uint64_t v150 = (char *)a2 + v148;
      *(void *)uint64_t v149 = *(void *)v150;
      v149[8] = v150[8];
      *(void *)((char *)a1 + v64[42]) = *(void *)((char *)a2 + v64[42]);
      *(void *)((char *)a1 + v64[43]) = *(void *)((char *)a2 + v64[43]);
      uint64_t v151 = v64[44];
      uint64_t v152 = (char *)a1 + v151;
      uint64_t v153 = (char *)a2 + v151;
      *(void *)uint64_t v152 = *(void *)v153;
      v152[8] = v153[8];
      uint64_t v154 = v64[45];
      uint64_t v155 = (char *)a1 + v154;
      uint64_t v156 = (char *)a2 + v154;
      *(void *)uint64_t v155 = *(void *)v156;
      v155[8] = v156[8];
      *(void *)((char *)a1 + v64[46]) = *(void *)((char *)a2 + v64[46]);
      goto LABEL_96;
    case 2u:
      uint64_t v15 = sub_1A962E810();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16((char *)a1, (char *)a2, v15);
      uint64_t v17 = (int *)type metadata accessor for Metadata();
      v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
      uint64_t v18 = v17[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v16(v19, v20, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
      }
      *(void *)((char *)a1 + v17[7]) = *(void *)((char *)a2 + v17[7]);
      *(void *)((char *)a1 + v17[8]) = *(void *)((char *)a2 + v17[8]);
      *(void *)((char *)a1 + v17[9]) = *(void *)((char *)a2 + v17[9]);
      *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
      *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
      *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
      *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
      *((unsigned char *)a1 + v17[14]) = *((unsigned char *)a2 + v17[14]);
      *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
      uint64_t v69 = type metadata accessor for DailyForecast();
      *(void *)((char *)a1 + *(int *)(v69 + 20)) = *(void *)((char *)a2 + *(int *)(v69 + 20));
      goto LABEL_96;
    case 3u:
      uint64_t v22 = sub_1A962E810();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23((char *)a1, (char *)a2, v22);
      uint64_t v24 = (int *)type metadata accessor for Metadata();
      v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
      uint64_t v25 = v24[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v23(v26, v27, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
      }
      *(void *)((char *)a1 + v24[7]) = *(void *)((char *)a2 + v24[7]);
      *(void *)((char *)a1 + v24[8]) = *(void *)((char *)a2 + v24[8]);
      *(void *)((char *)a1 + v24[9]) = *(void *)((char *)a2 + v24[9]);
      *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
      *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
      *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
      *((unsigned char *)a1 + v24[13]) = *((unsigned char *)a2 + v24[13]);
      *((unsigned char *)a1 + v24[14]) = *((unsigned char *)a2 + v24[14]);
      *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
      uint64_t v70 = type metadata accessor for HourlyForecast();
      *(void *)((char *)a1 + *(int *)(v70 + 20)) = *(void *)((char *)a2 + *(int *)(v70 + 20));
      goto LABEL_96;
    case 4u:
      uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v71 = sub_1A962E810();
        uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32);
        v72((char *)a1, (char *)a2, v71);
        uint64_t v73 = (int *)type metadata accessor for Metadata();
        v72((char *)a1 + v73[5], (char *)a2 + v73[5], v71);
        uint64_t v74 = v73[6];
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v74, 1, v71))
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          v72(v75, v76, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v71);
        }
        *(void *)((char *)a1 + v73[7]) = *(void *)((char *)a2 + v73[7]);
        *(void *)((char *)a1 + v73[8]) = *(void *)((char *)a2 + v73[8]);
        *(void *)((char *)a1 + v73[9]) = *(void *)((char *)a2 + v73[9]);
        *(_OWORD *)((char *)a1 + v73[10]) = *(_OWORD *)((char *)a2 + v73[10]);
        *(_OWORD *)((char *)a1 + v73[11]) = *(_OWORD *)((char *)a2 + v73[11]);
        *(_OWORD *)((char *)a1 + v73[12]) = *(_OWORD *)((char *)a2 + v73[12]);
        *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
        *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
        *(_OWORD *)((char *)a1 + v73[15]) = *(_OWORD *)((char *)a2 + v73[15]);
        *(void *)((char *)a1 + HourForecast[5]) = *(void *)((char *)a2 + HourForecast[5]);
        *(void *)((char *)a1 + HourForecast[6]) = *(void *)((char *)a2 + HourForecast[6]);
        uint64_t v163 = HourForecast[7];
        uint64_t v164 = (char *)a1 + v163;
        uint64_t v165 = (char *)a2 + v163;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v163, 1, v71))
        {
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
        }
        else
        {
          v72(v164, v165, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v71);
        }
        *(void *)((char *)a1 + HourForecast[8]) = *(void *)((char *)a2 + HourForecast[8]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
      }
      goto LABEL_96;
    case 5u:
      uint64_t v31 = sub_1A962E810();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32((char *)a1, (char *)a2, v31);
      uint64_t v33 = (int *)type metadata accessor for Metadata();
      v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
      uint64_t v34 = v33[6];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v32(v35, v36, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
      }
      *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
      *(void *)((char *)a1 + v33[8]) = *(void *)((char *)a2 + v33[8]);
      *(void *)((char *)a1 + v33[9]) = *(void *)((char *)a2 + v33[9]);
      *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
      *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
      *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
      *((unsigned char *)a1 + v33[13]) = *((unsigned char *)a2 + v33[13]);
      *((unsigned char *)a1 + v33[14]) = *((unsigned char *)a2 + v33[14]);
      *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
      uint64_t v78 = type metadata accessor for PeriodicForecasts();
      *(void *)((char *)a1 + *(int *)(v78 + 20)) = *(void *)((char *)a2 + *(int *)(v78 + 20));
      goto LABEL_96;
    case 7u:
      uint64_t v38 = sub_1A962E810();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
      v39((char *)a1, (char *)a2, v38);
      uint64_t v40 = (int *)type metadata accessor for Metadata();
      v39((char *)a1 + v40[5], (char *)a2 + v40[5], v38);
      uint64_t v41 = v40[6];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v41, 1, v38))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        v39(v42, v43, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
      }
      *(void *)((char *)a1 + v40[7]) = *(void *)((char *)a2 + v40[7]);
      *(void *)((char *)a1 + v40[8]) = *(void *)((char *)a2 + v40[8]);
      *(void *)((char *)a1 + v40[9]) = *(void *)((char *)a2 + v40[9]);
      *(_OWORD *)((char *)a1 + v40[10]) = *(_OWORD *)((char *)a2 + v40[10]);
      *(_OWORD *)((char *)a1 + v40[11]) = *(_OWORD *)((char *)a2 + v40[11]);
      *(_OWORD *)((char *)a1 + v40[12]) = *(_OWORD *)((char *)a2 + v40[12]);
      *((unsigned char *)a1 + v40[13]) = *((unsigned char *)a2 + v40[13]);
      *((unsigned char *)a1 + v40[14]) = *((unsigned char *)a2 + v40[14]);
      *(_OWORD *)((char *)a1 + v40[15]) = *(_OWORD *)((char *)a2 + v40[15]);
      uint64_t v79 = (int *)type metadata accessor for LocationInfo();
      *(_OWORD *)((char *)a1 + v79[5]) = *(_OWORD *)((char *)a2 + v79[5]);
      *(_OWORD *)((char *)a1 + v79[6]) = *(_OWORD *)((char *)a2 + v79[6]);
      *(_OWORD *)((char *)a1 + v79[7]) = *(_OWORD *)((char *)a2 + v79[7]);
      *(_OWORD *)((char *)a1 + v79[8]) = *(_OWORD *)((char *)a2 + v79[8]);
      *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)((char *)a2 + v79[9]);
      goto LABEL_96;
    case 8u:
      uint64_t v45 = type metadata accessor for MarineForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
        memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v80 = *(int *)(v45 + 20);
        uint64_t v81 = (char *)a1 + v80;
        uint64_t v82 = (char *)a2 + v80;
        uint64_t v83 = sub_1A962E810();
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
        v84(v81, v82, v83);
        uint64_t v85 = (int *)type metadata accessor for Metadata();
        uint64_t v176 = v84;
        v84(&v81[v85[5]], &v82[v85[5]], v83);
        uint64_t v86 = v85[6];
        __dst = &v81[v86];
        uint64_t v87 = &v82[v86];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v86], 1, v83))
        {
          uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          v176(__dst, v87, v83);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v83);
        }
        *(void *)&v81[v85[7]] = *(void *)&v82[v85[7]];
        *(void *)&v81[v85[8]] = *(void *)&v82[v85[8]];
        *(void *)&v81[v85[9]] = *(void *)&v82[v85[9]];
        *(_OWORD *)&v81[v85[10]] = *(_OWORD *)&v82[v85[10]];
        *(_OWORD *)&v81[v85[11]] = *(_OWORD *)&v82[v85[11]];
        *(_OWORD *)&v81[v85[12]] = *(_OWORD *)&v82[v85[12]];
        v81[v85[13]] = v82[v85[13]];
        v81[v85[14]] = v82[v85[14]];
        *(_OWORD *)&v81[v85[15]] = *(_OWORD *)&v82[v85[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v45 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v45 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
      }
      goto LABEL_96;
    case 9u:
      uint64_t v47 = type metadata accessor for News();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
        memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v89 = sub_1A962E810();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32);
        v90((char *)a1, (char *)a2, v89);
        uint64_t v91 = (int *)type metadata accessor for Metadata();
        v90((char *)a1 + v91[5], (char *)a2 + v91[5], v89);
        uint64_t v92 = v91[6];
        uint64_t v93 = (char *)a1 + v92;
        uint64_t v94 = (char *)a2 + v92;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v92, 1, v89))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v90(v93, v94, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v89);
        }
        *(void *)((char *)a1 + v91[7]) = *(void *)((char *)a2 + v91[7]);
        *(void *)((char *)a1 + v91[8]) = *(void *)((char *)a2 + v91[8]);
        *(void *)((char *)a1 + v91[9]) = *(void *)((char *)a2 + v91[9]);
        *(_OWORD *)((char *)a1 + v91[10]) = *(_OWORD *)((char *)a2 + v91[10]);
        *(_OWORD *)((char *)a1 + v91[11]) = *(_OWORD *)((char *)a2 + v91[11]);
        *(_OWORD *)((char *)a1 + v91[12]) = *(_OWORD *)((char *)a2 + v91[12]);
        *((unsigned char *)a1 + v91[13]) = *((unsigned char *)a2 + v91[13]);
        *((unsigned char *)a1 + v91[14]) = *((unsigned char *)a2 + v91[14]);
        *(_OWORD *)((char *)a1 + v91[15]) = *(_OWORD *)((char *)a2 + v91[15]);
        *(void *)((char *)a1 + *(int *)(v47 + 20)) = *(void *)((char *)a2 + *(int *)(v47 + 20));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
      }
      goto LABEL_96;
    case 0xAu:
      uint64_t v49 = type metadata accessor for TideEvents();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v49))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
        memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v96 = *(int *)(v49 + 24);
        uint64_t v97 = (char *)a1 + v96;
        uint64_t v98 = (char *)a2 + v96;
        uint64_t v99 = sub_1A962E810();
        uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32);
        v100(v97, v98, v99);
        uint64_t v101 = (int *)type metadata accessor for Metadata();
        uint64_t v177 = v100;
        v100(&v97[v101[5]], &v98[v101[5]], v99);
        uint64_t v102 = v101[6];
        __dsta = &v97[v102];
        uint64_t v103 = &v98[v102];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v98[v102], 1, v99))
        {
          uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dsta, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          v177(__dsta, v103, v99);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v99);
        }
        *(void *)&v97[v101[7]] = *(void *)&v98[v101[7]];
        *(void *)&v97[v101[8]] = *(void *)&v98[v101[8]];
        *(void *)&v97[v101[9]] = *(void *)&v98[v101[9]];
        *(_OWORD *)&v97[v101[10]] = *(_OWORD *)&v98[v101[10]];
        *(_OWORD *)&v97[v101[11]] = *(_OWORD *)&v98[v101[11]];
        *(_OWORD *)&v97[v101[12]] = *(_OWORD *)&v98[v101[12]];
        v97[v101[13]] = v98[v101[13]];
        v97[v101[14]] = v98[v101[14]];
        *(_OWORD *)&v97[v101[15]] = *(_OWORD *)&v98[v101[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v49 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v49 + 28));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v49);
      }
      goto LABEL_96;
    case 0xBu:
      uint64_t v51 = type metadata accessor for WeatherAlerts();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v51))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
        memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v105 = sub_1A962E810();
        uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32);
        v106((char *)a1, (char *)a2, v105);
        uint64_t v107 = (int *)type metadata accessor for Metadata();
        v106((char *)a1 + v107[5], (char *)a2 + v107[5], v105);
        uint64_t v108 = v107[6];
        uint64_t v109 = (char *)a1 + v108;
        uint64_t v110 = (char *)a2 + v108;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v108, 1, v105))
        {
          uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          v106(v109, v110, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
        }
        *(void *)((char *)a1 + v107[7]) = *(void *)((char *)a2 + v107[7]);
        *(void *)((char *)a1 + v107[8]) = *(void *)((char *)a2 + v107[8]);
        *(void *)((char *)a1 + v107[9]) = *(void *)((char *)a2 + v107[9]);
        *(_OWORD *)((char *)a1 + v107[10]) = *(_OWORD *)((char *)a2 + v107[10]);
        *(_OWORD *)((char *)a1 + v107[11]) = *(_OWORD *)((char *)a2 + v107[11]);
        *(_OWORD *)((char *)a1 + v107[12]) = *(_OWORD *)((char *)a2 + v107[12]);
        *((unsigned char *)a1 + v107[13]) = *((unsigned char *)a2 + v107[13]);
        *((unsigned char *)a1 + v107[14]) = *((unsigned char *)a2 + v107[14]);
        *(_OWORD *)((char *)a1 + v107[15]) = *(_OWORD *)((char *)a2 + v107[15]);
        *(_OWORD *)((char *)a1 + *(int *)(v51 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v51 + 20));
        *(void *)((char *)a1 + *(int *)(v51 + 24)) = *(void *)((char *)a2 + *(int *)(v51 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v51);
      }
      goto LABEL_96;
    case 0xCu:
      uint64_t v53 = (int *)type metadata accessor for WeatherChange();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v53))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
        memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        uint64_t v112 = sub_1A962E810();
        double v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32);
        v113((char *)a1, (char *)a2, v112);
        uint64_t v114 = (int *)type metadata accessor for Metadata();
        v113((char *)a1 + v114[5], (char *)a2 + v114[5], v112);
        uint64_t v115 = v114[6];
        double v116 = (char *)a1 + v115;
        uint64_t v117 = (char *)a2 + v115;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v115, 1, v112))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          v113(v116, v117, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v112);
        }
        *(void *)((char *)a1 + v114[7]) = *(void *)((char *)a2 + v114[7]);
        *(void *)((char *)a1 + v114[8]) = *(void *)((char *)a2 + v114[8]);
        *(void *)((char *)a1 + v114[9]) = *(void *)((char *)a2 + v114[9]);
        *(_OWORD *)((char *)a1 + v114[10]) = *(_OWORD *)((char *)a2 + v114[10]);
        *(_OWORD *)((char *)a1 + v114[11]) = *(_OWORD *)((char *)a2 + v114[11]);
        *(_OWORD *)((char *)a1 + v114[12]) = *(_OWORD *)((char *)a2 + v114[12]);
        *((unsigned char *)a1 + v114[13]) = *((unsigned char *)a2 + v114[13]);
        *((unsigned char *)a1 + v114[14]) = *((unsigned char *)a2 + v114[14]);
        *(_OWORD *)((char *)a1 + v114[15]) = *(_OWORD *)((char *)a2 + v114[15]);
        uint64_t v167 = v53[5];
        uint64_t v168 = (char *)a1 + v167;
        uint64_t v169 = (char *)a2 + v167;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v167, 1, v112))
        {
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          v113(v168, v169, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v112);
        }
        uint64_t v171 = v53[6];
        uint64_t v172 = (char *)a1 + v171;
        uint64_t v173 = (char *)a2 + v171;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v171, 1, v112))
        {
          uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          v113(v172, v173, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v112);
        }
        *(void *)((char *)a1 + v53[7]) = *(void *)((char *)a2 + v53[7]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v53);
      }
      goto LABEL_96;
    case 0xDu:
      uint64_t v55 = type metadata accessor for WeatherComparisons();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v55))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
        memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v119 = *(int *)(v55 + 20);
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = sub_1A962E810();
        uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32);
        v123(v120, v121, v122);
        uint64_t v124 = (int *)type metadata accessor for Metadata();
        v123(&v120[v124[5]], &v121[v124[5]], v122);
        uint64_t v125 = v124[6];
        __dstb = &v120[v125];
        uint64_t v126 = &v121[v125];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v121[v125], 1, v122))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(__dstb, v126, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          v123(__dstb, v126, v122);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v122);
        }
        *(void *)&v120[v124[7]] = *(void *)&v121[v124[7]];
        *(void *)&v120[v124[8]] = *(void *)&v121[v124[8]];
        *(void *)&v120[v124[9]] = *(void *)&v121[v124[9]];
        *(_OWORD *)&v120[v124[10]] = *(_OWORD *)&v121[v124[10]];
        *(_OWORD *)&v120[v124[11]] = *(_OWORD *)&v121[v124[11]];
        *(_OWORD *)&v120[v124[12]] = *(_OWORD *)&v121[v124[12]];
        v120[v124[13]] = v121[v124[13]];
        v120[v124[14]] = v121[v124[14]];
        *(_OWORD *)&v120[v124[15]] = *(_OWORD *)&v121[v124[15]];
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v55);
      }
LABEL_96:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for WeatherDataResponse(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A95B5310((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataResponse);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
        {
          uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE088);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v57 = sub_1A962E810();
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
          v58((char *)a1, (char *)a2, v57);
          uint64_t v59 = (int *)type metadata accessor for Metadata();
          v58((char *)a1 + v59[5], (char *)a2 + v59[5], v57);
          uint64_t v60 = v59[6];
          uint64_t v61 = (char *)a1 + v60;
          uint64_t v62 = (char *)a2 + v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v60, 1, v57))
          {
            uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            v58(v61, v62, v57);
            __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v57);
          }
          *(void *)((char *)a1 + v59[7]) = *(void *)((char *)a2 + v59[7]);
          *(void *)((char *)a1 + v59[8]) = *(void *)((char *)a2 + v59[8]);
          *(void *)((char *)a1 + v59[9]) = *(void *)((char *)a2 + v59[9]);
          *(_OWORD *)((char *)a1 + v59[10]) = *(_OWORD *)((char *)a2 + v59[10]);
          *(_OWORD *)((char *)a1 + v59[11]) = *(_OWORD *)((char *)a2 + v59[11]);
          *(_OWORD *)((char *)a1 + v59[12]) = *(_OWORD *)((char *)a2 + v59[12]);
          *((unsigned char *)a1 + v59[13]) = *((unsigned char *)a2 + v59[13]);
          *((unsigned char *)a1 + v59[14]) = *((unsigned char *)a2 + v59[14]);
          *(_OWORD *)((char *)a1 + v59[15]) = *(_OWORD *)((char *)a2 + v59[15]);
          *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
          *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
          *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
          uint64_t v157 = v6[8];
          uint64_t v158 = (char *)a1 + v157;
          uint64_t v159 = (char *)a2 + v157;
          v158[8] = v159[8];
          *(void *)uint64_t v158 = *(void *)v159;
          uint64_t v160 = v6[9];
          uint64_t v161 = (char *)a1 + v160;
          uint64_t v162 = (char *)a2 + v160;
          *(void *)uint64_t v161 = *(void *)v162;
          v161[8] = v162[8];
          *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
          *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
          *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
          *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
          *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
        }
        goto LABEL_97;
      case 1u:
        uint64_t v8 = sub_1A962E810();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
        v9((char *)a1, (char *)a2, v8);
        uint64_t v10 = (int *)type metadata accessor for Metadata();
        v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
        uint64_t v11 = v10[6];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
        }
        *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
        *(void *)((char *)a1 + v10[8]) = *(void *)((char *)a2 + v10[8]);
        *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
        *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
        *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
        *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
        *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
        *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
        *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
        uint64_t v64 = (int *)type metadata accessor for CurrentWeather();
        uint64_t v65 = v64[5];
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v65, 1, v8))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v9(v66, v67, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v8);
        }
        *(void *)((char *)a1 + v64[6]) = *(void *)((char *)a2 + v64[6]);
        *(void *)((char *)a1 + v64[7]) = *(void *)((char *)a2 + v64[7]);
        *(void *)((char *)a1 + v64[8]) = *(void *)((char *)a2 + v64[8]);
        *(void *)((char *)a1 + v64[9]) = *(void *)((char *)a2 + v64[9]);
        *((unsigned char *)a1 + v64[10]) = *((unsigned char *)a2 + v64[10]);
        *((unsigned char *)a1 + v64[11]) = *((unsigned char *)a2 + v64[11]);
        *(void *)((char *)a1 + v64[12]) = *(void *)((char *)a2 + v64[12]);
        *(void *)((char *)a1 + v64[13]) = *(void *)((char *)a2 + v64[13]);
        *(void *)((char *)a1 + v64[14]) = *(void *)((char *)a2 + v64[14]);
        *(void *)((char *)a1 + v64[15]) = *(void *)((char *)a2 + v64[15]);
        *(void *)((char *)a1 + v64[16]) = *(void *)((char *)a2 + v64[16]);
        *(void *)((char *)a1 + v64[17]) = *(void *)((char *)a2 + v64[17]);
        *(void *)((char *)a1 + v64[18]) = *(void *)((char *)a2 + v64[18]);
        *(void *)((char *)a1 + v64[19]) = *(void *)((char *)a2 + v64[19]);
        *(void *)((char *)a1 + v64[20]) = *(void *)((char *)a2 + v64[20]);
        *(void *)((char *)a1 + v64[21]) = *(void *)((char *)a2 + v64[21]);
        *(void *)((char *)a1 + v64[22]) = *(void *)((char *)a2 + v64[22]);
        *(void *)((char *)a1 + v64[23]) = *(void *)((char *)a2 + v64[23]);
        *(void *)((char *)a1 + v64[24]) = *(void *)((char *)a2 + v64[24]);
        *(void *)((char *)a1 + v64[25]) = *(void *)((char *)a2 + v64[25]);
        *(void *)((char *)a1 + v64[26]) = *(void *)((char *)a2 + v64[26]);
        uint64_t v128 = v64[27];
        double v129 = (char *)a1 + v128;
        uint64_t v130 = (char *)a2 + v128;
        *(void *)double v129 = *(void *)v130;
        v129[8] = v130[8];
        *((unsigned char *)a1 + v64[28]) = *((unsigned char *)a2 + v64[28]);
        *(void *)((char *)a1 + v64[29]) = *(void *)((char *)a2 + v64[29]);
        *(void *)((char *)a1 + v64[30]) = *(void *)((char *)a2 + v64[30]);
        *(void *)((char *)a1 + v64[31]) = *(void *)((char *)a2 + v64[31]);
        *(void *)((char *)a1 + v64[32]) = *(void *)((char *)a2 + v64[32]);
        *(void *)((char *)a1 + v64[33]) = *(void *)((char *)a2 + v64[33]);
        *(void *)((char *)a1 + v64[34]) = *(void *)((char *)a2 + v64[34]);
        uint64_t v131 = v64[35];
        uint64_t v132 = (char *)a1 + v131;
        uint64_t v133 = (char *)a2 + v131;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v131, 1, v8))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          v9(v132, v133, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v8);
        }
        uint64_t v135 = v64[36];
        uint64_t v136 = (char *)a1 + v135;
        uint64_t v137 = (char *)a2 + v135;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v135, 1, v8))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          v9(v136, v137, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v8);
        }
        *(void *)((char *)a1 + v64[37]) = *(void *)((char *)a2 + v64[37]);
        uint64_t v139 = v64[38];
        uint64_t v140 = (char *)a1 + v139;
        uint64_t v141 = (char *)a2 + v139;
        *(void *)uint64_t v140 = *(void *)v141;
        v140[8] = v141[8];
        uint64_t v142 = v64[39];
        uint64_t v143 = (char *)a1 + v142;
        uint64_t v144 = (char *)a2 + v142;
        *(void *)uint64_t v143 = *(void *)v144;
        v143[8] = v144[8];
        uint64_t v145 = v64[40];
        unint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        *(void *)unint64_t v146 = *(void *)v147;
        v146[8] = v147[8];
        uint64_t v148 = v64[41];
        uint64_t v149 = (char *)a1 + v148;
        uint64_t v150 = (char *)a2 + v148;
        *(void *)uint64_t v149 = *(void *)v150;
        v149[8] = v150[8];
        *(void *)((char *)a1 + v64[42]) = *(void *)((char *)a2 + v64[42]);
        *(void *)((char *)a1 + v64[43]) = *(void *)((char *)a2 + v64[43]);
        uint64_t v151 = v64[44];
        uint64_t v152 = (char *)a1 + v151;
        uint64_t v153 = (char *)a2 + v151;
        *(void *)uint64_t v152 = *(void *)v153;
        v152[8] = v153[8];
        uint64_t v154 = v64[45];
        uint64_t v155 = (char *)a1 + v154;
        uint64_t v156 = (char *)a2 + v154;
        *(void *)uint64_t v155 = *(void *)v156;
        v155[8] = v156[8];
        *(void *)((char *)a1 + v64[46]) = *(void *)((char *)a2 + v64[46]);
        goto LABEL_97;
      case 2u:
        uint64_t v15 = sub_1A962E810();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16((char *)a1, (char *)a2, v15);
        uint64_t v17 = (int *)type metadata accessor for Metadata();
        v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
        uint64_t v18 = v17[6];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v16(v19, v20, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
        }
        *(void *)((char *)a1 + v17[7]) = *(void *)((char *)a2 + v17[7]);
        *(void *)((char *)a1 + v17[8]) = *(void *)((char *)a2 + v17[8]);
        *(void *)((char *)a1 + v17[9]) = *(void *)((char *)a2 + v17[9]);
        *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
        *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
        *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
        *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
        *((unsigned char *)a1 + v17[14]) = *((unsigned char *)a2 + v17[14]);
        *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
        uint64_t v69 = type metadata accessor for DailyForecast();
        *(void *)((char *)a1 + *(int *)(v69 + 20)) = *(void *)((char *)a2 + *(int *)(v69 + 20));
        goto LABEL_97;
      case 3u:
        uint64_t v22 = sub_1A962E810();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
        v23((char *)a1, (char *)a2, v22);
        uint64_t v24 = (int *)type metadata accessor for Metadata();
        v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
        uint64_t v25 = v24[6];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          v23(v26, v27, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
        }
        *(void *)((char *)a1 + v24[7]) = *(void *)((char *)a2 + v24[7]);
        *(void *)((char *)a1 + v24[8]) = *(void *)((char *)a2 + v24[8]);
        *(void *)((char *)a1 + v24[9]) = *(void *)((char *)a2 + v24[9]);
        *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
        *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
        *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
        *((unsigned char *)a1 + v24[13]) = *((unsigned char *)a2 + v24[13]);
        *((unsigned char *)a1 + v24[14]) = *((unsigned char *)a2 + v24[14]);
        *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
        uint64_t v70 = type metadata accessor for HourlyForecast();
        *(void *)((char *)a1 + *(int *)(v70 + 20)) = *(void *)((char *)a2 + *(int *)(v70 + 20));
        goto LABEL_97;
      case 4u:
        uint64_t HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE0F8);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v71 = sub_1A962E810();
          uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32);
          v72((char *)a1, (char *)a2, v71);
          uint64_t v73 = (int *)type metadata accessor for Metadata();
          v72((char *)a1 + v73[5], (char *)a2 + v73[5], v71);
          uint64_t v74 = v73[6];
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v74, 1, v71))
          {
            uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            v72(v75, v76, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v71);
          }
          *(void *)((char *)a1 + v73[7]) = *(void *)((char *)a2 + v73[7]);
          *(void *)((char *)a1 + v73[8]) = *(void *)((char *)a2 + v73[8]);
          *(void *)((char *)a1 + v73[9]) = *(void *)((char *)a2 + v73[9]);
          *(_OWORD *)((char *)a1 + v73[10]) = *(_OWORD *)((char *)a2 + v73[10]);
          *(_OWORD *)((char *)a1 + v73[11]) = *(_OWORD *)((char *)a2 + v73[11]);
          *(_OWORD *)((char *)a1 + v73[12]) = *(_OWORD *)((char *)a2 + v73[12]);
          *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
          *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
          *(_OWORD *)((char *)a1 + v73[15]) = *(_OWORD *)((char *)a2 + v73[15]);
          *(void *)((char *)a1 + HourForecast[5]) = *(void *)((char *)a2 + HourForecast[5]);
          *(void *)((char *)a1 + HourForecast[6]) = *(void *)((char *)a2 + HourForecast[6]);
          uint64_t v163 = HourForecast[7];
          uint64_t v164 = (char *)a1 + v163;
          uint64_t v165 = (char *)a2 + v163;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v163, 1, v71))
          {
            uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            v72(v164, v165, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v71);
          }
          *(void *)((char *)a1 + HourForecast[8]) = *(void *)((char *)a2 + HourForecast[8]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        goto LABEL_97;
      case 5u:
        uint64_t v31 = sub_1A962E810();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v32((char *)a1, (char *)a2, v31);
        uint64_t v33 = (int *)type metadata accessor for Metadata();
        v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
        uint64_t v34 = v33[6];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v32(v35, v36, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
        }
        *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
        *(void *)((char *)a1 + v33[8]) = *(void *)((char *)a2 + v33[8]);
        *(void *)((char *)a1 + v33[9]) = *(void *)((char *)a2 + v33[9]);
        *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
        *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
        *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
        *((unsigned char *)a1 + v33[13]) = *((unsigned char *)a2 + v33[13]);
        *((unsigned char *)a1 + v33[14]) = *((unsigned char *)a2 + v33[14]);
        *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
        uint64_t v78 = type metadata accessor for PeriodicForecasts();
        *(void *)((char *)a1 + *(int *)(v78 + 20)) = *(void *)((char *)a2 + *(int *)(v78 + 20));
        goto LABEL_97;
      case 7u:
        uint64_t v38 = sub_1A962E810();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
        v39((char *)a1, (char *)a2, v38);
        uint64_t v40 = (int *)type metadata accessor for Metadata();
        v39((char *)a1 + v40[5], (char *)a2 + v40[5], v38);
        uint64_t v41 = v40[6];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v41, 1, v38))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          v39(v42, v43, v38);
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
        }
        *(void *)((char *)a1 + v40[7]) = *(void *)((char *)a2 + v40[7]);
        *(void *)((char *)a1 + v40[8]) = *(void *)((char *)a2 + v40[8]);
        *(void *)((char *)a1 + v40[9]) = *(void *)((char *)a2 + v40[9]);
        *(_OWORD *)((char *)a1 + v40[10]) = *(_OWORD *)((char *)a2 + v40[10]);
        *(_OWORD *)((char *)a1 + v40[11]) = *(_OWORD *)((char *)a2 + v40[11]);
        *(_OWORD *)((char *)a1 + v40[12]) = *(_OWORD *)((char *)a2 + v40[12]);
        *((unsigned char *)a1 + v40[13]) = *((unsigned char *)a2 + v40[13]);
        *((unsigned char *)a1 + v40[14]) = *((unsigned char *)a2 + v40[14]);
        *(_OWORD *)((char *)a1 + v40[15]) = *(_OWORD *)((char *)a2 + v40[15]);
        uint64_t v79 = (int *)type metadata accessor for LocationInfo();
        *(_OWORD *)((char *)a1 + v79[5]) = *(_OWORD *)((char *)a2 + v79[5]);
        *(_OWORD *)((char *)a1 + v79[6]) = *(_OWORD *)((char *)a2 + v79[6]);
        *(_OWORD *)((char *)a1 + v79[7]) = *(_OWORD *)((char *)a2 + v79[7]);
        *(_OWORD *)((char *)a1 + v79[8]) = *(_OWORD *)((char *)a2 + v79[8]);
        *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)((char *)a2 + v79[9]);
        goto LABEL_97;
      case 8u:
        uint64_t v45 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD258);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v80 = *(int *)(v45 + 20);
          uint64_t v81 = (char *)a1 + v80;
          uint64_t v82 = (char *)a2 + v80;
          uint64_t v83 = sub_1A962E810();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32);
          v84(v81, v82, v83);
          uint64_t v85 = (int *)type metadata accessor for Metadata();
          uint64_t v176 = v84;
          v84(&v81[v85[5]], &v82[v85[5]], v83);
          uint64_t v86 = v85[6];
          __dst = &v81[v86];
          uint64_t v87 = &v82[v86];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v86], 1, v83))
          {
            uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            v176(__dst, v87, v83);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v83);
          }
          *(void *)&v81[v85[7]] = *(void *)&v82[v85[7]];
          *(void *)&v81[v85[8]] = *(void *)&v82[v85[8]];
          *(void *)&v81[v85[9]] = *(void *)&v82[v85[9]];
          *(_OWORD *)&v81[v85[10]] = *(_OWORD *)&v82[v85[10]];
          *(_OWORD *)&v81[v85[11]] = *(_OWORD *)&v82[v85[11]];
          *(_OWORD *)&v81[v85[12]] = *(_OWORD *)&v82[v85[12]];
          v81[v85[13]] = v82[v85[13]];
          v81[v85[14]] = v82[v85[14]];
          *(_OWORD *)&v81[v85[15]] = *(_OWORD *)&v82[v85[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v45 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v45 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        goto LABEL_97;
      case 9u:
        uint64_t v47 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD938);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v89 = sub_1A962E810();
          uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32);
          v90((char *)a1, (char *)a2, v89);
          uint64_t v91 = (int *)type metadata accessor for Metadata();
          v90((char *)a1 + v91[5], (char *)a2 + v91[5], v89);
          uint64_t v92 = v91[6];
          uint64_t v93 = (char *)a1 + v92;
          uint64_t v94 = (char *)a2 + v92;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v92, 1, v89))
          {
            uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
          }
          else
          {
            v90(v93, v94, v89);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v89);
          }
          *(void *)((char *)a1 + v91[7]) = *(void *)((char *)a2 + v91[7]);
          *(void *)((char *)a1 + v91[8]) = *(void *)((char *)a2 + v91[8]);
          *(void *)((char *)a1 + v91[9]) = *(void *)((char *)a2 + v91[9]);
          *(_OWORD *)((char *)a1 + v91[10]) = *(_OWORD *)((char *)a2 + v91[10]);
          *(_OWORD *)((char *)a1 + v91[11]) = *(_OWORD *)((char *)a2 + v91[11]);
          *(_OWORD *)((char *)a1 + v91[12]) = *(_OWORD *)((char *)a2 + v91[12]);
          *((unsigned char *)a1 + v91[13]) = *((unsigned char *)a2 + v91[13]);
          *((unsigned char *)a1 + v91[14]) = *((unsigned char *)a2 + v91[14]);
          *(_OWORD *)((char *)a1 + v91[15]) = *(_OWORD *)((char *)a2 + v91[15]);
          *(void *)((char *)a1 + *(int *)(v47 + 20)) = *(void *)((char *)a2 + *(int *)(v47 + 20));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
        }
        goto LABEL_97;
      case 0xAu:
        uint64_t v49 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD1D8);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v96 = *(int *)(v49 + 24);
          uint64_t v97 = (char *)a1 + v96;
          uint64_t v98 = (char *)a2 + v96;
          uint64_t v99 = sub_1A962E810();
          uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32);
          v100(v97, v98, v99);
          uint64_t v101 = (int *)type metadata accessor for Metadata();
          uint64_t v177 = v100;
          v100(&v97[v101[5]], &v98[v101[5]], v99);
          uint64_t v102 = v101[6];
          __dsta = &v97[v102];
          uint64_t v103 = &v98[v102];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v98[v102], 1, v99))
          {
            uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dsta, v103, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            v177(__dsta, v103, v99);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v99);
          }
          *(void *)&v97[v101[7]] = *(void *)&v98[v101[7]];
          *(void *)&v97[v101[8]] = *(void *)&v98[v101[8]];
          *(void *)&v97[v101[9]] = *(void *)&v98[v101[9]];
          *(_OWORD *)&v97[v101[10]] = *(_OWORD *)&v98[v101[10]];
          *(_OWORD *)&v97[v101[11]] = *(_OWORD *)&v98[v101[11]];
          *(_OWORD *)&v97[v101[12]] = *(_OWORD *)&v98[v101[12]];
          v97[v101[13]] = v98[v101[13]];
          v97[v101[14]] = v98[v101[14]];
          *(_OWORD *)&v97[v101[15]] = *(_OWORD *)&v98[v101[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v49 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v49 + 28));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v49);
        }
        goto LABEL_97;
      case 0xBu:
        uint64_t v51 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v51))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD620);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v105 = sub_1A962E810();
          uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32);
          v106((char *)a1, (char *)a2, v105);
          uint64_t v107 = (int *)type metadata accessor for Metadata();
          v106((char *)a1 + v107[5], (char *)a2 + v107[5], v105);
          uint64_t v108 = v107[6];
          uint64_t v109 = (char *)a1 + v108;
          uint64_t v110 = (char *)a2 + v108;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v108, 1, v105))
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            v106(v109, v110, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
          }
          *(void *)((char *)a1 + v107[7]) = *(void *)((char *)a2 + v107[7]);
          *(void *)((char *)a1 + v107[8]) = *(void *)((char *)a2 + v107[8]);
          *(void *)((char *)a1 + v107[9]) = *(void *)((char *)a2 + v107[9]);
          *(_OWORD *)((char *)a1 + v107[10]) = *(_OWORD *)((char *)a2 + v107[10]);
          *(_OWORD *)((char *)a1 + v107[11]) = *(_OWORD *)((char *)a2 + v107[11]);
          *(_OWORD *)((char *)a1 + v107[12]) = *(_OWORD *)((char *)a2 + v107[12]);
          *((unsigned char *)a1 + v107[13]) = *((unsigned char *)a2 + v107[13]);
          *((unsigned char *)a1 + v107[14]) = *((unsigned char *)a2 + v107[14]);
          *(_OWORD *)((char *)a1 + v107[15]) = *(_OWORD *)((char *)a2 + v107[15]);
          *(_OWORD *)((char *)a1 + *(int *)(v51 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v51 + 20));
          *(void *)((char *)a1 + *(int *)(v51 + 24)) = *(void *)((char *)a2 + *(int *)(v51 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v51);
        }
        goto LABEL_97;
      case 0xCu:
        uint64_t v53 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDE70);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          uint64_t v112 = sub_1A962E810();
          double v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32);
          v113((char *)a1, (char *)a2, v112);
          uint64_t v114 = (int *)type metadata accessor for Metadata();
          v113((char *)a1 + v114[5], (char *)a2 + v114[5], v112);
          uint64_t v115 = v114[6];
          double v116 = (char *)a1 + v115;
          uint64_t v117 = (char *)a2 + v115;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v115, 1, v112))
          {
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            v113(v116, v117, v112);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v112);
          }
          *(void *)((char *)a1 + v114[7]) = *(void *)((char *)a2 + v114[7]);
          *(void *)((char *)a1 + v114[8]) = *(void *)((char *)a2 + v114[8]);
          *(void *)((char *)a1 + v114[9]) = *(void *)((char *)a2 + v114[9]);
          *(_OWORD *)((char *)a1 + v114[10]) = *(_OWORD *)((char *)a2 + v114[10]);
          *(_OWORD *)((char *)a1 + v114[11]) = *(_OWORD *)((char *)a2 + v114[11]);
          *(_OWORD *)((char *)a1 + v114[12]) = *(_OWORD *)((char *)a2 + v114[12]);
          *((unsigned char *)a1 + v114[13]) = *((unsigned char *)a2 + v114[13]);
          *((unsigned char *)a1 + v114[14]) = *((unsigned char *)a2 + v114[14]);
          *(_OWORD *)((char *)a1 + v114[15]) = *(_OWORD *)((char *)a2 + v114[15]);
          uint64_t v167 = v53[5];
          uint64_t v168 = (char *)a1 + v167;
          uint64_t v169 = (char *)a2 + v167;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v167, 1, v112))
          {
            uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            v113(v168, v169, v112);
            __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v112);
          }
          uint64_t v171 = v53[6];
          uint64_t v172 = (char *)a1 + v171;
          uint64_t v173 = (char *)a2 + v171;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v171, 1, v112))
          {
            uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            v113(v172, v173, v112);
            __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v112);
          }
          *(void *)((char *)a1 + v53[7]) = *(void *)((char *)a2 + v53[7]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v53);
        }
        goto LABEL_97;
      case 0xDu:
        uint64_t v55 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v55))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDA28);
          memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v119 = *(int *)(v55 + 20);
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_1A962E810();
          uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32);
          v123(v120, v121, v122);
          uint64_t v124 = (int *)type metadata accessor for Metadata();
          v123(&v120[v124[5]], &v121[v124[5]], v122);
          uint64_t v125 = v124[6];
          __dstb = &v120[v125];
          uint64_t v126 = &v121[v125];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v121[v125], 1, v122))
          {
            uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
            memcpy(__dstb, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            v123(__dstb, v126, v122);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v122);
          }
          *(void *)&v120[v124[7]] = *(void *)&v121[v124[7]];
          *(void *)&v120[v124[8]] = *(void *)&v121[v124[8]];
          *(void *)&v120[v124[9]] = *(void *)&v121[v124[9]];
          *(_OWORD *)&v120[v124[10]] = *(_OWORD *)&v121[v124[10]];
          *(_OWORD *)&v120[v124[11]] = *(_OWORD *)&v121[v124[11]];
          *(_OWORD *)&v120[v124[12]] = *(_OWORD *)&v121[v124[12]];
          v120[v124[13]] = v121[v124[13]];
          v120[v124[14]] = v121[v124[14]];
          *(_OWORD *)&v120[v124[15]] = *(_OWORD *)&v121[v124[15]];
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v55);
        }
LABEL_97:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WeatherDataResponse.ResponseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95B8E40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataResponse.ResponseType()
{
  return &type metadata for WeatherDataResponse.ResponseType;
}

unsigned char *storeEnumTagSinglePayload for WeatherDataResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95B8F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataResponse.CodingKeys()
{
  return &type metadata for WeatherDataResponse.CodingKeys;
}

unint64_t sub_1A95B8F80()
{
  unint64_t result = qword_1E97ECC88;
  if (!qword_1E97ECC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC88);
  }
  return result;
}

unint64_t sub_1A95B8FD0()
{
  unint64_t result = qword_1E97ECC90;
  if (!qword_1E97ECC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC90);
  }
  return result;
}

unint64_t sub_1A95B9020()
{
  unint64_t result = qword_1E97ECC98;
  if (!qword_1E97ECC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECC98);
  }
  return result;
}

unint64_t sub_1A95B9070()
{
  unint64_t result = qword_1E97ECCA0;
  if (!qword_1E97ECCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCA0);
  }
  return result;
}

unint64_t sub_1A95B90BC()
{
  unint64_t result = qword_1E97ECCA8;
  if (!qword_1E97ECCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCA8);
  }
  return result;
}

uint64_t static TideEventsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aTideevents_7;
  sub_1A9631510();
  return v0;
}

uint64_t static TideEventsDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aTideevents_7 = a1;
  *(void *)&aTideevents_7[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TideEventsDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95B91E0()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD270 = 0x2E312E312E30;
  qword_1EB6DD278 = 0xE600000000000000;
  return result;
}

uint64_t static TideEventsDescriptor.version.getter()
{
  if (qword_1EB6DD280 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD270;
  sub_1A9631510();
  return v0;
}

uint64_t static TideEventsDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD280 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD270 = a1;
  qword_1EB6DD278 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TideEventsDescriptor.version.modify())()
{
  if (qword_1EB6DD280 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

uint64_t static TideEvents.name.getter()
{
  return 0x6576452065646954;
}

uint64_t TideEvents.firstHourDate.getter()
{
  if (*(void *)(*(void *)(v0 + 8) + 16))
  {
    type metadata accessor for HourTide();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v1 = OUTLINED_FUNCTION_0_0();
    v2(v1);
    uint64_t v3 = OUTLINED_FUNCTION_2_9();
  }
  else
  {
    sub_1A962E810();
    uint64_t v3 = OUTLINED_FUNCTION_5_7();
  }
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t TideEvents.lastHourDate.getter()
{
  if (*(void *)(*(void *)(v0 + 8) + 16))
  {
    type metadata accessor for HourTide();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v1 = OUTLINED_FUNCTION_0_0();
    v2(v1);
    uint64_t v3 = OUTLINED_FUNCTION_2_9();
  }
  else
  {
    sub_1A962E810();
    uint64_t v3 = OUTLINED_FUNCTION_5_7();
  }
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

Swift::Bool __swiftcall TideEvents.hasHourlyForecast()()
{
  return *(void *)(*(void *)(v0 + 8) + 16) != 0;
}

uint64_t TideEvents.trimData(between:and:)()
{
  sub_1A9631510();
  sub_1A9472EFC();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  v0[1] = v2;
  sub_1A9631510();
  sub_1A9472F50();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v0 = v4;
  return result;
}

uint64_t sub_1A95B965C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A95B972C(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for HourTide, (void (*)(void))type metadata accessor for HourTide) & 1;
}

uint64_t sub_1A95B96A0(uint64_t a1)
{
  return sub_1A95B972C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void, __n128))type metadata accessor for HourTide, (void (*)(void))type metadata accessor for HourTide) & 1;
}

uint64_t sub_1A95B96E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A95B972C(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for TideEvent, (void (*)(void))type metadata accessor for TideEvent) & 1;
}

uint64_t sub_1A95B972C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, __n128), void (*a5)(void))
{
  uint64_t v9 = sub_1A962E810();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a4(0, v11);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v20 - v15;
  sub_1A9488060();
  char v17 = sub_1A9631D10();
  sub_1A95B9938(a1, (uint64_t)v16, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v9);
  if (v17) {
    char v18 = 0;
  }
  else {
    char v18 = sub_1A9631D10() ^ 1;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_1A95B9998((uint64_t)v16, a5);
  return v18 & 1;
}

uint64_t sub_1A95B98E0(uint64_t a1)
{
  return sub_1A95B972C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void, __n128))type metadata accessor for TideEvent, (void (*)(void))type metadata accessor for TideEvent) & 1;
}

ValueMetadata *type metadata accessor for TideEventsDescriptor()
{
  return &type metadata for TideEventsDescriptor;
}

uint64_t sub_1A95B9938(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A95B9998(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for HourlyStatisticsResource()
{
  return &type metadata for HourlyStatisticsResource;
}

_UNKNOWN **sub_1A95B9A00()
{
  return &off_1EFFCBD48;
}

unint64_t sub_1A95B9A10()
{
  unint64_t result = qword_1E97ECCD0;
  if (!qword_1E97ECCD0)
  {
    type metadata accessor for HourlyWeatherStatistics();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCD0);
  }
  return result;
}

uint64_t AirQualityScaleDefinition.numerical.getter()
{
  return *v0;
}

uint64_t AirQualityScaleDefinition.numerical.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AirQualityScaleDefinition.numerical.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleDefinition.ascending.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t AirQualityScaleDefinition.ascending.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*AirQualityScaleDefinition.ascending.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleDefinition.maxPrefix.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A94A9CF8(v2, v3, v4, v5);
}

__n128 AirQualityScaleDefinition.maxPrefix.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_1A94ED1FC(v1[1], v1[2], v1[3], v1[4]);
  __n128 result = v5;
  *(__n128 *)(v1 + 1) = v5;
  v1[3] = v2;
  v1[4] = v3;
  return result;
}

uint64_t (*AirQualityScaleDefinition.maxPrefix.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleDefinition.range.getter()
{
  return sub_1A9631510();
}

uint64_t AirQualityScaleDefinition.range.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*AirQualityScaleDefinition.range.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleDefinition.categories.getter()
{
  return sub_1A9631510();
}

uint64_t AirQualityScaleDefinition.categories.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*AirQualityScaleDefinition.categories.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleDefinition.gradient.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *a1 = v2;
  return sub_1A94A9D0C(v2);
}

uint64_t AirQualityScaleDefinition.gradient.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = sub_1A94ED210(*(void *)(v1 + 56));
  *(void *)(v1 + 56) = v2;
  return result;
}

uint64_t (*AirQualityScaleDefinition.gradient.modify())(void)
{
  return nullsub_1;
}

__n128 AirQualityScaleDefinition.init(numerical:ascending:maxPrefix:range:categories:gradient:)@<Q0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  __n128 result = *(__n128 *)a3;
  long long v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a3;
  uint64_t v9 = *a6;
  *(unsigned char *)a7 = a1;
  *(unsigned char *)(a7 + 1) = a2;
  *(_OWORD *)(a7 + 24) = v8;
  *(void *)(a7 + 40) = a4;
  *(void *)(a7 + 48) = a5;
  *(void *)(a7 + 56) = v9;
  return result;
}

uint64_t sub_1A95B9C68(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x61636972656D756ELL && a2 == 0xE90000000000006CLL;
  if (v3 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E69646E65637361 && a2 == 0xE900000000000067;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x696665725078616DLL && a2 == 0xE900000000000078;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x746E656964617267 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1A96327D0();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A95B9F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95B9C68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95B9F28(uint64_t a1)
{
  unint64_t v2 = sub_1A946CC14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95B9F64(uint64_t a1)
{
  unint64_t v2 = sub_1A946CC14();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AirQualityScaleDefinition.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE50);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v25 = *(void *)(v1 + 16);
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v23 = *(void *)(v1 + 32);
  uint64_t v24 = v11;
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v21 = *(void *)(v1 + 48);
  uint64_t v22 = v12;
  uint64_t v20 = *(void *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A946CC14();
  uint64_t v13 = v4;
  sub_1A9632970();
  LOBYTE(v27) = 0;
  sub_1A96326E0();
  if (!v2)
  {
    uint64_t v15 = v23;
    uint64_t v14 = v24;
    uint64_t v16 = v25;
    uint64_t v17 = v26;
    LOBYTE(v27) = 1;
    sub_1A96326E0();
    uint64_t v27 = v17;
    uint64_t v28 = v16;
    uint64_t v29 = v14;
    uint64_t v30 = v15;
    char v32 = 2;
    sub_1A95BA1D8();
    OUTLINED_FUNCTION_3_39();
    uint64_t v27 = v22;
    char v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE38);
    sub_1A95BA224();
    OUTLINED_FUNCTION_1_50();
    uint64_t v27 = v21;
    char v32 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE18);
    sub_1A95BA290();
    OUTLINED_FUNCTION_1_50();
    uint64_t v27 = v20;
    char v32 = 5;
    sub_1A95BA350();
    OUTLINED_FUNCTION_3_39();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v13);
}

unint64_t sub_1A95BA1D8()
{
  unint64_t result = qword_1EB6DBDE8;
  if (!qword_1EB6DBDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBDE8);
  }
  return result;
}

unint64_t sub_1A95BA224()
{
  unint64_t result = qword_1EB6DBE40;
  if (!qword_1EB6DBE40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DBE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE40);
  }
  return result;
}

unint64_t sub_1A95BA290()
{
  unint64_t result = qword_1EB6DBE20;
  if (!qword_1EB6DBE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DBE18);
    sub_1A95BA304();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE20);
  }
  return result;
}

unint64_t sub_1A95BA304()
{
  unint64_t result = qword_1EB6DBDF8;
  if (!qword_1EB6DBDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBDF8);
  }
  return result;
}

unint64_t sub_1A95BA350()
{
  unint64_t result = qword_1EB6DBE00;
  if (!qword_1EB6DBE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBE00);
  }
  return result;
}

uint64_t sub_1A95BA39C(void *a1)
{
  return AirQualityScaleDefinition.encode(to:)(a1);
}

uint64_t destroy for AirQualityScaleDefinition(uint64_t a1)
{
  if (*(void *)(a1 + 32) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AirQualityScaleDefinition(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v7;
  }
  else
  {
    *(void *)uint64_t v4 = *(void *)v5;
    *(unsigned char *)(v4 + 8) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    sub_1A9631510();
  }
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  sub_1A9631510();
  sub_1A9631510();
  if (v9 != 1) {
    sub_1A9631510();
  }
  *(void *)(a1 + 56) = v9;
  return a1;
}

uint64_t assignWithCopy for AirQualityScaleDefinition(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 24);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v7;
    }
    else
    {
      uint64_t v9 = *(void *)v5;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)uint64_t v4 = v9;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1A9631510();
    }
  }
  else if (v6 == 1)
  {
    sub_1A95BA62C(a1 + 8);
    long long v8 = v5[1];
    *uint64_t v4 = *v5;
    v4[1] = v8;
  }
  else
  {
    uint64_t v10 = *(void *)v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)uint64_t v4 = v10;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    sub_1A9631510();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(a1 + 56);
  uint64_t v12 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) == 1)
  {
    if (v12 != 1)
    {
      *uint64_t v11 = v12;
      sub_1A9631510();
      return a1;
    }
    uint64_t v13 = 1;
  }
  else
  {
    if (v12 != 1)
    {
      *uint64_t v11 = v12;
      sub_1A9631510();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A95BA680(a1 + 56);
    uint64_t v13 = *(void *)(a2 + 56);
  }
  *uint64_t v11 = v13;
  return a1;
}

uint64_t sub_1A95BA62C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A95BA680(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for AirQualityScaleDefinition(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 32) == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  if (v6 == 1)
  {
    sub_1A95BA62C((uint64_t)v4);
LABEL_4:
    long long v7 = v5[1];
    *uint64_t v4 = *v5;
    v4[1] = v7;
    goto LABEL_6;
  }
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  long long v8 = (uint64_t *)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) != 1)
  {
    if (v9 != 1)
    {
      *long long v8 = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A95BA680(a1 + 56);
    uint64_t v9 = 1;
  }
  *long long v8 = v9;
  return a1;
}

ValueMetadata *type metadata accessor for AirQualityScaleDefinition()
{
  return &type metadata for AirQualityScaleDefinition;
}

unsigned char *storeEnumTagSinglePayload for AirQualityScaleDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95BA898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unint64_t sub_1A95BA8C4()
{
  unint64_t result = qword_1E97ECCD8;
  if (!qword_1E97ECCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCD8);
  }
  return result;
}

uint64_t AirQualityScaleAqiCategory.categoryNumber.getter()
{
  return *(void *)v0;
}

uint64_t AirQualityScaleAqiCategory.categoryNumber.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.categoryNumber.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiCategory.range.getter()
{
  return sub_1A9631510();
}

uint64_t AirQualityScaleAqiCategory.range.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.range.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiCategory.color.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScaleAqiCategory.color.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.color.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiCategory.categoryName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScaleAqiCategory.categoryName.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.categoryName.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiCategory.recommendation.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScaleAqiCategory.recommendation.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.recommendation.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiCategory.glyph.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScaleAqiCategory.glyph.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v0;
  return result;
}

uint64_t (*AirQualityScaleAqiCategory.glyph.modify())(void)
{
  return nullsub_1;
}

__n128 AirQualityScaleAqiCategory.init(categoryNumber:range:color:categoryName:recommendation:glyph:)@<Q0>(unint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u8[8] = a2 & 1;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t sub_1A95BABCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F6765746163 && a2 == 0xEE007265626D754ELL;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x79726F6765746163 && a2 == 0xEC000000656D614ELL;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E656D6D6F636572 && a2 == 0xEE006E6F69746164;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6870796C67 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1A96327D0();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A95BAE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95BABCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95BAEBC(uint64_t a1)
{
  unint64_t v2 = sub_1A942E770();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95BAEF8(uint64_t a1)
{
  unint64_t v2 = sub_1A942E770();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AirQualityScaleAqiCategory.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE58);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[2];
  v15[8] = v1[3];
  uint64_t v16 = v9;
  uint64_t v10 = v1[4];
  v15[6] = v1[5];
  v15[7] = v10;
  uint64_t v11 = v1[6];
  v15[4] = v1[7];
  v15[5] = v11;
  uint64_t v12 = v1[8];
  void v15[2] = v1[9];
  v15[3] = v12;
  v15[1] = v1[10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A942E770();
  sub_1A9632970();
  char v24 = 0;
  uint64_t v13 = v17;
  sub_1A9632710();
  if (!v13)
  {
    uint64_t v18 = v16;
    char v23 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE38);
    sub_1A95BA224();
    sub_1A9632720();
    char v22 = 2;
    OUTLINED_FUNCTION_17();
    char v21 = 3;
    OUTLINED_FUNCTION_17();
    char v20 = 4;
    OUTLINED_FUNCTION_17();
    char v19 = 5;
    OUTLINED_FUNCTION_17();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1A95BB158(void *a1)
{
  return AirQualityScaleAqiCategory.encode(to:)(a1);
}

uint64_t assignWithCopy for AirQualityScaleAqiCategory(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirQualityScaleAqiCategory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AirQualityScaleAqiCategory()
{
  return &type metadata for AirQualityScaleAqiCategory;
}

unsigned char *storeEnumTagSinglePayload for AirQualityScaleAqiCategory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95BB3ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unint64_t sub_1A95BB3D8()
{
  unint64_t result = qword_1E97ECCE0;
  if (!qword_1E97ECCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCE0);
  }
  return result;
}

uint64_t static WeatherChangeDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aWeatherchange_8;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherChangeDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aWeatherchange_8 = a1;
  *(void *)&aWeatherchange_8[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherChangeDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95BB4FC()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD428 = 0x2E312E312E30;
  qword_1EB6DD430 = 0xE600000000000000;
  return result;
}

uint64_t static WeatherChangeDescriptor.version.getter()
{
  if (qword_1EB6DD438 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD428;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherChangeDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD438 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD428 = a1;
  qword_1EB6DD430 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherChangeDescriptor.version.modify())()
{
  if (qword_1EB6DD438 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for WeatherChangeDescriptor()
{
  return &type metadata for WeatherChangeDescriptor;
}

uint64_t AirQualityScale.name.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.name.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*AirQualityScale.name.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.displayName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.displayName.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*AirQualityScale.displayName.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.shortDisplayName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.shortDisplayName.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*AirQualityScale.shortDisplayName.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.longDisplayName.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.longDisplayName.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*AirQualityScale.longDisplayName.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.displayLabel.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.displayLabel.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return result;
}

uint64_t (*AirQualityScale.displayLabel.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.language.getter()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t AirQualityScale.language.setter()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v0;
  return result;
}

uint64_t (*AirQualityScale.language.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScale.version.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t AirQualityScale.version.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*AirQualityScale.version.modify())(void)
{
  return nullsub_1;
}

void AirQualityScale.aqi.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[14];
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  uint64_t v5 = v1[17];
  uint64_t v6 = v1[18];
  uint64_t v7 = v1[19];
  uint64_t v8 = v1[20];
  uint64_t v9 = v1[21];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  sub_1A94A9C84(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 AirQualityScale.aqi.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  sub_1A94ED188(v1[14], v1[15], v1[16], v1[17], v1[18], v1[19], v1[20], v1[21]);
  *((_OWORD *)v1 + 7) = v7;
  *((_OWORD *)v1 + 8) = v6;
  __n128 result = v5;
  *((__n128 *)v1 + 9) = v5;
  v1[20] = v2;
  v1[21] = v3;
  return result;
}

uint64_t (*AirQualityScale.aqi.modify())(void)
{
  return nullsub_1;
}

__n128 AirQualityScale.init(name:displayName:shortDisplayName:longDisplayName:displayLabel:language:version:aqi:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, uint64_t a12, char a13, uint64_t a14)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  *(unsigned char *)(a9 + 104) = a13 & 1;
  long long v14 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 112) = *(_OWORD *)a14;
  *(_OWORD *)(a9 + 128) = v14;
  __n128 result = *(__n128 *)(a14 + 32);
  long long v16 = *(_OWORD *)(a14 + 48);
  *(__n128 *)(a9 + 144) = result;
  *(_OWORD *)(a9 + 160) = v16;
  return result;
}

uint64_t sub_1A95BBB38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001A9648E40 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x70736944676E6F6CLL && a2 == 0xEF656D614E79616CLL;
      if (v7 || (sub_1A96327D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x4C79616C70736964 && a2 == 0xEC0000006C656261;
        if (v8 || (sub_1A96327D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
          if (v9 || (sub_1A96327D0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
            if (v10 || (sub_1A96327D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 6910305 && a2 == 0xE300000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v12 = sub_1A96327D0();
              swift_bridgeObjectRelease();
              if (v12) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A95BBE98()
{
  return 8;
}

uint64_t sub_1A95BBEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95BBB38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95BBEE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95BBE98();
  *a1 = result;
  return result;
}

uint64_t sub_1A95BBF10(uint64_t a1)
{
  unint64_t v2 = sub_1A946E048();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95BBF4C(uint64_t a1)
{
  unint64_t v2 = sub_1A946E048();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AirQualityScale.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBE48);
  OUTLINED_FUNCTION_1_17();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v36 = *(void *)(v1 + 24);
  uint64_t v37 = v9;
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v34 = *(void *)(v1 + 40);
  uint64_t v35 = v10;
  uint64_t v11 = *(void *)(v1 + 48);
  uint64_t v32 = *(void *)(v1 + 56);
  uint64_t v33 = v11;
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v30 = *(void *)(v1 + 72);
  uint64_t v31 = v12;
  uint64_t v13 = *(void *)(v1 + 88);
  uint64_t v28 = *(void *)(v1 + 80);
  uint64_t v29 = v13;
  uint64_t v27 = *(void *)(v1 + 96);
  int v47 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v19 = *(void *)(v1 + 112);
  uint64_t v20 = *(void *)(v1 + 120);
  uint64_t v21 = *(void *)(v1 + 128);
  uint64_t v22 = *(void *)(v1 + 136);
  uint64_t v26 = *(void *)(v1 + 144);
  uint64_t v25 = *(void *)(v1 + 152);
  uint64_t v24 = *(void *)(v1 + 160);
  uint64_t v23 = *(void *)(v1 + 168);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A946E048();
  sub_1A9632970();
  LOBYTE(v39) = 0;
  uint64_t v14 = v38;
  sub_1A96326D0();
  if (!v14)
  {
    OUTLINED_FUNCTION_3_40(1);
    sub_1A96326D0();
    OUTLINED_FUNCTION_3_40(2);
    OUTLINED_FUNCTION_6_32();
    OUTLINED_FUNCTION_3_40(3);
    OUTLINED_FUNCTION_6_32();
    OUTLINED_FUNCTION_3_40(4);
    OUTLINED_FUNCTION_6_32();
    OUTLINED_FUNCTION_3_40(5);
    OUTLINED_FUNCTION_6_32();
    OUTLINED_FUNCTION_3_40(6);
    sub_1A9632710();
    uint64_t v39 = v19;
    uint64_t v40 = v20;
    uint64_t v41 = v21;
    uint64_t v42 = v22;
    uint64_t v43 = v26;
    uint64_t v44 = v25;
    OUTLINED_FUNCTION_7_29();
    uint64_t v45 = v16;
    uint64_t v46 = v15;
    char v48 = 7;
    sub_1A95BC288();
    sub_1A9632720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v2);
}

unint64_t sub_1A95BC288()
{
  unint64_t result = qword_1EB6DBDF0;
  if (!qword_1EB6DBDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DBDF0);
  }
  return result;
}

uint64_t sub_1A95BC2D4(void *a1)
{
  return AirQualityScale.encode(to:)(a1);
}

unint64_t sub_1A95BC2EC(uint64_t a1)
{
  unint64_t result = sub_1A94ED220();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t assignWithCopy for AirQualityScale(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v4;
  uint64_t v5 = (_OWORD *)(a1 + 112);
  uint64_t v6 = (long long *)(a2 + 112);
  uint64_t v7 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152) != 1)
  {
    if (v7 == 1)
    {
      sub_1A95BC640(a1 + 112);
      long long v11 = *(_OWORD *)(a2 + 160);
      long long v13 = *v6;
      long long v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v11;
      *uint64_t v5 = v13;
      *(_OWORD *)(a1 + 128) = v12;
      return a1;
    }
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    uint64_t v17 = (_OWORD *)(a1 + 120);
    uint64_t v18 = (_OWORD *)(a2 + 120);
    uint64_t v19 = *(void *)(a2 + 144);
    if (*(void *)(a1 + 144) == 1)
    {
      if (v19 == 1)
      {
        long long v20 = *(_OWORD *)(a2 + 136);
        *uint64_t v17 = *v18;
        *(_OWORD *)(a1 + 136) = v20;
      }
      else
      {
        uint64_t v24 = *(void *)v18;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)uint64_t v17 = v24;
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        sub_1A9631510();
      }
    }
    else if (v19 == 1)
    {
      sub_1A95BA62C(a1 + 120);
      long long v23 = *(_OWORD *)(a2 + 136);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 136) = v23;
    }
    else
    {
      uint64_t v25 = *(void *)v18;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)uint64_t v17 = v25;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      sub_1A9631510();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    sub_1A9631510();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    sub_1A9631510();
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t *)(a1 + 168);
    uint64_t v27 = *(void *)(a2 + 168);
    if (*(void *)(a1 + 168) == 1)
    {
      if (v27 != 1)
      {
        *uint64_t v26 = v27;
        goto LABEL_26;
      }
      uint64_t v28 = 1;
    }
    else
    {
      if (v27 != 1)
      {
        *uint64_t v26 = v27;
        sub_1A9631510();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1A95BA680(a1 + 168);
      uint64_t v28 = *(void *)(a2 + 168);
    }
    *uint64_t v26 = v28;
    return a1;
  }
  if (v7 != 1)
  {
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
    uint64_t v14 = (_OWORD *)(a1 + 120);
    uint64_t v15 = (_OWORD *)(a2 + 120);
    if (*(void *)(a2 + 144) == 1)
    {
      long long v16 = *(_OWORD *)(a2 + 136);
      *uint64_t v14 = *v15;
      *(_OWORD *)(a1 + 136) = v16;
    }
    else
    {
      uint64_t v21 = *(void *)v15;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)uint64_t v14 = v21;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      sub_1A9631510();
    }
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    uint64_t v22 = *(void *)(a2 + 168);
    sub_1A9631510();
    sub_1A9631510();
    if (v22 == 1)
    {
      *(void *)(a1 + 168) = 1;
      return a1;
    }
    *(void *)(a1 + 168) = v22;
LABEL_26:
    sub_1A9631510();
    return a1;
  }
  long long v8 = *v6;
  long long v9 = *(_OWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  *uint64_t v5 = v8;
  *(_OWORD *)(a1 + 128) = v9;
  return a1;
}

uint64_t sub_1A95BC640(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for AirQualityScale(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if (*(void *)(a1 + 152) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 152);
  if (v10 == 1)
  {
    sub_1A95BC640(a1 + 112);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v11;
    long long v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    return a1;
  }
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  long long v13 = (void *)(a1 + 120);
  uint64_t v14 = (void *)(a2 + 120);
  if (*(void *)(a1 + 144) != 1)
  {
    uint64_t v15 = *(void *)(a2 + 144);
    if (v15 != 1)
    {
      *long long v13 = *v14;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1A95BA62C(a1 + 120);
  }
  long long v16 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  *(_OWORD *)(a1 + 136) = v16;
LABEL_10:
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t *)(a1 + 168);
  uint64_t v18 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168) != 1)
  {
    if (v18 != 1)
    {
      *uint64_t v17 = v18;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A95BA680(a1 + 168);
    uint64_t v18 = 1;
  }
  *uint64_t v17 = v18;
  return a1;
}

unsigned char *storeEnumTagSinglePayload for AirQualityScale.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95BC8F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

unint64_t sub_1A95BC924()
{
  unint64_t result = qword_1E97ECCF8;
  if (!qword_1E97ECCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECCF8);
  }
  return result;
}

uint64_t static WeatherComparisonsUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97ECD00;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherComparisonsUnavailableDescriptor.name.setter(uint64_t a1, char *a2)
{
  qword_1E97ECD00 = a1;
  off_1E97ECD08 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherComparisonsUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95BCA48()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD600 = 0x2E312E312E30;
  qword_1EB6DD608 = 0xE600000000000000;
  return result;
}

uint64_t static WeatherComparisonsUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD610 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD600;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherComparisonsUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD610 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD600 = a1;
  qword_1EB6DD608 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherComparisonsUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD610 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for WeatherComparisonsUnavailableDescriptor()
{
  return &type metadata for WeatherComparisonsUnavailableDescriptor;
}

uint64_t static WeatherChangeUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97ECD10;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherChangeUnavailableDescriptor.name.setter(uint64_t a1, char *a2)
{
  qword_1E97ECD10 = a1;
  off_1E97ECD18 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherChangeUnavailableDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95BCD1C()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD5E8 = 0x2E312E312E30;
  qword_1EB6DD5F0 = 0xE600000000000000;
  return result;
}

uint64_t static WeatherChangeUnavailableDescriptor.version.getter()
{
  if (qword_1EB6DD5F8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD5E8;
  sub_1A9631510();
  return v0;
}

uint64_t static WeatherChangeUnavailableDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD5F8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD5E8 = a1;
  qword_1EB6DD5F0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static WeatherChangeUnavailableDescriptor.version.modify())()
{
  if (qword_1EB6DD5F8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for WeatherChangeUnavailableDescriptor()
{
  return &type metadata for WeatherChangeUnavailableDescriptor;
}

uint64_t CloudChannelMapProperties.channel.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t CloudChannelMapProperties.country.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A9631510();
  return v1;
}

WeatherDaemon::CloudChannelMapProperties __swiftcall CloudChannelMapProperties.init(channel:country:)(Swift::String_optional channel, Swift::String_optional country)
{
  *uint64_t v2 = channel;
  v2[1] = country;
  result.country = country;
  result.channel = channel;
  return result;
}

uint64_t sub_1A95BCF84()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A95BCFDC(char a1)
{
  if (a1) {
    return 0x7972746E756F63;
  }
  else {
    return 0x6C656E6E616863;
  }
}

uint64_t sub_1A95BD00C()
{
  return sub_1A950B15C();
}

uint64_t sub_1A95BD018()
{
  return sub_1A95C94B8();
}

uint64_t sub_1A95BD020()
{
  return sub_1A94AC2BC();
}

uint64_t sub_1A95BD028()
{
  return sub_1A94ADE9C();
}

uint64_t sub_1A95BD030@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95BCF84();
  *a1 = result;
  return result;
}

uint64_t sub_1A95BD060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95BCFDC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95BD08C()
{
  return sub_1A95BCFDC(*v0);
}

uint64_t sub_1A95BD094@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95BCFD8();
  *a1 = result;
  return result;
}

uint64_t sub_1A95BD0BC(uint64_t a1)
{
  unint64_t v2 = sub_1A95BD2B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95BD0F8(uint64_t a1)
{
  unint64_t v2 = sub_1A95BD2B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CloudChannelMapProperties.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECD20);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BD2B8();
  sub_1A9632950();
  if (!v2)
  {
    char v21 = 0;
    uint64_t v11 = sub_1A96325F0();
    uint64_t v13 = v12;
    char v20 = 1;
    uint64_t v14 = sub_1A96325F0();
    uint64_t v15 = v10;
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v5);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v14;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95BD2B8()
{
  unint64_t result = qword_1E97ECD28;
  if (!qword_1E97ECD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD28);
  }
  return result;
}

uint64_t CloudChannelMapProperties.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECD30);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  v12[1] = *(void *)(v1 + 24);
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BD2B8();
  sub_1A9632970();
  char v14 = 0;
  uint64_t v10 = v12[3];
  sub_1A96326D0();
  if (!v10)
  {
    char v13 = 1;
    sub_1A96326D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t static CloudChannelMapProperties.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1A96327D0(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        BOOL v12 = v4 == v7 && v5 == v8;
        if (v12 || (sub_1A96327D0() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1A95BD504(void *a1)
{
  a1[1] = sub_1A95BD53C();
  a1[2] = sub_1A95BD588();
  unint64_t result = sub_1A95BD5D4();
  a1[3] = result;
  return result;
}

unint64_t sub_1A95BD53C()
{
  unint64_t result = qword_1E97ECD38;
  if (!qword_1E97ECD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD38);
  }
  return result;
}

unint64_t sub_1A95BD588()
{
  unint64_t result = qword_1E97ECD40;
  if (!qword_1E97ECD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD40);
  }
  return result;
}

unint64_t sub_1A95BD5D4()
{
  unint64_t result = qword_1E97ECD48;
  if (!qword_1E97ECD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD48);
  }
  return result;
}

uint64_t sub_1A95BD620@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CloudChannelMapProperties.init(from:)(a1, a2);
}

uint64_t sub_1A95BD638(void *a1)
{
  return CloudChannelMapProperties.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for CloudChannelMapProperties()
{
  return &type metadata for CloudChannelMapProperties;
}

unsigned char *storeEnumTagSinglePayload for CloudChannelMapProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95BD730);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudChannelMapProperties.CodingKeys()
{
  return &type metadata for CloudChannelMapProperties.CodingKeys;
}

unint64_t sub_1A95BD76C()
{
  unint64_t result = qword_1E97ECD50;
  if (!qword_1E97ECD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD50);
  }
  return result;
}

unint64_t sub_1A95BD7BC()
{
  unint64_t result = qword_1E97ECD58;
  if (!qword_1E97ECD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD58);
  }
  return result;
}

unint64_t sub_1A95BD80C()
{
  unint64_t result = qword_1E97ECD60;
  if (!qword_1E97ECD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD60);
  }
  return result;
}

uint64_t static MarineLocationDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = *(void *)aMarinelocation_2;
  sub_1A9631510();
  return v0;
}

uint64_t static MarineLocationDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aMarinelocation_2 = a1;
  *(void *)&aMarinelocation_2[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarineLocationDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95BD930()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB6DD2A0 = 0x2E312E312E30;
  qword_1EB6DD2A8 = 0xE600000000000000;
  return result;
}

uint64_t static MarineLocationDescriptor.version.getter()
{
  if (qword_1EB6DD2B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1EB6DD2A0;
  sub_1A9631510();
  return v0;
}

uint64_t static MarineLocationDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB6DD2B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1EB6DD2A0 = a1;
  qword_1EB6DD2A8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarineLocationDescriptor.version.modify())()
{
  if (qword_1EB6DD2B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for MarineLocationDescriptor()
{
  return &type metadata for MarineLocationDescriptor;
}

uint64_t ForecastMinute.startTime.setter(uint64_t a1)
{
  return sub_1A94200B4(a1, v1);
}

uint64_t (*ForecastMinute.startTime.modify())(void)
{
  return nullsub_1;
}

uint64_t ForecastMinute.precipitationChance.setter(double a1)
{
  uint64_t result = type metadata accessor for ForecastMinute();
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*ForecastMinute.precipitationChance.modify())(void)
{
  return nullsub_1;
}

uint64_t ForecastMinute.precipitationIntensity.setter(double a1)
{
  uint64_t result = type metadata accessor for ForecastMinute();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*ForecastMinute.precipitationIntensity.modify())(void)
{
  return nullsub_1;
}

uint64_t ForecastMinute.precipitationIntensityPerceived.setter(double a1)
{
  uint64_t result = type metadata accessor for ForecastMinute();
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*ForecastMinute.precipitationIntensityPerceived.modify())(void)
{
  return nullsub_1;
}

uint64_t ForecastMinute.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = (int *)type metadata accessor for ForecastMinute();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v8 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBD70);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BDF90();
  sub_1A9632950();
  if (v2)
  {
    uint64_t v17 = (uint64_t)a1;
  }
  else
  {
    sub_1A9632660();
    double v14 = v13;
    uint64_t v15 = sub_1A962E810();
    sub_1A947198C(&qword_1EB6DC8D8);
    sub_1A96325D0();
    sub_1A9632660();
    uint64_t v19 = v16;
    sub_1A96325D0();
    if (v25) {
      double v20 = v14;
    }
    else {
      double v20 = v24;
    }
    __swift_storeEnumTagSinglePayload(v7, 1, 1, v15);
    sub_1A94200B4(v11, v7);
    *(void *)(v7 + v4[5]) = v19;
    *(double *)(v7 + v4[6]) = v14;
    *(double *)(v7 + v4[7]) = v20;
    sub_1A95BDFDC(v7, a2);
    uint64_t v21 = OUTLINED_FUNCTION_3_41();
    v22(v21);
    uint64_t v17 = (uint64_t)a1;
  }
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

unint64_t sub_1A95BDF90()
{
  unint64_t result = qword_1EB6DB7F0;
  if (!qword_1EB6DB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB7F0);
  }
  return result;
}

uint64_t sub_1A95BDFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForecastMinute();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A95BE040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A9646EF0 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A9646F10 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A9648E60)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1A95BE1F0(char a1)
{
  unint64_t result = 0x6D69547472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A95BE294()
{
  return sub_1A95BE1F0(*v0);
}

uint64_t sub_1A95BE29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95BE040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95BE2C4(uint64_t a1)
{
  unint64_t v2 = sub_1A95BDF90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95BE300(uint64_t a1)
{
  unint64_t v2 = sub_1A95BDF90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ForecastMinute.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DBD88);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BDF90();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632720();
  if (!v1)
  {
    type metadata accessor for ForecastMinute();
    OUTLINED_FUNCTION_2_46();
    OUTLINED_FUNCTION_2_46();
    OUTLINED_FUNCTION_2_46();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1A95BE4E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ForecastMinute.init(from:)(a1, a2);
}

uint64_t sub_1A95BE4FC(void *a1)
{
  return ForecastMinute.encode(to:)(a1);
}

int *sub_1A95BE514@<X0>(uint64_t a1@<X8>)
{
  return static ForecastMinute.read(from:)(a1);
}

uint64_t sub_1A95BE52C()
{
  return ForecastMinute.write(to:)();
}

uint64_t *initializeBufferWithCopyOfBuffer for ForecastMinute(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

char *initializeWithCopy for ForecastMinute(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *assignWithCopy for ForecastMinute(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *initializeWithTake for ForecastMinute(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for ForecastMinute(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A962E810();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_1A95BEB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1A95BEB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for ForecastMinute.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95BECACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForecastMinute.CodingKeys()
{
  return &type metadata for ForecastMinute.CodingKeys;
}

unint64_t sub_1A95BECE8()
{
  unint64_t result = qword_1E97ECD78;
  if (!qword_1E97ECD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECD78);
  }
  return result;
}

unint64_t sub_1A95BED38()
{
  unint64_t result = qword_1EB6DB800;
  if (!qword_1EB6DB800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB800);
  }
  return result;
}

unint64_t sub_1A95BED88()
{
  unint64_t result = qword_1EB6DB7F8;
  if (!qword_1EB6DB7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DB7F8);
  }
  return result;
}

id WeatherDataProxyResponse.__allocating_init(responses:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return WeatherDataProxyResponse.init(responses:)(a1);
}

id WeatherDataProxyResponse.__allocating_init(error:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return WeatherDataProxyResponse.init(error:)(a1);
}

uint64_t static WeatherDataProxyResponse.supportsSecureCoding.getter()
{
  return byte_1E97ECD80;
}

uint64_t static WeatherDataProxyResponse.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97ECD80 = a1;
  return result;
}

uint64_t (*static WeatherDataProxyResponse.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t WeatherDataProxyResponse.responses.getter()
{
  return sub_1A9631510();
}

uint64_t WeatherDataProxyResponse.error.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error, a1);
}

id WeatherDataProxyResponse.init(responses:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_responses] = a1;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error];
  uint64_t v5 = sub_1A96313A0();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id WeatherDataProxyResponse.init(error:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_responses] = 0;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error];
  uint64_t v5 = sub_1A96313A0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

Swift::Void __swiftcall WeatherDataProxyResponse.encode(with:)(NSCoder with)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_responses);
  if (v6)
  {
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    uint64_t v21 = v6;
    sub_1A9631510();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECD98);
    sub_1A95BF37C();
    uint64_t v9 = sub_1A962E2F0();
    unint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1A962E660();
    double v13 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v12 forKey:v13];

    uint64_t v14 = v9;
    unint64_t v15 = v11;
  }
  else
  {
    sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error, (uint64_t)v5);
    uint64_t v7 = sub_1A96313A0();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
    sub_1A95971B4((uint64_t)v5);
    if (EnumTagSinglePayload == 1) {
      return;
    }
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    sub_1A95A5D84();
    uint64_t v16 = sub_1A962E2F0();
    unint64_t v18 = v17;
    swift_release();
    uint64_t v19 = (void *)sub_1A962E660();
    double v20 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v19 forKey:v20];

    uint64_t v14 = v16;
    unint64_t v15 = v18;
  }
  sub_1A9466028(v14, v15);
}

unint64_t sub_1A95BF37C()
{
  unint64_t result = qword_1E97ECDA0;
  if (!qword_1E97ECDA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97ECD98);
    sub_1A95BF7CC((unint64_t *)&unk_1E97ECDA8, &qword_1E97ECDB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECDA0);
  }
  return result;
}

id WeatherDataProxyResponse.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WeatherDataProxyResponse.init(coder:)(a1);
}

id WeatherDataProxyResponse.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95A6298();
  uint64_t v7 = v1;
  uint64_t v8 = sub_1A96322D0();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = sub_1A962E680();
    unint64_t v12 = v11;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE260);
    sub_1A95BF7CC(&qword_1E97ECDC0, &qword_1E97ECDC8);
    sub_1A962E2C0();
    sub_1A9466028(v10, v12);
    swift_release();
    uint64_t v13 = v24;
  }
  else
  {
    uint64_t v13 = 0;
  }
  *(void *)&v7[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_responses] = v13;
  uint64_t v14 = sub_1A96322D0();
  if (v14)
  {
    unint64_t v15 = (void *)v14;
    uint64_t v16 = sub_1A962E680();
    unint64_t v18 = v17;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    uint64_t v19 = sub_1A96313A0();
    sub_1A95BF860((unint64_t *)&unk_1E97ECAA8, MEMORY[0x1E4FAA930]);
    sub_1A962E2C0();
    sub_1A9466028(v16, v18);
    swift_release();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v19);
    sub_1A95A631C((uint64_t)v6, (uint64_t)&v7[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error]);
  }
  else
  {
    uint64_t v20 = (uint64_t)&v7[OBJC_IVAR____TtC13WeatherDaemon24WeatherDataProxyResponse_error];
    uint64_t v21 = sub_1A96313A0();
    __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  }

  v25.receiver = v7;
  v25.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v25, sel_init);

  return v22;
}

uint64_t sub_1A95BF7CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DE260);
    sub_1A95BF860(a2, (void (*)(uint64_t))type metadata accessor for WeatherDataResponse);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95BF860(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id WeatherDataProxyResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WeatherDataProxyResponse.init()()
{
}

id WeatherDataProxyResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A95BF9C8()
{
  return type metadata accessor for WeatherDataProxyResponse();
}

uint64_t type metadata accessor for WeatherDataProxyResponse()
{
  uint64_t result = qword_1EB6DB2D8;
  if (!qword_1EB6DB2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A95BFA18()
{
  sub_1A95A65E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for WeatherDataProxyResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherDataProxyResponse);
}

uint64_t dispatch thunk of WeatherDataProxyResponse.__allocating_init(responses:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WeatherDataProxyResponse.__allocating_init(error:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WeatherDataProxyResponse.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t WeatherStatisticsCollection.monthlyStatistics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A951994C(v1, a1);
}

uint64_t WeatherStatisticsCollection.init(monthlyStatistics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A95C00D8(a1, a2, (uint64_t (*)(void))type metadata accessor for MonthlyWeatherStatistics);
}

BOOL static WeatherStatisticsCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (static Metadata.== infix(_:_:)(a1, a2))
  {
    uint64_t v4 = type metadata accessor for MonthlyWeatherStatistics();
    if ((sub_1A947B40C(*(void *)(a1 + *(int *)(v4 + 20)), *(void *)(a2 + *(int *)(v4 + 20))) & 1) != 0
      && (sub_1A962E7C0() & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1A95BFBB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A96456E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A96327D0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1A95BFC40()
{
  return 0xD000000000000011;
}

uint64_t sub_1A95BFC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95BFBB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A95BFC8C(uint64_t a1)
{
  unint64_t v2 = sub_1A95BFE34();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95BFCC8(uint64_t a1)
{
  unint64_t v2 = sub_1A95BFE34();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WeatherStatisticsCollection.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECDD0);
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BFE34();
  sub_1A9632970();
  type metadata accessor for MonthlyWeatherStatistics();
  sub_1A95C0094(&qword_1E97ECDE0);
  sub_1A9632770();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

unint64_t sub_1A95BFE34()
{
  unint64_t result = qword_1E97ECDD8;
  if (!qword_1E97ECDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECDD8);
  }
  return result;
}

uint64_t WeatherStatisticsCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MonthlyWeatherStatistics();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2();
  uint64_t v20 = v6 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECDE8);
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for WeatherStatisticsCollection();
  MEMORY[0x1F4188790](v13 - 8);
  OUTLINED_FUNCTION_2();
  uint64_t v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95BFE34();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A95C0094(&qword_1E97EB030);
    sub_1A9632680();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v7);
    sub_1A95C00D8(v20, v16, (uint64_t (*)(void))type metadata accessor for MonthlyWeatherStatistics);
    sub_1A95C00D8(v16, a2, (uint64_t (*)(void))type metadata accessor for WeatherStatisticsCollection);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A95C0094(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MonthlyWeatherStatistics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A95C00D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A95C0140@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherStatisticsCollection.init(from:)(a1, a2);
}

uint64_t sub_1A95C0158(void *a1)
{
  return WeatherStatisticsCollection.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for WeatherStatisticsCollection(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for MonthlyWeatherStatistics();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1A962E810();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
    uint64_t v15 = v9[10];
    uint64_t v16 = &a1[v15];
    unint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v9[11];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v9[12];
    uint64_t v24 = &a1[v23];
    objc_super v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    uint64_t v27 = v9[15];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    uint64_t v31 = *(int *)(v6 + 24);
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    sub_1A9631510();
    v8(v32, v33, v7);
  }
  return a1;
}

uint64_t destroy for WeatherStatisticsCollection(uint64_t a1)
{
  uint64_t v2 = sub_1A962E810();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v2 - 8), a1, v2);
  uint64_t v3 = type metadata accessor for Metadata();
  v8(a1 + *(int *)(v3 + 20), v2);
  uint64_t v4 = a1 + *(int *)(v3 + 24);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v2)) {
    v8(v4, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MonthlyWeatherStatistics();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 24);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v2);
}

uint64_t initializeWithCopy for WeatherStatisticsCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for Metadata();
  v5(a1 + v6[5], a2 + v6[5], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v32 = v5;
  if (__swift_getEnumTagSinglePayload(a2 + v7, 1, v4))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    v5((uint64_t)v8, (uint64_t)v9, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v4);
  }
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  uint64_t v11 = v6[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v6[11];
  uint64_t v16 = (void *)(a1 + v15);
  unint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v6[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  uint64_t v23 = v6[15];
  uint64_t v24 = (void *)(a1 + v23);
  objc_super v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = type metadata accessor for MonthlyWeatherStatistics();
  *(void *)(a1 + *(int *)(v27 + 20)) = *(void *)(a2 + *(int *)(v27 + 20));
  uint64_t v28 = *(int *)(v27 + 24);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  v32(v29, v30, v4);
  return a1;
}

char *assignWithCopy for WeatherStatisticsCollection(char *a1, char *a2)
{
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  uint64_t v7 = (int *)type metadata accessor for Metadata();
  v6(&a1[v7[5]], &a2[v7[5]], v4);
  uint64_t v8 = v7[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v8], 1, v4);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      v6(v9, v10, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v10, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v4);
LABEL_7:
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  uint64_t v14 = v7[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v20 = v7[12];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[v7[13]] = a2[v7[13]];
  a1[v7[14]] = a2[v7[14]];
  uint64_t v23 = v7[15];
  uint64_t v24 = &a1[v23];
  objc_super v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for MonthlyWeatherStatistics();
  *(void *)&a1[*(int *)(v26 + 20)] = *(void *)&a2[*(int *)(v26 + 20)];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  v6(&a1[*(int *)(v26 + 24)], &a2[*(int *)(v26 + 24)], v4);
  return a1;
}

char *initializeWithTake for WeatherStatisticsCollection(char *a1, char *a2)
{
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  uint64_t v6 = (int *)type metadata accessor for Metadata();
  v5(&a1[v6[5]], &a2[v6[5]], v4);
  uint64_t v7 = v6[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v7], 1, v4))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    v5(v8, v9, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v4);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
  a1[v6[13]] = a2[v6[13]];
  a1[v6[14]] = a2[v6[14]];
  *(_OWORD *)&a1[v6[15]] = *(_OWORD *)&a2[v6[15]];
  uint64_t v11 = type metadata accessor for MonthlyWeatherStatistics();
  *(void *)&a1[*(int *)(v11 + 20)] = *(void *)&a2[*(int *)(v11 + 20)];
  v5(&a1[*(int *)(v11 + 24)], &a2[*(int *)(v11 + 24)], v4);
  return a1;
}

char *assignWithTake for WeatherStatisticsCollection(char *a1, char *a2)
{
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  uint64_t v7 = (int *)type metadata accessor for Metadata();
  v6(&a1[v7[5]], &a2[v7[5]], v4);
  uint64_t v8 = v7[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v8], 1, v4);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      v6(v9, v10, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v10, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v4);
LABEL_7:
  *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  uint64_t v14 = v7[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v7[11];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v7[12];
  objc_super v25 = &a1[v24];
  uint64_t v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)objc_super v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  a1[v7[13]] = a2[v7[13]];
  a1[v7[14]] = a2[v7[14]];
  uint64_t v29 = v7[15];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = (uint64_t *)&a2[v29];
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for MonthlyWeatherStatistics();
  *(void *)&a1[*(int *)(v34 + 20)] = *(void *)&a2[*(int *)(v34 + 20)];
  swift_bridgeObjectRelease();
  v6(&a1[*(int *)(v34 + 24)], &a2[*(int *)(v34 + 24)], v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherStatisticsCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A95C0E98);
}

uint64_t sub_1A95C0E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonthlyWeatherStatistics();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WeatherStatisticsCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A95C0EF4);
}

uint64_t sub_1A95C0EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonthlyWeatherStatistics();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for WeatherStatisticsCollection.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A95C0FDCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherStatisticsCollection.CodingKeys()
{
  return &type metadata for WeatherStatisticsCollection.CodingKeys;
}

unint64_t sub_1A95C1018()
{
  unint64_t result = qword_1E97ECDF0;
  if (!qword_1E97ECDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECDF0);
  }
  return result;
}

unint64_t sub_1A95C1068()
{
  unint64_t result = qword_1E97ECDF8;
  if (!qword_1E97ECDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECDF8);
  }
  return result;
}

unint64_t sub_1A95C10B8()
{
  unint64_t result = qword_1E97ECE00;
  if (!qword_1E97ECE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECE00);
  }
  return result;
}

uint64_t static PeriodForecastsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97ECE08;
  sub_1A9631510();
  return v0;
}

uint64_t static PeriodForecastsDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  qword_1E97ECE08 = a1;
  qword_1E97ECE10 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PeriodForecastsDescriptor.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A95C11DC()
{
  sub_1A9631510();
  sub_1A9631EA0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E97ECE18 = 0x2E312E312E30;
  qword_1E97ECE20 = 0xE600000000000000;
  return result;
}

uint64_t static PeriodForecastsDescriptor.version.getter()
{
  if (qword_1E97EA660 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  uint64_t v0 = qword_1E97ECE18;
  sub_1A9631510();
  return v0;
}

uint64_t static PeriodForecastsDescriptor.version.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1E97EA660 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_3();
  qword_1E97ECE18 = a1;
  qword_1E97ECE20 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PeriodForecastsDescriptor.version.modify())()
{
  if (qword_1E97EA660 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for PeriodForecastsDescriptor()
{
  return &type metadata for PeriodForecastsDescriptor;
}

BOOL NSHTTPURLResponse.hasAuthenticationFailure.getter()
{
  return objc_msgSend(v0, sel_statusCode) == (id)401;
}

id AirQualityScaleProxyResponse.__allocating_init(scale:)(const void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AirQualityScaleProxyResponse.init(scale:)(a1);
}

id AirQualityScaleProxyResponse.__allocating_init(error:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return AirQualityScaleProxyResponse.init(error:)(a1);
}

uint64_t static AirQualityScaleProxyResponse.supportsSecureCoding.getter()
{
  return byte_1E97ECE30;
}

uint64_t static AirQualityScaleProxyResponse.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97ECE30 = a1;
  return result;
}

uint64_t (*static AirQualityScaleProxyResponse.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

void *AirQualityScaleProxyResponse.scale.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1A95654FC(v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, (uint64_t)v4, &qword_1EB6DB100);
  sub_1A95654FC((uint64_t)v4, a1, &qword_1EB6DB100);
  return sub_1A95C1B88(v4, sub_1A94EE0EC);
}

uint64_t AirQualityScaleProxyResponse.error.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error, a1);
}

id AirQualityScaleProxyResponse.init(scale:)(const void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  memcpy(__dst, a1, sizeof(__dst));
  nullsub_1(__dst);
  sub_1A95654FC((uint64_t)__dst, (uint64_t)v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, &qword_1EB6DB100);
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error;
  uint64_t v5 = sub_1A96313A0();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id AirQualityScaleProxyResponse.init(error:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1A94EDFA0(v10);
  sub_1A95654FC((uint64_t)v10, (uint64_t)v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, &qword_1EB6DB100);
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error;
  uint64_t v5 = sub_1A96313A0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

Swift::Void __swiftcall AirQualityScaleProxyResponse.encode(with:)(NSCoder with)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95654FC(v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, (uint64_t)v23, &qword_1EB6DB100);
  sub_1A95654FC((uint64_t)v23, (uint64_t)v24, &qword_1EB6DB100);
  if (sub_1A9597308((uint64_t)v24) == 1)
  {
    sub_1A959714C(v1 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error, (uint64_t)v5);
    uint64_t v6 = sub_1A96313A0();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6);
    sub_1A95971B4((uint64_t)v5);
    if (EnumTagSinglePayload == 1) {
      return;
    }
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    sub_1A95A5D84();
    uint64_t v15 = sub_1A962E2F0();
    unint64_t v17 = v16;
    swift_release();
    uint64_t v18 = (void *)sub_1A962E660();
    uint64_t v19 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v18 forKey:v19];

    uint64_t v13 = v15;
    unint64_t v14 = v17;
  }
  else
  {
    sub_1A962E310();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E300();
    sub_1A95654FC((uint64_t)v23, (uint64_t)&v21, &qword_1EB6DB100);
    sub_1A95654FC((uint64_t)v23, (uint64_t)v22, &qword_1EB6DB100);
    sub_1A94A9BB8(v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DB100);
    sub_1A95C1AC8();
    uint64_t v8 = sub_1A962E2F0();
    unint64_t v10 = v9;
    sub_1A95C1B88(v23, sub_1A95C1BF4);
    swift_release();
    uint64_t v11 = (void *)sub_1A962E660();
    int v12 = (void *)sub_1A9631D40();
    [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

    uint64_t v13 = v8;
    unint64_t v14 = v10;
  }
  sub_1A9466028(v13, v14);
}

unint64_t sub_1A95C1AC8()
{
  unint64_t result = qword_1E97ECE50;
  if (!qword_1E97ECE50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DB100);
    sub_1A95C1B3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECE50);
  }
  return result;
}

unint64_t sub_1A95C1B3C()
{
  unint64_t result = qword_1E97ECE58;
  if (!qword_1E97ECE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECE58);
  }
  return result;
}

void *sub_1A95C1B88(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

void sub_1A95C1BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A94ED188(a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

id AirQualityScaleProxyResponse.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AirQualityScaleProxyResponse.init(coder:)(a1);
}

id AirQualityScaleProxyResponse.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97ECA70);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A95A6298();
  id v7 = v1;
  uint64_t v8 = sub_1A96322D0();
  if (v8)
  {
    unint64_t v9 = (void *)v8;
    uint64_t v10 = sub_1A962E680();
    unint64_t v12 = v11;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    sub_1A94ED220();
    sub_1A962E2C0();
    sub_1A9466028(v10, v12);
    swift_release();
    memcpy(v23, v24, sizeof(v23));
    nullsub_1(v23);
    sub_1A95654FC((uint64_t)v23, (uint64_t)v26, &qword_1EB6DB100);
  }
  else
  {
    sub_1A94EDFA0(v26);
  }
  sub_1A95654FC((uint64_t)v26, (uint64_t)v7 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_scale, &qword_1EB6DB100);
  uint64_t v13 = sub_1A96322D0();
  if (v13)
  {
    unint64_t v14 = (void *)v13;
    uint64_t v15 = sub_1A962E680();
    unint64_t v17 = v16;

    sub_1A962E2E0();
    OUTLINED_FUNCTION_10_0();
    sub_1A962E2D0();
    uint64_t v18 = sub_1A96313A0();
    sub_1A95A62D8((unint64_t *)&unk_1E97ECAA8);
    sub_1A962E2C0();
    sub_1A9466028(v15, v17);
    swift_release();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v18);
    sub_1A95654FC((uint64_t)v6, (uint64_t)v7 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error, (uint64_t *)&unk_1E97ECA70);
  }
  else
  {
    uint64_t v19 = (uint64_t)v7 + OBJC_IVAR____TtC13WeatherDaemon28AirQualityScaleProxyResponse_error;
    uint64_t v20 = sub_1A96313A0();
    __swift_storeEnumTagSinglePayload(v19, 1, 1, v20);
  }

  v25.receiver = v7;
  v25.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v25, sel_init);

  return v21;
}

id AirQualityScaleProxyResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AirQualityScaleProxyResponse.init()()
{
}

id AirQualityScaleProxyResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A95C21C8()
{
  return type metadata accessor for AirQualityScaleProxyResponse();
}

uint64_t type metadata accessor for AirQualityScaleProxyResponse()
{
  uint64_t result = qword_1EB6DB4B0;
  if (!qword_1EB6DB4B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A95C2218()
{
  sub_1A95A65E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AirQualityScaleProxyResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AirQualityScaleProxyResponse);
}

uint64_t dispatch thunk of AirQualityScaleProxyResponse.__allocating_init(scale:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AirQualityScaleProxyResponse.__allocating_init(error:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AirQualityScaleProxyResponse.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t WeatherStatisticsDataStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  WeatherStatisticsDataStore.init()();
  return v0;
}

uint64_t WeatherStatisticsDataStore.dailyWeatherStatistics.getter()
{
  return swift_retain();
}

uint64_t WeatherStatisticsDataStore.dailySummaries.getter()
{
  return swift_retain();
}

uint64_t WeatherStatisticsDataStore.monthlyWeatherStatistics.getter()
{
  return swift_retain();
}

void *WeatherStatisticsDataStore.init()()
{
  objc_super v2 = v0;
  uint64_t v3 = sub_1A9631A80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E97EA670 != -1) {
    swift_once();
  }
  if (!qword_1E97ECE78)
  {
    if (qword_1E97EA630 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E9802CE8);
    unint64_t v9 = sub_1A96317D0();
    os_log_type_t v10 = sub_1A9632220();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl(&dword_1A9410000, v9, v10, "Failed to create weather statistics database", v11, 2u);
      MEMORY[0x1AD0F7300](v11, -1, -1);
    }

    sub_1A95C3054();
    swift_allocError();
    swift_willThrow();
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECE88);
  sub_1A95A820C(&qword_1E97ECE90, &qword_1E97ECE88);
  swift_retain();
  uint64_t v7 = sub_1A9631A30();
  if (v1)
  {
    swift_release();
LABEL_12:
    swift_deallocPartialClassInstance();
    return v2;
  }
  v0[3] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECE98);
  sub_1A95A820C(&qword_1E97ECEA0, &qword_1E97ECE98);
  v0[4] = OUTLINED_FUNCTION_1_53();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECEA8);
  sub_1A95A820C(&qword_1E97ECEB0, &qword_1E97ECEA8);
  v0[2] = sub_1A9631A30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECEB8);
  sub_1A95A820C(&qword_1E97ECEC0, &qword_1E97ECEB8);
  v0[5] = OUTLINED_FUNCTION_1_53();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAA768], v3);
  sub_1A9631A90();
  uint64_t v13 = OUTLINED_FUNCTION_1_39();
  v14(v13);
  swift_release();
  return v2;
}

uint64_t sub_1A95C2750()
{
  sub_1A9631970();
  sub_1A96319C0();
  uint64_t result = swift_release();
  if (!v0)
  {
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    swift_release();
    sub_1A9631970();
    sub_1A96319C0();
    return swift_release();
  }
  return result;
}

uint64_t WeatherStatisticsDataStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherStatisticsDataStore.__deallocating_deinit()
{
  WeatherStatisticsDataStore.deinit();
  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_1A95C2888()
{
  uint64_t v0 = sub_1A9631A40();
  __swift_allocate_value_buffer(v0, qword_1E97ECE60);
  uint64_t v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1E97ECE60);
  if (qword_1E97EA630 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A96317F0();
  uint64_t v3 = (uint8_t *)__swift_project_value_buffer(v2, (uint64_t)qword_1E9802CE8);
  return static Database.Location.protectedLocation(_:logger:)(0xD000000000000015, 0x80000001A9648FA0, v3, v1);
}

uint64_t static WeatherStatisticsDataStore.location.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E97EA668 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E97ECE60);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static WeatherStatisticsDataStore.location.setter(uint64_t a1)
{
  if (qword_1E97EA668 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A9631A40();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E97ECE60);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static WeatherStatisticsDataStore.location.modify())()
{
  if (qword_1E97EA668 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A9631A40();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E97ECE60);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WeatherStatisticsDataStore.preferredCacheSize.getter@<X0>(void *a1@<X8>)
{
  *a1 = 32;
  uint64_t v2 = *MEMORY[0x1E4FAA740];
  uint64_t v3 = sub_1A9631A60();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1A95C2C00()
{
  uint64_t v28 = sub_1A9631A10();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (char *)v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1A9631A20();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x1F4188790](v1);
  objc_super v25 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1A9631A00();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A9631A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1A96318A0();
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A9631A40();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_1A9631A70();
  if (qword_1E97EA668 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v13, (uint64_t)qword_1E97ECE60);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  static AssertionOptions.weatherAssertions.getter();
  *unint64_t v9 = 32;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAA740], v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAA6F8], v22);
  uint64_t v18 = (uint64_t)v25;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E4FAA718], v24);
  uint64_t v19 = (uint64_t)v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v27, *MEMORY[0x1E4FAA708], v28);
  char v29 = 1;
  uint64_t result = Database.init(location:assertions:journalingMode:recoveryMode:preferredCacheSize:vacuumMode:busyTimeout:)((uint64_t)v16, (uint64_t)v12, v18, v19, (uint64_t)v9, (uint64_t)v5, 0x100000000);
  qword_1E97ECE78 = result;
  return result;
}

unint64_t sub_1A95C3054()
{
  unint64_t result = qword_1E97ECE80;
  if (!qword_1E97ECE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECE80);
  }
  return result;
}

uint64_t sub_1A95C30A0()
{
  return sub_1A95C2750();
}

uint64_t type metadata accessor for WeatherStatisticsDataStore()
{
  return self;
}

uint64_t method lookup function for WeatherStatisticsDataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherStatisticsDataStore);
}

uint64_t dispatch thunk of WeatherStatisticsDataStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for WeatherStatisticsDataStore.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A95C31BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherStatisticsDataStore.Errors()
{
  return &type metadata for WeatherStatisticsDataStore.Errors;
}

unint64_t sub_1A95C31F8()
{
  unint64_t result = qword_1E97ECEC8;
  if (!qword_1E97ECEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECEC8);
  }
  return result;
}

uint64_t destroy for WeatherAlertRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WeatherAlertRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_1A9631510();
  sub_1A9631510();
  sub_1A9631510();
  return a1;
}

void *assignWithCopy for WeatherAlertRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1A9631510();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WeatherAlertRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WeatherAlertRequest()
{
  return &type metadata for WeatherAlertRequest;
}

id sub_1A95C33D8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1A9631D40();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithDescription_, v1);

  return v2;
}

id WDSJWTAuthenticatorServiceListener.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return WDSJWTAuthenticatorServiceListener.init(delegate:)(a1, a2);
}

id WDSJWTAuthenticatorServiceListener.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_1A9631530();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OBJC_IVAR____TtC13WeatherDaemon34WDSJWTAuthenticatorServiceListener_authServiceRequestDeduper;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1A95C35F4();
  uint64_t v8 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DF5D0);
  sub_1A9433E0C();
  sub_1A96323D0();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB6DF5E0);
  swift_allocObject();
  *(void *)&v2[v7] = sub_1A9631490();
  unint64_t v9 = &v8[OBJC_IVAR____TtC13WeatherDaemon34WDSJWTAuthenticatorServiceListener_delegate];
  *(void *)unint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  swift_unknownObjectRetain();

  v12.receiver = v8;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  swift_unknownObjectRelease();
  return v10;
}

unint64_t sub_1A95C35F4()
{
  unint64_t result = qword_1EB6DF570;
  if (!qword_1EB6DF570)
  {
    sub_1A9631530();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DF570);
  }
  return result;
}

id WDSJWTAuthenticatorServiceListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WDSJWTAuthenticatorServiceListener.init()()
{
}

id WDSJWTAuthenticatorServiceListener.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall WDSJWTAuthenticatorServiceListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v4 = sub_1A9631400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A96317F0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB6EB648);
  unint64_t v9 = sub_1A96317D0();
  os_log_type_t v10 = sub_1A9632230();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v33 = v2;
    uint64_t v34 = v7;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    if (qword_1EB6DB0C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A9631310();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB6DB0A8);
    uint64_t v13 = sub_1A9631300();
    uint64_t v15 = sub_1A945C1DC(v13, v14, v37);
    OUTLINED_FUNCTION_2_47(v15);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v9, v10, "Incoming message on %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();

    uint64_t v16 = v33;
    uint64_t v7 = v34;
  }
  else
  {
    uint64_t v16 = v2;
  }
  sub_1A95C4EBC(shouldAcceptNewConnection.super.isa);
  if (v17)
  {
    char v18 = sub_1A946A6CC();
    swift_bridgeObjectRelease();
    if (v18)
    {
      uint64_t v19 = sub_1A96317D0();
      os_log_type_t v20 = sub_1A9632230();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v21 = 0;
        uint64_t v22 = "Calling process is first party process ... accepting the connection";
LABEL_20:
        _os_log_impl(&dword_1A9410000, v19, v20, v22, v21, 2u);
        OUTLINED_FUNCTION_3_1();
        goto LABEL_21;
      }
      goto LABEL_21;
    }
  }
  uint64_t v23 = (void *)sub_1A9631D40();
  id v24 = [(objc_class *)shouldAcceptNewConnection.super.isa wd_valueForEntitlement:v23];

  if (v24)
  {
    sub_1A96323B0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_1A95987C8((uint64_t)v36, (uint64_t)v37);
  if (v37[3])
  {
    if ((swift_dynamicCast() & 1) != 0 && v35 == 1)
    {
      uint64_t v19 = sub_1A96317D0();
      os_log_type_t v20 = sub_1A9632230();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v21 = 0;
        uint64_t v22 = "Calling process is 3rd party process and has the correct entitlement ... accepting the connection";
        goto LABEL_20;
      }
LABEL_21:

      [(objc_class *)shouldAcceptNewConnection.super.isa setExportedObject:v16];
      if (qword_1EB6DB0C0 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1A9631310();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EB6DB0A8);
      sub_1A96312F0();
      uint64_t v26 = (void *)sub_1A96313F0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      [(objc_class *)shouldAcceptNewConnection.super.isa setExportedInterface:v26];

      [(objc_class *)shouldAcceptNewConnection.super.isa activate];
      return 1;
    }
  }
  else
  {
    sub_1A944C424((uint64_t)v37, &qword_1EB6DAF50);
  }
  uint64_t v28 = sub_1A96317D0();
  os_log_type_t v29 = sub_1A9632220();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v31 = sub_1A945C1DC(0xD00000000000001ELL, 0x80000001A9649000, v37);
    OUTLINED_FUNCTION_2_47(v31);
    sub_1A9632350();
    _os_log_impl(&dword_1A9410000, v28, v29, "Missing entitlement - exiting. entitlementKey=%{public}s", v30, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();
  }

  return 0;
}

void sub_1A95C3D24(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  _Block_copy(a3);
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A96317F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB6EB648);
  id v7 = a1;
  uint64_t v8 = sub_1A96317D0();
  os_log_type_t v9 = sub_1A9632230();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v10 = 138543362;
    id v12 = v7;
    sub_1A9632350();
    *uint64_t v11 = v7;

    _os_log_impl(&dword_1A9410000, v8, v9, "Received proxy request for generating a jwt token. url=%{public}@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC800);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v11, -1, -1);
    MEMORY[0x1AD0F7300](v10, -1, -1);
  }
  else
  {
  }
  sub_1A95C4F20();
  uint64_t v13 = sub_1A95C33D8();
  id v14 = objc_msgSend(self, sel_currentConnection);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_1A95C4EBC(v14);
    if (!v17)
    {
      sub_1A95C4F60();
      uint64_t v30 = (void *)swift_allocError();
      *uint64_t v31 = 0;
      uint64_t v32 = (void *)sub_1A962E520();
      ((void (**)(void, void, void *))a3)[2](a3, 0, v32);

      swift_release();
      uint64_t v13 = v15;
      goto LABEL_14;
    }
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    if (qword_1EB6DAA08 != -1) {
      swift_once();
    }
    os_log_type_t v20 = (void *)swift_allocObject();
    void v20[2] = v18;
    id v20[3] = v19;
    v20[4] = v7;
    type metadata accessor for WDSJWTAuthenticatorServiceListener();
    id v21 = v7;
    sub_1A9631760();
    swift_release();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1A95C5220;
    *(void *)(v22 + 24) = v5;
    swift_retain();
    uint64_t v23 = (void *)sub_1A9631660();
    sub_1A96316C0();
    swift_release();
    swift_release();

    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1A95C5220;
    *(void *)(v24 + 24) = v5;
    swift_retain();
    uint64_t v25 = (void *)sub_1A9631660();
    sub_1A96316F0();
    swift_release();
    swift_release();

    *(void *)(swift_allocObject() + 16) = v13;
    id v26 = v13;
    uint64_t v13 = (void *)sub_1A9631660();
    sub_1A9631720();
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    sub_1A95C4F60();
    uint64_t v27 = (void *)swift_allocError();
    *uint64_t v28 = 1;
    os_log_type_t v29 = (void *)sub_1A962E520();
    ((void (**)(void, void, void *))a3)[2](a3, 0, v29);
  }
  swift_release();
LABEL_14:

  _Block_release(a3);
}

void WDSJWTAuthenticatorServiceListener.generateToken(url:completion:)(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  swift_getObjectType();
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A96317F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB6EB648);
  id v7 = a1;
  uint64_t v8 = sub_1A96317D0();
  os_log_type_t v9 = sub_1A9632230();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v10 = 138543362;
    id v11 = v7;
    sub_1A9632350();
    *uint64_t v32 = v7;

    _os_log_impl(&dword_1A9410000, v8, v9, "Received proxy request for generating a jwt token. url=%{public}@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC800);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
  }
  sub_1A95C4F20();
  id v12 = sub_1A95C33D8();
  id v13 = objc_msgSend(self, sel_currentConnection);
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = sub_1A95C4EBC(v13);
    if (!v16)
    {
      sub_1A95C4F60();
      os_log_type_t v29 = (void *)swift_allocError();
      *uint64_t v30 = 0;
      sub_1A962E520();
      uint64_t v31 = OUTLINED_FUNCTION_1_54();
      a2(v31);

      goto LABEL_14;
    }
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    if (qword_1EB6DAA08 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = v17;
    v19[3] = v18;
    v19[4] = v7;
    id v20 = v7;
    sub_1A9631760();
    swift_release();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a2;
    *(void *)(v21 + 24) = a3;
    swift_retain();
    uint64_t v22 = (void *)sub_1A9631660();
    sub_1A96316C0();
    swift_release();
    swift_release();

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = a3;
    swift_retain();
    uint64_t v24 = (void *)sub_1A9631660();
    sub_1A96316F0();
    swift_release();
    swift_release();

    *(void *)(swift_allocObject() + 16) = v12;
    id v25 = v12;
    id v12 = (void *)sub_1A9631660();
    sub_1A9631720();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1A95C4F60();
    id v26 = (void *)swift_allocError();
    *uint64_t v27 = 1;
    sub_1A962E520();
    uint64_t v28 = OUTLINED_FUNCTION_1_54();
    a2(v28);
  }
  id v14 = v12;
LABEL_14:
}

uint64_t sub_1A95C46C4()
{
  return sub_1A96314B0();
}

uint64_t sub_1A95C4728(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for WDSEndpoint();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A962E5F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95C48DC(a1, (uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
  uint64_t v16 = &v11[*(int *)(v9 + 28)];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC13WeatherDaemon34WDSJWTAuthenticatorServiceListener_delegate + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v17 + 8))(a3, a4, v11, ObjectType, v17);
  sub_1A9490C8C((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19;
}

uint64_t sub_1A95C48DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DEAB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  sub_1A9631D60();
  sub_1A962E5E0();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1A962E5F0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) != 1)
  {
    uint64_t v6 = v9;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v6, v10);
  }
  sub_1A944C424((uint64_t)v9, &qword_1EB6DEAB0);
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A96317F0();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB6EB648);
  uint64_t v12 = a1;
  uint64_t v13 = sub_1A96317D0();
  os_log_type_t v14 = sub_1A9632220();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v21 = a2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138543362;
    uint64_t v22 = v12;
    uint64_t v16 = v12;
    a2 = v21;
    sub_1A9632350();
    uint64_t v17 = v20;
    *id v20 = a1;

    _os_log_impl(&dword_1A9410000, v13, v14, "Failed to create URL from string. urlString=%{public}@", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC800);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v17, -1, -1);
    MEMORY[0x1AD0F7300](v15, -1, -1);
  }
  else
  {

    uint64_t v13 = v12;
  }

  sub_1A962E5E0();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v10);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v6, v10);
  }
  __break(1u);
  return result;
}

void sub_1A95C4BBC(uint64_t a1, void (*a2)(void *, void))
{
  uint64_t v3 = (void *)sub_1A9631D40();
  a2(v3, 0);
}

void sub_1A95C4C10(void *a1, void (*a2)(void, void *))
{
  if (qword_1EB6DF550 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A96317F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB6EB648);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_1A96317D0();
  os_log_type_t v8 = sub_1A9632220();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    id v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
    uint64_t v12 = sub_1A9631DC0();
    sub_1A945C1DC(v12, v13, &v17);
    sub_1A9632350();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A9410000, v7, v8, "Failed to generate token with error: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0F7300](v10, -1, -1);
    MEMORY[0x1AD0F7300](v9, -1, -1);
  }
  else
  {
  }
  sub_1A95C4F60();
  os_log_type_t v14 = (void *)swift_allocError();
  *uint64_t v15 = 2;
  uint64_t v16 = (void *)sub_1A962E520();
  a2(0, v16);
}

uint64_t sub_1A95C4EBC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_wd_codesigningIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A9631D60();

  return v3;
}

unint64_t sub_1A95C4F20()
{
  unint64_t result = qword_1EB6DAF78;
  if (!qword_1EB6DAF78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6DAF78);
  }
  return result;
}

unint64_t sub_1A95C4F60()
{
  unint64_t result = qword_1E97ECEE0;
  if (!qword_1E97ECEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECEE0);
  }
  return result;
}

uint64_t sub_1A95C4FB0()
{
  return sub_1A95C46C4();
}

uint64_t sub_1A95C4FD0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A95C5008(uint64_t a1)
{
  sub_1A95C4BBC(a1, *(void (**)(void *, void))(v1 + 16));
}

void sub_1A95C5024(void *a1)
{
  sub_1A95C4C10(a1, *(void (**)(void, void *))(v1 + 16));
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceListenerDelegate.generateToken(for:endpoint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for WDSJWTAuthenticatorServiceListener()
{
  return self;
}

uint64_t method lookup function for WDSJWTAuthenticatorServiceListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WDSJWTAuthenticatorServiceListener);
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceListener.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for WDSJWTAuthenticatorServiceListener.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C5160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSJWTAuthenticatorServiceListener.Errors()
{
  return &type metadata for WDSJWTAuthenticatorServiceListener.Errors;
}

unint64_t sub_1A95C519C()
{
  unint64_t result = qword_1E97ECF48;
  if (!qword_1E97ECF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ECF48);
  }
  return result;
}

uint64_t sub_1A95C51E8()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A95C5220()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A95C527C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A95C52B4()
{
  return sub_1A95C4728(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1A95C52D0(uint64_t a1)
{
}

uint64_t sub_1A95C52E8()
{
  return sub_1A95C4FB0();
}

uint64_t sub_1A95C533C@<X0>(uint64_t a1@<X8>)
{
  sub_1A9631510();
  switch(sub_1A9621D80())
  {
    case 1u:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FE8];
      goto LABEL_8;
    case 2u:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FD0];
      goto LABEL_8;
    case 3u:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FC8];
      goto LABEL_8;
    case 4u:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FD8];
      goto LABEL_8;
    case 5u:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FC0];
      goto LABEL_8;
    case 6u:
      uint64_t v7 = sub_1A9630F40();
      uint64_t v5 = a1;
      uint64_t v6 = 1;
      goto LABEL_9;
    default:
      uint64_t v2 = (unsigned int *)MEMORY[0x1E4FB5FE0];
LABEL_8:
      uint64_t v3 = *v2;
      uint64_t v4 = sub_1A9630F40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(a1, v3, v4);
      uint64_t v5 = a1;
      uint64_t v6 = 0;
      uint64_t v7 = v4;
LABEL_9:
      return __swift_storeEnumTagSinglePayload(v5, v6, 1, v7);
  }
}

uint64_t MarineForecast.encode(using:)()
{
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_51_3();
  type metadata accessor for MarineForecast();
  OUTLINED_FUNCTION_75_1();
  sub_1A9630420();
  MEMORY[0x1AD0F5030](v0);
  OUTLINED_FUNCTION_41_2();
  sub_1A9630FB0();
  OUTLINED_FUNCTION_47_3();
  sub_1A9630F90();
  OUTLINED_FUNCTION_34_5();
  sub_1A962EBE0();
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_37_5();
  v5();
  OUTLINED_FUNCTION_37_5();
  return ((uint64_t (*)(void))v5)();
}

uint64_t News.encode(using:)()
{
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_35_5();
  sub_1A9630420();
  MEMORY[0x1AD0F5120](v0);
  OUTLINED_FUNCTION_41_2();
  sub_1A9631090();
  OUTLINED_FUNCTION_47_3();
  sub_1A9631080();
  OUTLINED_FUNCTION_34_5();
  sub_1A962EBE0();
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_37_5();
  v5();
  OUTLINED_FUNCTION_37_5();
  return ((uint64_t (*)(void))v5)();
}

void TideEvents.encode(using:)()
{
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_48_2();
  MEMORY[0x1F4188790](v5);
  type metadata accessor for TideEvents();
  Metadata.encode(using:)();
  sub_1A9630420();
  sub_1A9630420();
  MEMORY[0x1AD0F42C0](v0);
  sub_1A9630260();
  sub_1A9630230();
  OUTLINED_FUNCTION_47_3();
  sub_1A9630220();
  OUTLINED_FUNCTION_34_5();
  sub_1A962EBE0();
  uint64_t v6 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_20_8();
  v6();
  OUTLINED_FUNCTION_20_8();
  v6();
  OUTLINED_FUNCTION_20_8();
  v6();
  OUTLINED_FUNCTION_7_1();
}

void WeatherAlerts.encode(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_6_10();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ECF50);
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_48_2();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&a9 - v29;
  uint64_t v31 = sub_1A9631040();
  OUTLINED_FUNCTION_1();
  uint64_t v33 = v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_44_3();
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&a9 - v39;
  Metadata.encode(using:)();
  type metadata accessor for WeatherAlerts();
  OUTLINED_FUNCTION_70_1();
  if (v41)
  {
    sub_1A9631DE0();
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v30, v42, 1, v31);
  sub_1A9630420();
  MEMORY[0x1AD0F34D0](v25);
  OUTLINED_FUNCTION_64_1();
  sub_1A962F460();
  OUTLINED_FUNCTION_72_1();
  sub_1A962F430();
  sub_1A9417B8C((uint64_t)v30, v20, &qword_1E97ECF50);
  OUTLINED_FUNCTION_478(v20, 1, v31);
  if (v43)
  {
    sub_1A94179C4(v20, &qword_1E97ECF50);
  }
  else
  {
    OUTLINED_FUNCTION_29();
    v44();
    sub_1A962F450();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v31);
  }
  OUTLINED_FUNCTION_60_1();
  sub_1A962EBE0();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v45(v21, v31);
  sub_1A94179C4((uint64_t)v30, &qword_1E97ECF50);
  v45((uint64_t)v40, v31);
  OUTLINED_FUNCTION_7_1();
}

void WeatherComparisons.encode(using:)()
{
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_51_3();
  type metadata accessor for WeatherComparisons();
  OUTLINED_FUNCTION_75_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA970);
  sub_1A943909C(&qword_1E97ED020, &qword_1EB6DA970);
  sub_1A946907C(&qword_1E97ED028, (void (*)(uint64_t))type metadata accessor for WeatherComparison);
  OUTLINED_FUNCTION_26_6();
  MEMORY[0x1AD0F4F90](v0);
  OUTLINED_FUNCTION_41_2();
  sub_1A9630F10();
  OUTLINED_FUNCTION_47_3();
  sub_1A9630EE0();
  OUTLINED_FUNCTION_34_5();
  sub_1A962EBE0();
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  OUTLINED_FUNCTION_20_8();
  v5();
  OUTLINED_FUNCTION_20_8();
  v5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1A95C5C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED038);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A9631030();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A95C5DEC((uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1A94179C4((uint64_t)v4, &qword_1E97ED038);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_1A941BC08();
    sub_1A9630FF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = 0;
  }
  uint64_t v10 = sub_1A9631040();
  return __swift_storeEnumTagSinglePayload(a1, v9, 1, v10);
}

uint64_t sub_1A95C5DEC@<X0>(uint64_t a1@<X8>)
{
  sub_1A9631510();
  char v2 = sub_1A9621DCC();
  if (v2 == 2)
  {
    uint64_t v3 = sub_1A9631030();
    uint64_t v4 = a1;
    uint64_t v5 = 1;
  }
  else
  {
    char v6 = v2;
    uint64_t v7 = sub_1A9631030();
    if (v6) {
      os_log_type_t v8 = (unsigned int *)MEMORY[0x1E4FB6000];
    }
    else {
      os_log_type_t v8 = (unsigned int *)MEMORY[0x1E4FB5FF8];
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(a1, *v8, v7);
    uint64_t v4 = a1;
    uint64_t v5 = 0;
    uint64_t v3 = v7;
  }
  return __swift_storeEnumTagSinglePayload(v4, v5, 1, v3);
}

void ForecastSummary.encode(using:)()
{
  OUTLINED_FUNCTION_6_10();
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v6 = OUTLINED_FUNCTION_2_0(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_32();
  uint64_t v7 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_28_1();
  sub_1A9630C80();
  OUTLINED_FUNCTION_1();
  __n128 v11 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1AD0F4ED0](v4, v11);
  sub_1A941BC08();
  sub_1A9630E80();
  uint64_t v12 = type metadata accessor for ForecastSummary();
  switch(*(unsigned char *)(v0 + *(int *)(v12 + 24)))
  {
    case 7:
      OUTLINED_FUNCTION_43_3();
      OUTLINED_FUNCTION_286();
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_81_0();
    default:
      OUTLINED_FUNCTION_23_8();
      v13();
      OUTLINED_FUNCTION_38_1();
      sub_1A9630E70();
      OUTLINED_FUNCTION_103();
      v14();
      sub_1A9417B8C(v0 + *(int *)(v12 + 20), v1, &qword_1EB6DE3A0);
      OUTLINED_FUNCTION_478(v1, 1, v7);
      if (v15)
      {
        sub_1A94179C4(v1, &qword_1EB6DE3A0);
      }
      else
      {
        OUTLINED_FUNCTION_22_9();
        OUTLINED_FUNCTION_29();
        v16();
        uint64_t v17 = sub_1A941BC08();
        OUTLINED_FUNCTION_6_33(v17);
        sub_1A9630E60();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v7);
      }
      OUTLINED_FUNCTION_19_11();
      if ((v19 & 1) == 0)
      {
        OUTLINED_FUNCTION_30_6(*v18);
        sub_1A9630E40();
      }
      OUTLINED_FUNCTION_19_11();
      if ((v20 & 1) == 0)
      {
        OUTLINED_FUNCTION_7_30();
        sub_1A9630E50();
      }
      OUTLINED_FUNCTION_73_1();
      sub_1A962EBE0();
      OUTLINED_FUNCTION_7_1();
      return;
  }
}

void TrendDeviation.encode(using:)()
{
  OUTLINED_FUNCTION_6_10();
  uint64_t v2 = v0;
  uint64_t v42 = v4;
  uint64_t v43 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED030);
  uint64_t v6 = OUTLINED_FUNCTION_2_0(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v41 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v37[-v9];
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_52_2();
  MEMORY[0x1F4188790](v12);
  os_log_type_t v14 = &v37[-v13];
  sub_1A9630710();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_16();
  uint64_t v40 = v18;
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v19);
  uint64_t v39 = &v37[-v20];
  OUTLINED_FUNCTION_2_4();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_44_3();
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v24 = OUTLINED_FUNCTION_2_0(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_5_24();
  sub_1A9417B8C(v0, v0, &qword_1EB6DE3A0);
  uint64_t v25 = sub_1A962E810();
  OUTLINED_FUNCTION_478(v0, 1, v25);
  if (v26)
  {
    sub_1A94179C4(v0, &qword_1EB6DE3A0);
    int v38 = 0;
  }
  else
  {
    int v38 = sub_1A941BC08();
    OUTLINED_FUNCTION_4_8();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v25);
  }
  uint64_t v28 = (int *)type metadata accessor for TrendDeviation();
  switch(*(unsigned char *)(v2 + v28[5]))
  {
    case 4:
      OUTLINED_FUNCTION_31_4((uint64_t)v14);
      uint64_t v29 = *(void (**)(void))(v16 + 104);
      OUTLINED_FUNCTION_23_8();
      v29();
      sub_1A94179C4((uint64_t)v14, &qword_1E97ED030);
      break;
    default:
      uint64_t v29 = *(void (**)(void))(v16 + 104);
      OUTLINED_FUNCTION_23_8();
      v29();
      OUTLINED_FUNCTION_38_4((uint64_t)v14);
      OUTLINED_FUNCTION_85_1();
      v30();
      break;
  }
  switch(*(unsigned char *)(v2 + v28[6]))
  {
    case 4:
      OUTLINED_FUNCTION_31_4(v1);
      OUTLINED_FUNCTION_23_8();
      v29();
      sub_1A94179C4(v1, &qword_1E97ED030);
      break;
    default:
      OUTLINED_FUNCTION_23_8();
      v29();
      OUTLINED_FUNCTION_38_4(v1);
      OUTLINED_FUNCTION_85_1();
      v31();
      break;
  }
  switch(*(unsigned char *)(v2 + v28[7]))
  {
    case 4:
      OUTLINED_FUNCTION_31_4((uint64_t)v10);
      OUTLINED_FUNCTION_23_8();
      v29();
      sub_1A94179C4((uint64_t)v10, &qword_1E97ED030);
      break;
    default:
      OUTLINED_FUNCTION_23_8();
      v29();
      OUTLINED_FUNCTION_38_4((uint64_t)v10);
      OUTLINED_FUNCTION_53_2();
      OUTLINED_FUNCTION_85_1();
      v32();
      break;
  }
  switch(*(unsigned char *)(v2 + v28[8]))
  {
    case 4:
      uint64_t v33 = v41;
      OUTLINED_FUNCTION_31_4((uint64_t)v41);
      OUTLINED_FUNCTION_23_8();
      v29();
      sub_1A94179C4((uint64_t)v33, &qword_1E97ED030);
      break;
    default:
      uint64_t v34 = v41;
      OUTLINED_FUNCTION_23_8();
      v29();
      OUTLINED_FUNCTION_38_4((uint64_t)v34);
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_85_1();
      v35();
      break;
  }
  sub_1A96306A0();
  uint64_t v36 = *(void (**)(void))(v16 + 8);
  OUTLINED_FUNCTION_37_5();
  v36();
  OUTLINED_FUNCTION_37_5();
  v36();
  OUTLINED_FUNCTION_37_5();
  v36();
  OUTLINED_FUNCTION_37_5();
  v36();
  OUTLINED_FUNCTION_7_1();
}

uint64_t WeatherComparison.encode(using:)()
{
  sub_1A9630F50();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_1_0();
  uint64_t v14 = sub_1A962FF60();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_28_1();
  sub_1A9630D00();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_40_3();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v6);
  Metadata.encode(using:)();
  type metadata accessor for WeatherComparison();
  OUTLINED_FUNCTION_23_8();
  v7();
  OUTLINED_FUNCTION_23_8();
  v8();
  OUTLINED_FUNCTION_23_8();
  v9();
  sub_1A941BC08();
  sub_1A9630D50();
  OUTLINED_FUNCTION_37_5();
  v10();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v14);
  OUTLINED_FUNCTION_103();
  v11();
  OUTLINED_FUNCTION_34();
  return v12();
}

uint64_t sub_1A95C6A44(uint64_t a1, unsigned char *a2)
{
  uint64_t v3 = sub_1A9630C80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F78];
  switch(*a2)
  {
    case 1:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F80];
      break;
    case 2:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F58];
      break;
    case 3:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F68];
      break;
    case 4:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F70];
      break;
    case 5:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F88];
      break;
    case 6:
      uint64_t v7 = (unsigned int *)MEMORY[0x1E4FB5F60];
      break;
    case 7:
      sub_1A9632540();
      __break(1u);
      JUMPOUT(0x1A95C6C34);
    default:
      break;
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v7, v3);
  sub_1A9630C90();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A95C6C54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = (void *)a1[1];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  sub_1A9631510();
  v14._countAndFlagsBits = v6;
  v14._object = v7;
  PrecipitationType.init(rawValue:)(v14);
  char v15 = v20;
  if (v20 == 8)
  {
    uint64_t v16 = 1;
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v11;
    uint64_t v24 = v12;
    uint64_t v25 = v13;
    char v19 = v15;
    sub_1A95C6A44(a3, &v19);
    uint64_t v16 = 0;
  }
  uint64_t v17 = sub_1A9631040();
  return __swift_storeEnumTagSinglePayload(a4, v16, 1, v17);
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return v0;
}

uint64_t sub_1A95C6D60()
{
  unint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A95C6DAC(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_0_42();
  }
  OUTLINED_FUNCTION_474();
  if (v2 == 1) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1A95C6DEC(char *a1, char *a2)
{
  return sub_1A950C3FC(*a1, *a2);
}

uint64_t sub_1A95C6DF8()
{
  return sub_1A95C94C4();
}

uint64_t sub_1A95C6E00(uint64_t a1)
{
  return sub_1A94ACF3C(a1, *v1);
}

uint64_t sub_1A95C6E08()
{
  return sub_1A94AD7DC();
}

uint64_t sub_1A95C6E10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95C6D60();
  *a1 = result;
  return result;
}

uint64_t sub_1A95C6E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95C6DAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95C6E6C()
{
  return sub_1A95C6DAC(*v0);
}

unsigned char *storeEnumTagSinglePayload for WeatherStatisticsProduct(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C6F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherStatisticsProduct()
{
  return &type metadata for WeatherStatisticsProduct;
}

unint64_t sub_1A95C6F7C()
{
  unint64_t result = qword_1E97ED050;
  if (!qword_1E97ED050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED050);
  }
  return result;
}

uint64_t sub_1A95C6FC8()
{
  uint64_t v0 = sub_1A962EB00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A962EAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Settings.MemoryTesting();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB400], v4);
  if (qword_1EB6DEAF0 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6DEA78);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
  uint64_t result = sub_1A962EA90();
  qword_1EB6DA7D8 = result;
  return result;
}

uint64_t static Settings.memoryTesting.getter()
{
  return sub_1A942F508(&qword_1EB6DA7E0);
}

uint64_t sub_1A95C71D4()
{
  uint64_t v0 = sub_1A962EAF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1A962EB00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED070);
  v10[15] = 0;
  if (qword_1EB6DEAF0 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB6DEA78);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB400], v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED078);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED080);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A9633D00;
  v10[14] = 1;
  sub_1A962EB10();
  v10[13] = 2;
  sub_1A962EB10();
  v10[12] = 3;
  sub_1A962EB10();
  sub_1A95C7B10();
  uint64_t result = sub_1A962EB20();
  qword_1E97ED058 = result;
  return result;
}

uint64_t static Settings.MemoryTesting.kind.getter()
{
  return sub_1A942F508(qword_1E97EA678);
}

uint64_t Settings.MemoryTesting.Kind.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A9632580();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t Settings.MemoryTesting.Kind.rawValue.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A95C762C(unsigned __int8 *a1, char *a2)
{
  return sub_1A950C9AC(*a1, *a2);
}

uint64_t sub_1A95C7638()
{
  return sub_1A95C94D0(*v0);
}

uint64_t sub_1A95C7640()
{
  return sub_1A94AD2CC();
}

uint64_t sub_1A95C7648()
{
  return sub_1A94AD568();
}

uint64_t sub_1A95C7650@<X0>(char *a1@<X8>)
{
  return Settings.MemoryTesting.Kind.init(rawValue:)(a1);
}

unint64_t sub_1A95C765C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Settings.MemoryTesting.Kind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A95C7684(uint64_t a1)
{
  unint64_t v2 = sub_1A95C7AC4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1A95C76D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A95C7AC4();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1A95C7734(uint64_t a1)
{
  unint64_t v2 = sub_1A95C7AC4();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t Settings.MemoryTesting.__allocating_init(key:defaultValue:access:)()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_0_43();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_2_26();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  v3(v2);
  OUTLINED_FUNCTION_9_20();
  uint64_t v4 = OUTLINED_FUNCTION_5_1();
  v5(v4);
  return v1;
}

uint64_t Settings.MemoryTesting.init(key:defaultValue:access:)()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_0_43();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_2_26();
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  v3(v2);
  OUTLINED_FUNCTION_9_20();
  uint64_t v4 = OUTLINED_FUNCTION_5_1();
  v5(v4);
  return v0;
}

uint64_t Settings.MemoryTesting.__deallocating_deinit()
{
  uint64_t v0 = _s11TeaSettings0B0C13WeatherDaemonE0D0V20AttributionOverridesCfd_0();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_1A95C78E4()
{
  unint64_t result = qword_1E97ED060;
  if (!qword_1E97ED060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED060);
  }
  return result;
}

uint64_t type metadata accessor for Settings.MemoryTesting()
{
  uint64_t result = qword_1EB6DA7A0;
  if (!qword_1EB6DA7A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A95C7978()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A95C79B8()
{
  return type metadata accessor for Settings.MemoryTesting();
}

unsigned char *_s13MemoryTestingC4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C7A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.MemoryTesting.Kind()
{
  return &type metadata for Settings.MemoryTesting.Kind;
}

unint64_t sub_1A95C7AC4()
{
  unint64_t result = qword_1E97ED068;
  if (!qword_1E97ED068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED068);
  }
  return result;
}

unint64_t sub_1A95C7B10()
{
  unint64_t result = qword_1E97ED088;
  if (!qword_1E97ED088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED088);
  }
  return result;
}

ValueMetadata *type metadata accessor for MonthlyWeatherStatisticsResource()
{
  return &type metadata for MonthlyWeatherStatisticsResource;
}

_UNKNOWN **sub_1A95C7B6C()
{
  return &off_1EFFCA048;
}

unint64_t sub_1A95C7B7C()
{
  unint64_t result = qword_1E97ED0A0;
  if (!qword_1E97ED0A0)
  {
    type metadata accessor for MonthlyWeatherStatistics();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0A0);
  }
  return result;
}

uint64_t TideEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t TideEvent.date.setter(uint64_t a1)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*TideEvent.date.modify())(void)
{
  return nullsub_1;
}

uint64_t TideEvent.eventType.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TideEvent() + 20));
}

uint64_t type metadata accessor for TideEvent()
{
  uint64_t result = qword_1E97ED0D8;
  if (!qword_1E97ED0D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TideEvent.eventType.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for TideEvent();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*TideEvent.eventType.modify())(void)
{
  return nullsub_1;
}

double TideEvent.height.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TideEvent() + 24));
}

uint64_t TideEvent.height.setter(double a1)
{
  uint64_t result = type metadata accessor for TideEvent();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*TideEvent.height.modify())(void)
{
  return nullsub_1;
}

BOOL static TideEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1A962E7C0() & 1) != 0
    && (uint64_t v4 = type metadata accessor for TideEvent(),
        (sub_1A950A794(*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)), *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    return *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A95C7E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x707954746E657665 && a2 == 0xE900000000000065;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A95C7FE0(char a1)
{
  if (!a1) {
    return 1702125924;
  }
  if (a1 == 1) {
    return 0x707954746E657665;
  }
  return 0x746867696568;
}

uint64_t sub_1A95C8030()
{
  return sub_1A95C7FE0(*v0);
}

uint64_t sub_1A95C8038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95C7E9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95C8060(uint64_t a1)
{
  unint64_t v2 = sub_1A95C8288();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95C809C(uint64_t a1)
{
  unint64_t v2 = sub_1A95C8288();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TideEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED0A8);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95C8288();
  sub_1A9632970();
  sub_1A962E810();
  sub_1A947198C(&qword_1EB6DC8D0);
  sub_1A9632770();
  if (!v1)
  {
    type metadata accessor for TideEvent();
    sub_1A95C82D4();
    sub_1A9632770();
    sub_1A9632750();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1A95C8288()
{
  unint64_t result = qword_1E97ED0B0;
  if (!qword_1E97ED0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0B0);
  }
  return result;
}

unint64_t sub_1A95C82D4()
{
  unint64_t result = qword_1E97ED0B8;
  if (!qword_1E97ED0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0B8);
  }
  return result;
}

uint64_t TideEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v21[0] = a2;
  uint64_t v5 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v24 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED0C0);
  OUTLINED_FUNCTION_1();
  v21[1] = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = type metadata accessor for TideEvent();
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95C8288();
  sub_1A9632950();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v22;
  char v28 = 0;
  sub_1A947198C(&qword_1EB6DC8D8);
  sub_1A9632680();
  Swift::String v14 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  char v15 = v24;
  uint64_t v24 = (char *)v5;
  v14(v3, v15, v5);
  char v26 = 1;
  sub_1A95C861C();
  sub_1A9632680();
  *(unsigned char *)(v3 + *(int *)(v11 + 20)) = v27;
  char v25 = 2;
  sub_1A9632660();
  uint64_t v17 = v16;
  uint64_t v18 = OUTLINED_FUNCTION_3_43();
  v19(v18);
  *(void *)(v3 + *(int *)(v11 + 24)) = v17;
  sub_1A95C8668(v3, v21[0]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A95C86CC(v3);
}

unint64_t sub_1A95C861C()
{
  unint64_t result = qword_1E97ED0C8;
  if (!qword_1E97ED0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0C8);
  }
  return result;
}

uint64_t sub_1A95C8668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TideEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A95C86CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TideEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A95C8728@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TideEvent.init(from:)(a1, a2);
}

uint64_t sub_1A95C8740(void *a1)
{
  return TideEvent.encode(to:)(a1);
}

WeatherDaemon::TideEvent::EventType_optional __swiftcall TideEvent.EventType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = WeatherDaemon_TideEvent_EventType_high;
  }
  else {
    v2.value = WeatherDaemon_TideEvent_EventType_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t TideEvent.EventType.rawValue.getter(char a1)
{
  if (a1) {
    return 1751607656;
  }
  else {
    return 7827308;
  }
}

unint64_t sub_1A95C87DC()
{
  unint64_t result = qword_1E97ED0D0;
  if (!qword_1E97ED0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0D0);
  }
  return result;
}

uint64_t sub_1A95C8828()
{
  return sub_1A95C94E8();
}

uint64_t sub_1A95C8830()
{
  return sub_1A94ABD18();
}

uint64_t sub_1A95C8838()
{
  return sub_1A94AE0F8();
}

WeatherDaemon::TideEvent::EventType_optional sub_1A95C8840@<W0>(Swift::String *a1@<X0>, WeatherDaemon::TideEvent::EventType_optional *a2@<X8>)
{
  result.value = TideEvent.EventType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_1A95C8870@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TideEvent.EventType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95C889C()
{
  return sub_1A9632000();
}

uint64_t sub_1A95C88FC()
{
  return sub_1A9631FB0();
}

uint64_t sub_1A95C894C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A950A794(*a1, *a2);
}

void *initializeBufferWithCopyOfBuffer for TideEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A962E810();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t initializeWithCopy for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A962E810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A95C8C54);
}

uint64_t sub_1A95C8C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return v9 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for TideEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A95C8CF0);
}

void sub_1A95C8CF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1A962E810();
  OUTLINED_FUNCTION_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t sub_1A95C8D78()
{
  uint64_t result = sub_1A962E810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TideEvent.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C8EE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TideEvent.EventType()
{
  return &type metadata for TideEvent.EventType;
}

unsigned char *storeEnumTagSinglePayload for TideEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C8FECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TideEvent.CodingKeys()
{
  return &type metadata for TideEvent.CodingKeys;
}

unint64_t sub_1A95C9028()
{
  unint64_t result = qword_1E97ED0E8;
  if (!qword_1E97ED0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0E8);
  }
  return result;
}

unint64_t sub_1A95C9078()
{
  unint64_t result = qword_1E97ED0F0;
  if (!qword_1E97ED0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0F0);
  }
  return result;
}

unint64_t sub_1A95C90C8()
{
  unint64_t result = qword_1E97ED0F8;
  if (!qword_1E97ED0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED0F8);
  }
  return result;
}

unint64_t sub_1A95C9114()
{
  unint64_t result = qword_1E97ED100;
  if (!qword_1E97ED100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED100);
  }
  return result;
}

uint64_t sub_1A95C9160()
{
  return sub_1A94ADAF0();
}

uint64_t sub_1A95C916C()
{
  return sub_1A94ADA78();
}

uint64_t sub_1A95C9178()
{
  return sub_1A94AD958();
}

uint64_t sub_1A95C9184()
{
  return sub_1A95C925C();
}

uint64_t sub_1A95C9194(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AD060);
}

uint64_t sub_1A95C91AC()
{
  return sub_1A94AD6C8();
}

uint64_t sub_1A95C91B8(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AD3F0);
}

uint64_t sub_1A95C91D0()
{
  return sub_1A94ADC6C();
}

uint64_t sub_1A95C91DC(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ACB58);
}

uint64_t sub_1A95C91F4()
{
  return sub_1A9424C30();
}

uint64_t sub_1A95C9200()
{
  return sub_1A94AD9FC();
}

uint64_t sub_1A95C920C()
{
  return sub_1A95C925C();
}

uint64_t sub_1A95C9218(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AC708);
}

uint64_t sub_1A95C9230(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ACDFC);
}

uint64_t sub_1A95C9248()
{
  return sub_1A95C925C();
}

uint64_t sub_1A95C925C()
{
  return sub_1A9632930();
}

uint64_t sub_1A95C92A4()
{
  return sub_1A94ADF5C();
}

uint64_t sub_1A95C92B0()
{
  return sub_1A94AD8EC();
}

uint64_t sub_1A95C92BC(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AC844);
}

uint64_t sub_1A95C92D4()
{
  return sub_1A94ADDC4();
}

uint64_t sub_1A95C92E0()
{
  return sub_1A94ADB74();
}

uint64_t sub_1A95C92EC(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AC454);
}

uint64_t sub_1A95C9304()
{
  return sub_1A94AD50C();
}

uint64_t sub_1A95C9310()
{
  return sub_1A94ADCF8();
}

uint64_t sub_1A95C931C()
{
  return sub_1A94AD5E8();
}

uint64_t sub_1A95C9328(char a1)
{
  return sub_1A94AD5E4(0, a1 & 1);
}

uint64_t sub_1A95C9334(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AC198);
}

uint64_t sub_1A95C934C()
{
  return sub_1A94ADD10();
}

uint64_t sub_1A95C9358(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ACD64);
}

uint64_t sub_1A95C9370(char a1)
{
  return sub_1A94AD85C(0, a1 & 1);
}

uint64_t sub_1A95C937C()
{
  return sub_1A94AE158();
}

uint64_t sub_1A95C9388(uint64_t a1)
{
  return sub_1A95C9454(a1, (void (*)(uint64_t))WeatherDataRequest.rawValue.getter);
}

uint64_t sub_1A95C93A0()
{
  return sub_1A94ADE38();
}

uint64_t sub_1A95C93AC()
{
  return sub_1A94ADD40();
}

uint64_t sub_1A95C93B8(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AC0C0);
}

uint64_t sub_1A95C93D0()
{
  return sub_1A94ADF08();
}

uint64_t sub_1A95C93DC()
{
  return sub_1A94AD9E4();
}

uint64_t sub_1A95C93E8(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ABDE4);
}

uint64_t sub_1A95C9400(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ABFF8);
}

uint64_t sub_1A95C9418()
{
  return sub_1A94ADBE0();
}

uint64_t sub_1A95C9424()
{
  return sub_1A94AD580();
}

uint64_t sub_1A95C9430()
{
  return sub_1A94AD780();
}

uint64_t sub_1A95C943C(uint64_t a1)
{
  return sub_1A95C9454(a1, (void (*)(uint64_t))sub_1A95B0260);
}

uint64_t sub_1A95C9454(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_1A9632930();
}

uint64_t sub_1A95C94B8()
{
  return sub_1A94ADE9C();
}

uint64_t sub_1A95C94C4()
{
  return sub_1A94AD7DC();
}

uint64_t sub_1A95C94D0(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94AD2CC);
}

uint64_t sub_1A95C94E8()
{
  return sub_1A9632930();
}

uint64_t sub_1A95C9554()
{
  return sub_1A94AE084();
}

uint64_t sub_1A95C9560(uint64_t a1)
{
  return sub_1A95C9578(a1, (void (*)(unsigned char *, uint64_t))sub_1A94ABF24);
}

uint64_t sub_1A95C9578(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  OUTLINED_FUNCTION_3_44();
  a2(v5, a1);
  return sub_1A9632930();
}

WeatherDaemon::Placement __swiftcall Placement.init(articles:location:)(Swift::OpaquePointer articles, WeatherDaemon::PlacementLocation location)
{
  char v3 = *(unsigned char *)location;
  *(Swift::OpaquePointer *)uint64_t v2 = articles;
  *(unsigned char *)(v2 + 8) = v3;
  result.articles = articles;
  result.location = location;
  return result;
}

uint64_t Placement.articles.getter()
{
  return sub_1A9631510();
}

uint64_t Placement.articles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*Placement.articles.modify())(void)
{
  return nullsub_1;
}

void Placement.location.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *Placement.location.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*Placement.location.modify())(void)
{
  return nullsub_1;
}

uint64_t Placement.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95C97D4();
  sub_1A9632950();
  if (!v2)
  {
    sub_1A95C9820();
    OUTLINED_FUNCTION_2_48();
    uint64_t v6 = sub_1A96325C0();
    sub_1A95C986C();
    OUTLINED_FUNCTION_2_48();
    sub_1A9632680();
    uint64_t v7 = OUTLINED_FUNCTION_1_39();
    v8(v7);
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95C97D4()
{
  unint64_t result = qword_1EB6DA938;
  if (!qword_1EB6DA938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA938);
  }
  return result;
}

unint64_t sub_1A95C9820()
{
  unint64_t result = qword_1EB6DA908;
  if (!qword_1EB6DA908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA908);
  }
  return result;
}

unint64_t sub_1A95C986C()
{
  unint64_t result = qword_1EB6DA8A8;
  if (!qword_1EB6DA8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA8A8);
  }
  return result;
}

uint64_t sub_1A95C98B8()
{
  uint64_t v0 = sub_1A9632580();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A95C9910(char a1)
{
  if (a1) {
    return 0x6E656D6563616C70;
  }
  else {
    return 0x73656C6369747261;
  }
}

uint64_t sub_1A95C994C(char *a1, char *a2)
{
  return sub_1A950A81C(*a1, *a2);
}

uint64_t sub_1A95C9958()
{
  return sub_1A95C9554();
}

uint64_t sub_1A95C9960()
{
  return sub_1A94ABD74();
}

uint64_t sub_1A95C9968()
{
  return sub_1A94AE084();
}

uint64_t sub_1A95C9970@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95C98B8();
  *a1 = result;
  return result;
}

uint64_t sub_1A95C99A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A95C9910(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A95C99CC()
{
  return sub_1A95C9910(*v0);
}

uint64_t sub_1A95C99D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A95C990C();
  *a1 = result;
  return result;
}

uint64_t sub_1A95C99FC(uint64_t a1)
{
  unint64_t v2 = sub_1A95C97D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95C9A38(uint64_t a1)
{
  unint64_t v2 = sub_1A95C97D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Placement.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA9F8);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  int v13 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95C97D4();
  sub_1A9632970();
  uint64_t v17 = v10;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DA988);
  sub_1A95C9BF4();
  sub_1A9632770();
  if (!v2)
  {
    char v15 = v13;
    char v14 = 1;
    sub_1A95C9CB4();
    sub_1A9632770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_1A95C9BF4()
{
  unint64_t result = qword_1EB6DA990;
  if (!qword_1EB6DA990)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6DA988);
    sub_1A95C9C68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA990);
  }
  return result;
}

unint64_t sub_1A95C9C68()
{
  unint64_t result = qword_1EB6DA900;
  if (!qword_1EB6DA900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA900);
  }
  return result;
}

unint64_t sub_1A95C9CB4()
{
  unint64_t result = qword_1EB6DA898;
  if (!qword_1EB6DA898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA898);
  }
  return result;
}

uint64_t sub_1A95C9D00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Placement.init(from:)(a1, a2);
}

uint64_t sub_1A95C9D18(void *a1)
{
  return Placement.encode(to:)(a1);
}

void sub_1A95C9D30()
{
}

uint64_t sub_1A95C9D48()
{
  return Placement.write(to:)();
}

uint64_t initializeBufferWithCopyOfBuffer for Placement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_1A9631510();
  return a1;
}

uint64_t assignWithCopy for Placement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for Placement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Placement(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Placement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Placement()
{
  return &type metadata for Placement;
}

unsigned char *storeEnumTagSinglePayload for Placement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95C9F84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Placement.CodingKeys()
{
  return &type metadata for Placement.CodingKeys;
}

unint64_t sub_1A95C9FC0()
{
  unint64_t result = qword_1E97ED108;
  if (!qword_1E97ED108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED108);
  }
  return result;
}

unint64_t sub_1A95CA010()
{
  unint64_t result = qword_1EB6DA948;
  if (!qword_1EB6DA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA948);
  }
  return result;
}

unint64_t sub_1A95CA060()
{
  unint64_t result = qword_1EB6DA940;
  if (!qword_1EB6DA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DA940);
  }
  return result;
}

id WeatherDataProxyRequest.__allocating_init(requests:location:options:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_1_55());
  return WeatherDataProxyRequest.init(requests:location:options:)();
}

uint64_t static WeatherDataProxyRequest.supportsSecureCoding.getter()
{
  return byte_1E97ED110;
}

uint64_t static WeatherDataProxyRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E97ED110 = a1;
  return result;
}

uint64_t (*static WeatherDataProxyRequest.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t WeatherDataProxyRequest.requests.getter()
{
  return sub_1A9631510();
}

double WeatherDataProxyRequest.location.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_location);
}

uint64_t WeatherDataProxyRequest.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A95119A0(v1 + OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_options, a1);
}

id WeatherDataProxyRequest.init(requests:location:options:)()
{
  OUTLINED_FUNCTION_1_55();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_requests] = v2;
  unsigned int v6 = &v1[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_location];
  *(void *)unsigned int v6 = v4;
  *((void *)v6 + 1) = v3;
  sub_1A95119A0(v0, (uint64_t)&v1[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_options]);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1A959E148(v0);
  return v7;
}

Swift::Void __swiftcall WeatherDataProxyRequest.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  sub_1A962E310();
  swift_allocObject();
  sub_1A962E300();
  char v19 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_requests);
  sub_1A9631510();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED128);
  sub_1A95CABCC(&qword_1E97ED130, (void (*)(void))sub_1A95CA5C4);
  uint64_t v4 = sub_1A962E2F0();
  unint64_t v6 = v5;
  swift_release();
  swift_bridgeObjectRelease();
  id v7 = (void *)sub_1A962E660();
  uint64_t v8 = sub_1A9631D40();
  OUTLINED_FUNCTION_0_44(v8);

  sub_1A9466028(v4, v6);
  uint64_t v9 = v2 + OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_location;
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v2 + OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_location));
  uint64_t v11 = sub_1A9631D40();
  OUTLINED_FUNCTION_0_44(v11);

  id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v9 + 8));
  uint64_t v13 = sub_1A9631D40();
  OUTLINED_FUNCTION_0_44(v13);

  swift_allocObject();
  sub_1A962E300();
  type metadata accessor for WeatherDataRequestOptions();
  sub_1A959E7D8(&qword_1E97EC790);
  uint64_t v14 = sub_1A962E2F0();
  unint64_t v16 = v15;
  swift_release();
  uint64_t v17 = (void *)sub_1A962E660();
  uint64_t v18 = (void *)sub_1A9631D40();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];

  sub_1A9466028(v14, v16);
}

unint64_t sub_1A95CA5C4()
{
  unint64_t result = qword_1E97ED138;
  if (!qword_1E97ED138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED138);
  }
  return result;
}

id WeatherDataProxyRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WeatherDataProxyRequest.init(coder:)(a1);
}

id WeatherDataProxyRequest.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97EC798);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherDataRequestOptions();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9467B44(0, (unint64_t *)&qword_1E97ECAA0);
  id v10 = v1;
  uint64_t v11 = sub_1A96322D0();
  if (!v11)
  {

LABEL_11:
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v12 = (void *)v11;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v13 = sub_1A962E680();
  unint64_t v15 = v14;

  sub_1A962E2E0();
  swift_allocObject();
  sub_1A962E2D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97ED128);
  sub_1A95CABCC(&qword_1E97ED148, (void (*)(void))sub_1A95CAC3C);
  sub_1A962E2C0();
  unint64_t v42 = v15;
  uint64_t v43 = v13;
  uint64_t v44 = (objc_class *)ObjectType;
  swift_release();
  uint64_t v16 = OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_requests;
  *(void *)&v10[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_requests] = v48;
  sub_1A9467B44(0, (unint64_t *)&unk_1E97EC7A0);
  uint64_t v17 = sub_1A96322D0();
  if (!v17)
  {

    sub_1A9466028(v43, v42);
LABEL_10:

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v19 = sub_1A96322D0();
  if (!v19)
  {

    sub_1A9466028(v43, v42);
    goto LABEL_10;
  }
  uint64_t v20 = (void *)v19;
  objc_msgSend(v18, sel_doubleValue);
  uint64_t v22 = v21;
  objc_msgSend(v20, sel_doubleValue);
  uint64_t v23 = &v10[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_location];
  *(void *)uint64_t v23 = v22;
  *((void *)v23 + 1) = v24;
  uint64_t v25 = sub_1A96322D0();
  char v26 = v20;
  char v27 = v18;
  uint64_t v28 = v43;
  uint64_t v29 = v44;
  if (!v25)
  {

    sub_1A9466028(v28, v42);
    goto LABEL_10;
  }
  uint64_t v30 = (void *)v25;
  id v40 = v26;
  id v41 = v27;
  uint64_t v39 = v16;
  uint64_t v31 = sub_1A962E680();
  unint64_t v33 = v32;

  unint64_t v34 = v33;
  swift_allocObject();
  sub_1A962E2D0();
  sub_1A959E7D8((unint64_t *)&unk_1E97EC7B0);
  uint64_t v35 = (uint64_t)v46;
  sub_1A962E2C0();
  swift_release();
  __swift_storeEnumTagSinglePayload(v35, 0, 1, v7);
  uint64_t v37 = (uint64_t)v45;
  sub_1A959E87C(v35, (uint64_t)v45);
  sub_1A95119A0(v37, (uint64_t)&v10[OBJC_IVAR____TtC13WeatherDaemon23WeatherDataProxyRequest_options]);

  v47.receiver = v10;
  v47.super_class = v29;
  id v38 = objc_msgSendSuper2(&v47, sel_init);
  sub_1A9466028(v28, v42);

  sub_1A9466028(v31, v34);
  sub_1A959E148(v37);
  return v38;
}

uint64_t sub_1A95CABCC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97ED128);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A95CAC3C()
{
  unint64_t result = qword_1E97ED150;
  if (!qword_1E97ED150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED150);
  }
  return result;
}

id WeatherDataProxyRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WeatherDataProxyRequest.init()()
{
}

id WeatherDataProxyRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A95CADA8()
{
  return type metadata accessor for WeatherDataProxyRequest();
}

uint64_t type metadata accessor for WeatherDataProxyRequest()
{
  uint64_t result = qword_1E97ED160;
  if (!qword_1E97ED160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A95CADF8()
{
  uint64_t result = type metadata accessor for WeatherDataRequestOptions();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for WeatherDataProxyRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeatherDataProxyRequest);
}

uint64_t dispatch thunk of WeatherDataProxyRequest.__allocating_init(requests:location:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WeatherDataProxyRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Pollutant.name.getter()
{
  uint64_t v1 = *v0;
  sub_1A9631510();
  return v1;
}

uint64_t Pollutant.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Pollutant.name.modify())(void)
{
  return nullsub_1;
}

double Pollutant.amount.getter()
{
  return *(double *)(v0 + 16);
}

void Pollutant.amount.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*Pollutant.amount.modify())(void)
{
  return nullsub_1;
}

void Pollutant.unit.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *Pollutant.unit.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*Pollutant.unit.modify())(void)
{
  return nullsub_1;
}

uint64_t Pollutant.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC5C8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A95CB190();
  sub_1A9632950();
  if (!v2)
  {
    uint64_t v6 = sub_1A9632640();
    uint64_t v8 = v7;
    sub_1A9632660();
    uint64_t v10 = v9;
    sub_1A95CB1DC();
    sub_1A9632680();
    uint64_t v12 = OUTLINED_FUNCTION_1_52();
    v13(v12);
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 24) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A95CB190()
{
  unint64_t result = qword_1EB6DC530;
  if (!qword_1EB6DC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC530);
  }
  return result;
}

unint64_t sub_1A95CB1DC()
{
  unint64_t result = qword_1EB6DC488;
  if (!qword_1EB6DC488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC488);
  }
  return result;
}

uint64_t sub_1A95CB228(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A96327D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
    if (v6 || (sub_1A96327D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1953066613 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1A96327D0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1A95CB350(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0x746E756F6D61;
  }
  return 1953066613;
}

uint64_t sub_1A95CB394()
{
  return sub_1A95CB350(*v0);
}

uint64_t sub_1A95CB39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A95CB228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A95CB3C4(uint64_t a1)
{
  unint64_t v2 = sub_1A95CB190();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A95CB400(uint64_t a1)
{
  unint64_t v2 = sub_1A95CB190();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Pollutant.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC5D8);
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A95CB190();
  sub_1A9632970();
  char v20 = 0;
  sub_1A9632730();
  if (!v2)
  {
    char v13 = v16;
    char v19 = 1;
    sub_1A9632750();
    char v18 = v13;
    char v17 = 2;
    sub_1A95CB5D8();
    sub_1A9632770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v12);
}

unint64_t sub_1A95CB5D8()
{
  unint64_t result = qword_1EB6DC478;
  if (!qword_1EB6DC478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC478);
  }
  return result;
}

uint64_t sub_1A95CB624@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Pollutant.init(from:)(a1, a2);
}

uint64_t sub_1A95CB63C(void *a1)
{
  return Pollutant.encode(to:)(a1);
}

uint64_t sub_1A95CB654@<X0>(uint64_t a1@<X8>)
{
  return static Pollutant.read(from:)(a1);
}

uint64_t sub_1A95CB66C()
{
  return Pollutant.write(to:)();
}

uint64_t assignWithCopy for Pollutant(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1A9631510();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for Pollutant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Pollutant(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Pollutant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Pollutant.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A95CB87CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Pollutant.CodingKeys()
{
  return &type metadata for Pollutant.CodingKeys;
}

unint64_t sub_1A95CB8B8()
{
  unint64_t result = qword_1E97ED170;
  if (!qword_1E97ED170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97ED170);
  }
  return result;
}

unint64_t sub_1A95CB908()
{
  unint64_t result = qword_1EB6DC540;
  if (!qword_1EB6DC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC540);
  }
  return result;
}

unint64_t sub_1A95CB958()
{
  unint64_t result = qword_1EB6DC538;
  if (!qword_1EB6DC538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6DC538);
  }
  return result;
}

uint64_t sub_1A95CB9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11 = *(void *)a4;
  char v12 = *(unsigned char *)(a4 + 8);
  if (qword_1EB6DE388 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A96317F0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB6EB630);
  char v14 = sub_1A96317D0();
  os_log_type_t v15 = sub_1A9632230();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v30 = a3;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v11;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558275;
    v32[0] = v17;
    sub_1A9632350();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v18 = CLLocationCoordinate2D.id.getter();
    sub_1A945C1DC(v18, v19, v32);
    sub_1A9632350();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A9410000, v14, v15, "Fetching hourly weather statistics for location: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v11 = v31;
    MEMORY[0x1AD0F7300](v20, -1, -1);
    uint64_t v21 = v16;
    a3 = v30;
    MEMORY[0x1AD0F7300](v21, -1, -1);
  }

  uint64_t v22 = sub_1A95CBC04(a2);
  uint64_t v24 = v23;
  uint64_t v25 = sub_1A95CBC04(a3);
  v32[0] = a1;
  *(double *)&v32[1] = a5;
  *(double *)&v32[2] = a6;
  v32[3] = v22;
  v32[4] = v24;
  v32[5] = v25;
  v32[6] = v26;
  v32[7] = v11;
  char v33 = v12;
  sub_1A9631510();
  sub_1A94AF4E0();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1A95CBC04(uint64_t result)
{
  if (*(unsigned char *)(*(void *)(v1 + 16) + qword_1EB6EB5F8)) {
    return sub_1A96327B0();
  }
  uint64_t v2 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = v2 / 24;
    uint64_t v4 = v2 % 24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE280);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v5 + 16) = xmmword_1A96357F0;
    uint64_t v7 = MEMORY[0x1E4FBB5C8];
    *(void *)(v5 + 56) = v6;
    *(void *)(v5 + 64) = v7;
    *(void *)(v5 + 32) = v4;
    sub_1A9631D90();
    type metadata accessor for DailyStatisticsService();
    uint64_t v8 = sub_1A9546FC0(v3 + 1);
    sub_1A9631EA0();
    sub_1A9631EA0();
    swift_bridgeObjectRelease();
    sub_1A9631EA0();
    return v8;
  }
  return result;
}

uint64_t type metadata accessor for HourlyStatisticsService()
{
  return self;
}

uint64_t sub_1A95CBD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v15 = a1 + 32;
    sub_1A9631510();
    uint64_t v3 = 0;
    uint64_t v14 = a2;
    while (1)
    {
      uint64_t v4 = *(void *)(v15 + 24 * v3);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t result = sub_1A96319A0();
      if (!v17[1]) {
        break;
      }
      sub_1A9465524();
      uint64_t v6 = sub_1A9632370();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_1A9632190();
      uint64_t v16 = v7;
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8)
      {
        uint64_t v9 = (uint64_t *)(v6 + 40);
        do
        {
          uint64_t v10 = *(v9 - 1);
          uint64_t v11 = *v9;
          sub_1A9631510();
          sub_1A9618C68(v17, v10, v11);
          swift_bridgeObjectRelease();
          v9 += 2;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
        uint64_t v12 = v16;
        a2 = v14;
      }
      else
      {
        uint64_t v12 = v7;
        swift_bridgeObjectRelease();
      }
      char v13 = sub_1A95F15B4(v12, a2);
      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v4;
      }
      ++v3;
      swift_release();
      swift_release();
      swift_release();
      if (v3 == v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_1A95CBF74(char a1)
{
  sub_1A9618BC0();
  uint64_t v3 = *(void *)(*v1 + 16);
  sub_1A9618C0C(v3);
  uint64_t v4 = *v1;
  *(void *)(v4 + 16) = v3 + 1;
  *(unsigned char *)(v4 + v3 + 32) = a1;
  *uint64_t v1 = v4;
}

uint64_t sub_1A95CBFC8(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC948);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherModel();
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v39 = (uint64_t)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (uint64_t)v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DC8E8);
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v35 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v35 - v16;
  sub_1A961B0E0(a1, v44);
  uint64_t v45 = v44[0];
  int64_t v18 = v44[3];
  unint64_t v19 = v44[4];
  uint64_t v41 = v44[1];
  int64_t v42 = (unint64_t)(v44[2] + 64) >> 6;
  uint64_t result = sub_1A9631510();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  void v35[2] = v9;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_20;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v23 >= v42) {
      goto LABEL_30;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    int64_t v25 = v18 + 1;
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      if (v18 + 2 >= v42) {
        goto LABEL_30;
      }
      unint64_t v24 = *(void *)(v41 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v18 + 3;
        if (v18 + 3 >= v42) {
          goto LABEL_30;
        }
        unint64_t v24 = *(void *)(v41 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v18 + 4;
          if (v18 + 4 >= v42) {
            goto LABEL_30;
          }
          unint64_t v24 = *(void *)(v41 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v18 + 5;
            if (v18 + 5 >= v42) {
              goto LABEL_30;
            }
            unint64_t v24 = *(void *)(v41 + 8 * v25);
            if (!v24)
            {
              int64_t v26 = v18 + 6;
              while (v26 < v42)
              {
                unint64_t v24 = *(void *)(v41 + 8 * v26++);
                if (v24)
                {
                  int64_t v25 = v26 - 1;
                  goto LABEL_19;
                }
              }
LABEL_30:
              swift_release();
              return v40;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    int64_t v18 = v25;
LABEL_20:
    sub_1A944A348(*(void *)(v45 + 56) + *(void *)(v43 + 72) * v22, (uint64_t)v17, &qword_1EB6DC8E8);
    sub_1A944A754((uint64_t)v17, (uint64_t)v14, &qword_1EB6DC8E8);
    sub_1A944A348((uint64_t)v14, (uint64_t)v11, &qword_1EB6DC8E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A944C480((uint64_t)v11, &qword_1EB6DC8E8);
      uint64_t v27 = 1;
    }
    else
    {
      sub_1A9449580((uint64_t)v11, (uint64_t)v4);
      uint64_t v27 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v4, v27, 1, v5);
    sub_1A944C480((uint64_t)v14, &qword_1EB6DC8E8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      uint64_t result = sub_1A944C480((uint64_t)v4, &qword_1EB6DC948);
    }
    else
    {
      id v38 = type metadata accessor for WeatherModel;
      uint64_t v28 = v36;
      sub_1A9449580((uint64_t)v4, v36);
      sub_1A9449580(v28, v39);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1A948203C(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v30 = *(void *)(v40 + 16);
      unint64_t v29 = *(void *)(v40 + 24);
      uint64_t v31 = (uint64_t (*)())(v30 + 1);
      if (v30 >= v29 >> 1)
      {
        id v38 = (uint64_t (*)())(v30 + 1);
        v35[0] = v30;
        uint64_t v34 = sub_1A948203C(v29 > 1, v30 + 1, 1, v40);
        uint64_t v31 = v38;
        unint64_t v30 = v35[0];
        uint64_t v40 = v34;
      }
      uint64_t v32 = v39;
      uint64_t v33 = v40;
      *(void *)(v40 + 16) = v31;
      uint64_t result = sub_1A9449580(v32, v33+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v30);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A95CC4C0()
{
  sub_1A962E930();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_5_24();
  sub_1A962E8E0();
  uint64_t v1 = sub_1A962E860();
  OUTLINED_FUNCTION_103();
  v4(v2, v3);
  swift_bridgeObjectRelease();
  sub_1A9631EA0();
  id v5 = objc_msgSend(self, sel_processInfo);
  id v6 = objc_msgSend(v5, sel_operatingSystemVersionString);

  sub_1A9631D60();
  sub_1A9631EA0();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1A95CC5F0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_43_4(v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14_17(v10, v50);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_16(v13, v51);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42_4(v15, v16, v17, v18, v19, v20, v21, v22, v52);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v24 = OUTLINED_FUNCTION_2_0(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_21_9();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_631();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_71_2();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v30 = OUTLINED_FUNCTION_2_0(v29);
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_22_10();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_32_6();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_13_20(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_24_8();
  swift_retain();
  sub_1A962E800();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v35 = *(void (**)(void))(v34 + 104);
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_41_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v36 = OUTLINED_FUNCTION_10_20();
  OUTLINED_FUNCTION_7_31(v36);
  OUTLINED_FUNCTION_10_20();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v37);
  OUTLINED_FUNCTION_5_0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_151_0();
  OUTLINED_FUNCTION_40_4();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_40(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_135_0();
  swift_release();
  sub_1A9631460();
  OUTLINED_FUNCTION_51_4();
  type metadata accessor for DailySummary();
  sub_1A961B500(&qword_1E97ED2A8, (void (*)(uint64_t))type metadata accessor for DailySummary);
  sub_1A961B500(&qword_1E97ED2B0, (void (*)(uint64_t))type metadata accessor for DailySummary);
  uint64_t v39 = OUTLINED_FUNCTION_38_5();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v41 = OUTLINED_FUNCTION_106_0();
    v42(v41);
    sub_1A961B3A4(v33, (void (*)(void))type metadata accessor for DailySummary);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_56_1(v39, v40);
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v43 = OUTLINED_FUNCTION_23_9();
    v44(v43);
    OUTLINED_FUNCTION_28_7();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97ED2B8, (void (*)(uint64_t))type metadata accessor for DailySummary);
      OUTLINED_FUNCTION_54_2();
      OUTLINED_FUNCTION_84_1();
      OUTLINED_FUNCTION_79_2();
      swift_release();
      uint64_t v47 = OUTLINED_FUNCTION_4_35();
      v48(v47);
      uint64_t v49 = v53;
    }
    else
    {
      swift_release();
      uint64_t v45 = OUTLINED_FUNCTION_4_35();
      v46(v45);
      uint64_t v49 = v33;
    }
    sub_1A961B3A4(v49, (void (*)(void))type metadata accessor for DailySummary);
    OUTLINED_FUNCTION_30_7();
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_4_0();
}

void sub_1A95CCAD8()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_43_4(v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14_17(v10, v50);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_16(v13, v51);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42_4(v15, v16, v17, v18, v19, v20, v21, v22, v52);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v24 = OUTLINED_FUNCTION_2_0(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_21_9();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_631();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_71_2();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v30 = OUTLINED_FUNCTION_2_0(v29);
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_22_10();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_32_6();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_13_20(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_24_8();
  swift_retain();
  sub_1A962E800();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v35 = *(void (**)(void))(v34 + 104);
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_41_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v36 = OUTLINED_FUNCTION_10_20();
  OUTLINED_FUNCTION_7_31(v36);
  OUTLINED_FUNCTION_10_20();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v37);
  OUTLINED_FUNCTION_5_0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_151_0();
  OUTLINED_FUNCTION_40_4();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_40(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_135_0();
  swift_release();
  sub_1A9631460();
  OUTLINED_FUNCTION_51_4();
  type metadata accessor for HourlyWeatherStatistics();
  sub_1A961B500(&qword_1E97ED290, (void (*)(uint64_t))type metadata accessor for HourlyWeatherStatistics);
  sub_1A961B500(&qword_1E97ED298, (void (*)(uint64_t))type metadata accessor for HourlyWeatherStatistics);
  uint64_t v39 = OUTLINED_FUNCTION_38_5();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v41 = OUTLINED_FUNCTION_106_0();
    v42(v41);
    sub_1A961B3A4(v33, (void (*)(void))type metadata accessor for HourlyWeatherStatistics);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_56_1(v39, v40);
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v43 = OUTLINED_FUNCTION_23_9();
    v44(v43);
    OUTLINED_FUNCTION_28_7();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97ED2A0, (void (*)(uint64_t))type metadata accessor for HourlyWeatherStatistics);
      OUTLINED_FUNCTION_54_2();
      OUTLINED_FUNCTION_84_1();
      OUTLINED_FUNCTION_79_2();
      swift_release();
      uint64_t v47 = OUTLINED_FUNCTION_4_35();
      v48(v47);
      uint64_t v49 = v53;
    }
    else
    {
      swift_release();
      uint64_t v45 = OUTLINED_FUNCTION_4_35();
      v46(v45);
      uint64_t v49 = v33;
    }
    sub_1A961B3A4(v49, (void (*)(void))type metadata accessor for HourlyWeatherStatistics);
    OUTLINED_FUNCTION_30_7();
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_4_0();
}

void sub_1A95CCFC0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_43_4(v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14_17(v10, v50);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_16(v13, v51);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42_4(v15, v16, v17, v18, v19, v20, v21, v22, v52);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v24 = OUTLINED_FUNCTION_2_0(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_21_9();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_631();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_71_2();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v30 = OUTLINED_FUNCTION_2_0(v29);
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_22_10();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_32_6();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_13_20(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_24_8();
  swift_retain();
  sub_1A962E800();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v35 = *(void (**)(void))(v34 + 104);
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_41_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v36 = OUTLINED_FUNCTION_10_20();
  OUTLINED_FUNCTION_7_31(v36);
  OUTLINED_FUNCTION_10_20();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v37);
  OUTLINED_FUNCTION_5_0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_151_0();
  OUTLINED_FUNCTION_40_4();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_40(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_135_0();
  swift_release();
  sub_1A9631460();
  OUTLINED_FUNCTION_51_4();
  type metadata accessor for MonthlyWeatherStatistics();
  sub_1A961B500(&qword_1E97ED280, (void (*)(uint64_t))type metadata accessor for MonthlyWeatherStatistics);
  sub_1A961B500(&qword_1E97ED288, (void (*)(uint64_t))type metadata accessor for MonthlyWeatherStatistics);
  uint64_t v39 = OUTLINED_FUNCTION_38_5();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v41 = OUTLINED_FUNCTION_106_0();
    v42(v41);
    sub_1A961B3A4(v33, (void (*)(void))type metadata accessor for MonthlyWeatherStatistics);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_56_1(v39, v40);
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v43 = OUTLINED_FUNCTION_23_9();
    v44(v43);
    OUTLINED_FUNCTION_28_7();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97ECDE0, (void (*)(uint64_t))type metadata accessor for MonthlyWeatherStatistics);
      OUTLINED_FUNCTION_54_2();
      OUTLINED_FUNCTION_84_1();
      OUTLINED_FUNCTION_79_2();
      swift_release();
      uint64_t v47 = OUTLINED_FUNCTION_4_35();
      v48(v47);
      uint64_t v49 = v53;
    }
    else
    {
      swift_release();
      uint64_t v45 = OUTLINED_FUNCTION_4_35();
      v46(v45);
      uint64_t v49 = v33;
    }
    sub_1A961B3A4(v49, (void (*)(void))type metadata accessor for MonthlyWeatherStatistics);
    OUTLINED_FUNCTION_30_7();
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_4_0();
}

void sub_1A95CD4A8()
{
  OUTLINED_FUNCTION_3();
  uint64_t v63 = v5;
  uint64_t v59 = v6;
  uint64_t v60 = v7;
  uint64_t v57 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v10 = OUTLINED_FUNCTION_2_0(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_14_17(v11, v56);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v13 = OUTLINED_FUNCTION_2_0(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_16(v14, v56);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_42_4(v16, v17, v18, v19, v20, v21, v22, v23, v56);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v25 = OUTLINED_FUNCTION_2_0(v24);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v56 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v32 = OUTLINED_FUNCTION_2_0(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_99_0();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_71_2();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v35 = OUTLINED_FUNCTION_2_0(v34);
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_32_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_5_0(v3);
  OUTLINED_FUNCTION_5_0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  uint64_t v37 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v39 = *(void (**)(void))(v38 + 104);
  uint64_t v40 = v38 + 104;
  OUTLINED_FUNCTION_140_0();
  v39();
  OUTLINED_FUNCTION_89_1(v1, 0);
  sub_1A962E800();
  OUTLINED_FUNCTION_140_0();
  v39();
  OUTLINED_FUNCTION_89_1(v4, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v61 = OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_89_1(v1, 1);
  OUTLINED_FUNCTION_120_0(v4);
  uint64_t v41 = OUTLINED_FUNCTION_98_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  OUTLINED_FUNCTION_5_0((uint64_t)v30);
  OUTLINED_FUNCTION_5_0((uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  swift_retain();
  OUTLINED_FUNCTION_86_2();
  uint64_t v42 = sub_1A9631990();
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_40(v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  swift_retain();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_45_4();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6DA5A0);
  sub_1A961B490(&qword_1EB6DA998);
  sub_1A961B490(&qword_1EB6DA9A0);
  uint64_t v44 = sub_1A9631450();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t))(v46 + 8))(v63);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v62 = v37;
    uint64_t v64 = v44;
    uint64_t v65 = v45;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v49 = v58;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v58, v63, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A95A5E80();
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v64 = v50;
      uint64_t v65 = v52;
      sub_1A96319B0();
    }
    swift_release();
    OUTLINED_FUNCTION_103();
    v53();
    swift_bridgeObjectRelease();
    uint64_t v54 = v57;
    uint64_t v55 = v61;
    *uint64_t v57 = v62;
    v54[1] = v55;
    v54[2] = v41;
    v54[3] = v42;
    v54[4] = v40;
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_4_0();
}

void sub_1A95CDA58()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_43_4(v3, v4, v5, v6, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v9 = OUTLINED_FUNCTION_2_0(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14_17(v10, v50);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v12 = OUTLINED_FUNCTION_2_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_16(v13, v51);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42_4(v15, v16, v17, v18, v19, v20, v21, v22, v52);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v24 = OUTLINED_FUNCTION_2_0(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_21_9();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_631();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v27 = OUTLINED_FUNCTION_2_0(v26);
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_71_2();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v30 = OUTLINED_FUNCTION_2_0(v29);
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_22_10();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_32_6();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_13_20(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_24_8();
  swift_retain();
  sub_1A962E800();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v35 = *(void (**)(void))(v34 + 104);
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_16_14();
  v35();
  OUTLINED_FUNCTION_41_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  uint64_t v36 = OUTLINED_FUNCTION_10_20();
  OUTLINED_FUNCTION_7_31(v36);
  OUTLINED_FUNCTION_10_20();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v37);
  OUTLINED_FUNCTION_5_0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_151_0();
  OUTLINED_FUNCTION_40_4();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_40(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_135_0();
  swift_release();
  sub_1A9631460();
  OUTLINED_FUNCTION_51_4();
  type metadata accessor for DailyWeatherStatistics();
  sub_1A961B500(&qword_1E97ED2C0, (void (*)(uint64_t))type metadata accessor for DailyWeatherStatistics);
  sub_1A961B500(&qword_1E97ED2C8, (void (*)(uint64_t))type metadata accessor for DailyWeatherStatistics);
  uint64_t v39 = OUTLINED_FUNCTION_38_5();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v41 = OUTLINED_FUNCTION_106_0();
    v42(v41);
    sub_1A961B3A4(v33, (void (*)(void))type metadata accessor for DailyWeatherStatistics);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_56_1(v39, v40);
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v43 = OUTLINED_FUNCTION_23_9();
    v44(v43);
    OUTLINED_FUNCTION_28_7();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97ED2D0, (void (*)(uint64_t))type metadata accessor for DailyWeatherStatistics);
      OUTLINED_FUNCTION_54_2();
      OUTLINED_FUNCTION_84_1();
      OUTLINED_FUNCTION_79_2();
      swift_release();
      uint64_t v47 = OUTLINED_FUNCTION_4_35();
      v48(v47);
      uint64_t v49 = v53;
    }
    else
    {
      swift_release();
      uint64_t v45 = OUTLINED_FUNCTION_4_35();
      v46(v45);
      uint64_t v49 = v33;
    }
    sub_1A961B3A4(v49, (void (*)(void))type metadata accessor for DailyWeatherStatistics);
    OUTLINED_FUNCTION_30_7();
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1A95CDF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for AirQuality();
  sub_1A961B500(&qword_1EB6DC460, (void (*)(uint64_t))type metadata accessor for AirQuality);
  sub_1A961B500(&qword_1EB6DC468, (void (*)(uint64_t))type metadata accessor for AirQuality);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for AirQuality);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DC470, (void (*)(uint64_t))type metadata accessor for AirQuality);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for AirQuality);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95CE798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for CurrentWeather();
  sub_1A961B500(&qword_1EB6DD3D0, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  sub_1A961B500(&qword_1EB6DD3D8, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for CurrentWeather);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DC918, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for CurrentWeather);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95CEFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for DailyForecast();
  sub_1A961B500(&qword_1EB6DC350, (void (*)(uint64_t))type metadata accessor for DailyForecast);
  sub_1A961B500(&qword_1EB6DC650, (void (*)(uint64_t))type metadata accessor for DailyForecast);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for DailyForecast);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DC100, (void (*)(uint64_t))type metadata accessor for DailyForecast);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for DailyForecast);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95CF848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for HourlyForecast();
  sub_1A961B500(&qword_1EB6DC658, (void (*)(uint64_t))type metadata accessor for HourlyForecast);
  sub_1A961B500(&qword_1EB6DC660, (void (*)(uint64_t))type metadata accessor for HourlyForecast);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for HourlyForecast);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DC120, (void (*)(uint64_t))type metadata accessor for HourlyForecast);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for HourlyForecast);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D00A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for NextHourForecast();
  sub_1A961B500(&qword_1EB6DB998, (void (*)(uint64_t))type metadata accessor for NextHourForecast);
  sub_1A961B500(&qword_1EB6DB9A0, (void (*)(uint64_t))type metadata accessor for NextHourForecast);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for NextHourForecast);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DB9A8, (void (*)(uint64_t))type metadata accessor for NextHourForecast);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for NextHourForecast);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D08F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for PeriodicForecasts();
  sub_1A961B500(&qword_1E97ED230, (void (*)(uint64_t))type metadata accessor for PeriodicForecasts);
  sub_1A961B500(&qword_1E97ED238, (void (*)(uint64_t))type metadata accessor for PeriodicForecasts);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for PeriodicForecasts);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97EAC50, (void (*)(uint64_t))type metadata accessor for PeriodicForecasts);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for PeriodicForecasts);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D1150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for LocationInfo();
  sub_1A961B500(&qword_1EB6DA268, (void (*)(uint64_t))type metadata accessor for LocationInfo);
  sub_1A961B500(&qword_1EB6DA5F0, (void (*)(uint64_t))type metadata accessor for LocationInfo);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for LocationInfo);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DA6E8, (void (*)(uint64_t))type metadata accessor for LocationInfo);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for LocationInfo);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D19A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v68 = a3;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v56 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v57 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v58 = (uint64_t)&v56 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v56 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v56 - v30;
  double v66 = a5;
  double v67 = a6;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v33 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v34 = *MEMORY[0x1E4FAA6A8];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104);
  v36(v25, v34, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v35);
  sub_1A962E800();
  v36(v22, v34, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v62 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v58, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v64 = v60;
  uint64_t v65 = v61;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for CLLocationCoordinate2D(0);
  sub_1A961B500(&qword_1E97ED220, type metadata accessor for CLLocationCoordinate2D);
  sub_1A961B500(&qword_1E97ED228, type metadata accessor for CLLocationCoordinate2D);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v33;
    uint64_t v64 = v43;
    uint64_t v65 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v57;
    uint64_t v50 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v57, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1E97ED270, type metadata accessor for CLLocationCoordinate2D);
      uint64_t v51 = sub_1A962E2F0();
      uint64_t v53 = v52;
      swift_release();
      uint64_t v64 = v51;
      uint64_t v65 = v53;
      sub_1A96319B0();
      swift_release();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
    }
    else
    {
      swift_release();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v50, v47);
    }
    uint64_t v54 = v56;
    uint64_t v55 = v62;
    *uint64_t v56 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D21AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for MarineForecast();
  sub_1A961B500(&qword_1E97ED240, (void (*)(uint64_t))type metadata accessor for MarineForecast);
  sub_1A961B500(&qword_1E97ED248, (void (*)(uint64_t))type metadata accessor for MarineForecast);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for MarineForecast);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DA270, (void (*)(uint64_t))type metadata accessor for MarineForecast);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for MarineForecast);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D2A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for News();
  sub_1A961B500(&qword_1EB6DA8C8, (void (*)(uint64_t))type metadata accessor for News);
  sub_1A961B500(&qword_1EB6DA8D0, (void (*)(uint64_t))type metadata accessor for News);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for News);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DAF68, (void (*)(uint64_t))type metadata accessor for News);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for News);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D325C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for TideEvents();
  sub_1A961B500(&qword_1E97ED250, (void (*)(uint64_t))type metadata accessor for TideEvents);
  sub_1A961B500(&qword_1E97ED258, (void (*)(uint64_t))type metadata accessor for TideEvents);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for TideEvents);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DA5E8, (void (*)(uint64_t))type metadata accessor for TideEvents);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for TideEvents);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D3AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for WeatherAlerts();
  sub_1A961B500(&qword_1EB6DABC8, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
  sub_1A961B500(&qword_1EB6DAEA8, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for WeatherAlerts);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DAF60, (void (*)(uint64_t))type metadata accessor for WeatherAlerts);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for WeatherAlerts);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D430C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for WeatherChange();
  sub_1A961B500(&qword_1EB6DB608, (void (*)(uint64_t))type metadata accessor for WeatherChange);
  sub_1A961B500(&qword_1EB6DB610, (void (*)(uint64_t))type metadata accessor for WeatherChange);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for WeatherChange);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DB300, (void (*)(uint64_t))type metadata accessor for WeatherChange);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for WeatherChange);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D4B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v61 = a1;
  uint64_t v57 = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (uint64_t)&v56 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = *MEMORY[0x1E4FAA6A8];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v22, v31, v32);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v32);
  sub_1A962E800();
  v33(v19, v31, v32);
  uint64_t v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v64 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
  uint64_t v35 = v32;
  uint64_t v36 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v35);
  swift_allocObject();
  uint64_t v37 = sub_1A9631990();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v39 = sub_1A9631990();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v40);
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_1A9631990();
  uint64_t v66 = v61;
  uint64_t v67 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  type metadata accessor for WeatherComparisons();
  sub_1A961B500(&qword_1EB6DA888, (void (*)(uint64_t))type metadata accessor for WeatherComparisons);
  sub_1A961B500(&qword_1EB6DA890, (void (*)(uint64_t))type metadata accessor for WeatherComparisons);
  uint64_t v42 = v63;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v68, v45);
    sub_1A961B3A4(v36, (void (*)(void))type metadata accessor for WeatherComparisons);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v63 = v34;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v68, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A961B500(&qword_1EB6DAF58, (void (*)(uint64_t))type metadata accessor for WeatherComparisons);
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v66 = v50;
      uint64_t v67 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v65;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v68, v47);
      uint64_t v53 = v36;
    }
    uint64_t result = sub_1A961B3A4(v53, (void (*)(void))type metadata accessor for WeatherComparisons);
    uint64_t v54 = v57;
    uint64_t v55 = v64;
    *uint64_t v57 = v63;
    v54[1] = v55;
    v54[2] = v37;
    v54[3] = v39;
    v54[4] = v41;
  }
  return result;
}

uint64_t sub_1A95D53BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v56 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v59 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v58 = (uint64_t)&v55 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v55 - v28;
  uint64_t v67 = a3;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  swift_allocObject();
  uint64_t v31 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v32 = *MEMORY[0x1E4FAA6A8];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104);
  v34(v23, v32, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v33);
  sub_1A962E800();
  v34(v20, v32, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  swift_allocObject();
  uint64_t v62 = sub_1A9631990();
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v33);
  swift_allocObject();
  uint64_t v35 = v31;
  uint64_t v36 = sub_1A9631990();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  swift_allocObject();
  swift_retain();
  uint64_t v38 = sub_1A9631990();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  __swift_storeEnumTagSinglePayload(v58, 1, 1, v39);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  swift_allocObject();
  swift_retain();
  uint64_t v40 = sub_1A9631990();
  uint64_t v65 = v60;
  uint64_t v66 = v61;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  sub_1A961AB3C();
  sub_1A961AB88();
  uint64_t v41 = v63;
  uint64_t v42 = sub_1A9631450();
  if (v41)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v44 = sub_1A962E810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v64, v44);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v65 = v42;
    uint64_t v66 = v43;
    sub_1A96319B0();
    swift_release();
    uint64_t v46 = sub_1A962E810();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = (uint64_t)v57;
    uint64_t v49 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v57, v64, v46);
    __swift_storeEnumTagSinglePayload(v48, 0, 1, v46);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      uint64_t v63 = v31;
      sub_1A962E310();
      swift_allocObject();
      sub_1A962E300();
      sub_1A9492F60();
      uint64_t v50 = sub_1A962E2F0();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v65 = v50;
      uint64_t v66 = v52;
      sub_1A96319B0();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v64, v46);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v35 = v63;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v46);
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v53 = v56;
    uint64_t v54 = v62;
    *uint64_t v56 = v35;
    v53[1] = v54;
    v53[2] = v36;
    v53[3] = v38;
    v53[4] = v40;
  }
  return result;
}

void sub_1A95D5B50()
{
  OUTLINED_FUNCTION_3();
  uint64_t v64 = v2;
  uint64_t v67 = v5;
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  uint64_t v57 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v10 = OUTLINED_FUNCTION_2_0(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_38_0(v11, (uint64_t)v57);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD968);
  uint64_t v13 = OUTLINED_FUNCTION_2_0(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_92_1(v14, (uint64_t)v57);
  MEMORY[0x1F4188790](v15);
  uint64_t v59 = (uint64_t)&v57 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA28);
  uint64_t v18 = OUTLINED_FUNCTION_2_0(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_21_9();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v57 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC0);
  uint64_t v23 = OUTLINED_FUNCTION_2_0(v22);
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v57 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBD0);
  uint64_t v28 = OUTLINED_FUNCTION_2_0(v27);
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_22_10();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_631();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBC8);
  OUTLINED_FUNCTION_89_1(v3, 1);
  OUTLINED_FUNCTION_89_1(v1, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE238);
  OUTLINED_FUNCTION_10_0();
  uint64_t v30 = sub_1A9631990();
  swift_retain();
  sub_1A962E800();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDBB8);
  OUTLINED_FUNCTION_10();
  uint64_t v33 = *(void (**)(void))(v32 + 104);
  OUTLINED_FUNCTION_141_0();
  v33();
  OUTLINED_FUNCTION_89_1((uint64_t)v26, 0);
  sub_1A962E800();
  OUTLINED_FUNCTION_141_0();
  v33();
  OUTLINED_FUNCTION_89_1(v0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE230);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_86_2();
  uint64_t v63 = sub_1A9631990();
  uint64_t v34 = OUTLINED_FUNCTION_49_4();
  __swift_storeEnumTagSinglePayload(v34, v35, v36, v31);
  OUTLINED_FUNCTION_120_0(v0);
  OUTLINED_FUNCTION_86_2();
  uint64_t v37 = v30;
  uint64_t v38 = sub_1A9631990();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA20);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v39);
  OUTLINED_FUNCTION_5_0(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DCA30);
  OUTLINED_FUNCTION_10_0();
  swift_retain();
  uint64_t v40 = sub_1A9631990();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD960);
  OUTLINED_FUNCTION_5_0(v59);
  OUTLINED_FUNCTION_5_0(v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DD970);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_122_0();
  uint64_t v41 = sub_1A9631990();
  uint64_t v65 = v61;
  uint64_t v66 = v62;
  swift_retain();
  sub_1A96319B0();
  swift_release();
  sub_1A9631460();
  sub_1A961AFFC();
  sub_1A961B048();
  uint64_t v42 = v64;
  uint64_t v43 = sub_1A9631450();
  if (v42)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1A962E810();
    OUTLINED_FUNCTION_10();
    uint64_t v45 = OUTLINED_FUNCTION_106_0();
    v46(v45);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v65 = v43;
    uint64_t v66 = v44;
    sub_1A96319B0();
    swift_release();
    uint64_t v47 = sub_1A962E810();
    OUTLINED_FUNCTION_0();
    uint64_t v49 = v58;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v58, v67, v47);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v47);
    sub_1A96319B0();
    swift_release();
    sub_1A9631390();
    if (sub_1A9631380())
    {
      uint64_t v64 = v30;
      sub_1A962E310();
      OUTLINED_FUNCTION_10_0();
      sub_1A962E300();
      sub_1A961B094();
      uint64_t v51 = sub_1A962E2F0();
      uint64_t v53 = v52;
      swift_release();
      uint64_t v65 = v51;
      uint64_t v66 = v53;
      sub_1A96319B0();
      swift_release();
      OUTLINED_FUNCTION_103();
      v54();
      uint64_t v37 = v64;
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_103();
      v50();
    }
    uint64_t v55 = v57;
    uint64_t v56 = v63;
    *uint64_t v57 = v37;
    v55[1] = v56;
    uint64_t v55[2] = v38;
    v55[3] = v40;
    v55[4] = v41;
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1A95D6124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  uint64_t v6 = OUTLINED_FUNCTION_2_0(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_6_1();
  uint64_t v7 = sub_1A962E810();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_15();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_32_6();
  sub_1A96319A0();
  if (OUTLINED_FUNCTION_117_0() == 1)
  {
    uint64_t result = sub_1A944C480(v1, &qword_1EB6DE3A0);
    char v13 = 0;
    *(void *)a1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v3, v1, v7);
    sub_1A962E7F0();
    sub_1A962E6F0();
    double v15 = v14;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v16(v2, v7);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v16)(v3, v7);
    if (v15 <= 3600.0)
    {
      if (v15 <= 60.0)
      {
        char v13 = 0;
        *(double *)a1 = v15;
      }
      else
      {
        *(double *)a1 = v15 / 60.0;
        char v13 = 1;
      }
    }
    else
    {
      *(double *)a1 = v15 / 3600.0;
      char v13 = 2;
    }
  }
  *(unsigned char *)(a1 + 8) = v13;
  return result;
}

uint64_t sub_1A95D62D8()
{
  return 0;
}

void sub_1A95D63C0()
{
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_26();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_280();
  MEMORY[0x1F4188790](v7);
  if ((OUTLINED_FUNCTION_90_1() & 1) != 0 && (v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_145_0();
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A96317F0();
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB6EB630);
    OUTLINED_FUNCTION_147_0(v9, v10, &qword_1EB6DE3A0);
    uint64_t v11 = (void *)sub_1A96317D0();
    os_log_type_t v12 = sub_1A9632230();
    if (OUTLINED_FUNCTION_38_2(v12))
    {
      OUTLINED_FUNCTION_18_1();
      OUTLINED_FUNCTION_81_1();
      OUTLINED_FUNCTION_83_2(4.8754e-34);
      OUTLINED_FUNCTION_74_2();
      OUTLINED_FUNCTION_112_0();
      uint64_t v13 = OUTLINED_FUNCTION_108_0();
      OUTLINED_FUNCTION_37_6(v13);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_80_2();
      OUTLINED_FUNCTION_113_0();
      uint64_t v14 = OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_132_0(v14, v15);
      OUTLINED_FUNCTION_47_4();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_114_0();
      OUTLINED_FUNCTION_64_2();
      sub_1A961B500((unint64_t *)&qword_1EB6DC720, MEMORY[0x1E4F27928]);
      OUTLINED_FUNCTION_82_2();
      uint64_t v16 = OUTLINED_FUNCTION_33_6();
      v17(v16);
      uint64_t v18 = OUTLINED_FUNCTION_109();
      OUTLINED_FUNCTION_63_2(v18);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_2(&dword_1A9410000, v19, v20, "Data has expired, returning nil; model=%{public}s, expiration=%{public}s, now=%{public}s");
      OUTLINED_FUNCTION_78_2();
      OUTLINED_FUNCTION_3_1();
      OUTLINED_FUNCTION_3_1();

      uint64_t v21 = v1;
      uint64_t v22 = (uint64_t *)v4;
    }
    else
    {

      OUTLINED_FUNCTION_134_0();
      uint64_t v21 = OUTLINED_FUNCTION_38_1();
    }
    sub_1A944C480(v21, v22);
    type metadata accessor for DailySummary();
    uint64_t v38 = OUTLINED_FUNCTION_49_4();
LABEL_19:
    __swift_storeEnumTagSinglePayload(v38, v39, v40, v41);
    OUTLINED_FUNCTION_7_1();
    return;
  }
  sub_1A96319A0();
  OUTLINED_FUNCTION_103_0();
  if (!(!v24 & v23))
  {
    sub_1A9631440();
    OUTLINED_FUNCTION_51_4();
    type metadata accessor for DailySummary();
    sub_1A961B500(&qword_1E97ED2A8, (void (*)(uint64_t))type metadata accessor for DailySummary);
    sub_1A961B500(&qword_1E97ED2B0, (void (*)(uint64_t))type metadata accessor for DailySummary);
    OUTLINED_FUNCTION_17_14();
    uint64_t v25 = OUTLINED_FUNCTION_53_2();
    if (type metadata accessor for DailySummary)
    {
      sub_1A9490CE8(v25, v26);
      if (qword_1EB6DE388 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1A96317F0();
      OUTLINED_FUNCTION_293(v27, (uint64_t)qword_1EB6EB630);
      uint64_t v28 = type metadata accessor for DailySummary;
      uint64_t v29 = (void *)sub_1A96317D0();
      os_log_type_t v30 = sub_1A9632220();
      if (OUTLINED_FUNCTION_88(v30))
      {
        OUTLINED_FUNCTION_43();
        uint64_t v31 = OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_138_0(v31);
        OUTLINED_FUNCTION_157_0(4.8752e-34);
        OUTLINED_FUNCTION_74_2();
        sub_1A9631510();
        uint64_t v32 = OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_53_3(v32);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_65_1();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DDB00);
        uint64_t v33 = OUTLINED_FUNCTION_110_0();
        uint64_t v35 = OUTLINED_FUNCTION_155_0(v33, v34);
        OUTLINED_FUNCTION_73_2(v35);
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_60_2(&dword_1A9410000, v36, v37, "Unable to parse data model from cache; model=%{public}s, error=%{public}s");
        OUTLINED_FUNCTION_77_2();
        OUTLINED_FUNCTION_3_1();
        OUTLINED_FUNCTION_3_1();
      }
      else
      {
      }
      OUTLINED_FUNCTION_139();
    }
    else
    {
      OUTLINED_FUNCTION_130_0(v25, v26);
    }
    OUTLINED_FUNCTION_142_0();
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1A95D682C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A962E810();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6DE3A0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v39 - v15;
  if ((sub_1A95DED0C() & 1) != 0 && (a1 & 1) == 0)
  {
    sub_1A96319A0();
    if (qword_1EB6DE388 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A96317F0();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB6EB630);
    sub_1A944A348((uint64_t)v16, (uint64_t)v13, &qword_1EB6DE3A0);
    uint64_t v18 = sub_1A96317D0();
    os_log_type_t v19 = sub_1A9632230();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v40 = v5;
      uint64_t v22 = v21;
      uint64_t v43 = swift_slowAlloc();
      v48[0] = v43;
      *(_DWORD *)uint64_t v22 = 136446722;
      os_log_t v42 = v18;
      uint64_t v44 = a2;
      swift_beginAccess();
      int v41 = v20;
      uint64_t v23 = *(void *)aAirquality_8;
      unint64_t v24 = *(void *)&aAirquality_8[8];
      sub_1A9631510();
      uint64_t v45 = sub_1A945C1DC(v23, v24, v48);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_1A944A348((uint64_t)v13, (uint64_t)v10, &qword_1EB6DE3A0);
      uint64_t v25 = sub_1A9631DC0();
      uint64_t v45 = sub_1A945C1DC(v25, v26, v48);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      sub_1A944C480((uint64_t)v13, &qword_1EB6DE3A0);
      *(_WORD *)(v22 + 22) = 2082;
      a2 = v44;
      sub_1A962E7F0();
      sub_1A961B500((unint64_t *)&qword_1EB6DC720, MEMORY[0x1E4F27928]);
      uint64_t v27 = sub_1A96327B0();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v4);
      uint64_t v45 = sub_1A945C1DC(v27, v29, v48);
      sub_1A9632350();
      swift_bridgeObjectRelease();
      os_log_t v30 = v42;
      _os_log_impl(&dword_1A9410000, v42, (os_log_type_t)v41, "Data has expired, returning nil; model=%{public}s, expiration=%{public}s, now=%{public}s",
        (uint8_t *)v22,
        0x20u);
      uint64_t v31 = v43;
      swift_arrayDestroy();
      MEMORY[0x1AD0F7300](v31, -1, -1);
      MEMORY[0x1AD0F7300](v22, -1, -1);
    }
    else
    {

      sub_1A944C480((uint64_t)v13, &qword_1EB6DE3A0);
    }
    sub_1A944C480((uint64_t)v16, &qword_1EB6DE3A0);
    uint64_t v38 = type metadata accessor for AirQuality();
    uint64_t v36 = a2;
    uint64_t v37 = 1;
    return __swift_storeEnumTagSinglePayload(v36, v37, 1, v38);
  }
  uint64_t result = sub_1A96319A0();
  unint64_t v33 = v47;
  if (v47 >> 60 != 15)
  {
    uint64_t v34 = v46;
    sub_1A9631440();
    uint64_t v35 = type metadata accessor for AirQuality();
    sub_1A961B500(&qword_1EB6DC460, (void (*)(uint64_t))type metadata accessor for AirQuality);
    sub_1A961B500(&qword_1EB6DC468, (void (*)(uint64_t))type metadata accessor for AirQuality);
    sub_1A9631430();
    sub_1A9490CE8(v34, v33);
    uint64_t v36 = a2;
    uint64_t v37 = 0;
    uint64_t v38 = v35;
    return __swift_storeEnumTagSinglePayload(v36, v37, 1, v38);
  }
  __break(1u);
  return result;
}